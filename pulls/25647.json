{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25647",
    "id": 1001750688,
    "node_id": "PR_kwDOABII5847tYCg",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/25647",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/25647.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/25647.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25647",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25647/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25647/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25647/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/4fef5344288e454460b80db0316294e1ec1ad8ad",
    "number": 25647,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "wallet: return change from SelectionResult",
    "user": {
      "login": "S3RK",
      "id": 1466284,
      "node_id": "MDQ6VXNlcjE0NjYyODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/S3RK",
      "html_url": "https://github.com/S3RK",
      "followers_url": "https://api.github.com/users/S3RK/followers",
      "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
      "organizations_url": "https://api.github.com/users/S3RK/orgs",
      "repos_url": "https://api.github.com/users/S3RK/repos",
      "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/S3RK/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Benefits:\r\n1. more accurate waste calculation for knapsack. Waste calculation is now consistent with tx building code. Before we always assumed change for knapsack even when the solution is changeless4. \r\n2. simpler tx building code. Only create change output when it's needed\r\n3. makes it easier to correctly account for fees for CPFP inputs (should be done in a follow up) \r\n\r\nIn the first three commits we fix the code to accurately track selection target in `SelectionResult::m_target`\r\nThen we introduce new variable `min_change` that represents the minimum viable change amount\r\nThen we introduce `SelectionResult::GetChange()` which incapsulates dropping change for fee logic and uses correct values of `SelectionResult::m_target`\r\nThen we use `SelectionResult::GetChange()` in both tx building and waste calculation code\r\n\r\nThis PR is a refactoring and shouldn't change the behaviour.\r\nThere is only one known small change (arguably a bug fix). Before we dropped change output if it's smaller than `cost_of_change` after paying change fees. This is incorrect as `cost_of_change` already includes `change_fee`. ",
    "labels": [
      {
        "id": 149424,
        "node_id": "MDU6TGFiZWwxNDk0MjQ=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
        "name": "Wallet",
        "color": "08a781",
        "default": false
      }
    ],
    "created_at": "2022-07-20T07:54:57Z",
    "updated_at": "2023-08-22T10:21:17Z",
    "closed_at": "2022-08-22T16:43:27Z",
    "mergeable_state": "unknown",
    "merged_at": "2022-08-22T16:43:27Z",
    "merge_commit_sha": "2bd9aa5a44b88c866c4d98f8a7bf7154049cba31",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "S3RK:coin_selection_get_change",
      "ref": "coin_selection_get_change",
      "sha": "4fef5344288e454460b80db0316294e1ec1ad8ad",
      "user": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 268426115,
        "node_id": "MDEwOlJlcG9zaXRvcnkyNjg0MjYxMTU=",
        "name": "bitcoin",
        "full_name": "S3RK/bitcoin",
        "owner": {
          "login": "S3RK",
          "id": 1466284,
          "node_id": "MDQ6VXNlcjE0NjYyODQ=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/S3RK",
          "html_url": "https://github.com/S3RK",
          "followers_url": "https://api.github.com/users/S3RK/followers",
          "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
          "organizations_url": "https://api.github.com/users/S3RK/orgs",
          "repos_url": "https://api.github.com/users/S3RK/repos",
          "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/S3RK/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/S3RK/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/S3RK/bitcoin",
        "archive_url": "https://api.github.com/repos/S3RK/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/S3RK/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/S3RK/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/S3RK/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/S3RK/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/S3RK/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/S3RK/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/S3RK/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/S3RK/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/S3RK/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/S3RK/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/S3RK/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/S3RK/bitcoin/events",
        "forks_url": "https://api.github.com/repos/S3RK/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/S3RK/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/S3RK/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/S3RK/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/S3RK/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/S3RK/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/S3RK/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/S3RK/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/S3RK/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/S3RK/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/S3RK/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/S3RK/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/S3RK/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/S3RK/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/S3RK/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/S3RK/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:S3RK/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/S3RK/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/S3RK/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/S3RK/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/S3RK/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/S3RK/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/S3RK/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/S3RK/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/S3RK/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/S3RK/bitcoin/hooks",
        "svn_url": "https://github.com/S3RK/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 213012,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-02-15T08:37:12Z",
        "created_at": "2020-06-01T04:37:33Z",
        "updated_at": "2022-11-28T07:47:20Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "dc9d6626835ec2864dfa747c12071dabdc95b919",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35573,
        "stargazers_count": 71013,
        "watchers_count": 71013,
        "size": 237907,
        "default_branch": "master",
        "open_issues_count": 671,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-22T10:26:20Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-08-22T10:29:14Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25647"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 153,
    "deletions": 90,
    "changed_files": 5,
    "commits": 8,
    "review_comments": 43,
    "comments": 7
  },
  "events": [
    {
      "event": "labeled",
      "id": 7026893401,
      "node_id": "LE_lADOABII585OHkVczwAAAAGi1eJZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7026893401",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-20T07:56:19Z",
      "label": {
        "name": "Wallet",
        "color": "08a781"
      }
    },
    {
      "event": "review_requested",
      "id": 7027340099,
      "node_id": "RRE_lADOABII585OHkVczwAAAAGi3LND",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7027340099",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-20T08:54:46Z",
      "requested_reviewer": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "commented",
      "id": 1190125519,
      "node_id": "IC_kwDOABII585G79_P",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1190125519",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-20T10:51:16Z",
      "updated_at": "2022-08-20T10:16:21Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#25685](https://github.com/bitcoin/bitcoin/pull/25685) (wallet: Faster transaction creation by removing pre-set-inputs fetching responsibility from Coin Selection by furszy)\n* [#25273](https://github.com/bitcoin/bitcoin/pull/25273) (wallet: Pass through transaction locktime and preset input sequences and scripts to CreateTransaction by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25647#issuecomment-1190125519",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25647"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-20T13:08:49Z",
      "updated_at": "2022-07-20T13:08:49Z",
      "source": {
        "issue": {
          "id": 1260256447,
          "node_id": "PR_kwDOABII5845Fj6p",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25273",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25273/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25273/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25273/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25273",
          "number": 25273,
          "state": "open",
          "state_reason": null,
          "title": "wallet: Pass through transaction locktime and preset input sequences and scripts to CreateTransaction",
          "body": "Currently `FundTransaction` handles transaction locktime and preset input data by extracting the selected inputs and change output from `CreateTransaction`'s results. This means that `CreateTransaction` is actually unaware of any user desired locktime or sequence numbers. This can have an effect on whether and how anti-fee-sniping works.\r\n\r\nThis PR makes `CreateTransaction` aware of the locktime and preset input data by providing them to `CCoinControl`. `CreateTransasction` will then set the sequences, scriptSigs, scriptWItnesses, and locktime as appropriate if they are specified. This allows `FundTransaction` to actually use `CreateTransaction`'s result directly instead of having to extract the parts of it that it wants.\r\n\r\nAdditionally `FundTransaction` will return a `CreateTransactionResult` as `CreateTransaction` does instead of having several output parameters. Lastly, instead of using `-1` as a magic number for the change output position, the change position is changed to be an optional with no value set indicating no desired change output position (when provided as an input parameter) or no change output present (in the result).",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25273",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25273",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25273.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25273.patch"
          },
          "created_at": "2022-06-03T18:58:15Z",
          "updated_at": "2023-08-19T17:52:15Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-20T13:32:24Z",
      "updated_at": "2022-07-20T13:32:24Z",
      "source": {
        "issue": {
          "id": 1243856335,
          "node_id": "PR_kwDOABII5844Oka6",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25183",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25183/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25183/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25183/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25183",
          "number": 25183,
          "state": "closed",
          "state_reason": null,
          "title": "rpc: Filter inputs by type during CoinSelection ",
          "body": "This PR adds a filter to the CoinControl to select only specific utxos by type. It allows the `fundrawtransaction` and `walletcreatefundedpsbt` rpc calls to filter inputs by type.\r\n\r\nCloses #25181.\r\n\r\n",
          "user": {
            "login": "aureleoules",
            "id": 22493292,
            "node_id": "MDQ6VXNlcjIyNDkzMjky",
            "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aureleoules",
            "html_url": "https://github.com/aureleoules",
            "followers_url": "https://api.github.com/users/aureleoules/followers",
            "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
            "organizations_url": "https://api.github.com/users/aureleoules/orgs",
            "repos_url": "https://api.github.com/users/aureleoules/repos",
            "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/aureleoules/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 16,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25183",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25183",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25183.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25183.patch"
          },
          "closed_at": "2022-12-08T12:22:12Z",
          "created_at": "2022-05-21T03:44:14Z",
          "updated_at": "2022-12-08T12:22:12Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-20T21:23:27Z",
      "updated_at": "2022-07-20T21:23:27Z",
      "source": {
        "issue": {
          "id": 1171006691,
          "node_id": "PR_kwDOABII5840iDo1",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24584",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24584/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24584/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24584/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/24584",
          "number": 24584,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: avoid mixing different `OutputTypes` during coin selection",
          "body": "# Concept\r\n\r\nFollowing https://github.com/bitcoin/bitcoin/pull/23789, Bitcoin Core wallet will now generate a change address that matches the payment address type. This improves privacy by not revealing which of the outputs is the change at the time of the transaction in scenarios where the input address types differ from the payment address type. However, information about the change can be leaked in a later transaction. This proposal attempts to address that concern.\r\n\r\n## Leaking information in a later transaction\r\n\r\nConsider the following scenario:\r\n\r\n![mix input types(1)](https://user-images.githubusercontent.com/7444140/158597086-788339b0-c698-4b60-bd45-9ede4cd3a483.png)\r\n\r\n1. Alice has a wallet with bech32 type UTXOs and pays Bob, who gives her a P2SH address\r\n2. Alice's wallet generates a P2SH change output, preserving her privacy in `txid: a`\r\n3. Alice then pays Carol, who gives her a bech32 address\r\n4. Alice's wallet combines the P2SH UTXO with a bech32 UTXO and `txid: b` has two bech32 outputs\r\n\r\nFrom a chain analysis perspective, it is reasonable to infer that the P2SH input in `txid: b` was the change from `txid: a`. To avoid leaking information in this scenario, Alice's wallet should avoid picking the P2SH output and instead fund the transaction with only bech32 Outputs. If the payment to Carol can be funded with just the P2SH output, it should be preferred over the bech32 outputs as this will convert the P2SH UTXO to bech32 UTXOs via the payment and change outputs of the new transaction.\r\n\r\n**TLDR;** Avoid mixing output types, spend non-default `OutputTypes` when it is economical to do so.\r\n\r\n# Approach\r\n\r\n`AvailableCoins` now populates a struct, which makes it easier to access coins by `OutputType`. Coin selection tries to find a funding solution by each output type and chooses the most economical by waste metric. If a solution can't be found without mixing, coin selection runs over the entire wallet, allowing mixing, which is the same as the current behavior.\r\n\r\nI've also added a functional test (`test/functional/wallet_avoid_mixing_output_types.py`) and unit test (`src/wallet/test/availablecoins_tests.cpp`.",
          "user": {
            "login": "josibake",
            "id": 7444140,
            "node_id": "MDQ6VXNlcjc0NDQxNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/josibake",
            "html_url": "https://github.com/josibake",
            "followers_url": "https://api.github.com/users/josibake/followers",
            "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
            "organizations_url": "https://api.github.com/users/josibake/orgs",
            "repos_url": "https://api.github.com/users/josibake/repos",
            "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/josibake/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "comments": 42,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24584",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/24584",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/24584.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/24584.patch"
          },
          "closed_at": "2022-07-28T22:17:13Z",
          "created_at": "2022-03-16T13:13:49Z",
          "updated_at": "2023-08-15T10:20:21Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7035191741,
      "node_id": "HRFPE_lADOABII585OHkVczwAAAAGjVIG9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7035191741",
      "actor": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-21T05:50:01Z"
    },
    {
      "event": "commented",
      "id": 1191145752,
      "node_id": "IC_kwDOABII585G_3EY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1191145752",
      "actor": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-21T07:32:49Z",
      "updated_at": "2022-07-21T07:32:49Z",
      "author_association": "CONTRIBUTOR",
      "body": "Simulation results here https://github.com/S3RK/coin-selection-simulation/tree/25647-sim/results/25647",
      "user": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25647#issuecomment-1191145752",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25647"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-21T18:24:49Z",
      "updated_at": "2022-07-21T18:24:49Z",
      "source": {
        "issue": {
          "id": 1313204802,
          "node_id": "PR_kwDOABII58472hm-",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25665",
          "number": 25665,
          "state": "open",
          "state_reason": null,
          "title": "refactor: Add util::Result failure values, multiple error and warning messages",
          "body": "Add `util::Result` support for returning more error information and make use of it in [LoadChainstate method](https://github.com/bitcoin/bitcoin/pull/25665/commits/4fc41119f56b36e56bb6b9c05cac8fe628ff48be) as an initial application. Followup PR [#25722](https://github.com/bitcoin/bitcoin/pull/25722) uses it more broadly to return errors and warnings from wallet loading functions as well.\r\n\r\nThis change adds two major features to the result class:\r\n\r\n- For better error handling, adds the ability to return a value on failure, not just a value on success. This is a key missing feature that makes the result class not useful for functions like `LoadChainstate()` which produce different errors that need to be handled differently [^1].\r\n\r\n[^1]: Ability to return error values was actually present in the original implementation of [#25218](https://github.com/bitcoin/bitcoin/pull/25218), but unfortunately removed in later iterations.\r\n\r\n- For better error reporting, adds the ability to return warning messages and multiple errors, not just a single error string. This provides a way for functions to report errors and warnings in a standard way, and simplifies interfaces:\r\n\r\n    ```diff\r\n    -virtual std::unique_ptr<Wallet> loadWallet(const std::string& name, bilingual_str& error, std::vector<bilingual_str>& warnings) = 0;\r\n    +virtual util::Result<std::unique_ptr<Wallet>> loadWallet(const std::string& name) = 0;\r\n    ```\r\n\r\n    ```diff\r\n    -std::unique_ptr<WalletDatabase> MakeDatabase(const fs::path& path, const DatabaseOptions& options, DatabaseStatus& status, bilingual_str& error);\r\n    +util::Result<std::unique_ptr<WalletDatabase>, DatabaseError> MakeDatabase(const fs::path& path, const DatabaseOptions& options);\r\n   ```\r\n\r\nThis change also makes some more minor improvements:\r\n\r\n- Smaller type size. `util::Result<int>` is 16 bytes, and `util::Result<void>` is 8 bytes. Previously both were 72 bytes.\r\n\r\n- Broader type compatibility. Supports noncopyable and nonmovable success and error types.\r\n\r\n### Alternatives & design notes\r\n\r\nThe main goal for the `util::Result` class is to provide a standard way for functions to report error and warnings strings. The interface tries to make it easy to provide detailed error feedback to end users, without cluttering code or making it harder to return other result information. There have been multiple iterations of the design using different internal representations and providing different capabilities:\r\n\r\n|   | Representation (approximate)                   | Notes |\r\n|---|------------------------------------------------|-------|\r\n| _(1)_ | `tuple<T,optional<bilingual_str>>`        | Original #25218 implementation in da98fd2efc1a6b9c6e876cf3e227a8c2e9a10827. Good capabilities, but larger type size. Supports error standardized error reporting and customized error handling with failure values. |\r\n| _(2)_ | `variant<T,bilingual_str>`                | Final #25218 implementation in 7a45c33d1f8a758850cf8e7bd6ad508939ba5c0d. No support for returning failure values so not useful in many cases.\r\n| _(3)_ | `variant<monostate,T,F>`                 | Pending #25601 implementation that allows choosing whether to use standardized error reporting or return custom failure values, but doesn't support having both at the same time, like approaches _(1)_, _(4)_, _(5)_, _(6)_ do. |\r\n | _(4)_ | `tuple<variant<T,F>,bilingual_str>`      | Original #25608 implementation in c29d3008de9314dd463ed08e8bff39fe55324498. Basically the same as _(1)_ except it uses separate success and failure types instead of the same type. Using separate success and failure types makes the result class a little less flexible but can help avoid some ambiguity and inconsistent result states. |\r\n| _(5)_ | `tuple<T,optional<bilingual_str>>`        | Final #25608 implementation in dd91f294206ac87b213d23bb76656a0a5f0f4781. Essentially the same as original implementation _(1)_ except has some usability improvements. |\r\n| _(6)_ | `tuple<T,unique_ptr<tuple<F,bilingual_str>>` | Pending #25665 implementation (this PR). Supports returning failure values, uses separate success and failure types to avoid ambiguity, uses `unique_ptr` to reduce result type size, and avoids heap allocation in the happy path. |\r\n\r\n### Prior discussions & history\r\n\r\n- _furszy_ introduced a `BResult` class providing a standard error reporting mechanism in [#25218](https://github.com/bitcoin/bitcoin/pull/25218). It was renamed to `util::Result` in [#25721](https://github.com/bitcoin/bitcoin/pull/25721) but kept the same representation and capabilities.\r\n\r\n- _MarcoFalke_ suggested using `BResult` for the `LoadChainstate` function in [#25308 (comment)](https://github.com/bitcoin/bitcoin/pull/25308#issuecomment-1181674645). Inability to use `BResult` there due to lack of support for failure values led to initial work on [#25608](https://github.com/bitcoin/bitcoin/pull/25608).\r\n\r\n- _w0xlt_ wrote a `StructuredResult` class in [#25308](https://github.com/bitcoin/bitcoin/pull/25601) adding the ability to return failure values but sacrificing standard error reporting, which led to more work on [#25608](https://github.com/bitcoin/bitcoin/pull/25608).\r\n\r\n- _martinus_ suggested a space optimization in [#25608 (comment)](https://github.com/bitcoin/bitcoin/pull/25608#discussion_r921049409) that also made it easier to support distinct failure & success types, leading to [#25665](https://github.com/bitcoin/bitcoin/pull/25665) as a replacement for [#25608](https://github.com/bitcoin/bitcoin/pull/25608).",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 21,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25665",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25665.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25665.patch"
          },
          "created_at": "2022-07-21T12:46:09Z",
          "updated_at": "2023-08-22T03:11:44Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-27T20:55:49Z",
      "updated_at": "2022-07-27T20:55:49Z",
      "source": {
        "issue": {
          "id": 1320033247,
          "node_id": "PR_kwDOABII5848NBqe",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25721",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25721/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25721/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25721/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25721",
          "number": 25721,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: Replace BResult with util::Result",
          "body": "Rename `BResult` class to `util::Result` and update the class interface to be more compatible with `std::optional` and with a full-featured result class implemented in https://github.com/bitcoin/bitcoin/pull/25665. Motivation for this change is to update existing `BResult` usages now so they don't have to change later when more features are added in https://github.com/bitcoin/bitcoin/pull/25665.\r\n\r\nThis change makes the following improvements originally implemented in https://github.com/bitcoin/bitcoin/pull/25665:\r\n\r\n- More explicit API. Drops potentially misleading `BResult` constructor that treats any bilingual string argument as an error. Adds `util::Error` constructor so it is never ambiguous when a result is being assigned an error or non-error value.\r\n\r\n- Better type compatibility. Supports `util::Result<bilingual_str>` return values to hold translated messages which are not errors.\r\n\r\n- More standard and consistent API. `util::Result` supports most of the same operators and methods as `std::optional`. `BResult` had a less familiar interface with `HasRes`/`GetObj`/`ReleaseObj` methods. The Result/Res/Obj naming was also not internally consistent.\r\n\r\n- Better code organization. Puts `src/util/` code in the `util::` namespace so naming reflects code organization and it is obvious where the class is coming from. Drops \"B\" from name because it is undocumented what it stands for (bilingual?)\r\n\r\n- Has unit tests.\r\n",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/54",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/54",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/54/labels",
            "id": 7150037,
            "node_id": "MI_kwDOABII584AbRnV",
            "number": 54,
            "state": "closed",
            "title": "24.0",
            "description": "",
            "creator": {
              "login": "laanwj",
              "id": 126646,
              "node_id": "MDQ6VXNlcjEyNjY0Ng==",
              "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/laanwj",
              "html_url": "https://github.com/laanwj",
              "followers_url": "https://api.github.com/users/laanwj/followers",
              "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
              "organizations_url": "https://api.github.com/users/laanwj/orgs",
              "repos_url": "https://api.github.com/users/laanwj/repos",
              "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/laanwj/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 159,
            "created_at": "2021-09-14T08:27:02Z",
            "updated_at": "2022-11-29T15:44:44Z",
            "closed_at": "2022-11-29T15:44:44Z"
          },
          "locked": true,
          "comments": 7,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25721",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25721",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25721.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25721.patch"
          },
          "closed_at": "2022-08-05T13:36:19Z",
          "created_at": "2022-07-27T19:26:41Z",
          "updated_at": "2023-08-09T10:19:06Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-28T15:56:25Z",
      "updated_at": "2022-07-28T15:56:25Z",
      "source": {
        "issue": {
          "id": 1320863837,
          "node_id": "PR_kwDOABII5848PxGI",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25729",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25729/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25729/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25729/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25729",
          "number": 25729,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: Check max transaction weight in CoinSelection",
          "body": "This PR is an attempt to fix #5782.\r\n\r\nI have added 4 test scenarios, 3 of them provided here https://github.com/bitcoin/bitcoin/issues/5782#issuecomment-73819058 (slightly modified to use a segwit wallet).\r\n\r\nHere are my benchmarks : \r\n## PR\r\n|               ns/op |                op/s |    err% |          ins/op |          cyc/op |    IPC |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|        1,466,341.00 |              681.97 |    0.6% |   11,176,762.00 |    3,358,752.00 |  3.328 |   1,897,839.00 |    0.3% |      0.02 | `CoinSelection`\r\n\r\n## Master\r\n\r\n|               ns/op |                op/s |    err% |          ins/op |          cyc/op |    IPC |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|        1,526,029.00 |              655.30 |    0.5% |   11,142,188.00 |    3,499,200.00 |  3.184 |   1,994,156.00 |    0.2% |      0.02 | `CoinSelection`",
          "user": {
            "login": "aureleoules",
            "id": 22493292,
            "node_id": "MDQ6VXNlcjIyNDkzMjky",
            "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aureleoules",
            "html_url": "https://github.com/aureleoules",
            "followers_url": "https://api.github.com/users/aureleoules/followers",
            "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
            "organizations_url": "https://api.github.com/users/aureleoules/orgs",
            "repos_url": "https://api.github.com/users/aureleoules/repos",
            "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/aureleoules/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 28,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25729",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25729",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25729.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25729.patch"
          },
          "closed_at": "2022-12-06T17:09:51Z",
          "created_at": "2022-07-28T12:33:06Z",
          "updated_at": "2023-01-12T11:51:43Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1054616217,
      "node_id": "PRR_kwDOABII584-3CqZ",
      "url": null,
      "actor": null,
      "commit_id": "45ee9d3a737cc23babb9200c4d75d7dae4dc6700",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25647#pullrequestreview-1054616217",
      "submitted_at": "2022-07-28T20:23:32Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25647"
    },
    {
      "event": "labeled",
      "id": 7085525925,
      "node_id": "LE_lADOABII585OHkVczwAAAAGmVIul",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7085525925",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-28T23:00:37Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "referenced",
      "id": 7091196792,
      "node_id": "REFE_lADOABII585OHkVczwAAAAGmqxN4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7091196792",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "ab80f3a8a199f2bcd22bc8fa7c62b566ec4be9f1",
      "commit_url": "https://api.github.com/repos/murchandamus/bitcoin/commits/ab80f3a8a199f2bcd22bc8fa7c62b566ec4be9f1",
      "created_at": "2022-07-29T17:46:32Z"
    },
    {
      "event": "referenced",
      "id": 7091206413,
      "node_id": "REFE_lADOABII585OHkVczwAAAAGmqzkN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7091206413",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "5738e926e610c3b858e6a3d1fbcfdb1cefac227a",
      "commit_url": "https://api.github.com/repos/murchandamus/bitcoin/commits/5738e926e610c3b858e6a3d1fbcfdb1cefac227a",
      "created_at": "2022-07-29T17:48:33Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-29T19:58:54Z",
      "updated_at": "2022-07-29T19:58:54Z",
      "source": {
        "issue": {
          "id": 1322628326,
          "node_id": "PR_kwDOABII5848VpLa",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25742",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25742/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25742/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25742/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25742",
          "number": 25742,
          "state": "closed",
          "state_reason": null,
          "title": "Use change amount as tiebreaker for SelectionResults",
          "body": "This amends the sorting operator for SelectionResults to prefer\r\n1) lower waste\r\n2) higher input count\r\n3) lower change amount (*new*)\r\n\r\nThe reasoning is that all other things equal, we want to send less funds into unconfirmed state and tell counter-parties less about the value in our wallet.\r\n\r\nBuilds on #25647. If you're interested in this change, please review that PR first.",
          "user": {
            "login": "murchandamus",
            "id": 4060799,
            "node_id": "MDQ6VXNlcjQwNjA3OTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/murchandamus",
            "html_url": "https://github.com/murchandamus",
            "followers_url": "https://api.github.com/users/murchandamus/followers",
            "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
            "organizations_url": "https://api.github.com/users/murchandamus/orgs",
            "repos_url": "https://api.github.com/users/murchandamus/repos",
            "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/murchandamus/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "comments": 3,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25742",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25742",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25742.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25742.patch"
          },
          "closed_at": "2022-08-10T16:24:38Z",
          "created_at": "2022-07-29T19:58:53Z",
          "updated_at": "2023-08-10T10:19:21Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-08T06:29:49Z",
      "updated_at": "2022-08-08T06:29:49Z",
      "source": {
        "issue": {
          "id": 967850848,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NzEwMDAxODk1",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22686",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22686/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22686/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22686/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/22686",
          "number": 22686,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: Use GetSelectionAmount in ApproximateBestSubset",
          "body": "The `m_value` used for the target calculation in `ApproximateBestSubset` is incorrect, it should be `GetSelectionAmount`. This causes a bug that is only apparent when the minimum relay fee is set to be very high.\r\n\r\nA test case is added for this, in addition to an assert in `CreateTransactionInternal` that would have also caught this issue if someone were able to hit the edge case.\r\n\r\nFixes #22670",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/47",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/47",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/47/labels",
            "id": 5347322,
            "node_id": "MDk6TWlsZXN0b25lNTM0NzMyMg==",
            "number": 47,
            "state": "closed",
            "title": "22.0",
            "description": "",
            "creator": {
              "login": "MarcoFalke",
              "id": 6399679,
              "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
              "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/MarcoFalke",
              "html_url": "https://github.com/MarcoFalke",
              "followers_url": "https://api.github.com/users/MarcoFalke/followers",
              "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
              "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
              "repos_url": "https://api.github.com/users/MarcoFalke/repos",
              "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 124,
            "created_at": "2020-04-25T00:14:49Z",
            "updated_at": "2021-09-14T07:16:53Z",
            "closed_at": "2021-09-09T12:47:52Z"
          },
          "locked": true,
          "comments": 9,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22686",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/22686",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/22686.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/22686.patch"
          },
          "closed_at": "2021-08-16T03:24:35Z",
          "created_at": "2021-08-12T02:16:05Z",
          "updated_at": "2023-08-08T10:18:55Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7152998558,
      "node_id": "HRFPE_lADOABII585OHkVczwAAAAGqWhie",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7152998558",
      "actor": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-09T07:40:01Z"
    },
    {
      "event": "unlabeled",
      "id": 7153129697,
      "node_id": "UNLE_lADOABII585OHkVczwAAAAGqXBjh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7153129697",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-09T07:57:43Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-09T12:30:00Z",
      "updated_at": "2022-08-09T12:30:00Z",
      "source": {
        "issue": {
          "id": 1332409874,
          "node_id": "PR_kwDOABII584817t0",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25806",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25806/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25806/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25806/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25806",
          "number": 25806,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: group outputs only once, decouple it from Coin Selection",
          "body": "The idea originates from https://github.com/bitcoin/bitcoin/pull/24845#issuecomment-1130310321.\r\n\r\nNote:\r\nFor clarity, it's recommended to start reviewing from the end result to understand the structure of the flow.\r\n\r\n#### GroupOutputs function rationale:\r\nIf \"Avoid Partial Spends\" is enabled, the function gathers outputs with the same script together inside a container. So Coin Selection can treats them as if them were just one possible input and either select them all or not select them. \r\n\r\n#### How the Inputs Fetch + Selection process roughly works:\r\n\r\n```\r\n1. Fetch user’s manually selected inputs.\r\n2. Fetch wallet available coins (walks through the entire wallet txes map) and insert them into a set of vectors (each vector store outputs from a single type).\r\n3. Coin Selection Process:\r\n   Call `AttemptSelection` 8 times. Each of them expands the coin eligibility filter (accepting a larger subset of coins in the calculation) until it founds a solutions or completely fails if no solutions gets founds after the 8 rounds.\r\n\r\n   Each `AttemptSelection` call performs the following actions:\r\n     - For each output type supported by the wallet (P2SH, P2PK, P2WPKH, P2WSH and a combination of all of them):\r\n       Call ‘ChooseSelectionResult’ providing the respective, filtered by type, coins vector. Which:\r\n           I. Groups the outputs vector twice (one for positive only and a second one who includes the negative ones as well).\r\n              - GroupOutputs walks-through the entire inputted coins vector one time at least, + more if we are avoiding partial spends, to generate a vector of OutputGroups.\r\n           II. Then performs every coin selection algorithm using the recently created vector of OutputGroup: (1) BnB, (2) knapsack and (3) SRD.\r\n           III. Then returns the best solution out of them.\r\n```\r\n\r\nWe perform the general operation of gathering outputs, with the same script, into a single container inside:\r\nEach coins selection attempt (8 times —> each coin eligibility filter), for each of the outputs vector who were filtered by type (plus another one joining all the outputs as well if needed), twice (one for the positive only outputs effective value and a second one for all of them).\r\n\r\nSo, in the worst case scenario where no solution is found after the 8 Coin Selection attempts, the `GroupOutputs` function is called 80 times (8 * 5 * 2).\r\n\r\n#### Improvements:\r\n\r\nThis proposal streamlines the process so that the output groups, filtered by coin eligibility and type, are created in a single loop outside of the Coin Selection Process. \r\n\r\nThe new process is as follows:\r\n\r\n```\r\n1. Fetch user’s manually selected inputs.\r\n2. Fetch wallet available coins.\r\n3. Group outputs by each coin eligibility filter and each different output type found.\r\n4. Coin Selection Process: \r\n   Call AttemptSelection 8 times. Each of them expands the coin eligibility filter (accepting different output groups) until it founds a solutions or completely fails if no solutions gets founds after the 8 rounds.\r\n   \r\n   Each ‘AttemptSelection’ call performs the following actions:\r\n      - For each output type supported by the wallet (P2SH, P2PK, P2WPKH, P2WSH and all of them):\r\n          A. Call ‘ChooseSelectionResult’ providing the respective, filtered by type, output group. Which:\r\n             I. Performs every coin selection algorithm using the provided vector of OutputGroup: (1) BnB, (2) knapsack and (3) SRD.\r\n             II. Then returns the best solution out of them.\r\n```\r\n\r\nExtra Note:\r\nThe next steps after this PR will be to:\r\n1) Merge `AvailableCoins` and `GroupOutputs` processes.\r\n2) Skip entire coin selection rounds if no new coins are added into the subsequent round.\r\n3) Remove global feerates from the OutputGroup class.\r\n4) Remove secondary \"grouped\" tx creation from `CreateTransactionInternal` by running Coin Selection results over the aps grouped outputs vs non-aps ones.",
          "user": {
            "login": "furszy",
            "id": 5377650,
            "node_id": "MDQ6VXNlcjUzNzc2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/furszy",
            "html_url": "https://github.com/furszy",
            "followers_url": "https://api.github.com/users/furszy/followers",
            "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
            "organizations_url": "https://api.github.com/users/furszy/orgs",
            "repos_url": "https://api.github.com/users/furszy/repos",
            "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/furszy/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 13,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25806",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25806.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25806.patch"
          },
          "closed_at": "2023-03-06T23:52:42Z",
          "created_at": "2022-08-08T21:19:07Z",
          "updated_at": "2023-05-27T01:47:50Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-09T13:33:57Z",
      "updated_at": "2022-08-09T13:33:57Z",
      "source": {
        "issue": {
          "id": 1315657410,
          "node_id": "PR_kwDOABII5847-7hZ",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25685",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25685/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25685/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25685/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25685",
          "number": 25685,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: Faster transaction creation by removing pre-set-inputs fetching responsibility from Coin Selection",
          "body": "#### # Context (Current Flow on Master)\r\n\r\nIn the transaction creation process, in order to select which coins the new transaction will spend,\r\nwe first obtain all the available coins known by the wallet, which means walking-through the\r\nwallet txes map, gathering the ones that fulfill certain spendability requirements in a vector.\r\n\r\nThis coins vector is then provided to the Coin Selection process, which first checks if the user\r\nhas manually selected any input (which could be internal, aka known by the wallet, or external),\r\nand if it does, it fetches them by searching each of them inside the wallet and/or inside the\r\nCoin Control external tx data.\r\n\r\nThen, after finding the pre-selected-inputs and gathering them in a vector, the Coin Selection\r\nprocess walks-through the entire available coins vector once more just to erase coins that are\r\nin both vectors. So the Coin Selection process doesn’t pick them twice (duplicate inputs inside\r\nthe same transaction).\r\n\r\n#### # Process Workflow Changes\r\n\r\nNow, a new method, `FetchCoins` will be responsible for:\r\n1) Lookup the user pre-selected-inputs (which can be internal or external).\r\n2) And, fetch the available coins in the wallet (excluding the already fetched ones).\r\n\r\nWhich will occur prior to the Coin Selection process. Which allows us to never include the\r\npre-selected-inputs inside the available coins vector in the first place, as well as doing other\r\nnice improvements (written below).\r\n\r\nSo, Coin Selection can perform its main responsibility without mixing it with having to fetch\r\ninternal/external coins nor any slow and unneeded duplicate coins verification.\r\n\r\n#### # Summarizing the Improvements:\r\n\r\n1) If any pre-selected-input lookup fail, the process will return the error right away.\r\n    (before, the wallet was fetching all the wallet available coins, walking through the\r\n    entire txes map, and then failing for an invalid pre-selected-input inside SelectCoins)\r\n\r\n2) The pre-selected-inputs lookup failure causes are properly described on the return error.\r\n    (before, we were returning an \"Insufficient Funds\" error for everything, even if the failure\r\n    was due a not solvable external input)\r\n\r\n3) **Faster Coin Selection**: no longer need to \"remove the pre-set inputs from the available coins\r\n    vector so that Coin Selection doesn't pick them\" (which meant to loop-over the entire\r\n    available coins vector at Coin Selection time, erasing duplicate coins that were pre-selected).\r\n   \r\n    Now, the available coins vector, which is built after the pre-selected-inputs fetching,\r\n    doesn’t include the already selected inputs in the first place.\r\n\r\n4) **Faster transaction creation** for transactions that only use manually selected inputs.\r\n\r\n    We now will return early, as soon as we finish fetching the pre-selected-inputs and\r\n    not perform the resources expensive calculation of walking-through the entire wallet\r\n    txes map to obtain the available coins (coins that we will not use).\r\n\r\n---------------------------\r\n\r\nAdded a new bench (f6d0bb2) measuring the transaction creation process, for a wallet with ~250k UTXO, only using the pre-selected-inputs inside coin control. Setting `m_allow_other_inputs=false` to disallow the wallet to include coins automatically.\r\n\r\n#### Result on this PR (tip f6d0bb2d):\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|        1,048,675.00 |              953.58 |    0.3% |      0.06 | `WalletCreateTransaction`\r\n\r\nvs\r\n\r\n#### Result on master (tip 4a4289e2):\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|       96,373,458.20 |               10.38 |    0.2% |      5.30 | `WalletCreateTransaction`\r\n\r\nThe benchmark took to run in master: **96.37 milliseconds**, while in this PR: **1 millisecond**  🚀 .",
          "user": {
            "login": "furszy",
            "id": 5377650,
            "node_id": "MDQ6VXNlcjUzNzc2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/furszy",
            "html_url": "https://github.com/furszy",
            "followers_url": "https://api.github.com/users/furszy/followers",
            "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
            "organizations_url": "https://api.github.com/users/furszy/orgs",
            "repos_url": "https://api.github.com/users/furszy/repos",
            "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/furszy/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 30,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25685",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25685",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25685.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25685.patch"
          },
          "closed_at": "2022-10-27T21:49:29Z",
          "created_at": "2022-07-23T13:19:19Z",
          "updated_at": "2023-05-27T01:48:36Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1211031229,
      "node_id": "IC_kwDOABII585ILt69",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1211031229",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-10T17:31:17Z",
      "updated_at": "2022-08-10T17:31:17Z",
      "author_association": "MEMBER",
      "body": "ACK e763496caab2f9b9f9ba038f7a020caa56997c1b",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25647#issuecomment-1211031229",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25647"
    },
    {
      "event": "reviewed",
      "id": 1068861504,
      "node_id": "PRR_kwDOABII584_tYhA",
      "url": null,
      "actor": null,
      "commit_id": "e763496caab2f9b9f9ba038f7a020caa56997c1b",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK e763496caab2f9b9f9ba038f7a020caa56997c1b",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25647#pullrequestreview-1068861504",
      "submitted_at": "2022-08-10T20:58:12Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25647"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGM4Y2YwOGVhNzQzZTQzMGMyYmYzZmU0NjQzOTU5NDI1N2IwOTM3ZTU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c8cf08ea743e430c2bf3fe46439594257b0937e5",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c8cf08ea743e430c2bf3fe46439594257b0937e5",
      "tree": {
        "sha": "81f06a202081dd8c4402d524b70ad359d8ac7af6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/81f06a202081dd8c4402d524b70ad359d8ac7af6"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dc9d6626835ec2864dfa747c12071dabdc95b919",
          "sha": "dc9d6626835ec2864dfa747c12071dabdc95b919",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/dc9d6626835ec2864dfa747c12071dabdc95b919"
        }
      ],
      "message": "wallet: ensure m_min_change_target always covers change fee",
      "committer": {
        "name": "S3RK",
        "email": "1466284+S3RK@users.noreply.github.com",
        "date": "2022-08-15T07:34:26Z"
      },
      "author": {
        "name": "S3RK",
        "email": "1466284+S3RK@users.noreply.github.com",
        "date": "2022-08-15T07:30:31Z"
      },
      "sha": "c8cf08ea743e430c2bf3fe46439594257b0937e5"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDA2ZjU1OGU0ZTIxNjRkMTkxNmYyNThjNzMxZWZlNDU4NjcyOGEyM2I",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/06f558e4e2164d1916f258c731efe4586728a23b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/06f558e4e2164d1916f258c731efe4586728a23b",
      "tree": {
        "sha": "b6331a743c0454d1120293f6ade842503714609e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b6331a743c0454d1120293f6ade842503714609e"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c8cf08ea743e430c2bf3fe46439594257b0937e5",
          "sha": "c8cf08ea743e430c2bf3fe46439594257b0937e5",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c8cf08ea743e430c2bf3fe46439594257b0937e5"
        }
      ],
      "message": "wallet: accurate SelectionResult::m_target\n\nSelectionResult::m_target should be equal to actual selection target.\nSelection target is the sum of all recipient amounts plus non input fees.\nSo we need to remove change_fee from the m_target. It's safe because change\ntarget is always greater than the change fee, so we can always cover fees\nif change output is created.",
      "committer": {
        "name": "S3RK",
        "email": "1466284+S3RK@users.noreply.github.com",
        "date": "2022-08-15T07:34:38Z"
      },
      "author": {
        "name": "S3RK",
        "email": "1466284+S3RK@users.noreply.github.com",
        "date": "2022-07-06T06:51:22Z"
      },
      "sha": "06f558e4e2164d1916f258c731efe4586728a23b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGY4ZTc5NjM0OGI2NDRjMDExYWQ5YTgzMTIzNTZkNDQyNmMxNmNjNGI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f8e796348b644c011ad9a8312356d4426c16cc4b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f8e796348b644c011ad9a8312356d4426c16cc4b",
      "tree": {
        "sha": "290d1c594b6a5fe25576bc5426af6f38c4450dad",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/290d1c594b6a5fe25576bc5426af6f38c4450dad"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/06f558e4e2164d1916f258c731efe4586728a23b",
          "sha": "06f558e4e2164d1916f258c731efe4586728a23b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/06f558e4e2164d1916f258c731efe4586728a23b"
        }
      ],
      "message": "wallet: add SelectionResult::Merge",
      "committer": {
        "name": "S3RK",
        "email": "1466284+S3RK@users.noreply.github.com",
        "date": "2022-08-15T07:34:38Z"
      },
      "author": {
        "name": "S3RK",
        "email": "1466284+S3RK@users.noreply.github.com",
        "date": "2022-07-06T07:18:17Z"
      },
      "sha": "f8e796348b644c011ad9a8312356d4426c16cc4b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGUzMjEwYTcyMjU0MmE5Y2I1ZjdlNGJlNzI0NzBkYmU0ODhjMjgxZmQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e3210a722542a9cb5f7e4be72470dbe488c281fd",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e3210a722542a9cb5f7e4be72470dbe488c281fd",
      "tree": {
        "sha": "c9715d020b24b0c479d4eb5a43cf45038a5e5070",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c9715d020b24b0c479d4eb5a43cf45038a5e5070"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f8e796348b644c011ad9a8312356d4426c16cc4b",
          "sha": "f8e796348b644c011ad9a8312356d4426c16cc4b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f8e796348b644c011ad9a8312356d4426c16cc4b"
        }
      ],
      "message": "wallet: account for preselected inputs in target\n\nWhen we have preselected inputs the coin selection search target is reduced\nby the sum of (effective) values. This causes incorrect m_target value.\n\nCreate separate instance of SelectionResult for all the preselected inputs and\nset the target equal to the sum of (effective) values. Target for preselected\nSelectionResult is equal to the delta for the search target. To get the final\nSelectionResult with accurate m_target we merge both SelectionResult instances.",
      "committer": {
        "name": "S3RK",
        "email": "1466284+S3RK@users.noreply.github.com",
        "date": "2022-08-15T07:34:38Z"
      },
      "author": {
        "name": "S3RK",
        "email": "1466284+S3RK@users.noreply.github.com",
        "date": "2022-07-06T06:15:20Z"
      },
      "sha": "e3210a722542a9cb5f7e4be72470dbe488c281fd"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDcyY2FkMjhkYTA1Y2ZjZTllNDk1MGYyZGM1YTcwOWRhNDFkMjUxZjQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/72cad28da05cfce9e4950f2dc5a709da41d251f4",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/72cad28da05cfce9e4950f2dc5a709da41d251f4",
      "tree": {
        "sha": "7e105850c752c95299e4105b79b021966672428e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7e105850c752c95299e4105b79b021966672428e"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e3210a722542a9cb5f7e4be72470dbe488c281fd",
          "sha": "e3210a722542a9cb5f7e4be72470dbe488c281fd",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e3210a722542a9cb5f7e4be72470dbe488c281fd"
        }
      ],
      "message": "wallet: calculate and store min_viable_change",
      "committer": {
        "name": "S3RK",
        "email": "1466284+S3RK@users.noreply.github.com",
        "date": "2022-08-15T07:35:13Z"
      },
      "author": {
        "name": "S3RK",
        "email": "1466284+S3RK@users.noreply.github.com",
        "date": "2022-07-06T07:00:57Z"
      },
      "sha": "72cad28da05cfce9e4950f2dc5a709da41d251f4"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDE1ZTk3YTY4ODY5MDJlYmIzNzg4Mjk5OTNhOTcyZGM1MjU1OGFhOTI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/15e97a6886902ebb378829993a972dc52558aa92",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/15e97a6886902ebb378829993a972dc52558aa92",
      "tree": {
        "sha": "7d4ec454757eefa0fb795301c47bfbc6d8dd1402",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7d4ec454757eefa0fb795301c47bfbc6d8dd1402"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/72cad28da05cfce9e4950f2dc5a709da41d251f4",
          "sha": "72cad28da05cfce9e4950f2dc5a709da41d251f4",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/72cad28da05cfce9e4950f2dc5a709da41d251f4"
        }
      ],
      "message": "wallet: add SelectionResult::GetChange",
      "committer": {
        "name": "S3RK",
        "email": "1466284+S3RK@users.noreply.github.com",
        "date": "2022-08-15T07:35:20Z"
      },
      "author": {
        "name": "S3RK",
        "email": "1466284+S3RK@users.noreply.github.com",
        "date": "2022-07-06T07:00:26Z"
      },
      "sha": "15e97a6886902ebb378829993a972dc52558aa92"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDg3ZTBlZjkwMzEzMzQ5MmU3NmI3Yzc1NTYyMDk1NTRkNGEwYzNkNjY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/87e0ef903133492e76b7c7556209554d4a0c3d66",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/87e0ef903133492e76b7c7556209554d4a0c3d66",
      "tree": {
        "sha": "461cbbcfe736286a16de1898d648e2cc61ffd8da",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/461cbbcfe736286a16de1898d648e2cc61ffd8da"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/15e97a6886902ebb378829993a972dc52558aa92",
          "sha": "15e97a6886902ebb378829993a972dc52558aa92",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/15e97a6886902ebb378829993a972dc52558aa92"
        }
      ],
      "message": "wallet: use GetChange() in tx building",
      "committer": {
        "name": "S3RK",
        "email": "1466284+S3RK@users.noreply.github.com",
        "date": "2022-08-15T07:35:20Z"
      },
      "author": {
        "name": "S3RK",
        "email": "1466284+S3RK@users.noreply.github.com",
        "date": "2022-07-13T06:54:44Z"
      },
      "sha": "87e0ef903133492e76b7c7556209554d4a0c3d66"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDRmZWY1MzQ0Mjg4ZTQ1NDQ2MGI4MGRiMDMxNjI5NGUxZWMxYWQ4YWQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4fef5344288e454460b80db0316294e1ec1ad8ad",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4fef5344288e454460b80db0316294e1ec1ad8ad",
      "tree": {
        "sha": "4447dc2f7a1bf4718c55cc082e2d0ee52cfaae91",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4447dc2f7a1bf4718c55cc082e2d0ee52cfaae91"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/87e0ef903133492e76b7c7556209554d4a0c3d66",
          "sha": "87e0ef903133492e76b7c7556209554d4a0c3d66",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/87e0ef903133492e76b7c7556209554d4a0c3d66"
        }
      ],
      "message": "wallet: use GetChange() when computing waste",
      "committer": {
        "name": "S3RK",
        "email": "1466284+S3RK@users.noreply.github.com",
        "date": "2022-08-15T07:35:20Z"
      },
      "author": {
        "name": "S3RK",
        "email": "1466284+S3RK@users.noreply.github.com",
        "date": "2022-07-06T07:03:01Z"
      },
      "sha": "4fef5344288e454460b80db0316294e1ec1ad8ad"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7186719029,
      "node_id": "HRFPE_lADOABII585OHkVczwAAAAGsXKE1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7186719029",
      "actor": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-15T07:35:34Z"
    },
    {
      "event": "commented",
      "id": 1214711626,
      "node_id": "IC_kwDOABII585IZwdK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1214711626",
      "actor": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-15T07:36:48Z",
      "updated_at": "2022-08-15T07:36:48Z",
      "author_association": "CONTRIBUTOR",
      "body": "Added one commit c8cf08ea743e430c2bf3fe46439594257b0937e5 and rebased on master again",
      "user": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25647#issuecomment-1214711626",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25647"
    },
    {
      "event": "reviewed",
      "id": 1074764501,
      "node_id": "PRR_kwDOABII585AD5rV",
      "url": null,
      "actor": null,
      "commit_id": "4fef5344288e454460b80db0316294e1ec1ad8ad",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25647#pullrequestreview-1074764501",
      "submitted_at": "2022-08-17T03:32:49Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25647"
    },
    {
      "event": "reviewed",
      "id": 1076265323,
      "node_id": "PRR_kwDOABII585AJoFr",
      "url": null,
      "actor": null,
      "commit_id": "4fef5344288e454460b80db0316294e1ec1ad8ad",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code review ACK 4fef5344\r\n\r\nGreat step forward, this area needs so much more love.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25647#pullrequestreview-1076265323",
      "submitted_at": "2022-08-17T19:10:16Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25647"
    },
    {
      "event": "commented",
      "id": 1218523036,
      "node_id": "IC_kwDOABII585IoS-c",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1218523036",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-17T21:51:21Z",
      "updated_at": "2022-08-17T21:51:21Z",
      "author_association": "MEMBER",
      "body": "ACK 4fef5344288e454460b80db0316294e1ec1ad8ad",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25647#issuecomment-1218523036",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25647"
    },
    {
      "event": "commented",
      "id": 1218536863,
      "node_id": "IC_kwDOABII585IoWWf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1218536863",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-17T22:05:12Z",
      "updated_at": "2022-08-17T22:05:12Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25647#issuecomment-1218536863",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25647"
    },
    {
      "event": "reviewed",
      "id": 1076564184,
      "node_id": "PRR_kwDOABII585AKxDY",
      "url": null,
      "actor": null,
      "commit_id": "4fef5344288e454460b80db0316294e1ec1ad8ad",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Approach ACK.",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25647#pullrequestreview-1076564184",
      "submitted_at": "2022-08-18T00:41:51Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25647"
    },
    {
      "event": "reviewed",
      "id": 1079077413,
      "node_id": "PRR_kwDOABII585AUWol",
      "url": null,
      "actor": null,
      "commit_id": "4fef5344288e454460b80db0316294e1ec1ad8ad",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK https://github.com/bitcoin/bitcoin/pull/25647/commits/4fef5344288e454460b80db0316294e1ec1ad8ad",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25647#pullrequestreview-1079077413",
      "submitted_at": "2022-08-19T16:28:15Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25647"
    },
    {
      "event": "reviewed",
      "id": 1080401027,
      "node_id": "PRR_kwDOABII585AZZyD",
      "url": null,
      "actor": null,
      "commit_id": "4fef5344288e454460b80db0316294e1ec1ad8ad",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Sorry for the slow re-review. I don't think these two are blockers if they're issues at all, but I figured it might be good to bring them up.",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25647#pullrequestreview-1080401027",
      "submitted_at": "2022-08-22T13:10:28Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25647"
    },
    {
      "event": "commented",
      "id": 1222606713,
      "node_id": "IC_kwDOABII585I3395",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1222606713",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-22T16:31:39Z",
      "updated_at": "2022-08-22T16:31:39Z",
      "author_association": "CONTRIBUTOR",
      "body": "crACK 4fef5344288e454460b80db0316294e1ec1ad8ad",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25647#issuecomment-1222606713",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25647"
    },
    {
      "event": "merged",
      "id": 7234533342,
      "node_id": "ME_lADOABII585OHkVczwAAAAGvNjfe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7234533342",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "2bd9aa5a44b88c866c4d98f8a7bf7154049cba31",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2bd9aa5a44b88c866c4d98f8a7bf7154049cba31",
      "created_at": "2022-08-22T16:43:27Z"
    },
    {
      "event": "closed",
      "id": 7234533367,
      "node_id": "CE_lADOABII585OHkVczwAAAAGvNjf3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7234533367",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-22T16:43:27Z"
    },
    {
      "event": "locked",
      "id": 10156655715,
      "node_id": "LOE_lADOABII585OHkVczwAAAAJdYkRj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10156655715",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-22T10:21:17Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/932582168",
      "pull_request_review_id": 1054616217,
      "id": 932582168,
      "node_id": "PRRC_kwDOABII5843lhMY",
      "diff_hunk": "@@ -123,6 +123,10 @@ struct CoinSelectionParams {\n     /** Mininmum change to target in Knapsack solver: select coins to cover the payment and\n      * at least this value of change. */\n     CAmount m_min_change_target{0};\n+    /** Minimum amount for creating a change output.\n+     * If change budget is smaller than min_change then we forgo creation of change output.\n+     */\n+    CAmount min_change{0};",
      "path": "src/wallet/coinselection.h",
      "position": null,
      "original_position": 7,
      "commit_id": "4fef5344288e454460b80db0316294e1ec1ad8ad",
      "original_commit_id": "ef71f057495b0a152667857ab277c0e76e76ad76",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"wallet: calculate and store min_change\" (ef71f057495b0a152667857ab277c0e76e76ad76):\r\n\r\nWhen I read `min_change` I think of the modifier of the target for the coin selection parameters. This seems to rather be the upper bound for dust. Perhaps we should use a different name here instead of the same term.\r\n\r\n```suggestion\r\n    CAmount min_viable_change{0};\r\n```",
      "created_at": "2022-07-28T19:07:31Z",
      "updated_at": "2022-07-28T20:23:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25647#discussion_r932582168",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/932582168"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25647"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 129,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/932586988",
      "pull_request_review_id": 1054616217,
      "id": 932586988,
      "node_id": "PRRC_kwDOABII5843liXs",
      "diff_hunk": "@@ -745,6 +745,13 @@ static BResult<CreatedTransactionResult> CreateTransactionInternal(\n     coin_selection_params.m_change_fee = coin_selection_params.m_effective_feerate.GetFee(coin_selection_params.change_output_size);\n     coin_selection_params.m_cost_of_change = coin_selection_params.m_discard_feerate.GetFee(coin_selection_params.change_spend_size) + coin_selection_params.m_change_fee;\n \n+    // The smallest change amount should be:\n+    // 1. at least equal to dust threshold\n+    // 2. at least 1 sat greater than fees to spend it at m_discard_feerate\n+    const auto dust = GetDustThreshold(change_prototype_txout, coin_selection_params.m_discard_feerate);\n+    const auto change_spend_fee = coin_selection_params.m_discard_feerate.GetFee(coin_selection_params.change_spend_size);\n+    coin_selection_params.min_change = std::max(change_spend_fee + 1, dust);",
      "path": "src/wallet/spend.cpp",
      "position": null,
      "original_position": 9,
      "commit_id": "4fef5344288e454460b80db0316294e1ec1ad8ad",
      "original_commit_id": "ef71f057495b0a152667857ab277c0e76e76ad76",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"wallet: calculate and store min_change\" (ef71f057495b0a152667857ab277c0e76e76ad76):\r\nShouldn't this be the same criteria we use for discarding the remainder? Also, I think the +1 should be added to either of the terms, so we can pull it out of the parens.\r\n\r\n```suggestion\r\n    coin_selection_params.min_change = std::max(coin_selection_params.m_cost_of_change, dust) + 1;\r\n```",
      "created_at": "2022-07-28T19:13:32Z",
      "updated_at": "2022-07-28T20:23:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25647#discussion_r932586988",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/932586988"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25647"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 753,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/932593733",
      "pull_request_review_id": 1054616217,
      "id": 932593733,
      "node_id": "PRRC_kwDOABII5843lkBF",
      "diff_hunk": "@@ -480,4 +485,24 @@ std::string GetAlgorithmName(const SelectionAlgorithm algo)\n     }\n     assert(false);\n }\n+\n+CAmount SelectionResult::GetChange(const CAmount min_change, const CAmount change_fee) const\n+{\n+    // change_budget = SUM(inputs) - SUM(outputs) - fees\n+    // 1) With SFFO we don't pay any fees\n+    // 2) Otherwise we pay all the fees:\n+    //  - input fees are covered by GetSelectedEffectiveValue()\n+    //  - non_input_fee is included in m_target\n+    //  - change_fee\n+    const CAmount change_budget = m_use_effective\n+                                  ? GetSelectedEffectiveValue() - m_target - change_fee\n+                                  : GetSelectedValue() - m_target;\n+\n+    if (change_budget < min_change) {\n+        return 0;\n+    }\n+\n+    return change_budget;\n+}",
      "path": "src/wallet/coinselection.cpp",
      "position": null,
      "original_position": 34,
      "commit_id": "4fef5344288e454460b80db0316294e1ec1ad8ad",
      "original_commit_id": "83bf6ab231af6db030cab876b169551f438c2499",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"wallet: add SelectionResult::GetChange\" (83bf6ab231af6db030cab876b169551f438c2499):\r\n\r\nNaming-nit: My understanding was that `change_budget` refers to `change_amount + change_fee`, but in this function `change_budget` is actually just `change`?\r\n\r\n```suggestion\r\nCAmount SelectionResult::GetChange(const CAmount min_viable_change, const CAmount change_fee) const\r\n{\r\n    // change = SUM(inputs) - SUM(outputs) - fees\r\n    // 1) With SFFO we don't pay any fees\r\n    // 2) Otherwise we pay all the fees:\r\n    //  - input fees are covered by GetSelectedEffectiveValue()\r\n    //  - non_input_fee is included in m_target\r\n    //  - change_fee\r\n    const CAmount change = m_use_effective\r\n                                  ? GetSelectedEffectiveValue() - m_target - change_fee\r\n                                  : GetSelectedValue() - m_target;\r\n\r\n    if (change < min_viable_change) {\r\n        return 0;\r\n    }\r\n\r\n    return change;\r\n}\r\n```",
      "created_at": "2022-07-28T19:22:50Z",
      "updated_at": "2022-07-28T20:23:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25647#discussion_r932593733",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/932593733"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25647"
        }
      },
      "start_line": null,
      "original_start_line": 489,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 512,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/932598916",
      "pull_request_review_id": 1054616217,
      "id": 932598916,
      "node_id": "PRRC_kwDOABII5843llSE",
      "diff_hunk": "@@ -792,23 +792,23 @@ static BResult<CreatedTransactionResult> CreateTransactionInternal(\n     }\n     TRACE5(coin_selection, selected_coins, wallet.GetName().c_str(), GetAlgorithmName(result->GetAlgo()).c_str(), result->GetTarget(), result->GetWaste(), result->GetSelectedValue());\n \n-    // Always make a change output\n-    // We will reduce the fee from this change output later, and remove the output if it is too small.\n-    const CAmount change_and_fee = result->GetSelectedValue() - recipients_sum;\n-    assert(change_and_fee >= 0);\n-    CTxOut newTxOut(change_and_fee, scriptChange);\n-\n-    if (nChangePosInOut == -1) {\n-        // Insert change txn at random position:\n-        nChangePosInOut = rng_fast.randrange(txNew.vout.size() + 1);\n-    }\n-    else if ((unsigned int)nChangePosInOut > txNew.vout.size()) {\n-        return _(\"Transaction change output index out of range\");\n+    const CAmount change_amount = result->GetChange(coin_selection_params.min_change, coin_selection_params.m_change_fee);\n+    if (change_amount > 0) {\n+        CTxOut newTxOut(change_amount, scriptChange);\n+        if (nChangePosInOut == -1)\n+        {\n+            // Insert change txn at random position:\n+            nChangePosInOut = rng_fast.randrange(txNew.vout.size() + 1);\n+        }\n+        else if ((unsigned int)nChangePosInOut > txNew.vout.size())\n+        {\n+            return _(\"Transaction change output index out of range\");\n+        }\n+        txNew.vout.insert(txNew.vout.begin() + nChangePosInOut, newTxOut);\n+    } else {\n+        nChangePosInOut = -1;\n     }",
      "path": "src/wallet/spend.cpp",
      "position": null,
      "original_position": 31,
      "commit_id": "4fef5344288e454460b80db0316294e1ec1ad8ad",
      "original_commit_id": "64af431f328de586b3e8769ec875a7cf9083b44e",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"wallet: use GetChange() in tx building\" (64af431f328de586b3e8769ec875a7cf9083b44e):\r\n\r\nStyle-nit: Inconsistent line breaking between if and brace.",
      "created_at": "2022-07-28T19:29:42Z",
      "updated_at": "2022-07-28T20:23:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25647#discussion_r932598916",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/932598916"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25647"
        }
      },
      "start_line": null,
      "original_start_line": 795,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 917,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/932626345",
      "pull_request_review_id": 1054616217,
      "id": 932626345,
      "node_id": "PRRC_kwDOABII5843lr-p",
      "diff_hunk": "@@ -156,7 +156,7 @@ std::optional<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_poo\n     for (const size_t& i : best_selection) {\n         result.AddInput(utxo_pool.at(i));\n     }\n-    result.ComputeAndSetWaste(CAmount{0});\n+    result.ComputeAndSetWaste(cost_of_change, cost_of_change, CAmount{0});",
      "path": "src/wallet/coinselection.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "4fef5344288e454460b80db0316294e1ec1ad8ad",
      "original_commit_id": "45ee9d3a737cc23babb9200c4d75d7dae4dc6700",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In \"wallet: use GetChange() when computing waste\" (45ee9d3a737cc23babb9200c4d75d7dae4dc6700):\r\n\r\nShouldn't the first value here be the maximum of `cost_of_change`  and  `dust_threshold`? I think that the former can be lower than the latter for feerates below discard_feerate.",
      "created_at": "2022-07-28T20:09:01Z",
      "updated_at": "2022-07-28T20:23:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25647#discussion_r932626345",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/932626345"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25647"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 159,
      "original_line": 159,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/932633319",
      "pull_request_review_id": 1054616217,
      "id": 932633319,
      "node_id": "PRRC_kwDOABII5843ltrn",
      "diff_hunk": "@@ -406,9 +406,15 @@ CAmount GenerateChangeTarget(CAmount payment_value, FastRandomContext& rng)\n     }\n }\n \n-void SelectionResult::ComputeAndSetWaste(CAmount change_cost)\n+void SelectionResult::ComputeAndSetWaste(const CAmount min_change, const CAmount change_cost, const CAmount change_fee)",
      "path": "src/wallet/coinselection.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "4fef5344288e454460b80db0316294e1ec1ad8ad",
      "original_commit_id": "45ee9d3a737cc23babb9200c4d75d7dae4dc6700",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In \"wallet: use GetChange() when computing waste\" (45ee9d3a737cc23babb9200c4d75d7dae4dc6700):\r\n\r\nAs suggested before, I'd prefer `min_viable_change` for this value here and below.",
      "created_at": "2022-07-28T20:18:50Z",
      "updated_at": "2022-07-28T20:23:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25647#discussion_r932633319",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/932633319"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25647"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 409,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/940990376",
      "pull_request_review_id": 1066228144,
      "id": 940990376,
      "node_id": "PRRC_kwDOABII5844Fl-o",
      "diff_hunk": "@@ -745,6 +745,13 @@ static BResult<CreatedTransactionResult> CreateTransactionInternal(\n     coin_selection_params.m_change_fee = coin_selection_params.m_effective_feerate.GetFee(coin_selection_params.change_output_size);\n     coin_selection_params.m_cost_of_change = coin_selection_params.m_discard_feerate.GetFee(coin_selection_params.change_spend_size) + coin_selection_params.m_change_fee;\n \n+    // The smallest change amount should be:\n+    // 1. at least equal to dust threshold\n+    // 2. at least 1 sat greater than fees to spend it at m_discard_feerate\n+    const auto dust = GetDustThreshold(change_prototype_txout, coin_selection_params.m_discard_feerate);\n+    const auto change_spend_fee = coin_selection_params.m_discard_feerate.GetFee(coin_selection_params.change_spend_size);\n+    coin_selection_params.min_change = std::max(change_spend_fee + 1, dust);",
      "path": "src/wallet/spend.cpp",
      "position": null,
      "original_position": 9,
      "commit_id": "4fef5344288e454460b80db0316294e1ec1ad8ad",
      "original_commit_id": "ef71f057495b0a152667857ab277c0e76e76ad76",
      "in_reply_to_id": 932586988,
      "user": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm not sure I understand the question about the remainder. I've tried to keep the existing behaviour unchanged.\r\n\r\nWe can totally add +1 to the dust threshold but that would be a change in behaviour. Are we sure we want to do it?",
      "created_at": "2022-08-09T07:24:00Z",
      "updated_at": "2022-08-09T07:24:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25647#discussion_r940990376",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/940990376"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25647"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 753,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/940991118",
      "pull_request_review_id": 1066229159,
      "id": 940991118,
      "node_id": "PRRC_kwDOABII5844FmKO",
      "diff_hunk": "@@ -792,23 +792,23 @@ static BResult<CreatedTransactionResult> CreateTransactionInternal(\n     }\n     TRACE5(coin_selection, selected_coins, wallet.GetName().c_str(), GetAlgorithmName(result->GetAlgo()).c_str(), result->GetTarget(), result->GetWaste(), result->GetSelectedValue());\n \n-    // Always make a change output\n-    // We will reduce the fee from this change output later, and remove the output if it is too small.\n-    const CAmount change_and_fee = result->GetSelectedValue() - recipients_sum;\n-    assert(change_and_fee >= 0);\n-    CTxOut newTxOut(change_and_fee, scriptChange);\n-\n-    if (nChangePosInOut == -1) {\n-        // Insert change txn at random position:\n-        nChangePosInOut = rng_fast.randrange(txNew.vout.size() + 1);\n-    }\n-    else if ((unsigned int)nChangePosInOut > txNew.vout.size()) {\n-        return _(\"Transaction change output index out of range\");\n+    const CAmount change_amount = result->GetChange(coin_selection_params.min_change, coin_selection_params.m_change_fee);\n+    if (change_amount > 0) {\n+        CTxOut newTxOut(change_amount, scriptChange);\n+        if (nChangePosInOut == -1)\n+        {\n+            // Insert change txn at random position:\n+            nChangePosInOut = rng_fast.randrange(txNew.vout.size() + 1);\n+        }\n+        else if ((unsigned int)nChangePosInOut > txNew.vout.size())\n+        {\n+            return _(\"Transaction change output index out of range\");\n+        }\n+        txNew.vout.insert(txNew.vout.begin() + nChangePosInOut, newTxOut);\n+    } else {\n+        nChangePosInOut = -1;\n     }",
      "path": "src/wallet/spend.cpp",
      "position": null,
      "original_position": 31,
      "commit_id": "4fef5344288e454460b80db0316294e1ec1ad8ad",
      "original_commit_id": "64af431f328de586b3e8769ec875a7cf9083b44e",
      "in_reply_to_id": 932598916,
      "user": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think I fixed it",
      "created_at": "2022-08-09T07:24:51Z",
      "updated_at": "2022-08-09T07:24:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25647#discussion_r940991118",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/940991118"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25647"
        }
      },
      "start_line": null,
      "original_start_line": 795,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 917,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/940994464",
      "pull_request_review_id": 1066233509,
      "id": 940994464,
      "node_id": "PRRC_kwDOABII5844Fm-g",
      "diff_hunk": "@@ -123,6 +123,10 @@ struct CoinSelectionParams {\n     /** Mininmum change to target in Knapsack solver: select coins to cover the payment and\n      * at least this value of change. */\n     CAmount m_min_change_target{0};\n+    /** Minimum amount for creating a change output.\n+     * If change budget is smaller than min_change then we forgo creation of change output.\n+     */\n+    CAmount min_change{0};",
      "path": "src/wallet/coinselection.h",
      "position": null,
      "original_position": 7,
      "commit_id": "4fef5344288e454460b80db0316294e1ec1ad8ad",
      "original_commit_id": "ef71f057495b0a152667857ab277c0e76e76ad76",
      "in_reply_to_id": 932582168,
      "user": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done",
      "created_at": "2022-08-09T07:28:09Z",
      "updated_at": "2022-08-09T07:28:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25647#discussion_r940994464",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/940994464"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25647"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 129,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/940995100",
      "pull_request_review_id": 1066234379,
      "id": 940995100,
      "node_id": "PRRC_kwDOABII5844FnIc",
      "diff_hunk": "@@ -480,4 +485,24 @@ std::string GetAlgorithmName(const SelectionAlgorithm algo)\n     }\n     assert(false);\n }\n+\n+CAmount SelectionResult::GetChange(const CAmount min_change, const CAmount change_fee) const\n+{\n+    // change_budget = SUM(inputs) - SUM(outputs) - fees\n+    // 1) With SFFO we don't pay any fees\n+    // 2) Otherwise we pay all the fees:\n+    //  - input fees are covered by GetSelectedEffectiveValue()\n+    //  - non_input_fee is included in m_target\n+    //  - change_fee\n+    const CAmount change_budget = m_use_effective\n+                                  ? GetSelectedEffectiveValue() - m_target - change_fee\n+                                  : GetSelectedValue() - m_target;\n+\n+    if (change_budget < min_change) {\n+        return 0;\n+    }\n+\n+    return change_budget;\n+}",
      "path": "src/wallet/coinselection.cpp",
      "position": null,
      "original_position": 34,
      "commit_id": "4fef5344288e454460b80db0316294e1ec1ad8ad",
      "original_commit_id": "83bf6ab231af6db030cab876b169551f438c2499",
      "in_reply_to_id": 932593733,
      "user": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done",
      "created_at": "2022-08-09T07:28:52Z",
      "updated_at": "2022-08-09T07:28:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25647#discussion_r940995100",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/940995100"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25647"
        }
      },
      "start_line": null,
      "original_start_line": 489,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 512,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/941005409",
      "pull_request_review_id": 1066248893,
      "id": 941005409,
      "node_id": "PRRC_kwDOABII5844Fpph",
      "diff_hunk": "@@ -406,9 +406,15 @@ CAmount GenerateChangeTarget(CAmount payment_value, FastRandomContext& rng)\n     }\n }\n \n-void SelectionResult::ComputeAndSetWaste(CAmount change_cost)\n+void SelectionResult::ComputeAndSetWaste(const CAmount min_change, const CAmount change_cost, const CAmount change_fee)",
      "path": "src/wallet/coinselection.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "4fef5344288e454460b80db0316294e1ec1ad8ad",
      "original_commit_id": "45ee9d3a737cc23babb9200c4d75d7dae4dc6700",
      "in_reply_to_id": 932633319,
      "user": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done",
      "created_at": "2022-08-09T07:39:36Z",
      "updated_at": "2022-08-09T07:39:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25647#discussion_r941005409",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/941005409"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25647"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 409,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/941007231",
      "pull_request_review_id": 1066251440,
      "id": 941007231,
      "node_id": "PRRC_kwDOABII5844FqF_",
      "diff_hunk": "@@ -156,7 +156,7 @@ std::optional<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_poo\n     for (const size_t& i : best_selection) {\n         result.AddInput(utxo_pool.at(i));\n     }\n-    result.ComputeAndSetWaste(CAmount{0});\n+    result.ComputeAndSetWaste(cost_of_change, cost_of_change, CAmount{0});",
      "path": "src/wallet/coinselection.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "4fef5344288e454460b80db0316294e1ec1ad8ad",
      "original_commit_id": "45ee9d3a737cc23babb9200c4d75d7dae4dc6700",
      "in_reply_to_id": 932626345,
      "user": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Technically yes, but it doesn't matter in this case because BnB would never have change more than `cost_of_change`.\r\n\r\nI'd say a better way to fix it is to use `min_viable_change` for the upper bound of BnB. But I don't want to do expand the scope of this PR. Can we leave it for the follow up?",
      "created_at": "2022-08-09T07:41:31Z",
      "updated_at": "2022-08-09T07:41:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25647#discussion_r941007231",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/941007231"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25647"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 159,
      "original_line": 159,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/941646567",
      "pull_request_review_id": 1067162564,
      "id": 941646567,
      "node_id": "PRRC_kwDOABII5844IGLn",
      "diff_hunk": "@@ -745,6 +745,13 @@ static BResult<CreatedTransactionResult> CreateTransactionInternal(\n     coin_selection_params.m_change_fee = coin_selection_params.m_effective_feerate.GetFee(coin_selection_params.change_output_size);\n     coin_selection_params.m_cost_of_change = coin_selection_params.m_discard_feerate.GetFee(coin_selection_params.change_spend_size) + coin_selection_params.m_change_fee;\n \n+    // The smallest change amount should be:\n+    // 1. at least equal to dust threshold\n+    // 2. at least 1 sat greater than fees to spend it at m_discard_feerate\n+    const auto dust = GetDustThreshold(change_prototype_txout, coin_selection_params.m_discard_feerate);\n+    const auto change_spend_fee = coin_selection_params.m_discard_feerate.GetFee(coin_selection_params.change_spend_size);\n+    coin_selection_params.min_change = std::max(change_spend_fee + 1, dust);",
      "path": "src/wallet/spend.cpp",
      "position": null,
      "original_position": 9,
      "commit_id": "4fef5344288e454460b80db0316294e1ec1ad8ad",
      "original_commit_id": "ef71f057495b0a152667857ab277c0e76e76ad76",
      "in_reply_to_id": 932586988,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The changeless window is based on `cost_of_change`, not just `change_spend_fee`. So the minimum viable change should be `cost_of_change + 1`.\r\n\r\nI agree that the `+ 1` should not be applied to the dust threshold. The existing behavior throws away change when it is `< dust` or `<= cost of change`. So that's equivalent to `< dust` or `< cost of change + 1`.",
      "created_at": "2022-08-09T18:00:23Z",
      "updated_at": "2022-08-09T18:00:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25647#discussion_r941646567",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/941646567"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25647"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 753,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/941793621",
      "pull_request_review_id": 1067370582,
      "id": 941793621,
      "node_id": "PRRC_kwDOABII5844IqFV",
      "diff_hunk": "@@ -745,6 +745,13 @@ static BResult<CreatedTransactionResult> CreateTransactionInternal(\n     coin_selection_params.m_change_fee = coin_selection_params.m_effective_feerate.GetFee(coin_selection_params.change_output_size);\n     coin_selection_params.m_cost_of_change = coin_selection_params.m_discard_feerate.GetFee(coin_selection_params.change_spend_size) + coin_selection_params.m_change_fee;\n \n+    // The smallest change amount should be:\n+    // 1. at least equal to dust threshold\n+    // 2. at least 1 sat greater than fees to spend it at m_discard_feerate\n+    const auto dust = GetDustThreshold(change_prototype_txout, coin_selection_params.m_discard_feerate);\n+    const auto change_spend_fee = coin_selection_params.m_discard_feerate.GetFee(coin_selection_params.change_spend_size);\n+    coin_selection_params.min_change = std::max(change_spend_fee + 1, dust);",
      "path": "src/wallet/spend.cpp",
      "position": null,
      "original_position": 9,
      "commit_id": "4fef5344288e454460b80db0316294e1ec1ad8ad",
      "original_commit_id": "ef71f057495b0a152667857ab277c0e76e76ad76",
      "in_reply_to_id": 932586988,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Err, yes. You're right, the `+1` should be on `coin_selection_params.m_cost_of_change`",
      "created_at": "2022-08-09T20:54:29Z",
      "updated_at": "2022-08-09T20:54:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25647#discussion_r941793621",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/941793621"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25647"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 753,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/942692791",
      "pull_request_review_id": 1068632292,
      "id": 942692791,
      "node_id": "PRRC_kwDOABII5844MFm3",
      "diff_hunk": "@@ -745,6 +745,13 @@ static BResult<CreatedTransactionResult> CreateTransactionInternal(\n     coin_selection_params.m_change_fee = coin_selection_params.m_effective_feerate.GetFee(coin_selection_params.change_output_size);\n     coin_selection_params.m_cost_of_change = coin_selection_params.m_discard_feerate.GetFee(coin_selection_params.change_spend_size) + coin_selection_params.m_change_fee;\n \n+    // The smallest change amount should be:\n+    // 1. at least equal to dust threshold\n+    // 2. at least 1 sat greater than fees to spend it at m_discard_feerate\n+    const auto dust = GetDustThreshold(change_prototype_txout, coin_selection_params.m_discard_feerate);\n+    const auto change_spend_fee = coin_selection_params.m_discard_feerate.GetFee(coin_selection_params.change_spend_size);\n+    coin_selection_params.min_change = std::max(change_spend_fee + 1, dust);",
      "path": "src/wallet/spend.cpp",
      "position": null,
      "original_position": 9,
      "commit_id": "4fef5344288e454460b80db0316294e1ec1ad8ad",
      "original_commit_id": "ef71f057495b0a152667857ab277c0e76e76ad76",
      "in_reply_to_id": 932586988,
      "user": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "No. `cost_of_change` = `change_fee` + `change_spend_fee`. When we compare `change` To `min_viable_change` the `change_fee` is already deducted.\r\n\r\nThink about it from this perspective, you don't want to create a change output that is less than what it takes to spend it.",
      "created_at": "2022-08-10T16:59:03Z",
      "updated_at": "2022-08-10T16:59:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25647#discussion_r942692791",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/942692791"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25647"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 753,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/942696762",
      "pull_request_review_id": 1068637952,
      "id": 942696762,
      "node_id": "PRRC_kwDOABII5844MGk6",
      "diff_hunk": "@@ -745,6 +745,13 @@ static BResult<CreatedTransactionResult> CreateTransactionInternal(\n     coin_selection_params.m_change_fee = coin_selection_params.m_effective_feerate.GetFee(coin_selection_params.change_output_size);\n     coin_selection_params.m_cost_of_change = coin_selection_params.m_discard_feerate.GetFee(coin_selection_params.change_spend_size) + coin_selection_params.m_change_fee;\n \n+    // The smallest change amount should be:\n+    // 1. at least equal to dust threshold\n+    // 2. at least 1 sat greater than fees to spend it at m_discard_feerate\n+    const auto dust = GetDustThreshold(change_prototype_txout, coin_selection_params.m_discard_feerate);\n+    const auto change_spend_fee = coin_selection_params.m_discard_feerate.GetFee(coin_selection_params.change_spend_size);\n+    coin_selection_params.min_change = std::max(change_spend_fee + 1, dust);",
      "path": "src/wallet/spend.cpp",
      "position": null,
      "original_position": 9,
      "commit_id": "4fef5344288e454460b80db0316294e1ec1ad8ad",
      "original_commit_id": "ef71f057495b0a152667857ab277c0e76e76ad76",
      "in_reply_to_id": 932586988,
      "user": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You're right though, that right now we drop change smaller than `cost_of_change` after deducting the `change_fee`. So the `change_fee` is deducted twice. Which I think is a bug. But I need to disclose this in the description.\r\n\r\nUPD: oh.. I did disclose it already.. stupid me",
      "created_at": "2022-08-10T17:03:36Z",
      "updated_at": "2022-08-10T17:05:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25647#discussion_r942696762",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/942696762"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25647"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 753,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/942712817",
      "pull_request_review_id": 1068662081,
      "id": 942712817,
      "node_id": "PRRC_kwDOABII5844MKfx",
      "diff_hunk": "@@ -745,6 +745,13 @@ static BResult<CreatedTransactionResult> CreateTransactionInternal(\n     coin_selection_params.m_change_fee = coin_selection_params.m_effective_feerate.GetFee(coin_selection_params.change_output_size);\n     coin_selection_params.m_cost_of_change = coin_selection_params.m_discard_feerate.GetFee(coin_selection_params.change_spend_size) + coin_selection_params.m_change_fee;\n \n+    // The smallest change amount should be:\n+    // 1. at least equal to dust threshold\n+    // 2. at least 1 sat greater than fees to spend it at m_discard_feerate\n+    const auto dust = GetDustThreshold(change_prototype_txout, coin_selection_params.m_discard_feerate);\n+    const auto change_spend_fee = coin_selection_params.m_discard_feerate.GetFee(coin_selection_params.change_spend_size);\n+    coin_selection_params.min_change = std::max(change_spend_fee + 1, dust);",
      "path": "src/wallet/spend.cpp",
      "position": null,
      "original_position": 9,
      "commit_id": "4fef5344288e454460b80db0316294e1ec1ad8ad",
      "original_commit_id": "ef71f057495b0a152667857ab277c0e76e76ad76",
      "in_reply_to_id": 932586988,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah ok. That makes sense.",
      "created_at": "2022-08-10T17:22:08Z",
      "updated_at": "2022-08-10T17:22:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25647#discussion_r942712817",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/942712817"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25647"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 753,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/942818102",
      "pull_request_review_id": 1068807621,
      "id": 942818102,
      "node_id": "PRRC_kwDOABII5844MkM2",
      "diff_hunk": "@@ -745,6 +745,13 @@ static BResult<CreatedTransactionResult> CreateTransactionInternal(\n     coin_selection_params.m_change_fee = coin_selection_params.m_effective_feerate.GetFee(coin_selection_params.change_output_size);\n     coin_selection_params.m_cost_of_change = coin_selection_params.m_discard_feerate.GetFee(coin_selection_params.change_spend_size) + coin_selection_params.m_change_fee;\n \n+    // The smallest change amount should be:\n+    // 1. at least equal to dust threshold\n+    // 2. at least 1 sat greater than fees to spend it at m_discard_feerate\n+    const auto dust = GetDustThreshold(change_prototype_txout, coin_selection_params.m_discard_feerate);\n+    const auto change_spend_fee = coin_selection_params.m_discard_feerate.GetFee(coin_selection_params.change_spend_size);\n+    coin_selection_params.min_change = std::max(change_spend_fee + 1, dust);",
      "path": "src/wallet/spend.cpp",
      "position": null,
      "original_position": 9,
      "commit_id": "4fef5344288e454460b80db0316294e1ec1ad8ad",
      "original_commit_id": "ef71f057495b0a152667857ab277c0e76e76ad76",
      "in_reply_to_id": 932586988,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Okay, convinced. That all sounds right. Thanks for explaining",
      "created_at": "2022-08-10T19:22:18Z",
      "updated_at": "2022-08-10T19:22:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25647#discussion_r942818102",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/942818102"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25647"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 753,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/942837440",
      "pull_request_review_id": 1068833790,
      "id": 942837440,
      "node_id": "PRRC_kwDOABII5844Mo7A",
      "diff_hunk": "@@ -156,7 +156,7 @@ std::optional<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_poo\n     for (const size_t& i : best_selection) {\n         result.AddInput(utxo_pool.at(i));\n     }\n-    result.ComputeAndSetWaste(CAmount{0});\n+    result.ComputeAndSetWaste(cost_of_change, cost_of_change, CAmount{0});",
      "path": "src/wallet/coinselection.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "4fef5344288e454460b80db0316294e1ec1ad8ad",
      "original_commit_id": "45ee9d3a737cc23babb9200c4d75d7dae4dc6700",
      "in_reply_to_id": 932626345,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah right, and since this call originates from `SelectCoinsBnB(…)` that's sufficient of course.\r\n\r\nYeah, doing the BnB upper bound separately sounds fine to me.",
      "created_at": "2022-08-10T19:35:47Z",
      "updated_at": "2022-08-10T19:36:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25647#discussion_r942837440",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/942837440"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25647"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 159,
      "original_line": 159,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/942856543",
      "pull_request_review_id": 1068861504,
      "id": 942856543,
      "node_id": "PRRC_kwDOABII5844Mtlf",
      "diff_hunk": "@@ -489,31 +489,19 @@ std::optional<SelectionResult> ChooseSelectionResult(const CWallet& wallet, cons\n     // Vector of results. We will choose the best one based on waste.\n     std::vector<SelectionResult> results;\n \n-    // Note that unlike KnapsackSolver, we do not include the fee for creating a change output as BnB will not create a change output.\n-    std::vector<OutputGroup> positive_groups = GroupOutputs(wallet, available_coins, coin_selection_params, eligibility_filter, true /* positive_only */);\n+    std::vector<OutputGroup> positive_groups = GroupOutputs(wallet, available_coins, coin_selection_params, eligibility_filter, /*positive_only=*/true);\n     if (auto bnb_result{SelectCoinsBnB(positive_groups, nTargetValue, coin_selection_params.m_cost_of_change)}) {\n         results.push_back(*bnb_result);\n     }\n \n     // The knapsack solver has some legacy behavior where it will spend dust outputs. We retain this behavior, so don't filter for positive only here.\n-    std::vector<OutputGroup> all_groups = GroupOutputs(wallet, available_coins, coin_selection_params, eligibility_filter, false /* positive_only */);\n-    CAmount target_with_change = nTargetValue;\n-    // While nTargetValue includes the transaction fees for non-input things, it does not include the fee for creating a change output.\n-    // So we need to include that for KnapsackSolver and SRD as well, as we are expecting to create a change output.\n-    if (!coin_selection_params.m_subtract_fee_outputs) {\n-        target_with_change += coin_selection_params.m_change_fee;\n-    }\n-    if (auto knapsack_result{KnapsackSolver(all_groups, target_with_change, coin_selection_params.m_min_change_target, coin_selection_params.rng_fast)}) {\n+    std::vector<OutputGroup> all_groups = GroupOutputs(wallet, available_coins, coin_selection_params, eligibility_filter, /*positive_only=*/false);\n+    if (auto knapsack_result{KnapsackSolver(all_groups, nTargetValue, coin_selection_params.m_min_change_target, coin_selection_params.rng_fast)}) {",
      "path": "src/wallet/spend.cpp",
      "position": null,
      "original_position": 21,
      "commit_id": "4fef5344288e454460b80db0316294e1ec1ad8ad",
      "original_commit_id": "98d5dd26aec30ec63b555afc844281a4a04bd0fb",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Just a headscratcher: \r\nIn the commit message of “wallet: accurate SelectionResult::m_target” (98d5dd26aec30ec63b555afc844281a4a04bd0fb) you write:\r\n\r\n> SelectionResult::m_target should be equal to actual selection target.\r\n> Selection target is the sum of all recipient amounts plus non input fees.\r\n> So we need to remove change_fee from the m_target. It's safe because change\r\n> target is always greater than the change fee, so we can always cover fees\r\n> if change output is created.\r\n\r\nIt's not clear to me why the change target is always greater than change fee. Are you just alluding to the minimum change being more than the change fee even beyond 1,000 s/vB, or does the change fee actually get added anywhere that I'm missing?",
      "created_at": "2022-08-10T20:01:08Z",
      "updated_at": "2022-08-10T20:58:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25647#discussion_r942856543",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/942856543"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25647"
        }
      },
      "start_line": null,
      "original_start_line": 499,
      "start_side": "LEFT",
      "line": null,
      "original_line": 499,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/942894465",
      "pull_request_review_id": 1068861504,
      "id": 942894465,
      "node_id": "PRRC_kwDOABII5844M22B",
      "diff_hunk": "@@ -123,6 +123,10 @@ struct CoinSelectionParams {\n     /** Mininmum change to target in Knapsack solver: select coins to cover the payment and\n      * at least this value of change. */\n     CAmount m_min_change_target{0};\n+    /** Minimum amount for creating a change output.\n+     * If change budget is smaller than min_change then we forgo creation of change output.\n+     */\n+    CAmount min_viable_change{0};",
      "path": "src/wallet/coinselection.h",
      "position": 7,
      "original_position": 7,
      "commit_id": "4fef5344288e454460b80db0316294e1ec1ad8ad",
      "original_commit_id": "84f871db7bc2e74c5b9ebdd4690a9eb5c79ef334",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: \r\nIn wallet: calculate and store min_change (84f871db7bc2e74c5b9ebdd4690a9eb5c79ef334) the change introduces now `min_viable_change` but the commit message still says `min_change`.",
      "created_at": "2022-08-10T20:49:55Z",
      "updated_at": "2022-08-10T20:58:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25647#discussion_r942894465",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/942894465"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25647"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 129,
      "original_line": 129,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/943202084",
      "pull_request_review_id": 1069319334,
      "id": 943202084,
      "node_id": "PRRC_kwDOABII5844OB8k",
      "diff_hunk": "@@ -489,31 +489,19 @@ std::optional<SelectionResult> ChooseSelectionResult(const CWallet& wallet, cons\n     // Vector of results. We will choose the best one based on waste.\n     std::vector<SelectionResult> results;\n \n-    // Note that unlike KnapsackSolver, we do not include the fee for creating a change output as BnB will not create a change output.\n-    std::vector<OutputGroup> positive_groups = GroupOutputs(wallet, available_coins, coin_selection_params, eligibility_filter, true /* positive_only */);\n+    std::vector<OutputGroup> positive_groups = GroupOutputs(wallet, available_coins, coin_selection_params, eligibility_filter, /*positive_only=*/true);\n     if (auto bnb_result{SelectCoinsBnB(positive_groups, nTargetValue, coin_selection_params.m_cost_of_change)}) {\n         results.push_back(*bnb_result);\n     }\n \n     // The knapsack solver has some legacy behavior where it will spend dust outputs. We retain this behavior, so don't filter for positive only here.\n-    std::vector<OutputGroup> all_groups = GroupOutputs(wallet, available_coins, coin_selection_params, eligibility_filter, false /* positive_only */);\n-    CAmount target_with_change = nTargetValue;\n-    // While nTargetValue includes the transaction fees for non-input things, it does not include the fee for creating a change output.\n-    // So we need to include that for KnapsackSolver and SRD as well, as we are expecting to create a change output.\n-    if (!coin_selection_params.m_subtract_fee_outputs) {\n-        target_with_change += coin_selection_params.m_change_fee;\n-    }\n-    if (auto knapsack_result{KnapsackSolver(all_groups, target_with_change, coin_selection_params.m_min_change_target, coin_selection_params.rng_fast)}) {\n+    std::vector<OutputGroup> all_groups = GroupOutputs(wallet, available_coins, coin_selection_params, eligibility_filter, /*positive_only=*/false);\n+    if (auto knapsack_result{KnapsackSolver(all_groups, nTargetValue, coin_selection_params.m_min_change_target, coin_selection_params.rng_fast)}) {",
      "path": "src/wallet/spend.cpp",
      "position": null,
      "original_position": 21,
      "commit_id": "4fef5344288e454460b80db0316294e1ec1ad8ad",
      "original_commit_id": "98d5dd26aec30ec63b555afc844281a4a04bd0fb",
      "in_reply_to_id": 942856543,
      "user": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good catch. Indeed what I meant is that `m_change_target` is at least `CHANGE_LOWER` which in most cases should be bigger than `change_fee`, but at high enough fee rate it doesn't hold.\r\n\r\nMaybe we can ensure that `m_change_target` is at least `change_fee` by making `CHANGE_LOWER` dynamic and equal to `max(50000, change_fee)`. @Xekyo @achow101 wdyt?",
      "created_at": "2022-08-11T08:00:18Z",
      "updated_at": "2022-08-11T08:00:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25647#discussion_r943202084",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/943202084"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25647"
        }
      },
      "start_line": null,
      "original_start_line": 499,
      "start_side": "LEFT",
      "line": null,
      "original_line": 499,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/943203080",
      "pull_request_review_id": 1069320599,
      "id": 943203080,
      "node_id": "PRRC_kwDOABII5844OCMI",
      "diff_hunk": "@@ -123,6 +123,10 @@ struct CoinSelectionParams {\n     /** Mininmum change to target in Knapsack solver: select coins to cover the payment and\n      * at least this value of change. */\n     CAmount m_min_change_target{0};\n+    /** Minimum amount for creating a change output.\n+     * If change budget is smaller than min_change then we forgo creation of change output.\n+     */\n+    CAmount min_viable_change{0};",
      "path": "src/wallet/coinselection.h",
      "position": 7,
      "original_position": 7,
      "commit_id": "4fef5344288e454460b80db0316294e1ec1ad8ad",
      "original_commit_id": "84f871db7bc2e74c5b9ebdd4690a9eb5c79ef334",
      "in_reply_to_id": 942894465,
      "user": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "ack. I'll fix it on the next push",
      "created_at": "2022-08-11T08:01:23Z",
      "updated_at": "2022-08-11T08:01:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25647#discussion_r943203080",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/943203080"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25647"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 129,
      "original_line": 129,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/943528337",
      "pull_request_review_id": 1069781735,
      "id": 943528337,
      "node_id": "PRRC_kwDOABII5844PRmR",
      "diff_hunk": "@@ -489,31 +489,19 @@ std::optional<SelectionResult> ChooseSelectionResult(const CWallet& wallet, cons\n     // Vector of results. We will choose the best one based on waste.\n     std::vector<SelectionResult> results;\n \n-    // Note that unlike KnapsackSolver, we do not include the fee for creating a change output as BnB will not create a change output.\n-    std::vector<OutputGroup> positive_groups = GroupOutputs(wallet, available_coins, coin_selection_params, eligibility_filter, true /* positive_only */);\n+    std::vector<OutputGroup> positive_groups = GroupOutputs(wallet, available_coins, coin_selection_params, eligibility_filter, /*positive_only=*/true);\n     if (auto bnb_result{SelectCoinsBnB(positive_groups, nTargetValue, coin_selection_params.m_cost_of_change)}) {\n         results.push_back(*bnb_result);\n     }\n \n     // The knapsack solver has some legacy behavior where it will spend dust outputs. We retain this behavior, so don't filter for positive only here.\n-    std::vector<OutputGroup> all_groups = GroupOutputs(wallet, available_coins, coin_selection_params, eligibility_filter, false /* positive_only */);\n-    CAmount target_with_change = nTargetValue;\n-    // While nTargetValue includes the transaction fees for non-input things, it does not include the fee for creating a change output.\n-    // So we need to include that for KnapsackSolver and SRD as well, as we are expecting to create a change output.\n-    if (!coin_selection_params.m_subtract_fee_outputs) {\n-        target_with_change += coin_selection_params.m_change_fee;\n-    }\n-    if (auto knapsack_result{KnapsackSolver(all_groups, target_with_change, coin_selection_params.m_min_change_target, coin_selection_params.rng_fast)}) {\n+    std::vector<OutputGroup> all_groups = GroupOutputs(wallet, available_coins, coin_selection_params, eligibility_filter, /*positive_only=*/false);\n+    if (auto knapsack_result{KnapsackSolver(all_groups, nTargetValue, coin_selection_params.m_min_change_target, coin_selection_params.rng_fast)}) {",
      "path": "src/wallet/spend.cpp",
      "position": null,
      "original_position": 21,
      "commit_id": "4fef5344288e454460b80db0316294e1ec1ad8ad",
      "original_commit_id": "98d5dd26aec30ec63b555afc844281a4a04bd0fb",
      "in_reply_to_id": 942856543,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hmm, isn't `m_change_target` an unused field right now? ",
      "created_at": "2022-08-11T14:06:18Z",
      "updated_at": "2022-08-11T14:06:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25647#discussion_r943528337",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/943528337"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25647"
        }
      },
      "start_line": null,
      "original_start_line": 499,
      "start_side": "LEFT",
      "line": null,
      "original_line": 499,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/944140801",
      "pull_request_review_id": 1070632380,
      "id": 944140801,
      "node_id": "PRRC_kwDOABII5844RnIB",
      "diff_hunk": "@@ -489,31 +489,19 @@ std::optional<SelectionResult> ChooseSelectionResult(const CWallet& wallet, cons\n     // Vector of results. We will choose the best one based on waste.\n     std::vector<SelectionResult> results;\n \n-    // Note that unlike KnapsackSolver, we do not include the fee for creating a change output as BnB will not create a change output.\n-    std::vector<OutputGroup> positive_groups = GroupOutputs(wallet, available_coins, coin_selection_params, eligibility_filter, true /* positive_only */);\n+    std::vector<OutputGroup> positive_groups = GroupOutputs(wallet, available_coins, coin_selection_params, eligibility_filter, /*positive_only=*/true);\n     if (auto bnb_result{SelectCoinsBnB(positive_groups, nTargetValue, coin_selection_params.m_cost_of_change)}) {\n         results.push_back(*bnb_result);\n     }\n \n     // The knapsack solver has some legacy behavior where it will spend dust outputs. We retain this behavior, so don't filter for positive only here.\n-    std::vector<OutputGroup> all_groups = GroupOutputs(wallet, available_coins, coin_selection_params, eligibility_filter, false /* positive_only */);\n-    CAmount target_with_change = nTargetValue;\n-    // While nTargetValue includes the transaction fees for non-input things, it does not include the fee for creating a change output.\n-    // So we need to include that for KnapsackSolver and SRD as well, as we are expecting to create a change output.\n-    if (!coin_selection_params.m_subtract_fee_outputs) {\n-        target_with_change += coin_selection_params.m_change_fee;\n-    }\n-    if (auto knapsack_result{KnapsackSolver(all_groups, target_with_change, coin_selection_params.m_min_change_target, coin_selection_params.rng_fast)}) {\n+    std::vector<OutputGroup> all_groups = GroupOutputs(wallet, available_coins, coin_selection_params, eligibility_filter, /*positive_only=*/false);\n+    if (auto knapsack_result{KnapsackSolver(all_groups, nTargetValue, coin_selection_params.m_min_change_target, coin_selection_params.rng_fast)}) {",
      "path": "src/wallet/spend.cpp",
      "position": null,
      "original_position": 21,
      "commit_id": "4fef5344288e454460b80db0316294e1ec1ad8ad",
      "original_commit_id": "98d5dd26aec30ec63b555afc844281a4a04bd0fb",
      "in_reply_to_id": 942856543,
      "user": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@furszy #25825 ",
      "created_at": "2022-08-12T06:07:52Z",
      "updated_at": "2022-08-12T06:07:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25647#discussion_r944140801",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/944140801"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25647"
        }
      },
      "start_line": null,
      "original_start_line": 499,
      "start_side": "LEFT",
      "line": null,
      "original_line": 499,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/945488419",
      "pull_request_review_id": 1072316574,
      "id": 945488419,
      "node_id": "PRRC_kwDOABII5844WwIj",
      "diff_hunk": "@@ -123,6 +123,10 @@ struct CoinSelectionParams {\n     /** Mininmum change to target in Knapsack solver: select coins to cover the payment and\n      * at least this value of change. */\n     CAmount m_min_change_target{0};\n+    /** Minimum amount for creating a change output.\n+     * If change budget is smaller than min_change then we forgo creation of change output.\n+     */\n+    CAmount min_viable_change{0};",
      "path": "src/wallet/coinselection.h",
      "position": 7,
      "original_position": 7,
      "commit_id": "4fef5344288e454460b80db0316294e1ec1ad8ad",
      "original_commit_id": "84f871db7bc2e74c5b9ebdd4690a9eb5c79ef334",
      "in_reply_to_id": 942894465,
      "user": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done",
      "created_at": "2022-08-15T07:35:35Z",
      "updated_at": "2022-08-15T07:35:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25647#discussion_r945488419",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/945488419"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25647"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 129,
      "original_line": 129,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/945488739",
      "pull_request_review_id": 1072317092,
      "id": 945488739,
      "node_id": "PRRC_kwDOABII5844WwNj",
      "diff_hunk": "@@ -489,31 +489,19 @@ std::optional<SelectionResult> ChooseSelectionResult(const CWallet& wallet, cons\n     // Vector of results. We will choose the best one based on waste.\n     std::vector<SelectionResult> results;\n \n-    // Note that unlike KnapsackSolver, we do not include the fee for creating a change output as BnB will not create a change output.\n-    std::vector<OutputGroup> positive_groups = GroupOutputs(wallet, available_coins, coin_selection_params, eligibility_filter, true /* positive_only */);\n+    std::vector<OutputGroup> positive_groups = GroupOutputs(wallet, available_coins, coin_selection_params, eligibility_filter, /*positive_only=*/true);\n     if (auto bnb_result{SelectCoinsBnB(positive_groups, nTargetValue, coin_selection_params.m_cost_of_change)}) {\n         results.push_back(*bnb_result);\n     }\n \n     // The knapsack solver has some legacy behavior where it will spend dust outputs. We retain this behavior, so don't filter for positive only here.\n-    std::vector<OutputGroup> all_groups = GroupOutputs(wallet, available_coins, coin_selection_params, eligibility_filter, false /* positive_only */);\n-    CAmount target_with_change = nTargetValue;\n-    // While nTargetValue includes the transaction fees for non-input things, it does not include the fee for creating a change output.\n-    // So we need to include that for KnapsackSolver and SRD as well, as we are expecting to create a change output.\n-    if (!coin_selection_params.m_subtract_fee_outputs) {\n-        target_with_change += coin_selection_params.m_change_fee;\n-    }\n-    if (auto knapsack_result{KnapsackSolver(all_groups, target_with_change, coin_selection_params.m_min_change_target, coin_selection_params.rng_fast)}) {\n+    std::vector<OutputGroup> all_groups = GroupOutputs(wallet, available_coins, coin_selection_params, eligibility_filter, /*positive_only=*/false);\n+    if (auto knapsack_result{KnapsackSolver(all_groups, nTargetValue, coin_selection_params.m_min_change_target, coin_selection_params.rng_fast)}) {",
      "path": "src/wallet/spend.cpp",
      "position": null,
      "original_position": 21,
      "commit_id": "4fef5344288e454460b80db0316294e1ec1ad8ad",
      "original_commit_id": "98d5dd26aec30ec63b555afc844281a4a04bd0fb",
      "in_reply_to_id": 942856543,
      "user": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've added c8cf08ea743e430c2bf3fe46439594257b0937e5 to address this. Please review",
      "created_at": "2022-08-15T07:36:16Z",
      "updated_at": "2022-08-15T07:36:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25647#discussion_r945488739",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/945488739"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25647"
        }
      },
      "start_line": null,
      "original_start_line": 499,
      "start_side": "LEFT",
      "line": null,
      "original_line": 499,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/947240848",
      "pull_request_review_id": 1074764501,
      "id": 947240848,
      "node_id": "PRRC_kwDOABII5844db-Q",
      "diff_hunk": "@@ -433,6 +433,16 @@ void SelectionResult::AddInput(const OutputGroup& group)\n     m_use_effective = !group.m_subtract_fee_outputs;\n }\n \n+void SelectionResult::Merge(const SelectionResult& other)\n+{\n+    m_target += other.m_target;\n+    m_use_effective |= other.m_use_effective;\n+    if (m_algo == SelectionAlgorithm::MANUAL) {\n+        m_algo = other.m_algo;",
      "path": "src/wallet/coinselection.cpp",
      "position": 9,
      "original_position": 9,
      "commit_id": "4fef5344288e454460b80db0316294e1ec1ad8ad",
      "original_commit_id": "f8e796348b644c011ad9a8312356d4426c16cc4b",
      "in_reply_to_id": null,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "for the current sources, this code block is a no-op.\r\n\r\nthe only time when we are entering here is when we merge a manual selection result with another manual selection result.",
      "created_at": "2022-08-16T20:53:42Z",
      "updated_at": "2022-08-17T03:32:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25647#discussion_r947240848",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/947240848"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25647"
        }
      },
      "start_line": 451,
      "original_start_line": 440,
      "start_side": "RIGHT",
      "line": 452,
      "original_line": 441,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/947419147",
      "pull_request_review_id": 1074764501,
      "id": 947419147,
      "node_id": "PRRC_kwDOABII5844eHgL",
      "diff_hunk": "@@ -855,6 +855,13 @@ static util::Result<CreatedTransactionResult> CreateTransactionInternal(\n \n     coin_selection_params.m_min_change_target = GenerateChangeTarget(std::floor(recipients_sum / vecSend.size()), coin_selection_params.m_change_fee, rng_fast);\n \n+    // The smallest change amount should be:\n+    // 1. at least equal to dust threshold\n+    // 2. at least 1 sat greater than fees to spend it at m_discard_feerate\n+    const auto dust = GetDustThreshold(change_prototype_txout, coin_selection_params.m_discard_feerate);\n+    const auto change_spend_fee = coin_selection_params.m_discard_feerate.GetFee(coin_selection_params.change_spend_size);\n+    coin_selection_params.min_viable_change = std::max(change_spend_fee + 1, dust);",
      "path": "src/wallet/spend.cpp",
      "position": 9,
      "original_position": 9,
      "commit_id": "4fef5344288e454460b80db0316294e1ec1ad8ad",
      "original_commit_id": "72cad28da05cfce9e4950f2dc5a709da41d251f4",
      "in_reply_to_id": null,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "hmm, this doesn't seems to be right:\r\n\r\n1) The dust amount is taken from --> `GetDustThreshold` which receives the change output, serializes it and uses magic numbers to calculate the input vsize (it's a general minimum input vsize calculation for an output), then calls `discard_fee.Get(vsize)` with it to get the dust amount.\r\n\r\n2. The `change_spend_fee` is taken from --> `discard_fee.Get(change_spend_size)` , where `change_spend_size` is the result of `CalculateMaximumSignedInputSize(output)` which is the real vsize calculation of a signed input that spends the change output (we don't hardcode numbers here, we create the input and sign it).\r\n\r\n\r\nIn other words:\r\n\r\nThe only difference between the `dust` and `change_spend_fee` variables is the vsize calculation (both are doing `m_discard_fee.GetFee(vsize)`), and:\r\n\r\n- for `dust`, vsize is calculated from hardcoded numbers to get the minimum theoretical possible size.\r\n- for `change_spend_fee`, vsize is calculated creating an input and dummy signing it.\r\n\r\nSo, `dust` will always be smaller than `change_spend_fee` right?",
      "created_at": "2022-08-17T03:31:22Z",
      "updated_at": "2022-08-17T03:38:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25647#discussion_r947419147",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/947419147"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25647"
        }
      },
      "start_line": 858,
      "original_start_line": 858,
      "start_side": "RIGHT",
      "line": 863,
      "original_line": 863,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/947421219",
      "pull_request_review_id": 1075000504,
      "id": 947421219,
      "node_id": "PRRC_kwDOABII5844eIAj",
      "diff_hunk": "@@ -855,6 +855,13 @@ static util::Result<CreatedTransactionResult> CreateTransactionInternal(\n \n     coin_selection_params.m_min_change_target = GenerateChangeTarget(std::floor(recipients_sum / vecSend.size()), coin_selection_params.m_change_fee, rng_fast);\n \n+    // The smallest change amount should be:\n+    // 1. at least equal to dust threshold\n+    // 2. at least 1 sat greater than fees to spend it at m_discard_feerate\n+    const auto dust = GetDustThreshold(change_prototype_txout, coin_selection_params.m_discard_feerate);\n+    const auto change_spend_fee = coin_selection_params.m_discard_feerate.GetFee(coin_selection_params.change_spend_size);\n+    coin_selection_params.min_viable_change = std::max(change_spend_fee + 1, dust);",
      "path": "src/wallet/spend.cpp",
      "position": 9,
      "original_position": 9,
      "commit_id": "4fef5344288e454460b80db0316294e1ec1ad8ad",
      "original_commit_id": "72cad28da05cfce9e4950f2dc5a709da41d251f4",
      "in_reply_to_id": 947419147,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Extra note, had a great convo about this topic with @theStack. He mentioned that you might wanted to use `wallet.chain().relayDustFee()` instead of `coin_selection_params.m_discard_feerate` in the dust amount calculation?",
      "created_at": "2022-08-17T03:37:26Z",
      "updated_at": "2022-08-17T04:10:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25647#discussion_r947421219",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/947421219"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25647"
        }
      },
      "start_line": 858,
      "original_start_line": 858,
      "start_side": "RIGHT",
      "line": 863,
      "original_line": 863,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/947427949",
      "pull_request_review_id": 1075008974,
      "id": 947427949,
      "node_id": "PRRC_kwDOABII5844eJpt",
      "diff_hunk": "@@ -855,6 +855,13 @@ static util::Result<CreatedTransactionResult> CreateTransactionInternal(\n \n     coin_selection_params.m_min_change_target = GenerateChangeTarget(std::floor(recipients_sum / vecSend.size()), coin_selection_params.m_change_fee, rng_fast);\n \n+    // The smallest change amount should be:\n+    // 1. at least equal to dust threshold\n+    // 2. at least 1 sat greater than fees to spend it at m_discard_feerate\n+    const auto dust = GetDustThreshold(change_prototype_txout, coin_selection_params.m_discard_feerate);\n+    const auto change_spend_fee = coin_selection_params.m_discard_feerate.GetFee(coin_selection_params.change_spend_size);\n+    coin_selection_params.min_viable_change = std::max(change_spend_fee + 1, dust);",
      "path": "src/wallet/spend.cpp",
      "position": 9,
      "original_position": 9,
      "commit_id": "4fef5344288e454460b80db0316294e1ec1ad8ad",
      "original_commit_id": "72cad28da05cfce9e4950f2dc5a709da41d251f4",
      "in_reply_to_id": 947419147,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What's implemented here matches the behavior in master. For this PR, I think this is correct.\r\n\r\nHowever we should probably use `m_long_term_feerate` for calculating the change spend fee rather than the discard feerate. This would make it match how we calculate \"future spends\" for all of our inputs.\r\n\r\n> you might wanted to use `wallet.chain().relayDustFee()` instead of `coin_selection_params.m_discard_feerate` in the dust amount calculation?\r\n\r\nI think discard feerate is correct here. It is the maximum of the longest term fee estimate and the dust relay fee. As the name suggests, it is the feerate that we are willing to discard at, so I think it makes sense to keep it as is.",
      "created_at": "2022-08-17T03:57:01Z",
      "updated_at": "2022-08-17T03:57:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25647#discussion_r947427949",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/947427949"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25647"
        }
      },
      "start_line": 858,
      "original_start_line": 858,
      "start_side": "RIGHT",
      "line": 863,
      "original_line": 863,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/947790824",
      "pull_request_review_id": 1075522530,
      "id": 947790824,
      "node_id": "PRRC_kwDOABII5844fiPo",
      "diff_hunk": "@@ -855,6 +855,13 @@ static util::Result<CreatedTransactionResult> CreateTransactionInternal(\n \n     coin_selection_params.m_min_change_target = GenerateChangeTarget(std::floor(recipients_sum / vecSend.size()), coin_selection_params.m_change_fee, rng_fast);\n \n+    // The smallest change amount should be:\n+    // 1. at least equal to dust threshold\n+    // 2. at least 1 sat greater than fees to spend it at m_discard_feerate\n+    const auto dust = GetDustThreshold(change_prototype_txout, coin_selection_params.m_discard_feerate);\n+    const auto change_spend_fee = coin_selection_params.m_discard_feerate.GetFee(coin_selection_params.change_spend_size);\n+    coin_selection_params.min_viable_change = std::max(change_spend_fee + 1, dust);",
      "path": "src/wallet/spend.cpp",
      "position": 9,
      "original_position": 9,
      "commit_id": "4fef5344288e454460b80db0316294e1ec1ad8ad",
      "original_commit_id": "72cad28da05cfce9e4950f2dc5a709da41d251f4",
      "in_reply_to_id": 947419147,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "\r\n> > you might wanted to use `wallet.chain().relayDustFee()` instead of `coin_selection_params.m_discard_feerate` in the dust amount calculation?\r\n> \r\n> I think discard feerate is correct here. It is the maximum of the longest term fee estimate and the dust relay fee. As the name suggests, it is the feerate that we are willing to discard at, so I think it makes sense to keep it as is.\r\n\r\nIsn't the point of setting the smallest change amount to \"at least equal to dust threshold\"  to ensure that the created tx can enter our own mempool now, rather than somewhen in the future (considering that we run a node with a possibly customized `-dustrelayfee=...` option)? As an example, if one would set `-dustrelayfee=...` to a high value and `discardfee=0`, a tx with a change output could be created that is rejected from our mempool (due to being `IsDust` and therefore `!IsStandardTx()`) and thus can't be sent. That's why my assumption was that we want to call `GetDustThreshold` with the dustRelayFee instead:\r\n\r\n```diff\r\n-    const auto dust = GetDustThreshold(change_prototype_txout, coin_selection_params.m_discard_feerate);\r\n+    const auto dust = GetDustThreshold(change_prototype_txout, wallet.chain.relayDustFee());\r\n```\r\n(Am I missing something?)",
      "created_at": "2022-08-17T11:03:03Z",
      "updated_at": "2022-08-17T11:03:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25647#discussion_r947790824",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/947790824"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25647"
        }
      },
      "start_line": 858,
      "original_start_line": 858,
      "start_side": "RIGHT",
      "line": 863,
      "original_line": 863,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948032834",
      "pull_request_review_id": 1075866112,
      "id": 948032834,
      "node_id": "PRRC_kwDOABII5844gdVC",
      "diff_hunk": "@@ -855,6 +855,13 @@ static util::Result<CreatedTransactionResult> CreateTransactionInternal(\n \n     coin_selection_params.m_min_change_target = GenerateChangeTarget(std::floor(recipients_sum / vecSend.size()), coin_selection_params.m_change_fee, rng_fast);\n \n+    // The smallest change amount should be:\n+    // 1. at least equal to dust threshold\n+    // 2. at least 1 sat greater than fees to spend it at m_discard_feerate\n+    const auto dust = GetDustThreshold(change_prototype_txout, coin_selection_params.m_discard_feerate);\n+    const auto change_spend_fee = coin_selection_params.m_discard_feerate.GetFee(coin_selection_params.change_spend_size);\n+    coin_selection_params.min_viable_change = std::max(change_spend_fee + 1, dust);",
      "path": "src/wallet/spend.cpp",
      "position": 9,
      "original_position": 9,
      "commit_id": "4fef5344288e454460b80db0316294e1ec1ad8ad",
      "original_commit_id": "72cad28da05cfce9e4950f2dc5a709da41d251f4",
      "in_reply_to_id": 947419147,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> As an example, if one would set `-dustrelayfee=...` to a high value and `discardfee=0`, a tx with a change output could be created that is rejected from our mempool\r\n\r\nThen the dustrelayfee is what `m_discard_fee` is set to. See `GetDiscardRate` in src/wallet/fees.cpp.",
      "created_at": "2022-08-17T14:42:24Z",
      "updated_at": "2022-08-17T14:42:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25647#discussion_r948032834",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948032834"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25647"
        }
      },
      "start_line": 858,
      "original_start_line": 858,
      "start_side": "RIGHT",
      "line": 863,
      "original_line": 863,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948470959",
      "pull_request_review_id": 1076478118,
      "id": 948470959,
      "node_id": "PRRC_kwDOABII5844iISv",
      "diff_hunk": "@@ -855,6 +855,13 @@ static util::Result<CreatedTransactionResult> CreateTransactionInternal(\n \n     coin_selection_params.m_min_change_target = GenerateChangeTarget(std::floor(recipients_sum / vecSend.size()), coin_selection_params.m_change_fee, rng_fast);\n \n+    // The smallest change amount should be:\n+    // 1. at least equal to dust threshold\n+    // 2. at least 1 sat greater than fees to spend it at m_discard_feerate\n+    const auto dust = GetDustThreshold(change_prototype_txout, coin_selection_params.m_discard_feerate);\n+    const auto change_spend_fee = coin_selection_params.m_discard_feerate.GetFee(coin_selection_params.change_spend_size);\n+    coin_selection_params.min_viable_change = std::max(change_spend_fee + 1, dust);",
      "path": "src/wallet/spend.cpp",
      "position": 9,
      "original_position": 9,
      "commit_id": "4fef5344288e454460b80db0316294e1ec1ad8ad",
      "original_commit_id": "72cad28da05cfce9e4950f2dc5a709da41d251f4",
      "in_reply_to_id": 947419147,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> > As an example, if one would set `-dustrelayfee=...` to a high value and `discardfee=0`, a tx with a change output could be created that is rejected from our mempool\r\n> \r\n> Then the dustrelayfee is what `m_discard_fee` is set to. See `GetDiscardRate` in src/wallet/fees.cpp.\r\n\r\nOh right, I completely overlooked this following line of code, d'oh! 🤦‍♂️ \r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/a8f69541ad53a76d5f69044ba829069d225a4af1/src/wallet/fees.cpp#L91",
      "created_at": "2022-08-17T22:03:43Z",
      "updated_at": "2022-08-17T22:03:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25647#discussion_r948470959",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948470959"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25647"
        }
      },
      "start_line": 858,
      "original_start_line": 858,
      "start_side": "RIGHT",
      "line": 863,
      "original_line": 863,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951047082",
      "pull_request_review_id": 1079912086,
      "id": 951047082,
      "node_id": "PRRC_kwDOABII5844r9Oq",
      "diff_hunk": "@@ -855,6 +855,13 @@ static util::Result<CreatedTransactionResult> CreateTransactionInternal(\n \n     coin_selection_params.m_min_change_target = GenerateChangeTarget(std::floor(recipients_sum / vecSend.size()), coin_selection_params.m_change_fee, rng_fast);\n \n+    // The smallest change amount should be:\n+    // 1. at least equal to dust threshold\n+    // 2. at least 1 sat greater than fees to spend it at m_discard_feerate\n+    const auto dust = GetDustThreshold(change_prototype_txout, coin_selection_params.m_discard_feerate);\n+    const auto change_spend_fee = coin_selection_params.m_discard_feerate.GetFee(coin_selection_params.change_spend_size);\n+    coin_selection_params.min_viable_change = std::max(change_spend_fee + 1, dust);",
      "path": "src/wallet/spend.cpp",
      "position": 9,
      "original_position": 9,
      "commit_id": "4fef5344288e454460b80db0316294e1ec1ad8ad",
      "original_commit_id": "72cad28da05cfce9e4950f2dc5a709da41d251f4",
      "in_reply_to_id": 947419147,
      "user": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I believe we should get rid of `discard fee rate` and replace it with `dust relay fee rate` and `long term fee rate`. For this PR I decide to stick to the current implementation to limit the scope. I'll open an issue to deprecate `discard fee rate` if there is none yet.",
      "created_at": "2022-08-22T06:13:33Z",
      "updated_at": "2022-08-22T06:13:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25647#discussion_r951047082",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951047082"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25647"
        }
      },
      "start_line": 858,
      "original_start_line": 858,
      "start_side": "RIGHT",
      "line": 863,
      "original_line": 863,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951391774",
      "pull_request_review_id": 1080401027,
      "id": 951391774,
      "node_id": "PRRC_kwDOABII5844tRYe",
      "diff_hunk": "@@ -480,4 +485,24 @@ std::string GetAlgorithmName(const SelectionAlgorithm algo)\n     }\n     assert(false);\n }\n+\n+CAmount SelectionResult::GetChange(const CAmount min_viable_change, const CAmount change_fee) const\n+{\n+    // change = SUM(inputs) - SUM(outputs) - fees\n+    // 1) With SFFO we don't pay any fees\n+    // 2) Otherwise we pay all the fees:\n+    //  - input fees are covered by GetSelectedEffectiveValue()\n+    //  - non_input_fee is included in m_target\n+    //  - change_fee\n+    const CAmount change = m_use_effective\n+                           ? GetSelectedEffectiveValue() - m_target - change_fee\n+                           : GetSelectedValue() - m_target;",
      "path": "src/wallet/coinselection.cpp",
      "position": 27,
      "original_position": 27,
      "commit_id": "4fef5344288e454460b80db0316294e1ec1ad8ad",
      "original_commit_id": "15e97a6886902ebb378829993a972dc52558aa92",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In “wallet: add SelectionResult::GetChange” (15e97a6886902ebb378829993a972dc52558aa92):\r\n\r\nIf `m_target` includes the `non_input_fee`, but the recipient is supposed to pay for all fees, shouldn't SFFO branch here rather be `GetSelectedValue() - (m_target - non_input_fee)` or `GetSelectedValue() - recipients_sum`?",
      "created_at": "2022-08-22T12:41:49Z",
      "updated_at": "2022-08-22T13:10:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25647#discussion_r951391774",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951391774"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25647"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 505,
      "original_line": 499,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951412982",
      "pull_request_review_id": 1080401027,
      "id": 951412982,
      "node_id": "PRRC_kwDOABII5844tWj2",
      "diff_hunk": "@@ -607,12 +607,15 @@ std::optional<SelectionResult> SelectCoins(const CWallet& wallet, CoinsResult& a\n         Shuffle(available_coins.other.begin(), available_coins.other.end(), coin_selection_params.rng_fast);\n     }\n \n+    SelectionResult preselected(preset_inputs.GetSelectionAmount(), SelectionAlgorithm::MANUAL);\n+    preselected.AddInput(preset_inputs);\n+\n     // Coin Selection attempts to select inputs from a pool of eligible UTXOs to fund the\n     // transaction at a target feerate. If an attempt fails, more attempts may be made using a more\n     // permissive CoinEligibilityFilter.\n     std::optional<SelectionResult> res = [&] {\n         // Pre-selected inputs already cover the target amount.\n-        if (value_to_select <= 0) return std::make_optional(SelectionResult(nTargetValue, SelectionAlgorithm::MANUAL));\n+        if (value_to_select <= 0) return std::make_optional(SelectionResult(value_to_select, SelectionAlgorithm::MANUAL));",
      "path": "src/wallet/spend.cpp",
      "position": 13,
      "original_position": 13,
      "commit_id": "4fef5344288e454460b80db0316294e1ec1ad8ad",
      "original_commit_id": "e3210a722542a9cb5f7e4be72470dbe488c281fd",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In “wallet: account for preselected inputs in target” (e3210a722542a9cb5f7e4be72470dbe488c281fd):\r\n\r\nThis is a question about the commit message:\r\nSorry, if I'm being dense, but how was “deducting the effective values of the preselected inputs from `m_target`” leading to a different result than “creating a separate SelectionResult with the target set to the effective values of the preselected inputs and then starting the selection targeting the delta between that and the search target”?\r\n\r\nIt sounds to me that in both cases that would be `m_target - effective_value_of_preselection` under the hood? I assume there is a subtle difference here, but it's not obvious to me from the description. Is the difference that once we use `m_target` and “search target” is now composed differently? Please feel free to ignore if this has been covered elsewhere, and I just missed it.\r\n\r\n(Edited to clarify that I'm inquiring about the commit message.)",
      "created_at": "2022-08-22T13:02:29Z",
      "updated_at": "2022-08-22T16:25:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25647#discussion_r951412982",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951412982"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25647"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 618,
      "original_line": 618,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951634669",
      "pull_request_review_id": 1080783554,
      "id": 951634669,
      "node_id": "PRRC_kwDOABII5844uMrt",
      "diff_hunk": "@@ -480,4 +485,24 @@ std::string GetAlgorithmName(const SelectionAlgorithm algo)\n     }\n     assert(false);\n }\n+\n+CAmount SelectionResult::GetChange(const CAmount min_viable_change, const CAmount change_fee) const\n+{\n+    // change = SUM(inputs) - SUM(outputs) - fees\n+    // 1) With SFFO we don't pay any fees\n+    // 2) Otherwise we pay all the fees:\n+    //  - input fees are covered by GetSelectedEffectiveValue()\n+    //  - non_input_fee is included in m_target\n+    //  - change_fee\n+    const CAmount change = m_use_effective\n+                           ? GetSelectedEffectiveValue() - m_target - change_fee\n+                           : GetSelectedValue() - m_target;",
      "path": "src/wallet/coinselection.cpp",
      "position": 27,
      "original_position": 27,
      "commit_id": "4fef5344288e454460b80db0316294e1ec1ad8ad",
      "original_commit_id": "15e97a6886902ebb378829993a972dc52558aa92",
      "in_reply_to_id": 951391774,
      "user": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "With SFFO `non_input_fee` is always set to 0. We can probably make this simpler and cleaner, let's discuss it on the wallet meeting or in some other place.",
      "created_at": "2022-08-22T16:20:18Z",
      "updated_at": "2022-08-22T16:20:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25647#discussion_r951634669",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951634669"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25647"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 505,
      "original_line": 499,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951640526",
      "pull_request_review_id": 1080793121,
      "id": 951640526,
      "node_id": "PRRC_kwDOABII5844uOHO",
      "diff_hunk": "@@ -607,12 +607,15 @@ std::optional<SelectionResult> SelectCoins(const CWallet& wallet, CoinsResult& a\n         Shuffle(available_coins.other.begin(), available_coins.other.end(), coin_selection_params.rng_fast);\n     }\n \n+    SelectionResult preselected(preset_inputs.GetSelectionAmount(), SelectionAlgorithm::MANUAL);\n+    preselected.AddInput(preset_inputs);\n+\n     // Coin Selection attempts to select inputs from a pool of eligible UTXOs to fund the\n     // transaction at a target feerate. If an attempt fails, more attempts may be made using a more\n     // permissive CoinEligibilityFilter.\n     std::optional<SelectionResult> res = [&] {\n         // Pre-selected inputs already cover the target amount.\n-        if (value_to_select <= 0) return std::make_optional(SelectionResult(nTargetValue, SelectionAlgorithm::MANUAL));\n+        if (value_to_select <= 0) return std::make_optional(SelectionResult(value_to_select, SelectionAlgorithm::MANUAL));",
      "path": "src/wallet/spend.cpp",
      "position": 13,
      "original_position": 13,
      "commit_id": "4fef5344288e454460b80db0316294e1ec1ad8ad",
      "original_commit_id": "e3210a722542a9cb5f7e4be72470dbe488c281fd",
      "in_reply_to_id": 951412982,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The newly added `Merge` function will add the `m_target`s of the two `SelectionResults`. In the event that `value_to_select <= 0`, using `nTargetValue` in this `SelectionResult will add `nTargetValue` to the `m_target` stored in the preset inputs `SelectionResult`. This is incorrect because the target was already met and we're actually just adding it twice.\r\n\r\nAlso note how all of the other `SelectionResult`s returned by this function all use `value_to_select`.\r\n\r\n`m_target` is not modified after construction, and `nTargetValue` is not modified at all in this function - it includes any value already selected by preset inputs.",
      "created_at": "2022-08-22T16:25:08Z",
      "updated_at": "2022-08-22T16:26:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25647#discussion_r951640526",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951640526"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25647"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 618,
      "original_line": 618,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951642702",
      "pull_request_review_id": 1080797061,
      "id": 951642702,
      "node_id": "PRRC_kwDOABII5844uOpO",
      "diff_hunk": "@@ -480,4 +485,24 @@ std::string GetAlgorithmName(const SelectionAlgorithm algo)\n     }\n     assert(false);\n }\n+\n+CAmount SelectionResult::GetChange(const CAmount min_viable_change, const CAmount change_fee) const\n+{\n+    // change = SUM(inputs) - SUM(outputs) - fees\n+    // 1) With SFFO we don't pay any fees\n+    // 2) Otherwise we pay all the fees:\n+    //  - input fees are covered by GetSelectedEffectiveValue()\n+    //  - non_input_fee is included in m_target\n+    //  - change_fee\n+    const CAmount change = m_use_effective\n+                           ? GetSelectedEffectiveValue() - m_target - change_fee\n+                           : GetSelectedValue() - m_target;",
      "path": "src/wallet/coinselection.cpp",
      "position": 27,
      "original_position": 27,
      "commit_id": "4fef5344288e454460b80db0316294e1ec1ad8ad",
      "original_commit_id": "15e97a6886902ebb378829993a972dc52558aa92",
      "in_reply_to_id": 951391774,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah okay, that explains it. Thanks",
      "created_at": "2022-08-22T16:27:21Z",
      "updated_at": "2022-08-22T16:27:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25647#discussion_r951642702",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951642702"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25647"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 505,
      "original_line": 499,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951645933",
      "pull_request_review_id": 1080803886,
      "id": 951645933,
      "node_id": "PRRC_kwDOABII5844uPbt",
      "diff_hunk": "@@ -607,12 +607,15 @@ std::optional<SelectionResult> SelectCoins(const CWallet& wallet, CoinsResult& a\n         Shuffle(available_coins.other.begin(), available_coins.other.end(), coin_selection_params.rng_fast);\n     }\n \n+    SelectionResult preselected(preset_inputs.GetSelectionAmount(), SelectionAlgorithm::MANUAL);\n+    preselected.AddInput(preset_inputs);\n+\n     // Coin Selection attempts to select inputs from a pool of eligible UTXOs to fund the\n     // transaction at a target feerate. If an attempt fails, more attempts may be made using a more\n     // permissive CoinEligibilityFilter.\n     std::optional<SelectionResult> res = [&] {\n         // Pre-selected inputs already cover the target amount.\n-        if (value_to_select <= 0) return std::make_optional(SelectionResult(nTargetValue, SelectionAlgorithm::MANUAL));\n+        if (value_to_select <= 0) return std::make_optional(SelectionResult(value_to_select, SelectionAlgorithm::MANUAL));",
      "path": "src/wallet/spend.cpp",
      "position": 13,
      "original_position": 13,
      "commit_id": "4fef5344288e454460b80db0316294e1ec1ad8ad",
      "original_commit_id": "e3210a722542a9cb5f7e4be72470dbe488c281fd",
      "in_reply_to_id": 951412982,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Answering my own question after talking to S3RK out of band:\r\n\r\nThe correct `m_target` is needed to calculate the change in advance. Previously, the preselection approach was reducing `m_target` to reflect that some funds had already been picked, and now storing them in a SelectionResult and combining the two before calculating the change will be operating on basis of the correct `m_target` instead.",
      "created_at": "2022-08-22T16:30:55Z",
      "updated_at": "2022-08-22T16:30:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25647#discussion_r951645933",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951645933"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25647"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 618,
      "original_line": 618,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951649478",
      "pull_request_review_id": 1080810263,
      "id": 951649478,
      "node_id": "PRRC_kwDOABII5844uQTG",
      "diff_hunk": "@@ -607,12 +607,15 @@ std::optional<SelectionResult> SelectCoins(const CWallet& wallet, CoinsResult& a\n         Shuffle(available_coins.other.begin(), available_coins.other.end(), coin_selection_params.rng_fast);\n     }\n \n+    SelectionResult preselected(preset_inputs.GetSelectionAmount(), SelectionAlgorithm::MANUAL);\n+    preselected.AddInput(preset_inputs);\n+\n     // Coin Selection attempts to select inputs from a pool of eligible UTXOs to fund the\n     // transaction at a target feerate. If an attempt fails, more attempts may be made using a more\n     // permissive CoinEligibilityFilter.\n     std::optional<SelectionResult> res = [&] {\n         // Pre-selected inputs already cover the target amount.\n-        if (value_to_select <= 0) return std::make_optional(SelectionResult(nTargetValue, SelectionAlgorithm::MANUAL));\n+        if (value_to_select <= 0) return std::make_optional(SelectionResult(value_to_select, SelectionAlgorithm::MANUAL));",
      "path": "src/wallet/spend.cpp",
      "position": 13,
      "original_position": 13,
      "commit_id": "4fef5344288e454460b80db0316294e1ec1ad8ad",
      "original_commit_id": "e3210a722542a9cb5f7e4be72470dbe488c281fd",
      "in_reply_to_id": 951412982,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah thanks, @achow101, the case with the negative target makes it even clearer how this is better.",
      "created_at": "2022-08-22T16:34:43Z",
      "updated_at": "2022-08-22T16:34:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25647#discussion_r951649478",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951649478"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25647"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 618,
      "original_line": 618,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951657458",
      "pull_request_review_id": 1080826363,
      "id": 951657458,
      "node_id": "PRRC_kwDOABII5844uSPy",
      "diff_hunk": "@@ -607,12 +607,15 @@ std::optional<SelectionResult> SelectCoins(const CWallet& wallet, CoinsResult& a\n         Shuffle(available_coins.other.begin(), available_coins.other.end(), coin_selection_params.rng_fast);\n     }\n \n+    SelectionResult preselected(preset_inputs.GetSelectionAmount(), SelectionAlgorithm::MANUAL);\n+    preselected.AddInput(preset_inputs);\n+\n     // Coin Selection attempts to select inputs from a pool of eligible UTXOs to fund the\n     // transaction at a target feerate. If an attempt fails, more attempts may be made using a more\n     // permissive CoinEligibilityFilter.\n     std::optional<SelectionResult> res = [&] {\n         // Pre-selected inputs already cover the target amount.\n-        if (value_to_select <= 0) return std::make_optional(SelectionResult(nTargetValue, SelectionAlgorithm::MANUAL));\n+        if (value_to_select <= 0) return std::make_optional(SelectionResult(value_to_select, SelectionAlgorithm::MANUAL));",
      "path": "src/wallet/spend.cpp",
      "position": 13,
      "original_position": 13,
      "commit_id": "4fef5344288e454460b80db0316294e1ec1ad8ad",
      "original_commit_id": "e3210a722542a9cb5f7e4be72470dbe488c281fd",
      "in_reply_to_id": 951412982,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Small extra add to the topic in case you haven't seen it; the pre-set inputs workflow (this stuff) is being decoupled from the coin selection process in #25685. Which should make the flow clearer and less error-prone.",
      "created_at": "2022-08-22T16:42:59Z",
      "updated_at": "2022-08-22T16:43:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25647#discussion_r951657458",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951657458"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25647"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 618,
      "original_line": 618,
      "side": "RIGHT"
    }
  ]
}