{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30605",
    "id": 2009211458,
    "node_id": "PR_kwDOABII5853wiJC",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/30605",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/30605.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/30605.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30605",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30605/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30605/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30605/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/8eb70e3ca467ac66bc1f43e3e0b3338d63806ee5",
    "number": 30605,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "Cluster linearization: separate tests from tests-of-tests",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Part of the cluster mempool project: #30289\r\n \r\nThe current cluster linearization fuzz tests contain two tests which combine testing of production code with testing of the test code itself:\r\n* `clusterlin_search_finder`: establishes the correctness of `SearchCandidateFinder` by comparing against both `SimpleCandidateFinder` and `ExhaustiveCandidateFinder` (which is even more simple than `SimpleCandidateFinder`). If `SimpleCandidateFinder` works correctly, then this comparison with `ExhaustiveCandidateFinder` is redundant. If it isn't, we ought to find that in a test specific to `SimpleCandidateFinder` rather than as a side-effect of testing `SearchCandidateFinder`. Split this functionality out into a new `clusterlin_simple_finder`.\r\n* `clusterlin_linearize`: establishes the correctness of `Linearize` by comparing against both `SimpleLinearize` and literally every valid linearization for the cluster. Again, if `SimpleLinearize` works correctly, then this comparison with all valid linearizations is redundant, and if it isn't we should find it in a test for `SimpleLinearize`. Do so by splitting off that functionality into `clusterlin_simple_linearize`.\r\n\r\nAfter that, a few general improvements to the affected tests are made (comparing with linearizations and subsets read from the fuzz input, plus a performance improvement).",
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "created_at": "2024-08-07T20:48:19Z",
    "updated_at": "2024-10-04T11:56:29Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "f716a4f4954fe2ffdb8408b02ab1a5b8b211ab7f",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "sipa:202408_cluster_tests",
      "ref": "202408_cluster_tests",
      "sha": "8eb70e3ca467ac66bc1f43e3e0b3338d63806ee5",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 1458655,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDU4NjU1",
        "name": "bitcoin",
        "full_name": "sipa/bitcoin",
        "owner": {
          "login": "sipa",
          "id": 548488,
          "node_id": "MDQ6VXNlcjU0ODQ4OA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sipa",
          "html_url": "https://github.com/sipa",
          "followers_url": "https://api.github.com/users/sipa/followers",
          "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
          "organizations_url": "https://api.github.com/users/sipa/orgs",
          "repos_url": "https://api.github.com/users/sipa/repos",
          "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/sipa/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/sipa/bitcoin",
        "description": "Bitcoin integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/sipa/bitcoin",
        "archive_url": "https://api.github.com/repos/sipa/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/sipa/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/sipa/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/sipa/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/sipa/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/sipa/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/sipa/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/sipa/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/sipa/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/sipa/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/sipa/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/sipa/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/sipa/bitcoin/events",
        "forks_url": "https://api.github.com/repos/sipa/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/sipa/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/sipa/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/sipa/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/sipa/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/sipa/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/sipa/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/sipa/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/sipa/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/sipa/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/sipa/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/sipa/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/sipa/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/sipa/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/sipa/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/sipa/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:sipa/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/sipa/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/sipa/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/sipa/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/sipa/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/sipa/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/sipa/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/sipa/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/sipa/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/sipa/bitcoin/hooks",
        "svn_url": "https://github.com/sipa/bitcoin",
        "homepage": "http://www.bitcoin.org",
        "language": "TypeScript",
        "forks_count": 21,
        "stargazers_count": 88,
        "watchers_count": 88,
        "size": 248935,
        "default_branch": "lows",
        "open_issues_count": 16,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-10-01T21:51:54Z",
        "created_at": "2011-03-09T10:46:59Z",
        "updated_at": "2024-09-29T14:05:00Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "d812cf11896a2214467b6fa72d7b763bac6077c5",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 36226,
        "stargazers_count": 78679,
        "watchers_count": 78679,
        "size": 269385,
        "default_branch": "master",
        "open_issues_count": 674,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-10-04T10:22:12Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-10-04T11:45:44Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30605"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 173,
    "deletions": 48,
    "changed_files": 1,
    "commits": 6,
    "review_comments": 16,
    "comments": 3
  },
  "events": [
    {
      "event": "commented",
      "id": 2274322158,
      "node_id": "IC_kwDOABII586Hj2bu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2274322158",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-07T20:48:21Z",
      "updated_at": "2024-09-28T15:42:12Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/30605).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Stale ACK | [ismaelsadeeq](https://github.com/bitcoin/bitcoin/pull/30605#pullrequestreview-2333401196) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#30857](https://github.com/bitcoin/bitcoin/pull/30857) (cluster mempool: extend DepGraph functionality by sipa)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30605#issuecomment-2274322158",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30605"
    },
    {
      "event": "labeled",
      "id": 13798392755,
      "node_id": "LE_lADOABII586SSgymzwAAAAM2csOz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13798392755",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-07T22:13:34Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2274438968,
      "node_id": "IC_kwDOABII586HkS84",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2274438968",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-07T22:13:35Z",
      "updated_at": "2024-08-07T22:13:35Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/28483985918</sub>\n\n<details><summary>Hints</summary>\n\nMake sure to run all tests locally, according to the documentation.\n\nThe failure may happen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30605#issuecomment-2274438968",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30605"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13798817138,
      "node_id": "HRFPE_lADOABII586SSgymzwAAAAM2eT1y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13798817138",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-07T23:33:47Z"
    },
    {
      "event": "unlabeled",
      "id": 13800347387,
      "node_id": "UNLE_lADOABII586SSgymzwAAAAM2kJb7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13800347387",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-08T02:45:46Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 13805119351,
      "node_id": "LE_lADOABII586SSgymzwAAAAM22Wd3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13805119351",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-08T11:05:33Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14123792390,
      "node_id": "HRFPE_lADOABII586SSgymzwAAAANJ1_gG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14123792390",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-04T03:56:53Z"
    },
    {
      "event": "labeled",
      "id": 14278001007,
      "node_id": "LE_lADOABII586SSgymzwAAAANTCQFv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14278001007",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-16T18:38:10Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14293274266,
      "node_id": "HRFPE_lADOABII586SSgymzwAAAANT8g6a",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14293274266",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-17T15:24:24Z"
    },
    {
      "event": "commented",
      "id": 2356233258,
      "node_id": "IC_kwDOABII586McUQq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2356233258",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-17T15:24:38Z",
      "updated_at": "2024-09-17T15:24:38Z",
      "author_association": "MEMBER",
      "body": "Rebased after merge of #30286.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30605#issuecomment-2356233258",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30605"
    },
    {
      "event": "unlabeled",
      "id": 14294215447,
      "node_id": "UNLE_lADOABII586SSgymzwAAAANUAGsX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14294215447",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-17T16:36:25Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2326163992,
      "node_id": "PRR_kwDOABII586KpnIY",
      "url": null,
      "actor": null,
      "commit_id": "bf1b1b09ca4dd18b7848fb1807df8533cf930df7",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK",
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30605#pullrequestreview-2326163992",
      "submitted_at": "2024-09-24T19:09:40Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30605"
    },
    {
      "event": "reviewed",
      "id": 2328851273,
      "node_id": "PRR_kwDOABII586Kz3NJ",
      "url": null,
      "actor": null,
      "commit_id": "bf1b1b09ca4dd18b7848fb1807df8533cf930df7",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code review bf1b1b09ca4dd18b7848fb1807df8533cf930df7\r\n\r\nThis is a nice refactor, really improve the cluster linearize test a lot.",
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30605#pullrequestreview-2328851273",
      "submitted_at": "2024-09-25T17:59:41Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30605"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14408257348,
      "node_id": "HRFPE_lADOABII586SSgymzwAAAANazI9E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14408257348",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-26T02:35:03Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14418127230,
      "node_id": "HRFPE_lADOABII586SSgymzwAAAANbYyl-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14418127230",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-26T14:53:25Z"
    },
    {
      "event": "reviewed",
      "id": 2333401196,
      "node_id": "PRR_kwDOABII586LFOBs",
      "url": null,
      "actor": null,
      "commit_id": "0cae0c487cb8b32b96f888a31e818f2a90f848cc",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code review ACK 0cae0c487cb8b32b96f888a31e818f2a90f848cc",
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30605#pullrequestreview-2333401196",
      "submitted_at": "2024-09-27T10:43:14Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30605"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGFkNGM2YmYzMGExMjMwNWQxNzE1Y2NhOTE2Y2FiM2NkNzFmOWZkNjA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ad4c6bf30a12305d1715cca916cab3cd71f9fd60",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ad4c6bf30a12305d1715cca916cab3cd71f9fd60",
      "tree": {
        "sha": "3e587039ae1ab2f4e9c1443b89f965acef798475",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3e587039ae1ab2f4e9c1443b89f965acef798475"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d812cf11896a2214467b6fa72d7b763bac6077c5",
          "sha": "d812cf11896a2214467b6fa72d7b763bac6077c5",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d812cf11896a2214467b6fa72d7b763bac6077c5"
        }
      ],
      "message": "clusterlin tests: count SimpleCandidateFinder iterations better\n\nOnly count the number of actual new subsets added. If the queue contains\na work item that completely covers a component, no transaction can be added\nto it without creating a disconnected component. In this case, also don't\ncount it as an iteration.\n\nWith this, the number of iterations performed by SimpleCandidateFinder is\nbounded by the number of distinct connected topologically-valid subsets of\nthe cluster.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-09-28T15:23:55Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-09-25T23:34:47Z"
      },
      "sha": "ad4c6bf30a12305d1715cca916cab3cd71f9fd60"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQ2NTQ2OWYxYzE2ZDNkMjFlODRiMzg2YWZhMDk3NTczMWI0MGVmNDU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/465469f1c16d3d21e84b386afa0975731b40ef45",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/465469f1c16d3d21e84b386afa0975731b40ef45",
      "tree": {
        "sha": "556db8cdddef9d6d98d7eb70a68524f3dd31f9e6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/556db8cdddef9d6d98d7eb70a68524f3dd31f9e6"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ad4c6bf30a12305d1715cca916cab3cd71f9fd60",
          "sha": "ad4c6bf30a12305d1715cca916cab3cd71f9fd60",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ad4c6bf30a12305d1715cca916cab3cd71f9fd60"
        }
      ],
      "message": "clusterlin tests: separate testing of Search- and SimpleCandidateFinder\n\nThis separates the existing fuzz test into:\n\n* clusterlin_search_finder: establishes SearchCandidateFinder's correctness using the\n                            simpler SimpleCandidateFinder.\n* clusterlin_simple_finder: establishes SimpleCandidateFinder's correctness using the\n                            (even) simpler ExhaustiveCandidateFinder.\n\nrather than trying to do both at once.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-09-28T15:23:55Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-08-07T17:40:47Z"
      },
      "sha": "465469f1c16d3d21e84b386afa0975731b40ef45"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQyYWE4NDIwMTI2MWVkMDg2NTA3NWFhZGI5ODQwZDYwZWUyNjIwNWU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d2aa84201261ed0865075aadb9840d60ee26205e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d2aa84201261ed0865075aadb9840d60ee26205e",
      "tree": {
        "sha": "b1af79860ebd9fdc10d4accd29f02464f4e26760",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b1af79860ebd9fdc10d4accd29f02464f4e26760"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/465469f1c16d3d21e84b386afa0975731b40ef45",
          "sha": "465469f1c16d3d21e84b386afa0975731b40ef45",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/465469f1c16d3d21e84b386afa0975731b40ef45"
        }
      ],
      "message": "clusterlin tests: separate testing of SimpleLinearize and Linearize\n\nThe separates the existing fuzz test into:\n\n* clusterlin_linearize: establishes the correctness of Linearize() using the\n                        simpler SimpleLinearize() function.\n* clusterlin_simple_linearize: establishes the correctness of SimpleLinearize() by\n                        comparing with all valid linearizations computed by\n                        std::next_permutation.\n\nrather than combining the first two into a single fuzz test.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-09-28T15:23:55Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-08-07T18:27:33Z"
      },
      "sha": "d2aa84201261ed0865075aadb9840d60ee26205e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGE2MTZmYjE0MmQ1ZTZiNGNiMjgyOGY1ODFmODcxMWI4MzZiNDI3ZTg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a616fb142d5e6b4cb2828f581f8711b836b427e8",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a616fb142d5e6b4cb2828f581f8711b836b427e8",
      "tree": {
        "sha": "0c272c1b1b333e2fb461fbc3648091017ba85f5b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0c272c1b1b333e2fb461fbc3648091017ba85f5b"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d2aa84201261ed0865075aadb9840d60ee26205e",
          "sha": "d2aa84201261ed0865075aadb9840d60ee26205e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d2aa84201261ed0865075aadb9840d60ee26205e"
        }
      ],
      "message": "clusterlin tests: optimize clusterlin_simple_linearize\n\nWhenever a non-topological permutation is encountered, fast forward to the\nlast permutation with the same non-topological prefix, skipping over\npotentially many permutations that are non-topological for the same reason.\n\nWith that, increase the checking of all permutations to clusters of size 8\ninstead of 7.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-09-28T15:38:50Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-09-26T02:18:33Z"
      },
      "sha": "a616fb142d5e6b4cb2828f581f8711b836b427e8"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDU2MDQwMjI2NGZjNmQ1NGYwM2JjNzIyMDJiZjYwNjhhMjJkOTA1NGM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/560402264fc6d54f03bc72202bf6068a22d9054c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/560402264fc6d54f03bc72202bf6068a22d9054c",
      "tree": {
        "sha": "ba6ab40a8729d475f5adf27248400d343bd6969a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ba6ab40a8729d475f5adf27248400d343bd6969a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a616fb142d5e6b4cb2828f581f8711b836b427e8",
          "sha": "a616fb142d5e6b4cb2828f581f8711b836b427e8",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a616fb142d5e6b4cb2828f581f8711b836b427e8"
        }
      ],
      "message": "clusterlin tests: compare with fuzz-provided topological sets",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-09-28T15:39:57Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-09-26T02:29:46Z"
      },
      "sha": "560402264fc6d54f03bc72202bf6068a22d9054c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDhlYjcwZTNjYTQ2N2FjNjZiYzFmNDNlM2UwYjMzMzhkNjM4MDZlZTU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8eb70e3ca467ac66bc1f43e3e0b3338d63806ee5",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8eb70e3ca467ac66bc1f43e3e0b3338d63806ee5",
      "tree": {
        "sha": "5315bcc30d5cdc8a50d98ddea9c25458177a9933",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5315bcc30d5cdc8a50d98ddea9c25458177a9933"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/560402264fc6d54f03bc72202bf6068a22d9054c",
          "sha": "560402264fc6d54f03bc72202bf6068a22d9054c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/560402264fc6d54f03bc72202bf6068a22d9054c"
        }
      ],
      "message": "clusterlin tests: compare with fuzz-provided linearizations",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-09-28T15:39:57Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-09-26T02:30:02Z"
      },
      "sha": "8eb70e3ca467ac66bc1f43e3e0b3338d63806ee5"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14440962175,
      "node_id": "HRFPE_lADOABII586SSgymzwAAAANcv5h_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14440962175",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-28T15:42:10Z"
    },
    {
      "event": "reviewed",
      "id": 2347653035,
      "node_id": "PRR_kwDOABII586L7ler",
      "url": null,
      "actor": null,
      "commit_id": "8eb70e3ca467ac66bc1f43e3e0b3338d63806ee5",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "I reviewed the latest changes in the last push \r\n\r\nCode review 8eb70e3ca467ac66bc1f43e3e0b3338d63806ee5\r\n\r\nChanges since my last review were\r\n\r\n1. Addressed my previous review comments.\r\n\r\n2. An optimization was introduced in the  `clusterlin_simple_linearize` fuzz test that skips to the last non-topological permutation.\r\nFor example, given transactions `[A, B, C, D, E]`.\r\nif A-B-C are a valid topological ancestor set, and the first permutation results in [A, E, B, C, D], which is not topologically valid, we can skip to [A, E, D, C, B]. \r\nThis optimization saves iterations, allowing us to increase the maximum dependency graph we can check to 8.\r\n\r\n3. Assert that the found subsets are compared against the first valid topological set, verifying that we achieve better results when optimal.\r\n\r\n4. Compared the optimal linearization to the default chunking of the dependency graph.\r\n\r\nOverall, the changes look good to me. I left some comments.\r\nI also have a single question regarding the process of marking topological set as done.\r\n",
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30605#pullrequestreview-2347653035",
      "submitted_at": "2024-10-04T11:24:21Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30605"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1775578705",
      "pull_request_review_id": 2328851273,
      "id": 1775578705,
      "node_id": "PRRC_kwDOABII585p1S5R",
      "diff_hunk": "@@ -74,6 +73,7 @@ class SimpleCandidateFinder\n                 // transactions that share ancestry with inc so far (which means only connected\n                 // sets will be considered).\n                 if (inc_none || inc.Overlaps(m_depgraph.Ancestors(split))) {\n+                    --iterations_left;",
      "path": "src/test/fuzz/cluster_linearize.cpp",
      "position": 12,
      "original_position": 12,
      "commit_id": "8eb70e3ca467ac66bc1f43e3e0b3338d63806ee5",
      "original_commit_id": "d5d6839fe7479ccd98f450081cfd76b478d1bf12",
      "in_reply_to_id": null,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I believe this new behavior is correct, as it reduces `iteration_left` when work is being done. This aligns with the behavior in `SearchCandidateFinder`.\r\n\r\nOn a side note, I think \"iterations\" might be a misnomer here. A more accurate term could be \"maximum optimization\" or \"optimizations left\".",
      "created_at": "2024-09-25T16:37:38Z",
      "updated_at": "2024-09-25T17:59:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30605#discussion_r1775578705",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1775578705"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30605"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 76,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1775638585",
      "pull_request_review_id": 2328851273,
      "id": 1775638585,
      "node_id": "PRRC_kwDOABII585p1hg5",
      "diff_hunk": "@@ -495,11 +494,93 @@ FUZZ_TARGET(clusterlin_ancestor_finder)\n \n static constexpr auto MAX_SIMPLE_ITERATIONS = 300000;\n \n+FUZZ_TARGET(clusterlin_simple_finder)\n+{\n+    // Verify that SimpleCandidateFinder works as expected by sanity checking the results\n+    // and comparing with the results from ExhaustiveCandidateFinder. Note that\n+    // SimpleCandidateFinder is only used in tests; the purpose of this fuzz test is to establish\n+    // confidence in SimpleCandidateFinder, so that it can be used to test SearchCandidateFinder\n+    // below.\n+\n+    // Retrieve a depgraph from the fuzz input.\n+    SpanReader reader(buffer);\n+    DepGraph<TestBitSet> depgraph;\n+    try {\n+        reader >> Using<DepGraphFormatter>(depgraph);\n+    } catch (const std::ios_base::failure&) {}\n+\n+    // Instantiate the SimpleCandidateFinder to be tested, and the ExhaustiveCandidateFinder it is\n+    // being tested against.\n+    SimpleCandidateFinder smp_finder(depgraph);\n+    ExhaustiveCandidateFinder exh_finder(depgraph);\n+\n+    auto todo = TestBitSet::Fill(depgraph.TxCount());\n+    while (todo.Any()) {\n+        assert(!smp_finder.AllDone());\n+        assert(!exh_finder.AllDone());\n+\n+        // Call SimpleCandidateFinder.\n+        auto [found, iterations_done] = smp_finder.FindCandidateSet(MAX_SIMPLE_ITERATIONS);\n+        bool optimal = (iterations_done != MAX_SIMPLE_ITERATIONS);\n+\n+        // Sanity check the result.\n+        assert(iterations_done <= MAX_SIMPLE_ITERATIONS);\n+        assert(found.transactions.Any());\n+        assert(found.transactions.IsSubsetOf(todo));\n+        assert(depgraph.FeeRate(found.transactions) == found.feerate);\n+        // Check that it is topologically valid.\n+        for (auto i : found.transactions) {\n+            assert(found.transactions.IsSupersetOf(depgraph.Ancestors(i) & todo));\n+        }\n+\n+        // At most 2^(N-1) iterations can be required: the number of non-empty connected subsets a\n+        // graph with N transactions can have.\n+        assert(iterations_done <= (uint64_t{1} << (todo.Count() - 1)));\n+\n+        // Perform quality checks only if SimpleCandidateFinder claims an optimal result.\n+        if (optimal) {\n+            // Optimal sets are always connected.\n+            assert(depgraph.IsConnected(found.transactions));\n+\n+            if (todo.Count() <= 12) {\n+                // Compare with ExhaustiveCandidateFinder. This quickly gets computationally\n+                // expensive for large clusters (O(2^n)), so only do it for sufficiently small ones.\n+                auto exhaustive = exh_finder.FindCandidateSet();\n+                assert(exhaustive.feerate == found.feerate);\n+            } else {\n+                // For larger todo sets, just test against every ancestor set ...\n+                for (auto t1 : todo) {\n+                    const auto& a1 = depgraph.Ancestors(t1);\n+                    assert(found.feerate >= depgraph.FeeRate(a1 & todo));\n+                }\n+                // and every union of two ancestor sets.\n+                for (auto t1 : todo) {\n+                    const auto& a1 = depgraph.Ancestors(t1);\n+                    for (auto t2 : todo - a1) {\n+                        const auto& a2 = depgraph.Ancestors(t2);\n+                        assert(found.feerate >= depgraph.FeeRate((a1 | a2) & todo));\n+                    }",
      "path": "src/test/fuzz/cluster_linearize.cpp",
      "position": null,
      "original_position": 97,
      "commit_id": "8eb70e3ca467ac66bc1f43e3e0b3338d63806ee5",
      "original_commit_id": "d5d6839fe7479ccd98f450081cfd76b478d1bf12",
      "in_reply_to_id": null,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This can be in the same loop above?\r\n\r\nWhy not just compare with the result of ancestor finder?",
      "created_at": "2024-09-25T17:11:42Z",
      "updated_at": "2024-09-25T17:59:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30605#discussion_r1775638585",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1775638585"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30605"
        }
      },
      "start_line": null,
      "original_start_line": 558,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 562,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1775651129",
      "pull_request_review_id": 2328851273,
      "id": 1775651129,
      "node_id": "PRRC_kwDOABII585p1kk5",
      "diff_hunk": "@@ -573,22 +650,20 @@ FUZZ_TARGET(clusterlin_search_finder)\n             assert(found.feerate >= simple.feerate);\n             if (simple_iters < MAX_SIMPLE_ITERATIONS) {\n                 assert(found.feerate == simple.feerate);\n-            }\n-\n-            // Compare with AncestorCandidateFinder;\n-            auto anc = anc_finder.FindCandidateSet();\n-            assert(found.feerate >= anc.feerate);\n-\n-            // Compare with ExhaustiveCandidateFinder. This quickly gets computationally expensive\n-            // for large clusters (O(2^n)), so only do it for sufficiently small ones.\n-            if (todo.Count() <= 12) {\n-                auto exhaustive = exh_finder.FindCandidateSet();\n-                assert(exhaustive.feerate == found.feerate);\n-                // Also compare ExhaustiveCandidateFinder with SimpleCandidateFinder (this is\n-                // primarily a test for SimpleCandidateFinder's correctness).\n-                assert(exhaustive.feerate >= simple.feerate);\n-                if (simple_iters < MAX_SIMPLE_ITERATIONS) {\n-                    assert(exhaustive.feerate == simple.feerate);\n+            } else {\n+                // If SimpleCandidateFinder couldn't guarantee an optimal result, also test\n+                // against every ancestor set ...\n+                for (auto t1 : todo) {\n+                    const auto& a1 = depgraph.Ancestors(t1);\n+                    assert(found.feerate >= depgraph.FeeRate(a1 & todo));\n+                }\n+                // and every union of two ancestor sets.\n+                for (auto t1 : todo) {\n+                    const auto& a1 = depgraph.Ancestors(t1);\n+                    for (auto t2 : todo - a1) {\n+                        const auto& a2 = depgraph.Ancestors(t2);\n+                        assert(found.feerate >= depgraph.FeeRate((a1 | a2) & todo));\n+                    }",
      "path": "src/test/fuzz/cluster_linearize.cpp",
      "position": null,
      "original_position": 195,
      "commit_id": "8eb70e3ca467ac66bc1f43e3e0b3338d63806ee5",
      "original_commit_id": "d5d6839fe7479ccd98f450081cfd76b478d1bf12",
      "in_reply_to_id": null,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "We could wrap this in a helper to be dry, as same code is used above.",
      "created_at": "2024-09-25T17:19:40Z",
      "updated_at": "2024-09-25T17:59:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30605#discussion_r1775651129",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1775651129"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30605"
        }
      },
      "start_line": null,
      "original_start_line": 655,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 666,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1775677456",
      "pull_request_review_id": 2328851273,
      "id": 1775677456,
      "node_id": "PRRC_kwDOABII585p1rAQ",
      "diff_hunk": "@@ -495,11 +494,93 @@ FUZZ_TARGET(clusterlin_ancestor_finder)\n \n static constexpr auto MAX_SIMPLE_ITERATIONS = 300000;\n \n+FUZZ_TARGET(clusterlin_simple_finder)\n+{\n+    // Verify that SimpleCandidateFinder works as expected by sanity checking the results\n+    // and comparing with the results from ExhaustiveCandidateFinder. Note that\n+    // SimpleCandidateFinder is only used in tests; the purpose of this fuzz test is to establish\n+    // confidence in SimpleCandidateFinder, so that it can be used to test SearchCandidateFinder\n+    // below.\n+\n+    // Retrieve a depgraph from the fuzz input.\n+    SpanReader reader(buffer);\n+    DepGraph<TestBitSet> depgraph;\n+    try {\n+        reader >> Using<DepGraphFormatter>(depgraph);\n+    } catch (const std::ios_base::failure&) {}\n+\n+    // Instantiate the SimpleCandidateFinder to be tested, and the ExhaustiveCandidateFinder it is\n+    // being tested against.\n+    SimpleCandidateFinder smp_finder(depgraph);\n+    ExhaustiveCandidateFinder exh_finder(depgraph);\n+\n+    auto todo = TestBitSet::Fill(depgraph.TxCount());\n+    while (todo.Any()) {\n+        assert(!smp_finder.AllDone());\n+        assert(!exh_finder.AllDone());\n+\n+        // Call SimpleCandidateFinder.\n+        auto [found, iterations_done] = smp_finder.FindCandidateSet(MAX_SIMPLE_ITERATIONS);\n+        bool optimal = (iterations_done != MAX_SIMPLE_ITERATIONS);\n+\n+        // Sanity check the result.\n+        assert(iterations_done <= MAX_SIMPLE_ITERATIONS);\n+        assert(found.transactions.Any());\n+        assert(found.transactions.IsSubsetOf(todo));\n+        assert(depgraph.FeeRate(found.transactions) == found.feerate);\n+        // Check that it is topologically valid.\n+        for (auto i : found.transactions) {\n+            assert(found.transactions.IsSupersetOf(depgraph.Ancestors(i) & todo));\n+        }\n+\n+        // At most 2^(N-1) iterations can be required: the number of non-empty connected subsets a\n+        // graph with N transactions can have.\n+        assert(iterations_done <= (uint64_t{1} << (todo.Count() - 1)));\n+\n+        // Perform quality checks only if SimpleCandidateFinder claims an optimal result.\n+        if (optimal) {\n+            // Optimal sets are always connected.\n+            assert(depgraph.IsConnected(found.transactions));\n+\n+            if (todo.Count() <= 12) {\n+                // Compare with ExhaustiveCandidateFinder. This quickly gets computationally\n+                // expensive for large clusters (O(2^n)), so only do it for sufficiently small ones.\n+                auto exhaustive = exh_finder.FindCandidateSet();\n+                assert(exhaustive.feerate == found.feerate);",
      "path": "src/test/fuzz/cluster_linearize.cpp",
      "position": 95,
      "original_position": 84,
      "commit_id": "8eb70e3ca467ac66bc1f43e3e0b3338d63806ee5",
      "original_commit_id": "d5d6839fe7479ccd98f450081cfd76b478d1bf12",
      "in_reply_to_id": null,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Should we also assert that the transactions in the set are the same?",
      "created_at": "2024-09-25T17:37:12Z",
      "updated_at": "2024-09-25T17:59:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30605#discussion_r1775677456",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1775677456"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30605"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 560,
      "original_line": 560,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1775682420",
      "pull_request_review_id": 2328851273,
      "id": 1775682420,
      "node_id": "PRRC_kwDOABII585p1sN0",
      "diff_hunk": "@@ -495,11 +494,93 @@ FUZZ_TARGET(clusterlin_ancestor_finder)\n \n static constexpr auto MAX_SIMPLE_ITERATIONS = 300000;\n \n+FUZZ_TARGET(clusterlin_simple_finder)\n+{\n+    // Verify that SimpleCandidateFinder works as expected by sanity checking the results\n+    // and comparing with the results from ExhaustiveCandidateFinder. Note that",
      "path": "src/test/fuzz/cluster_linearize.cpp",
      "position": null,
      "original_position": 35,
      "commit_id": "8eb70e3ca467ac66bc1f43e3e0b3338d63806ee5",
      "original_commit_id": "d5d6839fe7479ccd98f450081cfd76b478d1bf12",
      "in_reply_to_id": null,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe indicate that we only compare `SimpleCandidateFinder` with `ExhaustiveCandidateFinder` when we optimally found a subset and the cluster size is small.",
      "created_at": "2024-09-25T17:39:45Z",
      "updated_at": "2024-09-25T17:59:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30605#discussion_r1775682420",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1775682420"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30605"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 500,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1775732905",
      "pull_request_review_id": 2329130211,
      "id": 1775732905,
      "node_id": "PRRC_kwDOABII585p14ip",
      "diff_hunk": "@@ -74,6 +73,7 @@ class SimpleCandidateFinder\n                 // transactions that share ancestry with inc so far (which means only connected\n                 // sets will be considered).\n                 if (inc_none || inc.Overlaps(m_depgraph.Ancestors(split))) {\n+                    --iterations_left;",
      "path": "src/test/fuzz/cluster_linearize.cpp",
      "position": 12,
      "original_position": 12,
      "commit_id": "8eb70e3ca467ac66bc1f43e3e0b3338d63806ee5",
      "original_commit_id": "d5d6839fe7479ccd98f450081cfd76b478d1bf12",
      "in_reply_to_id": 1775578705,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "could be in it's own commit?",
      "created_at": "2024-09-25T18:04:21Z",
      "updated_at": "2024-09-25T18:04:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30605#discussion_r1775732905",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1775732905"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30605"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 76,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1776227563",
      "pull_request_review_id": 2329889173,
      "id": 1776227563,
      "node_id": "PRRC_kwDOABII585p3xTr",
      "diff_hunk": "@@ -74,6 +73,7 @@ class SimpleCandidateFinder\n                 // transactions that share ancestry with inc so far (which means only connected\n                 // sets will be considered).\n                 if (inc_none || inc.Overlaps(m_depgraph.Ancestors(split))) {\n+                    --iterations_left;",
      "path": "src/test/fuzz/cluster_linearize.cpp",
      "position": 12,
      "original_position": 12,
      "commit_id": "8eb70e3ca467ac66bc1f43e3e0b3338d63806ee5",
      "original_commit_id": "d5d6839fe7479ccd98f450081cfd76b478d1bf12",
      "in_reply_to_id": 1775578705,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've moved it to its own commit. I left the name `iterations_left` as I think calling it \"optimizations\" is misleading; most steps don't optimize anything. It's true that the iterations are not actually the loop's iterations anymore, but they're still very correlated to the number of iterations the algorithm makes.",
      "created_at": "2024-09-26T02:36:48Z",
      "updated_at": "2024-09-26T02:36:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30605#discussion_r1776227563",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1776227563"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30605"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 76,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1776231855",
      "pull_request_review_id": 2329894362,
      "id": 1776231855,
      "node_id": "PRRC_kwDOABII585p3yWv",
      "diff_hunk": "@@ -495,11 +494,93 @@ FUZZ_TARGET(clusterlin_ancestor_finder)\n \n static constexpr auto MAX_SIMPLE_ITERATIONS = 300000;\n \n+FUZZ_TARGET(clusterlin_simple_finder)\n+{\n+    // Verify that SimpleCandidateFinder works as expected by sanity checking the results\n+    // and comparing with the results from ExhaustiveCandidateFinder. Note that\n+    // SimpleCandidateFinder is only used in tests; the purpose of this fuzz test is to establish\n+    // confidence in SimpleCandidateFinder, so that it can be used to test SearchCandidateFinder\n+    // below.\n+\n+    // Retrieve a depgraph from the fuzz input.\n+    SpanReader reader(buffer);\n+    DepGraph<TestBitSet> depgraph;\n+    try {\n+        reader >> Using<DepGraphFormatter>(depgraph);\n+    } catch (const std::ios_base::failure&) {}\n+\n+    // Instantiate the SimpleCandidateFinder to be tested, and the ExhaustiveCandidateFinder it is\n+    // being tested against.\n+    SimpleCandidateFinder smp_finder(depgraph);\n+    ExhaustiveCandidateFinder exh_finder(depgraph);\n+\n+    auto todo = TestBitSet::Fill(depgraph.TxCount());\n+    while (todo.Any()) {\n+        assert(!smp_finder.AllDone());\n+        assert(!exh_finder.AllDone());\n+\n+        // Call SimpleCandidateFinder.\n+        auto [found, iterations_done] = smp_finder.FindCandidateSet(MAX_SIMPLE_ITERATIONS);\n+        bool optimal = (iterations_done != MAX_SIMPLE_ITERATIONS);\n+\n+        // Sanity check the result.\n+        assert(iterations_done <= MAX_SIMPLE_ITERATIONS);\n+        assert(found.transactions.Any());\n+        assert(found.transactions.IsSubsetOf(todo));\n+        assert(depgraph.FeeRate(found.transactions) == found.feerate);\n+        // Check that it is topologically valid.\n+        for (auto i : found.transactions) {\n+            assert(found.transactions.IsSupersetOf(depgraph.Ancestors(i) & todo));\n+        }\n+\n+        // At most 2^(N-1) iterations can be required: the number of non-empty connected subsets a\n+        // graph with N transactions can have.\n+        assert(iterations_done <= (uint64_t{1} << (todo.Count() - 1)));\n+\n+        // Perform quality checks only if SimpleCandidateFinder claims an optimal result.\n+        if (optimal) {\n+            // Optimal sets are always connected.\n+            assert(depgraph.IsConnected(found.transactions));\n+\n+            if (todo.Count() <= 12) {\n+                // Compare with ExhaustiveCandidateFinder. This quickly gets computationally\n+                // expensive for large clusters (O(2^n)), so only do it for sufficiently small ones.\n+                auto exhaustive = exh_finder.FindCandidateSet();\n+                assert(exhaustive.feerate == found.feerate);\n+            } else {\n+                // For larger todo sets, just test against every ancestor set ...\n+                for (auto t1 : todo) {\n+                    const auto& a1 = depgraph.Ancestors(t1);\n+                    assert(found.feerate >= depgraph.FeeRate(a1 & todo));\n+                }\n+                // and every union of two ancestor sets.\n+                for (auto t1 : todo) {\n+                    const auto& a1 = depgraph.Ancestors(t1);\n+                    for (auto t2 : todo - a1) {\n+                        const auto& a2 = depgraph.Ancestors(t2);\n+                        assert(found.feerate >= depgraph.FeeRate((a1 | a2) & todo));\n+                    }",
      "path": "src/test/fuzz/cluster_linearize.cpp",
      "position": null,
      "original_position": 97,
      "commit_id": "8eb70e3ca467ac66bc1f43e3e0b3338d63806ee5",
      "original_commit_id": "d5d6839fe7479ccd98f450081cfd76b478d1bf12",
      "in_reply_to_id": 1775638585,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I was hoping to do a bit better than comparing with `AncestorCandidateFinder` (which only tries ancestor sets, not unions of two of them), but it's really not worth the complexity here. I've changed it to using `AncestorCandidateFinder` (here and below), and in a separate commit added an arbitrary subset (from fuzz input) to compare with.",
      "created_at": "2024-09-26T02:38:18Z",
      "updated_at": "2024-09-26T02:38:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30605#discussion_r1776231855",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1776231855"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30605"
        }
      },
      "start_line": null,
      "original_start_line": 558,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 562,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1776232273",
      "pull_request_review_id": 2329894934,
      "id": 1776232273,
      "node_id": "PRRC_kwDOABII585p3ydR",
      "diff_hunk": "@@ -573,22 +650,20 @@ FUZZ_TARGET(clusterlin_search_finder)\n             assert(found.feerate >= simple.feerate);\n             if (simple_iters < MAX_SIMPLE_ITERATIONS) {\n                 assert(found.feerate == simple.feerate);\n-            }\n-\n-            // Compare with AncestorCandidateFinder;\n-            auto anc = anc_finder.FindCandidateSet();\n-            assert(found.feerate >= anc.feerate);\n-\n-            // Compare with ExhaustiveCandidateFinder. This quickly gets computationally expensive\n-            // for large clusters (O(2^n)), so only do it for sufficiently small ones.\n-            if (todo.Count() <= 12) {\n-                auto exhaustive = exh_finder.FindCandidateSet();\n-                assert(exhaustive.feerate == found.feerate);\n-                // Also compare ExhaustiveCandidateFinder with SimpleCandidateFinder (this is\n-                // primarily a test for SimpleCandidateFinder's correctness).\n-                assert(exhaustive.feerate >= simple.feerate);\n-                if (simple_iters < MAX_SIMPLE_ITERATIONS) {\n-                    assert(exhaustive.feerate == simple.feerate);\n+            } else {\n+                // If SimpleCandidateFinder couldn't guarantee an optimal result, also test\n+                // against every ancestor set ...\n+                for (auto t1 : todo) {\n+                    const auto& a1 = depgraph.Ancestors(t1);\n+                    assert(found.feerate >= depgraph.FeeRate(a1 & todo));\n+                }\n+                // and every union of two ancestor sets.\n+                for (auto t1 : todo) {\n+                    const auto& a1 = depgraph.Ancestors(t1);\n+                    for (auto t2 : todo - a1) {\n+                        const auto& a2 = depgraph.Ancestors(t2);\n+                        assert(found.feerate >= depgraph.FeeRate((a1 | a2) & todo));\n+                    }",
      "path": "src/test/fuzz/cluster_linearize.cpp",
      "position": null,
      "original_position": 195,
      "commit_id": "8eb70e3ca467ac66bc1f43e3e0b3338d63806ee5",
      "original_commit_id": "d5d6839fe7479ccd98f450081cfd76b478d1bf12",
      "in_reply_to_id": 1775651129,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You're right that it shouldn't be repeated, but I don't think it's worth much effort to keep this. I've dropped it.",
      "created_at": "2024-09-26T02:38:49Z",
      "updated_at": "2024-09-26T02:38:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30605#discussion_r1776232273",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1776232273"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30605"
        }
      },
      "start_line": null,
      "original_start_line": 655,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 666,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1776235234",
      "pull_request_review_id": 2329898614,
      "id": 1776235234,
      "node_id": "PRRC_kwDOABII585p3zLi",
      "diff_hunk": "@@ -495,11 +494,93 @@ FUZZ_TARGET(clusterlin_ancestor_finder)\n \n static constexpr auto MAX_SIMPLE_ITERATIONS = 300000;\n \n+FUZZ_TARGET(clusterlin_simple_finder)\n+{\n+    // Verify that SimpleCandidateFinder works as expected by sanity checking the results\n+    // and comparing with the results from ExhaustiveCandidateFinder. Note that\n+    // SimpleCandidateFinder is only used in tests; the purpose of this fuzz test is to establish\n+    // confidence in SimpleCandidateFinder, so that it can be used to test SearchCandidateFinder\n+    // below.\n+\n+    // Retrieve a depgraph from the fuzz input.\n+    SpanReader reader(buffer);\n+    DepGraph<TestBitSet> depgraph;\n+    try {\n+        reader >> Using<DepGraphFormatter>(depgraph);\n+    } catch (const std::ios_base::failure&) {}\n+\n+    // Instantiate the SimpleCandidateFinder to be tested, and the ExhaustiveCandidateFinder it is\n+    // being tested against.\n+    SimpleCandidateFinder smp_finder(depgraph);\n+    ExhaustiveCandidateFinder exh_finder(depgraph);\n+\n+    auto todo = TestBitSet::Fill(depgraph.TxCount());\n+    while (todo.Any()) {\n+        assert(!smp_finder.AllDone());\n+        assert(!exh_finder.AllDone());\n+\n+        // Call SimpleCandidateFinder.\n+        auto [found, iterations_done] = smp_finder.FindCandidateSet(MAX_SIMPLE_ITERATIONS);\n+        bool optimal = (iterations_done != MAX_SIMPLE_ITERATIONS);\n+\n+        // Sanity check the result.\n+        assert(iterations_done <= MAX_SIMPLE_ITERATIONS);\n+        assert(found.transactions.Any());\n+        assert(found.transactions.IsSubsetOf(todo));\n+        assert(depgraph.FeeRate(found.transactions) == found.feerate);\n+        // Check that it is topologically valid.\n+        for (auto i : found.transactions) {\n+            assert(found.transactions.IsSupersetOf(depgraph.Ancestors(i) & todo));\n+        }\n+\n+        // At most 2^(N-1) iterations can be required: the number of non-empty connected subsets a\n+        // graph with N transactions can have.\n+        assert(iterations_done <= (uint64_t{1} << (todo.Count() - 1)));\n+\n+        // Perform quality checks only if SimpleCandidateFinder claims an optimal result.\n+        if (optimal) {\n+            // Optimal sets are always connected.\n+            assert(depgraph.IsConnected(found.transactions));\n+\n+            if (todo.Count() <= 12) {\n+                // Compare with ExhaustiveCandidateFinder. This quickly gets computationally\n+                // expensive for large clusters (O(2^n)), so only do it for sufficiently small ones.\n+                auto exhaustive = exh_finder.FindCandidateSet();\n+                assert(exhaustive.feerate == found.feerate);",
      "path": "src/test/fuzz/cluster_linearize.cpp",
      "position": 95,
      "original_position": 84,
      "commit_id": "8eb70e3ca467ac66bc1f43e3e0b3338d63806ee5",
      "original_commit_id": "d5d6839fe7479ccd98f450081cfd76b478d1bf12",
      "in_reply_to_id": 1775677456,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "They cannot be guaranteed to be identical; there may be multiple distinct optimal candidate sets. ",
      "created_at": "2024-09-26T02:39:35Z",
      "updated_at": "2024-09-26T02:39:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30605#discussion_r1776235234",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1776235234"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30605"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 560,
      "original_line": 560,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1777269039",
      "pull_request_review_id": 2331579052,
      "id": 1777269039,
      "node_id": "PRRC_kwDOABII585p7vkv",
      "diff_hunk": "@@ -495,11 +494,93 @@ FUZZ_TARGET(clusterlin_ancestor_finder)\n \n static constexpr auto MAX_SIMPLE_ITERATIONS = 300000;\n \n+FUZZ_TARGET(clusterlin_simple_finder)\n+{\n+    // Verify that SimpleCandidateFinder works as expected by sanity checking the results\n+    // and comparing with the results from ExhaustiveCandidateFinder. Note that",
      "path": "src/test/fuzz/cluster_linearize.cpp",
      "position": null,
      "original_position": 35,
      "commit_id": "8eb70e3ca467ac66bc1f43e3e0b3338d63806ee5",
      "original_commit_id": "d5d6839fe7479ccd98f450081cfd76b478d1bf12",
      "in_reply_to_id": 1775682420,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've improved the comments a bit.",
      "created_at": "2024-09-26T14:58:50Z",
      "updated_at": "2024-09-26T14:58:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30605#discussion_r1777269039",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1777269039"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30605"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 500,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1787476002",
      "pull_request_review_id": 2347653035,
      "id": 1787476002,
      "node_id": "PRRC_kwDOABII585qirgi",
      "diff_hunk": "@@ -495,11 +494,94 @@ FUZZ_TARGET(clusterlin_ancestor_finder)\n \n static constexpr auto MAX_SIMPLE_ITERATIONS = 300000;\n \n+FUZZ_TARGET(clusterlin_simple_finder)\n+{\n+    // Verify that SimpleCandidateFinder works as expected by sanity checking the results\n+    // and comparing them (if claimed to be optimal) against the sets found by\n+    // ExhaustiveCandidateFinder and AncestorCandidateFinder.\n+    //\n+    // Note that SimpleCandidateFinder is only used in tests; the purpose of this fuzz test is to\n+    // establish confidence in SimpleCandidateFinder, so that it can be used to test\n+    // SearchCandidateFinder below.\n+\n+    // Retrieve a depgraph from the fuzz input.\n+    SpanReader reader(buffer);\n+    DepGraph<TestBitSet> depgraph;\n+    try {\n+        reader >> Using<DepGraphFormatter>(depgraph);\n+    } catch (const std::ios_base::failure&) {}\n+\n+    // Instantiate the SimpleCandidateFinder to be tested, and the ExhaustiveCandidateFinder and\n+    // AncestorCandidateFinder it is being tested against.\n+    SimpleCandidateFinder smp_finder(depgraph);\n+    ExhaustiveCandidateFinder exh_finder(depgraph);\n+    AncestorCandidateFinder anc_finder(depgraph);\n+\n+    auto todo = TestBitSet::Fill(depgraph.TxCount());\n+    while (todo.Any()) {\n+        assert(!smp_finder.AllDone());\n+        assert(!exh_finder.AllDone());\n+        assert(!anc_finder.AllDone());\n+        assert(anc_finder.NumRemaining() == todo.Count());\n+\n+        // Call SimpleCandidateFinder.\n+        auto [found, iterations_done] = smp_finder.FindCandidateSet(MAX_SIMPLE_ITERATIONS);\n+        bool optimal = (iterations_done != MAX_SIMPLE_ITERATIONS);\n+\n+        // Sanity check the result.\n+        assert(iterations_done <= MAX_SIMPLE_ITERATIONS);\n+        assert(found.transactions.Any());\n+        assert(found.transactions.IsSubsetOf(todo));\n+        assert(depgraph.FeeRate(found.transactions) == found.feerate);\n+        // Check that it is topologically valid.\n+        for (auto i : found.transactions) {\n+            assert(found.transactions.IsSupersetOf(depgraph.Ancestors(i) & todo));\n+        }\n+\n+        // At most 2^(N-1) iterations can be required: the number of non-empty connected subsets a\n+        // graph with N transactions can have. If MAX_SIMPLE_ITERATIONS exceeds this number, the\n+        // result is necessarily optimal.\n+        assert(iterations_done <= (uint64_t{1} << (todo.Count() - 1)));\n+        if (MAX_SIMPLE_ITERATIONS > (uint64_t{1} << (todo.Count() - 1))) assert(optimal);\n+\n+        // Perform quality checks only if SimpleCandidateFinder claims an optimal result.\n+        if (optimal) {\n+            // Optimal sets are always connected.\n+            assert(depgraph.IsConnected(found.transactions));\n+\n+            // Compare with AncestorCandidateFinder.\n+            auto anc = anc_finder.FindCandidateSet();\n+            assert(anc.feerate <= found.feerate);\n+\n+            if (todo.Count() <= 12) {\n+                // Compare with ExhaustiveCandidateFinder. This quickly gets computationally\n+                // expensive for large clusters (O(2^n)), so only do it for sufficiently small ones.",
      "path": "src/test/fuzz/cluster_linearize.cpp",
      "position": 93,
      "original_position": 77,
      "commit_id": "8eb70e3ca467ac66bc1f43e3e0b3338d63806ee5",
      "original_commit_id": "465469f1c16d3d21e84b386afa0975731b40ef45",
      "in_reply_to_id": null,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is this not $O(N * 2{^N})$",
      "created_at": "2024-10-04T09:56:52Z",
      "updated_at": "2024-10-04T11:24:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30605#discussion_r1787476002",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1787476002"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30605"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 558,
      "original_line": 558,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1787508540",
      "pull_request_review_id": 2347653035,
      "id": 1787508540,
      "node_id": "PRRC_kwDOABII585qizc8",
      "diff_hunk": "@@ -495,11 +494,94 @@ FUZZ_TARGET(clusterlin_ancestor_finder)\n \n static constexpr auto MAX_SIMPLE_ITERATIONS = 300000;\n \n+FUZZ_TARGET(clusterlin_simple_finder)\n+{\n+    // Verify that SimpleCandidateFinder works as expected by sanity checking the results\n+    // and comparing them (if claimed to be optimal) against the sets found by\n+    // ExhaustiveCandidateFinder and AncestorCandidateFinder.\n+    //\n+    // Note that SimpleCandidateFinder is only used in tests; the purpose of this fuzz test is to\n+    // establish confidence in SimpleCandidateFinder, so that it can be used to test\n+    // SearchCandidateFinder below.\n+\n+    // Retrieve a depgraph from the fuzz input.\n+    SpanReader reader(buffer);\n+    DepGraph<TestBitSet> depgraph;\n+    try {\n+        reader >> Using<DepGraphFormatter>(depgraph);\n+    } catch (const std::ios_base::failure&) {}\n+\n+    // Instantiate the SimpleCandidateFinder to be tested, and the ExhaustiveCandidateFinder and\n+    // AncestorCandidateFinder it is being tested against.\n+    SimpleCandidateFinder smp_finder(depgraph);\n+    ExhaustiveCandidateFinder exh_finder(depgraph);\n+    AncestorCandidateFinder anc_finder(depgraph);\n+\n+    auto todo = TestBitSet::Fill(depgraph.TxCount());\n+    while (todo.Any()) {\n+        assert(!smp_finder.AllDone());\n+        assert(!exh_finder.AllDone());\n+        assert(!anc_finder.AllDone());\n+        assert(anc_finder.NumRemaining() == todo.Count());\n+\n+        // Call SimpleCandidateFinder.\n+        auto [found, iterations_done] = smp_finder.FindCandidateSet(MAX_SIMPLE_ITERATIONS);\n+        bool optimal = (iterations_done != MAX_SIMPLE_ITERATIONS);\n+\n+        // Sanity check the result.\n+        assert(iterations_done <= MAX_SIMPLE_ITERATIONS);\n+        assert(found.transactions.Any());\n+        assert(found.transactions.IsSubsetOf(todo));\n+        assert(depgraph.FeeRate(found.transactions) == found.feerate);\n+        // Check that it is topologically valid.\n+        for (auto i : found.transactions) {\n+            assert(found.transactions.IsSupersetOf(depgraph.Ancestors(i) & todo));\n+        }\n+\n+        // At most 2^(N-1) iterations can be required: the number of non-empty connected subsets a\n+        // graph with N transactions can have. If MAX_SIMPLE_ITERATIONS exceeds this number, the\n+        // result is necessarily optimal.\n+        assert(iterations_done <= (uint64_t{1} << (todo.Count() - 1)));\n+        if (MAX_SIMPLE_ITERATIONS > (uint64_t{1} << (todo.Count() - 1))) assert(optimal);\n+\n+        // Perform quality checks only if SimpleCandidateFinder claims an optimal result.\n+        if (optimal) {\n+            // Optimal sets are always connected.\n+            assert(depgraph.IsConnected(found.transactions));\n+\n+            // Compare with AncestorCandidateFinder.\n+            auto anc = anc_finder.FindCandidateSet();\n+            assert(anc.feerate <= found.feerate);\n+\n+            if (todo.Count() <= 12) {\n+                // Compare with ExhaustiveCandidateFinder. This quickly gets computationally\n+                // expensive for large clusters (O(2^n)), so only do it for sufficiently small ones.\n+                auto exhaustive = exh_finder.FindCandidateSet();\n+                assert(exhaustive.feerate == found.feerate);\n+            }\n+        }\n+\n+        // Find a topologically valid subset of transactions to remove from the graph.\n+        auto del_set = ReadTopologicalSet(depgraph, todo, reader);\n+        // If we did not find anything, use found itself, because we should remove something.\n+        if (del_set.None()) del_set = found.transactions;\n+        todo -= del_set;",
      "path": "src/test/fuzz/cluster_linearize.cpp",
      "position": 107,
      "original_position": 87,
      "commit_id": "8eb70e3ca467ac66bc1f43e3e0b3338d63806ee5",
      "original_commit_id": "465469f1c16d3d21e84b386afa0975731b40ef45",
      "in_reply_to_id": null,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I might be missing something here, so I would appreciate some clarification.\r\n\r\n1. Why don't we directly remove the candidate set transactions found by the search? \r\n2. It seems like there could be multiple valid topological sets at a given time. How does it know which set was actually removed?",
      "created_at": "2024-10-04T10:25:13Z",
      "updated_at": "2024-10-04T11:24:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30605#discussion_r1787508540",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1787508540"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30605"
        }
      },
      "start_line": 568,
      "original_start_line": 564,
      "start_side": "RIGHT",
      "line": 572,
      "original_line": 568,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1787549994",
      "pull_request_review_id": 2347653035,
      "id": 1787549994,
      "node_id": "PRRC_kwDOABII585qi9kq",
      "diff_hunk": "@@ -559,6 +559,10 @@ FUZZ_TARGET(clusterlin_simple_finder)\n                 auto exhaustive = exh_finder.FindCandidateSet();\n                 assert(exhaustive.feerate == found.feerate);\n             }\n+\n+            // Compare with a topological set read from the fuzz input.\n+            auto read_topo = ReadTopologicalSet(depgraph, todo, reader);",
      "path": "src/test/fuzz/cluster_linearize.cpp",
      "position": 99,
      "original_position": 6,
      "commit_id": "8eb70e3ca467ac66bc1f43e3e0b3338d63806ee5",
      "original_commit_id": "560402264fc6d54f03bc72202bf6068a22d9054c",
      "in_reply_to_id": null,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "We can cache the subset and then reuse it here and when finding topological subset to be deleted.\r\n",
      "created_at": "2024-10-04T11:02:37Z",
      "updated_at": "2024-10-04T11:24:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30605#discussion_r1787549994",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1787549994"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30605"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 564,
      "original_line": 564,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1787551272",
      "pull_request_review_id": 2347653035,
      "id": 1787551272,
      "node_id": "PRRC_kwDOABII585qi94o",
      "diff_hunk": "@@ -659,6 +663,10 @@ FUZZ_TARGET(clusterlin_search_finder)\n             // Compare with AncestorCandidateFinder;\n             auto anc = anc_finder.FindCandidateSet();\n             assert(found.feerate >= anc.feerate);\n+\n+            // Compare with a topological set read from the fuzz input.",
      "path": "src/test/fuzz/cluster_linearize.cpp",
      "position": 181,
      "original_position": 16,
      "commit_id": "8eb70e3ca467ac66bc1f43e3e0b3338d63806ee5",
      "original_commit_id": "560402264fc6d54f03bc72202bf6068a22d9054c",
      "in_reply_to_id": null,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Same  comment applies here as well. ",
      "created_at": "2024-10-04T11:03:49Z",
      "updated_at": "2024-10-04T11:24:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30605#discussion_r1787551272",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1787551272"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30605"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 667,
      "original_line": 667,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1787606089",
      "pull_request_review_id": 2347879063,
      "id": 1787606089,
      "node_id": "PRRC_kwDOABII585qjLRJ",
      "diff_hunk": "@@ -495,11 +494,94 @@ FUZZ_TARGET(clusterlin_ancestor_finder)\n \n static constexpr auto MAX_SIMPLE_ITERATIONS = 300000;\n \n+FUZZ_TARGET(clusterlin_simple_finder)\n+{\n+    // Verify that SimpleCandidateFinder works as expected by sanity checking the results\n+    // and comparing them (if claimed to be optimal) against the sets found by\n+    // ExhaustiveCandidateFinder and AncestorCandidateFinder.\n+    //\n+    // Note that SimpleCandidateFinder is only used in tests; the purpose of this fuzz test is to\n+    // establish confidence in SimpleCandidateFinder, so that it can be used to test\n+    // SearchCandidateFinder below.\n+\n+    // Retrieve a depgraph from the fuzz input.\n+    SpanReader reader(buffer);\n+    DepGraph<TestBitSet> depgraph;\n+    try {\n+        reader >> Using<DepGraphFormatter>(depgraph);\n+    } catch (const std::ios_base::failure&) {}\n+\n+    // Instantiate the SimpleCandidateFinder to be tested, and the ExhaustiveCandidateFinder and\n+    // AncestorCandidateFinder it is being tested against.\n+    SimpleCandidateFinder smp_finder(depgraph);\n+    ExhaustiveCandidateFinder exh_finder(depgraph);\n+    AncestorCandidateFinder anc_finder(depgraph);\n+\n+    auto todo = TestBitSet::Fill(depgraph.TxCount());\n+    while (todo.Any()) {\n+        assert(!smp_finder.AllDone());\n+        assert(!exh_finder.AllDone());\n+        assert(!anc_finder.AllDone());\n+        assert(anc_finder.NumRemaining() == todo.Count());\n+\n+        // Call SimpleCandidateFinder.\n+        auto [found, iterations_done] = smp_finder.FindCandidateSet(MAX_SIMPLE_ITERATIONS);\n+        bool optimal = (iterations_done != MAX_SIMPLE_ITERATIONS);\n+\n+        // Sanity check the result.\n+        assert(iterations_done <= MAX_SIMPLE_ITERATIONS);\n+        assert(found.transactions.Any());\n+        assert(found.transactions.IsSubsetOf(todo));\n+        assert(depgraph.FeeRate(found.transactions) == found.feerate);\n+        // Check that it is topologically valid.\n+        for (auto i : found.transactions) {\n+            assert(found.transactions.IsSupersetOf(depgraph.Ancestors(i) & todo));\n+        }\n+\n+        // At most 2^(N-1) iterations can be required: the number of non-empty connected subsets a\n+        // graph with N transactions can have. If MAX_SIMPLE_ITERATIONS exceeds this number, the\n+        // result is necessarily optimal.\n+        assert(iterations_done <= (uint64_t{1} << (todo.Count() - 1)));\n+        if (MAX_SIMPLE_ITERATIONS > (uint64_t{1} << (todo.Count() - 1))) assert(optimal);\n+\n+        // Perform quality checks only if SimpleCandidateFinder claims an optimal result.\n+        if (optimal) {\n+            // Optimal sets are always connected.\n+            assert(depgraph.IsConnected(found.transactions));\n+\n+            // Compare with AncestorCandidateFinder.\n+            auto anc = anc_finder.FindCandidateSet();\n+            assert(anc.feerate <= found.feerate);\n+\n+            if (todo.Count() <= 12) {\n+                // Compare with ExhaustiveCandidateFinder. This quickly gets computationally\n+                // expensive for large clusters (O(2^n)), so only do it for sufficiently small ones.",
      "path": "src/test/fuzz/cluster_linearize.cpp",
      "position": 93,
      "original_position": 77,
      "commit_id": "8eb70e3ca467ac66bc1f43e3e0b3338d63806ee5",
      "original_commit_id": "465469f1c16d3d21e84b386afa0975731b40ef45",
      "in_reply_to_id": 1787476002,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah, it's $\\mathcal{O}(2^N)$ *iterations*, but overall runtime is indeed $\\mathcal{O}(N \\cdot 2^N)$ (or, arguably, $\\mathcal{O}(N^2 \\cdot 2^N)$ even if you take into account that for larger $N$, the bitsets involved need to grow linearly too, so bitset operations themselves are really $\\mathcal{O}(N)$ ).",
      "created_at": "2024-10-04T11:56:29Z",
      "updated_at": "2024-10-04T11:57:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30605#discussion_r1787606089",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1787606089"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30605"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 558,
      "original_line": 558,
      "side": "RIGHT"
    }
  ]
}