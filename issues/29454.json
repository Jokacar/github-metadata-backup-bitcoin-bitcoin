{
  "type": "issue",
  "issue": {
    "id": 2142993833,
    "node_id": "I_kwDOABII585_u32p",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29454",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29454/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29454/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29454/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/29454",
    "number": 29454,
    "state": "open",
    "state_reason": null,
    "title": "Brainstorm: Transaction issuer-selected policy limits",
    "body": "This issue opens a brainstorm about introducing transaction issuer-selected policy limits.\r\n\r\nCurrently, all the policy limits are either static (e.g `DUST_RELAY_TX_FEE` or `MIN_STANDARD_TX_NONWITNESS_SIZE`)\r\nor it can be set dynamically on the command-line by the node operator (e.g ancestors / descendants / incremental\r\ntx-relay fee). New policy mechanism like v3 are introducing specific limit such as the 1000 vb limit on the single\r\nchild.\r\n\r\nThis approach is limited for some use-cases, as there is an interdependency between the policy limits and efficiency\r\nor loss of funds risks. E.g for LN, higher the v3 child limit, higher is the pinning risk exposure, i.e the amount of\r\nsatoshis one can steal by slipping a pinning package under the child limit. Applying limit on child only can additionally\r\nmiss to protect package propagation, as in LN context at least parent can be inflated according channel parameters.\r\n\r\nI did a small proof-of-concept with #29448. After writing it, I realize this might be too much policy flexibility for now,\r\nespecially if transaction issuers-selected policy limits can introduce economic-induced performance asymmetries in the\r\nlow performance host, i.e what if tx-relay traffic starts to be materially segregated and this breaks BIP152 compact blocks\r\npropagation (it might be fixed by being more aggrressive on `prefilledtxn`, however this assume \"predictive\" discrepancies\r\nalgorithms). \r\n\r\nIn terms of transaction or protocol fields where such opt-in transaction-issuer policy limits could be inserted among others:\r\n- nSequence field - bip68 semantics to deal with\r\n- nVersion field lower bits\r\n- taproot annex\r\n- p2p extensions e.g `ancpkginfo` or a new `issuer_wtxid`, committing to a policy profile\r\n\r\nI think it can be an interesting to experiment with a transaction-issuer selected limit for at least the 1000 vb limit.\r\nMaking it a dynamic limit in the limit of `MAX_STANDARD_TX_WEIGHT` applied on the whole v3 package. This would at least\r\naddress my strong concern that current v3 approach is realistically weak to address substantially pinning risks for LN.\r\n\r\nSuch transaction issuer-selected policy limits could be useful for a wide array of other use-cases. E.g iterative batching\r\nwhere you would like to have child of reasonable size to fanout payouts and fee-bump at the same-time.\r\n\r\nLooking forward to thoughts.",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 64584,
        "node_id": "MDU6TGFiZWw2NDU4NA==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Brainstorming",
        "name": "Brainstorming",
        "color": "ebd775",
        "default": false
      },
      {
        "id": 82428251,
        "node_id": "MDU6TGFiZWw4MjQyODI1MQ==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/TX%20fees%20and%20policy",
        "name": "TX fees and policy",
        "color": "5319e7",
        "default": false
      }
    ],
    "assignees": [],
    "author_association": "MEMBER",
    "locked": false,
    "comments": 1,
    "created_at": "2024-02-19T19:08:49Z",
    "updated_at": "2024-03-11T20:21:18Z"
  },
  "events": [
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-19T19:09:22Z",
      "updated_at": "2024-02-19T19:09:22Z",
      "source": {
        "issue": {
          "id": 2141417736,
          "node_id": "PR_kwDOABII585nPL9t",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29448",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29448/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29448/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29448/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29448",
          "number": 29448,
          "state": "closed",
          "state_reason": null,
          "title": "Add issuer-selected opt-in txn / pckg policy checks",
          "body": "All the values selected by the transaction issuers are implemented to respect current hard policy limits as of 27.0\r\nBitcoin Core version (e.g `MAX_PACKAGE_COUNT` or `MAX_STANDARD_TX_WEIGHT`). As such introducing a new distinction in the Bitcoin ecosystem among tx-relay policy checks enforced by full-nodes hosts of a said full-node implementation/version and the the policy-check opt-ed by any transaction or second-layers use-cases. That way any significant on-chain economic  traffic can be still processed by low-performance full-nodes hosts, without altering the DoS profile risks.\r\n\r\nE.g in the context of the Lightning Network, lightning nodes can adjust their pinning risk exposures affecting their channel funds safety differently in function of each lightning topological peers (- assuming the BOLT protocol upgrades its negotiation flow `open_channel` / `accept_channel`). As such lightning peers can enforce a trade-off between their off chain HTLC throughputs and their tx-relay jamming exposure (e.g pinning or RC attacks).\r\n\r\nE.g in the context of collaborative custody management, distrusted stakeholders owning a set of pre-signed set of transactions can all commits to the same set of max tx size / max package limits, as such introducing more reliability on the worst amount of fee-bumping reserves that should be provisioned instead of hard limits like the current approach with v3.\r\n\r\n_Wait ! I’m lost reading this OP ?! Already  too much information, what should I do ? Go to read Bitcoin Optech 10 articles series’s [“Waiting for confirmation: a series about mempool and relay policy”](https://bitcoinops.org/en/blog/waiting-for-confirmation/) as a starter and then come back to read or comment._\r\n\r\nThe opt-in mechanism uses a one bit flag in the nSequence field which is already a standard and consenus Bitcoin transaction field since the genesis block. The mechansim (`ParsePackageTopologicalLimits()`) check that bip68 is disabled to avoid conflicts of semantics, as the remaining nSequence field bits are interpreted as dynamic issuers-selected policy checks (currently implemented ancestor / descendant / max package limits size). The intrusive aspect of the mechanism is minimal and the interpreted field could be uplifted in other parts of standard transaction fields while conserving the same policy check enforcement semantics.\r\n\r\nHere the code excerpt that deserves a `doc/policy/` , a BIP or a banana.\r\n```\r\n (sequence_field & SEQUENCE_ISSUER_SELECTED_LIMITS_DISABLE_FLAG) {\r\n        return std::nullopt;\r\n    }\r\n\r\n    const uint32_t ancestor_limit = sequence_field & SEQUENCE_ISSUER_SELECTED_ANCESTOR_MASK;\r\n    const uint32_t descendant_limit = sequence_field & SEQUENCE_ISSUER_SELECTED_DESCENDANT_MASK;\r\n    const uint32_t weight_limit = (uint32_t)(sequence_field & SEQUENCE_ISSUER_SELECTED_WEIGHT_MASK)\r\n     << SEQUENCE_ISSUER_SELECTED_WEIGHT_GRANULARITY;\r\n\r\n    // This parsing logic can be adapted for forward-compatibility in matters of issuer-selected\r\n    // policy limits:\r\n    //      - encodes accumulated package SigOpCost\r\n    //      - commit to package-level dynamic DUST_RELAY_TX_FEE or DEFAULT_INCREMENTAL_RELAY_FEE\r\n    //      - opt-in if limits are strict (at the pckg-level) or composable (at the tx-level)\r\n    //        to allow non-interactive composability among N chain of transaction issuers.\r\n\r\n    IssuerSelectedLimits tx_issuer_selected_limits(ancestor_limit, descendant_limit, weight_limit);\r\n```\r\n\r\nIssuer-selected fields getting economic popularity and not jeopardizing bitcoin security model and long-term decentralization equlibrium of the ecosystem of peer-to-peer full-nodes and solo mining operations could get a consensus enforcement, going through the traditional consensus design & development process (narrator note: no ones really knows or is sure there is  something as traditional consensus development process...). The nSequence consensus field due to its 32 bits limitation is space limited, even if a lot can be achieved with bit-wise operations.\r\n\r\nFrom a technical philosophy perspective, I think this introduction of issuer-selected transaction / package policy limits checks should should reduce the amount of \"bargaing-on-policy\" we have seen recently with `mempoolfullrbf` (LN-vs-zero-conf-acceptance business) or do-digital-art-on-chain-and-the-posterity-will-say-if-it-is-bansky-or-crap-waste colored coins and tokens experimentations.\r\n\r\nThis patchset built on the v3 patchset and its followups (commit `37fdf5a4`), is already integrated in the package mempool\r\nacceptance code flow. There is 1 logical conflict for now as the 1000 vbytes limit is enforced by default for v3 (which still\r\nexposes a lot of loss of funds risk exposure for some time-sensitive flows like lightning considering \"loophole\" and NTA pinning scenario  - see #28948). In the future, this limit can just become a \"tx issuer-selected policy check\" limit.\r\n\r\nIn the future, such transaction / package “issuer-selected” can be used as a signaling mechanism, e.g for [replace-by-feerate](https://petertodd.org/2024/one-shot-replace-by-fee-rate) dynamic window enforced at the mempool-level, for the use-cases who wishing to ensure their chain of transactions are minimal by not using CPFP.\r\n\r\nFor more discussions on mempool policy technical philosophy design and trade-offs on downstream use-cases, see the old email  thread [\"On mempool consistency\"](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-October/021116.html).\r\n\r\nThis patchset can be applied on top of any fork of bitcoin core 27.0 with the minimal of engineering effort by anyone wishing\r\nto experiment with mempool policy for its use-case (I'll see if I have time to carry this patchset forward as I'm officially in\r\nsabbatical from bitcoin core development taking the sun on the beach just yelling at them when the stuff is broken, we’re all btc investors).",
          "user": {
            "login": "ariard",
            "id": 23310655,
            "node_id": "MDQ6VXNlcjIzMzEwNjU1",
            "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ariard",
            "html_url": "https://github.com/ariard",
            "followers_url": "https://api.github.com/users/ariard/followers",
            "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
            "organizations_url": "https://api.github.com/users/ariard/orgs",
            "repos_url": "https://api.github.com/users/ariard/repos",
            "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ariard/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29448",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29448",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29448.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29448.patch"
          },
          "closed_at": "2024-02-19T16:47:52Z",
          "created_at": "2024-02-19T03:26:23Z",
          "updated_at": "2024-02-19T19:09:23Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 11873412042,
      "node_id": "LE_lADOABII585_u32pzwAAAALDtePK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11873412042",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-21T09:30:19Z",
      "label": {
        "name": "Brainstorming",
        "color": "ebd775"
      }
    },
    {
      "event": "labeled",
      "id": 11873412064,
      "node_id": "LE_lADOABII585_u32pzwAAAALDtePg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11873412064",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-21T09:30:19Z",
      "label": {
        "name": "TX fees and policy",
        "color": "5319e7"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-04T01:53:09Z",
      "updated_at": "2024-03-04T01:53:09Z",
      "source": {
        "issue": {
          "id": 2100725835,
          "node_id": "I_kwDOABII5859NohL",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29319",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29319/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29319/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29319/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/29319",
          "number": 29319,
          "state": "open",
          "state_reason": null,
          "title": "Cluster mempool, CPFP carveout, and V3 transaction policy",
          "body": "Opening an issue for high-level discussion, as the PR that implements this has gotten difficult to follow.\r\n\r\n### Cluster mempool\r\n\r\nWork is underway to [redesign the mempool](https://delvingbitcoin.org/t/an-overview-of-the-cluster-mempool-proposal/393/1) with different topology constraints on the transaction graph than exist today.  I originally described this proposal in a github issue (#27677), and have shared a draft implementation (#28676).  In brief, with a new mempool design we could simultaneously: fix bugs with mempool eviction and the incentive compatibility of RBF replacements; achieve improved performance; eliminate the ancestor/descendant limits (with the introduction of a likely more relaxed \"cluster\" limit); and likely be in a position to better implement complex behaviors like package validation and package rbf.\r\n\r\n### CPFP carveout is not compatible with cluster mempool\r\n\r\nAs I explain [here](https://delvingbitcoin.org/t/an-overview-of-the-cluster-mempool-proposal/393#the-cpfp-carveout-rule-can-no-longer-be-supported-12), I believe the CPFP carveout rule (introduced in #15681) is not compatible with the new design. Since some users may be relying on this behavior, we should come up with a workaround to avoid breaking existing applications.\r\n\r\n### V3 transaction policy\r\n\r\nDescribed in #28948, the v3 transaction policy is a proposal to introduce topology restrictions on unconfirmed transactions with `nVersion=3` (which are currently non-standard for relay, and would be made standard under the proposal).  Specifically, v3 transactions would be:\r\n- opted-in to RBF replacement policies (whatever those may be, as they evolve in our project)\r\n- permitted to only be part of mempool clusters that are at most of size 2 (meaning 1 parent/1 child)\r\n- required to have any unconfirmed parents or children also be marked v3 (and therefore subject to these rules)\r\n- bounded in size to at most 1000 vbytes, if the child of an unconfirmed (and therefore v3) parent\r\n\r\nBy offering a policy rule that can enforce a much tighter topology restriction that the current ancestor/descendant limits, we hope to achieve a few things:\r\n\r\n#### Replacing CPFP carveout (with a new sibling-replacement policy)\r\n\r\nWe can provide a way to achieve the goals of the CPFP carveout rule even if the existing carevout rule were to be dropped. As explained in [this post](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-November/016518.html), the use-case contemplated by the CPFP carveout rule was one where a single transaction might have two spendable outputs, each spendable by a different party, and that either party should be able to spend their output without hitting global topology limits, provided that their spending transaction was bounded in size and had no other unconfirmed parents. If the v3 policy rule were to be applied to the LN commitment transactions described in that post, then neither of the two outputs that are spendable could be used to hit the limits that carveout is designed to bypass. \r\n\r\nSo if we couple the v3 policy with an RBF rule that would allow one spend of a v3 transaction to replace an existing lower-feerate spend of that same parent -- something we call *sibling eviction* and has a draft implementation in #29306 -- then I believe we will have enacted a set of policies that replicate the CPFP carveout use case. \r\n\r\n#### Provide a general way for fee bumping to work better\r\n\r\nEven apart from the needs of layer 2 protocols, the new v3 policy serves as a general way to bypass the issue of RBF being expensive when a child transaction is created that has a large fee (and is typically large in size, allowing for it to be low feerate).  This has been the source of user complaints since our RBF policies were first deployed, and by bounding the size of child transactions we effectively can limit the amount of additional fee a user would need to pay due to the presence of such children.  \r\n\r\nNote, of course, that this property is also what makes the sibling-eviction-policy described above workable.\r\n\r\n### Proposed roadmap\r\n\r\nTo unblock the cluster mempool project, I think we need the following:\r\n1. Deployment of the V3 policy rules (current proposal is #28948)\r\n2. Deployment of V3 sibling eviction rbf rules (current proposal is #29306)\r\n\r\nThen, projects that use CPFP carveout would need to be able to adopt the new policy rules.  After the last LN spec discussion, I understand that migrating their commitment transactions to use a new format (even just a change in version number) might take time to coordinate, and that in the meantime we should simply use some other unique markers to identify those commitment transactions, and implicitly imbue such transactions with the v3 policy rules.  However, doing so would eliminate the ability to batch-CPFP several unconfirmed commitment transactions at once (although this isn't reliable anyway today, since the carveout protections don't apply to this case, but perhaps this sometimes works fine and is more efficient).\r\n\r\nIt's not clear to me if that final step -- of imbuing transactions with v3 policy, rather than requiring explicit opt-in -- is needed before we move further forward with cluster mempool, or even if doing so would be acceptable to the broader community, but I think we could entertain that idea as a way to assist the LN project with migration and to decouple progress in this project from upgrade timelines in that one.\r\n\r\n### Feedback\r\n\r\nWhile we're still working out implementation details in the v3 and v3-sibling-eviction PRs, it would be great to get concept ACKs on this roadmap from any users of the current CPFP carveout policy.  In particular, please provide feedback on:\r\n1. whether there are use cases of CPFP carveout that are not covered by the V3 proposal as I described above, and \r\n2. whether the \"imbued v3\" behavior described above should be treated as a blocker for CPFP carveout removal as well, or if it's a bad idea due to (eg) breaking the ability to batch-CPFP (or any other reason)",
          "user": {
            "login": "sdaftuar",
            "id": 7463573,
            "node_id": "MDQ6VXNlcjc0NjM1NzM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sdaftuar",
            "html_url": "https://github.com/sdaftuar",
            "followers_url": "https://api.github.com/users/sdaftuar/followers",
            "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
            "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
            "repos_url": "https://api.github.com/users/sdaftuar/repos",
            "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64583,
              "node_id": "MDU6TGFiZWw2NDU4Mw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Feature",
              "name": "Feature",
              "color": "7cf575",
              "default": false
            },
            {
              "id": 82428251,
              "node_id": "MDU6TGFiZWw4MjQyODI1MQ==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/TX%20fees%20and%20policy",
              "name": "TX fees and policy",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 164208572,
              "node_id": "MDU6TGFiZWwxNjQyMDg1NzI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Mempool",
              "name": "Mempool",
              "color": "fef2c0",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 32,
          "created_at": "2024-01-25T16:15:26Z",
          "updated_at": "2024-03-04T02:55:19Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-04T02:31:24Z",
      "updated_at": "2024-03-04T02:31:24Z",
      "source": {
        "issue": {
          "id": 2157710565,
          "node_id": "PR_kwDOABII585oGxRQ",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29496",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29496/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29496/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29496/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29496",
          "number": 29496,
          "state": "open",
          "state_reason": null,
          "title": "policy: bump TX_MAX_STANDARD_VERSION to 3",
          "body": "Make `nVersion=3` (which is currently nonstandard on mainnet) standard. The rules from #28948 apply.\r\n\r\nSee #27463 for overall project tracking.",
          "user": {
            "login": "glozow",
            "id": 25183001,
            "node_id": "MDQ6VXNlcjI1MTgzMDAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/glozow",
            "html_url": "https://github.com/glozow",
            "followers_url": "https://api.github.com/users/glozow/followers",
            "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
            "organizations_url": "https://api.github.com/users/glozow/orgs",
            "repos_url": "https://api.github.com/users/glozow/repos",
            "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/glozow/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 82428251,
              "node_id": "MDU6TGFiZWw4MjQyODI1MQ==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/TX%20fees%20and%20policy",
              "name": "TX fees and policy",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 3,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29496",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29496",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29496.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29496.patch"
          },
          "created_at": "2024-02-27T22:19:48Z",
          "updated_at": "2024-03-10T23:18:16Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1989365603,
      "node_id": "IC_kwDOABII5852k09j",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1989365603",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-11T20:21:16Z",
      "updated_at": "2024-03-11T20:21:16Z",
      "author_association": "CONTRIBUTOR",
      "body": "The problem with policy limits is they're all based on asking miners to ignore transactions that are potentially profitable. This is similar in spirit to opt-in RBF. And as we've seen, the supermajority of hash power eventually decided to ignore the opt-in flag and just do RBF all the time. If push came to shove, it wouldn't be surprising to run into the same class of problem with policy limits.\r\n\r\nMuch better to focus on solutions like replace-by-fee-rate that rely on better aligning miner incentives with the protocols in question. These solutions also appear to be much simpler.\r\n\r\nFinally, using the taproot annex specifically has the problem that you're using extra bytes. As always, that's a miner centralization concern because cheaper solutions are possible that do not use the annex.",
      "user": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/29454#issuecomment-1989365603",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29454"
    }
  ]
}