{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593",
    "id": 1138101751,
    "node_id": "PR_kwDOABII585D1g33",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/26593",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/26593.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/26593.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26593",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26593/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/1949b64afe7ecf91091f58623e75341a75996da0",
    "number": 26593,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "tracing: Only prepare tracepoint arguments when actually tracing",
    "user": {
      "login": "0xB10C",
      "id": 19157360,
      "node_id": "MDQ6VXNlcjE5MTU3MzYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xB10C",
      "html_url": "https://github.com/0xB10C",
      "followers_url": "https://api.github.com/users/0xB10C/followers",
      "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
      "organizations_url": "https://api.github.com/users/0xB10C/orgs",
      "repos_url": "https://api.github.com/users/0xB10C/repos",
      "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/0xB10C/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Currently, if the tracepoints are compiled (e.g. in depends and release builds), we always prepare the tracepoint arguments regardless of the tracepoints being used or not. We made sure that the argument preparation is as cheap as possible, but we can almost completely eliminate any overhead for users not interested in the tracepoints (the vast majority), by gating the tracepoint argument preparation with an `if(something is attached to this tracepoint)`. To achieve this, we use the optional semaphore feature provided by SystemTap.\r\n\r\nThe first commit simplifies and deduplicates our tracepoint macros from 13 TRACEx macros to a single TRACEPOINT macro. This makes them easier to use and also avoids more duplicate macro definitions in the second commit.\r\n\r\nThe Linux tracing tools I'm aware of (bcc, bpftrace, libbpf, and systemtap) all support the semaphore gating feature. Thus, all existing tracepoints and their argument preparation is gated in the second commit. For details, please refer to the commit messages and the updated documentation in `doc/tracing.md`.\r\n\r\nAlso adding unit tests that include all tracepoint macros to make sure there are no compiler problems with them (e.g. some varadiac extension not supported). \r\n\r\nReviewers might want to check:\r\n- Do the tracepoints still work for you? Do the examples in `contrib/tracing/` run on your system (as bpftrace frequently breaks on every new version, please test master too if it should't work for you)? Do the CI interface tests still pass?\r\n- Is the new documentation clear? \r\n- The `TRACEPOINT_SEMAPHORE(event, context)` macros places global variables in our global namespace. Is this something we strictly want to avoid or maybe move to all `TRACEPOINT_SEMAPHORE`s to a separate .cpp file or even namespace? I like having the `TRACEPOINT_SEMAPHORE()` in same file as the `TRACEPOINT()`, but open for suggestion on alternative approaches. \r\n- Are newly added tracepoints in the unit tests visible when using `readelf -n /src/test/test_bitcoin`? You can run the new unit tests with `./src/test/test_bitcoin --run_test=util_trace_tests* --log_level=all`.\r\n<details><summary>Two of the added unit tests demonstrate that we are only processing the tracepoint arguments when attached by having a test-failure condition in the tracepoint argument preparation. The following bpftrace script can be used to demonstrate that the tests do indeed fail when attached to the tracepoints.</summary>\r\n\r\n`fail_tests.bt`:\r\n\r\n```c\r\n#!/usr/bin/env bpftrace\r\n\r\nusdt:./src/test/test_bitcoin:test:check_if_attached {\r\n  printf(\"the 'check_if_attached' test should have failed\\n\");\r\n}\r\n\r\nusdt:./src/test/test_bitcoin:test:expensive_section {\r\n  printf(\"the 'expensive_section' test should have failed\\n\");\r\n}\r\n```\r\n\r\nRun the unit tests with `./src/test/test_bitcoin` and start `bpftrace fail_tests.bt -p $(pidof test_bitcoin)` in a separate terminal. The unit tests should fail with:\r\n\r\n```\r\nRunning 594 test cases...\r\ntest/util_trace_tests.cpp(31): error: in \"util_trace_tests/test_tracepoint_check_if_attached\": check false has failed\r\ntest/util_trace_tests.cpp(51): error: in \"util_trace_tests/test_tracepoint_manual_tracepoint_active_check\": check false has failed\r\n\r\n*** 2 failures are detected in the test module \"Bitcoin Core Test Suite\"\r\n```\r\n\r\n</details>\r\n\r\nThese links might provide more contextual information for reviewers:\r\n- [How SystemTap Userspace Probes Work by eklitzke](https://eklitzke.org/how-sytemtap-userspace-probes-work) (actually an example on Bitcoin Core; mentions that with semaphores \"the overhead for an untraced process is effectively zero.\")\r\n- [libbpf comment on USDT semaphore handling](https://github.com/libbpf/libbpf/blob/1596a09b5de2a50ab8d44218fc29b6d42f886305/src/usdt.c#L83-L92) (can recommend the whole comment for background on how the tracepoints and tracing tools work together)\r\n- https://sourceware.org/systemtap/wiki/UserSpaceProbeImplementation#Semaphore_Handling",
    "labels": [
      {
        "id": 241832923,
        "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
        "name": "Utils/log/libs",
        "description": "",
        "color": "5319e7",
        "default": false
      }
    ],
    "created_at": "2022-11-28T20:50:26Z",
    "updated_at": "2024-06-18T22:37:16Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "da06f20410e72b29f119329f242389958efb4b7b",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      {
        "login": "kouloumos",
        "id": 18506343,
        "node_id": "MDQ6VXNlcjE4NTA2MzQz",
        "avatar_url": "https://avatars.githubusercontent.com/u/18506343?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kouloumos",
        "html_url": "https://github.com/kouloumos",
        "followers_url": "https://api.github.com/users/kouloumos/followers",
        "following_url": "https://api.github.com/users/kouloumos/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kouloumos/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kouloumos/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kouloumos/subscriptions",
        "organizations_url": "https://api.github.com/users/kouloumos/orgs",
        "repos_url": "https://api.github.com/users/kouloumos/repos",
        "events_url": "https://api.github.com/users/kouloumos/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kouloumos/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "0xB10C:2022-11-only-prepare-tracepoint-arguments-when-tracing",
      "ref": "2022-11-only-prepare-tracepoint-arguments-when-tracing",
      "sha": "1949b64afe7ecf91091f58623e75341a75996da0",
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 184896538,
        "node_id": "MDEwOlJlcG9zaXRvcnkxODQ4OTY1Mzg=",
        "name": "bitcoin",
        "full_name": "0xB10C/bitcoin",
        "owner": {
          "login": "0xB10C",
          "id": 19157360,
          "node_id": "MDQ6VXNlcjE5MTU3MzYw",
          "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/0xB10C",
          "html_url": "https://github.com/0xB10C",
          "followers_url": "https://api.github.com/users/0xB10C/followers",
          "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
          "organizations_url": "https://api.github.com/users/0xB10C/orgs",
          "repos_url": "https://api.github.com/users/0xB10C/repos",
          "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/0xB10C/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/0xB10C/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/0xB10C/bitcoin",
        "archive_url": "https://api.github.com/repos/0xB10C/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/0xB10C/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/0xB10C/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/0xB10C/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/0xB10C/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/0xB10C/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/0xB10C/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/0xB10C/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/0xB10C/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/0xB10C/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/0xB10C/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/0xB10C/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/0xB10C/bitcoin/events",
        "forks_url": "https://api.github.com/repos/0xB10C/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/0xB10C/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/0xB10C/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/0xB10C/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/0xB10C/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/0xB10C/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/0xB10C/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/0xB10C/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/0xB10C/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/0xB10C/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/0xB10C/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/0xB10C/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/0xB10C/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/0xB10C/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/0xB10C/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/0xB10C/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:0xB10C/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/0xB10C/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/0xB10C/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/0xB10C/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/0xB10C/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/0xB10C/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/0xB10C/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/0xB10C/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/0xB10C/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/0xB10C/bitcoin/hooks",
        "svn_url": "https://github.com/0xB10C/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 248213,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-06-18T20:56:55Z",
        "created_at": "2019-05-04T13:11:05Z",
        "updated_at": "2024-06-18T20:02:41Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "9c5cdf07f30f816cd134e2cd2dca9c27ef7067a5",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35528,
        "stargazers_count": 76941,
        "watchers_count": 76941,
        "size": 261800,
        "default_branch": "master",
        "open_issues_count": 684,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-06-18T22:15:01Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-06-18T22:47:17Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 221,
    "deletions": 120,
    "changed_files": 16,
    "commits": 3,
    "review_comments": 36,
    "comments": 22
  },
  "events": [
    {
      "event": "commented",
      "id": 1329746317,
      "node_id": "IC_kwDOABII585PQlGN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1329746317",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-28T20:50:29Z",
      "updated_at": "2024-06-15T23:51:39Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/26593).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [jb55](https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1331016229), [kouloumos](https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1353541450) |\n| Approach ACK | [virtu](https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1346186050), [vasild](https://github.com/bitcoin/bitcoin/pull/26593#pullrequestreview-2049935876) |\n| Stale ACK | [laanwj](https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-2042827943), [willcl-ark](https://github.com/bitcoin/bitcoin/pull/26593#pullrequestreview-2028133549) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#29071](https://github.com/bitcoin/bitcoin/pull/29071) (refactor: Remove Span operator==, Use std::ranges::equal by maflcko)\n* [#28984](https://github.com/bitcoin/bitcoin/pull/28984) (Cluster size 2 package rbf by instagibbs)\n* [#28676](https://github.com/bitcoin/bitcoin/pull/28676) ([WIP] Cluster mempool implementation by sdaftuar)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1329746317",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26593"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7906760881,
      "node_id": "HRFPE_lADOABII585XccUyzwAAAAHXR5ix",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7906760881",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-28T20:54:02Z"
    },
    {
      "event": "reviewed",
      "id": 1196700835,
      "node_id": "PRR_kwDOABII585HVDSj",
      "url": null,
      "actor": null,
      "commit_id": "94331ba3cc8e5b2a3453e796a6988b668fd34668",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#pullrequestreview-1196700835",
      "submitted_at": "2022-11-28T23:39:05Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
    },
    {
      "event": "reviewed",
      "id": 1197254044,
      "node_id": "PRR_kwDOABII585HXKWc",
      "url": null,
      "actor": null,
      "commit_id": "94331ba3cc8e5b2a3453e796a6988b668fd34668",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#pullrequestreview-1197254044",
      "submitted_at": "2022-11-29T10:08:12Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7913913585,
      "node_id": "HRFPE_lADOABII585XccUyzwAAAAHXtLzx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7913913585",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-29T15:44:52Z"
    },
    {
      "event": "commented",
      "id": 1330914436,
      "node_id": "IC_kwDOABII585PVCSE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1330914436",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-29T16:28:37Z",
      "updated_at": "2022-11-29T17:27:31Z",
      "author_association": "CONTRIBUTOR",
      "body": "- Addressed https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1034160141 by using `__VA_ARGS__`. Also using a separate TRACEPOINT0 macro for tracepoints without arguments, as using the TRACEPOINT macro without arguments is only be possible with GCC (clang warns that we are using gcc extensions). Tested with both clang and gcc.\r\n- Adressed https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1034548969 by dropping the `TRACEPOINT_UNCHECKED` macro.\r\n- Added unit tests for the TRACEPOINT macros. The tracepoints in the unit tests don't do anything in particular, but the tests show that the macros work. Through the CI we cover `ENABLE_TRACING` being defined and undefined. The test case `test_tracepoint_check_if_attached` also shows that the `TRACEPOINT_ACTIVE` macro is not broken (it's tested that it's working in the functional tests).",
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1330914436",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26593"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7914342722,
      "node_id": "HRFPE_lADOABII585XccUyzwAAAAHXu0lC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7914342722",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-29T16:29:22Z"
    },
    {
      "event": "commented",
      "id": 1331016229,
      "node_id": "IC_kwDOABII585PVbIl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1331016229",
      "actor": {
        "login": "jb55",
        "id": 45598,
        "node_id": "MDQ6VXNlcjQ1NTk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/45598?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jb55",
        "html_url": "https://github.com/jb55",
        "followers_url": "https://api.github.com/users/jb55/followers",
        "following_url": "https://api.github.com/users/jb55/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jb55/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jb55/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jb55/subscriptions",
        "organizations_url": "https://api.github.com/users/jb55/orgs",
        "repos_url": "https://api.github.com/users/jb55/repos",
        "events_url": "https://api.github.com/users/jb55/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jb55/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-29T17:25:55Z",
      "updated_at": "2022-11-29T17:25:55Z",
      "author_association": "CONTRIBUTOR",
      "body": "genius. Concept ACK",
      "user": {
        "login": "jb55",
        "id": 45598,
        "node_id": "MDQ6VXNlcjQ1NTk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/45598?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jb55",
        "html_url": "https://github.com/jb55",
        "followers_url": "https://api.github.com/users/jb55/followers",
        "following_url": "https://api.github.com/users/jb55/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jb55/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jb55/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jb55/subscriptions",
        "organizations_url": "https://api.github.com/users/jb55/orgs",
        "repos_url": "https://api.github.com/users/jb55/repos",
        "events_url": "https://api.github.com/users/jb55/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jb55/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1331016229",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26593"
    },
    {
      "event": "commented",
      "id": 1334856799,
      "node_id": "IC_kwDOABII585PkExf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1334856799",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-02T07:30:12Z",
      "updated_at": "2022-12-02T07:30:12Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1334856799",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26593"
    },
    {
      "event": "commented",
      "id": 1346186050,
      "node_id": "IC_kwDOABII585QPStC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1346186050",
      "actor": {
        "login": "virtu",
        "id": 72414353,
        "node_id": "MDQ6VXNlcjcyNDE0MzUz",
        "avatar_url": "https://avatars.githubusercontent.com/u/72414353?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/virtu",
        "html_url": "https://github.com/virtu",
        "followers_url": "https://api.github.com/users/virtu/followers",
        "following_url": "https://api.github.com/users/virtu/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/virtu/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/virtu/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/virtu/subscriptions",
        "organizations_url": "https://api.github.com/users/virtu/orgs",
        "repos_url": "https://api.github.com/users/virtu/repos",
        "events_url": "https://api.github.com/users/virtu/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/virtu/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-12T09:52:55Z",
      "updated_at": "2022-12-12T09:52:55Z",
      "author_association": "CONTRIBUTOR",
      "body": "Approach ACK\r\n\r\nSuper cool stuff. This effectively removes **any** runtime overhead of tracepoints on modern processors with branch prediction and speculative execution when no probes are attached .\r\n\r\nSome feedback on testing with [61ca0f9](https://github.com/bitcoin/bitcoin/commit/61ca0f99dbbe7c83495c4f346bc91eceaf07e7ea):\r\n\r\n- functional tests executed successfully on x86_64 and arm64\r\n- demo scripts in `contrib/tracing`: right now, `bpftrace` scripts work, `bcc` scripts don't\r\n- generated assembly looks as expected:\r\n    - tracing code is semaphore-gated using compare and branch instructions:\r\n \r\n        ```\r\n        # x86_64\r\n       cmp    WORD PTR [rip+0x8f816b],0x0        # 0x55d32c25d6c0 <net_outbound_message_semaphore>\r\n       jne    0x55d32b965800 <_ZN8CConnman11PushMessageEP5CNodeO17CSerializedNetMsg+1488>\r\n\r\n       # arm64\r\n       ldrh    w1, [x0, #1776]\r\n       cbnz    w1, 0xaaaab2413fa4 <_ZN8CConnman11PushMessageEP5CNodeO17CSerializedNetMsg+1228>\r\n       ```\r\n    - tracing code uses `nop` when no probe is attached vs. `int3` (x86_64) / `brk` (arm64) to trap when probe is attached\r\n\r\n- used `gdb` to inspect semaphores: they are correctly initialized to zero and set to one if one or more(!) probes are attached. The documentation I read stated semaphores act as probe reference counters, so I was expecting semaphore values to reflect the number of probes. However, it looks like semaphores and counters were separated. This does not impact correct behavior though:\r\n\r\n  ```\r\n  (gdb) # no probe attached\r\n  (gdb) x/hx &net_outbound_message_semaphore\r\n  0xaaaacc8506f0 <net_outbound_message_semaphore>:        0x0000\r\n  (gdb) # started one instance of contrib/tracing/log_p2p_traffic.bt\r\n  (gdb) x/hx &net_outbound_message_semaphore\r\n  0xaaaacc8506f0 <net_outbound_message_semaphore>:        0x0001\r\n  (gdb) # started another instance of contrib/tracing/log_p2p_traffic.bt\r\n  (gdb) x/hx &net_outbound_message_semaphore\r\n  0xaaaacc8506f0 <net_outbound_message_semaphore>:        0x0001\r\n  (gdb) # stopped first instance\r\n  (gdb) x/hx &net_outbound_message_semaphore\r\n  0xaaaacc8506f0 <net_outbound_message_semaphore>:        0x0001\r\n  (gdb) # stopped second instance\r\n  (gdb) x/hx &net_outbound_message_semaphore\r\n  0xaaaacc8506f0 <net_outbound_message_semaphore>:        0x0000\r\n  ```",
      "user": {
        "login": "virtu",
        "id": 72414353,
        "node_id": "MDQ6VXNlcjcyNDE0MzUz",
        "avatar_url": "https://avatars.githubusercontent.com/u/72414353?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/virtu",
        "html_url": "https://github.com/virtu",
        "followers_url": "https://api.github.com/users/virtu/followers",
        "following_url": "https://api.github.com/users/virtu/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/virtu/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/virtu/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/virtu/subscriptions",
        "organizations_url": "https://api.github.com/users/virtu/orgs",
        "repos_url": "https://api.github.com/users/virtu/repos",
        "events_url": "https://api.github.com/users/virtu/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/virtu/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1346186050",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26593"
    },
    {
      "event": "commented",
      "id": 1347928306,
      "node_id": "IC_kwDOABII585QV8Dy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1347928306",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-13T08:34:36Z",
      "updated_at": "2022-12-13T08:34:36Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for the detailed review and testing. I've too noticed that the current example bcc scripts have a problem with the semaphores. The functional tests, also using bcc, work as intended as they use the PID to attach to the bitcoind process. Will add a commit to allow running the example scripts by specifying a PID.\r\n\r\n",
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1347928306",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26593"
    },
    {
      "event": "commented",
      "id": 1353541450,
      "node_id": "IC_kwDOABII585QrWdK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1353541450",
      "actor": {
        "login": "kouloumos",
        "id": 18506343,
        "node_id": "MDQ6VXNlcjE4NTA2MzQz",
        "avatar_url": "https://avatars.githubusercontent.com/u/18506343?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kouloumos",
        "html_url": "https://github.com/kouloumos",
        "followers_url": "https://api.github.com/users/kouloumos/followers",
        "following_url": "https://api.github.com/users/kouloumos/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kouloumos/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kouloumos/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kouloumos/subscriptions",
        "organizations_url": "https://api.github.com/users/kouloumos/orgs",
        "repos_url": "https://api.github.com/users/kouloumos/repos",
        "events_url": "https://api.github.com/users/kouloumos/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kouloumos/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-15T18:37:52Z",
      "updated_at": "2022-12-15T18:37:52Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK!\r\nI've though about something similar while working on https://github.com/bitcoin/bitcoin/pull/25541 and even more when you mentioned performance impact on https://github.com/bitcoin/bitcoin/pull/25832.",
      "user": {
        "login": "kouloumos",
        "id": 18506343,
        "node_id": "MDQ6VXNlcjE4NTA2MzQz",
        "avatar_url": "https://avatars.githubusercontent.com/u/18506343?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kouloumos",
        "html_url": "https://github.com/kouloumos",
        "followers_url": "https://api.github.com/users/kouloumos/followers",
        "following_url": "https://api.github.com/users/kouloumos/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kouloumos/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kouloumos/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kouloumos/subscriptions",
        "organizations_url": "https://api.github.com/users/kouloumos/orgs",
        "repos_url": "https://api.github.com/users/kouloumos/repos",
        "events_url": "https://api.github.com/users/kouloumos/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kouloumos/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1353541450",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26593"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8078009981,
      "node_id": "HRFPE_lADOABII585XccUyzwAAAAHhfKZ9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8078009981",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-20T12:31:15Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8078065815,
      "node_id": "HRFPE_lADOABII585XccUyzwAAAAHhfYCX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8078065815",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-20T12:39:11Z"
    },
    {
      "event": "commented",
      "id": 1359298538,
      "node_id": "IC_kwDOABII585RBT_q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1359298538",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-20T12:41:14Z",
      "updated_at": "2022-12-20T12:41:14Z",
      "author_association": "CONTRIBUTOR",
      "body": "> demo scripts in contrib/tracing: right now, bpftrace scripts work, bcc scripts don't -- (https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1346186050)\r\n\r\nRebased and added a commit that fixes the bcc example scripts by using the PID of bitcoind instead of the file path. We already do this in the tests (https://github.com/bitcoin/bitcoin/commit/220a5a2841172a07d6d7849596316f0e0933e272).",
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1359298538",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26593"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8078104686,
      "node_id": "HRFPE_lADOABII585XccUyzwAAAAHhfhhu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8078104686",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-20T12:44:42Z"
    },
    {
      "event": "labeled",
      "id": 8146988456,
      "node_id": "LE_lADOABII585XccUyzwAAAAHlmS2o",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8146988456",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-04T00:28:49Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8149862699,
      "node_id": "HRFPE_lADOABII585XccUyzwAAAAHlxQkr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8149862699",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-04T10:32:37Z"
    },
    {
      "event": "unlabeled",
      "id": 8150089428,
      "node_id": "UNLE_lADOABII585XccUyzwAAAAHlyH7U",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8150089428",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-04T11:02:38Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 8694381832,
      "node_id": "LE_lADOABII585XccUyzwAAAAIGOb0I",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8694381832",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-08T08:56:32Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8708338428,
      "node_id": "HRFPE_lADOABII585XccUyzwAAAAIHDrL8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8708338428",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-09T13:46:57Z"
    },
    {
      "event": "unlabeled",
      "id": 8708832022,
      "node_id": "UNLE_lADOABII585XccUyzwAAAAIHFjsW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8708832022",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-09T14:32:42Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1345973179,
      "node_id": "PRR_kwDOABII585QOeu7",
      "url": null,
      "actor": null,
      "commit_id": "bfd97effdfbc6b8c9ad9de889aa62bd0760df5a2",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Lightly tested ACK.\r\n\r\n1. I didn't manage to get `bpftrace` itself running on my Ubuntu system [yet](https://hackmd.io/@willcl-ark/SyZgMRbg3), but I was able to get the python scripts `log_raw_p2p_msgs.py`, `log_utxocache_flush.py` and `p2p_monitor.py` (using `bcc`) to run successfully under `sudo`.  \r\n  (I do wonder about the viability of the `bpftrace` scripts in this project, seeing as they seem to be so brittle/difficult to use.)\r\n2. The usdt tests all passed successfully:\r\n  ```log\r\n  interface_usdt_coinselection.py                        | ✓ Passed  | 5 s\r\n  interface_usdt_net.py                                  | ✓ Passed  | 4 s\r\n  interface_usdt_utxocache.py                            | ✓ Passed  | 11 s\r\n  interface_usdt_validation.py                           | ✓ Passed  | 3 s\r\n  ```\r\n3. The new variadic macro is much simpler to reason about and I agree seems like a nice win all round. \r\n4. I was also able to see the semaphores being loaded from memory, compared to zero, and conditionally jumped to, as detailed in the PR description, e.g. for `CCoinsViewCache::AddCoin()`\r\n  ```gdb\r\n     ...\r\n     0x0000000000b60927 <+615>:   movzwl 0xa64bea(%rip),%eax        # 0x15c5518 <utxocache_add_semaphore>\r\n     0x0000000000b6092e <+622>:   cmp    $0x0,%eax\r\n     0x0000000000b60931 <+625>:   jle    0xb609d6 <_ZN15CCoinsViewCache7AddCoinERK9COutPointO4Coinb+790>\r\n     ...\r\n  ```\r\n5. I don't think having these semaphores in the global namespace should be a big issue for debugging or namespacing. So really it comes down to organisational priorities, where I'd agree with you that having them in the same file as the tracepoint feels cleaner.",
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#pullrequestreview-1345973179",
      "submitted_at": "2023-03-17T16:31:39Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
    },
    {
      "event": "reviewed",
      "id": 1348309775,
      "node_id": "PRR_kwDOABII585QXZMP",
      "url": null,
      "actor": null,
      "commit_id": "38df8dd06516576e9db21ff2899d083232ce8846",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#pullrequestreview-1348309775",
      "submitted_at": "2023-03-20T11:18:46Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
    },
    {
      "event": "reviewed",
      "id": 1376804705,
      "node_id": "PRR_kwDOABII585SEF9h",
      "url": null,
      "actor": null,
      "commit_id": "bfd97effdfbc6b8c9ad9de889aa62bd0760df5a2",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "<details><summary> I've measured the number of executed instructions for each tracepoint based on the current and new implementation and verified that the overhead for tracepoints' arguments preparation - when enabled but not hooked - has been eliminated. Click to expand for details. </summary>\r\n<br/>\r\n\r\nmaster (49b87bfe7e2799d25ce709123ecafa872b36e87a)\r\n\r\nTracepoint|Disabled|Enabled (not hooked)|Enabled (hooked)\r\n:---|:---|:---|:---\r\nmempool:added|1|24|24\r\nmempool:removed|1|136|136\r\nmempool:replaced|4|60|60\r\nmempool:rejected|2|250|250\r\nnet:inbound_message|1|50|50\r\nnet:outbound_message|3|43|43\r\nvalidation:block_connected|1|8|8\r\nutxocache:flush|2|95|95\r\nutxocache:add|1|6|6\r\nutxocache:spent|1|6|6\r\nutxocache:uncache|1|6|6\r\ncoin_selection:selected_coins|4|107|107\r\ncoin_selection:normal_create_tx_internal|1|10|10\r\ncoin_selection:attempting_aps_create_tx|1|2|2\r\ncoin_selection:aps_create_tx_internal|-|11|11\r\n\r\nPR (rebased as part of [26593-additions](https://github.com/kouloumos/bitcoin/tree/26593-additions))\r\n\r\nTracepoint|Disabled|Enabled (not hooked)|Enabled (hooked)\r\n:---|:---|:---|:---\r\nmempool:added|1|2|29\r\nmempool:removed|1|7|146\r\nmempool:replaced|4|3|60\r\nmempool:rejected|2|3|254\r\nnet:inbound_message|1|2|54\r\nnet:outbound_message|3|3|52\r\nvalidation:block_connected|1|3|10\r\nutxocache:flush|2|2|98\r\nutxocache:add|1|3|8\r\nutxocache:spent|1|3|8\r\nutxocache:uncache|1|3|9\r\ncoin_selection:selected_coins|4|3|109\r\ncoin_selection:normal_create_tx_internal|1|3|12\r\ncoin_selection:attempting_aps_create_tx|1|4|6\r\ncoin_selection:aps_create_tx_internal|-|3|12\r\n\r\nThe data are from my python gdb script that automatically measures executed instructions for all scenarios. You can find it in my [26593-additions](https://github.com/kouloumos/bitcoin/tree/26593-additions) branch alongside usage details in order to reproduce the results.\r\n```\r\n# extend_gdb.py\r\nTo make this file available to your gdb process:\r\n1. Make sure that this file and `tracepoint_helper.py` are in the same dir\r\n2. (gdb) source extend_gdb.py\r\n\r\nYou can now run the custom commands of this file.\r\nThe main command is:\r\n(gdb) scenario run <scenario> <tracepoint> (--no-build)\r\n\r\nRunning it with no arguments will run all scenarios:\r\n- tracepoints disabled\r\n- tracepoints enabled\r\n- tracepoints enabled (hooked)\r\n\r\nThe records are then saved in \"output_<commit-hash>.txt\"\r\n```\r\n\r\nNotes for the preliminary work on that branch:\r\n- it's a rebased vesion of this PR in order to include the newly added mempool tracepoints.\r\n- includes \"missing\" bpftrace scripts because these are what I'm using in my script to enable probes/hook on tracepoints.\r\n</details>\r\n\r\n Regarding the `TRACEPOINT_SEMAPHORE(event, context)` macros: I don't see any advantage on having them in the same file. I consider them as part of tracepoints' inner workings which are already abstracted in another file. But still not opposing the current implementation as (based on my attempts) having them in `trace.h` is not possible and the inclusion of an extra file probably adds unnecessary complexity at this point. However, with my alternative approach (explained below) those are not needed.\r\n\r\n#### macos support compatibility\r\n\r\nI've rebased https://github.com/bitcoin/bitcoin/pull/25541 on top of this PR in [macos-usdt-support-26593](https://github.com/kouloumos/bitcoin/commits/macos-usdt-support-26593) and it works; there is only an issue with the new unit test. Because the macos implementation doesn't support arbitrary tracepoints, the `TRACEPOINT` macro expands to \"undeclared identifier\" error. To solve it, I made a change to conditionally include that test file to the build process. As this test case is only conditionally applicable (empty if not linux), maybe this can also apply to this PR.\r\n\r\n#### Another approach(?)\r\n\r\nThis PR's gated approach reminded me of the [auto-generated header file](https://gist.github.com/kouloumos/df773b1e0896adca827e7960eace1d21) from `probes.d` in https://github.com/bitcoin/bitcoin/pull/25541. In https://github.com/bitcoin/bitcoin/pull/25541#issuecomment-1174858051 you mentioned how that file could also be generated on Linux with dtrace supplied by Systemtap, so I replicated this sempahor-gated functionality using the semaphores of the [linux auto-generated `probes.h` file](https://gist.github.com/0xB10C/655e506e9e53092f4becf412284f572a). The main advantage of this alternative approach is the unified build process for linux and macos as the current (pending) implementation for macos already uses the `probes.d` file. It then becomes trivial to also support tracepoints on macos. What do you think of this approach? This is essentially a mashup of your work, the macos support branch and [eklitzke's probes_sdt branch](https://github.com/eklitzke/bitcoin/tree/probes_sdt). You can find my changes at the [26593-another-approach](https://github.com/kouloumos/bitcoin/tree/26593-another-approach) branch ([diff](https://github.com/kouloumos/bitcoin/compare/26593-additions...26593-another-approach)) , feel free to pick whatever you like.",
      "user": {
        "login": "kouloumos",
        "id": 18506343,
        "node_id": "MDQ6VXNlcjE4NTA2MzQz",
        "avatar_url": "https://avatars.githubusercontent.com/u/18506343?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kouloumos",
        "html_url": "https://github.com/kouloumos",
        "followers_url": "https://api.github.com/users/kouloumos/followers",
        "following_url": "https://api.github.com/users/kouloumos/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kouloumos/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kouloumos/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kouloumos/subscriptions",
        "organizations_url": "https://api.github.com/users/kouloumos/orgs",
        "repos_url": "https://api.github.com/users/kouloumos/repos",
        "events_url": "https://api.github.com/users/kouloumos/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kouloumos/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#pullrequestreview-1376804705",
      "submitted_at": "2023-04-08T21:41:08Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
    },
    {
      "event": "commented",
      "id": 1502863992,
      "node_id": "IC_kwDOABII585Zk-J4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1502863992",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-11T07:58:16Z",
      "updated_at": "2023-04-25T15:56:32Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for the helpful comments @willcl-ark, @martinus and @kouloumos! I plan to address these and update this PR with your suggestions. Currently, I'm prioritizing other projects during the feature freeze, so it might take a few more weeks.\r\n\r\nMarking this as in draft until I address the feedback.",
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1502863992",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26593"
    },
    {
      "event": "mentioned",
      "id": 8970473442,
      "node_id": "MEE_lADOABII585XccUyzwAAAAIWro_i",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8970473442",
      "actor": {
        "login": "martinus",
        "id": 14386,
        "node_id": "MDQ6VXNlcjE0Mzg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/martinus",
        "html_url": "https://github.com/martinus",
        "followers_url": "https://api.github.com/users/martinus/followers",
        "following_url": "https://api.github.com/users/martinus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/martinus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/martinus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
        "organizations_url": "https://api.github.com/users/martinus/orgs",
        "repos_url": "https://api.github.com/users/martinus/repos",
        "events_url": "https://api.github.com/users/martinus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/martinus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-11T07:58:17Z"
    },
    {
      "event": "subscribed",
      "id": 8970473463,
      "node_id": "SE_lADOABII585XccUyzwAAAAIWro_3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8970473463",
      "actor": {
        "login": "martinus",
        "id": 14386,
        "node_id": "MDQ6VXNlcjE0Mzg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/martinus",
        "html_url": "https://github.com/martinus",
        "followers_url": "https://api.github.com/users/martinus/followers",
        "following_url": "https://api.github.com/users/martinus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/martinus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/martinus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
        "organizations_url": "https://api.github.com/users/martinus/orgs",
        "repos_url": "https://api.github.com/users/martinus/repos",
        "events_url": "https://api.github.com/users/martinus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/martinus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-11T07:58:17Z"
    },
    {
      "event": "mentioned",
      "id": 8970473512,
      "node_id": "MEE_lADOABII585XccUyzwAAAAIWrpAo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8970473512",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-11T07:58:17Z"
    },
    {
      "event": "subscribed",
      "id": 8970473530,
      "node_id": "SE_lADOABII585XccUyzwAAAAIWrpA6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8970473530",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-11T07:58:17Z"
    },
    {
      "event": "mentioned",
      "id": 8970473556,
      "node_id": "MEE_lADOABII585XccUyzwAAAAIWrpBU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8970473556",
      "actor": {
        "login": "kouloumos",
        "id": 18506343,
        "node_id": "MDQ6VXNlcjE4NTA2MzQz",
        "avatar_url": "https://avatars.githubusercontent.com/u/18506343?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kouloumos",
        "html_url": "https://github.com/kouloumos",
        "followers_url": "https://api.github.com/users/kouloumos/followers",
        "following_url": "https://api.github.com/users/kouloumos/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kouloumos/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kouloumos/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kouloumos/subscriptions",
        "organizations_url": "https://api.github.com/users/kouloumos/orgs",
        "repos_url": "https://api.github.com/users/kouloumos/repos",
        "events_url": "https://api.github.com/users/kouloumos/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kouloumos/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-11T07:58:17Z"
    },
    {
      "event": "subscribed",
      "id": 8970473573,
      "node_id": "SE_lADOABII585XccUyzwAAAAIWrpBl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8970473573",
      "actor": {
        "login": "kouloumos",
        "id": 18506343,
        "node_id": "MDQ6VXNlcjE4NTA2MzQz",
        "avatar_url": "https://avatars.githubusercontent.com/u/18506343?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kouloumos",
        "html_url": "https://github.com/kouloumos",
        "followers_url": "https://api.github.com/users/kouloumos/followers",
        "following_url": "https://api.github.com/users/kouloumos/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kouloumos/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kouloumos/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kouloumos/subscriptions",
        "organizations_url": "https://api.github.com/users/kouloumos/orgs",
        "repos_url": "https://api.github.com/users/kouloumos/repos",
        "events_url": "https://api.github.com/users/kouloumos/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kouloumos/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-11T07:58:17Z"
    },
    {
      "event": "convert_to_draft",
      "id": 9094102614,
      "node_id": "CTDE_lADOABII585XccUyzwAAAAIeDP5W",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9094102614",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-25T15:56:40Z"
    },
    {
      "event": "labeled",
      "id": 9287470786,
      "node_id": "LE_lADOABII585XccUyzwAAAAIpk47C",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9287470786",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-19T09:18:50Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "unsubscribed",
      "id": 9287903869,
      "node_id": "UE_lADOABII585XccUyzwAAAAIpmip9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9287903869",
      "actor": {
        "login": "joostjager",
        "id": 4638168,
        "node_id": "MDQ6VXNlcjQ2MzgxNjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4638168?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/joostjager",
        "html_url": "https://github.com/joostjager",
        "followers_url": "https://api.github.com/users/joostjager/followers",
        "following_url": "https://api.github.com/users/joostjager/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/joostjager/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/joostjager/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/joostjager/subscriptions",
        "organizations_url": "https://api.github.com/users/joostjager/orgs",
        "repos_url": "https://api.github.com/users/joostjager/repos",
        "events_url": "https://api.github.com/users/joostjager/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/joostjager/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-19T10:12:34Z"
    },
    {
      "event": "referenced",
      "id": 10024553532,
      "node_id": "REFE_lADOABII585XccUyzwAAAAJVgow8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10024553532",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "97ba72117cb717bd7bed53133ad623d4e991b220",
      "commit_url": "https://api.github.com/repos/bitcoin-core/gui/commits/97ba72117cb717bd7bed53133ad623d4e991b220",
      "created_at": "2023-08-07T14:04:05Z"
    },
    {
      "event": "referenced",
      "id": 10051177301,
      "node_id": "REFE_lADOABII585XccUyzwAAAAJXGMtV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10051177301",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "36f919d6262afb20ca7aca0ef32aa87467e86447",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/36f919d6262afb20ca7aca0ef32aa87467e86447",
      "created_at": "2023-08-09T19:02:12Z"
    },
    {
      "event": "commented",
      "id": 1728109045,
      "node_id": "IC_kwDOABII585nANn1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1728109045",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-20T16:52:25Z",
      "updated_at": "2023-09-20T16:52:25Z",
      "author_association": "MEMBER",
      "body": "Are you still working on this?",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1728109045",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26593"
    },
    {
      "event": "commented",
      "id": 1742027712,
      "node_id": "IC_kwDOABII585n1TvA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1742027712",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-01T09:59:02Z",
      "updated_at": "2023-10-01T09:59:02Z",
      "author_association": "CONTRIBUTOR",
      "body": "I plan to revisit this in the next two months. Feel free to close if I don't do it before the end of 2023. ",
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1742027712",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26593"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11054338853,
      "node_id": "HRFPE_lADOABII585XccUyzwAAAAKS49Ml",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11054338853",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-24T09:08:52Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11054499917,
      "node_id": "HRFPE_lADOABII585XccUyzwAAAAKS5khN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11054499917",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-24T09:26:31Z"
    },
    {
      "event": "labeled",
      "id": 11054500695,
      "node_id": "LE_lADOABII585XccUyzwAAAAKS5ktX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11054500695",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-24T09:26:36Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 11054898310,
      "node_id": "UNLE_lADOABII585XccUyzwAAAAKS7FyG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11054898310",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-24T10:06:57Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 11055056119,
      "node_id": "UNLE_lADOABII585XccUyzwAAAAKS7sT3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11055056119",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-24T10:24:01Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1825561375,
      "node_id": "IC_kwDOABII585sz9sf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1825561375",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-24T11:48:56Z",
      "updated_at": "2023-11-24T11:48:56Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased and addressed comments\r\n\r\n- https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1155488768: @martinus I took parts from your suggestion and added you as a co-author for the first commit. Thanks for the macro-magic. There's now only the `TRACEPOINT()` macro that works for tracepoints with 0 to 12 args.\r\n- https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1140555021: I clarified unit tests and added a new test for a manual `TRACEPOINT_ACTIVE()` macro.\r\n- https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1161156029: updated the GDB `info probes` output in the docs\r\n\r\n\r\nI also thought a bit about @kouloumos alternative approach that would allow us to use the tracepoints on Linux, macOS and potentially *BSD (not tested). This would require `dtrace` during build-time. I'm not sure this is something we want. If we explore in this direction, then it's probably better to do it in a separate PR.\r\n\r\nAs the first commit is an overall simplification and cleanup, it _might_ make also sense to split it off into a separate PR while we are exploring alternatives.\r\n\r\nWhile this is rebased and _ready for review_ again, I'd prefer progress on #25832 while we're exploring alternatives to #26593. I'll leave this as work-in-progress until we're clearer on alternatives.",
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1825561375",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26593"
    },
    {
      "event": "mentioned",
      "id": 11055776185,
      "node_id": "MEE_lADOABII585XccUyzwAAAAKS-cG5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11055776185",
      "actor": {
        "login": "martinus",
        "id": 14386,
        "node_id": "MDQ6VXNlcjE0Mzg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/martinus",
        "html_url": "https://github.com/martinus",
        "followers_url": "https://api.github.com/users/martinus/followers",
        "following_url": "https://api.github.com/users/martinus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/martinus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/martinus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
        "organizations_url": "https://api.github.com/users/martinus/orgs",
        "repos_url": "https://api.github.com/users/martinus/repos",
        "events_url": "https://api.github.com/users/martinus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/martinus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-24T11:48:56Z"
    },
    {
      "event": "subscribed",
      "id": 11055776199,
      "node_id": "SE_lADOABII585XccUyzwAAAAKS-cHH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11055776199",
      "actor": {
        "login": "martinus",
        "id": 14386,
        "node_id": "MDQ6VXNlcjE0Mzg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/martinus",
        "html_url": "https://github.com/martinus",
        "followers_url": "https://api.github.com/users/martinus/followers",
        "following_url": "https://api.github.com/users/martinus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/martinus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/martinus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
        "organizations_url": "https://api.github.com/users/martinus/orgs",
        "repos_url": "https://api.github.com/users/martinus/repos",
        "events_url": "https://api.github.com/users/martinus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/martinus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-24T11:48:56Z"
    },
    {
      "event": "mentioned",
      "id": 11055776214,
      "node_id": "MEE_lADOABII585XccUyzwAAAAKS-cHW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11055776214",
      "actor": {
        "login": "kouloumos",
        "id": 18506343,
        "node_id": "MDQ6VXNlcjE4NTA2MzQz",
        "avatar_url": "https://avatars.githubusercontent.com/u/18506343?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kouloumos",
        "html_url": "https://github.com/kouloumos",
        "followers_url": "https://api.github.com/users/kouloumos/followers",
        "following_url": "https://api.github.com/users/kouloumos/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kouloumos/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kouloumos/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kouloumos/subscriptions",
        "organizations_url": "https://api.github.com/users/kouloumos/orgs",
        "repos_url": "https://api.github.com/users/kouloumos/repos",
        "events_url": "https://api.github.com/users/kouloumos/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kouloumos/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-24T11:48:57Z"
    },
    {
      "event": "subscribed",
      "id": 11055776224,
      "node_id": "SE_lADOABII585XccUyzwAAAAKS-cHg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11055776224",
      "actor": {
        "login": "kouloumos",
        "id": 18506343,
        "node_id": "MDQ6VXNlcjE4NTA2MzQz",
        "avatar_url": "https://avatars.githubusercontent.com/u/18506343?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kouloumos",
        "html_url": "https://github.com/kouloumos",
        "followers_url": "https://api.github.com/users/kouloumos/followers",
        "following_url": "https://api.github.com/users/kouloumos/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kouloumos/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kouloumos/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kouloumos/subscriptions",
        "organizations_url": "https://api.github.com/users/kouloumos/orgs",
        "repos_url": "https://api.github.com/users/kouloumos/repos",
        "events_url": "https://api.github.com/users/kouloumos/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kouloumos/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-24T11:48:57Z"
    },
    {
      "event": "labeled",
      "id": 11192878608,
      "node_id": "LE_lADOABII585XccUyzwAAAAKbJcYQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11192878608",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-08T12:13:02Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11193834254,
      "node_id": "HRFPE_lADOABII585XccUyzwAAAAKbNFsO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11193834254",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-08T14:02:55Z"
    },
    {
      "event": "commented",
      "id": 1847225184,
      "node_id": "IC_kwDOABII585uGmtg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1847225184",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-08T14:08:01Z",
      "updated_at": "2023-12-08T14:08:01Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased with https://github.com/bitcoin/bitcoin/pull/28349 merged.\r\n\r\n> While this is rebased and ready for review again, I'd prefer progress on https://github.com/bitcoin/bitcoin/pull/25832 while we're exploring alternatives to https://github.com/bitcoin/bitcoin/pull/26593. I'll leave this as work-in-progress until we're clearer on alternatives.\r\n\r\nI've also been working on a branch that adds tracepoint support for macOS and FreeBSD based on this branch. Doesn't need dtrace and doesn't need any header file like `sys/sdt.h`. Once it's in a usable state I'll un-draft this PR here.",
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1847225184",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26593"
    },
    {
      "event": "unlabeled",
      "id": 11194019843,
      "node_id": "UNLE_lADOABII585XccUyzwAAAAKbNzAD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11194019843",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-08T14:19:06Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 11213441772,
      "node_id": "LE_lADOABII585XccUyzwAAAAKcX4rs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11213441772",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-11T17:20:28Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11238291384,
      "node_id": "HRFPE_lADOABII585XccUyzwAAAAKd2re4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11238291384",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-13T16:35:02Z"
    },
    {
      "event": "commented",
      "id": 1854284485,
      "node_id": "IC_kwDOABII585uhiLF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1854284485",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-13T16:36:48Z",
      "updated_at": "2023-12-13T16:36:48Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased. Now includes the tracepoint changes from https://github.com/bitcoin/bitcoin/pull/25273.",
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1854284485",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26593"
    },
    {
      "event": "unlabeled",
      "id": 11239183029,
      "node_id": "UNLE_lADOABII585XccUyzwAAAAKd6FK1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11239183029",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-13T18:04:20Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11443923275,
      "node_id": "HRFPE_lADOABII585XccUyzwAAAAKqHGlL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11443923275",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-10T14:22:56Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11444338515,
      "node_id": "HRFPE_lADOABII585XccUyzwAAAAKqIr9T",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11444338515",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-10T14:55:26Z"
    },
    {
      "event": "labeled",
      "id": 11444339463,
      "node_id": "LE_lADOABII585XccUyzwAAAAKqIsMH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11444339463",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-10T14:55:31Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 11445500432,
      "node_id": "UNLE_lADOABII585XccUyzwAAAAKqNHoQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11445500432",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-10T16:27:50Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 11479033310,
      "node_id": "LE_lADOABII585XccUyzwAAAAKsNCXe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11479033310",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-13T21:42:11Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 11576259717,
      "node_id": "LE_lADOABII585XccUyzwAAAAKx_7SF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11576259717",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-23T21:23:34Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11583676186,
      "node_id": "HRFPE_lADOABII585XccUyzwAAAAKycN8a",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11583676186",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-24T12:23:29Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11583784683,
      "node_id": "HRFPE_lADOABII585XccUyzwAAAAKycobr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11583784683",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-24T12:33:55Z"
    },
    {
      "event": "commented",
      "id": 1908048127,
      "node_id": "IC_kwDOABII585xuoD_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1908048127",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-24T12:40:37Z",
      "updated_at": "2024-01-24T12:40:37Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased to include https://github.com/bitcoin/bitcoin/pull/29272",
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1908048127",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26593"
    },
    {
      "event": "unlabeled",
      "id": 11584352429,
      "node_id": "UNLE_lADOABII585XccUyzwAAAAKyezCt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11584352429",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-24T13:24:36Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 11584864338,
      "node_id": "UNLE_lADOABII585XccUyzwAAAAKygwBS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11584864338",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-24T14:05:36Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 11589359179,
      "node_id": "LE_lADOABII585XccUyzwAAAAKyx5ZL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11589359179",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-24T20:42:53Z",
      "label": {
        "name": "Utils/log/libs",
        "color": "5319e7"
      }
    },
    {
      "event": "commented",
      "id": 1980950960,
      "node_id": "IC_kwDOABII5852Eumw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1980950960",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-06T14:06:21Z",
      "updated_at": "2024-03-06T14:06:21Z",
      "author_association": "MEMBER",
      "body": "@0xB10C can you give a summary of the current state of these changes? It's draft, and from the looks of the most recent comment, that's because it's waiting on `support for macOS and FreeBSD based on this branch.`. Is that still correct/being worked on?",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1980950960",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26593"
    },
    {
      "event": "mentioned",
      "id": 12028444648,
      "node_id": "MEE_lADOABII585XccUyzwAAAALM83_o",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12028444648",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-06T14:06:22Z"
    },
    {
      "event": "subscribed",
      "id": 12028444669,
      "node_id": "SE_lADOABII585XccUyzwAAAALM83_9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12028444669",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-06T14:06:22Z"
    },
    {
      "event": "commented",
      "id": 1983246214,
      "node_id": "IC_kwDOABII5852Ne-G",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1983246214",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-07T10:48:13Z",
      "updated_at": "2024-03-07T10:48:13Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for the poke. Undrafting.\r\n\r\nI have a branch building on top of this PR adding support for no-dependency no-overhead-if-not-used macOS tracing in a working state and a concept for FreeBSD to do the same. Still some work to do before I can open a PR. This PR was a draft as I wanted to make sure it's compatible with both the macOS and FreeBSD changes. I think it's mostly compatible with the changes here.\r\n\r\nNonetheless, I would prefer review on https://github.com/bitcoin/bitcoin/pull/25832 first from reviewers interested in tracepoints.",
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1983246214",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26593"
    },
    {
      "event": "ready_for_review",
      "id": 12040324074,
      "node_id": "RFRE_lADOABII585XccUyzwAAAALNqMPq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12040324074",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-07T10:48:15Z"
    },
    {
      "event": "reviewed",
      "id": 1986269340,
      "node_id": "PRR_kwDOABII5852ZBCc",
      "url": null,
      "actor": null,
      "commit_id": "3933bdd6cfc9accab9e0ed47e83a5cc27ada6b68",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#pullrequestreview-1986269340",
      "submitted_at": "2024-04-08T12:28:50Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
    },
    {
      "event": "commented",
      "id": 2042741859,
      "node_id": "IC_kwDOABII5855wcRj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2042741859",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-08T13:19:27Z",
      "updated_at": "2024-04-08T13:35:49Z",
      "author_association": "MEMBER",
      "body": "For some reason, after building with this, I dont get any output from:\r\n```\r\n$ gdb src/bitcoind\r\n...\r\n(gdb) info tracepoints\r\nNo tracepoints.\r\n```\r\nTested with gdb `15.0.50.20240219-git` and `13.1`.\r\n\r\nI checked that the tracepoints are included:\r\n```\r\n$ readelf -n ./src/bitcoind | grep NT_STAPSDT -A 4 -B 2\r\n  stapsdt              0x00000062       NT_STAPSDT (SystemTap probe descriptors)\r\n    Provider: net\r\n    Name: outbound_message\r\n    Location: 0x00000000001809bc, Base: 0x0000000000a2cb60, Semaphore: 0x0000000000b73248\r\n    Arguments: -8@%r14 8@%r15 8@-560(%rbp) 8@24(%rcx) 8@%rax 8@%rdx\r\n...\r\n```\r\nI don't know if this is an actual problem as we don't rely on gdb for tracing, but if so it's a documentation issue.\r\n\r\nEdit: something is broken here, it also doesn't show them for the master branch.",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-2042741859",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26593"
    },
    {
      "event": "commented",
      "id": 2042827943,
      "node_id": "IC_kwDOABII5855wxSn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2042827943",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-08T13:56:13Z",
      "updated_at": "2024-04-08T13:56:13Z",
      "author_association": "MEMBER",
      "body": "Oh, it's `info probes` not `info tracepoints`. Whoops. It checks out now.\r\n\r\nCode review and lightly tested ACK 3933bdd6cfc9accab9e0ed47e83a5cc27ada6b68",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-2042827943",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26593"
    },
    {
      "event": "review_requested",
      "id": 12393479476,
      "node_id": "RRE_lADOABII585XccUyzwAAAALitX00",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12393479476",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-08T13:56:19Z",
      "requested_reviewer": {
        "login": "kouloumos",
        "id": 18506343,
        "node_id": "MDQ6VXNlcjE4NTA2MzQz",
        "avatar_url": "https://avatars.githubusercontent.com/u/18506343?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kouloumos",
        "html_url": "https://github.com/kouloumos",
        "followers_url": "https://api.github.com/users/kouloumos/followers",
        "following_url": "https://api.github.com/users/kouloumos/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kouloumos/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kouloumos/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kouloumos/subscriptions",
        "organizations_url": "https://api.github.com/users/kouloumos/orgs",
        "repos_url": "https://api.github.com/users/kouloumos/repos",
        "events_url": "https://api.github.com/users/kouloumos/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kouloumos/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 12393479659,
      "node_id": "RRE_lADOABII585XccUyzwAAAALitX3r",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12393479659",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-08T13:56:20Z",
      "requested_reviewer": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 12393480071,
      "node_id": "RRE_lADOABII585XccUyzwAAAALitX-H",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12393480071",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-08T13:56:21Z",
      "requested_reviewer": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "reviewed",
      "id": 1986597703,
      "node_id": "PRR_kwDOABII5852aRNH",
      "url": null,
      "actor": null,
      "commit_id": "3933bdd6cfc9accab9e0ed47e83a5cc27ada6b68",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "left a nit/question",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#pullrequestreview-1986597703",
      "submitted_at": "2024-04-09T08:07:21Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12408863489,
      "node_id": "HRFPE_lADOABII585XccUyzwAAAALjoDsB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12408863489",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-09T15:26:20Z"
    },
    {
      "event": "labeled",
      "id": 12412661463,
      "node_id": "LE_lADOABII585XccUyzwAAAALj2i7X",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12412661463",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-09T20:39:31Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2046011511,
      "node_id": "IC_kwDOABII585586h3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2046011511",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-09T20:39:32Z",
      "updated_at": "2024-04-09T20:39:32Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n\n🚧 At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/23620364225</sub>",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-2046011511",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26593"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12413207772,
      "node_id": "HRFPE_lADOABII585XccUyzwAAAALj4oTc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12413207772",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-09T21:32:36Z"
    },
    {
      "event": "unlabeled",
      "id": 12413741244,
      "node_id": "UNLE_lADOABII585XccUyzwAAAALj6qi8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12413741244",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-09T22:39:24Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2046945113,
      "node_id": "IC_kwDOABII5856AedZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2046945113",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-10T08:53:45Z",
      "updated_at": "2024-04-10T08:53:45Z",
      "author_association": "CONTRIBUTOR",
      "body": "As mentioned in https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1558318881, with C++20, we can use `__VA_OPT__` and drop the changes from https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1155488768. Done that and rebased.",
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-2046945113",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26593"
    },
    {
      "event": "reviewed",
      "id": 1991170894,
      "node_id": "PRR_kwDOABII5852rttO",
      "url": null,
      "actor": null,
      "commit_id": "38e24dfc5f1c54723018bf9d973b7d9cf9a2b824",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#pullrequestreview-1991170894",
      "submitted_at": "2024-04-10T09:06:33Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
    },
    {
      "event": "reviewed",
      "id": 2028133549,
      "node_id": "PRR_kwDOABII58544tyt",
      "url": null,
      "actor": null,
      "commit_id": "38e24dfc5f1c54723018bf9d973b7d9cf9a2b824",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK 38e24dfc5f1c54723018bf9d973b7d9cf9a2b824\r\n\r\nI think the macro simplification included in this change is a nice win for simplicity.\r\nRan all the updated examples in contrib/tracing, and played around with adding/removing various tracepoint arguments to check everything works as expected.\r\n\r\nLeft one q and one suggestion inline, but neither a blocker for this.",
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#pullrequestreview-2028133549",
      "submitted_at": "2024-04-29T12:13:03Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
    },
    {
      "event": "review_requested",
      "id": 12642111021,
      "node_id": "RRE_lADOABII585XccUyzwAAAALxh04t",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12642111021",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-29T12:13:08Z",
      "requested_reviewer": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "reviewed",
      "id": 2049935876,
      "node_id": "PRR_kwDOABII5856L4oE",
      "url": null,
      "actor": null,
      "commit_id": "38e24dfc5f1c54723018bf9d973b7d9cf9a2b824",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Approach ACK 38e24dfc5f1c54723018bf9d973b7d9cf9a2b824\r\n\r\nMostly nits that would be nice to address + one blocker about the `bitcoind_pid` vs `pid` mismatch.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#pullrequestreview-2049935876",
      "submitted_at": "2024-05-10T13:02:20Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
    },
    {
      "event": "labeled",
      "id": 12923956485,
      "node_id": "LE_lADOABII585XccUyzwAAAAMCU-0F",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12923956485",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-24T11:51:46Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12931936278,
      "node_id": "HRFPE_lADOABII585XccUyzwAAAAMCzbAW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12931936278",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-25T08:49:14Z"
    },
    {
      "event": "commented",
      "id": 2131136559,
      "node_id": "IC_kwDOABII585_BpAv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2131136559",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-25T08:49:56Z",
      "updated_at": "2024-05-25T09:41:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "Addressed @vasild comments and https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1582872788 (thanks!) and rebased.",
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-2131136559",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26593"
    },
    {
      "event": "mentioned",
      "id": 12931938058,
      "node_id": "MEE_lADOABII585XccUyzwAAAAMCzbcK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12931938058",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-25T08:49:57Z"
    },
    {
      "event": "subscribed",
      "id": 12931938061,
      "node_id": "SE_lADOABII585XccUyzwAAAAMCzbcN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12931938061",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-25T08:49:57Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12932105984,
      "node_id": "HRFPE_lADOABII585XccUyzwAAAAMC0EcA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12932105984",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-25T09:40:51Z"
    },
    {
      "event": "unlabeled",
      "id": 12932323713,
      "node_id": "UNLE_lADOABII585XccUyzwAAAAMC05mB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12932323713",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-25T10:41:43Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 13192818984,
      "node_id": "LE_lADOABII585XccUyzwAAAAMSWnEo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13192818984",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-17T23:31:30Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDM5OTFhZTBiZjc4Y2M0NWYyNTgxZjVmN2IyNmM4NDY0NWFkYTllY2M",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3991ae0bf78cc45f2581f5f7b26c84645ada9ecc",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3991ae0bf78cc45f2581f5f7b26c84645ada9ecc",
      "tree": {
        "sha": "1d15da0d3b53447eceadb2f60f2a7fa742211162",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1d15da0d3b53447eceadb2f60f2a7fa742211162"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 1d15da0d3b53447eceadb2f60f2a7fa742211162\nparent 9c5cdf07f30f816cd134e2cd2dca9c27ef7067a5\nauthor 0xb10c <b10c@b10c.me> 1700733977 +0100\ncommitter 0xb10c <b10c@b10c.me> 1718744084 +0200\n\ntracing: dedup TRACE macros & rename to TRACEPOINT\n\nThis deduplicates the TRACEx macros by using systemtaps STAP_PROBEV[0]\nvariadic macro instead of the DTrace compability DTRACE_PROBE[1] macros.\nBitcoin Core never had DTrace tracepoints, so we don't need to use the\ndrop-in replacement for it. As noted in pr25541[2], these macros aren't\ncompatibile with DTrace on macOS anyway.\n\nThis also renames the TRACEx macro to TRACEPOINT to clarify what the\nmacro does: inserting a tracepoint vs tracing (logging) something.\n\n[0]: https://sourceware.org/git/?p=systemtap.git;a=blob;f=includes/sys/sdt.h;h=24d5e01c37805e55c36f7202e5d4e821b85167a1;hb=ecab2afea46099b4e7dfd551462689224afdbe3a#l407\n[1]: https://sourceware.org/git/?p=systemtap.git;a=blob;f=includes/sys/sdt.h;h=24d5e01c37805e55c36f7202e5d4e821b85167a1;hb=ecab2afea46099b4e7dfd551462689224afdbe3a#l490\n[2]: https://github.com/bitcoin/bitcoin/pull/25541/files#diff-553886c5f808e01e3452c7b21e879cc355da388ef7680bf310f6acb926d43266R30-R31\n\nCo-authored-by: Martin Leitner-Ankerl <martin.ankerl@gmail.com>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEDMuq/Xai7OLM0xQd4v/VsdiMqX0FAmZx9BkACgkQ4v/VsdiM\nqX3xXg//fVjGyjODeQCLQn9kRk5XTwbIqk1m887r8l2oYqGe3bPdQ4UMuKg7GAwR\n/3wD0O7pA3wkxhL/4vRiCks0lHIx5P5IY5yNQDJxP9z35ZT2HgZxxKVXjooAUyuI\nNuDRPS/fL5vh5YolnIH+P/Za34KiCq1duTpfiqdHQkwbWtuAQG5uKCKCCwbbt3qm\npZW0gBO0ByYEqZDBdq6oaMbyxVceaENKHlBL2Y4WHKzB1nommMk6UaXTB5MDuk4U\nSOKG71nJpZEC+wXMxlrcakMOH1+/S7zp6rKC5CaPxACJ0NrkTwz62EovGGhv3aXP\nuZWb0tdfYRU4TVXIAXU7h89/lmx0BjutBg8LD7Uk6/+uozvUHPQTwh5lTCzpfnFS\nymGujVdQnbC7EvcyMD04acYzvLpfY1bSBkXw7EOMjTSrB7OK0TmnZlYZkfxwzxMt\n21aXzpSmmNDcQKwEmDPI0vjRq/T8m5nCyjafE4IS6kIQFsGjixOROQcIQttLR1ek\nZKF3zApNOlhstqclHShBS5goZpYklZEDvypO7myIe0QxFGSbSlPW+DQqIdGBQ8k2\nYuL1Ahi3gmeGp6jOWS8MPnEgbvjZtDhuTaGKbZqhfek73vX/KgYCE6EJj9l9owf5\nhoPTN+CpE6sZoZF+r2aYpP+Oi5FpE7TaEhOrNmJnaBddJnaa0ak=\n=Xw6l\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIMeCyz77fiNkdm7bVf0VUI3jfq2TOQumiBQ/zVkoJAGpCP/wEClUyVXsZnuc\nGWogcji3oYgI8SAmOim4vkMDZqsraflW1nI9vU3+ts7dyLWQ8p8/YyZppwjxBGZx\n9B3wCMF74cOpExjDAIPf4w0u+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRh\nci5vcGVudGltZXN0YW1wcy5vcmf/8BDHlXrRMsEjwQ0Vkz3yIZ32CPEEZnH0HvAI\n5nH8GmzL834Ag9/jDS75DI4sK2h0dHBzOi8vYm9iLmJ0Yy5jYWxlbmRhci5vcGVu\ndGltZXN0YW1wcy5vcmf/8BDXj06QujFKJUY6JUTizoyDCPAg3uCMiM/Sn4tp/Pen\nAuezusybhLnvfMrVmKFKXi+3FuQI8QRmcfQe8Ai8ci7w2RIdXACD3+MNLvkMjiko\naHR0cHM6Ly9maW5uZXkuY2FsZW5kYXIuZXRlcm5pdHl3YWxsLmNvbfAQ9TF6Oj6/\nwwvIlAcj6nxOqgjxBGZx9B7wCDRQjB+xtSPLAIPf4w0u+QyOIyJodHRwczovL2J0\nYy5jYWxlbmRhci5jYXRhbGxheHkuY29t\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9c5cdf07f30f816cd134e2cd2dca9c27ef7067a5",
          "sha": "9c5cdf07f30f816cd134e2cd2dca9c27ef7067a5",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9c5cdf07f30f816cd134e2cd2dca9c27ef7067a5"
        }
      ],
      "message": "tracing: dedup TRACE macros & rename to TRACEPOINT\n\nThis deduplicates the TRACEx macros by using systemtaps STAP_PROBEV[0]\nvariadic macro instead of the DTrace compability DTRACE_PROBE[1] macros.\nBitcoin Core never had DTrace tracepoints, so we don't need to use the\ndrop-in replacement for it. As noted in pr25541[2], these macros aren't\ncompatibile with DTrace on macOS anyway.\n\nThis also renames the TRACEx macro to TRACEPOINT to clarify what the\nmacro does: inserting a tracepoint vs tracing (logging) something.\n\n[0]: https://sourceware.org/git/?p=systemtap.git;a=blob;f=includes/sys/sdt.h;h=24d5e01c37805e55c36f7202e5d4e821b85167a1;hb=ecab2afea46099b4e7dfd551462689224afdbe3a#l407\n[1]: https://sourceware.org/git/?p=systemtap.git;a=blob;f=includes/sys/sdt.h;h=24d5e01c37805e55c36f7202e5d4e821b85167a1;hb=ecab2afea46099b4e7dfd551462689224afdbe3a#l490\n[2]: https://github.com/bitcoin/bitcoin/pull/25541/files#diff-553886c5f808e01e3452c7b21e879cc355da388ef7680bf310f6acb926d43266R30-R31\n\nCo-authored-by: Martin Leitner-Ankerl <martin.ankerl@gmail.com>",
      "committer": {
        "name": "0xb10c",
        "email": "b10c@b10c.me",
        "date": "2024-06-18T20:54:44Z"
      },
      "author": {
        "name": "0xb10c",
        "email": "b10c@b10c.me",
        "date": "2023-11-23T10:06:17Z"
      },
      "sha": "3991ae0bf78cc45f2581f5f7b26c84645ada9ecc"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDE4NDI1ODNmNmI3Y2Y5MzYzZDQwNzc3NDU1ZTYyMjljZWViZjE2YTU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1842583f6b7cf9363d40777455e6229ceebf16a5",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1842583f6b7cf9363d40777455e6229ceebf16a5",
      "tree": {
        "sha": "8f52968c579d986d8a676f67c905ec0495df331d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8f52968c579d986d8a676f67c905ec0495df331d"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 8f52968c579d986d8a676f67c905ec0495df331d\nparent 3991ae0bf78cc45f2581f5f7b26c84645ada9ecc\nauthor 0xb10c <b10c@b10c.me> 1700754696 +0100\ncommitter 0xb10c <b10c@b10c.me> 1718744094 +0200\n\ntracing: only prepare tracepoint args if attached\n\nBefore this commit, we would always prepare tracepoint arguments\nregardless of the tracepoint being used or not. While we already made\nsure not to include expensive arguments in our tracepoints, this\ncommit introduces gating to make sure the arguments are only prepared\nif the tracepoints are actually used. This is a win-win improvement\nto our tracing framework. For users not interested in tracing, the\noverhead is reduced to a cheap 'greater than 0' compare. As the\nsemaphore-gating technique used here is available in bpftrace, bcc,\nand libbpf, users interested in tracing don't have to change their\ntracing scripts while profiting from potential future tracepoints\npassing slightly more expensive arguments. An example are mempool\ntracepoints that pass serialized transactions. We've avoided the\nserialization in the past as it was too expensive.\n\nUnder the hood, the semaphore-gating works by placing a 2-byte\nsemaphore in the '.probes' ELF section. The address of the semaphore\nis contained in the ELF note providing the tracepoint information\n(`readelf -n ./src/bitcoind | grep NT_STAPSDT`). Tracing toolkits\nlike bpftrace, bcc, and libbpf increase the semaphore at the address\nupon attaching to the tracepoint. We only prepare the arguments and\nreach the tracepoint if the semaphore is greater than zero. The\nsemaphore is decreased when detaching from the tracepoint.\n\nThis also extends the \"Adding a new tracepoint\" documentation to\ninclude information about the semaphores and updated step-by-step\ninstructions on how to add a new tracepoint.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEDMuq/Xai7OLM0xQd4v/VsdiMqX0FAmZx9B4ACgkQ4v/VsdiM\nqX2jbw/+LhweVFHjxtd9kpShAXn1UMCQ1uW/OOXs8F1XZbo+O4quiXVEjgqF/ibq\nFganjdLmgKtXZQ2+Z7SPPJWKoj5jt9dvYVBwvtiRDdxVOPHE4yDnSkBv/Z4BzxDt\nMlXMgBI+J2V5bNU48Ikmf1yteNrHqvGmxWjbpD5SV4SaqUDjfJyTT7LQOWuFPNA8\nuGbiqSaLj969viNJTsAMqavQ5fPYemgfaq0P7KqzU4t8vTPd1vHGEJvducToGeMY\nmqBgx9Qa5lFJgbbpuGMHgDlL9lVYAJjsSacwOsBSxBDbUfNldOATCiwkVPBXGKxK\n9OfuPT7pD9rEMCxbQJ3OfgVLo9K3ZUyXe9vViFTVG82ESwrY1hCldusd+yueKyDp\nap8yQZrBuQqh9um+A02X4wKUH9+zawSDsngZgxzxnColoHI/ZDih3m8hSBQXInS4\nyPMc/wcsikiX4q4pxE6nMk8Q8tm4n7mEH8+UcZ72aKbdeq9UO+ce7fY41Xfpnwjk\n6Z6E4axhuGdK41MVO5jpgamwxLB4bPbYlAhqZMxABFLYYNk2/h7GBXmBck7Mmwxq\nD2pqfDfGYbH2vxJpO8xSuVdhkfjRZLpRgocHGPr4sRb7m2MUPylgt4VetGCxTxfy\nYwas/R2idj/E7tA9HexwCcnvzN6hrx+IFxWUkOKzu2UqjDmw6b4=\n=OWhG\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIAWMkVVjCeO/cuLoNSwVJklPbn2hKZiOP6MR3U/5f8t3CP/wEJrtOQa7vdD/\nAzdAT+APmgYI8CCi/7R/ywtfmY7YxAKVj1MF1HpvgOSrjiCFox5jP1j+tAjxIG+4\nfIrmFhH1NZO2CzTjzyQS2xeXsEygKJLyBshiO8fMCPEgqbkVdZBWpkYKV8Kgafns\ntAmKT497V5rJKqL7ElQATEAI8CClo14S93Izoi2psZ96MSkA7fXZZd6HN9k/wo1n\nvSvblgjxID5xf2RhZcNyTtkGzhTBhZRbG7rGv5moa8dEnYAozw1rCPAgsvFsf7xr\nsCUQvkhPWpuAPDk09pP7Ae7SyrG1iZghIvcI8QRmcfQi8AhNh/h/UyxtmQCD3+MN\nLvkMjiMiaHR0cHM6Ly9idGMuY2FsZW5kYXIuY2F0YWxsYXh5LmNvbf/wENNK3ShY\nxBQ81arKINfL7ssI8SB2blAh3F4+0OVmG5u289GC3XXE2696Mqej97FfRLCExQjx\nBGZx9CLwCHoQqwQct32rAIPf4w0u+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxl\nbmRhci5vcGVudGltZXN0YW1wcy5vcmfwEN4SBCxCDvOwJIdSGVrIYU8I8SAB50PX\n242jegm2xW4hI6ZuD4o4Wwr7+uHSJqeMiNSRgwjxIP9RITY3u5nsEU01zerpGy8G\nXfGNHjNcic6aQVv6fpOQCPEgjPk7vGa72YnPgAfX78BOCsx287WTCWRWlHdCsI/m\nqKII8QRmcfQi8Ah6peep90IkjQCD3+MNLvkMjiwraHR0cHM6Ly9ib2IuYnRjLmNh\nbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZw==\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3991ae0bf78cc45f2581f5f7b26c84645ada9ecc",
          "sha": "3991ae0bf78cc45f2581f5f7b26c84645ada9ecc",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3991ae0bf78cc45f2581f5f7b26c84645ada9ecc"
        }
      ],
      "message": "tracing: only prepare tracepoint args if attached\n\nBefore this commit, we would always prepare tracepoint arguments\nregardless of the tracepoint being used or not. While we already made\nsure not to include expensive arguments in our tracepoints, this\ncommit introduces gating to make sure the arguments are only prepared\nif the tracepoints are actually used. This is a win-win improvement\nto our tracing framework. For users not interested in tracing, the\noverhead is reduced to a cheap 'greater than 0' compare. As the\nsemaphore-gating technique used here is available in bpftrace, bcc,\nand libbpf, users interested in tracing don't have to change their\ntracing scripts while profiting from potential future tracepoints\npassing slightly more expensive arguments. An example are mempool\ntracepoints that pass serialized transactions. We've avoided the\nserialization in the past as it was too expensive.\n\nUnder the hood, the semaphore-gating works by placing a 2-byte\nsemaphore in the '.probes' ELF section. The address of the semaphore\nis contained in the ELF note providing the tracepoint information\n(`readelf -n ./src/bitcoind | grep NT_STAPSDT`). Tracing toolkits\nlike bpftrace, bcc, and libbpf increase the semaphore at the address\nupon attaching to the tracepoint. We only prepare the arguments and\nreach the tracepoint if the semaphore is greater than zero. The\nsemaphore is decreased when detaching from the tracepoint.\n\nThis also extends the \"Adding a new tracepoint\" documentation to\ninclude information about the semaphores and updated step-by-step\ninstructions on how to add a new tracepoint.",
      "committer": {
        "name": "0xb10c",
        "email": "b10c@b10c.me",
        "date": "2024-06-18T20:54:54Z"
      },
      "author": {
        "name": "0xb10c",
        "email": "b10c@b10c.me",
        "date": "2023-11-23T15:51:36Z"
      },
      "sha": "1842583f6b7cf9363d40777455e6229ceebf16a5"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDE5NDliNjRhZmU3ZWNmOTEwOTFmNTg2MjNlNzUzNDFhNzU5OTZkYTA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1949b64afe7ecf91091f58623e75341a75996da0",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1949b64afe7ecf91091f58623e75341a75996da0",
      "tree": {
        "sha": "63eccd3c9d3ccbdd21bc2aad94eb78c9306e4cc1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/63eccd3c9d3ccbdd21bc2aad94eb78c9306e4cc1"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 63eccd3c9d3ccbdd21bc2aad94eb78c9306e4cc1\nparent 1842583f6b7cf9363d40777455e6229ceebf16a5\nauthor 0xb10c <b10c@b10c.me> 1671537073 +0100\ncommitter 0xb10c <b10c@b10c.me> 1718744099 +0200\n\ntracing: use bitcoind pid in bcc tracing examples\n\nBCC needs the PID of a bitcoind process to attach to the tracepoints\n(instead of the binary path used before) when the tracepoints have a\nsemaphore.\n\nFor reference, we already use the PID in our tracepoint interface\ntests. See 220a5a2841172a07d6d7849596316f0e0933e272.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEDMuq/Xai7OLM0xQd4v/VsdiMqX0FAmZx9CMACgkQ4v/VsdiM\nqX2+LQ/+KhaNozvGfPvrqE2GteBIpXOUqwKGZQ3OlAfnAYn1L2sP+pfj/nf/Ib2m\nkkEI3SV0RqLwHx6mBwbyKqinxpthr9MTyrd31RoMuKJ12fZDR8WGm/K8saTxPTaD\nJ6Z8KoRzulzs+F42j3VrZqhgs/CzvFN6ZuWXrPl2QX3G6N+A+rxsdLorhglYXYSA\nxL8YLWiTDjchZ06V8mfTVBRKrsHm+ZY/bfwyMiwEIRTVzzBYTW2OeoX1qsSIkspY\n+fZgt2tPm6OP7Uh54JD7ovWecwh5sYkfvPYFmPiMCQe/+WxDTRlV9gwojk8LejsN\nCfpEjleYWp5PYBPp++TabErYH/Ck/MVyI8suyRU7gDnXG0fdrmh65nviIgz78osS\nUxgODuswyLi8V26HvOBK0K+W0khthnTFcg19trJTIIASSMJ9KHl3mucA9qnFawy5\n8BsA7/JjXaoSIoxpXxC768MgtFPKapJjdWAJssbh1CT2d24cWXgmLjjrgC0SL0hl\ncZGhEpWyGCl+T6qpjmcZRAAbnuYQuAUVZwKfCoOMsg19+aip0mHs/4Zyp1GD3x5q\nm0+ynTKS9l7RlBhOgbwO3rHdOBu7Ub2JeUf9G7G959JjyTouuNh3ZwtJYVn66DoV\nelMe+VUhnvI9QVRHVQdSE7R+zVOG4iItxNY1DAnkuRSxYlLvMls=\n=tCpV\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIO9MEmPv6WSc306xkmltLMmn7MgrSQ3dZt+BO+ggzPlqCP/wEE4u0PvjX0e5\nQnkwLGMCf9MI8CBD/AugPqkK8Tk9VJY/n1NywfxS4GBTrKrCQi6NBBxBBAjxIG2+\nCrU7DzXfz1D4ODKpFFC+4MJ8VoI2J3Yx/c4uEDLACPEg9akiRPbYb77t0kZPLiSR\nNK/vgPkbOlVSLHi0DKXFKskI8QRmcfQm8AhdHdkwRUmXIACD3+MNLvkMjiwraHR0\ncHM6Ly9ib2IuYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//wEFaKVIDL\nuX82bGG8XKJFLf8I8SC1gBNkgEyM9XB3LmYehgpVM5UZiMRbxLkE+74axY+xUAjw\nIAyh4Mpfex8NCpzV/tkt2g1G59qhUaSbuFC5i/cG9yehCPEEZnH0JvAI7T6GXGsL\ntQIAg9/jDS75DI4pKGh0dHBzOi8vZmlubmV5LmNhbGVuZGFyLmV0ZXJuaXR5d2Fs\nbC5jb23/8BB93TxApBGTYc4rMEnNLaqYCPAgCRzjXQd6HbG+BQDkxjK66bOEeWc2\nggEzWAtXKix6h/kI8SAi4PUyRIm6zjjv2hRNmPFAg1nMmJFbdkcmehQ++gdp2Qjx\nIJ6M1PCddFwVU0/xjKY9ijrlHu3aQgnLd1W744IBgHsiCPEEZnH0JvAIGDSYzDEE\nJW0Ag9/jDS75DI4jImh0dHBzOi8vYnRjLmNhbGVuZGFyLmNhdGFsbGF4eS5jb23w\nEIltUUSru/C21VZgGt3xvdsI8CAn9iaHwEEGZ9J2yb3JSoxjDYZtRKewVK0lKVhR\n8vSU3wjxIJhyMbS1xUzN2qNCGVAec8QeweX76e86n0Dp1D6Yz+84CPEEZnH0JvAI\nuzgFF8Gg3gwAg9/jDS75DI4uLWh0dHBzOi8vYWxpY2UuYnRjLmNhbGVuZGFyLm9w\nZW50aW1lc3RhbXBzLm9yZw==\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1842583f6b7cf9363d40777455e6229ceebf16a5",
          "sha": "1842583f6b7cf9363d40777455e6229ceebf16a5",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1842583f6b7cf9363d40777455e6229ceebf16a5"
        }
      ],
      "message": "tracing: use bitcoind pid in bcc tracing examples\n\nBCC needs the PID of a bitcoind process to attach to the tracepoints\n(instead of the binary path used before) when the tracepoints have a\nsemaphore.\n\nFor reference, we already use the PID in our tracepoint interface\ntests. See 220a5a2841172a07d6d7849596316f0e0933e272.",
      "committer": {
        "name": "0xb10c",
        "email": "b10c@b10c.me",
        "date": "2024-06-18T20:54:59Z"
      },
      "author": {
        "name": "0xb10c",
        "email": "b10c@b10c.me",
        "date": "2022-12-20T11:51:13Z"
      },
      "sha": "1949b64afe7ecf91091f58623e75341a75996da0"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13206473779,
      "node_id": "HRFPE_lADOABII585XccUyzwAAAAMTKswz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13206473779",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-18T20:56:57Z"
    },
    {
      "event": "unlabeled",
      "id": 13207613802,
      "node_id": "UNLE_lADOABII585XccUyzwAAAAMTPDFq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13207613802",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-18T22:37:15Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1034160141",
      "pull_request_review_id": 1196700835,
      "id": 1034160141,
      "node_id": "PRRC_kwDOABII5849pAgN",
      "diff_hunk": "@@ -7,39 +7,58 @@\n \n #ifdef ENABLE_TRACING\n \n+// Setting SDT_USE_VARIADIC let's systemtap (sys/sdt.h) know that we want to use\n+// the optional variadic macros to define tracepoints.\n+#define SDT_USE_VARIADIC 1\n+\n+// Setting _SDT_HAS_SEMAPHORES let's systemtap (sys/sdt.h) know that we want to\n+// use the optional semaphore feature for our tracepoints. This feature allows\n+// us to check if something is attached to a tracepoint. We only want to prepare\n+// some potentially expensive tracepoint arguments, if the tracepoint is being\n+// used. Here, an expensive argument preparation could, for example, be\n+// calculating a hash or serialization of a data structure.\n+#define _SDT_HAS_SEMAPHORES 1\n+\n #include <sys/sdt.h>\n \n-#define TRACE(context, event) DTRACE_PROBE(context, event)\n-#define TRACE1(context, event, a) DTRACE_PROBE1(context, event, a)\n-#define TRACE2(context, event, a, b) DTRACE_PROBE2(context, event, a, b)\n-#define TRACE3(context, event, a, b, c) DTRACE_PROBE3(context, event, a, b, c)\n-#define TRACE4(context, event, a, b, c, d) DTRACE_PROBE4(context, event, a, b, c, d)\n-#define TRACE5(context, event, a, b, c, d, e) DTRACE_PROBE5(context, event, a, b, c, d, e)\n-#define TRACE6(context, event, a, b, c, d, e, f) DTRACE_PROBE6(context, event, a, b, c, d, e, f)\n-#define TRACE7(context, event, a, b, c, d, e, f, g) DTRACE_PROBE7(context, event, a, b, c, d, e, f, g)\n-#define TRACE8(context, event, a, b, c, d, e, f, g, h) DTRACE_PROBE8(context, event, a, b, c, d, e, f, g, h)\n-#define TRACE9(context, event, a, b, c, d, e, f, g, h, i) DTRACE_PROBE9(context, event, a, b, c, d, e, f, g, h, i)\n-#define TRACE10(context, event, a, b, c, d, e, f, g, h, i, j) DTRACE_PROBE10(context, event, a, b, c, d, e, f, g, h, i, j)\n-#define TRACE11(context, event, a, b, c, d, e, f, g, h, i, j, k) DTRACE_PROBE11(context, event, a, b, c, d, e, f, g, h, i, j, k)\n-#define TRACE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l) DTRACE_PROBE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l)\n+// Used to define a counting semaphore for a tracepoint. This semaphore is\n+// automatically incremented by tracing frameworks (bpftrace, bcc, libbpf, ...)\n+// upon attaching to the tracepoint and decremented when detaching. This needs\n+// to be a global variable. It's placed in the '.probes' ELF section.\n+#define TRACEPOINT_SEMAPHORE(context, event) \\\n+    unsigned short context##_##event##_semaphore __attribute__((section (\".probes\")))\n+\n+// Returns true if something is attached to the tracepoint.\n+#define TRACEPOINT_ACTIVE(context, event) context##_##event##_semaphore > 0\n+\n+// A USDT tracepoint with zero to twelve arguments. Here, it **IS** checked that\n+// the tracepoint is active before preparing its arguments. Use the\n+// TRACEPOINT_UNCHECKED macro if you want to manually check that the tracepoint\n+// is active.\n+#define TRACEPOINT(context, event, args...) \\\n+    if (TRACEPOINT_ACTIVE(context, event)) \\\n+        STAP_PROBEV(context, event, args)\n+\n+// A USDT tracepoint with zero to twelve arguments. Here, it is **NOT** checked\n+// that the tracepoint is active before preparing its arguments. Use this macro\n+// if you want to, for example, prepare expensive tracepoint arguments over\n+// multiple lines. Example usage:\n+//\n+//  if (TRACEPOINT_ACTIVE(context, event)) {\n+//      result = slightly_expensive_calulation();\n+//      TRACEPOINT_UNCHECKED(context, event, result);\n+//  }\n+//\n+#define TRACEPOINT_UNCHECKED(context, event, args...) \\",
      "path": "src/util/trace.h",
      "position": null,
      "original_position": 59,
      "commit_id": "1949b64afe7ecf91091f58623e75341a75996da0",
      "original_commit_id": "94331ba3cc8e5b2a3453e796a6988b668fd34668",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Aren't variadic macros (at least in this form) an extension, not standard C++?",
      "created_at": "2022-11-28T23:39:04Z",
      "updated_at": "2022-11-28T23:39:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1034160141",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1034160141"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 52,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1034419006",
      "pull_request_review_id": 1197057845,
      "id": 1034419006,
      "node_id": "PRRC_kwDOABII5849p_s-",
      "diff_hunk": "@@ -7,39 +7,58 @@\n \n #ifdef ENABLE_TRACING\n \n+// Setting SDT_USE_VARIADIC let's systemtap (sys/sdt.h) know that we want to use\n+// the optional variadic macros to define tracepoints.\n+#define SDT_USE_VARIADIC 1\n+\n+// Setting _SDT_HAS_SEMAPHORES let's systemtap (sys/sdt.h) know that we want to\n+// use the optional semaphore feature for our tracepoints. This feature allows\n+// us to check if something is attached to a tracepoint. We only want to prepare\n+// some potentially expensive tracepoint arguments, if the tracepoint is being\n+// used. Here, an expensive argument preparation could, for example, be\n+// calculating a hash or serialization of a data structure.\n+#define _SDT_HAS_SEMAPHORES 1\n+\n #include <sys/sdt.h>\n \n-#define TRACE(context, event) DTRACE_PROBE(context, event)\n-#define TRACE1(context, event, a) DTRACE_PROBE1(context, event, a)\n-#define TRACE2(context, event, a, b) DTRACE_PROBE2(context, event, a, b)\n-#define TRACE3(context, event, a, b, c) DTRACE_PROBE3(context, event, a, b, c)\n-#define TRACE4(context, event, a, b, c, d) DTRACE_PROBE4(context, event, a, b, c, d)\n-#define TRACE5(context, event, a, b, c, d, e) DTRACE_PROBE5(context, event, a, b, c, d, e)\n-#define TRACE6(context, event, a, b, c, d, e, f) DTRACE_PROBE6(context, event, a, b, c, d, e, f)\n-#define TRACE7(context, event, a, b, c, d, e, f, g) DTRACE_PROBE7(context, event, a, b, c, d, e, f, g)\n-#define TRACE8(context, event, a, b, c, d, e, f, g, h) DTRACE_PROBE8(context, event, a, b, c, d, e, f, g, h)\n-#define TRACE9(context, event, a, b, c, d, e, f, g, h, i) DTRACE_PROBE9(context, event, a, b, c, d, e, f, g, h, i)\n-#define TRACE10(context, event, a, b, c, d, e, f, g, h, i, j) DTRACE_PROBE10(context, event, a, b, c, d, e, f, g, h, i, j)\n-#define TRACE11(context, event, a, b, c, d, e, f, g, h, i, j, k) DTRACE_PROBE11(context, event, a, b, c, d, e, f, g, h, i, j, k)\n-#define TRACE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l) DTRACE_PROBE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l)\n+// Used to define a counting semaphore for a tracepoint. This semaphore is\n+// automatically incremented by tracing frameworks (bpftrace, bcc, libbpf, ...)\n+// upon attaching to the tracepoint and decremented when detaching. This needs\n+// to be a global variable. It's placed in the '.probes' ELF section.\n+#define TRACEPOINT_SEMAPHORE(context, event) \\\n+    unsigned short context##_##event##_semaphore __attribute__((section (\".probes\")))\n+\n+// Returns true if something is attached to the tracepoint.\n+#define TRACEPOINT_ACTIVE(context, event) context##_##event##_semaphore > 0\n+\n+// A USDT tracepoint with zero to twelve arguments. Here, it **IS** checked that\n+// the tracepoint is active before preparing its arguments. Use the\n+// TRACEPOINT_UNCHECKED macro if you want to manually check that the tracepoint\n+// is active.\n+#define TRACEPOINT(context, event, args...) \\\n+    if (TRACEPOINT_ACTIVE(context, event)) \\\n+        STAP_PROBEV(context, event, args)\n+\n+// A USDT tracepoint with zero to twelve arguments. Here, it is **NOT** checked\n+// that the tracepoint is active before preparing its arguments. Use this macro\n+// if you want to, for example, prepare expensive tracepoint arguments over\n+// multiple lines. Example usage:\n+//\n+//  if (TRACEPOINT_ACTIVE(context, event)) {\n+//      result = slightly_expensive_calulation();\n+//      TRACEPOINT_UNCHECKED(context, event, result);\n+//  }\n+//\n+#define TRACEPOINT_UNCHECKED(context, event, args...) \\",
      "path": "src/util/trace.h",
      "position": null,
      "original_position": 59,
      "commit_id": "1949b64afe7ecf91091f58623e75341a75996da0",
      "original_commit_id": "94331ba3cc8e5b2a3453e796a6988b668fd34668",
      "in_reply_to_id": 1034160141,
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "TIL, could change to `...` and `__VA_ARGS__` if needed",
      "created_at": "2022-11-29T08:11:15Z",
      "updated_at": "2022-11-29T08:11:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1034419006",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1034419006"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 52,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1034548969",
      "pull_request_review_id": 1197254044,
      "id": 1034548969,
      "node_id": "PRRC_kwDOABII5849qfbp",
      "diff_hunk": "@@ -11,16 +11,54 @@\n // the optional variadic macros to define tracepoints.\n #define SDT_USE_VARIADIC 1\n \n+// Setting _SDT_HAS_SEMAPHORES let's systemtap (sys/sdt.h) know that we want to\n+// use the optional semaphore feature for our tracepoints. This feature allows\n+// us to check if something is attached to a tracepoint. We only want to prepare\n+// some potentially expensive tracepoint arguments, if the tracepoint is being\n+// used. Here, an expensive argument preparation could, for example, be\n+// calculating a hash or serialization of a data structure.\n+#define _SDT_HAS_SEMAPHORES 1\n+\n #include <sys/sdt.h>\n \n-// A USDT tracepoint with zero to twelve arguments.\n-#define TRACEPOINT(context, event, args...) STAP_PROBEV(context, event, args)\n+// Used to define a counting semaphore for a tracepoint. This semaphore is\n+// automatically incremented by tracing frameworks (bpftrace, bcc, libbpf, ...)\n+// upon attaching to the tracepoint and decremented when detaching. This needs\n+// to be a global variable. It's placed in the '.probes' ELF section.\n+#define TRACEPOINT_SEMAPHORE(context, event) \\\n+    unsigned short context##_##event##_semaphore __attribute__((section (\".probes\")))\n+\n+// Returns true if something is attached to the tracepoint.\n+#define TRACEPOINT_ACTIVE(context, event) context##_##event##_semaphore > 0\n+\n+// A USDT tracepoint with zero to twelve arguments. Here, it **IS** checked that\n+// the tracepoint is active before preparing its arguments. Use the\n+// TRACEPOINT_UNCHECKED macro if you want to manually check that the tracepoint\n+// is active.\n+#define TRACEPOINT(context, event, args...) \\\n+    if (TRACEPOINT_ACTIVE(context, event)) \\\n+        STAP_PROBEV(context, event, args)\n+\n+// A USDT tracepoint with zero to twelve arguments. Here, it is **NOT** checked\n+// that the tracepoint is active before preparing its arguments. Use this macro\n+// if you want to, for example, prepare expensive tracepoint arguments over\n+// multiple lines. Example usage:\n+//\n+//  if (TRACEPOINT_ACTIVE(context, event)) {\n+//      result = slightly_expensive_calulation();\n+//      TRACEPOINT_UNCHECKED(context, event, result);\n+//  }\n+//\n+#define TRACEPOINT_UNCHECKED(context, event, args...) \\",
      "path": "src/util/trace.h",
      "position": null,
      "original_position": 44,
      "commit_id": "1949b64afe7ecf91091f58623e75341a75996da0",
      "original_commit_id": "94331ba3cc8e5b2a3453e796a6988b668fd34668",
      "in_reply_to_id": null,
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thinking about it: We might not need an extra `TRACEPOINT_UNCHECKED` macro. We can also use the `TRACEPOINT` in all places where we'd use the unchecked one. This would mean would do two `TRACEPOINT_ACTIVE` checks, but these are extremely cheap and might even be optimized to one by the compiler. \r\n\r\nDropping the unchecked version results in is a smaller, better internal tracepoint API and removes the possibility that someone uses the unchecked version but doesn't gate it.",
      "created_at": "2022-11-29T10:08:06Z",
      "updated_at": "2022-11-29T10:21:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1034548969",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1034548969"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
        }
      },
      "start_line": null,
      "original_start_line": 42,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 52,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1034564335",
      "pull_request_review_id": 1197276566,
      "id": 1034564335,
      "node_id": "PRRC_kwDOABII5849qjLv",
      "diff_hunk": "@@ -7,39 +7,58 @@\n \n #ifdef ENABLE_TRACING\n \n+// Setting SDT_USE_VARIADIC let's systemtap (sys/sdt.h) know that we want to use\n+// the optional variadic macros to define tracepoints.\n+#define SDT_USE_VARIADIC 1\n+\n+// Setting _SDT_HAS_SEMAPHORES let's systemtap (sys/sdt.h) know that we want to\n+// use the optional semaphore feature for our tracepoints. This feature allows\n+// us to check if something is attached to a tracepoint. We only want to prepare\n+// some potentially expensive tracepoint arguments, if the tracepoint is being\n+// used. Here, an expensive argument preparation could, for example, be\n+// calculating a hash or serialization of a data structure.\n+#define _SDT_HAS_SEMAPHORES 1\n+\n #include <sys/sdt.h>\n \n-#define TRACE(context, event) DTRACE_PROBE(context, event)\n-#define TRACE1(context, event, a) DTRACE_PROBE1(context, event, a)\n-#define TRACE2(context, event, a, b) DTRACE_PROBE2(context, event, a, b)\n-#define TRACE3(context, event, a, b, c) DTRACE_PROBE3(context, event, a, b, c)\n-#define TRACE4(context, event, a, b, c, d) DTRACE_PROBE4(context, event, a, b, c, d)\n-#define TRACE5(context, event, a, b, c, d, e) DTRACE_PROBE5(context, event, a, b, c, d, e)\n-#define TRACE6(context, event, a, b, c, d, e, f) DTRACE_PROBE6(context, event, a, b, c, d, e, f)\n-#define TRACE7(context, event, a, b, c, d, e, f, g) DTRACE_PROBE7(context, event, a, b, c, d, e, f, g)\n-#define TRACE8(context, event, a, b, c, d, e, f, g, h) DTRACE_PROBE8(context, event, a, b, c, d, e, f, g, h)\n-#define TRACE9(context, event, a, b, c, d, e, f, g, h, i) DTRACE_PROBE9(context, event, a, b, c, d, e, f, g, h, i)\n-#define TRACE10(context, event, a, b, c, d, e, f, g, h, i, j) DTRACE_PROBE10(context, event, a, b, c, d, e, f, g, h, i, j)\n-#define TRACE11(context, event, a, b, c, d, e, f, g, h, i, j, k) DTRACE_PROBE11(context, event, a, b, c, d, e, f, g, h, i, j, k)\n-#define TRACE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l) DTRACE_PROBE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l)\n+// Used to define a counting semaphore for a tracepoint. This semaphore is\n+// automatically incremented by tracing frameworks (bpftrace, bcc, libbpf, ...)\n+// upon attaching to the tracepoint and decremented when detaching. This needs\n+// to be a global variable. It's placed in the '.probes' ELF section.\n+#define TRACEPOINT_SEMAPHORE(context, event) \\\n+    unsigned short context##_##event##_semaphore __attribute__((section (\".probes\")))\n+\n+// Returns true if something is attached to the tracepoint.\n+#define TRACEPOINT_ACTIVE(context, event) context##_##event##_semaphore > 0\n+\n+// A USDT tracepoint with zero to twelve arguments. Here, it **IS** checked that\n+// the tracepoint is active before preparing its arguments. Use the\n+// TRACEPOINT_UNCHECKED macro if you want to manually check that the tracepoint\n+// is active.\n+#define TRACEPOINT(context, event, args...) \\\n+    if (TRACEPOINT_ACTIVE(context, event)) \\\n+        STAP_PROBEV(context, event, args)\n+\n+// A USDT tracepoint with zero to twelve arguments. Here, it is **NOT** checked\n+// that the tracepoint is active before preparing its arguments. Use this macro\n+// if you want to, for example, prepare expensive tracepoint arguments over\n+// multiple lines. Example usage:\n+//\n+//  if (TRACEPOINT_ACTIVE(context, event)) {\n+//      result = slightly_expensive_calulation();\n+//      TRACEPOINT_UNCHECKED(context, event, result);\n+//  }\n+//\n+#define TRACEPOINT_UNCHECKED(context, event, args...) \\",
      "path": "src/util/trace.h",
      "position": null,
      "original_position": 59,
      "commit_id": "1949b64afe7ecf91091f58623e75341a75996da0",
      "original_commit_id": "94331ba3cc8e5b2a3453e796a6988b668fd34668",
      "in_reply_to_id": 1034160141,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "We want to avoid extensions where possible: https://github.com/bitcoin/bitcoin/blob/d415b7261c05dafbc3e65eea72d270b2bed0958b/configure.ac#L94",
      "created_at": "2022-11-29T10:22:21Z",
      "updated_at": "2022-11-29T10:22:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1034564335",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1034564335"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 52,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1140252968",
      "pull_request_review_id": 1345973179,
      "id": 1140252968,
      "node_id": "PRRC_kwDOABII585D9uEo",
      "diff_hunk": "@@ -0,0 +1,32 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/util/setup_common.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <util/trace.h>\n+\n+TRACEPOINT_SEMAPHORE(test, zero_args);\n+TRACEPOINT_SEMAPHORE(test, one_arg);\n+TRACEPOINT_SEMAPHORE(test, six_args);\n+TRACEPOINT_SEMAPHORE(test, twelve_args);\n+\n+BOOST_FIXTURE_TEST_SUITE(util_trace_tests, BasicTestingSetup)\n+\n+BOOST_AUTO_TEST_CASE(test_tracepoint_zero_args)\n+{\n+  TRACEPOINT0(test, zero_args);\n+  BOOST_CHECK(true);\n+}\n+\n+BOOST_AUTO_TEST_CASE(test_tracepoint_n_args)\n+{\n+  TRACEPOINT(test, one_arg, 1);\n+  TRACEPOINT(test, six_args, 1, 2, 3, 4, 5, 6);\n+  TRACEPOINT(test, twelve_args, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12);\n+  BOOST_CHECK(true);",
      "path": "src/test/util_trace_tests.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "1949b64afe7ecf91091f58623e75341a75996da0",
      "original_commit_id": "38df8dd06516576e9db21ff2899d083232ce8846",
      "in_reply_to_id": null,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is this test just checking that there is no error thrown when using the macro in this way?",
      "created_at": "2023-03-17T13:40:48Z",
      "updated_at": "2023-03-17T16:31:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1140252968",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1140252968"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 54,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1140555021",
      "pull_request_review_id": 1346453107,
      "id": 1140555021,
      "node_id": "PRRC_kwDOABII585D-30N",
      "diff_hunk": "@@ -0,0 +1,32 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/util/setup_common.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <util/trace.h>\n+\n+TRACEPOINT_SEMAPHORE(test, zero_args);\n+TRACEPOINT_SEMAPHORE(test, one_arg);\n+TRACEPOINT_SEMAPHORE(test, six_args);\n+TRACEPOINT_SEMAPHORE(test, twelve_args);\n+\n+BOOST_FIXTURE_TEST_SUITE(util_trace_tests, BasicTestingSetup)\n+\n+BOOST_AUTO_TEST_CASE(test_tracepoint_zero_args)\n+{\n+  TRACEPOINT0(test, zero_args);\n+  BOOST_CHECK(true);\n+}\n+\n+BOOST_AUTO_TEST_CASE(test_tracepoint_n_args)\n+{\n+  TRACEPOINT(test, one_arg, 1);\n+  TRACEPOINT(test, six_args, 1, 2, 3, 4, 5, 6);\n+  TRACEPOINT(test, twelve_args, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12);\n+  BOOST_CHECK(true);",
      "path": "src/test/util_trace_tests.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "1949b64afe7ecf91091f58623e75341a75996da0",
      "original_commit_id": "38df8dd06516576e9db21ff2899d083232ce8846",
      "in_reply_to_id": 1140252968,
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes, from the OP: \"Also adding unit tests that include all tracepoint macros to make sure there are no compiler problems with them (e.g. some varadiac extension not supported).\" I added them after addressing https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1034160141\r\n\r\nBut I think it makes sense to document this in the unit tests with a comment too. Will add on next push.",
      "created_at": "2023-03-17T18:06:38Z",
      "updated_at": "2023-03-17T18:06:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1140555021",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1140555021"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 54,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1141968668",
      "pull_request_review_id": 1348309775,
      "id": 1141968668,
      "node_id": "PRRC_kwDOABII585EEQ8c",
      "diff_hunk": "@@ -7,37 +7,26 @@\n \n #ifdef ENABLE_TRACING\n \n+// Setting SDT_USE_VARIADIC let's systemtap (sys/sdt.h) know that we want to use\n+// the optional variadic macros to define tracepoints.\n+#define SDT_USE_VARIADIC 1\n+\n #include <sys/sdt.h>\n \n-#define TRACE(context, event) DTRACE_PROBE(context, event)\n-#define TRACE1(context, event, a) DTRACE_PROBE1(context, event, a)\n-#define TRACE2(context, event, a, b) DTRACE_PROBE2(context, event, a, b)\n-#define TRACE3(context, event, a, b, c) DTRACE_PROBE3(context, event, a, b, c)\n-#define TRACE4(context, event, a, b, c, d) DTRACE_PROBE4(context, event, a, b, c, d)\n-#define TRACE5(context, event, a, b, c, d, e) DTRACE_PROBE5(context, event, a, b, c, d, e)\n-#define TRACE6(context, event, a, b, c, d, e, f) DTRACE_PROBE6(context, event, a, b, c, d, e, f)\n-#define TRACE7(context, event, a, b, c, d, e, f, g) DTRACE_PROBE7(context, event, a, b, c, d, e, f, g)\n-#define TRACE8(context, event, a, b, c, d, e, f, g, h) DTRACE_PROBE8(context, event, a, b, c, d, e, f, g, h)\n-#define TRACE9(context, event, a, b, c, d, e, f, g, h, i) DTRACE_PROBE9(context, event, a, b, c, d, e, f, g, h, i)\n-#define TRACE10(context, event, a, b, c, d, e, f, g, h, i, j) DTRACE_PROBE10(context, event, a, b, c, d, e, f, g, h, i, j)\n-#define TRACE11(context, event, a, b, c, d, e, f, g, h, i, j, k) DTRACE_PROBE11(context, event, a, b, c, d, e, f, g, h, i, j, k)\n-#define TRACE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l) DTRACE_PROBE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l)\n+// A USDT tracepoint with no arguments.\n+#define TRACEPOINT0(context, event) \\",
      "path": "src/util/trace.h",
      "position": null,
      "original_position": 24,
      "commit_id": "1949b64afe7ecf91091f58623e75341a75996da0",
      "original_commit_id": "38df8dd06516576e9db21ff2899d083232ce8846",
      "in_reply_to_id": null,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why do we need this special-cased 0 arg tracepoint? ISTM that the systemtap variadic supports 0 arg calls:\r\n\r\nhttps://github.com/jav/systemtap/blob/2da355dd02a18bf4f67e2ceeb504b351b4bd5b83/includes/sys/sdt.h#L291-L303",
      "created_at": "2023-03-20T11:18:45Z",
      "updated_at": "2023-03-20T11:19:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1141968668",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1141968668"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 17,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1142351647",
      "pull_request_review_id": 1348901713,
      "id": 1142351647,
      "node_id": "PRRC_kwDOABII585EFucf",
      "diff_hunk": "@@ -7,37 +7,26 @@\n \n #ifdef ENABLE_TRACING\n \n+// Setting SDT_USE_VARIADIC let's systemtap (sys/sdt.h) know that we want to use\n+// the optional variadic macros to define tracepoints.\n+#define SDT_USE_VARIADIC 1\n+\n #include <sys/sdt.h>\n \n-#define TRACE(context, event) DTRACE_PROBE(context, event)\n-#define TRACE1(context, event, a) DTRACE_PROBE1(context, event, a)\n-#define TRACE2(context, event, a, b) DTRACE_PROBE2(context, event, a, b)\n-#define TRACE3(context, event, a, b, c) DTRACE_PROBE3(context, event, a, b, c)\n-#define TRACE4(context, event, a, b, c, d) DTRACE_PROBE4(context, event, a, b, c, d)\n-#define TRACE5(context, event, a, b, c, d, e) DTRACE_PROBE5(context, event, a, b, c, d, e)\n-#define TRACE6(context, event, a, b, c, d, e, f) DTRACE_PROBE6(context, event, a, b, c, d, e, f)\n-#define TRACE7(context, event, a, b, c, d, e, f, g) DTRACE_PROBE7(context, event, a, b, c, d, e, f, g)\n-#define TRACE8(context, event, a, b, c, d, e, f, g, h) DTRACE_PROBE8(context, event, a, b, c, d, e, f, g, h)\n-#define TRACE9(context, event, a, b, c, d, e, f, g, h, i) DTRACE_PROBE9(context, event, a, b, c, d, e, f, g, h, i)\n-#define TRACE10(context, event, a, b, c, d, e, f, g, h, i, j) DTRACE_PROBE10(context, event, a, b, c, d, e, f, g, h, i, j)\n-#define TRACE11(context, event, a, b, c, d, e, f, g, h, i, j, k) DTRACE_PROBE11(context, event, a, b, c, d, e, f, g, h, i, j, k)\n-#define TRACE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l) DTRACE_PROBE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l)\n+// A USDT tracepoint with no arguments.\n+#define TRACEPOINT0(context, event) \\",
      "path": "src/util/trace.h",
      "position": null,
      "original_position": 24,
      "commit_id": "1949b64afe7ecf91091f58623e75341a75996da0",
      "original_commit_id": "38df8dd06516576e9db21ff2899d083232ce8846",
      "in_reply_to_id": 1141968668,
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "fwiw: This is the \"source\", I think the repo you linked to is an outdated fork: https://sourceware.org/git/?p=systemtap.git;a=blob;f=includes/sys/sdt.h;h=4075a5ff1c3f09c3913615e62840595efe003c6d;hb=HEAD#l404\r\n\r\nBut yes, reading that comment I'd agree that it should work. I've added the following to try it but it doesn't compile. IIRC that's the reason why I added the `TRACEPOINT0()`.\r\n\r\n```patch\r\ndiff --git a/src/test/util_trace_tests.cpp b/src/test/util_trace_tests.cpp\r\nindex 6e3e846b4..488d7b669 100644\r\n--- a/src/test/util_trace_tests.cpp\r\n+++ b/src/test/util_trace_tests.cpp\r\n@@ -9,6 +9,7 @@\r\n #include <util/trace.h>\r\n\r\n TRACEPOINT_SEMAPHORE(test, zero_args);\r\n+TRACEPOINT_SEMAPHORE(test, zero_args2);\r\n TRACEPOINT_SEMAPHORE(test, one_arg);\r\n TRACEPOINT_SEMAPHORE(test, six_args);\r\n TRACEPOINT_SEMAPHORE(test, twelve_args);\r\n@@ -19,6 +20,7 @@ BOOST_FIXTURE_TEST_SUITE(util_trace_tests, BasicTestingSetup)\r\n BOOST_AUTO_TEST_CASE(test_tracepoint_zero_args)\r\n {\r\n   TRACEPOINT0(test, zero_args);\r\n+  TRACEPOINT(test, zero_args2);\r\n   BOOST_CHECK(true);\r\n }\r\n```\r\n\r\n```console\r\nIn file included from ./util/trace.h:22,\r\n                 from test/util_trace_tests.cpp:9:\r\ntest/util_trace_tests.cpp: In member function ‘void util_trace_tests::test_tracepoint_zero_args::test_method()’:\r\n./util/trace.h:43:9: error: expected primary-expression before ‘)’ token\r\n   43 |         STAP_PROBEV(context, event, __VA_ARGS__)\r\n      |         ^~~~~~~~~~~\r\ntest/util_trace_tests.cpp:23:3: note: in expansion of macro ‘TRACEPOINT’\r\n   23 |   TRACEPOINT(test, zero_args2);\r\n      |   ^~~~~~~~~~\r\n./util/trace.h:43:9: error: template argument 1 is invalid\r\n   43 |         STAP_PROBEV(context, event, __VA_ARGS__)\r\n      |         ^~~~~~~~~~~\r\ntest/util_trace_tests.cpp:23:3: note: in expansion of macro ‘TRACEPOINT’\r\n   23 |   TRACEPOINT(test, zero_args2);\r\n      |   ^~~~~~~~~~\r\n./util/trace.h:43:9: error: expected primary-expression before ‘)’ token\r\n   43 |         STAP_PROBEV(context, event, __VA_ARGS__)\r\n      |         ^~~~~~~~~~~\r\ntest/util_trace_tests.cpp:23:3: note: in expansion of macro ‘TRACEPOINT’\r\n   23 |   TRACEPOINT(test, zero_args2);\r\n      |   ^~~~~~~~~~\r\n./util/trace.h:43:9: error: expected primary-expression before ‘)’ token\r\n   43 |         STAP_PROBEV(context, event, __VA_ARGS__)\r\n      |         ^~~~~~~~~~~\r\ntest/util_trace_tests.cpp:23:3: note: in expansion of macro ‘TRACEPOINT’\r\n   23 |   TRACEPOINT(test, zero_args2);\r\n      |   ^~~~~~~~~~\r\nmake[2]: *** [Makefile:18883: test/test_bitcoin-util_trace_tests.o] Error 1\r\nmake[2]: *** Waiting for unfinished jobs....\r\nmake[2]: Leaving directory '..'\r\nmake[1]: *** [Makefile:19418: all-recursive] Error 1\r\nmake[1]: Leaving directory '..'\r\nmake: *** [Makefile:816: all-recursive] Error 1\r\n```",
      "created_at": "2023-03-20T15:58:51Z",
      "updated_at": "2023-03-20T16:00:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1142351647",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1142351647"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 17,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1142353299",
      "pull_request_review_id": 1348904160,
      "id": 1142353299,
      "node_id": "PRRC_kwDOABII585EFu2T",
      "diff_hunk": "@@ -7,37 +7,26 @@\n \n #ifdef ENABLE_TRACING\n \n+// Setting SDT_USE_VARIADIC let's systemtap (sys/sdt.h) know that we want to use\n+// the optional variadic macros to define tracepoints.\n+#define SDT_USE_VARIADIC 1\n+\n #include <sys/sdt.h>\n \n-#define TRACE(context, event) DTRACE_PROBE(context, event)\n-#define TRACE1(context, event, a) DTRACE_PROBE1(context, event, a)\n-#define TRACE2(context, event, a, b) DTRACE_PROBE2(context, event, a, b)\n-#define TRACE3(context, event, a, b, c) DTRACE_PROBE3(context, event, a, b, c)\n-#define TRACE4(context, event, a, b, c, d) DTRACE_PROBE4(context, event, a, b, c, d)\n-#define TRACE5(context, event, a, b, c, d, e) DTRACE_PROBE5(context, event, a, b, c, d, e)\n-#define TRACE6(context, event, a, b, c, d, e, f) DTRACE_PROBE6(context, event, a, b, c, d, e, f)\n-#define TRACE7(context, event, a, b, c, d, e, f, g) DTRACE_PROBE7(context, event, a, b, c, d, e, f, g)\n-#define TRACE8(context, event, a, b, c, d, e, f, g, h) DTRACE_PROBE8(context, event, a, b, c, d, e, f, g, h)\n-#define TRACE9(context, event, a, b, c, d, e, f, g, h, i) DTRACE_PROBE9(context, event, a, b, c, d, e, f, g, h, i)\n-#define TRACE10(context, event, a, b, c, d, e, f, g, h, i, j) DTRACE_PROBE10(context, event, a, b, c, d, e, f, g, h, i, j)\n-#define TRACE11(context, event, a, b, c, d, e, f, g, h, i, j, k) DTRACE_PROBE11(context, event, a, b, c, d, e, f, g, h, i, j, k)\n-#define TRACE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l) DTRACE_PROBE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l)\n+// A USDT tracepoint with no arguments.\n+#define TRACEPOINT0(context, event) \\",
      "path": "src/util/trace.h",
      "position": null,
      "original_position": 24,
      "commit_id": "1949b64afe7ecf91091f58623e75341a75996da0",
      "original_commit_id": "38df8dd06516576e9db21ff2899d083232ce8846",
      "in_reply_to_id": 1141968668,
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Plan to revisit this once I have the time to experiment",
      "created_at": "2023-03-20T15:59:57Z",
      "updated_at": "2023-03-20T15:59:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1142353299",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1142353299"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 17,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155351001",
      "pull_request_review_id": 1368120240,
      "id": 1155351001,
      "node_id": "PRRC_kwDOABII585E3UHZ",
      "diff_hunk": "@@ -7,37 +7,26 @@\n \n #ifdef ENABLE_TRACING\n \n+// Setting SDT_USE_VARIADIC let's systemtap (sys/sdt.h) know that we want to use\n+// the optional variadic macros to define tracepoints.\n+#define SDT_USE_VARIADIC 1\n+\n #include <sys/sdt.h>\n \n-#define TRACE(context, event) DTRACE_PROBE(context, event)\n-#define TRACE1(context, event, a) DTRACE_PROBE1(context, event, a)\n-#define TRACE2(context, event, a, b) DTRACE_PROBE2(context, event, a, b)\n-#define TRACE3(context, event, a, b, c) DTRACE_PROBE3(context, event, a, b, c)\n-#define TRACE4(context, event, a, b, c, d) DTRACE_PROBE4(context, event, a, b, c, d)\n-#define TRACE5(context, event, a, b, c, d, e) DTRACE_PROBE5(context, event, a, b, c, d, e)\n-#define TRACE6(context, event, a, b, c, d, e, f) DTRACE_PROBE6(context, event, a, b, c, d, e, f)\n-#define TRACE7(context, event, a, b, c, d, e, f, g) DTRACE_PROBE7(context, event, a, b, c, d, e, f, g)\n-#define TRACE8(context, event, a, b, c, d, e, f, g, h) DTRACE_PROBE8(context, event, a, b, c, d, e, f, g, h)\n-#define TRACE9(context, event, a, b, c, d, e, f, g, h, i) DTRACE_PROBE9(context, event, a, b, c, d, e, f, g, h, i)\n-#define TRACE10(context, event, a, b, c, d, e, f, g, h, i, j) DTRACE_PROBE10(context, event, a, b, c, d, e, f, g, h, i, j)\n-#define TRACE11(context, event, a, b, c, d, e, f, g, h, i, j, k) DTRACE_PROBE11(context, event, a, b, c, d, e, f, g, h, i, j, k)\n-#define TRACE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l) DTRACE_PROBE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l)\n+// A USDT tracepoint with no arguments.\n+#define TRACEPOINT0(context, event) \\",
      "path": "src/util/trace.h",
      "position": null,
      "original_position": 24,
      "commit_id": "1949b64afe7ecf91091f58623e75341a75996da0",
      "original_commit_id": "38df8dd06516576e9db21ff2899d083232ce8846",
      "in_reply_to_id": 1141968668,
      "user": {
        "login": "martinus",
        "id": 14386,
        "node_id": "MDQ6VXNlcjE0Mzg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/martinus",
        "html_url": "https://github.com/martinus",
        "followers_url": "https://api.github.com/users/martinus/followers",
        "following_url": "https://api.github.com/users/martinus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/martinus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/martinus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
        "organizations_url": "https://api.github.com/users/martinus/orgs",
        "repos_url": "https://api.github.com/users/martinus/repos",
        "events_url": "https://api.github.com/users/martinus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/martinus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Macro magic to the rescue! This works for me:\r\n\r\n```patch\r\ndiff --git a/src/test/util_trace_tests.cpp b/src/test/util_trace_tests.cpp\r\nindex 6e3e846b4f..952b9cc6e4 100644\r\n--- a/src/test/util_trace_tests.cpp\r\n+++ b/src/test/util_trace_tests.cpp\r\n@@ -18,7 +18,7 @@ BOOST_FIXTURE_TEST_SUITE(util_trace_tests, BasicTestingSetup)\r\n \r\n BOOST_AUTO_TEST_CASE(test_tracepoint_zero_args)\r\n {\r\n-  TRACEPOINT0(test, zero_args);\r\n+  TRACEPOINT(test, zero_args);\r\n   BOOST_CHECK(true);\r\n }\r\n \r\ndiff --git a/src/util/trace.h b/src/util/trace.h\r\nindex 816d8c295d..3a0aed391b 100644\r\n--- a/src/util/trace.h\r\n+++ b/src/util/trace.h\r\n@@ -29,25 +29,19 @@\r\n     unsigned short context##_##event##_semaphore __attribute__((section (\".probes\")))\r\n \r\n // Returns true if something is attached to the tracepoint.\r\n-#define TRACEPOINT_ACTIVE(context, event) context##_##event##_semaphore > 0\r\n-\r\n-// A USDT tracepoint with no arguments.\r\n-#define TRACEPOINT0(context, event) \\\r\n-    if (TRACEPOINT_ACTIVE(context, event)) \\\r\n-        STAP_PROBE(context, event)\r\n+#define TRACEPOINT_ACTIVE(context, event, ...) context##_##event##_semaphore > 0\r\n \r\n // A USDT tracepoint with one to twelve arguments. It's checked that the\r\n // tracepoint is active before preparing its arguments.\r\n-#define TRACEPOINT(context, event, ...) \\\r\n-    if (TRACEPOINT_ACTIVE(context, event)) \\\r\n-        STAP_PROBEV(context, event, __VA_ARGS__)\r\n+#define TRACEPOINT(context, ...) \\\r\n+    if (TRACEPOINT_ACTIVE(context, __VA_ARGS__)) \\\r\n+        STAP_PROBEV(context, __VA_ARGS__)\r\n \r\n #else\r\n \r\n #define TRACEPOINT_SEMAPHORE(context, event)\r\n #define TRACEPOINT_ACTIVE(context, event) false\r\n-#define TRACEPOINT0(context, event)\r\n-#define TRACEPOINT(context, event, ...)\r\n+#define TRACEPOINT(context, ...)\r\n \r\n #endif // ENABLE_TRACING\r\n ```\r\n\r\nThe trick is to make `event` part of the variadic macro, so that there's always at least 1 argument in the variadic",
      "created_at": "2023-04-02T17:52:32Z",
      "updated_at": "2023-04-02T17:52:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1155351001",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155351001"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 17,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155488768",
      "pull_request_review_id": 1368298423,
      "id": 1155488768,
      "node_id": "PRRC_kwDOABII585E31wA",
      "diff_hunk": "@@ -7,37 +7,26 @@\n \n #ifdef ENABLE_TRACING\n \n+// Setting SDT_USE_VARIADIC let's systemtap (sys/sdt.h) know that we want to use\n+// the optional variadic macros to define tracepoints.\n+#define SDT_USE_VARIADIC 1\n+\n #include <sys/sdt.h>\n \n-#define TRACE(context, event) DTRACE_PROBE(context, event)\n-#define TRACE1(context, event, a) DTRACE_PROBE1(context, event, a)\n-#define TRACE2(context, event, a, b) DTRACE_PROBE2(context, event, a, b)\n-#define TRACE3(context, event, a, b, c) DTRACE_PROBE3(context, event, a, b, c)\n-#define TRACE4(context, event, a, b, c, d) DTRACE_PROBE4(context, event, a, b, c, d)\n-#define TRACE5(context, event, a, b, c, d, e) DTRACE_PROBE5(context, event, a, b, c, d, e)\n-#define TRACE6(context, event, a, b, c, d, e, f) DTRACE_PROBE6(context, event, a, b, c, d, e, f)\n-#define TRACE7(context, event, a, b, c, d, e, f, g) DTRACE_PROBE7(context, event, a, b, c, d, e, f, g)\n-#define TRACE8(context, event, a, b, c, d, e, f, g, h) DTRACE_PROBE8(context, event, a, b, c, d, e, f, g, h)\n-#define TRACE9(context, event, a, b, c, d, e, f, g, h, i) DTRACE_PROBE9(context, event, a, b, c, d, e, f, g, h, i)\n-#define TRACE10(context, event, a, b, c, d, e, f, g, h, i, j) DTRACE_PROBE10(context, event, a, b, c, d, e, f, g, h, i, j)\n-#define TRACE11(context, event, a, b, c, d, e, f, g, h, i, j, k) DTRACE_PROBE11(context, event, a, b, c, d, e, f, g, h, i, j, k)\n-#define TRACE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l) DTRACE_PROBE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l)\n+// A USDT tracepoint with no arguments.\n+#define TRACEPOINT0(context, event) \\",
      "path": "src/util/trace.h",
      "position": null,
      "original_position": 24,
      "commit_id": "1949b64afe7ecf91091f58623e75341a75996da0",
      "original_commit_id": "38df8dd06516576e9db21ff2899d083232ce8846",
      "in_reply_to_id": 1141968668,
      "user": {
        "login": "martinus",
        "id": 14386,
        "node_id": "MDQ6VXNlcjE0Mzg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/martinus",
        "html_url": "https://github.com/martinus",
        "followers_url": "https://api.github.com/users/martinus/followers",
        "following_url": "https://api.github.com/users/martinus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/martinus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/martinus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
        "organizations_url": "https://api.github.com/users/martinus/orgs",
        "repos_url": "https://api.github.com/users/martinus/repos",
        "events_url": "https://api.github.com/users/martinus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/martinus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Based on @willcl-ark's comment https://github.com/bitcoin/bitcoin/issues/26916#issuecomment-1480997053 here is a version that works without any warnings in clang and gcc:\r\n\r\n```patch\r\ndiff --git a/src/test/util_trace_tests.cpp b/src/test/util_trace_tests.cpp\r\nindex 6e3e846b4f..952b9cc6e4 100644\r\n--- a/src/test/util_trace_tests.cpp\r\n+++ b/src/test/util_trace_tests.cpp\r\n@@ -18,7 +18,7 @@ BOOST_FIXTURE_TEST_SUITE(util_trace_tests, BasicTestingSetup)\r\n \r\n BOOST_AUTO_TEST_CASE(test_tracepoint_zero_args)\r\n {\r\n-  TRACEPOINT0(test, zero_args);\r\n+  TRACEPOINT(test, zero_args);\r\n   BOOST_CHECK(true);\r\n }\r\n \r\ndiff --git a/src/util/trace.h b/src/util/trace.h\r\nindex 816d8c295d..aa88771b1e 100644\r\n--- a/src/util/trace.h\r\n+++ b/src/util/trace.h\r\n@@ -26,28 +26,41 @@\r\n // upon attaching to the tracepoint and decremented when detaching. This needs\r\n // to be a global variable. It's placed in the '.probes' ELF section.\r\n #define TRACEPOINT_SEMAPHORE(context, event) \\\r\n-    unsigned short context##_##event##_semaphore __attribute__((section (\".probes\")))\r\n+    unsigned short context##_##event##_semaphore __attribute__((section(\".probes\")))\r\n+\r\n+// Extract the first argument of a variable number of arguments, even without warning\r\n+// when only 1 argument is provided\r\n+#define TRACEPOINT_FIRST_ARG(...) TRACEPOINT_FIRST_ARG_HELPER(__VA_ARGS__, dummy)\r\n+#define TRACEPOINT_FIRST_ARG_HELPER(arg1, ...) arg1\r\n \r\n // Returns true if something is attached to the tracepoint.\r\n-#define TRACEPOINT_ACTIVE(context, event) context##_##event##_semaphore > 0\r\n+#define TRACEPOINT_ACTIVE(context, event) TRACEPOINT_ACTIVE_HELPER(context, event)\r\n+#define TRACEPOINT_ACTIVE_HELPER(context, event) context##_##event##_semaphore > 0\r\n \r\n-// A USDT tracepoint with no arguments.\r\n-#define TRACEPOINT0(context, event) \\\r\n-    if (TRACEPOINT_ACTIVE(context, event)) \\\r\n-        STAP_PROBE(context, event)\r\n+#if defined(__clang__)\r\n+#define TRACEPOINT_DISABLE_WARN_ZERO_VARIADIC_PUSH _Pragma(\"clang diagnostic push\") _Pragma(\"clang diagnostic ignored \\\"-Wgnu-zero-variadic-macro-arguments\\\"\")\r\n+#define TRACEPOINT_DISABLE_WARN_ZERO_VARIADIC_POP _Pragma(\"clang diagnostic pop\")\r\n+#else\r\n+#define TRACEPOINT_DISABLE_WARN_ZERO_VARIADIC_PUSH\r\n+#define TRACEPOINT_DISABLE_WARN_ZERO_VARIADIC_POP\r\n+#endif\r\n \r\n // A USDT tracepoint with one to twelve arguments. It's checked that the\r\n // tracepoint is active before preparing its arguments.\r\n-#define TRACEPOINT(context, event, ...) \\\r\n-    if (TRACEPOINT_ACTIVE(context, event)) \\\r\n-        STAP_PROBEV(context, event, __VA_ARGS__)\r\n+#define TRACEPOINT(context, ...)                                             \\\r\n+    do {                                                                     \\\r\n+        if (TRACEPOINT_ACTIVE(context, TRACEPOINT_FIRST_ARG(__VA_ARGS__))) { \\\r\n+            TRACEPOINT_DISABLE_WARN_ZERO_VARIADIC_PUSH                       \\\r\n+            STAP_PROBEV(context, __VA_ARGS__);                               \\\r\n+            TRACEPOINT_DISABLE_WARN_ZERO_VARIADIC_POP                        \\\r\n+        }                                                                    \\\r\n+    } while (0)\r\n \r\n #else\r\n \r\n #define TRACEPOINT_SEMAPHORE(context, event)\r\n #define TRACEPOINT_ACTIVE(context, event) false\r\n-#define TRACEPOINT0(context, event)\r\n-#define TRACEPOINT(context, event, ...)\r\n+#define TRACEPOINT(context, ...)\r\n \r\n #endif // ENABLE_TRACING\r\n```",
      "created_at": "2023-04-03T05:15:14Z",
      "updated_at": "2023-04-03T05:15:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1155488768",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155488768"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 17,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161156029",
      "pull_request_review_id": 1376804705,
      "id": 1161156029,
      "node_id": "PRRC_kwDOABII585FNdW9",
      "diff_hunk": "@@ -336,7 +387,7 @@ Displaying notes found in: .note.stapsdt\n   stapsdt              0x0000005d\tNT_STAPSDT (SystemTap probe descriptors)\n     Provider: net\n     Name: outbound_message\n-    Location: 0x0000000000107c05, Base: 0x0000000000579c90, Semaphore: 0x0000000000000000\n+    Location: 0x0000000000107c05, Base: 0x0000000000579c90, Semaphore: 0x0000000000a69780",
      "path": "doc/tracing.md",
      "position": null,
      "original_position": 173,
      "commit_id": "1949b64afe7ecf91091f58623e75341a75996da0",
      "original_commit_id": "bfd97effdfbc6b8c9ad9de889aa62bd0760df5a2",
      "in_reply_to_id": null,
      "user": {
        "login": "kouloumos",
        "id": 18506343,
        "node_id": "MDQ6VXNlcjE4NTA2MzQz",
        "avatar_url": "https://avatars.githubusercontent.com/u/18506343?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kouloumos",
        "html_url": "https://github.com/kouloumos",
        "followers_url": "https://api.github.com/users/kouloumos/followers",
        "following_url": "https://api.github.com/users/kouloumos/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kouloumos/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kouloumos/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kouloumos/subscriptions",
        "organizations_url": "https://api.github.com/users/kouloumos/orgs",
        "repos_url": "https://api.github.com/users/kouloumos/repos",
        "events_url": "https://api.github.com/users/kouloumos/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kouloumos/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Regarding listing available tracepoints, there is another addition when using `info probes` in `gdb`, which now also shows semaphores. A snippet from my binary:\r\n```\r\n(gdb) info probes\r\nType Provider   Name             Where              Semaphore          Object\r\nstap net        inbound_message  0x00005625b02d4106 0x0000000000ab1724 /src/bitcoind\r\nstap net        outbound_message 0x00005625b029f395 0x0000000000ab1722  /src/bitcoind\r\nstap validation block_connected  0x00005625b04b914d 0x0000000000ab1720 /src/bitcoind\r\n```",
      "created_at": "2023-04-08T20:44:07Z",
      "updated_at": "2023-04-08T21:41:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1161156029",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161156029"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 390,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161158136",
      "pull_request_review_id": 1376804705,
      "id": 1161158136,
      "node_id": "PRRC_kwDOABII585FNd34",
      "diff_hunk": "@@ -7,39 +7,48 @@\n \n #ifdef ENABLE_TRACING\n \n+// Setting SDT_USE_VARIADIC let's systemtap (sys/sdt.h) know that we want to use\n+// the optional variadic macros to define tracepoints.\n+#define SDT_USE_VARIADIC 1\n+\n+// Setting _SDT_HAS_SEMAPHORES let's systemtap (sys/sdt.h) know that we want to\n+// use the optional semaphore feature for our tracepoints. This feature allows\n+// us to check if something is attached to a tracepoint. We only want to prepare\n+// some potentially expensive tracepoint arguments, if the tracepoint is being\n+// used. Here, an expensive argument preparation could, for example, be\n+// calculating a hash or serialization of a data structure.\n+#define _SDT_HAS_SEMAPHORES 1\n+\n #include <sys/sdt.h>\n \n-#define TRACE(context, event) DTRACE_PROBE(context, event)\n-#define TRACE1(context, event, a) DTRACE_PROBE1(context, event, a)\n-#define TRACE2(context, event, a, b) DTRACE_PROBE2(context, event, a, b)\n-#define TRACE3(context, event, a, b, c) DTRACE_PROBE3(context, event, a, b, c)\n-#define TRACE4(context, event, a, b, c, d) DTRACE_PROBE4(context, event, a, b, c, d)\n-#define TRACE5(context, event, a, b, c, d, e) DTRACE_PROBE5(context, event, a, b, c, d, e)\n-#define TRACE6(context, event, a, b, c, d, e, f) DTRACE_PROBE6(context, event, a, b, c, d, e, f)\n-#define TRACE7(context, event, a, b, c, d, e, f, g) DTRACE_PROBE7(context, event, a, b, c, d, e, f, g)\n-#define TRACE8(context, event, a, b, c, d, e, f, g, h) DTRACE_PROBE8(context, event, a, b, c, d, e, f, g, h)\n-#define TRACE9(context, event, a, b, c, d, e, f, g, h, i) DTRACE_PROBE9(context, event, a, b, c, d, e, f, g, h, i)\n-#define TRACE10(context, event, a, b, c, d, e, f, g, h, i, j) DTRACE_PROBE10(context, event, a, b, c, d, e, f, g, h, i, j)\n-#define TRACE11(context, event, a, b, c, d, e, f, g, h, i, j, k) DTRACE_PROBE11(context, event, a, b, c, d, e, f, g, h, i, j, k)\n-#define TRACE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l) DTRACE_PROBE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l)\n+// Used to define a counting semaphore for a tracepoint. This semaphore is\n+// automatically incremented by tracing frameworks (bpftrace, bcc, libbpf, ...)\n+// upon attaching to the tracepoint and decremented when detaching. This needs\n+// to be a global variable. It's placed in the '.probes' ELF section.\n+#define TRACEPOINT_SEMAPHORE(context, event) \\\n+    unsigned short context##_##event##_semaphore __attribute__((section (\".probes\")))\n+\n+// Returns true if something is attached to the tracepoint.\n+#define TRACEPOINT_ACTIVE(context, event) context##_##event##_semaphore > 0",
      "path": "src/util/trace.h",
      "position": null,
      "original_position": 39,
      "commit_id": "1949b64afe7ecf91091f58623e75341a75996da0",
      "original_commit_id": "bfd97effdfbc6b8c9ad9de889aa62bd0760df5a2",
      "in_reply_to_id": null,
      "user": {
        "login": "kouloumos",
        "id": 18506343,
        "node_id": "MDQ6VXNlcjE4NTA2MzQz",
        "avatar_url": "https://avatars.githubusercontent.com/u/18506343?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kouloumos",
        "html_url": "https://github.com/kouloumos",
        "followers_url": "https://api.github.com/users/kouloumos/followers",
        "following_url": "https://api.github.com/users/kouloumos/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kouloumos/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kouloumos/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kouloumos/subscriptions",
        "organizations_url": "https://api.github.com/users/kouloumos/orgs",
        "repos_url": "https://api.github.com/users/kouloumos/repos",
        "events_url": "https://api.github.com/users/kouloumos/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kouloumos/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I see that there is a `PASTE` macro that can be used instead of directly using the token-pasting operator (##), but I can't figure out why it exists and if it offers any advantage. \r\nhttps://github.com/bitcoin/bitcoin/blob/db720b5a703c90625fa7a4773bd2db5672427cbe/src/util/macros.h#L8 ",
      "created_at": "2023-04-08T21:06:02Z",
      "updated_at": "2023-04-08T21:41:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1161158136",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161158136"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 36,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1162043929",
      "pull_request_review_id": 1378063247,
      "id": 1162043929,
      "node_id": "PRRC_kwDOABII585FQ2IZ",
      "diff_hunk": "@@ -7,39 +7,48 @@\n \n #ifdef ENABLE_TRACING\n \n+// Setting SDT_USE_VARIADIC let's systemtap (sys/sdt.h) know that we want to use\n+// the optional variadic macros to define tracepoints.\n+#define SDT_USE_VARIADIC 1\n+\n+// Setting _SDT_HAS_SEMAPHORES let's systemtap (sys/sdt.h) know that we want to\n+// use the optional semaphore feature for our tracepoints. This feature allows\n+// us to check if something is attached to a tracepoint. We only want to prepare\n+// some potentially expensive tracepoint arguments, if the tracepoint is being\n+// used. Here, an expensive argument preparation could, for example, be\n+// calculating a hash or serialization of a data structure.\n+#define _SDT_HAS_SEMAPHORES 1\n+\n #include <sys/sdt.h>\n \n-#define TRACE(context, event) DTRACE_PROBE(context, event)\n-#define TRACE1(context, event, a) DTRACE_PROBE1(context, event, a)\n-#define TRACE2(context, event, a, b) DTRACE_PROBE2(context, event, a, b)\n-#define TRACE3(context, event, a, b, c) DTRACE_PROBE3(context, event, a, b, c)\n-#define TRACE4(context, event, a, b, c, d) DTRACE_PROBE4(context, event, a, b, c, d)\n-#define TRACE5(context, event, a, b, c, d, e) DTRACE_PROBE5(context, event, a, b, c, d, e)\n-#define TRACE6(context, event, a, b, c, d, e, f) DTRACE_PROBE6(context, event, a, b, c, d, e, f)\n-#define TRACE7(context, event, a, b, c, d, e, f, g) DTRACE_PROBE7(context, event, a, b, c, d, e, f, g)\n-#define TRACE8(context, event, a, b, c, d, e, f, g, h) DTRACE_PROBE8(context, event, a, b, c, d, e, f, g, h)\n-#define TRACE9(context, event, a, b, c, d, e, f, g, h, i) DTRACE_PROBE9(context, event, a, b, c, d, e, f, g, h, i)\n-#define TRACE10(context, event, a, b, c, d, e, f, g, h, i, j) DTRACE_PROBE10(context, event, a, b, c, d, e, f, g, h, i, j)\n-#define TRACE11(context, event, a, b, c, d, e, f, g, h, i, j, k) DTRACE_PROBE11(context, event, a, b, c, d, e, f, g, h, i, j, k)\n-#define TRACE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l) DTRACE_PROBE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l)\n+// Used to define a counting semaphore for a tracepoint. This semaphore is\n+// automatically incremented by tracing frameworks (bpftrace, bcc, libbpf, ...)\n+// upon attaching to the tracepoint and decremented when detaching. This needs\n+// to be a global variable. It's placed in the '.probes' ELF section.\n+#define TRACEPOINT_SEMAPHORE(context, event) \\\n+    unsigned short context##_##event##_semaphore __attribute__((section (\".probes\")))\n+\n+// Returns true if something is attached to the tracepoint.\n+#define TRACEPOINT_ACTIVE(context, event) context##_##event##_semaphore > 0",
      "path": "src/util/trace.h",
      "position": null,
      "original_position": 39,
      "commit_id": "1949b64afe7ecf91091f58623e75341a75996da0",
      "original_commit_id": "bfd97effdfbc6b8c9ad9de889aa62bd0760df5a2",
      "in_reply_to_id": 1161158136,
      "user": {
        "login": "martinus",
        "id": 14386,
        "node_id": "MDQ6VXNlcjE0Mzg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/martinus",
        "html_url": "https://github.com/martinus",
        "followers_url": "https://api.github.com/users/martinus/followers",
        "following_url": "https://api.github.com/users/martinus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/martinus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/martinus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
        "organizations_url": "https://api.github.com/users/martinus/orgs",
        "repos_url": "https://api.github.com/users/martinus/repos",
        "events_url": "https://api.github.com/users/martinus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/martinus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I see that there is a PASTE macro that can be used instead of directly using the token-pasting operator (##), but I can't figure out why it exists and if it offers any advantage.\nhttps://github.com/bitcoin/bitcoin/blob/db720b5a703c90625fa7a4773bd2db5672427cbe/src/util/macros.h#L8\n\nThe macro is a bit badly named, the main one here is `PASTE2`. The advantage is that due to the indirection you can use macros as arguments in the macro and they will be expanded before concatenation.\nSee e.g. https://stackoverflow.com/questions/24708006/c-macro-indirection",
      "created_at": "2023-04-10T20:06:21Z",
      "updated_at": "2023-04-10T20:06:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1162043929",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1162043929"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 36,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1403481849",
      "pull_request_review_id": 1746613857,
      "id": 1403481849,
      "node_id": "PRRC_kwDOABII585Tp275",
      "diff_hunk": "@@ -7,37 +7,26 @@\n \n #ifdef ENABLE_TRACING\n \n+// Setting SDT_USE_VARIADIC let's systemtap (sys/sdt.h) know that we want to use\n+// the optional variadic macros to define tracepoints.\n+#define SDT_USE_VARIADIC 1\n+\n #include <sys/sdt.h>\n \n-#define TRACE(context, event) DTRACE_PROBE(context, event)\n-#define TRACE1(context, event, a) DTRACE_PROBE1(context, event, a)\n-#define TRACE2(context, event, a, b) DTRACE_PROBE2(context, event, a, b)\n-#define TRACE3(context, event, a, b, c) DTRACE_PROBE3(context, event, a, b, c)\n-#define TRACE4(context, event, a, b, c, d) DTRACE_PROBE4(context, event, a, b, c, d)\n-#define TRACE5(context, event, a, b, c, d, e) DTRACE_PROBE5(context, event, a, b, c, d, e)\n-#define TRACE6(context, event, a, b, c, d, e, f) DTRACE_PROBE6(context, event, a, b, c, d, e, f)\n-#define TRACE7(context, event, a, b, c, d, e, f, g) DTRACE_PROBE7(context, event, a, b, c, d, e, f, g)\n-#define TRACE8(context, event, a, b, c, d, e, f, g, h) DTRACE_PROBE8(context, event, a, b, c, d, e, f, g, h)\n-#define TRACE9(context, event, a, b, c, d, e, f, g, h, i) DTRACE_PROBE9(context, event, a, b, c, d, e, f, g, h, i)\n-#define TRACE10(context, event, a, b, c, d, e, f, g, h, i, j) DTRACE_PROBE10(context, event, a, b, c, d, e, f, g, h, i, j)\n-#define TRACE11(context, event, a, b, c, d, e, f, g, h, i, j, k) DTRACE_PROBE11(context, event, a, b, c, d, e, f, g, h, i, j, k)\n-#define TRACE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l) DTRACE_PROBE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l)\n+// A USDT tracepoint with no arguments.\n+#define TRACEPOINT0(context, event) \\",
      "path": "src/util/trace.h",
      "position": null,
      "original_position": 24,
      "commit_id": "1949b64afe7ecf91091f58623e75341a75996da0",
      "original_commit_id": "38df8dd06516576e9db21ff2899d083232ce8846",
      "in_reply_to_id": 1141968668,
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Do you remember why you added a `do { ... } while (0)` to the `TRACEPOINT` macro?\r\n\r\nedit: It's a common thing to do in macros. See https://stackoverflow.com/q/154136/8896600. I'm keeping it.",
      "created_at": "2023-11-23T14:48:50Z",
      "updated_at": "2023-11-23T15:27:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1403481849",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1403481849"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 17,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1555738343",
      "pull_request_review_id": 1986269340,
      "id": 1555738343,
      "node_id": "PRRC_kwDOABII585cuq7n",
      "diff_hunk": "@@ -132,8 +132,9 @@ def print_message(event, inbound):\n           )\n \n \n-def main(bitcoind_path):\n-    bitcoind_with_usdts = USDT(path=str(bitcoind_path))\n+def main(pid):",
      "path": "contrib/tracing/log_raw_p2p_msgs.py",
      "position": 6,
      "original_position": 6,
      "commit_id": "1949b64afe7ecf91091f58623e75341a75996da0",
      "original_commit_id": "3933bdd6cfc9accab9e0ed47e83a5cc27ada6b68",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Attaching by pid is a good idea, even aside from semaphores, as it attaches a specific instance instead of all processes sharing the binary, which i think it does if you provide the path.",
      "created_at": "2024-04-08T12:28:50Z",
      "updated_at": "2024-04-08T12:28:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1555738343",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1555738343"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 135,
      "original_line": 135,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1555929881",
      "pull_request_review_id": 1986597703,
      "id": 1555929881,
      "node_id": "PRRC_kwDOABII585cvZsZ",
      "diff_hunk": "@@ -11,39 +11,52 @@\n \n #ifdef ENABLE_TRACING\n \n+// Setting SDT_USE_VARIADIC let's systemtap (sys/sdt.h) know that we want to use\n+// the optional variadic macros to define tracepoints.\n+#define SDT_USE_VARIADIC 1\n+\n+// Setting _SDT_HAS_SEMAPHORES let's systemtap (sys/sdt.h) know that we want to\n+// use the optional semaphore feature for our tracepoints. This feature allows\n+// us to check if something is attached to a tracepoint. We only want to prepare\n+// some potentially expensive tracepoint arguments, if the tracepoint is being\n+// used. Here, an expensive argument preparation could, for example, be\n+// calculating a hash or serialization of a data structure.\n+#define _SDT_HAS_SEMAPHORES 1\n+\n+// Used to define a counting semaphore for a tracepoint. This semaphore is\n+// automatically incremented by tracing frameworks (bpftrace, bcc, libbpf, ...)\n+// upon attaching to the tracepoint and decremented when detaching. This needs\n+// to be a global variable. It's placed in the '.probes' ELF section.\n+#define TRACEPOINT_SEMAPHORE(context, event) \\\n+    unsigned short context##_##event##_semaphore __attribute__((section(\".probes\")))\n+\n+// Extract the first argument of a variable number of arguments, even without warning\n+// when only 1 argument is provided\n+#define TRACEPOINT_FIRST_ARG(...) TRACEPOINT_FIRST_ARG_HELPER(__VA_ARGS__, dummy)\n+#define TRACEPOINT_FIRST_ARG_HELPER(arg1, ...) arg1\n+\n #include <sys/sdt.h>\n \n-#define TRACE(context, event) DTRACE_PROBE(context, event)\n-#define TRACE1(context, event, a) DTRACE_PROBE1(context, event, a)\n-#define TRACE2(context, event, a, b) DTRACE_PROBE2(context, event, a, b)\n-#define TRACE3(context, event, a, b, c) DTRACE_PROBE3(context, event, a, b, c)\n-#define TRACE4(context, event, a, b, c, d) DTRACE_PROBE4(context, event, a, b, c, d)\n-#define TRACE5(context, event, a, b, c, d, e) DTRACE_PROBE5(context, event, a, b, c, d, e)\n-#define TRACE6(context, event, a, b, c, d, e, f) DTRACE_PROBE6(context, event, a, b, c, d, e, f)\n-#define TRACE7(context, event, a, b, c, d, e, f, g) DTRACE_PROBE7(context, event, a, b, c, d, e, f, g)\n-#define TRACE8(context, event, a, b, c, d, e, f, g, h) DTRACE_PROBE8(context, event, a, b, c, d, e, f, g, h)\n-#define TRACE9(context, event, a, b, c, d, e, f, g, h, i) DTRACE_PROBE9(context, event, a, b, c, d, e, f, g, h, i)\n-#define TRACE10(context, event, a, b, c, d, e, f, g, h, i, j) DTRACE_PROBE10(context, event, a, b, c, d, e, f, g, h, i, j)\n-#define TRACE11(context, event, a, b, c, d, e, f, g, h, i, j, k) DTRACE_PROBE11(context, event, a, b, c, d, e, f, g, h, i, j, k)\n-#define TRACE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l) DTRACE_PROBE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l)\n+// Returns true if something is attached to the tracepoint.\n+#define TRACEPOINT_ACTIVE(context, event) TRACEPOINT_ACTIVE_HELPER(context, event)\n+#define TRACEPOINT_ACTIVE_HELPER(context, event) context##_##event##_semaphore > 0\n+\n+// A USDT tracepoint with one to twelve arguments. It's checked that the\n+// tracepoint is active before preparing its arguments.\n+#define TRACEPOINT(context, ...)                                                \\\n+    do {                                                                        \\\n+        if (TRACEPOINT_ACTIVE(context, TRACEPOINT_FIRST_ARG(__VA_ARGS__))) {    \\\n+            STAP_PROBEV(context, __VA_ARGS__);                                  \\",
      "path": "src/util/trace.h",
      "position": null,
      "original_position": 52,
      "commit_id": "1949b64afe7ecf91091f58623e75341a75996da0",
      "original_commit_id": "3933bdd6cfc9accab9e0ed47e83a5cc27ada6b68",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n#define TRACEPOINT(context, event, ...)                                                \\\r\n    do {                                                                        \\\r\n        if (TRACEPOINT_ACTIVE(context, event)) {    \\\r\n            STAP_PROBEV(context, event, __VA_ARGS__);                                  \\\r\n```\r\n\r\nquestion: Does the following not work in C++20?",
      "created_at": "2024-04-08T14:21:48Z",
      "updated_at": "2024-04-09T08:07:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1555929881",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1555929881"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
        }
      },
      "start_line": null,
      "original_start_line": 46,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1558318881",
      "pull_request_review_id": 1990187015,
      "id": 1558318881,
      "node_id": "PRRC_kwDOABII585c4g8h",
      "diff_hunk": "@@ -11,39 +11,52 @@\n \n #ifdef ENABLE_TRACING\n \n+// Setting SDT_USE_VARIADIC let's systemtap (sys/sdt.h) know that we want to use\n+// the optional variadic macros to define tracepoints.\n+#define SDT_USE_VARIADIC 1\n+\n+// Setting _SDT_HAS_SEMAPHORES let's systemtap (sys/sdt.h) know that we want to\n+// use the optional semaphore feature for our tracepoints. This feature allows\n+// us to check if something is attached to a tracepoint. We only want to prepare\n+// some potentially expensive tracepoint arguments, if the tracepoint is being\n+// used. Here, an expensive argument preparation could, for example, be\n+// calculating a hash or serialization of a data structure.\n+#define _SDT_HAS_SEMAPHORES 1\n+\n+// Used to define a counting semaphore for a tracepoint. This semaphore is\n+// automatically incremented by tracing frameworks (bpftrace, bcc, libbpf, ...)\n+// upon attaching to the tracepoint and decremented when detaching. This needs\n+// to be a global variable. It's placed in the '.probes' ELF section.\n+#define TRACEPOINT_SEMAPHORE(context, event) \\\n+    unsigned short context##_##event##_semaphore __attribute__((section(\".probes\")))\n+\n+// Extract the first argument of a variable number of arguments, even without warning\n+// when only 1 argument is provided\n+#define TRACEPOINT_FIRST_ARG(...) TRACEPOINT_FIRST_ARG_HELPER(__VA_ARGS__, dummy)\n+#define TRACEPOINT_FIRST_ARG_HELPER(arg1, ...) arg1\n+\n #include <sys/sdt.h>\n \n-#define TRACE(context, event) DTRACE_PROBE(context, event)\n-#define TRACE1(context, event, a) DTRACE_PROBE1(context, event, a)\n-#define TRACE2(context, event, a, b) DTRACE_PROBE2(context, event, a, b)\n-#define TRACE3(context, event, a, b, c) DTRACE_PROBE3(context, event, a, b, c)\n-#define TRACE4(context, event, a, b, c, d) DTRACE_PROBE4(context, event, a, b, c, d)\n-#define TRACE5(context, event, a, b, c, d, e) DTRACE_PROBE5(context, event, a, b, c, d, e)\n-#define TRACE6(context, event, a, b, c, d, e, f) DTRACE_PROBE6(context, event, a, b, c, d, e, f)\n-#define TRACE7(context, event, a, b, c, d, e, f, g) DTRACE_PROBE7(context, event, a, b, c, d, e, f, g)\n-#define TRACE8(context, event, a, b, c, d, e, f, g, h) DTRACE_PROBE8(context, event, a, b, c, d, e, f, g, h)\n-#define TRACE9(context, event, a, b, c, d, e, f, g, h, i) DTRACE_PROBE9(context, event, a, b, c, d, e, f, g, h, i)\n-#define TRACE10(context, event, a, b, c, d, e, f, g, h, i, j) DTRACE_PROBE10(context, event, a, b, c, d, e, f, g, h, i, j)\n-#define TRACE11(context, event, a, b, c, d, e, f, g, h, i, j, k) DTRACE_PROBE11(context, event, a, b, c, d, e, f, g, h, i, j, k)\n-#define TRACE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l) DTRACE_PROBE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l)\n+// Returns true if something is attached to the tracepoint.\n+#define TRACEPOINT_ACTIVE(context, event) TRACEPOINT_ACTIVE_HELPER(context, event)\n+#define TRACEPOINT_ACTIVE_HELPER(context, event) context##_##event##_semaphore > 0\n+\n+// A USDT tracepoint with one to twelve arguments. It's checked that the\n+// tracepoint is active before preparing its arguments.\n+#define TRACEPOINT(context, ...)                                                \\\n+    do {                                                                        \\\n+        if (TRACEPOINT_ACTIVE(context, TRACEPOINT_FIRST_ARG(__VA_ARGS__))) {    \\\n+            STAP_PROBEV(context, __VA_ARGS__);                                  \\",
      "path": "src/util/trace.h",
      "position": null,
      "original_position": 52,
      "commit_id": "1949b64afe7ecf91091f58623e75341a75996da0",
      "original_commit_id": "3933bdd6cfc9accab9e0ed47e83a5cc27ada6b68",
      "in_reply_to_id": 1555929881,
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Tried this, but [didn't work for zero arguments tracepoint](https://github.com/bitcoin/bitcoin/actions/runs/8618313790/job/23620364926?pr=26593#step:6:4106) (the newly introduced tests catched this). However, we can use ` __VA_OPT__` from C++ 20.",
      "created_at": "2024-04-09T21:32:19Z",
      "updated_at": "2024-04-09T21:32:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1558318881",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1558318881"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
        }
      },
      "start_line": null,
      "original_start_line": 46,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1559107527",
      "pull_request_review_id": 1991170894,
      "id": 1559107527,
      "node_id": "PRRC_kwDOABII585c7hfH",
      "diff_hunk": "@@ -11,39 +11,46 @@\n \n #ifdef ENABLE_TRACING\n \n+// Setting SDT_USE_VARIADIC let's systemtap (sys/sdt.h) know that we want to use\n+// the optional variadic macros to define tracepoints.\n+#define SDT_USE_VARIADIC 1\n+\n+// Setting _SDT_HAS_SEMAPHORES let's systemtap (sys/sdt.h) know that we want to\n+// use the optional semaphore feature for our tracepoints. This feature allows\n+// us to check if something is attached to a tracepoint. We only want to prepare\n+// some potentially expensive tracepoint arguments, if the tracepoint is being\n+// used. Here, an expensive argument preparation could, for example, be\n+// calculating a hash or serialization of a data structure.\n+#define _SDT_HAS_SEMAPHORES 1\n+\n+// Used to define a counting semaphore for a tracepoint. This semaphore is\n+// automatically incremented by tracing frameworks (bpftrace, bcc, libbpf, ...)\n+// upon attaching to the tracepoint and decremented when detaching. This needs\n+// to be a global variable. It's placed in the '.probes' ELF section.\n+#define TRACEPOINT_SEMAPHORE(context, event) \\\n+    unsigned short context##_##event##_semaphore __attribute__((section(\".probes\")))",
      "path": "src/util/trace.h",
      "position": 21,
      "original_position": 21,
      "commit_id": "1949b64afe7ecf91091f58623e75341a75996da0",
      "original_commit_id": "38e24dfc5f1c54723018bf9d973b7d9cf9a2b824",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "question, feel free to ignore:\r\n\r\nDoes it need to be in a separate macro, to be put in the global namespace, or would it work to use `static` inside the function scope?\r\n\r\nIf so, it could be combined into the `TRACEPOINT` macro, and using `TRACEPOINT` without it would not be possible.",
      "created_at": "2024-04-10T09:06:33Z",
      "updated_at": "2024-04-10T09:06:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1559107527",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1559107527"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
        }
      },
      "start_line": 28,
      "original_start_line": 30,
      "start_side": "RIGHT",
      "line": 29,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1559223172",
      "pull_request_review_id": 1991353336,
      "id": 1559223172,
      "node_id": "PRRC_kwDOABII585c79uE",
      "diff_hunk": "@@ -11,39 +11,46 @@\n \n #ifdef ENABLE_TRACING\n \n+// Setting SDT_USE_VARIADIC let's systemtap (sys/sdt.h) know that we want to use\n+// the optional variadic macros to define tracepoints.\n+#define SDT_USE_VARIADIC 1\n+\n+// Setting _SDT_HAS_SEMAPHORES let's systemtap (sys/sdt.h) know that we want to\n+// use the optional semaphore feature for our tracepoints. This feature allows\n+// us to check if something is attached to a tracepoint. We only want to prepare\n+// some potentially expensive tracepoint arguments, if the tracepoint is being\n+// used. Here, an expensive argument preparation could, for example, be\n+// calculating a hash or serialization of a data structure.\n+#define _SDT_HAS_SEMAPHORES 1\n+\n+// Used to define a counting semaphore for a tracepoint. This semaphore is\n+// automatically incremented by tracing frameworks (bpftrace, bcc, libbpf, ...)\n+// upon attaching to the tracepoint and decremented when detaching. This needs\n+// to be a global variable. It's placed in the '.probes' ELF section.\n+#define TRACEPOINT_SEMAPHORE(context, event) \\\n+    unsigned short context##_##event##_semaphore __attribute__((section(\".probes\")))",
      "path": "src/util/trace.h",
      "position": 21,
      "original_position": 21,
      "commit_id": "1949b64afe7ecf91091f58623e75341a75996da0",
      "original_commit_id": "38e24dfc5f1c54723018bf9d973b7d9cf9a2b824",
      "in_reply_to_id": 1559107527,
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I remember trying a few combinations of this and in all cases the compiler/liker failed to find the semaphore. I just retried with the following patch which I think is similar to what you describe.\r\n\r\n```patch\r\ndiff --git a/src/util/trace.h b/src/util/trace.h\r\nindex a4f0ea1ca4..8d7f6bdb74 100644\r\n--- a/src/util/trace.h\r\n+++ b/src/util/trace.h\r\n@@ -27,8 +27,8 @@\r\n // automatically incremented by tracing frameworks (bpftrace, bcc, libbpf, ...)\r\n // upon attaching to the tracepoint and decremented when detaching. This needs\r\n // to be a global variable. It's placed in the '.probes' ELF section.\r\n-#define TRACEPOINT_SEMAPHORE(context, event) \\\r\n-    unsigned short context##_##event##_semaphore __attribute__((section(\".probes\")))\r\n+#define TRACEPOINT_SEMAPHORE(context, event)\r\n+//    unsigned short context##_##event##_semaphore __attribute__((section(\".probes\")))\r\n\r\n #include <sys/sdt.h>\r\n\r\n@@ -39,6 +39,7 @@\r\n // tracepoint is active before preparing its arguments.\r\n #define TRACEPOINT(context, event, ...)                                         \\\r\n     do {                                                                        \\\r\n+        static unsigned short context##_##event##_semaphore __attribute__((section(\".probes\"))); \\\r\n         if (TRACEPOINT_ACTIVE(context, event)) {                                \\\r\n             STAP_PROBEV(context, event __VA_OPT__(, ) __VA_ARGS__);                           \\\r\n         }                                                                       \\\r\n\r\n```\r\n\r\nThis (1) breaks the extra [`if(TRACEPOINT_ACTIVE(context, event))`](https://github.com/bitcoin/bitcoin/pull/26593/files#diff-86c34c3a3e5946d9f4bd754a5bf9c970b6a44a72c0ba216f1a2457a479ee9651R50) and (2) the linker complains it can't find the semaphores (e.g. `undefined reference to utxocache_spent_semaphore'`). \r\n\r\nOtherwise, if we find a way to do it, I'd be happy to do it as I'm not too excited about having the semaphores as globals.. ",
      "created_at": "2024-04-10T10:39:47Z",
      "updated_at": "2024-04-10T10:40:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1559223172",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1559223172"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
        }
      },
      "start_line": 28,
      "original_start_line": 30,
      "start_side": "RIGHT",
      "line": 29,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1559292092",
      "pull_request_review_id": 1991463721,
      "id": 1559292092,
      "node_id": "PRRC_kwDOABII585c8Oi8",
      "diff_hunk": "@@ -11,39 +11,46 @@\n \n #ifdef ENABLE_TRACING\n \n+// Setting SDT_USE_VARIADIC let's systemtap (sys/sdt.h) know that we want to use\n+// the optional variadic macros to define tracepoints.\n+#define SDT_USE_VARIADIC 1\n+\n+// Setting _SDT_HAS_SEMAPHORES let's systemtap (sys/sdt.h) know that we want to\n+// use the optional semaphore feature for our tracepoints. This feature allows\n+// us to check if something is attached to a tracepoint. We only want to prepare\n+// some potentially expensive tracepoint arguments, if the tracepoint is being\n+// used. Here, an expensive argument preparation could, for example, be\n+// calculating a hash or serialization of a data structure.\n+#define _SDT_HAS_SEMAPHORES 1\n+\n+// Used to define a counting semaphore for a tracepoint. This semaphore is\n+// automatically incremented by tracing frameworks (bpftrace, bcc, libbpf, ...)\n+// upon attaching to the tracepoint and decremented when detaching. This needs\n+// to be a global variable. It's placed in the '.probes' ELF section.\n+#define TRACEPOINT_SEMAPHORE(context, event) \\\n+    unsigned short context##_##event##_semaphore __attribute__((section(\".probes\")))",
      "path": "src/util/trace.h",
      "position": 21,
      "original_position": 21,
      "commit_id": "1949b64afe7ecf91091f58623e75341a75996da0",
      "original_commit_id": "38e24dfc5f1c54723018bf9d973b7d9cf9a2b824",
      "in_reply_to_id": 1559107527,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks for the explanation. I don't see another solution right now.",
      "created_at": "2024-04-10T11:42:11Z",
      "updated_at": "2024-04-10T11:42:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1559292092",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1559292092"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
        }
      },
      "start_line": 28,
      "original_start_line": 30,
      "start_side": "RIGHT",
      "line": 29,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1582872788",
      "pull_request_review_id": 2028133549,
      "id": 1582872788,
      "node_id": "PRRC_kwDOABII585eWLjU",
      "diff_hunk": "@@ -176,8 +177,8 @@ def handle_outbound(_, data, size):\n \n \n if __name__ == \"__main__\":\n-    if len(sys.argv) < 2:",
      "path": "contrib/tracing/log_raw_p2p_msgs.py",
      "position": 16,
      "original_position": 16,
      "commit_id": "1949b64afe7ecf91091f58623e75341a75996da0",
      "original_commit_id": "38e24dfc5f1c54723018bf9d973b7d9cf9a2b824",
      "in_reply_to_id": null,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In: 38e24dfc5f1c54723018bf9d973b7d9cf9a2b824\r\nIf you re-touch these, it might be nice (user-friendly) to add a simple check that we are running as root. Currently without root you see:\r\n\r\n```log\r\nHooking into bitcoind with pid 4039799\r\nTraceback (most recent call last):\r\n  File \"/home/will/src/bitcoin/contrib/tracing/p2p_monitor.py\", line 258, in <module>\r\n    main(pid)\r\n  File \"/home/will/src/bitcoin/contrib/tracing/p2p_monitor.py\", line 124, in main\r\n    bitcoind_with_usdts.enable_probe(\r\n  File \"/usr/lib/python3/dist-packages/bcc-0.30.0+679166bd-py3.11.egg/bcc/usdt.py\", line 161, in enable_probe\r\nbcc.usdt.USDTException: Failed to enable USDT probe 'inbound_message':\r\nthe specified pid might not contain the given language's runtime,\r\nor the runtime was not built with the required USDT probes. Look\r\nfor a configure flag similar to --with-dtrace or --enable-dtrace.\r\nTo check which probes are present in the process, use the tplist tool.\r\n```\r\nCould improve easily with a root check, e.g.:\r\n\r\n```diff\r\ndiff --git a/contrib/tracing/p2p_monitor.py b/contrib/tracing/p2p_monitor.py\r\nindex 6d8ae43c71..d107c5f994 100755\r\n--- a/contrib/tracing/p2p_monitor.py\r\n+++ b/contrib/tracing/p2p_monitor.py\r\n@@ -244,8 +244,13 @@ def render(screen, peers, cur_list_pos, scroll, ROWS_AVALIABLE_FOR_LIST, info_pa\r\n                         i + 3, 1, \" %s (%d byte) --->\" %\r\n                         (msg.msg_type, msg.size), curses.A_NORMAL)\r\n \r\n+import os\r\n+def running_as_root() -> bool:\r\n+    return os.getuid() == 0\r\n \r\n if __name__ == \"__main__\":\r\n+    if not running_as_root():\r\n+        print(\"Detected that we are not running as root, this is likely not what you want\")\r\n     if len(sys.argv) != 2:\r\n         print(\"USAGE:\", sys.argv[0], \"<pid of bitcoind>\")\r\n         exit()\r\n```\r\n\r\nThere's of course a counter-argument that anyone hooking into tracepoints will likely understand they need root access to the kernel 😃 ",
      "created_at": "2024-04-29T11:04:27Z",
      "updated_at": "2024-04-29T12:13:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1582872788",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1582872788"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 179,
      "original_line": 179,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1582972621",
      "pull_request_review_id": 2028133549,
      "id": 1582972621,
      "node_id": "PRRC_kwDOABII585eWj7N",
      "diff_hunk": "@@ -270,21 +270,48 @@ the `util/trace.h` (defines the tracepoint macros) with `#include <util/trace.h>\n Each tracepoint needs a `context` and an `event`. Please use `snake_case` and\n try to make sure that the tracepoint names make sense even without detailed\n knowledge of the implementation details. You can pass zero to twelve arguments\n-to the tracepoint. Do not forget to update the tracepoint list in this\n-document.\n+to the tracepoint. Each tracepoint also needs a global semaphore. The semaphore\n+gates the tracepoint arguments from being processed if we are not attached to\n+the tracepoint. Add a `TRACEPOINT_SEMAPHORE(context, event)` with the `context`\n+and `event` of your tracepoint in the top-level namespace at the beginning of\n+the file. Do not forget to update the tracepoint list in this document.\n \n-For example, a tracepoint in the `net` context for the event `inbound_message`\n-and six arguments:\n+For example, the `net:outbound_message` tracepoint in `src/net.cpp` with six\n+arguments.\n \n ```C++\n-TRACEPOINT(net, inbound_message,\n-    pnode->GetId(),\n-    pnode->m_addr_name.c_str(),\n-    pnode->ConnectionTypeAsString().c_str(),\n-    sanitizedType.c_str(),\n-    msg.data.size(),\n-    msg.data.data()\n-);\n+// src/net.cpp\n+TRACEPOINT_SEMAPHORE(net, outbound_message);\n+…\n+void CConnman::PushMessage(…) {\n+  …\n+  TRACEPOINT(net, outbound_message,\n+      pnode->GetId(),\n+      pnode->m_addr_name.c_str(),\n+      pnode->ConnectionTypeAsString().c_str(),\n+      sanitizedType.c_str(),\n+      msg.data.size(),\n+      msg.data.data()\n+  );\n+  …\n+}\n+```\n+\n+If needed, an extra `if(TRACEPOINT_ACTIVE(context, event) {..}` check can be",
      "path": "doc/tracing.md",
      "position": null,
      "original_position": 43,
      "commit_id": "1949b64afe7ecf91091f58623e75341a75996da0",
      "original_commit_id": "9343ee83ec9ca1ac32d9686f6aea6d755c623562",
      "in_reply_to_id": null,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In: 9343ee83ec9ca1ac32d9686f6aea6d755c623562\r\n\r\nIt's not clear to me how this differs from the semaphore gating being introduced. ISTM that the caller will need the semaphore in either case, so what difference does preparing the argument inside this `if` make? The `TRACEPOINT` macro appears to expand to an `if(TRACEPOINT_ACTIVE( ...`",
      "created_at": "2024-04-29T11:56:06Z",
      "updated_at": "2024-04-29T12:13:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1582972621",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1582972621"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 300,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1583018329",
      "pull_request_review_id": 2028387497,
      "id": 1583018329,
      "node_id": "PRRC_kwDOABII585eWvFZ",
      "diff_hunk": "@@ -270,21 +270,48 @@ the `util/trace.h` (defines the tracepoint macros) with `#include <util/trace.h>\n Each tracepoint needs a `context` and an `event`. Please use `snake_case` and\n try to make sure that the tracepoint names make sense even without detailed\n knowledge of the implementation details. You can pass zero to twelve arguments\n-to the tracepoint. Do not forget to update the tracepoint list in this\n-document.\n+to the tracepoint. Each tracepoint also needs a global semaphore. The semaphore\n+gates the tracepoint arguments from being processed if we are not attached to\n+the tracepoint. Add a `TRACEPOINT_SEMAPHORE(context, event)` with the `context`\n+and `event` of your tracepoint in the top-level namespace at the beginning of\n+the file. Do not forget to update the tracepoint list in this document.\n \n-For example, a tracepoint in the `net` context for the event `inbound_message`\n-and six arguments:\n+For example, the `net:outbound_message` tracepoint in `src/net.cpp` with six\n+arguments.\n \n ```C++\n-TRACEPOINT(net, inbound_message,\n-    pnode->GetId(),\n-    pnode->m_addr_name.c_str(),\n-    pnode->ConnectionTypeAsString().c_str(),\n-    sanitizedType.c_str(),\n-    msg.data.size(),\n-    msg.data.data()\n-);\n+// src/net.cpp\n+TRACEPOINT_SEMAPHORE(net, outbound_message);\n+…\n+void CConnman::PushMessage(…) {\n+  …\n+  TRACEPOINT(net, outbound_message,\n+      pnode->GetId(),\n+      pnode->m_addr_name.c_str(),\n+      pnode->ConnectionTypeAsString().c_str(),\n+      sanitizedType.c_str(),\n+      msg.data.size(),\n+      msg.data.data()\n+  );\n+  …\n+}\n+```\n+\n+If needed, an extra `if(TRACEPOINT_ACTIVE(context, event) {..}` check can be",
      "path": "doc/tracing.md",
      "position": null,
      "original_position": 43,
      "commit_id": "1949b64afe7ecf91091f58623e75341a75996da0",
      "original_commit_id": "9343ee83ec9ca1ac32d9686f6aea6d755c623562",
      "in_reply_to_id": 1582972621,
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In some cases, tracepoint argument preparation can require more than a single readable line in the `TRACEPOINT` macro. An example is the transaction serialization [here](https://github.com/0xB10C/bitcoin/blob/6464cc95ca97c4535de79e52ed174e58ea0bfb18/src/txmempool.cpp#L467-L478). For context, see https://github.com/bitcoin/bitcoin/pull/26531#issuecomment-1333832906. I don't currently plan on PRing something like this, but had this running for more than a year to collect data on full-rbf RBF replacements.\r\n\r\n```\r\n    if(TRACEPOINT_ACTIVE(mempool, added)) {\r\n        CDataStream added_tx(SER_NETWORK, PROTOCOL_VERSION);\r\n        added_tx << entry.GetTx();\r\n        TRACEPOINT(mempool, added,\r\n            entry.GetTx().GetHash().data(),\r\n            entry.GetTxSize(),\r\n            entry.GetFee(),\r\n            added_tx.size(),\r\n            added_tx.data()\r\n        );\r\n    }\r\n```\r\n",
      "created_at": "2024-04-29T12:34:20Z",
      "updated_at": "2024-04-29T12:34:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1583018329",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1583018329"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 300,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1583019336",
      "pull_request_review_id": 2028389620,
      "id": 1583019336,
      "node_id": "PRRC_kwDOABII585eWvVI",
      "diff_hunk": "@@ -176,8 +177,8 @@ def handle_outbound(_, data, size):\n \n \n if __name__ == \"__main__\":\n-    if len(sys.argv) < 2:",
      "path": "contrib/tracing/log_raw_p2p_msgs.py",
      "position": 16,
      "original_position": 16,
      "commit_id": "1949b64afe7ecf91091f58623e75341a75996da0",
      "original_commit_id": "38e24dfc5f1c54723018bf9d973b7d9cf9a2b824",
      "in_reply_to_id": 1582872788,
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I agree that adding this makes sense as the bcc error message isn't clear. If I retouch, I'll add it.",
      "created_at": "2024-04-29T12:35:11Z",
      "updated_at": "2024-04-29T12:35:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1583019336",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1583019336"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 179,
      "original_line": 179,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1583020605",
      "pull_request_review_id": 2028391865,
      "id": 1583020605,
      "node_id": "PRRC_kwDOABII585eWvo9",
      "diff_hunk": "@@ -270,21 +270,48 @@ the `util/trace.h` (defines the tracepoint macros) with `#include <util/trace.h>\n Each tracepoint needs a `context` and an `event`. Please use `snake_case` and\n try to make sure that the tracepoint names make sense even without detailed\n knowledge of the implementation details. You can pass zero to twelve arguments\n-to the tracepoint. Do not forget to update the tracepoint list in this\n-document.\n+to the tracepoint. Each tracepoint also needs a global semaphore. The semaphore\n+gates the tracepoint arguments from being processed if we are not attached to\n+the tracepoint. Add a `TRACEPOINT_SEMAPHORE(context, event)` with the `context`\n+and `event` of your tracepoint in the top-level namespace at the beginning of\n+the file. Do not forget to update the tracepoint list in this document.\n \n-For example, a tracepoint in the `net` context for the event `inbound_message`\n-and six arguments:\n+For example, the `net:outbound_message` tracepoint in `src/net.cpp` with six\n+arguments.\n \n ```C++\n-TRACEPOINT(net, inbound_message,\n-    pnode->GetId(),\n-    pnode->m_addr_name.c_str(),\n-    pnode->ConnectionTypeAsString().c_str(),\n-    sanitizedType.c_str(),\n-    msg.data.size(),\n-    msg.data.data()\n-);\n+// src/net.cpp\n+TRACEPOINT_SEMAPHORE(net, outbound_message);\n+…\n+void CConnman::PushMessage(…) {\n+  …\n+  TRACEPOINT(net, outbound_message,\n+      pnode->GetId(),\n+      pnode->m_addr_name.c_str(),\n+      pnode->ConnectionTypeAsString().c_str(),\n+      sanitizedType.c_str(),\n+      msg.data.size(),\n+      msg.data.data()\n+  );\n+  …\n+}\n+```\n+\n+If needed, an extra `if(TRACEPOINT_ACTIVE(context, event) {..}` check can be",
      "path": "doc/tracing.md",
      "position": null,
      "original_position": 43,
      "commit_id": "1949b64afe7ecf91091f58623e75341a75996da0",
      "original_commit_id": "9343ee83ec9ca1ac32d9686f6aea6d755c623562",
      "in_reply_to_id": 1582972621,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah I see, that makes sense now then, thanks.",
      "created_at": "2024-04-29T12:36:10Z",
      "updated_at": "2024-04-29T12:36:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1583020605",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1583020605"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 300,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596668853",
      "pull_request_review_id": 2049935876,
      "id": 1596668853,
      "node_id": "PRRC_kwDOABII585fKzu1",
      "diff_hunk": "@@ -265,42 +265,53 @@ Arguments passed:\n \n ## Adding tracepoints to Bitcoin Core\n \n-To add a new tracepoint, `#include <util/trace.h>` in the compilation unit where\n-the tracepoint is inserted. Use one of the `TRACEx` macros listed below\n-depending on the number of arguments passed to the tracepoint. Up to 12\n-arguments can be provided. The `context` and `event` specify the names by which\n-the tracepoint is referred to. Please use `snake_case` and try to make sure that\n-the tracepoint names make sense even without detailed knowledge of the\n-implementation details. Do not forget to update the tracepoint list in this\n-document.\n-\n-```c\n-#define TRACE(context, event)\n-#define TRACE1(context, event, a)\n-#define TRACE2(context, event, a, b)\n-#define TRACE3(context, event, a, b, c)\n-#define TRACE4(context, event, a, b, c, d)\n-#define TRACE5(context, event, a, b, c, d, e)\n-#define TRACE6(context, event, a, b, c, d, e, f)\n-#define TRACE7(context, event, a, b, c, d, e, f, g)\n-#define TRACE8(context, event, a, b, c, d, e, f, g, h)\n-#define TRACE9(context, event, a, b, c, d, e, f, g, h, i)\n-#define TRACE10(context, event, a, b, c, d, e, f, g, h, i, j)\n-#define TRACE11(context, event, a, b, c, d, e, f, g, h, i, j, k)\n-#define TRACE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l)\n+Use the `TRACEPOINT` macro to add a new tracepoint. If not yet included, include\n+the `util/trace.h` (defines the tracepoint macros) with `#include <util/trace.h>`.",
      "path": "doc/tracing.md",
      "position": null,
      "original_position": 28,
      "commit_id": "1949b64afe7ecf91091f58623e75341a75996da0",
      "original_commit_id": "38e24dfc5f1c54723018bf9d973b7d9cf9a2b824",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: replace \"include the trace.h\" with either \"include trace.h\" or \"include the trace.h header\"",
      "created_at": "2024-05-10T12:03:09Z",
      "updated_at": "2024-05-10T13:02:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1596668853",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596668853"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
        }
      },
      "start_line": null,
      "original_start_line": 268,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 269,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596671187",
      "pull_request_review_id": 2049935876,
      "id": 1596671187,
      "node_id": "PRRC_kwDOABII585fK0TT",
      "diff_hunk": "@@ -11,39 +11,46 @@\n \n #ifdef ENABLE_TRACING\n \n+// Setting SDT_USE_VARIADIC let's systemtap (sys/sdt.h) know that we want to use",
      "path": "src/util/trace.h",
      "position": null,
      "original_position": 4,
      "commit_id": "1949b64afe7ecf91091f58623e75341a75996da0",
      "original_commit_id": "38e24dfc5f1c54723018bf9d973b7d9cf9a2b824",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit:\r\n```suggestion\r\n// Setting SDT_USE_VARIADIC lets systemtap (sys/sdt.h) know that we want to use\r\n```",
      "created_at": "2024-05-10T12:05:52Z",
      "updated_at": "2024-05-10T13:02:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1596671187",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596671187"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596676716",
      "pull_request_review_id": 2049935876,
      "id": 1596676716,
      "node_id": "PRRC_kwDOABII585fK1ps",
      "diff_hunk": "@@ -265,42 +265,53 @@ Arguments passed:\n \n ## Adding tracepoints to Bitcoin Core\n \n-To add a new tracepoint, `#include <util/trace.h>` in the compilation unit where\n-the tracepoint is inserted. Use one of the `TRACEx` macros listed below\n-depending on the number of arguments passed to the tracepoint. Up to 12\n-arguments can be provided. The `context` and `event` specify the names by which\n-the tracepoint is referred to. Please use `snake_case` and try to make sure that\n-the tracepoint names make sense even without detailed knowledge of the\n-implementation details. Do not forget to update the tracepoint list in this\n-document.\n-\n-```c\n-#define TRACE(context, event)\n-#define TRACE1(context, event, a)\n-#define TRACE2(context, event, a, b)\n-#define TRACE3(context, event, a, b, c)\n-#define TRACE4(context, event, a, b, c, d)\n-#define TRACE5(context, event, a, b, c, d, e)\n-#define TRACE6(context, event, a, b, c, d, e, f)\n-#define TRACE7(context, event, a, b, c, d, e, f, g)\n-#define TRACE8(context, event, a, b, c, d, e, f, g, h)\n-#define TRACE9(context, event, a, b, c, d, e, f, g, h, i)\n-#define TRACE10(context, event, a, b, c, d, e, f, g, h, i, j)\n-#define TRACE11(context, event, a, b, c, d, e, f, g, h, i, j, k)\n-#define TRACE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l)\n+Use the `TRACEPOINT` macro to add a new tracepoint. If not yet included, include\n+the `util/trace.h` (defines the tracepoint macros) with `#include <util/trace.h>`.\n+Each tracepoint needs a `context` and an `event`. Please use `snake_case` and\n+try to make sure that the tracepoint names make sense even without detailed\n+knowledge of the implementation details. You can pass zero to twelve arguments\n+to the tracepoint. Each tracepoint also needs a global semaphore. The semaphore\n+gates the tracepoint arguments from being processed if we are not attached to\n+the tracepoint. Add a `TRACEPOINT_SEMAPHORE(context, event)` with the `context`\n+and `event` of your tracepoint in the top-level namespace at the beginning of\n+the file. Do not forget to update the tracepoint list in this document.\n+\n+For example, the `net:outbound_message` tracepoint in `src/net.cpp` with six\n+arguments.\n+\n+```C++\n+// src/net.cpp\n+TRACEPOINT_SEMAPHORE(net, outbound_message);\n+…\n+void CConnman::PushMessage(…) {\n+  …\n+  TRACEPOINT(net, outbound_message,\n+      pnode->GetId(),\n+      pnode->m_addr_name.c_str(),\n+      pnode->ConnectionTypeAsString().c_str(),\n+      sanitizedType.c_str(),\n+      msg.data.size(),\n+      msg.data.data()\n+  );\n+  …\n+}\n ```\n \n-For example:\n+If needed, an extra `if(TRACEPOINT_ACTIVE(context, event) {..}` check can be",
      "path": "doc/tracing.md",
      "position": null,
      "original_position": 60,
      "commit_id": "1949b64afe7ecf91091f58623e75341a75996da0",
      "original_commit_id": "38e24dfc5f1c54723018bf9d973b7d9cf9a2b824",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "3 nits:\r\n\r\n```suggestion\r\nIf needed, an extra `if (TRACEPOINT_ACTIVE(context, event)) {...}` check can be\r\n```",
      "created_at": "2024-05-10T12:11:58Z",
      "updated_at": "2024-05-10T13:02:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1596676716",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596676716"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 300,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596683957",
      "pull_request_review_id": 2049935876,
      "id": 1596683957,
      "node_id": "PRRC_kwDOABII585fK3a1",
      "diff_hunk": "@@ -265,42 +265,53 @@ Arguments passed:\n \n ## Adding tracepoints to Bitcoin Core\n \n-To add a new tracepoint, `#include <util/trace.h>` in the compilation unit where\n-the tracepoint is inserted. Use one of the `TRACEx` macros listed below\n-depending on the number of arguments passed to the tracepoint. Up to 12\n-arguments can be provided. The `context` and `event` specify the names by which\n-the tracepoint is referred to. Please use `snake_case` and try to make sure that\n-the tracepoint names make sense even without detailed knowledge of the\n-implementation details. Do not forget to update the tracepoint list in this\n-document.\n-\n-```c\n-#define TRACE(context, event)\n-#define TRACE1(context, event, a)\n-#define TRACE2(context, event, a, b)\n-#define TRACE3(context, event, a, b, c)\n-#define TRACE4(context, event, a, b, c, d)\n-#define TRACE5(context, event, a, b, c, d, e)\n-#define TRACE6(context, event, a, b, c, d, e, f)\n-#define TRACE7(context, event, a, b, c, d, e, f, g)\n-#define TRACE8(context, event, a, b, c, d, e, f, g, h)\n-#define TRACE9(context, event, a, b, c, d, e, f, g, h, i)\n-#define TRACE10(context, event, a, b, c, d, e, f, g, h, i, j)\n-#define TRACE11(context, event, a, b, c, d, e, f, g, h, i, j, k)\n-#define TRACE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l)\n+Use the `TRACEPOINT` macro to add a new tracepoint. If not yet included, include\n+the `util/trace.h` (defines the tracepoint macros) with `#include <util/trace.h>`.\n+Each tracepoint needs a `context` and an `event`. Please use `snake_case` and\n+try to make sure that the tracepoint names make sense even without detailed\n+knowledge of the implementation details. You can pass zero to twelve arguments\n+to the tracepoint. Each tracepoint also needs a global semaphore. The semaphore\n+gates the tracepoint arguments from being processed if we are not attached to\n+the tracepoint. Add a `TRACEPOINT_SEMAPHORE(context, event)` with the `context`\n+and `event` of your tracepoint in the top-level namespace at the beginning of\n+the file. Do not forget to update the tracepoint list in this document.\n+\n+For example, the `net:outbound_message` tracepoint in `src/net.cpp` with six\n+arguments.\n+\n+```C++\n+// src/net.cpp\n+TRACEPOINT_SEMAPHORE(net, outbound_message);\n+…\n+void CConnman::PushMessage(…) {\n+  …\n+  TRACEPOINT(net, outbound_message,\n+      pnode->GetId(),\n+      pnode->m_addr_name.c_str(),\n+      pnode->ConnectionTypeAsString().c_str(),\n+      sanitizedType.c_str(),\n+      msg.data.size(),\n+      msg.data.data()\n+  );\n+  …\n+}\n ```\n \n-For example:\n+If needed, an extra `if(TRACEPOINT_ACTIVE(context, event) {..}` check can be\n+used to prepare somewhat expensive arguments right before the tracepoint. While\n+the tracepoint arguments are only prepared when we attach something to the\n+tracepoint, an argument preparation should never hang the process. Hashing and\n+serialization of data structures is probably fine, a `sleep(10s)` not.\n \n ```C++\n-TRACE6(net, inbound_message,\n-    pnode->GetId(),\n-    pnode->m_addr_name.c_str(),\n-    pnode->ConnectionTypeAsString().c_str(),\n-    sanitizedType.c_str(),\n-    msg.data.size(),\n-    msg.data.data()\n-);\n+// An example tracepoint with an expensive argument.\n+\n+TRACEPOINT_SEMAPHORE(example, gated_expensive_argument);\n+…\n+if(TRACEPOINT_ACTIVE(example, gated_expensive_argument) {",
      "path": "doc/tracing.md",
      "position": null,
      "original_position": 79,
      "commit_id": "1949b64afe7ecf91091f58623e75341a75996da0",
      "original_commit_id": "38e24dfc5f1c54723018bf9d973b7d9cf9a2b824",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit:\r\n```suggestion\r\nif (TRACEPOINT_ACTIVE(example, gated_expensive_argument)) {\r\n```",
      "created_at": "2024-05-10T12:19:46Z",
      "updated_at": "2024-05-10T13:02:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1596683957",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596683957"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 311,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596685441",
      "pull_request_review_id": 2049935876,
      "id": 1596685441,
      "node_id": "PRRC_kwDOABII585fK3yB",
      "diff_hunk": "@@ -0,0 +1,57 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/util/setup_common.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <util/trace.h>\n+\n+TRACEPOINT_SEMAPHORE(test, zero_args);\n+TRACEPOINT_SEMAPHORE(test, one_arg);\n+TRACEPOINT_SEMAPHORE(test, six_args);\n+TRACEPOINT_SEMAPHORE(test, twelve_args);\n+TRACEPOINT_SEMAPHORE(test, check_if_attached);\n+TRACEPOINT_SEMAPHORE(test, expensive_section);\n+\n+BOOST_FIXTURE_TEST_SUITE(util_trace_tests, BasicTestingSetup)\n+\n+// Tests the TRACEPOINT macro and that we can compile tracepoints with 0 to 12 args.\n+BOOST_AUTO_TEST_CASE(test_tracepoints)\n+{\n+  TRACEPOINT(test, zero_args);",
      "path": "src/test/util_trace_tests.cpp",
      "position": null,
      "original_position": 23,
      "commit_id": "1949b64afe7ecf91091f58623e75341a75996da0",
      "original_commit_id": "38e24dfc5f1c54723018bf9d973b7d9cf9a2b824",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Indentation in Bitcoin Core is 4 spaces. This file uses 2 spaces (also some of the examples in `doc/tracing.md`).",
      "created_at": "2024-05-10T12:21:25Z",
      "updated_at": "2024-05-10T13:02:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1596685441",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596685441"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596711392",
      "pull_request_review_id": 2049935876,
      "id": 1596711392,
      "node_id": "PRRC_kwDOABII585fK-Hg",
      "diff_hunk": "@@ -11,39 +11,46 @@\n \n #ifdef ENABLE_TRACING\n \n+// Setting SDT_USE_VARIADIC let's systemtap (sys/sdt.h) know that we want to use\n+// the optional variadic macros to define tracepoints.\n+#define SDT_USE_VARIADIC 1\n+\n+// Setting _SDT_HAS_SEMAPHORES let's systemtap (sys/sdt.h) know that we want to\n+// use the optional semaphore feature for our tracepoints. This feature allows\n+// us to check if something is attached to a tracepoint. We only want to prepare\n+// some potentially expensive tracepoint arguments, if the tracepoint is being\n+// used. Here, an expensive argument preparation could, for example, be\n+// calculating a hash or serialization of a data structure.\n+#define _SDT_HAS_SEMAPHORES 1\n+\n+// Used to define a counting semaphore for a tracepoint. This semaphore is\n+// automatically incremented by tracing frameworks (bpftrace, bcc, libbpf, ...)\n+// upon attaching to the tracepoint and decremented when detaching. This needs\n+// to be a global variable. It's placed in the '.probes' ELF section.\n+#define TRACEPOINT_SEMAPHORE(context, event) \\\n+    unsigned short context##_##event##_semaphore __attribute__((section(\".probes\")))\n+\n #include <sys/sdt.h>\n \n-#define TRACE(context, event) DTRACE_PROBE(context, event)\n-#define TRACE1(context, event, a) DTRACE_PROBE1(context, event, a)\n-#define TRACE2(context, event, a, b) DTRACE_PROBE2(context, event, a, b)\n-#define TRACE3(context, event, a, b, c) DTRACE_PROBE3(context, event, a, b, c)\n-#define TRACE4(context, event, a, b, c, d) DTRACE_PROBE4(context, event, a, b, c, d)\n-#define TRACE5(context, event, a, b, c, d, e) DTRACE_PROBE5(context, event, a, b, c, d, e)\n-#define TRACE6(context, event, a, b, c, d, e, f) DTRACE_PROBE6(context, event, a, b, c, d, e, f)\n-#define TRACE7(context, event, a, b, c, d, e, f, g) DTRACE_PROBE7(context, event, a, b, c, d, e, f, g)\n-#define TRACE8(context, event, a, b, c, d, e, f, g, h) DTRACE_PROBE8(context, event, a, b, c, d, e, f, g, h)\n-#define TRACE9(context, event, a, b, c, d, e, f, g, h, i) DTRACE_PROBE9(context, event, a, b, c, d, e, f, g, h, i)\n-#define TRACE10(context, event, a, b, c, d, e, f, g, h, i, j) DTRACE_PROBE10(context, event, a, b, c, d, e, f, g, h, i, j)\n-#define TRACE11(context, event, a, b, c, d, e, f, g, h, i, j, k) DTRACE_PROBE11(context, event, a, b, c, d, e, f, g, h, i, j, k)\n-#define TRACE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l) DTRACE_PROBE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l)\n+// Returns true if something is attached to the tracepoint.\n+#define TRACEPOINT_ACTIVE(context, event) context##_##event##_semaphore > 0",
      "path": "src/util/trace.h",
      "position": null,
      "original_position": 39,
      "commit_id": "1949b64afe7ecf91091f58623e75341a75996da0",
      "original_commit_id": "38e24dfc5f1c54723018bf9d973b7d9cf9a2b824",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I know it would be weird usage if somebody does something like `TRACEPOINT_ACTIVE(...) + 1` but in general it is better to define macros in such a way to avoid unexpected outcomes. In that case it would translate to `context##_##event##_semaphore > (0 + 1)` whereas the expectation would be `(context##_##event##_semaphore > 0) + 1`.\r\n\r\n```suggestion\r\n#define TRACEPOINT_ACTIVE(context, event) (context##_##event##_semaphore > 0)\r\n```",
      "created_at": "2024-05-10T12:48:02Z",
      "updated_at": "2024-05-10T13:02:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1596711392",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596711392"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 36,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596714759",
      "pull_request_review_id": 2049935876,
      "id": 1596714759,
      "node_id": "PRRC_kwDOABII585fK-8H",
      "diff_hunk": "@@ -11,39 +11,46 @@\n \n #ifdef ENABLE_TRACING\n \n+// Setting SDT_USE_VARIADIC let's systemtap (sys/sdt.h) know that we want to use\n+// the optional variadic macros to define tracepoints.\n+#define SDT_USE_VARIADIC 1\n+\n+// Setting _SDT_HAS_SEMAPHORES let's systemtap (sys/sdt.h) know that we want to\n+// use the optional semaphore feature for our tracepoints. This feature allows\n+// us to check if something is attached to a tracepoint. We only want to prepare\n+// some potentially expensive tracepoint arguments, if the tracepoint is being\n+// used. Here, an expensive argument preparation could, for example, be\n+// calculating a hash or serialization of a data structure.\n+#define _SDT_HAS_SEMAPHORES 1\n+\n+// Used to define a counting semaphore for a tracepoint. This semaphore is\n+// automatically incremented by tracing frameworks (bpftrace, bcc, libbpf, ...)\n+// upon attaching to the tracepoint and decremented when detaching. This needs\n+// to be a global variable. It's placed in the '.probes' ELF section.\n+#define TRACEPOINT_SEMAPHORE(context, event) \\\n+    unsigned short context##_##event##_semaphore __attribute__((section(\".probes\")))\n+\n #include <sys/sdt.h>\n \n-#define TRACE(context, event) DTRACE_PROBE(context, event)\n-#define TRACE1(context, event, a) DTRACE_PROBE1(context, event, a)\n-#define TRACE2(context, event, a, b) DTRACE_PROBE2(context, event, a, b)\n-#define TRACE3(context, event, a, b, c) DTRACE_PROBE3(context, event, a, b, c)\n-#define TRACE4(context, event, a, b, c, d) DTRACE_PROBE4(context, event, a, b, c, d)\n-#define TRACE5(context, event, a, b, c, d, e) DTRACE_PROBE5(context, event, a, b, c, d, e)\n-#define TRACE6(context, event, a, b, c, d, e, f) DTRACE_PROBE6(context, event, a, b, c, d, e, f)\n-#define TRACE7(context, event, a, b, c, d, e, f, g) DTRACE_PROBE7(context, event, a, b, c, d, e, f, g)\n-#define TRACE8(context, event, a, b, c, d, e, f, g, h) DTRACE_PROBE8(context, event, a, b, c, d, e, f, g, h)\n-#define TRACE9(context, event, a, b, c, d, e, f, g, h, i) DTRACE_PROBE9(context, event, a, b, c, d, e, f, g, h, i)\n-#define TRACE10(context, event, a, b, c, d, e, f, g, h, i, j) DTRACE_PROBE10(context, event, a, b, c, d, e, f, g, h, i, j)\n-#define TRACE11(context, event, a, b, c, d, e, f, g, h, i, j, k) DTRACE_PROBE11(context, event, a, b, c, d, e, f, g, h, i, j, k)\n-#define TRACE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l) DTRACE_PROBE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l)\n+// Returns true if something is attached to the tracepoint.\n+#define TRACEPOINT_ACTIVE(context, event) context##_##event##_semaphore > 0\n+\n+// A USDT tracepoint with one to twelve arguments. It's checked that the\n+// tracepoint is active before preparing its arguments.\n+#define TRACEPOINT(context, event, ...)                                         \\\n+    do {                                                                        \\\n+        if (TRACEPOINT_ACTIVE(context, event)) {                                \\\n+            STAP_PROBEV(context, event __VA_OPT__(, ) __VA_ARGS__);                           \\\n+        }                                                                       \\",
      "path": "src/util/trace.h",
      "position": null,
      "original_position": 47,
      "commit_id": "1949b64afe7ecf91091f58623e75341a75996da0",
      "original_commit_id": "38e24dfc5f1c54723018bf9d973b7d9cf9a2b824",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "whitespace:\r\n```suggestion\r\n        if (TRACEPOINT_ACTIVE(context, event)) {                                \\\r\n            STAP_PROBEV(context, event __VA_OPT__(, ) __VA_ARGS__);             \\\r\n        }                                                                       \\\r\n```",
      "created_at": "2024-05-10T12:51:17Z",
      "updated_at": "2024-05-10T13:02:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1596714759",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596714759"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
        }
      },
      "start_line": null,
      "original_start_line": 42,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 42,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596724174",
      "pull_request_review_id": 2049935876,
      "id": 1596724174,
      "node_id": "PRRC_kwDOABII585fLBPO",
      "diff_hunk": "@@ -114,8 +114,9 @@\n \"\"\"\n \n \n-def main(bitcoind_path):\n-    bitcoind_with_usdts = USDT(path=str(bitcoind_path))\n+def main(bitcoind_pid):\n+    print(f\"Hooking into bitcoind with pid {pid}\")\n+    bitcoind_with_usdts = USDT(pid=int(bitcoind_pid))",
      "path": "contrib/tracing/mempool_monitor.py",
      "position": null,
      "original_position": 8,
      "commit_id": "1949b64afe7ecf91091f58623e75341a75996da0",
      "original_commit_id": "38e24dfc5f1c54723018bf9d973b7d9cf9a2b824",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The argument is called `bitcoind_pid`, but the `print` uses `{pid}`. The neighboring `py` files use just `pid`:\r\n\r\n```suggestion\r\ndef main(pid):\r\n    print(f\"Hooking into bitcoind with pid {pid}\")\r\n    bitcoind_with_usdts = USDT(pid=int(pid))\r\n```",
      "created_at": "2024-05-10T13:00:39Z",
      "updated_at": "2024-05-10T13:02:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1596724174",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1596724174"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
        }
      },
      "start_line": null,
      "original_start_line": 117,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 119,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1614481665",
      "pull_request_review_id": 2078855750,
      "id": 1614481665,
      "node_id": "PRRC_kwDOABII585gOwkB",
      "diff_hunk": "@@ -176,8 +177,8 @@ def handle_outbound(_, data, size):\n \n \n if __name__ == \"__main__\":\n-    if len(sys.argv) < 2:",
      "path": "contrib/tracing/log_raw_p2p_msgs.py",
      "position": 16,
      "original_position": 16,
      "commit_id": "1949b64afe7ecf91091f58623e75341a75996da0",
      "original_commit_id": "38e24dfc5f1c54723018bf9d973b7d9cf9a2b824",
      "in_reply_to_id": 1582872788,
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "~I decided against this. You don't strictly need to be root (https://hackmd.io/@willcl-ark/r19LVO2_6 or https://github.com/bitcoin/bitcoin/pull/24358#issuecomment-1083149220). Checking for getuid == 0 would require you to run as root.~\r\n\r\nNvm, I thought there was an exit in there. Since this is only a print, seems fine and helpful.",
      "created_at": "2024-05-25T08:56:05Z",
      "updated_at": "2024-05-25T08:57:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1614481665",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1614481665"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 179,
      "original_line": 179,
      "side": "LEFT"
    }
  ]
}