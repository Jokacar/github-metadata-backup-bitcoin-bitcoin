{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363",
    "id": 1493672649,
    "node_id": "PR_kwDOABII585ZB6LJ",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/28363",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/28363.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/28363.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28363",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28363/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/1f8ac46bea019f984f2a050e121a51eb79bf9580",
    "number": 28363,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "doc: Add offline signing tutorial",
    "user": {
      "login": "BrandonOdiwuor",
      "id": 15610188,
      "node_id": "MDQ6VXNlcjE1NjEwMTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BrandonOdiwuor",
      "html_url": "https://github.com/BrandonOdiwuor",
      "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
      "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
      "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
      "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
      "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This PR adds offline signing tutorial, as requested on #9492\r\n\r\nAlthough there currently exists tutorials on external-signer and on multisig implemented on #24519  . The external-signer tutorial assumes a connected device and the multisig tutorial is only for multisig transactions and does not include using an offline wallet\r\n\r\n- The tutorial uses signet(instead of regtest) to be as close as possible to mainnet",
    "labels": [
      {
        "id": 148216,
        "node_id": "MDU6TGFiZWwxNDgyMTY=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Docs",
        "name": "Docs",
        "color": "02d7e1",
        "default": false
      }
    ],
    "created_at": "2023-08-29T12:24:14Z",
    "updated_at": "2023-10-26T09:19:14Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "161ffdd7458f2751fe343e2f604d37b5e934950b",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      {
        "login": "rot13maxi",
        "id": 115941166,
        "node_id": "U_kgDOBukfLg",
        "avatar_url": "https://avatars.githubusercontent.com/u/115941166?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rot13maxi",
        "html_url": "https://github.com/rot13maxi",
        "followers_url": "https://api.github.com/users/rot13maxi/followers",
        "following_url": "https://api.github.com/users/rot13maxi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rot13maxi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rot13maxi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rot13maxi/subscriptions",
        "organizations_url": "https://api.github.com/users/rot13maxi/orgs",
        "repos_url": "https://api.github.com/users/rot13maxi/repos",
        "events_url": "https://api.github.com/users/rot13maxi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rot13maxi/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "BrandonOdiwuor:offline_sining_doc",
      "ref": "offline_sining_doc",
      "sha": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "user": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 659246344,
        "node_id": "R_kgDOJ0tNCA",
        "name": "bitcoin",
        "full_name": "BrandonOdiwuor/bitcoin",
        "owner": {
          "login": "BrandonOdiwuor",
          "id": 15610188,
          "node_id": "MDQ6VXNlcjE1NjEwMTg4",
          "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/BrandonOdiwuor",
          "html_url": "https://github.com/BrandonOdiwuor",
          "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
          "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
          "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
          "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
          "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/BrandonOdiwuor/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin",
        "archive_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/events",
        "forks_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/BrandonOdiwuor/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:BrandonOdiwuor/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/BrandonOdiwuor/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/BrandonOdiwuor/bitcoin/hooks",
        "svn_url": "https://github.com/BrandonOdiwuor/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 204122,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-10-21T12:18:31Z",
        "created_at": "2023-06-27T12:31:32Z",
        "updated_at": "2023-08-29T07:23:19Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "738ef44abb6895dad016d8f32f7d7fa1c251b354",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35876,
        "stargazers_count": 71904,
        "watchers_count": 71904,
        "size": 243813,
        "default_branch": "master",
        "open_issues_count": 633,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-10-26T08:46:15Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-10-26T09:18:14Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 256,
    "deletions": 0,
    "changed_files": 2,
    "commits": 1,
    "review_comments": 63,
    "comments": 11
  },
  "events": [
    {
      "event": "commented",
      "id": 1697343276,
      "node_id": "IC_kwDOABII585lK2cs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1697343276",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T12:24:17Z",
      "updated_at": "2023-10-17T15:11:49Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/28363).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [pinheadmz](https://github.com/bitcoin/bitcoin/pull/28363#pullrequestreview-1682638225) |\n| Concept ACK | [RandyMcMillan](https://github.com/bitcoin/bitcoin/pull/28363#issuecomment-1738203963), [willcl-ark](https://github.com/bitcoin/bitcoin/pull/28363#pullrequestreview-1667371877) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#issuecomment-1697343276",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28363"
    },
    {
      "event": "labeled",
      "id": 10220558614,
      "node_id": "LE_lADOABII585vjbwZzwAAAAJhMVkW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10220558614",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T12:24:19Z",
      "label": {
        "name": "Docs",
        "color": "02d7e1"
      }
    },
    {
      "event": "reviewed",
      "id": 1600365996,
      "node_id": "PRR_kwDOABII585fY6Ws",
      "url": null,
      "actor": null,
      "commit_id": "ae02b2911a94f77671a05add6ed5b38f3c6fe97f",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "",
      "user": {
        "login": "rot13maxi",
        "id": 115941166,
        "node_id": "U_kgDOBukfLg",
        "avatar_url": "https://avatars.githubusercontent.com/u/115941166?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rot13maxi",
        "html_url": "https://github.com/rot13maxi",
        "followers_url": "https://api.github.com/users/rot13maxi/followers",
        "following_url": "https://api.github.com/users/rot13maxi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rot13maxi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rot13maxi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rot13maxi/subscriptions",
        "organizations_url": "https://api.github.com/users/rot13maxi/orgs",
        "repos_url": "https://api.github.com/users/rot13maxi/repos",
        "events_url": "https://api.github.com/users/rot13maxi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rot13maxi/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#pullrequestreview-1600365996",
      "submitted_at": "2023-08-29T13:23:52Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
    },
    {
      "event": "labeled",
      "id": 10235016041,
      "node_id": "LE_lADOABII585vjbwZzwAAAAJiDfNp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10235016041",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-30T16:10:56Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10248560715,
      "node_id": "HRFPE_lADOABII585vjbwZzwAAAAJi3KBL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10248560715",
      "actor": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-31T18:32:27Z"
    },
    {
      "event": "unlabeled",
      "id": 10249485950,
      "node_id": "UNLE_lADOABII585vjbwZzwAAAAJi6r5-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10249485950",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-31T20:09:37Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 10266321026,
      "node_id": "LE_lADOABII585vjbwZzwAAAAJj66CC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10266321026",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-03T14:19:57Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 10278948801,
      "node_id": "UNLE_lADOABII585vjbwZzwAAAAJkrE_B",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10278948801",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-05T05:23:37Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1610791065,
      "node_id": "PRR_kwDOABII585gAriZ",
      "url": null,
      "actor": null,
      "commit_id": "de9a0f7b6cd2b3076ce7a7dac61e3847e0570813",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "concept ACK de9a0f7b6cd2b3076ce7a7dac61e3847e0570813\r\n\r\nLeft a few comments - I think the complexity can be reduced to make it more practical for actual mainnet users as opposed to a purely educational exercise.",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#pullrequestreview-1610791065",
      "submitted_at": "2023-09-05T11:24:15Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
    },
    {
      "event": "reviewed",
      "id": 1610984503,
      "node_id": "PRR_kwDOABII585gBaw3",
      "url": null,
      "actor": null,
      "commit_id": "de9a0f7b6cd2b3076ce7a7dac61e3847e0570813",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Nice work @BrandonOdiwuor \r\n\r\nGave it a first pass too, and agree with many of @pinheadmz comments. I think removing the online wallet would remove a load of steps and make things easier to follow.\r\n\r\nLater today I will try and manually test the steps myself using a docker instance, as you described.",
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#pullrequestreview-1610984503",
      "submitted_at": "2023-09-05T13:02:41Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-05T13:04:00Z",
      "updated_at": "2023-09-05T13:04:00Z",
      "source": {
        "issue": {
          "id": 1881940996,
          "node_id": "PR_kwDOABII585Zkp7M",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28414",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28414/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28414/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28414/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28414",
          "number": 28414,
          "state": "closed",
          "state_reason": null,
          "title": "wallet rpc: return final tx hex from walletprocesspsbt if complete",
          "body": "See https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1315753887\r\n\r\n`walletprocesspsbt` currently returns a base64-encoded PSBT and a boolean indicating if the tx is \"complete\". If it is complete, the base64 PSBT can be finalized with `finalizepsbt` which returns the hex-encoded transaction suitable for `sendrawtransaction`.\r\n\r\nWith this patch, `walletprocesspsbt` return object will ALSO include the broadcast-able hex string if the tx is already final. This saves users the extra step of calling `finalizepsbt` assuming they have already inspected and approve the transaction from earlier steps.",
          "user": {
            "login": "pinheadmz",
            "id": 2084648,
            "node_id": "MDQ6VXNlcjIwODQ2NDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pinheadmz",
            "html_url": "https://github.com/pinheadmz",
            "followers_url": "https://api.github.com/users/pinheadmz/followers",
            "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
            "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
            "repos_url": "https://api.github.com/users/pinheadmz/repos",
            "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 7,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28414",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28414",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28414.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28414.patch"
          },
          "closed_at": "2023-09-12T16:28:31Z",
          "created_at": "2023-09-05T13:03:59Z",
          "updated_at": "2023-09-15T16:26:00Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1710202336,
      "node_id": "IC_kwDOABII585l753g",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1710202336",
      "actor": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-07T13:57:57Z",
      "updated_at": "2023-09-07T13:57:57Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks all for the feedback, I have updated the docs to include the suggestions",
      "user": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#issuecomment-1710202336",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28363"
    },
    {
      "event": "review_requested",
      "id": 10307817053,
      "node_id": "RRE_lADOABII585vjbwZzwAAAAJmZM5d",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10307817053",
      "actor": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-07T13:58:03Z",
      "requested_reviewer": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10307817917,
      "node_id": "RRE_lADOABII585vjbwZzwAAAAJmZNG9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10307817917",
      "actor": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-07T13:58:07Z",
      "requested_reviewer": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "commented",
      "id": 1710215748,
      "node_id": "IC_kwDOABII585l79JE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1710215748",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-07T14:05:06Z",
      "updated_at": "2023-09-07T14:05:06Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks @BrandonOdiwuor, I'll take another look as soon as I am able, but you'll also probably want to [squash](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#squashing-commits) these commits, either now or later, but certainly before merge :)",
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#issuecomment-1710215748",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28363"
    },
    {
      "event": "mentioned",
      "id": 10307914018,
      "node_id": "MEE_lADOABII585vjbwZzwAAAAJmZkki",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10307914018",
      "actor": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-07T14:05:06Z"
    },
    {
      "event": "subscribed",
      "id": 10307914049,
      "node_id": "SE_lADOABII585vjbwZzwAAAAJmZklB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10307914049",
      "actor": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-07T14:05:06Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10310355079,
      "node_id": "HRFPE_lADOABII585vjbwZzwAAAAJmi4iH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10310355079",
      "actor": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-07T18:03:10Z"
    },
    {
      "event": "referenced",
      "id": 10349086986,
      "node_id": "REFE_lADOABII585vjbwZzwAAAAJo2okK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10349086986",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "8f9c74cb11d2016c84eea037533c1a131745fdc8",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8f9c74cb11d2016c84eea037533c1a131745fdc8",
      "created_at": "2023-09-12T16:28:30Z"
    },
    {
      "event": "reviewed",
      "id": 1622704849,
      "node_id": "PRR_kwDOABII585guILR",
      "url": null,
      "actor": null,
      "commit_id": "dcf45577f489486578b5e887e38c41a26d59dc1c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#pullrequestreview-1622704849",
      "submitted_at": "2023-09-12T16:45:33Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
    },
    {
      "event": "subscribed",
      "id": 10349520184,
      "node_id": "SE_lADOABII585vjbwZzwAAAAJo4SU4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10349520184",
      "actor": {
        "login": "MarnixCroes",
        "id": 93143998,
        "node_id": "U_kgDOBY1Dvg",
        "avatar_url": "https://avatars.githubusercontent.com/u/93143998?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarnixCroes",
        "html_url": "https://github.com/MarnixCroes",
        "followers_url": "https://api.github.com/users/MarnixCroes/followers",
        "following_url": "https://api.github.com/users/MarnixCroes/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarnixCroes/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarnixCroes/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarnixCroes/subscriptions",
        "organizations_url": "https://api.github.com/users/MarnixCroes/orgs",
        "repos_url": "https://api.github.com/users/MarnixCroes/repos",
        "events_url": "https://api.github.com/users/MarnixCroes/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarnixCroes/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-12T17:14:42Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10356835217,
      "node_id": "HRFPE_lADOABII585vjbwZzwAAAAJpUMOR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10356835217",
      "actor": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-13T08:57:14Z"
    },
    {
      "event": "commented",
      "id": 1717228112,
      "node_id": "IC_kwDOABII585mWtJQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1717228112",
      "actor": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-13T08:59:14Z",
      "updated_at": "2023-09-13T08:59:14Z",
      "author_association": "CONTRIBUTOR",
      "body": "@pinheadmz I have updated the doc to include the changes on #28414 ",
      "user": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#issuecomment-1717228112",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28363"
    },
    {
      "event": "mentioned",
      "id": 10356857946,
      "node_id": "MEE_lADOABII585vjbwZzwAAAAJpURxa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10356857946",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-13T08:59:15Z"
    },
    {
      "event": "subscribed",
      "id": 10356857967,
      "node_id": "SE_lADOABII585vjbwZzwAAAAJpURxv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10356857967",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-13T08:59:15Z"
    },
    {
      "event": "labeled",
      "id": 10358114584,
      "node_id": "LE_lADOABII585vjbwZzwAAAAJpZEkY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10358114584",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-13T10:57:26Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 10360062979,
      "node_id": "UNLE_lADOABII585vjbwZzwAAAAJpggQD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10360062979",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-13T13:54:56Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "review_requested",
      "id": 10368842848,
      "node_id": "RRE_lADOABII585vjbwZzwAAAAJqB_xg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10368842848",
      "actor": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-14T08:09:18Z",
      "requested_reviewer": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10368843197,
      "node_id": "RRE_lADOABII585vjbwZzwAAAAJqB_29",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10368843197",
      "actor": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-14T08:09:20Z",
      "requested_reviewer": {
        "login": "rot13maxi",
        "id": 115941166,
        "node_id": "U_kgDOBukfLg",
        "avatar_url": "https://avatars.githubusercontent.com/u/115941166?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rot13maxi",
        "html_url": "https://github.com/rot13maxi",
        "followers_url": "https://api.github.com/users/rot13maxi/followers",
        "following_url": "https://api.github.com/users/rot13maxi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rot13maxi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rot13maxi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rot13maxi/subscriptions",
        "organizations_url": "https://api.github.com/users/rot13maxi/orgs",
        "repos_url": "https://api.github.com/users/rot13maxi/repos",
        "events_url": "https://api.github.com/users/rot13maxi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rot13maxi/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "reviewed",
      "id": 1629543185,
      "node_id": "PRR_kwDOABII585hINsR",
      "url": null,
      "actor": null,
      "commit_id": "f22625f734bc302bdb65d7a19d62300806d8689f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Looking great, almost done just a few ideas to make the offline/online wallets less confusing",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#pullrequestreview-1629543185",
      "submitted_at": "2023-09-15T19:02:26Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
    },
    {
      "event": "referenced",
      "id": 10407010830,
      "node_id": "REFE_lADOABII585vjbwZzwAAAAJsTmIO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10407010830",
      "actor": {
        "login": "Frank-GER",
        "id": 87550788,
        "node_id": "MDQ6VXNlcjg3NTUwNzg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/87550788?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Frank-GER",
        "html_url": "https://github.com/Frank-GER",
        "followers_url": "https://api.github.com/users/Frank-GER/followers",
        "following_url": "https://api.github.com/users/Frank-GER/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Frank-GER/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Frank-GER/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Frank-GER/subscriptions",
        "organizations_url": "https://api.github.com/users/Frank-GER/orgs",
        "repos_url": "https://api.github.com/users/Frank-GER/repos",
        "events_url": "https://api.github.com/users/Frank-GER/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Frank-GER/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "5bd4f23435f88437168f3137094d445aecfbede7",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/5bd4f23435f88437168f3137094d445aecfbede7",
      "created_at": "2023-09-19T07:53:36Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10470468883,
      "node_id": "HRFPE_lADOABII585vjbwZzwAAAAJwFq0T",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10470468883",
      "actor": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-26T06:19:53Z"
    },
    {
      "event": "commented",
      "id": 1734899821,
      "node_id": "IC_kwDOABII585naHht",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1734899821",
      "actor": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-26T06:21:53Z",
      "updated_at": "2023-09-26T06:21:53Z",
      "author_association": "CONTRIBUTOR",
      "body": "@pinheadmz, @willcl-ark , @rot13maxi  I have updated the doc with the feedbacks received",
      "user": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#issuecomment-1734899821",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28363"
    },
    {
      "event": "mentioned",
      "id": 10470483840,
      "node_id": "MEE_lADOABII585vjbwZzwAAAAJwFueA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10470483840",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-26T06:21:53Z"
    },
    {
      "event": "subscribed",
      "id": 10470483845,
      "node_id": "SE_lADOABII585vjbwZzwAAAAJwFueF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10470483845",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-26T06:21:53Z"
    },
    {
      "event": "mentioned",
      "id": 10470483853,
      "node_id": "MEE_lADOABII585vjbwZzwAAAAJwFueN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10470483853",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-26T06:21:53Z"
    },
    {
      "event": "subscribed",
      "id": 10470483860,
      "node_id": "SE_lADOABII585vjbwZzwAAAAJwFueU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10470483860",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-26T06:21:53Z"
    },
    {
      "event": "mentioned",
      "id": 10470483871,
      "node_id": "MEE_lADOABII585vjbwZzwAAAAJwFuef",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10470483871",
      "actor": {
        "login": "rot13maxi",
        "id": 115941166,
        "node_id": "U_kgDOBukfLg",
        "avatar_url": "https://avatars.githubusercontent.com/u/115941166?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rot13maxi",
        "html_url": "https://github.com/rot13maxi",
        "followers_url": "https://api.github.com/users/rot13maxi/followers",
        "following_url": "https://api.github.com/users/rot13maxi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rot13maxi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rot13maxi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rot13maxi/subscriptions",
        "organizations_url": "https://api.github.com/users/rot13maxi/orgs",
        "repos_url": "https://api.github.com/users/rot13maxi/repos",
        "events_url": "https://api.github.com/users/rot13maxi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rot13maxi/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-26T06:21:53Z"
    },
    {
      "event": "subscribed",
      "id": 10470483876,
      "node_id": "SE_lADOABII585vjbwZzwAAAAJwFuek",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10470483876",
      "actor": {
        "login": "rot13maxi",
        "id": 115941166,
        "node_id": "U_kgDOBukfLg",
        "avatar_url": "https://avatars.githubusercontent.com/u/115941166?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rot13maxi",
        "html_url": "https://github.com/rot13maxi",
        "followers_url": "https://api.github.com/users/rot13maxi/followers",
        "following_url": "https://api.github.com/users/rot13maxi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rot13maxi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rot13maxi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rot13maxi/subscriptions",
        "organizations_url": "https://api.github.com/users/rot13maxi/orgs",
        "repos_url": "https://api.github.com/users/rot13maxi/repos",
        "events_url": "https://api.github.com/users/rot13maxi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rot13maxi/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-26T06:21:53Z"
    },
    {
      "event": "review_requested",
      "id": 10470485771,
      "node_id": "RRE_lADOABII585vjbwZzwAAAAJwFu8L",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10470485771",
      "actor": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-26T06:22:09Z",
      "requested_reviewer": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "unsubscribed",
      "id": 10471298926,
      "node_id": "UE_lADOABII585vjbwZzwAAAAJwI1du",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10471298926",
      "actor": {
        "login": "scotthayes2021",
        "id": 124881735,
        "node_id": "U_kgDOB3GLRw",
        "avatar_url": "https://avatars.githubusercontent.com/u/124881735?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scotthayes2021",
        "html_url": "https://github.com/scotthayes2021",
        "followers_url": "https://api.github.com/users/scotthayes2021/followers",
        "following_url": "https://api.github.com/users/scotthayes2021/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/scotthayes2021/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/scotthayes2021/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/scotthayes2021/subscriptions",
        "organizations_url": "https://api.github.com/users/scotthayes2021/orgs",
        "repos_url": "https://api.github.com/users/scotthayes2021/repos",
        "events_url": "https://api.github.com/users/scotthayes2021/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/scotthayes2021/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-26T07:41:41Z"
    },
    {
      "event": "reviewed",
      "id": 1643840266,
      "node_id": "PRR_kwDOABII585h-wMK",
      "url": null,
      "actor": null,
      "commit_id": "c01707bf8bec3947ce4321cef75c52b6cab743cc",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Hey @BrandonOdiwuor looking pretty good now, nice work!\r\n\r\nI left some (ok, quite a few!) nits, but not related to the process. Feel free to take whichever you feel improve the readability the most.",
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#pullrequestreview-1643840266",
      "submitted_at": "2023-09-26T11:58:03Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10482759791,
      "node_id": "HRFPE_lADOABII585vjbwZzwAAAAJw0jhv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10482759791",
      "actor": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-27T05:38:40Z"
    },
    {
      "event": "commented",
      "id": 1736736772,
      "node_id": "IC_kwDOABII585nhIAE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1736736772",
      "actor": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-27T05:41:34Z",
      "updated_at": "2023-09-27T05:41:34Z",
      "author_association": "CONTRIBUTOR",
      "body": "@willcl-ark Thanks a lot for the suggestions above, which really improved the readability of the doc\r\n\r\nI have updated the doc to include the suggestions",
      "user": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#issuecomment-1736736772",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28363"
    },
    {
      "event": "mentioned",
      "id": 10482775444,
      "node_id": "MEE_lADOABII585vjbwZzwAAAAJw0nWU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10482775444",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-27T05:41:35Z"
    },
    {
      "event": "subscribed",
      "id": 10482775451,
      "node_id": "SE_lADOABII585vjbwZzwAAAAJw0nWb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10482775451",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-27T05:41:35Z"
    },
    {
      "event": "labeled",
      "id": 10483355970,
      "node_id": "LE_lADOABII585vjbwZzwAAAAJw21FC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10483355970",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-27T06:59:56Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 10483859158,
      "node_id": "UNLE_lADOABII585vjbwZzwAAAAJw4v7W",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10483859158",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-27T07:49:15Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1737209184,
      "node_id": "IC_kwDOABII585ni7Vg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1737209184",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-27T11:26:48Z",
      "updated_at": "2023-09-27T11:26:48Z",
      "author_association": "CONTRIBUTOR",
      "body": "Hey @BrandonOdiwuor, thanks for addressing the feedback so quickly.\r\n\r\nI've given this another run through, this time on my own editor, and made some more suggestions which I formatted into two seperate patches [here](https://github.com/BrandonOdiwuor/bitcoin/compare/offline_sining_doc...willcl-ark:bitcoin:offline_sining_doc).\r\n\r\nhttps://github.com/BrandonOdiwuor/bitcoin/commit/beef4b210c5f2f2c4eb44e8a4f82e25c65c340cd contains more readability nits which _I_ think improve the readbility further.\r\n\r\nhttps://github.com/BrandonOdiwuor/bitcoin/commit/beef353513fc2a72a9f692530077977a4d288110 I am less sure about, but I noticed that some of the longer shell commands are rendered off the edge of the screen with no wrapping by deafult, so experimented with using `\\` linebreaks in some of them to try and have them shown in the narrow default GitHub render.\r\n\r\nBoth of them are, like my previous reviews' suggestions, optional. So feel free to take what you like from both of them if you agree that the suggestions are useful.",
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#issuecomment-1737209184",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28363"
    },
    {
      "event": "mentioned",
      "id": 10486191578,
      "node_id": "MEE_lADOABII585vjbwZzwAAAAJxBpXa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10486191578",
      "actor": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-27T11:26:48Z"
    },
    {
      "event": "subscribed",
      "id": 10486191594,
      "node_id": "SE_lADOABII585vjbwZzwAAAAJxBpXq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10486191594",
      "actor": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-27T11:26:48Z"
    },
    {
      "event": "commented",
      "id": 1738203963,
      "node_id": "IC_kwDOABII585nmuM7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1738203963",
      "actor": {
        "login": "RandyMcMillan",
        "id": 152159,
        "node_id": "MDQ6VXNlcjE1MjE1OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/152159?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RandyMcMillan",
        "html_url": "https://github.com/RandyMcMillan",
        "followers_url": "https://api.github.com/users/RandyMcMillan/followers",
        "following_url": "https://api.github.com/users/RandyMcMillan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RandyMcMillan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RandyMcMillan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RandyMcMillan/subscriptions",
        "organizations_url": "https://api.github.com/users/RandyMcMillan/orgs",
        "repos_url": "https://api.github.com/users/RandyMcMillan/repos",
        "events_url": "https://api.github.com/users/RandyMcMillan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RandyMcMillan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-27T22:44:51Z",
      "updated_at": "2023-09-27T22:44:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "RandyMcMillan",
        "id": 152159,
        "node_id": "MDQ6VXNlcjE1MjE1OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/152159?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RandyMcMillan",
        "html_url": "https://github.com/RandyMcMillan",
        "followers_url": "https://api.github.com/users/RandyMcMillan/followers",
        "following_url": "https://api.github.com/users/RandyMcMillan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RandyMcMillan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RandyMcMillan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RandyMcMillan/subscriptions",
        "organizations_url": "https://api.github.com/users/RandyMcMillan/orgs",
        "repos_url": "https://api.github.com/users/RandyMcMillan/repos",
        "events_url": "https://api.github.com/users/RandyMcMillan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RandyMcMillan/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#issuecomment-1738203963",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28363"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10495312887,
      "node_id": "HRFPE_lADOABII585vjbwZzwAAAAJxkcP3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10495312887",
      "actor": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-28T07:03:42Z"
    },
    {
      "event": "commented",
      "id": 1738596076,
      "node_id": "IC_kwDOABII585noN7s",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1738596076",
      "actor": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-28T07:06:18Z",
      "updated_at": "2023-09-28T07:06:18Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks @willcl-ark for the great feedback, I have updated the doc to include the recommendations",
      "user": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#issuecomment-1738596076",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28363"
    },
    {
      "event": "mentioned",
      "id": 10495341213,
      "node_id": "MEE_lADOABII585vjbwZzwAAAAJxkjKd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10495341213",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-28T07:06:18Z"
    },
    {
      "event": "subscribed",
      "id": 10495341224,
      "node_id": "SE_lADOABII585vjbwZzwAAAAJxkjKo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10495341224",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-28T07:06:18Z"
    },
    {
      "event": "review_requested",
      "id": 10495350403,
      "node_id": "RRE_lADOABII585vjbwZzwAAAAJxklaD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10495350403",
      "actor": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-28T07:07:13Z",
      "requested_reviewer": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "reviewed",
      "id": 1667371877,
      "node_id": "PRR_kwDOABII585jYhNl",
      "url": null,
      "actor": null,
      "commit_id": "6473e4c0ec7eb970018574dedfd68f2d0dd2a4d0",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Ok I think this is looking pretty good now!\r\n\r\nI left two nits which you can choose to take or ignore as you please, but I think L201 where the instruction doesn't match the text should be corrected before I can ACK it.\r\n\r\nPing @pinheadmz to take another look soon too",
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#pullrequestreview-1667371877",
      "submitted_at": "2023-10-10T11:35:23Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10613469053,
      "node_id": "HRFPE_lADOABII585vjbwZzwAAAAJ4nK99",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10613469053",
      "actor": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-11T06:04:40Z"
    },
    {
      "event": "review_requested",
      "id": 10613477899,
      "node_id": "RRE_lADOABII585vjbwZzwAAAAJ4nNIL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10613477899",
      "actor": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-11T06:05:57Z",
      "requested_reviewer": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "commented",
      "id": 1756864183,
      "node_id": "IC_kwDOABII585ot563",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1756864183",
      "actor": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-11T06:07:24Z",
      "updated_at": "2023-10-11T06:07:24Z",
      "author_association": "CONTRIBUTOR",
      "body": "@willcl-ark @pinheadmz could you review the latest changes to the doc",
      "user": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#issuecomment-1756864183",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28363"
    },
    {
      "event": "mentioned",
      "id": 10613488535,
      "node_id": "MEE_lADOABII585vjbwZzwAAAAJ4nPuX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10613488535",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-11T06:07:25Z"
    },
    {
      "event": "subscribed",
      "id": 10613488543,
      "node_id": "SE_lADOABII585vjbwZzwAAAAJ4nPuf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10613488543",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-11T06:07:25Z"
    },
    {
      "event": "mentioned",
      "id": 10613488569,
      "node_id": "MEE_lADOABII585vjbwZzwAAAAJ4nPu5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10613488569",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-11T06:07:25Z"
    },
    {
      "event": "subscribed",
      "id": 10613488582,
      "node_id": "SE_lADOABII585vjbwZzwAAAAJ4nPvG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10613488582",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-11T06:07:25Z"
    },
    {
      "event": "reviewed",
      "id": 1680498323,
      "node_id": "PRR_kwDOABII585kKl6T",
      "url": null,
      "actor": null,
      "commit_id": "4f12e2ba986406aa623d2fa3adc75c239dfea409",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK 4f12e2ba986406aa623d2fa3adc75c239dfea409\r\n\r\nRead through everything and I think it looks great. Definitely good enough for publishing in the repo. I left a few comments if you like, I'm happy to re-ACK\r\n\r\n<details><summary>Show Signature</summary>\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA256\r\n\r\nACK 4f12e2ba986406aa623d2fa3adc75c239dfea409\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQIzBAEBCAAdFiEE5hdzzW4BBA4vG9eM5+KYS2KJyToFAmUtaUMACgkQ5+KYS2KJ\r\nyTpsZA/+NaoPpYrLQfM5qw/H+NT3BHvOUZJkVkmHSNWvgqnEwX8TDVJTvbz8zZOt\r\nxAOTzjCfmH7OSIqHkUY41eKzm1SFJdemsl8AqOt2IWhk0vdEV8K7WZxRNzncPeGZ\r\nE1DP2iUhx1bkLbq9ybkcZ4JHm2Lz5xJw0Nu8x6I1Q0byNiDrvbyrZZ4G7oZ2HHHd\r\ndGoIatM4P92Nc8YuF+QTvRg1E/qOGOnQ2a+YUUKecc3nDvrcQAFX3JSyd4NYb22O\r\nMgl46boPvmxgN24kn+1I8I+vPxekILuhgPGYBFi5yWSrAI1A2REtju3Uk0VLImAV\r\nnZgrcbiBU8sv3H+bfLKcYbikp/qjZExGPHuMlLpmOHqsKbtrysZEfcZohHCusfDS\r\nBrSpCf8pPJF88oylEi/zd0IUEiYOIeV2IfwGi6Gy/1IAIEiYR/bGUZP3aCw1Zbrz\r\nC7ic5up5nUZuhwWB8OHh3vzEeIduezAt9ng2D7/4W8k6ygKUH5Z2R2YCCrZf4zrm\r\n+C0pdoFauMRuH9vVMfL7XEFXY2rPvRpUsFlUYPG2/K4mQGyLPBtreHj8OmC6c3Nf\r\n4k3vtR7Ed9G0QLz5O1G7MnrDxvE8PR6U3f7vzkZACcMrYyiFtv08aV2U6wa1d4Qw\r\naXZNf/3jq0W3JMWmAUuY65962fq0apNJvxnyp4ZPiiqMUJhYwu8=\r\n=wsgh\r\n-----END PGP SIGNATURE-----\r\n```\r\n\r\npinheadmz's public key is [on keybase](https://keybase.io/pinheadmz/pgp_keys.asc?fingerprint=e61773cd6e01040e2f1bd78ce7e2984b6289c93a)\r\n</details>\r\n",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#pullrequestreview-1680498323",
      "submitted_at": "2023-10-16T16:49:03Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
    },
    {
      "event": "review_request_removed",
      "id": 10668148141,
      "node_id": "RRRE_lADOABII585vjbwZzwAAAAJ73wWt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10668148141",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-16T16:49:07Z",
      "requested_reviewer": {
        "login": "rot13maxi",
        "id": 115941166,
        "node_id": "U_kgDOBukfLg",
        "avatar_url": "https://avatars.githubusercontent.com/u/115941166?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rot13maxi",
        "html_url": "https://github.com/rot13maxi",
        "followers_url": "https://api.github.com/users/rot13maxi/followers",
        "following_url": "https://api.github.com/users/rot13maxi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rot13maxi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rot13maxi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rot13maxi/subscriptions",
        "organizations_url": "https://api.github.com/users/rot13maxi/orgs",
        "repos_url": "https://api.github.com/users/rot13maxi/repos",
        "events_url": "https://api.github.com/users/rot13maxi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rot13maxi/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "reviewed",
      "id": 1680700563,
      "node_id": "PRR_kwDOABII585kLXST",
      "url": null,
      "actor": null,
      "commit_id": "4f12e2ba986406aa623d2fa3adc75c239dfea409",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "- I think it makes sense to put a disclaimer at the beginning (use at your own risk... or, only use for testing purposes...)\r\n- Is it on purpose to not mention how the data transfer between the online and offline wallet takes place?",
      "user": {
        "login": "MarnixCroes",
        "id": 93143998,
        "node_id": "U_kgDOBY1Dvg",
        "avatar_url": "https://avatars.githubusercontent.com/u/93143998?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarnixCroes",
        "html_url": "https://github.com/MarnixCroes",
        "followers_url": "https://api.github.com/users/MarnixCroes/followers",
        "following_url": "https://api.github.com/users/MarnixCroes/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarnixCroes/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarnixCroes/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarnixCroes/subscriptions",
        "organizations_url": "https://api.github.com/users/MarnixCroes/orgs",
        "repos_url": "https://api.github.com/users/MarnixCroes/repos",
        "events_url": "https://api.github.com/users/MarnixCroes/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarnixCroes/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#pullrequestreview-1680700563",
      "submitted_at": "2023-10-16T18:47:10Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10678749718,
      "node_id": "HRFPE_lADOABII585vjbwZzwAAAAJ8gMoW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10678749718",
      "actor": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-17T13:40:25Z"
    },
    {
      "event": "review_requested",
      "id": 10678767719,
      "node_id": "RRE_lADOABII585vjbwZzwAAAAJ8gRBn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10678767719",
      "actor": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-17T13:41:40Z",
      "requested_reviewer": {
        "login": "MarnixCroes",
        "id": 93143998,
        "node_id": "U_kgDOBY1Dvg",
        "avatar_url": "https://avatars.githubusercontent.com/u/93143998?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarnixCroes",
        "html_url": "https://github.com/MarnixCroes",
        "followers_url": "https://api.github.com/users/MarnixCroes/followers",
        "following_url": "https://api.github.com/users/MarnixCroes/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarnixCroes/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarnixCroes/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarnixCroes/subscriptions",
        "organizations_url": "https://api.github.com/users/MarnixCroes/orgs",
        "repos_url": "https://api.github.com/users/MarnixCroes/repos",
        "events_url": "https://api.github.com/users/MarnixCroes/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarnixCroes/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10678768626,
      "node_id": "RRE_lADOABII585vjbwZzwAAAAJ8gRPy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10678768626",
      "actor": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-17T13:41:44Z",
      "requested_reviewer": {
        "login": "rot13maxi",
        "id": 115941166,
        "node_id": "U_kgDOBukfLg",
        "avatar_url": "https://avatars.githubusercontent.com/u/115941166?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rot13maxi",
        "html_url": "https://github.com/rot13maxi",
        "followers_url": "https://api.github.com/users/rot13maxi/followers",
        "following_url": "https://api.github.com/users/rot13maxi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rot13maxi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rot13maxi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rot13maxi/subscriptions",
        "organizations_url": "https://api.github.com/users/rot13maxi/orgs",
        "repos_url": "https://api.github.com/users/rot13maxi/repos",
        "events_url": "https://api.github.com/users/rot13maxi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rot13maxi/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10678769929,
      "node_id": "RRE_lADOABII585vjbwZzwAAAAJ8gRkJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10678769929",
      "actor": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-17T13:41:49Z",
      "requested_reviewer": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "reviewed",
      "id": 1682463406,
      "node_id": "PRR_kwDOABII585kSFqu",
      "url": null,
      "actor": null,
      "commit_id": "f49c917021541f65bc93f511dfc7ae310d4e8d53",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "A couple of typos from the last resvision but otherwise really great work. I ran through all the commands locally one more time and everything was correct",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#pullrequestreview-1682463406",
      "submitted_at": "2023-10-17T14:33:45Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDFmOGFjNDZiZWEwMTlmOTg0ZjJhMDUwZTEyMWE1MWViNzliZjk1ODA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "tree": {
        "sha": "bb4ae5c89f74e038bf7d872806bf7a074aa26a4d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bb4ae5c89f74e038bf7d872806bf7a074aa26a4d"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ab42b2ebdbf61225e636e4c00068fd29b2790d41",
          "sha": "ab42b2ebdbf61225e636e4c00068fd29b2790d41",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ab42b2ebdbf61225e636e4c00068fd29b2790d41"
        }
      ],
      "message": "Add offline signing tutorial",
      "committer": {
        "name": "Brandon Odiwuor",
        "email": "brandon.odiwuor@gmail.com",
        "date": "2023-10-17T14:40:28Z"
      },
      "author": {
        "name": "Brandon Odiwuor",
        "email": "brandon.odiwuor@gmail.com",
        "date": "2023-08-29T11:59:14Z"
      },
      "sha": "1f8ac46bea019f984f2a050e121a51eb79bf9580"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10679615579,
      "node_id": "HRFPE_lADOABII585vjbwZzwAAAAJ8jgBb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10679615579",
      "actor": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-17T14:40:52Z"
    },
    {
      "event": "review_requested",
      "id": 10679621995,
      "node_id": "RRE_lADOABII585vjbwZzwAAAAJ8jhlr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10679621995",
      "actor": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-17T14:41:23Z",
      "requested_reviewer": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "reviewed",
      "id": 1682638225,
      "node_id": "PRR_kwDOABII585kSwWR",
      "url": null,
      "actor": null,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK 1f8ac46bea019f984f2a050e121a51eb79bf9580\r\n<details><summary>Show Signature</summary>\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA256\r\n\r\nACK 1f8ac46bea019f984f2a050e121a51eb79bf9580\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQIzBAEBCAAdFiEE5hdzzW4BBA4vG9eM5+KYS2KJyToFAmUupCEACgkQ5+KYS2KJ\r\nyTp25xAAq2Tg7xArPpDHxPDWpvDzsUShovFxpMQdnrixQ+OHSvOGPEPB94iRElfi\r\nBP8WoxmulpBaiYB3y7fXjUIXePHULChPvjM3fOJTCS5HnqrDAZ3yACTlfyXf453u\r\ncTI3tRMdF6vy5xzUCw69bG1EwMtoaulj2S3I7iqfc6OKxQ7eyA/jl92N8ax9Ciwb\r\n5ylUtWMKcfP78Lz/ssx7Jbrtwx/zyLYK/j44LkpbAz6AAxbUhOYxqrHaYOvXTTJ3\r\nLHkZ76iYKrBmkH9Mdy4+blxeD/Por5e4qdQFcsk3zl0N6c3iX0658zwG0s7XR8pH\r\n8nJQDiLYuoMmLb8cWbHuUifFbQihM6op+BGe4kTMWJH02rymjXp6p6DPEuoYqFXJ\r\nQUq22obSrjeST1uEOnpDrNO9VuQAdLjQ8lPfUT809vucxoMvkhJxVIcskXPF5D2i\r\n9pxQpqA2vP0ZZXsAzTI7k8Sx9T1hjcQEn3aKStpobjvqa2L9Cl7jrys23R3IpjDW\r\n/mpEOAdSV88ezaC8ox4MoWlCjV96a4zh0nMOpSBZXynQRKFr1RjWAcPxkFrJi/yO\r\narGV1CPkBSrNSc9HIj+LX9dhuQZCKQDlD1L7kTBmAqvBKODo81qXISIATJjLfaQ4\r\n81v97jEy0Tf2THkv2xh2sHRnQoWQ5vylz7R+gtOW7zz/MO9bScg=\r\n=lJzK\r\n-----END PGP SIGNATURE-----\r\n```\r\n\r\npinheadmz's public key is [on keybase](https://keybase.io/pinheadmz/pgp_keys.asc?fingerprint=e61773cd6e01040e2f1bd78ce7e2984b6289c93a)\r\n</details>\r\n",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#pullrequestreview-1682638225",
      "submitted_at": "2023-10-17T15:11:46Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
    },
    {
      "event": "review_request_removed",
      "id": 10680039907,
      "node_id": "RRRE_lADOABII585vjbwZzwAAAAJ8lHnj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10680039907",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-17T15:11:50Z",
      "requested_reviewer": {
        "login": "MarnixCroes",
        "id": 93143998,
        "node_id": "U_kgDOBY1Dvg",
        "avatar_url": "https://avatars.githubusercontent.com/u/93143998?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarnixCroes",
        "html_url": "https://github.com/MarnixCroes",
        "followers_url": "https://api.github.com/users/MarnixCroes/followers",
        "following_url": "https://api.github.com/users/MarnixCroes/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarnixCroes/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarnixCroes/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarnixCroes/subscriptions",
        "organizations_url": "https://api.github.com/users/MarnixCroes/orgs",
        "repos_url": "https://api.github.com/users/MarnixCroes/repos",
        "events_url": "https://api.github.com/users/MarnixCroes/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarnixCroes/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 10680039922,
      "node_id": "RRRE_lADOABII585vjbwZzwAAAAJ8lHny",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10680039922",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-17T15:11:50Z",
      "requested_reviewer": {
        "login": "rot13maxi",
        "id": 115941166,
        "node_id": "U_kgDOBukfLg",
        "avatar_url": "https://avatars.githubusercontent.com/u/115941166?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rot13maxi",
        "html_url": "https://github.com/rot13maxi",
        "followers_url": "https://api.github.com/users/rot13maxi/followers",
        "following_url": "https://api.github.com/users/rot13maxi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rot13maxi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rot13maxi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rot13maxi/subscriptions",
        "organizations_url": "https://api.github.com/users/rot13maxi/orgs",
        "repos_url": "https://api.github.com/users/rot13maxi/repos",
        "events_url": "https://api.github.com/users/rot13maxi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rot13maxi/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10680379907,
      "node_id": "RRE_lADOABII585vjbwZzwAAAAJ8maoD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10680379907",
      "actor": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-17T15:35:41Z",
      "requested_reviewer": {
        "login": "rot13maxi",
        "id": 115941166,
        "node_id": "U_kgDOBukfLg",
        "avatar_url": "https://avatars.githubusercontent.com/u/115941166?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rot13maxi",
        "html_url": "https://github.com/rot13maxi",
        "followers_url": "https://api.github.com/users/rot13maxi/followers",
        "following_url": "https://api.github.com/users/rot13maxi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rot13maxi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rot13maxi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rot13maxi/subscriptions",
        "organizations_url": "https://api.github.com/users/rot13maxi/orgs",
        "repos_url": "https://api.github.com/users/rot13maxi/repos",
        "events_url": "https://api.github.com/users/rot13maxi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rot13maxi/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10680381106,
      "node_id": "RRE_lADOABII585vjbwZzwAAAAJ8ma6y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10680381106",
      "actor": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-17T15:35:44Z",
      "requested_reviewer": {
        "login": "MarnixCroes",
        "id": 93143998,
        "node_id": "U_kgDOBY1Dvg",
        "avatar_url": "https://avatars.githubusercontent.com/u/93143998?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarnixCroes",
        "html_url": "https://github.com/MarnixCroes",
        "followers_url": "https://api.github.com/users/MarnixCroes/followers",
        "following_url": "https://api.github.com/users/MarnixCroes/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarnixCroes/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarnixCroes/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarnixCroes/subscriptions",
        "organizations_url": "https://api.github.com/users/MarnixCroes/orgs",
        "repos_url": "https://api.github.com/users/MarnixCroes/repos",
        "events_url": "https://api.github.com/users/MarnixCroes/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarnixCroes/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "commented",
      "id": 1774661579,
      "node_id": "IC_kwDOABII585pxy_L",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1774661579",
      "actor": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-23T08:17:15Z",
      "updated_at": "2023-10-23T08:17:15Z",
      "author_association": "CONTRIBUTOR",
      "body": "cc @willcl-ark @rot13maxi \r\n\r\ncould you please review the latest version of the doc",
      "user": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#issuecomment-1774661579",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28363"
    },
    {
      "event": "mentioned",
      "id": 10737286684,
      "node_id": "MEE_lADOABII585vjbwZzwAAAAJ__f4c",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10737286684",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-23T08:17:16Z"
    },
    {
      "event": "subscribed",
      "id": 10737286710,
      "node_id": "SE_lADOABII585vjbwZzwAAAAJ__f42",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10737286710",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-23T08:17:16Z"
    },
    {
      "event": "mentioned",
      "id": 10737286736,
      "node_id": "MEE_lADOABII585vjbwZzwAAAAJ__f5Q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10737286736",
      "actor": {
        "login": "rot13maxi",
        "id": 115941166,
        "node_id": "U_kgDOBukfLg",
        "avatar_url": "https://avatars.githubusercontent.com/u/115941166?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rot13maxi",
        "html_url": "https://github.com/rot13maxi",
        "followers_url": "https://api.github.com/users/rot13maxi/followers",
        "following_url": "https://api.github.com/users/rot13maxi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rot13maxi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rot13maxi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rot13maxi/subscriptions",
        "organizations_url": "https://api.github.com/users/rot13maxi/orgs",
        "repos_url": "https://api.github.com/users/rot13maxi/repos",
        "events_url": "https://api.github.com/users/rot13maxi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rot13maxi/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-23T08:17:16Z"
    },
    {
      "event": "subscribed",
      "id": 10737286754,
      "node_id": "SE_lADOABII585vjbwZzwAAAAJ__f5i",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10737286754",
      "actor": {
        "login": "rot13maxi",
        "id": 115941166,
        "node_id": "U_kgDOBukfLg",
        "avatar_url": "https://avatars.githubusercontent.com/u/115941166?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rot13maxi",
        "html_url": "https://github.com/rot13maxi",
        "followers_url": "https://api.github.com/users/rot13maxi/followers",
        "following_url": "https://api.github.com/users/rot13maxi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rot13maxi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rot13maxi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rot13maxi/subscriptions",
        "organizations_url": "https://api.github.com/users/rot13maxi/orgs",
        "repos_url": "https://api.github.com/users/rot13maxi/repos",
        "events_url": "https://api.github.com/users/rot13maxi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rot13maxi/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-23T08:17:16Z"
    },
    {
      "event": "review_request_removed",
      "id": 10737287205,
      "node_id": "RRRE_lADOABII585vjbwZzwAAAAJ__gAl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10737287205",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-23T08:17:19Z",
      "requested_reviewer": {
        "login": "rot13maxi",
        "id": 115941166,
        "node_id": "U_kgDOBukfLg",
        "avatar_url": "https://avatars.githubusercontent.com/u/115941166?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rot13maxi",
        "html_url": "https://github.com/rot13maxi",
        "followers_url": "https://api.github.com/users/rot13maxi/followers",
        "following_url": "https://api.github.com/users/rot13maxi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rot13maxi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rot13maxi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rot13maxi/subscriptions",
        "organizations_url": "https://api.github.com/users/rot13maxi/orgs",
        "repos_url": "https://api.github.com/users/rot13maxi/repos",
        "events_url": "https://api.github.com/users/rot13maxi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rot13maxi/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_request_removed",
      "id": 10737287215,
      "node_id": "RRRE_lADOABII585vjbwZzwAAAAJ__gAv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10737287215",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-23T08:17:19Z",
      "requested_reviewer": {
        "login": "MarnixCroes",
        "id": 93143998,
        "node_id": "U_kgDOBY1Dvg",
        "avatar_url": "https://avatars.githubusercontent.com/u/93143998?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarnixCroes",
        "html_url": "https://github.com/MarnixCroes",
        "followers_url": "https://api.github.com/users/MarnixCroes/followers",
        "following_url": "https://api.github.com/users/MarnixCroes/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarnixCroes/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarnixCroes/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarnixCroes/subscriptions",
        "organizations_url": "https://api.github.com/users/MarnixCroes/orgs",
        "repos_url": "https://api.github.com/users/MarnixCroes/repos",
        "events_url": "https://api.github.com/users/MarnixCroes/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarnixCroes/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 10777119077,
      "node_id": "RRE_lADOABII585vjbwZzwAAAAKCXcll",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10777119077",
      "actor": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-26T09:19:14Z",
      "requested_reviewer": {
        "login": "rot13maxi",
        "id": 115941166,
        "node_id": "U_kgDOBukfLg",
        "avatar_url": "https://avatars.githubusercontent.com/u/115941166?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rot13maxi",
        "html_url": "https://github.com/rot13maxi",
        "followers_url": "https://api.github.com/users/rot13maxi/followers",
        "following_url": "https://api.github.com/users/rot13maxi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rot13maxi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rot13maxi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rot13maxi/subscriptions",
        "organizations_url": "https://api.github.com/users/rot13maxi/orgs",
        "repos_url": "https://api.github.com/users/rot13maxi/repos",
        "events_url": "https://api.github.com/users/rot13maxi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rot13maxi/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      }
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308787943",
      "pull_request_review_id": 1600365996,
      "id": 1308787943,
      "node_id": "PRRC_kwDOABII585OAoTn",
      "diff_hunk": "@@ -0,0 +1,256 @@\n+# Offline Signing Tutorial\n+\n+Welcome to this tutorial on how to sign transactions offline using PSBT (Partially Signed Bitcoin Transactions). This tutorial will guide you through the process of securely signing Bitcoin transactions using an offline wallet and an online watch-only wallet.\n+\n+## Overview\n+In this tutirial we have two hosts [offline] which is",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 6,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "ae02b2911a94f77671a05add6ed5b38f3c6fe97f",
      "in_reply_to_id": null,
      "user": {
        "login": "rot13maxi",
        "id": 115941166,
        "node_id": "U_kgDOBukfLg",
        "avatar_url": "https://avatars.githubusercontent.com/u/115941166?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rot13maxi",
        "html_url": "https://github.com/rot13maxi",
        "followers_url": "https://api.github.com/users/rot13maxi/followers",
        "following_url": "https://api.github.com/users/rot13maxi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rot13maxi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rot13maxi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rot13maxi/subscriptions",
        "organizations_url": "https://api.github.com/users/rot13maxi/orgs",
        "repos_url": "https://api.github.com/users/rot13maxi/repos",
        "events_url": "https://api.github.com/users/rot13maxi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rot13maxi/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\nIn this tutorial we have two hosts: [offline] which is\r\n```",
      "created_at": "2023-08-29T13:03:25Z",
      "updated_at": "2023-08-29T13:23:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1308787943",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308787943"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 6,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308814261",
      "pull_request_review_id": 1600365996,
      "id": 1308814261,
      "node_id": "PRRC_kwDOABII585OAuu1",
      "diff_hunk": "@@ -0,0 +1,256 @@\n+# Offline Signing Tutorial\n+\n+Welcome to this tutorial on how to sign transactions offline using PSBT (Partially Signed Bitcoin Transactions). This tutorial will guide you through the process of securely signing Bitcoin transactions using an offline wallet and an online watch-only wallet.\n+\n+## Overview\n+In this tutirial we have two hosts [offline] which is\n+totally offline and without a copy of the blockchain\n+and [online] which is a regular online node, both\n+running bitcoin 25.0\n+\n+In this example, we are going to generate a key on the offline wallet, then\n+send it 0.0009 BTC with an online wallet, then using the online",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 12,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "ae02b2911a94f77671a05add6ed5b38f3c6fe97f",
      "in_reply_to_id": null,
      "user": {
        "login": "rot13maxi",
        "id": 115941166,
        "node_id": "U_kgDOBukfLg",
        "avatar_url": "https://avatars.githubusercontent.com/u/115941166?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rot13maxi",
        "html_url": "https://github.com/rot13maxi",
        "followers_url": "https://api.github.com/users/rot13maxi/followers",
        "following_url": "https://api.github.com/users/rot13maxi/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rot13maxi/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rot13maxi/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rot13maxi/subscriptions",
        "organizations_url": "https://api.github.com/users/rot13maxi/orgs",
        "repos_url": "https://api.github.com/users/rot13maxi/repos",
        "events_url": "https://api.github.com/users/rot13maxi/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rot13maxi/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "it might be more instructive to have a second wallet that does the initial send and then the second receive, so it's not just a self-send",
      "created_at": "2023-08-29T13:23:37Z",
      "updated_at": "2023-08-29T13:23:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1308814261",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308814261"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 12,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311466732",
      "pull_request_review_id": 1604509929,
      "id": 1311466732,
      "node_id": "PRRC_kwDOABII585OK2Ts",
      "diff_hunk": "@@ -0,0 +1,256 @@\n+# Offline Signing Tutorial\n+\n+Welcome to this tutorial on how to sign transactions offline using PSBT (Partially Signed Bitcoin Transactions). This tutorial will guide you through the process of securely signing Bitcoin transactions using an offline wallet and an online watch-only wallet.\n+\n+## Overview\n+In this tutirial we have two hosts [offline] which is\n+totally offline and without a copy of the blockchain\n+and [online] which is a regular online node, both\n+running bitcoin 25.0\n+\n+In this example, we are going to generate a key on the offline wallet, then\n+send it 0.0009 BTC with an online wallet, then using the online",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 12,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "ae02b2911a94f77671a05add6ed5b38f3c6fe97f",
      "in_reply_to_id": 1308814261,
      "user": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks for the suggestion, I've updated the doc to use separate online sending and receiving wallets",
      "created_at": "2023-08-31T11:05:08Z",
      "updated_at": "2023-08-31T11:05:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1311466732",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311466732"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 12,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315736802",
      "pull_request_review_id": 1610791065,
      "id": 1315736802,
      "node_id": "PRRC_kwDOABII585ObIzi",
      "diff_hunk": "@@ -0,0 +1,259 @@\n+# Offline Signing Tutorial\n+\n+Welcome to this tutorial on how to sign transactions offline using PSBT (Partially Signed Bitcoin Transactions). This tutorial will guide you through the process of securely signing Bitcoin transactions using an offline wallet and an online watch-only wallet.\n+\n+## Overview\n+In this tutorial, we have two hosts: [offline] which is totally offline and without a copy of the blockchain and [online] which is a regular online node, both running Bitcoin 25.0\n+\n+In this example, we are going to generate a key on the offline wallet, and then send it 0.0009 BTC with an online(sending) wallet, then using the online wallet draft a transaction to send 0.0008 BTC to another online(receiving) wallet, then sign that with the offline wallet, and finally announce the signed transaction into the network using the online wallet.",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 8,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "de9a0f7b6cd2b3076ce7a7dac61e3847e0570813",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nits, spacing \r\n\r\n```suggestion\r\nIn this example, we are going to generate a key on the offline wallet, and then send it 0.0009 BTC with an online (sending) wallet, then using the online wallet draft a transaction to send 0.0008 BTC to another online (receiving) wallet, then sign that with the offline wallet, and finally announce the signed transaction into the network using the online wallet.\r\n```",
      "created_at": "2023-09-05T11:03:11Z",
      "updated_at": "2023-09-05T11:24:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1315736802",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315736802"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 8,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315739826",
      "pull_request_review_id": 1610791065,
      "id": 1315739826,
      "node_id": "PRRC_kwDOABII585ObJiy",
      "diff_hunk": "@@ -0,0 +1,259 @@\n+# Offline Signing Tutorial\n+\n+Welcome to this tutorial on how to sign transactions offline using PSBT (Partially Signed Bitcoin Transactions). This tutorial will guide you through the process of securely signing Bitcoin transactions using an offline wallet and an online watch-only wallet.\n+\n+## Overview\n+In this tutorial, we have two hosts: [offline] which is totally offline and without a copy of the blockchain and [online] which is a regular online node, both running Bitcoin 25.0\n+\n+In this example, we are going to generate a key on the offline wallet, and then send it 0.0009 BTC with an online(sending) wallet, then using the online wallet draft a transaction to send 0.0008 BTC to another online(receiving) wallet, then sign that with the offline wallet, and finally announce the signed transaction into the network using the online wallet.\n+\n+> [!NOTE]\n+> Tested using Signet with a connected host machine and an offline docker container (representing the offline wallet) both running Signet, should also work with Regtest and Mainnet\n+\n+\n+## Step 1: Sending money to the offline wallet\n+\n+### Create and Load Funds into the Online Sending Wallet",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 16,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "de9a0f7b6cd2b3076ce7a7dac61e3847e0570813",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think the guide can be written without this online sending wallet. That would make it more practical too. I think starting this way is perhaps good for teaching a user about bitcoin but it I don't think it's necessary in a Bitcoin Core doc. The goal here in my opinion should be as close to real world usage as possible. So my suggestion would be: create the offline wallet, copy the descriptors to the online wallet, and then fund the wallet directly from the faucet.",
      "created_at": "2023-09-05T11:06:20Z",
      "updated_at": "2023-09-05T11:24:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1315739826",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315739826"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 16,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315740820",
      "pull_request_review_id": 1610791065,
      "id": 1315740820,
      "node_id": "PRRC_kwDOABII585ObJyU",
      "diff_hunk": "@@ -0,0 +1,259 @@\n+# Offline Signing Tutorial\n+\n+Welcome to this tutorial on how to sign transactions offline using PSBT (Partially Signed Bitcoin Transactions). This tutorial will guide you through the process of securely signing Bitcoin transactions using an offline wallet and an online watch-only wallet.\n+\n+## Overview\n+In this tutorial, we have two hosts: [offline] which is totally offline and without a copy of the blockchain and [online] which is a regular online node, both running Bitcoin 25.0\n+\n+In this example, we are going to generate a key on the offline wallet, and then send it 0.0009 BTC with an online(sending) wallet, then using the online wallet draft a transaction to send 0.0008 BTC to another online(receiving) wallet, then sign that with the offline wallet, and finally announce the signed transaction into the network using the online wallet.\n+\n+> [!NOTE]\n+> Tested using Signet with a connected host machine and an offline docker container (representing the offline wallet) both running Signet, should also work with Regtest and Mainnet\n+\n+\n+## Step 1: Sending money to the offline wallet\n+\n+### Create and Load Funds into the Online Sending Wallet\n+\n+1. On the online machine, create an online wallet named `online_sending_wallet` and load funds into it.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"online_sending_wallet\"\n+{\n+  \"name\": \"online_sending_wallet\"\n+}\n+```\n+\n+2. Generate an address from the `online_sending_wallet` to receive funds.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"online_sending_wallet\" getnewaddress\n+tb1q5hg8nvt8frlcth57n3s2h3lfqp8he9s0ea23q4\n+```\n+\n+3. Visit a faucet like https://signet.bc-2.jp to load funds into the generated address.\n+\n+\n+### Create and Prepare the Offline Wallet\n+\n+1. On the offline machine, create an offline wallet named `offline_wallet`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"offline_wallet\"\n+{\n+  \"name\": \"offline_wallet\"\n+}\n+```\n+\n+2. Export the offline wallet descriptors to a JSON file named `descriptors.json`. This file will be exported to the online machine to create a watch-only wallet.\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" listdescriptors | jq -r '.descriptors' >> ~/descriptors.json",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 50,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "de9a0f7b6cd2b3076ce7a7dac61e3847e0570813",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "users might not have `jq` installed so you could either mention that it is a requirement or explain what you are doing here (pulling out the \"descriptors\" object from the output)",
      "created_at": "2023-09-05T11:07:31Z",
      "updated_at": "2023-09-05T11:24:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1315740820",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315740820"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 50,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315741812",
      "pull_request_review_id": 1610791065,
      "id": 1315741812,
      "node_id": "PRRC_kwDOABII585ObKB0",
      "diff_hunk": "@@ -0,0 +1,259 @@\n+# Offline Signing Tutorial\n+\n+Welcome to this tutorial on how to sign transactions offline using PSBT (Partially Signed Bitcoin Transactions). This tutorial will guide you through the process of securely signing Bitcoin transactions using an offline wallet and an online watch-only wallet.\n+\n+## Overview\n+In this tutorial, we have two hosts: [offline] which is totally offline and without a copy of the blockchain and [online] which is a regular online node, both running Bitcoin 25.0\n+\n+In this example, we are going to generate a key on the offline wallet, and then send it 0.0009 BTC with an online(sending) wallet, then using the online wallet draft a transaction to send 0.0008 BTC to another online(receiving) wallet, then sign that with the offline wallet, and finally announce the signed transaction into the network using the online wallet.\n+\n+> [!NOTE]\n+> Tested using Signet with a connected host machine and an offline docker container (representing the offline wallet) both running Signet, should also work with Regtest and Mainnet\n+\n+\n+## Step 1: Sending money to the offline wallet\n+\n+### Create and Load Funds into the Online Sending Wallet\n+\n+1. On the online machine, create an online wallet named `online_sending_wallet` and load funds into it.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"online_sending_wallet\"\n+{\n+  \"name\": \"online_sending_wallet\"\n+}\n+```\n+\n+2. Generate an address from the `online_sending_wallet` to receive funds.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"online_sending_wallet\" getnewaddress\n+tb1q5hg8nvt8frlcth57n3s2h3lfqp8he9s0ea23q4\n+```\n+\n+3. Visit a faucet like https://signet.bc-2.jp to load funds into the generated address.\n+\n+\n+### Create and Prepare the Offline Wallet\n+\n+1. On the offline machine, create an offline wallet named `offline_wallet`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"offline_wallet\"\n+{\n+  \"name\": \"offline_wallet\"\n+}\n+```\n+\n+2. Export the offline wallet descriptors to a JSON file named `descriptors.json`. This file will be exported to the online machine to create a watch-only wallet.\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" listdescriptors | jq -r '.descriptors' >> ~/descriptors.json\n+```\n+\n+### Create the online \"watch_only_wallet\"\n+\n+1. On the online machine, create an online watch-only wallet named `watch_only_wallet` without private keys.\n+- The `watch_only_wallet` wallet will be used to track transactions received to the `offline_wallet` and for creating PSBT transactions.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"watch_only_wallet\" disable_private_keys=true blank=true\n+{\n+  \"name\": \"watch_only_wallet\"\n+}\n+```\n+\n+2. Import the `offline_wallet` descriptors to the online `watch_only_wallet` using the `descriptors.json` file created on the offline wallet\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" importdescriptors \"$(cat ~/descriptors.json)\"\n+[\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  }\n+]\n+```\n+\n+### Send Funds to the Offline Wallet\n+\n+1. Generate a new address in the `offline_wallet` to receive funds.",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 99,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "de9a0f7b6cd2b3076ce7a7dac61e3847e0570813",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You should be able to generate receive address from the online wallet now! I feel like one of the best benefits of this setup is that once you create the private keys in the offline wallet, you shouldn't even need to turn that computer on until you are ready to sign something.",
      "created_at": "2023-09-05T11:08:36Z",
      "updated_at": "2023-09-05T11:24:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1315741812",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315741812"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 99,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315745633",
      "pull_request_review_id": 1610791065,
      "id": 1315745633,
      "node_id": "PRRC_kwDOABII585ObK9h",
      "diff_hunk": "@@ -0,0 +1,259 @@\n+# Offline Signing Tutorial\n+\n+Welcome to this tutorial on how to sign transactions offline using PSBT (Partially Signed Bitcoin Transactions). This tutorial will guide you through the process of securely signing Bitcoin transactions using an offline wallet and an online watch-only wallet.\n+\n+## Overview\n+In this tutorial, we have two hosts: [offline] which is totally offline and without a copy of the blockchain and [online] which is a regular online node, both running Bitcoin 25.0\n+\n+In this example, we are going to generate a key on the offline wallet, and then send it 0.0009 BTC with an online(sending) wallet, then using the online wallet draft a transaction to send 0.0008 BTC to another online(receiving) wallet, then sign that with the offline wallet, and finally announce the signed transaction into the network using the online wallet.\n+\n+> [!NOTE]\n+> Tested using Signet with a connected host machine and an offline docker container (representing the offline wallet) both running Signet, should also work with Regtest and Mainnet\n+\n+\n+## Step 1: Sending money to the offline wallet\n+\n+### Create and Load Funds into the Online Sending Wallet\n+\n+1. On the online machine, create an online wallet named `online_sending_wallet` and load funds into it.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"online_sending_wallet\"\n+{\n+  \"name\": \"online_sending_wallet\"\n+}\n+```\n+\n+2. Generate an address from the `online_sending_wallet` to receive funds.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"online_sending_wallet\" getnewaddress\n+tb1q5hg8nvt8frlcth57n3s2h3lfqp8he9s0ea23q4\n+```\n+\n+3. Visit a faucet like https://signet.bc-2.jp to load funds into the generated address.\n+\n+\n+### Create and Prepare the Offline Wallet\n+\n+1. On the offline machine, create an offline wallet named `offline_wallet`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"offline_wallet\"\n+{\n+  \"name\": \"offline_wallet\"\n+}\n+```\n+\n+2. Export the offline wallet descriptors to a JSON file named `descriptors.json`. This file will be exported to the online machine to create a watch-only wallet.\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" listdescriptors | jq -r '.descriptors' >> ~/descriptors.json\n+```\n+\n+### Create the online \"watch_only_wallet\"\n+\n+1. On the online machine, create an online watch-only wallet named `watch_only_wallet` without private keys.\n+- The `watch_only_wallet` wallet will be used to track transactions received to the `offline_wallet` and for creating PSBT transactions.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"watch_only_wallet\" disable_private_keys=true blank=true\n+{\n+  \"name\": \"watch_only_wallet\"\n+}\n+```\n+\n+2. Import the `offline_wallet` descriptors to the online `watch_only_wallet` using the `descriptors.json` file created on the offline wallet\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" importdescriptors \"$(cat ~/descriptors.json)\"\n+[\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  }\n+]\n+```\n+\n+### Send Funds to the Offline Wallet\n+\n+1. Generate a new address in the `offline_wallet` to receive funds.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" getnewaddress\n+tb1q6xp92v5jfllewp9gum9mgqlgsfvefrzrvrc8tv\n+```\n+\n+2. Send funds from the `online_sending_wallet` to the generated `offline_wallet` address.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"online_sending_wallet\" sendtoaddress \"tb1q6xp92v5jfllewp9gum9mgqlgsfvefrzrvrc8tv\" 0.0009\n+0408d91070a7d02f714066b4b1464f2e0040dce467f8a9edf24255a871a2e865\n+```\n+\n+3. Confirm the received funds (to the `offline_wallet`) using the online `watch_only_wallet`.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" listunspent\n+[\n+  {\n+    \"txid\": \"0408d91070a7d02f714066b4b1464f2e0040dce467f8a9edf24255a871a2e865\",\n+    \"vout\": 1,\n+    \"address\": \"tb1q6xp92v5jfllewp9gum9mgqlgsfvefrzrvrc8tv\",\n+    \"label\": \"\",\n+    \"scriptPubKey\": \"0014d1825532924fff9704a8e6cbb403e88259948c43\",\n+    \"amount\": 0.00090000,\n+    \"confirmations\": 1,\n+    \"spendable\": true,\n+    \"solvable\": true,\n+    \"desc\": \"wpkh([413037c1/84h/1h/0h/0/0]02b66303a69d660e98c49320afc28dd9abd8f34c9d59c4ca2148a243fa811ea6c8)#6d9cgsep\",\n+    \"parent_descs\": [\n+      \"wpkh([413037c1/84h/1h/0h]tpubDCjzsbgeDYJj2Xgpb5T5CjQ97muocfoQDkYu68RJvu4sspunz82G7pBfFcWUvCGj4AhQoDkbX24jxXyrREyVUAba6B8qKGkFNPyA8GBQ3kA/0/*)#3us38eqx\"\n+    ],\n+    \"safe\": true\n+  }\n+]\n+```\n+\n+## Step 2: Sending money from the offline wallet\n+\n+### Create an Online Receiving Wallet\n+\n+1. On the online machine, create an online wallet named `online_receiving_wallet`.",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 141,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "de9a0f7b6cd2b3076ce7a7dac61e3847e0570813",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Again I think we can avoid creating yet another wallet here. You could either demonstrate a self-send or get an example destination address from some other source (some faucets have a return address)",
      "created_at": "2023-09-05T11:12:36Z",
      "updated_at": "2023-09-05T11:24:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1315745633",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315745633"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 141,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315747433",
      "pull_request_review_id": 1610791065,
      "id": 1315747433,
      "node_id": "PRRC_kwDOABII585ObLZp",
      "diff_hunk": "@@ -0,0 +1,259 @@\n+# Offline Signing Tutorial\n+\n+Welcome to this tutorial on how to sign transactions offline using PSBT (Partially Signed Bitcoin Transactions). This tutorial will guide you through the process of securely signing Bitcoin transactions using an offline wallet and an online watch-only wallet.\n+\n+## Overview\n+In this tutorial, we have two hosts: [offline] which is totally offline and without a copy of the blockchain and [online] which is a regular online node, both running Bitcoin 25.0\n+\n+In this example, we are going to generate a key on the offline wallet, and then send it 0.0009 BTC with an online(sending) wallet, then using the online wallet draft a transaction to send 0.0008 BTC to another online(receiving) wallet, then sign that with the offline wallet, and finally announce the signed transaction into the network using the online wallet.\n+\n+> [!NOTE]\n+> Tested using Signet with a connected host machine and an offline docker container (representing the offline wallet) both running Signet, should also work with Regtest and Mainnet\n+\n+\n+## Step 1: Sending money to the offline wallet\n+\n+### Create and Load Funds into the Online Sending Wallet\n+\n+1. On the online machine, create an online wallet named `online_sending_wallet` and load funds into it.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"online_sending_wallet\"\n+{\n+  \"name\": \"online_sending_wallet\"\n+}\n+```\n+\n+2. Generate an address from the `online_sending_wallet` to receive funds.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"online_sending_wallet\" getnewaddress\n+tb1q5hg8nvt8frlcth57n3s2h3lfqp8he9s0ea23q4\n+```\n+\n+3. Visit a faucet like https://signet.bc-2.jp to load funds into the generated address.\n+\n+\n+### Create and Prepare the Offline Wallet\n+\n+1. On the offline machine, create an offline wallet named `offline_wallet`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"offline_wallet\"\n+{\n+  \"name\": \"offline_wallet\"\n+}\n+```\n+\n+2. Export the offline wallet descriptors to a JSON file named `descriptors.json`. This file will be exported to the online machine to create a watch-only wallet.\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" listdescriptors | jq -r '.descriptors' >> ~/descriptors.json\n+```\n+\n+### Create the online \"watch_only_wallet\"\n+\n+1. On the online machine, create an online watch-only wallet named `watch_only_wallet` without private keys.\n+- The `watch_only_wallet` wallet will be used to track transactions received to the `offline_wallet` and for creating PSBT transactions.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"watch_only_wallet\" disable_private_keys=true blank=true\n+{\n+  \"name\": \"watch_only_wallet\"\n+}\n+```\n+\n+2. Import the `offline_wallet` descriptors to the online `watch_only_wallet` using the `descriptors.json` file created on the offline wallet\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" importdescriptors \"$(cat ~/descriptors.json)\"\n+[\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  }\n+]\n+```\n+\n+### Send Funds to the Offline Wallet\n+\n+1. Generate a new address in the `offline_wallet` to receive funds.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" getnewaddress\n+tb1q6xp92v5jfllewp9gum9mgqlgsfvefrzrvrc8tv\n+```\n+\n+2. Send funds from the `online_sending_wallet` to the generated `offline_wallet` address.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"online_sending_wallet\" sendtoaddress \"tb1q6xp92v5jfllewp9gum9mgqlgsfvefrzrvrc8tv\" 0.0009\n+0408d91070a7d02f714066b4b1464f2e0040dce467f8a9edf24255a871a2e865\n+```\n+\n+3. Confirm the received funds (to the `offline_wallet`) using the online `watch_only_wallet`.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" listunspent\n+[\n+  {\n+    \"txid\": \"0408d91070a7d02f714066b4b1464f2e0040dce467f8a9edf24255a871a2e865\",\n+    \"vout\": 1,\n+    \"address\": \"tb1q6xp92v5jfllewp9gum9mgqlgsfvefrzrvrc8tv\",\n+    \"label\": \"\",\n+    \"scriptPubKey\": \"0014d1825532924fff9704a8e6cbb403e88259948c43\",\n+    \"amount\": 0.00090000,\n+    \"confirmations\": 1,\n+    \"spendable\": true,\n+    \"solvable\": true,\n+    \"desc\": \"wpkh([413037c1/84h/1h/0h/0/0]02b66303a69d660e98c49320afc28dd9abd8f34c9d59c4ca2148a243fa811ea6c8)#6d9cgsep\",\n+    \"parent_descs\": [\n+      \"wpkh([413037c1/84h/1h/0h]tpubDCjzsbgeDYJj2Xgpb5T5CjQ97muocfoQDkYu68RJvu4sspunz82G7pBfFcWUvCGj4AhQoDkbX24jxXyrREyVUAba6B8qKGkFNPyA8GBQ3kA/0/*)#3us38eqx\"\n+    ],\n+    \"safe\": true\n+  }\n+]\n+```\n+\n+## Step 2: Sending money from the offline wallet\n+\n+### Create an Online Receiving Wallet\n+\n+1. On the online machine, create an online wallet named `online_receiving_wallet`.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"online_receiving_wallet\"\n+{\n+  \"name\": \"online_receiving_wallet\"\n+}\n+```\n+\n+2. Generate a new address on the `online_receiving_wallet` to receive funds from the offline wallet.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"online_receiving_wallet\" getnewaddress\n+tb1q9k5w0nhnhyeh78snpxh0t5t7c3lxdeg3erez32\n+```\n+\n+### Create and Export a PSBT Transaction\n+\n+1. Create a PSBT transaction using the online `watch_only_wallet`, sending funds to the `online_receiving_wallet` address.\n+- Export the psbt transaction to `funded_psbt.txt` for easy portability to the `offline_wallet`\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" walletcreatefundedpsbt '[]' '[{\"tb1q9k5w0nhnhyeh78snpxh0t5t7c3lxdeg3erez32\": 0.0008}]' | jq -r '.psbt' >> ~/funded_psbt.txt",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 163,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "de9a0f7b6cd2b3076ce7a7dac61e3847e0570813",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Might be nice to explain the arguments here (inputs[], outputs[]). And again explain what you're doing with `jq`",
      "created_at": "2023-09-05T11:14:33Z",
      "updated_at": "2023-09-05T11:24:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1315747433",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315747433"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 163,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315749730",
      "pull_request_review_id": 1610791065,
      "id": 1315749730,
      "node_id": "PRRC_kwDOABII585ObL9i",
      "diff_hunk": "@@ -0,0 +1,259 @@\n+# Offline Signing Tutorial\n+\n+Welcome to this tutorial on how to sign transactions offline using PSBT (Partially Signed Bitcoin Transactions). This tutorial will guide you through the process of securely signing Bitcoin transactions using an offline wallet and an online watch-only wallet.\n+\n+## Overview\n+In this tutorial, we have two hosts: [offline] which is totally offline and without a copy of the blockchain and [online] which is a regular online node, both running Bitcoin 25.0\n+\n+In this example, we are going to generate a key on the offline wallet, and then send it 0.0009 BTC with an online(sending) wallet, then using the online wallet draft a transaction to send 0.0008 BTC to another online(receiving) wallet, then sign that with the offline wallet, and finally announce the signed transaction into the network using the online wallet.\n+\n+> [!NOTE]\n+> Tested using Signet with a connected host machine and an offline docker container (representing the offline wallet) both running Signet, should also work with Regtest and Mainnet\n+\n+\n+## Step 1: Sending money to the offline wallet\n+\n+### Create and Load Funds into the Online Sending Wallet\n+\n+1. On the online machine, create an online wallet named `online_sending_wallet` and load funds into it.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"online_sending_wallet\"\n+{\n+  \"name\": \"online_sending_wallet\"\n+}\n+```\n+\n+2. Generate an address from the `online_sending_wallet` to receive funds.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"online_sending_wallet\" getnewaddress\n+tb1q5hg8nvt8frlcth57n3s2h3lfqp8he9s0ea23q4\n+```\n+\n+3. Visit a faucet like https://signet.bc-2.jp to load funds into the generated address.\n+\n+\n+### Create and Prepare the Offline Wallet\n+\n+1. On the offline machine, create an offline wallet named `offline_wallet`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"offline_wallet\"\n+{\n+  \"name\": \"offline_wallet\"\n+}\n+```\n+\n+2. Export the offline wallet descriptors to a JSON file named `descriptors.json`. This file will be exported to the online machine to create a watch-only wallet.\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" listdescriptors | jq -r '.descriptors' >> ~/descriptors.json\n+```\n+\n+### Create the online \"watch_only_wallet\"\n+\n+1. On the online machine, create an online watch-only wallet named `watch_only_wallet` without private keys.\n+- The `watch_only_wallet` wallet will be used to track transactions received to the `offline_wallet` and for creating PSBT transactions.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"watch_only_wallet\" disable_private_keys=true blank=true\n+{\n+  \"name\": \"watch_only_wallet\"\n+}\n+```\n+\n+2. Import the `offline_wallet` descriptors to the online `watch_only_wallet` using the `descriptors.json` file created on the offline wallet",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 65,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "de9a0f7b6cd2b3076ce7a7dac61e3847e0570813",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Might be nice to explain here that multiple descriptors are being imported and the wallets can create a variety of address types. Later when you call `getnewaddress` you can also explain the default address type and how to select another type if desired.",
      "created_at": "2023-09-05T11:16:58Z",
      "updated_at": "2023-09-05T11:24:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1315749730",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315749730"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315753887",
      "pull_request_review_id": 1610791065,
      "id": 1315753887,
      "node_id": "PRRC_kwDOABII585ObM-f",
      "diff_hunk": "@@ -0,0 +1,259 @@\n+# Offline Signing Tutorial\n+\n+Welcome to this tutorial on how to sign transactions offline using PSBT (Partially Signed Bitcoin Transactions). This tutorial will guide you through the process of securely signing Bitcoin transactions using an offline wallet and an online watch-only wallet.\n+\n+## Overview\n+In this tutorial, we have two hosts: [offline] which is totally offline and without a copy of the blockchain and [online] which is a regular online node, both running Bitcoin 25.0\n+\n+In this example, we are going to generate a key on the offline wallet, and then send it 0.0009 BTC with an online(sending) wallet, then using the online wallet draft a transaction to send 0.0008 BTC to another online(receiving) wallet, then sign that with the offline wallet, and finally announce the signed transaction into the network using the online wallet.\n+\n+> [!NOTE]\n+> Tested using Signet with a connected host machine and an offline docker container (representing the offline wallet) both running Signet, should also work with Regtest and Mainnet\n+\n+\n+## Step 1: Sending money to the offline wallet\n+\n+### Create and Load Funds into the Online Sending Wallet\n+\n+1. On the online machine, create an online wallet named `online_sending_wallet` and load funds into it.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"online_sending_wallet\"\n+{\n+  \"name\": \"online_sending_wallet\"\n+}\n+```\n+\n+2. Generate an address from the `online_sending_wallet` to receive funds.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"online_sending_wallet\" getnewaddress\n+tb1q5hg8nvt8frlcth57n3s2h3lfqp8he9s0ea23q4\n+```\n+\n+3. Visit a faucet like https://signet.bc-2.jp to load funds into the generated address.\n+\n+\n+### Create and Prepare the Offline Wallet\n+\n+1. On the offline machine, create an offline wallet named `offline_wallet`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"offline_wallet\"\n+{\n+  \"name\": \"offline_wallet\"\n+}\n+```\n+\n+2. Export the offline wallet descriptors to a JSON file named `descriptors.json`. This file will be exported to the online machine to create a watch-only wallet.\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" listdescriptors | jq -r '.descriptors' >> ~/descriptors.json\n+```\n+\n+### Create the online \"watch_only_wallet\"\n+\n+1. On the online machine, create an online watch-only wallet named `watch_only_wallet` without private keys.\n+- The `watch_only_wallet` wallet will be used to track transactions received to the `offline_wallet` and for creating PSBT transactions.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"watch_only_wallet\" disable_private_keys=true blank=true\n+{\n+  \"name\": \"watch_only_wallet\"\n+}\n+```\n+\n+2. Import the `offline_wallet` descriptors to the online `watch_only_wallet` using the `descriptors.json` file created on the offline wallet\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" importdescriptors \"$(cat ~/descriptors.json)\"\n+[\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  }\n+]\n+```\n+\n+### Send Funds to the Offline Wallet\n+\n+1. Generate a new address in the `offline_wallet` to receive funds.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" getnewaddress\n+tb1q6xp92v5jfllewp9gum9mgqlgsfvefrzrvrc8tv\n+```\n+\n+2. Send funds from the `online_sending_wallet` to the generated `offline_wallet` address.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"online_sending_wallet\" sendtoaddress \"tb1q6xp92v5jfllewp9gum9mgqlgsfvefrzrvrc8tv\" 0.0009\n+0408d91070a7d02f714066b4b1464f2e0040dce467f8a9edf24255a871a2e865\n+```\n+\n+3. Confirm the received funds (to the `offline_wallet`) using the online `watch_only_wallet`.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" listunspent\n+[\n+  {\n+    \"txid\": \"0408d91070a7d02f714066b4b1464f2e0040dce467f8a9edf24255a871a2e865\",\n+    \"vout\": 1,\n+    \"address\": \"tb1q6xp92v5jfllewp9gum9mgqlgsfvefrzrvrc8tv\",\n+    \"label\": \"\",\n+    \"scriptPubKey\": \"0014d1825532924fff9704a8e6cbb403e88259948c43\",\n+    \"amount\": 0.00090000,\n+    \"confirmations\": 1,\n+    \"spendable\": true,\n+    \"solvable\": true,\n+    \"desc\": \"wpkh([413037c1/84h/1h/0h/0/0]02b66303a69d660e98c49320afc28dd9abd8f34c9d59c4ca2148a243fa811ea6c8)#6d9cgsep\",\n+    \"parent_descs\": [\n+      \"wpkh([413037c1/84h/1h/0h]tpubDCjzsbgeDYJj2Xgpb5T5CjQ97muocfoQDkYu68RJvu4sspunz82G7pBfFcWUvCGj4AhQoDkbX24jxXyrREyVUAba6B8qKGkFNPyA8GBQ3kA/0/*)#3us38eqx\"\n+    ],\n+    \"safe\": true\n+  }\n+]\n+```\n+\n+## Step 2: Sending money from the offline wallet\n+\n+### Create an Online Receiving Wallet\n+\n+1. On the online machine, create an online wallet named `online_receiving_wallet`.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"online_receiving_wallet\"\n+{\n+  \"name\": \"online_receiving_wallet\"\n+}\n+```\n+\n+2. Generate a new address on the `online_receiving_wallet` to receive funds from the offline wallet.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"online_receiving_wallet\" getnewaddress\n+tb1q9k5w0nhnhyeh78snpxh0t5t7c3lxdeg3erez32\n+```\n+\n+### Create and Export a PSBT Transaction\n+\n+1. Create a PSBT transaction using the online `watch_only_wallet`, sending funds to the `online_receiving_wallet` address.\n+- Export the psbt transaction to `funded_psbt.txt` for easy portability to the `offline_wallet`\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" walletcreatefundedpsbt '[]' '[{\"tb1q9k5w0nhnhyeh78snpxh0t5t7c3lxdeg3erez32\": 0.0008}]' | jq -r '.psbt' >> ~/funded_psbt.txt\n+[online]$ cat ~/funded_psbt.txt\n+cHNidP8BAHECAAAAAWXoonGoVULy7an4Z+TcQAAuT0axtGZAcS/Qp3AQ2QgEAQAAAAD9////AoA4AQAAAAAAFgAULajnzvO5M38eEwmu9dF+xH5m5RGDJgAAAAAAABYAFMmkmFUvb9NZrPu+VxeaMLiwdbHHAAAAAAABAHECAAAAAefmKOqzoEKbtyEsrdzdiOId8oXPcNM0OBHxeNPfRdHgAAAAAAD9////AiPiDQAAAAAAFgAUZJLFRE3DQ9BMSF62gBYs69jH9A+QXwEAAAAAABYAFNGCVTKST/+XBKjmy7QD6IJZlIxDcGsCAAEBH5BfAQAAAAAAFgAU0YJVMpJP/5cEqObLtAPoglmUjEMiBgK2YwOmnWYOmMSTIK/Cjdmr2PNMnVnEyiFIokP6gR6myBhBMDfBVAAAgAEAAIAAAACAAAAAAAAAAAAAACICAhyFX/Tv0f4V3Rx7cR0zzR4AwWzGRqlZGtpRnnnQFrsrGEEwN8FUAACAAQAAgAAAAIABAAAAAAAAAAA=\n+```\n+\n+### Decode and Analyze the PSBT Transaction\n+\n+1. Decode and analyze the PSBT transaction on the `offline_wallet` using the `funded_psbt.txt` file.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet decodepsbt $(cat ~/funded_psbt.txt)\n+{\n+    ...\n+}\n+[offline]$ ./src/bitcoin-cli -signet analyzepsbt $(cat ~/funded_psbt.txt)\n+{\n+  \"inputs\": [\n+    {\n+      \"has_utxo\": true,\n+      \"is_final\": false,\n+      \"next\": \"signer\",\n+      \"missing\": {\n+        \"signatures\": [\n+          \"d1825532924fff9704a8e6cbb403e88259948c43\"\n+        ]\n+      }\n+    }\n+  ],\n+  \"estimated_vsize\": 141,\n+  \"estimated_feerate\": 0.00001000,\n+  \"fee\": 0.00000141,\n+  \"next\": \"signer\"\n+}\n+```\n+\n+### Process and Sign the PSBT Transaction\n+\n+1. Process and sign the PSBT transaction on the `offline_wallet`.\n+\n+```sh\n+[offline]$ processed_psbt=$(./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" walletprocesspsbt $(cat ~/funded_psbt.txt) | jq -r .psbt)",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 203,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "de9a0f7b6cd2b3076ce7a7dac61e3847e0570813",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hm I haven't noticed this before but `walletprocesspsbt` can finalize (default is to finalize if possible) and so if this command returned hex in addition to base64, we could omit the `finalizepsbt` step... right? Might be another good follow-up PR ;-)",
      "created_at": "2023-09-05T11:20:54Z",
      "updated_at": "2023-09-05T11:24:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1315753887",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315753887"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 203,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315853462",
      "pull_request_review_id": 1610984503,
      "id": 1315853462,
      "node_id": "PRRC_kwDOABII585OblSW",
      "diff_hunk": "@@ -0,0 +1,259 @@\n+# Offline Signing Tutorial\n+\n+Welcome to this tutorial on how to sign transactions offline using PSBT (Partially Signed Bitcoin Transactions). This tutorial will guide you through the process of securely signing Bitcoin transactions using an offline wallet and an online watch-only wallet.\n+\n+## Overview\n+In this tutorial, we have two hosts: [offline] which is totally offline and without a copy of the blockchain and [online] which is a regular online node, both running Bitcoin 25.0\n+\n+In this example, we are going to generate a key on the offline wallet, and then send it 0.0009 BTC with an online(sending) wallet, then using the online wallet draft a transaction to send 0.0008 BTC to another online(receiving) wallet, then sign that with the offline wallet, and finally announce the signed transaction into the network using the online wallet.\n+\n+> [!NOTE]\n+> Tested using Signet with a connected host machine and an offline docker container (representing the offline wallet) both running Signet, should also work with Regtest and Mainnet\n+\n+\n+## Step 1: Sending money to the offline wallet\n+\n+### Create and Load Funds into the Online Sending Wallet",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 16,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "de9a0f7b6cd2b3076ce7a7dac61e3847e0570813",
      "in_reply_to_id": 1315739826,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I second this; I think we only need a single wallet in the guide, where the offline Bitcoin Core has the private keys available, and the hot wallet is watch-only.",
      "created_at": "2023-09-05T12:52:13Z",
      "updated_at": "2023-09-05T13:02:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1315853462",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315853462"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 16,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315856133",
      "pull_request_review_id": 1610984503,
      "id": 1315856133,
      "node_id": "PRRC_kwDOABII585Obl8F",
      "diff_hunk": "@@ -0,0 +1,259 @@\n+# Offline Signing Tutorial\n+\n+Welcome to this tutorial on how to sign transactions offline using PSBT (Partially Signed Bitcoin Transactions). This tutorial will guide you through the process of securely signing Bitcoin transactions using an offline wallet and an online watch-only wallet.\n+\n+## Overview\n+In this tutorial, we have two hosts: [offline] which is totally offline and without a copy of the blockchain and [online] which is a regular online node, both running Bitcoin 25.0\n+\n+In this example, we are going to generate a key on the offline wallet, and then send it 0.0009 BTC with an online(sending) wallet, then using the online wallet draft a transaction to send 0.0008 BTC to another online(receiving) wallet, then sign that with the offline wallet, and finally announce the signed transaction into the network using the online wallet.\n+\n+> [!NOTE]\n+> Tested using Signet with a connected host machine and an offline docker container (representing the offline wallet) both running Signet, should also work with Regtest and Mainnet\n+\n+\n+## Step 1: Sending money to the offline wallet\n+\n+### Create and Load Funds into the Online Sending Wallet\n+\n+1. On the online machine, create an online wallet named `online_sending_wallet` and load funds into it.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"online_sending_wallet\"\n+{\n+  \"name\": \"online_sending_wallet\"\n+}\n+```\n+\n+2. Generate an address from the `online_sending_wallet` to receive funds.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"online_sending_wallet\" getnewaddress\n+tb1q5hg8nvt8frlcth57n3s2h3lfqp8he9s0ea23q4\n+```\n+\n+3. Visit a faucet like https://signet.bc-2.jp to load funds into the generated address.\n+\n+\n+### Create and Prepare the Offline Wallet\n+\n+1. On the offline machine, create an offline wallet named `offline_wallet`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"offline_wallet\"\n+{\n+  \"name\": \"offline_wallet\"\n+}\n+```\n+\n+2. Export the offline wallet descriptors to a JSON file named `descriptors.json`. This file will be exported to the online machine to create a watch-only wallet.\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" listdescriptors | jq -r '.descriptors' >> ~/descriptors.json\n+```\n+\n+### Create the online \"watch_only_wallet\"\n+\n+1. On the online machine, create an online watch-only wallet named `watch_only_wallet` without private keys.",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 55,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "de9a0f7b6cd2b3076ce7a7dac61e3847e0570813",
      "in_reply_to_id": null,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You could mention what the `blank=True` is doing that you've used below.",
      "created_at": "2023-09-05T12:54:24Z",
      "updated_at": "2023-09-05T13:02:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1315856133",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315856133"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315857271",
      "pull_request_review_id": 1610984503,
      "id": 1315857271,
      "node_id": "PRRC_kwDOABII585ObmN3",
      "diff_hunk": "@@ -0,0 +1,259 @@\n+# Offline Signing Tutorial\n+\n+Welcome to this tutorial on how to sign transactions offline using PSBT (Partially Signed Bitcoin Transactions). This tutorial will guide you through the process of securely signing Bitcoin transactions using an offline wallet and an online watch-only wallet.\n+\n+## Overview\n+In this tutorial, we have two hosts: [offline] which is totally offline and without a copy of the blockchain and [online] which is a regular online node, both running Bitcoin 25.0\n+\n+In this example, we are going to generate a key on the offline wallet, and then send it 0.0009 BTC with an online(sending) wallet, then using the online wallet draft a transaction to send 0.0008 BTC to another online(receiving) wallet, then sign that with the offline wallet, and finally announce the signed transaction into the network using the online wallet.\n+\n+> [!NOTE]\n+> Tested using Signet with a connected host machine and an offline docker container (representing the offline wallet) both running Signet, should also work with Regtest and Mainnet\n+\n+\n+## Step 1: Sending money to the offline wallet\n+\n+### Create and Load Funds into the Online Sending Wallet\n+\n+1. On the online machine, create an online wallet named `online_sending_wallet` and load funds into it.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"online_sending_wallet\"\n+{\n+  \"name\": \"online_sending_wallet\"\n+}\n+```\n+\n+2. Generate an address from the `online_sending_wallet` to receive funds.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"online_sending_wallet\" getnewaddress\n+tb1q5hg8nvt8frlcth57n3s2h3lfqp8he9s0ea23q4\n+```\n+\n+3. Visit a faucet like https://signet.bc-2.jp to load funds into the generated address.\n+\n+\n+### Create and Prepare the Offline Wallet\n+\n+1. On the offline machine, create an offline wallet named `offline_wallet`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"offline_wallet\"\n+{\n+  \"name\": \"offline_wallet\"\n+}\n+```\n+\n+2. Export the offline wallet descriptors to a JSON file named `descriptors.json`. This file will be exported to the online machine to create a watch-only wallet.\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" listdescriptors | jq -r '.descriptors' >> ~/descriptors.json\n+```\n+\n+### Create the online \"watch_only_wallet\"\n+\n+1. On the online machine, create an online watch-only wallet named `watch_only_wallet` without private keys.\n+- The `watch_only_wallet` wallet will be used to track transactions received to the `offline_wallet` and for creating PSBT transactions.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"watch_only_wallet\" disable_private_keys=true blank=true\n+{\n+  \"name\": \"watch_only_wallet\"\n+}\n+```\n+\n+2. Import the `offline_wallet` descriptors to the online `watch_only_wallet` using the `descriptors.json` file created on the offline wallet\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" importdescriptors \"$(cat ~/descriptors.json)\"\n+[\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  }\n+]\n+```\n+\n+### Send Funds to the Offline Wallet\n+\n+1. Generate a new address in the `offline_wallet` to receive funds.",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 99,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "de9a0f7b6cd2b3076ce7a7dac61e3847e0570813",
      "in_reply_to_id": 1315741812,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yep, this is probably the second biggest benefit of such a setup, and the biggest convenience factor!",
      "created_at": "2023-09-05T12:55:18Z",
      "updated_at": "2023-09-05T13:02:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1315857271",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315857271"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 99,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315859698",
      "pull_request_review_id": 1610984503,
      "id": 1315859698,
      "node_id": "PRRC_kwDOABII585Obmzy",
      "diff_hunk": "@@ -0,0 +1,259 @@\n+# Offline Signing Tutorial\n+\n+Welcome to this tutorial on how to sign transactions offline using PSBT (Partially Signed Bitcoin Transactions). This tutorial will guide you through the process of securely signing Bitcoin transactions using an offline wallet and an online watch-only wallet.\n+\n+## Overview\n+In this tutorial, we have two hosts: [offline] which is totally offline and without a copy of the blockchain and [online] which is a regular online node, both running Bitcoin 25.0\n+\n+In this example, we are going to generate a key on the offline wallet, and then send it 0.0009 BTC with an online(sending) wallet, then using the online wallet draft a transaction to send 0.0008 BTC to another online(receiving) wallet, then sign that with the offline wallet, and finally announce the signed transaction into the network using the online wallet.\n+\n+> [!NOTE]\n+> Tested using Signet with a connected host machine and an offline docker container (representing the offline wallet) both running Signet, should also work with Regtest and Mainnet\n+\n+\n+## Step 1: Sending money to the offline wallet\n+\n+### Create and Load Funds into the Online Sending Wallet\n+\n+1. On the online machine, create an online wallet named `online_sending_wallet` and load funds into it.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"online_sending_wallet\"\n+{\n+  \"name\": \"online_sending_wallet\"\n+}\n+```\n+\n+2. Generate an address from the `online_sending_wallet` to receive funds.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"online_sending_wallet\" getnewaddress\n+tb1q5hg8nvt8frlcth57n3s2h3lfqp8he9s0ea23q4\n+```\n+\n+3. Visit a faucet like https://signet.bc-2.jp to load funds into the generated address.\n+\n+\n+### Create and Prepare the Offline Wallet\n+\n+1. On the offline machine, create an offline wallet named `offline_wallet`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"offline_wallet\"\n+{\n+  \"name\": \"offline_wallet\"\n+}\n+```\n+\n+2. Export the offline wallet descriptors to a JSON file named `descriptors.json`. This file will be exported to the online machine to create a watch-only wallet.\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" listdescriptors | jq -r '.descriptors' >> ~/descriptors.json\n+```\n+\n+### Create the online \"watch_only_wallet\"\n+\n+1. On the online machine, create an online watch-only wallet named `watch_only_wallet` without private keys.\n+- The `watch_only_wallet` wallet will be used to track transactions received to the `offline_wallet` and for creating PSBT transactions.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"watch_only_wallet\" disable_private_keys=true blank=true\n+{\n+  \"name\": \"watch_only_wallet\"\n+}\n+```\n+\n+2. Import the `offline_wallet` descriptors to the online `watch_only_wallet` using the `descriptors.json` file created on the offline wallet\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" importdescriptors \"$(cat ~/descriptors.json)\"\n+[\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  }\n+]\n+```\n+\n+### Send Funds to the Offline Wallet\n+\n+1. Generate a new address in the `offline_wallet` to receive funds.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" getnewaddress\n+tb1q6xp92v5jfllewp9gum9mgqlgsfvefrzrvrc8tv\n+```\n+\n+2. Send funds from the `online_sending_wallet` to the generated `offline_wallet` address.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"online_sending_wallet\" sendtoaddress \"tb1q6xp92v5jfllewp9gum9mgqlgsfvefrzrvrc8tv\" 0.0009\n+0408d91070a7d02f714066b4b1464f2e0040dce467f8a9edf24255a871a2e865\n+```\n+\n+3. Confirm the received funds (to the `offline_wallet`) using the online `watch_only_wallet`.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" listunspent\n+[\n+  {\n+    \"txid\": \"0408d91070a7d02f714066b4b1464f2e0040dce467f8a9edf24255a871a2e865\",\n+    \"vout\": 1,\n+    \"address\": \"tb1q6xp92v5jfllewp9gum9mgqlgsfvefrzrvrc8tv\",\n+    \"label\": \"\",\n+    \"scriptPubKey\": \"0014d1825532924fff9704a8e6cbb403e88259948c43\",\n+    \"amount\": 0.00090000,\n+    \"confirmations\": 1,\n+    \"spendable\": true,\n+    \"solvable\": true,\n+    \"desc\": \"wpkh([413037c1/84h/1h/0h/0/0]02b66303a69d660e98c49320afc28dd9abd8f34c9d59c4ca2148a243fa811ea6c8)#6d9cgsep\",\n+    \"parent_descs\": [\n+      \"wpkh([413037c1/84h/1h/0h]tpubDCjzsbgeDYJj2Xgpb5T5CjQ97muocfoQDkYu68RJvu4sspunz82G7pBfFcWUvCGj4AhQoDkbX24jxXyrREyVUAba6B8qKGkFNPyA8GBQ3kA/0/*)#3us38eqx\"\n+    ],\n+    \"safe\": true\n+  }\n+]\n+```\n+\n+## Step 2: Sending money from the offline wallet\n+\n+### Create an Online Receiving Wallet\n+\n+1. On the online machine, create an online wallet named `online_receiving_wallet`.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"online_receiving_wallet\"\n+{\n+  \"name\": \"online_receiving_wallet\"\n+}\n+```\n+\n+2. Generate a new address on the `online_receiving_wallet` to receive funds from the offline wallet.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"online_receiving_wallet\" getnewaddress\n+tb1q9k5w0nhnhyeh78snpxh0t5t7c3lxdeg3erez32\n+```\n+\n+### Create and Export a PSBT Transaction\n+\n+1. Create a PSBT transaction using the online `watch_only_wallet`, sending funds to the `online_receiving_wallet` address.\n+- Export the psbt transaction to `funded_psbt.txt` for easy portability to the `offline_wallet`\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" walletcreatefundedpsbt '[]' '[{\"tb1q9k5w0nhnhyeh78snpxh0t5t7c3lxdeg3erez32\": 0.0008}]' | jq -r '.psbt' >> ~/funded_psbt.txt",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 163,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "de9a0f7b6cd2b3076ce7a7dac61e3847e0570813",
      "in_reply_to_id": 1315747433,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It can (sometimes) be nice to pipe things through `tee` so people can see what's going on, but it also introduces another \"magical\" tool, which may end up being more confusing...",
      "created_at": "2023-09-05T12:57:12Z",
      "updated_at": "2023-09-05T13:02:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1315859698",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315859698"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 163,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315862206",
      "pull_request_review_id": 1610984503,
      "id": 1315862206,
      "node_id": "PRRC_kwDOABII585Obna-",
      "diff_hunk": "@@ -0,0 +1,259 @@\n+# Offline Signing Tutorial\n+\n+Welcome to this tutorial on how to sign transactions offline using PSBT (Partially Signed Bitcoin Transactions). This tutorial will guide you through the process of securely signing Bitcoin transactions using an offline wallet and an online watch-only wallet.\n+\n+## Overview\n+In this tutorial, we have two hosts: [offline] which is totally offline and without a copy of the blockchain and [online] which is a regular online node, both running Bitcoin 25.0\n+\n+In this example, we are going to generate a key on the offline wallet, and then send it 0.0009 BTC with an online(sending) wallet, then using the online wallet draft a transaction to send 0.0008 BTC to another online(receiving) wallet, then sign that with the offline wallet, and finally announce the signed transaction into the network using the online wallet.\n+\n+> [!NOTE]\n+> Tested using Signet with a connected host machine and an offline docker container (representing the offline wallet) both running Signet, should also work with Regtest and Mainnet\n+\n+\n+## Step 1: Sending money to the offline wallet\n+\n+### Create and Load Funds into the Online Sending Wallet\n+\n+1. On the online machine, create an online wallet named `online_sending_wallet` and load funds into it.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"online_sending_wallet\"\n+{\n+  \"name\": \"online_sending_wallet\"\n+}\n+```\n+\n+2. Generate an address from the `online_sending_wallet` to receive funds.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"online_sending_wallet\" getnewaddress\n+tb1q5hg8nvt8frlcth57n3s2h3lfqp8he9s0ea23q4\n+```\n+\n+3. Visit a faucet like https://signet.bc-2.jp to load funds into the generated address.\n+\n+\n+### Create and Prepare the Offline Wallet\n+\n+1. On the offline machine, create an offline wallet named `offline_wallet`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"offline_wallet\"\n+{\n+  \"name\": \"offline_wallet\"\n+}\n+```\n+\n+2. Export the offline wallet descriptors to a JSON file named `descriptors.json`. This file will be exported to the online machine to create a watch-only wallet.\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" listdescriptors | jq -r '.descriptors' >> ~/descriptors.json\n+```\n+\n+### Create the online \"watch_only_wallet\"\n+\n+1. On the online machine, create an online watch-only wallet named `watch_only_wallet` without private keys.\n+- The `watch_only_wallet` wallet will be used to track transactions received to the `offline_wallet` and for creating PSBT transactions.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"watch_only_wallet\" disable_private_keys=true blank=true\n+{\n+  \"name\": \"watch_only_wallet\"\n+}\n+```\n+\n+2. Import the `offline_wallet` descriptors to the online `watch_only_wallet` using the `descriptors.json` file created on the offline wallet\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" importdescriptors \"$(cat ~/descriptors.json)\"\n+[\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  }\n+]\n+```\n+\n+### Send Funds to the Offline Wallet\n+\n+1. Generate a new address in the `offline_wallet` to receive funds.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" getnewaddress\n+tb1q6xp92v5jfllewp9gum9mgqlgsfvefrzrvrc8tv\n+```\n+\n+2. Send funds from the `online_sending_wallet` to the generated `offline_wallet` address.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"online_sending_wallet\" sendtoaddress \"tb1q6xp92v5jfllewp9gum9mgqlgsfvefrzrvrc8tv\" 0.0009\n+0408d91070a7d02f714066b4b1464f2e0040dce467f8a9edf24255a871a2e865\n+```\n+\n+3. Confirm the received funds (to the `offline_wallet`) using the online `watch_only_wallet`.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" listunspent\n+[\n+  {\n+    \"txid\": \"0408d91070a7d02f714066b4b1464f2e0040dce467f8a9edf24255a871a2e865\",\n+    \"vout\": 1,\n+    \"address\": \"tb1q6xp92v5jfllewp9gum9mgqlgsfvefrzrvrc8tv\",\n+    \"label\": \"\",\n+    \"scriptPubKey\": \"0014d1825532924fff9704a8e6cbb403e88259948c43\",\n+    \"amount\": 0.00090000,\n+    \"confirmations\": 1,\n+    \"spendable\": true,\n+    \"solvable\": true,\n+    \"desc\": \"wpkh([413037c1/84h/1h/0h/0/0]02b66303a69d660e98c49320afc28dd9abd8f34c9d59c4ca2148a243fa811ea6c8)#6d9cgsep\",\n+    \"parent_descs\": [\n+      \"wpkh([413037c1/84h/1h/0h]tpubDCjzsbgeDYJj2Xgpb5T5CjQ97muocfoQDkYu68RJvu4sspunz82G7pBfFcWUvCGj4AhQoDkbX24jxXyrREyVUAba6B8qKGkFNPyA8GBQ3kA/0/*)#3us38eqx\"\n+    ],\n+    \"safe\": true\n+  }\n+]\n+```\n+\n+## Step 2: Sending money from the offline wallet\n+\n+### Create an Online Receiving Wallet\n+\n+1. On the online machine, create an online wallet named `online_receiving_wallet`.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"online_receiving_wallet\"\n+{\n+  \"name\": \"online_receiving_wallet\"\n+}\n+```\n+\n+2. Generate a new address on the `online_receiving_wallet` to receive funds from the offline wallet.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"online_receiving_wallet\" getnewaddress\n+tb1q9k5w0nhnhyeh78snpxh0t5t7c3lxdeg3erez32\n+```\n+\n+### Create and Export a PSBT Transaction\n+\n+1. Create a PSBT transaction using the online `watch_only_wallet`, sending funds to the `online_receiving_wallet` address.\n+- Export the psbt transaction to `funded_psbt.txt` for easy portability to the `offline_wallet`",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 160,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "de9a0f7b6cd2b3076ce7a7dac61e3847e0570813",
      "in_reply_to_id": null,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "it may seem imple, but is it worth mentioning that the transaction at this stage is a file which needs to be physically moved from one machine to another with e.g. a USB drive?",
      "created_at": "2023-09-05T12:59:12Z",
      "updated_at": "2023-09-05T13:02:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1315862206",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315862206"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 118,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315863216",
      "pull_request_review_id": 1610984503,
      "id": 1315863216,
      "node_id": "PRRC_kwDOABII585Obnqw",
      "diff_hunk": "@@ -0,0 +1,259 @@\n+# Offline Signing Tutorial\n+\n+Welcome to this tutorial on how to sign transactions offline using PSBT (Partially Signed Bitcoin Transactions). This tutorial will guide you through the process of securely signing Bitcoin transactions using an offline wallet and an online watch-only wallet.\n+\n+## Overview\n+In this tutorial, we have two hosts: [offline] which is totally offline and without a copy of the blockchain and [online] which is a regular online node, both running Bitcoin 25.0\n+\n+In this example, we are going to generate a key on the offline wallet, and then send it 0.0009 BTC with an online(sending) wallet, then using the online wallet draft a transaction to send 0.0008 BTC to another online(receiving) wallet, then sign that with the offline wallet, and finally announce the signed transaction into the network using the online wallet.\n+\n+> [!NOTE]\n+> Tested using Signet with a connected host machine and an offline docker container (representing the offline wallet) both running Signet, should also work with Regtest and Mainnet\n+\n+\n+## Step 1: Sending money to the offline wallet\n+\n+### Create and Load Funds into the Online Sending Wallet\n+\n+1. On the online machine, create an online wallet named `online_sending_wallet` and load funds into it.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"online_sending_wallet\"\n+{\n+  \"name\": \"online_sending_wallet\"\n+}\n+```\n+\n+2. Generate an address from the `online_sending_wallet` to receive funds.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"online_sending_wallet\" getnewaddress\n+tb1q5hg8nvt8frlcth57n3s2h3lfqp8he9s0ea23q4\n+```\n+\n+3. Visit a faucet like https://signet.bc-2.jp to load funds into the generated address.\n+\n+\n+### Create and Prepare the Offline Wallet\n+\n+1. On the offline machine, create an offline wallet named `offline_wallet`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"offline_wallet\"\n+{\n+  \"name\": \"offline_wallet\"\n+}\n+```\n+\n+2. Export the offline wallet descriptors to a JSON file named `descriptors.json`. This file will be exported to the online machine to create a watch-only wallet.\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" listdescriptors | jq -r '.descriptors' >> ~/descriptors.json\n+```\n+\n+### Create the online \"watch_only_wallet\"\n+\n+1. On the online machine, create an online watch-only wallet named `watch_only_wallet` without private keys.\n+- The `watch_only_wallet` wallet will be used to track transactions received to the `offline_wallet` and for creating PSBT transactions.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"watch_only_wallet\" disable_private_keys=true blank=true\n+{\n+  \"name\": \"watch_only_wallet\"\n+}\n+```\n+\n+2. Import the `offline_wallet` descriptors to the online `watch_only_wallet` using the `descriptors.json` file created on the offline wallet\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" importdescriptors \"$(cat ~/descriptors.json)\"\n+[\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  }\n+]\n+```\n+\n+### Send Funds to the Offline Wallet\n+\n+1. Generate a new address in the `offline_wallet` to receive funds.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" getnewaddress\n+tb1q6xp92v5jfllewp9gum9mgqlgsfvefrzrvrc8tv\n+```\n+\n+2. Send funds from the `online_sending_wallet` to the generated `offline_wallet` address.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"online_sending_wallet\" sendtoaddress \"tb1q6xp92v5jfllewp9gum9mgqlgsfvefrzrvrc8tv\" 0.0009\n+0408d91070a7d02f714066b4b1464f2e0040dce467f8a9edf24255a871a2e865\n+```\n+\n+3. Confirm the received funds (to the `offline_wallet`) using the online `watch_only_wallet`.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" listunspent\n+[\n+  {\n+    \"txid\": \"0408d91070a7d02f714066b4b1464f2e0040dce467f8a9edf24255a871a2e865\",\n+    \"vout\": 1,\n+    \"address\": \"tb1q6xp92v5jfllewp9gum9mgqlgsfvefrzrvrc8tv\",\n+    \"label\": \"\",\n+    \"scriptPubKey\": \"0014d1825532924fff9704a8e6cbb403e88259948c43\",\n+    \"amount\": 0.00090000,\n+    \"confirmations\": 1,\n+    \"spendable\": true,\n+    \"solvable\": true,\n+    \"desc\": \"wpkh([413037c1/84h/1h/0h/0/0]02b66303a69d660e98c49320afc28dd9abd8f34c9d59c4ca2148a243fa811ea6c8)#6d9cgsep\",\n+    \"parent_descs\": [\n+      \"wpkh([413037c1/84h/1h/0h]tpubDCjzsbgeDYJj2Xgpb5T5CjQ97muocfoQDkYu68RJvu4sspunz82G7pBfFcWUvCGj4AhQoDkbX24jxXyrREyVUAba6B8qKGkFNPyA8GBQ3kA/0/*)#3us38eqx\"\n+    ],\n+    \"safe\": true\n+  }\n+]\n+```\n+\n+## Step 2: Sending money from the offline wallet\n+\n+### Create an Online Receiving Wallet\n+\n+1. On the online machine, create an online wallet named `online_receiving_wallet`.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"online_receiving_wallet\"\n+{\n+  \"name\": \"online_receiving_wallet\"\n+}\n+```\n+\n+2. Generate a new address on the `online_receiving_wallet` to receive funds from the offline wallet.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"online_receiving_wallet\" getnewaddress\n+tb1q9k5w0nhnhyeh78snpxh0t5t7c3lxdeg3erez32\n+```\n+\n+### Create and Export a PSBT Transaction\n+\n+1. Create a PSBT transaction using the online `watch_only_wallet`, sending funds to the `online_receiving_wallet` address.\n+- Export the psbt transaction to `funded_psbt.txt` for easy portability to the `offline_wallet`\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" walletcreatefundedpsbt '[]' '[{\"tb1q9k5w0nhnhyeh78snpxh0t5t7c3lxdeg3erez32\": 0.0008}]' | jq -r '.psbt' >> ~/funded_psbt.txt\n+[online]$ cat ~/funded_psbt.txt\n+cHNidP8BAHECAAAAAWXoonGoVULy7an4Z+TcQAAuT0axtGZAcS/Qp3AQ2QgEAQAAAAD9////AoA4AQAAAAAAFgAULajnzvO5M38eEwmu9dF+xH5m5RGDJgAAAAAAABYAFMmkmFUvb9NZrPu+VxeaMLiwdbHHAAAAAAABAHECAAAAAefmKOqzoEKbtyEsrdzdiOId8oXPcNM0OBHxeNPfRdHgAAAAAAD9////AiPiDQAAAAAAFgAUZJLFRE3DQ9BMSF62gBYs69jH9A+QXwEAAAAAABYAFNGCVTKST/+XBKjmy7QD6IJZlIxDcGsCAAEBH5BfAQAAAAAAFgAU0YJVMpJP/5cEqObLtAPoglmUjEMiBgK2YwOmnWYOmMSTIK/Cjdmr2PNMnVnEyiFIokP6gR6myBhBMDfBVAAAgAEAAIAAAACAAAAAAAAAAAAAACICAhyFX/Tv0f4V3Rx7cR0zzR4AwWzGRqlZGtpRnnnQFrsrGEEwN8FUAACAAQAAgAAAAIABAAAAAAAAAAA=\n+```\n+\n+### Decode and Analyze the PSBT Transaction\n+\n+1. Decode and analyze the PSBT transaction on the `offline_wallet` using the `funded_psbt.txt` file.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet decodepsbt $(cat ~/funded_psbt.txt)\n+{\n+    ...\n+}\n+[offline]$ ./src/bitcoin-cli -signet analyzepsbt $(cat ~/funded_psbt.txt)\n+{\n+  \"inputs\": [\n+    {\n+      \"has_utxo\": true,\n+      \"is_final\": false,\n+      \"next\": \"signer\",\n+      \"missing\": {\n+        \"signatures\": [\n+          \"d1825532924fff9704a8e6cbb403e88259948c43\"\n+        ]\n+      }\n+    }\n+  ],\n+  \"estimated_vsize\": 141,\n+  \"estimated_feerate\": 0.00001000,\n+  \"fee\": 0.00000141,\n+  \"next\": \"signer\"\n+}\n+```\n+\n+### Process and Sign the PSBT Transaction\n+\n+1. Process and sign the PSBT transaction on the `offline_wallet`.\n+\n+```sh\n+[offline]$ processed_psbt=$(./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" walletprocesspsbt $(cat ~/funded_psbt.txt) | jq -r .psbt)\n+[offline]$ echo $processed_psbt\n+cHNidP8BAHECAAAAAWXoonGoVULy7an4Z+TcQAAuT0axtGZAcS/Qp3AQ2QgEAQAAAAD9////AoA4AQAAAAAAFgAULajnzvO5M38eEwmu9dF+xH5m5RGDJgAAAAAAABYAFMmkmFUvb9NZrPu+VxeaMLiwdbHHAAAAAAABAHECAAAAAefmKOqzoEKbtyEsrdzdiOId8oXPcNM0OBHxeNPfRdHgAAAAAAD9////AiPiDQAAAAAAFgAUZJLFRE3DQ9BMSF62gBYs69jH9A+QXwEAAAAAABYAFNGCVTKST/+XBKjmy7QD6IJZlIxDcGsCAAEBH5BfAQAAAAAAFgAU0YJVMpJP/5cEqObLtAPoglmUjEMBCGsCRzBEAiBlnlRPN9G0iSPfid/3HGPZlsCyMxg8WPhKdz2OYwbloAIgdly1oxQDMgzkmrZtb6CXpwsAoTGr+oMlJLzIQK8lH2cBIQK2YwOmnWYOmMSTIK/Cjdmr2PNMnVnEyiFIokP6gR6myAAAIgICHIVf9O/R/hXdHHtxHTPNHgDBbMZGqVka2lGeedAWuysYQTA3wVQAAIABAACAAAAAgAEAAAAAAAAAAA==\n+```\n+\n+### Finalize the PSBT Transaction\n+\n+1. Finalize the PSBT transaction on the `offline_wallet` and save the final PSBT to the `final_psbt.txt` file, to be exported and broadcasted by the online wallet\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" finalizepsbt $processed_psbt | jq -r .hex >> ~/final_psbt.txt\n+[offline]$ cat ~/final_psbt.txt\n+0200000000010165e8a271a85542f2eda9f867e4dc40002e4f46b1b46640712fd0a77010d908040100000000fdffffff0280380100000000001600142da8e7cef3b9337f1e1309aef5d17ec47e66e5118326000000000000160014c9a498552f6fd359acfbbe57179a30b8b075b1c7024730440220659e544f37d1b48923df89dff71c63d996c0b233183c58f84a773d8e6306e5a00220765cb5a31403320ce49ab66d6fa097a70b00a131abfa832524bcc840af251f67012102b66303a69d660e98c49320afc28dd9abd8f34c9d59c4ca2148a243fa811ea6c800000000\n+```\n+\n+### Broadcast the Finalized PSBT Transaction\n+1. Broadcast the signed and finalized PSBT transaction (on the `final_psbt.txt` file) using the online wallet",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 219,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "de9a0f7b6cd2b3076ce7a7dac61e3847e0570813",
      "in_reply_to_id": null,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If you do choose to include a comment about moving the transaction (file) between hosts, perhaps mention here that you need to move it back...\r\n\r\nYour path below might also want to be something like `/path/to/final_psbt.txt` so that it's super clear that users have to know where they've put it, then reference it themselves.",
      "created_at": "2023-09-05T12:59:56Z",
      "updated_at": "2023-09-05T13:02:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1315863216",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315863216"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 174,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315865063",
      "pull_request_review_id": 1610984503,
      "id": 1315865063,
      "node_id": "PRRC_kwDOABII585OboHn",
      "diff_hunk": "@@ -0,0 +1,259 @@\n+# Offline Signing Tutorial\n+\n+Welcome to this tutorial on how to sign transactions offline using PSBT (Partially Signed Bitcoin Transactions). This tutorial will guide you through the process of securely signing Bitcoin transactions using an offline wallet and an online watch-only wallet.\n+\n+## Overview\n+In this tutorial, we have two hosts: [offline] which is totally offline and without a copy of the blockchain and [online] which is a regular online node, both running Bitcoin 25.0\n+\n+In this example, we are going to generate a key on the offline wallet, and then send it 0.0009 BTC with an online(sending) wallet, then using the online wallet draft a transaction to send 0.0008 BTC to another online(receiving) wallet, then sign that with the offline wallet, and finally announce the signed transaction into the network using the online wallet.\n+\n+> [!NOTE]\n+> Tested using Signet with a connected host machine and an offline docker container (representing the offline wallet) both running Signet, should also work with Regtest and Mainnet\n+\n+\n+## Step 1: Sending money to the offline wallet\n+\n+### Create and Load Funds into the Online Sending Wallet\n+\n+1. On the online machine, create an online wallet named `online_sending_wallet` and load funds into it.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"online_sending_wallet\"\n+{\n+  \"name\": \"online_sending_wallet\"\n+}\n+```\n+\n+2. Generate an address from the `online_sending_wallet` to receive funds.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"online_sending_wallet\" getnewaddress\n+tb1q5hg8nvt8frlcth57n3s2h3lfqp8he9s0ea23q4\n+```\n+\n+3. Visit a faucet like https://signet.bc-2.jp to load funds into the generated address.\n+\n+\n+### Create and Prepare the Offline Wallet\n+\n+1. On the offline machine, create an offline wallet named `offline_wallet`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"offline_wallet\"\n+{\n+  \"name\": \"offline_wallet\"\n+}\n+```\n+\n+2. Export the offline wallet descriptors to a JSON file named `descriptors.json`. This file will be exported to the online machine to create a watch-only wallet.\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" listdescriptors | jq -r '.descriptors' >> ~/descriptors.json\n+```\n+\n+### Create the online \"watch_only_wallet\"\n+\n+1. On the online machine, create an online watch-only wallet named `watch_only_wallet` without private keys.\n+- The `watch_only_wallet` wallet will be used to track transactions received to the `offline_wallet` and for creating PSBT transactions.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"watch_only_wallet\" disable_private_keys=true blank=true\n+{\n+  \"name\": \"watch_only_wallet\"\n+}\n+```\n+\n+2. Import the `offline_wallet` descriptors to the online `watch_only_wallet` using the `descriptors.json` file created on the offline wallet\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" importdescriptors \"$(cat ~/descriptors.json)\"\n+[\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  }\n+]\n+```\n+\n+### Send Funds to the Offline Wallet\n+\n+1. Generate a new address in the `offline_wallet` to receive funds.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" getnewaddress\n+tb1q6xp92v5jfllewp9gum9mgqlgsfvefrzrvrc8tv\n+```\n+\n+2. Send funds from the `online_sending_wallet` to the generated `offline_wallet` address.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"online_sending_wallet\" sendtoaddress \"tb1q6xp92v5jfllewp9gum9mgqlgsfvefrzrvrc8tv\" 0.0009\n+0408d91070a7d02f714066b4b1464f2e0040dce467f8a9edf24255a871a2e865\n+```\n+\n+3. Confirm the received funds (to the `offline_wallet`) using the online `watch_only_wallet`.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" listunspent\n+[\n+  {\n+    \"txid\": \"0408d91070a7d02f714066b4b1464f2e0040dce467f8a9edf24255a871a2e865\",\n+    \"vout\": 1,\n+    \"address\": \"tb1q6xp92v5jfllewp9gum9mgqlgsfvefrzrvrc8tv\",\n+    \"label\": \"\",\n+    \"scriptPubKey\": \"0014d1825532924fff9704a8e6cbb403e88259948c43\",\n+    \"amount\": 0.00090000,\n+    \"confirmations\": 1,\n+    \"spendable\": true,\n+    \"solvable\": true,\n+    \"desc\": \"wpkh([413037c1/84h/1h/0h/0/0]02b66303a69d660e98c49320afc28dd9abd8f34c9d59c4ca2148a243fa811ea6c8)#6d9cgsep\",\n+    \"parent_descs\": [\n+      \"wpkh([413037c1/84h/1h/0h]tpubDCjzsbgeDYJj2Xgpb5T5CjQ97muocfoQDkYu68RJvu4sspunz82G7pBfFcWUvCGj4AhQoDkbX24jxXyrREyVUAba6B8qKGkFNPyA8GBQ3kA/0/*)#3us38eqx\"\n+    ],\n+    \"safe\": true\n+  }\n+]\n+```\n+\n+## Step 2: Sending money from the offline wallet\n+\n+### Create an Online Receiving Wallet\n+\n+1. On the online machine, create an online wallet named `online_receiving_wallet`.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"online_receiving_wallet\"\n+{\n+  \"name\": \"online_receiving_wallet\"\n+}\n+```\n+\n+2. Generate a new address on the `online_receiving_wallet` to receive funds from the offline wallet.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"online_receiving_wallet\" getnewaddress\n+tb1q9k5w0nhnhyeh78snpxh0t5t7c3lxdeg3erez32\n+```\n+\n+### Create and Export a PSBT Transaction\n+\n+1. Create a PSBT transaction using the online `watch_only_wallet`, sending funds to the `online_receiving_wallet` address.\n+- Export the psbt transaction to `funded_psbt.txt` for easy portability to the `offline_wallet`\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" walletcreatefundedpsbt '[]' '[{\"tb1q9k5w0nhnhyeh78snpxh0t5t7c3lxdeg3erez32\": 0.0008}]' | jq -r '.psbt' >> ~/funded_psbt.txt\n+[online]$ cat ~/funded_psbt.txt\n+cHNidP8BAHECAAAAAWXoonGoVULy7an4Z+TcQAAuT0axtGZAcS/Qp3AQ2QgEAQAAAAD9////AoA4AQAAAAAAFgAULajnzvO5M38eEwmu9dF+xH5m5RGDJgAAAAAAABYAFMmkmFUvb9NZrPu+VxeaMLiwdbHHAAAAAAABAHECAAAAAefmKOqzoEKbtyEsrdzdiOId8oXPcNM0OBHxeNPfRdHgAAAAAAD9////AiPiDQAAAAAAFgAUZJLFRE3DQ9BMSF62gBYs69jH9A+QXwEAAAAAABYAFNGCVTKST/+XBKjmy7QD6IJZlIxDcGsCAAEBH5BfAQAAAAAAFgAU0YJVMpJP/5cEqObLtAPoglmUjEMiBgK2YwOmnWYOmMSTIK/Cjdmr2PNMnVnEyiFIokP6gR6myBhBMDfBVAAAgAEAAIAAAACAAAAAAAAAAAAAACICAhyFX/Tv0f4V3Rx7cR0zzR4AwWzGRqlZGtpRnnnQFrsrGEEwN8FUAACAAQAAgAAAAIABAAAAAAAAAAA=\n+```\n+\n+### Decode and Analyze the PSBT Transaction\n+\n+1. Decode and analyze the PSBT transaction on the `offline_wallet` using the `funded_psbt.txt` file.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet decodepsbt $(cat ~/funded_psbt.txt)\n+{\n+    ...\n+}\n+[offline]$ ./src/bitcoin-cli -signet analyzepsbt $(cat ~/funded_psbt.txt)\n+{\n+  \"inputs\": [\n+    {\n+      \"has_utxo\": true,\n+      \"is_final\": false,\n+      \"next\": \"signer\",\n+      \"missing\": {\n+        \"signatures\": [\n+          \"d1825532924fff9704a8e6cbb403e88259948c43\"\n+        ]\n+      }\n+    }\n+  ],\n+  \"estimated_vsize\": 141,\n+  \"estimated_feerate\": 0.00001000,\n+  \"fee\": 0.00000141,\n+  \"next\": \"signer\"\n+}\n+```\n+\n+### Process and Sign the PSBT Transaction\n+\n+1. Process and sign the PSBT transaction on the `offline_wallet`.\n+\n+```sh\n+[offline]$ processed_psbt=$(./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" walletprocesspsbt $(cat ~/funded_psbt.txt) | jq -r .psbt)\n+[offline]$ echo $processed_psbt\n+cHNidP8BAHECAAAAAWXoonGoVULy7an4Z+TcQAAuT0axtGZAcS/Qp3AQ2QgEAQAAAAD9////AoA4AQAAAAAAFgAULajnzvO5M38eEwmu9dF+xH5m5RGDJgAAAAAAABYAFMmkmFUvb9NZrPu+VxeaMLiwdbHHAAAAAAABAHECAAAAAefmKOqzoEKbtyEsrdzdiOId8oXPcNM0OBHxeNPfRdHgAAAAAAD9////AiPiDQAAAAAAFgAUZJLFRE3DQ9BMSF62gBYs69jH9A+QXwEAAAAAABYAFNGCVTKST/+XBKjmy7QD6IJZlIxDcGsCAAEBH5BfAQAAAAAAFgAU0YJVMpJP/5cEqObLtAPoglmUjEMBCGsCRzBEAiBlnlRPN9G0iSPfid/3HGPZlsCyMxg8WPhKdz2OYwbloAIgdly1oxQDMgzkmrZtb6CXpwsAoTGr+oMlJLzIQK8lH2cBIQK2YwOmnWYOmMSTIK/Cjdmr2PNMnVnEyiFIokP6gR6myAAAIgICHIVf9O/R/hXdHHtxHTPNHgDBbMZGqVka2lGeedAWuysYQTA3wVQAAIABAACAAAAAgAEAAAAAAAAAAA==\n+```\n+\n+### Finalize the PSBT Transaction\n+\n+1. Finalize the PSBT transaction on the `offline_wallet` and save the final PSBT to the `final_psbt.txt` file, to be exported and broadcasted by the online wallet\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" finalizepsbt $processed_psbt | jq -r .hex >> ~/final_psbt.txt\n+[offline]$ cat ~/final_psbt.txt\n+0200000000010165e8a271a85542f2eda9f867e4dc40002e4f46b1b46640712fd0a77010d908040100000000fdffffff0280380100000000001600142da8e7cef3b9337f1e1309aef5d17ec47e66e5118326000000000000160014c9a498552f6fd359acfbbe57179a30b8b075b1c7024730440220659e544f37d1b48923df89dff71c63d996c0b233183c58f84a773d8e6306e5a00220765cb5a31403320ce49ab66d6fa097a70b00a131abfa832524bcc840af251f67012102b66303a69d660e98c49320afc28dd9abd8f34c9d59c4ca2148a243fa811ea6c800000000\n+```\n+\n+### Broadcast the Finalized PSBT Transaction\n+1. Broadcast the signed and finalized PSBT transaction (on the `final_psbt.txt` file) using the online wallet\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet sendrawtransaction $(cat ~/final_psbt.txt)\n+e79497b11e3561cfd6349213ed71578d68411821d079855d56d419ba1db71170\n+```\n+\n+### Confirm Wallet Balances\n+\n+1. Confirm the updated balance of the `online_receiving_wallet`.",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 228,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "de9a0f7b6cd2b3076ce7a7dac61e3847e0570813",
      "in_reply_to_id": null,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Would be able to drop this whole step if you eliminated the online_recieving_wallet.",
      "created_at": "2023-09-05T13:01:30Z",
      "updated_at": "2023-09-05T13:02:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1315865063",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315865063"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 228,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315868783",
      "pull_request_review_id": 1611009183,
      "id": 1315868783,
      "node_id": "PRRC_kwDOABII585ObpBv",
      "diff_hunk": "@@ -0,0 +1,259 @@\n+# Offline Signing Tutorial\n+\n+Welcome to this tutorial on how to sign transactions offline using PSBT (Partially Signed Bitcoin Transactions). This tutorial will guide you through the process of securely signing Bitcoin transactions using an offline wallet and an online watch-only wallet.\n+\n+## Overview\n+In this tutorial, we have two hosts: [offline] which is totally offline and without a copy of the blockchain and [online] which is a regular online node, both running Bitcoin 25.0\n+\n+In this example, we are going to generate a key on the offline wallet, and then send it 0.0009 BTC with an online(sending) wallet, then using the online wallet draft a transaction to send 0.0008 BTC to another online(receiving) wallet, then sign that with the offline wallet, and finally announce the signed transaction into the network using the online wallet.\n+\n+> [!NOTE]\n+> Tested using Signet with a connected host machine and an offline docker container (representing the offline wallet) both running Signet, should also work with Regtest and Mainnet\n+\n+\n+## Step 1: Sending money to the offline wallet\n+\n+### Create and Load Funds into the Online Sending Wallet\n+\n+1. On the online machine, create an online wallet named `online_sending_wallet` and load funds into it.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"online_sending_wallet\"\n+{\n+  \"name\": \"online_sending_wallet\"\n+}\n+```\n+\n+2. Generate an address from the `online_sending_wallet` to receive funds.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"online_sending_wallet\" getnewaddress\n+tb1q5hg8nvt8frlcth57n3s2h3lfqp8he9s0ea23q4\n+```\n+\n+3. Visit a faucet like https://signet.bc-2.jp to load funds into the generated address.\n+\n+\n+### Create and Prepare the Offline Wallet\n+\n+1. On the offline machine, create an offline wallet named `offline_wallet`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"offline_wallet\"\n+{\n+  \"name\": \"offline_wallet\"\n+}\n+```\n+\n+2. Export the offline wallet descriptors to a JSON file named `descriptors.json`. This file will be exported to the online machine to create a watch-only wallet.\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" listdescriptors | jq -r '.descriptors' >> ~/descriptors.json\n+```\n+\n+### Create the online \"watch_only_wallet\"\n+\n+1. On the online machine, create an online watch-only wallet named `watch_only_wallet` without private keys.\n+- The `watch_only_wallet` wallet will be used to track transactions received to the `offline_wallet` and for creating PSBT transactions.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"watch_only_wallet\" disable_private_keys=true blank=true\n+{\n+  \"name\": \"watch_only_wallet\"\n+}\n+```\n+\n+2. Import the `offline_wallet` descriptors to the online `watch_only_wallet` using the `descriptors.json` file created on the offline wallet\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" importdescriptors \"$(cat ~/descriptors.json)\"\n+[\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  }\n+]\n+```\n+\n+### Send Funds to the Offline Wallet\n+\n+1. Generate a new address in the `offline_wallet` to receive funds.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" getnewaddress\n+tb1q6xp92v5jfllewp9gum9mgqlgsfvefrzrvrc8tv\n+```\n+\n+2. Send funds from the `online_sending_wallet` to the generated `offline_wallet` address.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"online_sending_wallet\" sendtoaddress \"tb1q6xp92v5jfllewp9gum9mgqlgsfvefrzrvrc8tv\" 0.0009\n+0408d91070a7d02f714066b4b1464f2e0040dce467f8a9edf24255a871a2e865\n+```\n+\n+3. Confirm the received funds (to the `offline_wallet`) using the online `watch_only_wallet`.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" listunspent\n+[\n+  {\n+    \"txid\": \"0408d91070a7d02f714066b4b1464f2e0040dce467f8a9edf24255a871a2e865\",\n+    \"vout\": 1,\n+    \"address\": \"tb1q6xp92v5jfllewp9gum9mgqlgsfvefrzrvrc8tv\",\n+    \"label\": \"\",\n+    \"scriptPubKey\": \"0014d1825532924fff9704a8e6cbb403e88259948c43\",\n+    \"amount\": 0.00090000,\n+    \"confirmations\": 1,\n+    \"spendable\": true,\n+    \"solvable\": true,\n+    \"desc\": \"wpkh([413037c1/84h/1h/0h/0/0]02b66303a69d660e98c49320afc28dd9abd8f34c9d59c4ca2148a243fa811ea6c8)#6d9cgsep\",\n+    \"parent_descs\": [\n+      \"wpkh([413037c1/84h/1h/0h]tpubDCjzsbgeDYJj2Xgpb5T5CjQ97muocfoQDkYu68RJvu4sspunz82G7pBfFcWUvCGj4AhQoDkbX24jxXyrREyVUAba6B8qKGkFNPyA8GBQ3kA/0/*)#3us38eqx\"\n+    ],\n+    \"safe\": true\n+  }\n+]\n+```\n+\n+## Step 2: Sending money from the offline wallet\n+\n+### Create an Online Receiving Wallet\n+\n+1. On the online machine, create an online wallet named `online_receiving_wallet`.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"online_receiving_wallet\"\n+{\n+  \"name\": \"online_receiving_wallet\"\n+}\n+```\n+\n+2. Generate a new address on the `online_receiving_wallet` to receive funds from the offline wallet.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"online_receiving_wallet\" getnewaddress\n+tb1q9k5w0nhnhyeh78snpxh0t5t7c3lxdeg3erez32\n+```\n+\n+### Create and Export a PSBT Transaction\n+\n+1. Create a PSBT transaction using the online `watch_only_wallet`, sending funds to the `online_receiving_wallet` address.\n+- Export the psbt transaction to `funded_psbt.txt` for easy portability to the `offline_wallet`\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" walletcreatefundedpsbt '[]' '[{\"tb1q9k5w0nhnhyeh78snpxh0t5t7c3lxdeg3erez32\": 0.0008}]' | jq -r '.psbt' >> ~/funded_psbt.txt\n+[online]$ cat ~/funded_psbt.txt\n+cHNidP8BAHECAAAAAWXoonGoVULy7an4Z+TcQAAuT0axtGZAcS/Qp3AQ2QgEAQAAAAD9////AoA4AQAAAAAAFgAULajnzvO5M38eEwmu9dF+xH5m5RGDJgAAAAAAABYAFMmkmFUvb9NZrPu+VxeaMLiwdbHHAAAAAAABAHECAAAAAefmKOqzoEKbtyEsrdzdiOId8oXPcNM0OBHxeNPfRdHgAAAAAAD9////AiPiDQAAAAAAFgAUZJLFRE3DQ9BMSF62gBYs69jH9A+QXwEAAAAAABYAFNGCVTKST/+XBKjmy7QD6IJZlIxDcGsCAAEBH5BfAQAAAAAAFgAU0YJVMpJP/5cEqObLtAPoglmUjEMiBgK2YwOmnWYOmMSTIK/Cjdmr2PNMnVnEyiFIokP6gR6myBhBMDfBVAAAgAEAAIAAAACAAAAAAAAAAAAAACICAhyFX/Tv0f4V3Rx7cR0zzR4AwWzGRqlZGtpRnnnQFrsrGEEwN8FUAACAAQAAgAAAAIABAAAAAAAAAAA=\n+```\n+\n+### Decode and Analyze the PSBT Transaction\n+\n+1. Decode and analyze the PSBT transaction on the `offline_wallet` using the `funded_psbt.txt` file.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet decodepsbt $(cat ~/funded_psbt.txt)\n+{\n+    ...\n+}\n+[offline]$ ./src/bitcoin-cli -signet analyzepsbt $(cat ~/funded_psbt.txt)\n+{\n+  \"inputs\": [\n+    {\n+      \"has_utxo\": true,\n+      \"is_final\": false,\n+      \"next\": \"signer\",\n+      \"missing\": {\n+        \"signatures\": [\n+          \"d1825532924fff9704a8e6cbb403e88259948c43\"\n+        ]\n+      }\n+    }\n+  ],\n+  \"estimated_vsize\": 141,\n+  \"estimated_feerate\": 0.00001000,\n+  \"fee\": 0.00000141,\n+  \"next\": \"signer\"\n+}\n+```\n+\n+### Process and Sign the PSBT Transaction\n+\n+1. Process and sign the PSBT transaction on the `offline_wallet`.\n+\n+```sh\n+[offline]$ processed_psbt=$(./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" walletprocesspsbt $(cat ~/funded_psbt.txt) | jq -r .psbt)",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 203,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "de9a0f7b6cd2b3076ce7a7dac61e3847e0570813",
      "in_reply_to_id": 1315753887,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I wrote the PR: https://github.com/bitcoin/bitcoin/pull/28414\r\n\r\nIf this gets merged, we can update your doc ;-)",
      "created_at": "2023-09-05T13:04:25Z",
      "updated_at": "2023-09-05T13:04:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1315868783",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1315868783"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 203,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1323312512",
      "pull_request_review_id": 1622704849,
      "id": 1323312512,
      "node_id": "PRRC_kwDOABII585O4CWA",
      "diff_hunk": "@@ -0,0 +1,201 @@\n+# Offline Signing Tutorial\n+\n+Welcome to this tutorial on how to sign transactions offline using PSBT (Partially Signed Bitcoin Transactions). This tutorial will guide you through the process of securely signing Bitcoin transactions using an offline wallet and an online watch-only wallet.\n+\n+## Overview\n+In this tutorial, we have two hosts: [offline] which is totally offline and without a copy of the blockchain and [online] which is a regular online node, both running Bitcoin 25.0\n+\n+In this example, we are going to create an `offline_wallet` on the [offline] host. We will then create a `watch_only_wallet` on the [online] host using descriptors imported from the `offline_wallet` and load funds to the wallet. we'll create a PSBT transaction using the  `watch_only_wallet`, sign it with the `offline_wallet` then broadcast the transaction using the [online] host\n+\n+### Requirements\n+- [jq](https://jqlang.github.io/jq/) installation - This tutorial uses jq to process JSON.\n+\n+> [!NOTE]\n+> Tested using Signet with a connected host machine and an offline docker container (representing the offline wallet) both running Signet, should also work with Regtest and Mainnet\n+\n+### Create and Prepare the `offline_wallet`\n+\n+1. On the offline machine, create an offline wallet named `offline_wallet`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"offline_wallet\"\n+{\n+  \"name\": \"offline_wallet\"\n+}\n+```\n+\n+2. Export the offline wallet descriptors to a JSON file named `descriptors.json`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" listdescriptors | jq -r '.descriptors' >> /path/to/descriptors.json\n+```\n+\n+> [!NOTE]\n+> The `descriptors.json` file will be exported to the online machine (e.g. using a USB) to create a watch-only wallet. (This is an easier way to export the descriptors compared to manual export)\n+\n+### Create the online `watch_only_wallet`\n+\n+1. On the online machine, create an online watch-only wallet named `watch_only_wallet` without private keys (disable_private_keys=true) and should be blank with no keys or HD seed (blank=true).\n+- The `watch_only_wallet` wallet will be used to track transactions received to the `offline_wallet` and for creating PSBT transactions.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"watch_only_wallet\" disable_private_keys=true blank=true\n+{\n+  \"name\": \"watch_only_wallet\"\n+}\n+```\n+\n+2. Import the `offline_wallet` descriptors to the online `watch_only_wallet` using the `descriptors.json` file created on the offline wallet\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" importdescriptors \"$(cat /path/to/descriptors.json)\"\n+[\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  }\n+]\n+```\n+> [!NOTE]\n+> Importing the multiple descriptors from the `offline_wallet` provides the ability to generate a variety of address types by the [online] `watch_only_wallets`\n+\n+### Load Funds to the `offline_wallet`\n+1. Generate an address for the `offline_wallet` using the `watch_only_wallet` to load funds.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" getnewaddress\n+tb1qtu5qgc6ddhmqm5yqjvhg83qgk2t4ewajg0h6yh\n+```\n+\n+2. Visit a faucet like https://signet.bc-2.jp to load funds into the generated address.\n+\n+3. Confirm the received funds (to the offline_wallet) using the online watch_only_wallet.\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" listunspent\n+[\n+  {\n+    \"txid\": \"0f3953dfc3eb8e753cd1633151837c5b9953992914ff32b7de08c47f1f29c762\",\n+    \"vout\": 1,\n+    \"address\": \"tb1qtu5qgc6ddhmqm5yqjvhg83qgk2t4ewajg0h6yh\",\n+    \"label\": \"\",\n+    \"scriptPubKey\": \"00145f2804634d6df60dd080932e83c408b2975cbbb2\",\n+    \"amount\": 0.01000000,\n+    \"confirmations\": 4,\n+    \"spendable\": true,\n+    \"solvable\": true,\n+    \"desc\": \"wpkh([306c734f/84h/1h/0h/0/0]025932ccee7590158f7e08bb36290d135d30a0b045163da896e1cd7645ec4223a9)#xytvyr4a\",\n+    \"parent_descs\": [\n+      \"wpkh([306c734f/84h/1h/0h]tpubDCJnY92ib4Zu3qd6wrBXEjG436tQdA2tDiJU2iSJYjkNS1darssPWKaBfojhjUF5vMLBcxbN2r93pmFMz2zyTEZuNx9JDo9rWqoHhATW3Uz/0/*)#7mh08dkg\"\n+    ],\n+    \"safe\": true\n+  }\n+]\n+```\n+\n+### Create and Export a PSBT Transaction\n+\n+1. Create a PSBT transaction using the online `watch_only_wallet`, sending funds to the `online_receiving_wallet` address. (`walletcreatefundedpsbt inputs[], outputs[address: amount]`)\n+- Export the psbt transaction to `funded_psbt.txt` for easy portability to the `offline_wallet`\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" walletcreatefundedpsbt '[]' '[{\"tb1q9k5w0nhnhyeh78snpxh0t5t7c3lxdeg3erez32\": 0.009}]' | jq -r '.psbt' >> /path/to/funded_psbt.txt\n+[online]$ cat /path/to/funded_psbt.txt\n+cHNidP8BAHECAAAAAWLHKR9/xAjetzL/FCmZU5lbfINRMWPRPHWO68PfUzkPAQAAAAD9////AoA4AQAAAAAAFgAULajnzvO5M38eEwmu9dF+xH5m5RGs0g0AAAAAABYAFMaT0f/Wp2DCZzL6dkJ3GhWj4Y9vAAAAAAABAHECAAAAAY+dRPEBrGopkw4ugSzS9npzJDEIrE/bq1XXI0KbYnYrAQAAAAD+////ArKaXgAAAAAAFgAUwEc4LdoxSjbWo/2Ue+HS+QjwfiBAQg8AAAAAABYAFF8oBGNNbfYN0ICTLoPECLKXXLuyYW8CAAEBH0BCDwAAAAAAFgAUXygEY01t9g3QgJMug8QIspdcu7IiBgJZMszudZAVj34IuzYpDRNdMKCwRRY9qJbhzXZF7EIjqRgwbHNPVAAAgAEAAIAAAACAAAAAAAAAAAAAACICA7BlBnyAR4F2UkKuSX9MFhYCsn6j//z9i7lHDm1O0CU0GDBsc09UAACAAQAAgAAAAIABAAAAAAAAAAA=\n+```\n+\n+### Decode and Analyze the PSBT Transaction\n+\n+1. Decode and analyze the PSBT transaction on the `offline_wallet` using the `funded_psbt.txt` file.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet decodepsbt $(cat /path/to/funded_psbt.txt)\n+{\n+    ...\n+}\n+[offline]$ ./src/bitcoin-cli -signet analyzepsbt $(cat /path/to/funded_psbt.txt)\n+{\n+  \"inputs\": [\n+    {\n+      \"has_utxo\": true,\n+      \"is_final\": false,\n+      \"next\": \"signer\",\n+      \"missing\": {\n+        \"signatures\": [\n+          \"5f2804634d6df60dd080932e83c408b2975cbbb2\"\n+        ]\n+      }\n+    }\n+  ],\n+  \"estimated_vsize\": 141,\n+  \"estimated_feerate\": 0.00100000,\n+  \"fee\": 0.00014100,\n+  \"next\": \"signer\"\n+}\n+```\n+\n+### Process and Sign the PSBT Transaction\n+\n+1. Process and sign the PSBT transaction on the `offline_wallet`.\n+\n+```sh\n+[offline]$ processed_psbt=$(./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" walletprocesspsbt $(cat /path/to/funded_psbt.txt) | jq -r .psbt)\n+[offline]$ echo $processed_psbt\n+cHNidP8BAHECAAAAAWLHKR9/xAjetzL/FCmZU5lbfINRMWPRPHWO68PfUzkPAQAAAAD9////AoxPAQAAAAAAFgAU3aD0J/Z7/sqfDnJS5FjuObgsfgaguw0AAAAAABYAFC2o587zuTN/HhMJrvXRfsR+ZuURAAAAAAABAHECAAAAAY+dRPEBrGopkw4ugSzS9npzJDEIrE/bq1XXI0KbYnYrAQAAAAD+////ArKaXgAAAAAAFgAUwEc4LdoxSjbWo/2Ue+HS+QjwfiBAQg8AAAAAABYAFF8oBGNNbfYN0ICTLoPECLKXXLuyYW8CAAEBH0BCDwAAAAAAFgAUXygEY01t9g3QgJMug8QIspdcu7IBCGsCRzBEAiANJF7pLfi+AYPJj7Jry8R0MHzNt2SHcnNkS0xOs1kTggIgbEz3h/EggoqBK0cEOQJoPiTVCmAhbjsv4PEEvigG5U8BIQJZMszudZAVj34IuzYpDRNdMKCwRRY9qJbhzXZF7EIjqQAiAgIAr8a1DCryJj031qO8iImwTASQGphBh6t/G3xoxfHVQRgwbHNPVAAAgAEAAIAAAACAAQAAAAIAAAAAAA==\n+```\n+\n+### Finalize the PSBT Transaction",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 166,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "dcf45577f489486578b5e887e38c41a26d59dc1c",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "https://github.com/bitcoin/bitcoin/pull/28414 merged! This can be rebased ;-) calling `finalizepsbt` could be optional",
      "created_at": "2023-09-12T16:45:33Z",
      "updated_at": "2023-09-12T16:45:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1323312512",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1323312512"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 166,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327668801",
      "pull_request_review_id": 1629543185,
      "id": 1327668801,
      "node_id": "PRRC_kwDOABII585PIp5B",
      "diff_hunk": "@@ -0,0 +1,193 @@\n+# Offline Signing Tutorial\n+\n+Welcome to this tutorial on how to sign transactions offline using PSBT (Partially Signed Bitcoin Transactions). This tutorial will guide you through the process of securely signing Bitcoin transactions using an offline wallet and an online watch-only wallet.\n+\n+## Overview\n+In this tutorial, we have two hosts: [offline] which is totally offline and without a copy of the blockchain and [online] which is a regular online node, both running Bitcoin 25.0\n+\n+In this example, we are going to create an `offline_wallet` on the [offline] host. We will then create a `watch_only_wallet` on the [online] host using descriptors imported from the `offline_wallet` and load funds to the wallet. we'll create a PSBT transaction using the  `watch_only_wallet`, sign it with the `offline_wallet` then broadcast the transaction using the [online] host\n+\n+### Requirements\n+- [jq](https://jqlang.github.io/jq/) installation - This tutorial uses jq to process JSON.\n+\n+> [!NOTE]\n+> Tested using Signet with a connected host machine and an offline docker container (representing the offline wallet) both running Signet, should also work with Regtest and Mainnet\n+\n+### Create and Prepare the `offline_wallet`\n+\n+1. On the offline machine, create an offline wallet named `offline_wallet`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"offline_wallet\"\n+{\n+  \"name\": \"offline_wallet\"\n+}\n+```\n+\n+2. Export the offline wallet descriptors to a JSON file named `descriptors.json`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" listdescriptors | jq -r '.descriptors' >> /path/to/descriptors.json\n+```\n+\n+> [!NOTE]\n+> The `descriptors.json` file will be exported to the online machine (e.g. using a USB) to create a watch-only wallet. (This is an easier way to export the descriptors compared to manual export)\n+\n+### Create the online `watch_only_wallet`\n+\n+1. On the online machine, create an online watch-only wallet named `watch_only_wallet` without private keys (disable_private_keys=true) and should be blank with no keys or HD seed (blank=true).\n+- The `watch_only_wallet` wallet will be used to track transactions received to the `offline_wallet` and for creating PSBT transactions.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"watch_only_wallet\" disable_private_keys=true blank=true\n+{\n+  \"name\": \"watch_only_wallet\"\n+}\n+```\n+\n+2. Import the `offline_wallet` descriptors to the online `watch_only_wallet` using the `descriptors.json` file created on the offline wallet\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" importdescriptors \"$(cat /path/to/descriptors.json)\"\n+[\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  }\n+]\n+```\n+> [!NOTE]\n+> Importing the multiple descriptors from the `offline_wallet` provides the ability to generate a variety of address types by the [online] `watch_only_wallets`\n+\n+### Load Funds to the `offline_wallet`",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 82,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "f22625f734bc302bdb65d7a19d62300806d8689f",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "At this point it might be helpful to explain that both offline and online wallets have the exact same public keys and therefore they have the same addresses AND the same \"funds\" although spending the funds requires cooperation between both wallets...\r\n\r\n",
      "created_at": "2023-09-15T18:52:58Z",
      "updated_at": "2023-09-15T19:02:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1327668801",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327668801"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 89,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327670781",
      "pull_request_review_id": 1629543185,
      "id": 1327670781,
      "node_id": "PRRC_kwDOABII585PIqX9",
      "diff_hunk": "@@ -0,0 +1,193 @@\n+# Offline Signing Tutorial\n+\n+Welcome to this tutorial on how to sign transactions offline using PSBT (Partially Signed Bitcoin Transactions). This tutorial will guide you through the process of securely signing Bitcoin transactions using an offline wallet and an online watch-only wallet.\n+\n+## Overview\n+In this tutorial, we have two hosts: [offline] which is totally offline and without a copy of the blockchain and [online] which is a regular online node, both running Bitcoin 25.0\n+\n+In this example, we are going to create an `offline_wallet` on the [offline] host. We will then create a `watch_only_wallet` on the [online] host using descriptors imported from the `offline_wallet` and load funds to the wallet. we'll create a PSBT transaction using the  `watch_only_wallet`, sign it with the `offline_wallet` then broadcast the transaction using the [online] host\n+\n+### Requirements\n+- [jq](https://jqlang.github.io/jq/) installation - This tutorial uses jq to process JSON.\n+\n+> [!NOTE]\n+> Tested using Signet with a connected host machine and an offline docker container (representing the offline wallet) both running Signet, should also work with Regtest and Mainnet\n+\n+### Create and Prepare the `offline_wallet`\n+\n+1. On the offline machine, create an offline wallet named `offline_wallet`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"offline_wallet\"\n+{\n+  \"name\": \"offline_wallet\"\n+}\n+```\n+\n+2. Export the offline wallet descriptors to a JSON file named `descriptors.json`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" listdescriptors | jq -r '.descriptors' >> /path/to/descriptors.json\n+```\n+\n+> [!NOTE]\n+> The `descriptors.json` file will be exported to the online machine (e.g. using a USB) to create a watch-only wallet. (This is an easier way to export the descriptors compared to manual export)\n+\n+### Create the online `watch_only_wallet`\n+\n+1. On the online machine, create an online watch-only wallet named `watch_only_wallet` without private keys (disable_private_keys=true) and should be blank with no keys or HD seed (blank=true).\n+- The `watch_only_wallet` wallet will be used to track transactions received to the `offline_wallet` and for creating PSBT transactions.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"watch_only_wallet\" disable_private_keys=true blank=true\n+{\n+  \"name\": \"watch_only_wallet\"\n+}\n+```\n+\n+2. Import the `offline_wallet` descriptors to the online `watch_only_wallet` using the `descriptors.json` file created on the offline wallet\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" importdescriptors \"$(cat /path/to/descriptors.json)\"\n+[\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  }\n+]\n+```\n+> [!NOTE]\n+> Importing the multiple descriptors from the `offline_wallet` provides the ability to generate a variety of address types by the [online] `watch_only_wallets`\n+\n+### Load Funds to the `offline_wallet`\n+1. Generate an address for the `offline_wallet` using the `watch_only_wallet` to load funds.",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 83,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "f22625f734bc302bdb65d7a19d62300806d8689f",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "...then here instead of \"generating an address from one wallet using the other wallet\" (confusing!) you might mention that either wallet can provide an address (they will be the same address) but we will use online wallet for this guide since presumably we will be giving that address to someone else online.",
      "created_at": "2023-09-15T18:55:31Z",
      "updated_at": "2023-09-15T19:02:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1327670781",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327670781"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 83,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327673599",
      "pull_request_review_id": 1629543185,
      "id": 1327673599,
      "node_id": "PRRC_kwDOABII585PIrD_",
      "diff_hunk": "@@ -0,0 +1,193 @@\n+# Offline Signing Tutorial\n+\n+Welcome to this tutorial on how to sign transactions offline using PSBT (Partially Signed Bitcoin Transactions). This tutorial will guide you through the process of securely signing Bitcoin transactions using an offline wallet and an online watch-only wallet.\n+\n+## Overview\n+In this tutorial, we have two hosts: [offline] which is totally offline and without a copy of the blockchain and [online] which is a regular online node, both running Bitcoin 25.0\n+\n+In this example, we are going to create an `offline_wallet` on the [offline] host. We will then create a `watch_only_wallet` on the [online] host using descriptors imported from the `offline_wallet` and load funds to the wallet. we'll create a PSBT transaction using the  `watch_only_wallet`, sign it with the `offline_wallet` then broadcast the transaction using the [online] host\n+\n+### Requirements\n+- [jq](https://jqlang.github.io/jq/) installation - This tutorial uses jq to process JSON.\n+\n+> [!NOTE]\n+> Tested using Signet with a connected host machine and an offline docker container (representing the offline wallet) both running Signet, should also work with Regtest and Mainnet\n+\n+### Create and Prepare the `offline_wallet`\n+\n+1. On the offline machine, create an offline wallet named `offline_wallet`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"offline_wallet\"\n+{\n+  \"name\": \"offline_wallet\"\n+}\n+```\n+\n+2. Export the offline wallet descriptors to a JSON file named `descriptors.json`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" listdescriptors | jq -r '.descriptors' >> /path/to/descriptors.json\n+```\n+\n+> [!NOTE]\n+> The `descriptors.json` file will be exported to the online machine (e.g. using a USB) to create a watch-only wallet. (This is an easier way to export the descriptors compared to manual export)\n+\n+### Create the online `watch_only_wallet`\n+\n+1. On the online machine, create an online watch-only wallet named `watch_only_wallet` without private keys (disable_private_keys=true) and should be blank with no keys or HD seed (blank=true).\n+- The `watch_only_wallet` wallet will be used to track transactions received to the `offline_wallet` and for creating PSBT transactions.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"watch_only_wallet\" disable_private_keys=true blank=true\n+{\n+  \"name\": \"watch_only_wallet\"\n+}\n+```\n+\n+2. Import the `offline_wallet` descriptors to the online `watch_only_wallet` using the `descriptors.json` file created on the offline wallet\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" importdescriptors \"$(cat /path/to/descriptors.json)\"\n+[\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  }\n+]\n+```\n+> [!NOTE]\n+> Importing the multiple descriptors from the `offline_wallet` provides the ability to generate a variety of address types by the [online] `watch_only_wallets`\n+\n+### Load Funds to the `offline_wallet`\n+1. Generate an address for the `offline_wallet` using the `watch_only_wallet` to load funds.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" getnewaddress\n+tb1qtu5qgc6ddhmqm5yqjvhg83qgk2t4ewajg0h6yh\n+```\n+\n+2. Visit a faucet like https://signet.bc-2.jp to load funds into the generated address.\n+\n+3. Confirm the received funds (to the offline_wallet) using the online watch_only_wallet.",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 92,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "f22625f734bc302bdb65d7a19d62300806d8689f",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "again lets try to emphasize that they are the same wallet. we can use the online wallet to confirm the transaction was broadcast / confirmed",
      "created_at": "2023-09-15T18:59:09Z",
      "updated_at": "2023-09-15T19:02:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1327673599",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327673599"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 92,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327674800",
      "pull_request_review_id": 1629543185,
      "id": 1327674800,
      "node_id": "PRRC_kwDOABII585PIrWw",
      "diff_hunk": "@@ -0,0 +1,193 @@\n+# Offline Signing Tutorial\n+\n+Welcome to this tutorial on how to sign transactions offline using PSBT (Partially Signed Bitcoin Transactions). This tutorial will guide you through the process of securely signing Bitcoin transactions using an offline wallet and an online watch-only wallet.\n+\n+## Overview\n+In this tutorial, we have two hosts: [offline] which is totally offline and without a copy of the blockchain and [online] which is a regular online node, both running Bitcoin 25.0\n+\n+In this example, we are going to create an `offline_wallet` on the [offline] host. We will then create a `watch_only_wallet` on the [online] host using descriptors imported from the `offline_wallet` and load funds to the wallet. we'll create a PSBT transaction using the  `watch_only_wallet`, sign it with the `offline_wallet` then broadcast the transaction using the [online] host\n+\n+### Requirements\n+- [jq](https://jqlang.github.io/jq/) installation - This tutorial uses jq to process JSON.\n+\n+> [!NOTE]\n+> Tested using Signet with a connected host machine and an offline docker container (representing the offline wallet) both running Signet, should also work with Regtest and Mainnet\n+\n+### Create and Prepare the `offline_wallet`\n+\n+1. On the offline machine, create an offline wallet named `offline_wallet`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"offline_wallet\"\n+{\n+  \"name\": \"offline_wallet\"\n+}\n+```\n+\n+2. Export the offline wallet descriptors to a JSON file named `descriptors.json`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" listdescriptors | jq -r '.descriptors' >> /path/to/descriptors.json\n+```\n+\n+> [!NOTE]\n+> The `descriptors.json` file will be exported to the online machine (e.g. using a USB) to create a watch-only wallet. (This is an easier way to export the descriptors compared to manual export)\n+\n+### Create the online `watch_only_wallet`\n+\n+1. On the online machine, create an online watch-only wallet named `watch_only_wallet` without private keys (disable_private_keys=true) and should be blank with no keys or HD seed (blank=true).\n+- The `watch_only_wallet` wallet will be used to track transactions received to the `offline_wallet` and for creating PSBT transactions.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"watch_only_wallet\" disable_private_keys=true blank=true\n+{\n+  \"name\": \"watch_only_wallet\"\n+}\n+```\n+\n+2. Import the `offline_wallet` descriptors to the online `watch_only_wallet` using the `descriptors.json` file created on the offline wallet\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" importdescriptors \"$(cat /path/to/descriptors.json)\"\n+[\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  }\n+]\n+```\n+> [!NOTE]\n+> Importing the multiple descriptors from the `offline_wallet` provides the ability to generate a variety of address types by the [online] `watch_only_wallets`\n+\n+### Load Funds to the `offline_wallet`\n+1. Generate an address for the `offline_wallet` using the `watch_only_wallet` to load funds.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" getnewaddress\n+tb1qtu5qgc6ddhmqm5yqjvhg83qgk2t4ewajg0h6yh\n+```\n+\n+2. Visit a faucet like https://signet.bc-2.jp to load funds into the generated address.\n+\n+3. Confirm the received funds (to the offline_wallet) using the online watch_only_wallet.\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" listunspent\n+[\n+  {\n+    \"txid\": \"0f3953dfc3eb8e753cd1633151837c5b9953992914ff32b7de08c47f1f29c762\",\n+    \"vout\": 1,\n+    \"address\": \"tb1qtu5qgc6ddhmqm5yqjvhg83qgk2t4ewajg0h6yh\",\n+    \"label\": \"\",\n+    \"scriptPubKey\": \"00145f2804634d6df60dd080932e83c408b2975cbbb2\",\n+    \"amount\": 0.01000000,\n+    \"confirmations\": 4,\n+    \"spendable\": true,\n+    \"solvable\": true,\n+    \"desc\": \"wpkh([306c734f/84h/1h/0h/0/0]025932ccee7590158f7e08bb36290d135d30a0b045163da896e1cd7645ec4223a9)#xytvyr4a\",\n+    \"parent_descs\": [\n+      \"wpkh([306c734f/84h/1h/0h]tpubDCJnY92ib4Zu3qd6wrBXEjG436tQdA2tDiJU2iSJYjkNS1darssPWKaBfojhjUF5vMLBcxbN2r93pmFMz2zyTEZuNx9JDo9rWqoHhATW3Uz/0/*)#7mh08dkg\"\n+    ],\n+    \"safe\": true\n+  }\n+]\n+```\n+\n+### Create and Export a PSBT Transaction\n+\n+1. Create a PSBT transaction using the online `watch_only_wallet`, sending funds to the `online_receiving_wallet` address. (`walletcreatefundedpsbt inputs[], outputs[address: amount]`)",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 117,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "f22625f734bc302bdb65d7a19d62300806d8689f",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'd maybe add a step 0 just getting another receive address from the online wallet and do a self-send.",
      "created_at": "2023-09-15T19:00:37Z",
      "updated_at": "2023-09-15T19:02:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1327674800",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327674800"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 117,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1336937567",
      "pull_request_review_id": 1643840266,
      "id": 1336937567,
      "node_id": "PRRC_kwDOABII585PsAxf",
      "diff_hunk": "@@ -0,0 +1,198 @@\n+# Offline Signing Tutorial\n+\n+Welcome to this tutorial on how to sign transactions offline using PSBT (Partially Signed Bitcoin Transactions). This tutorial will guide you through the process of securely signing Bitcoin transactions using an offline wallet and an online watch-only wallet.",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 3,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "c01707bf8bec3947ce4321cef75c52b6cab743cc",
      "in_reply_to_id": null,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\nThis tutorial will describe how to use two instances of Bitcoin Core, one online and one offline, to greatly increase security by not having private keys reside on a networked device.\r\nMaintaining an air-gap between private keys and any network connections drastically reduces the opportunity for those keys to be exfiltrated from the user.\r\n\r\nThis workflow uses [Partially Signed Bitcoin Transactions](https://github.com/bitcoin/bitcoin/blob/master/doc/psbt.md) (PSBTs) to transfer the transaction to and from the offline wallet for signing using the private keys.\r\n```",
      "created_at": "2023-09-26T09:44:42Z",
      "updated_at": "2023-09-26T11:58:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1336937567",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1336937567"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1336942221",
      "pull_request_review_id": 1643840266,
      "id": 1336942221,
      "node_id": "PRRC_kwDOABII585PsB6N",
      "diff_hunk": "@@ -0,0 +1,198 @@\n+# Offline Signing Tutorial\n+\n+Welcome to this tutorial on how to sign transactions offline using PSBT (Partially Signed Bitcoin Transactions). This tutorial will guide you through the process of securely signing Bitcoin transactions using an offline wallet and an online watch-only wallet.\n+\n+## Overview\n+In this tutorial, we have two hosts: [offline] which is totally offline and without a copy of the blockchain and [online] which is a regular online node, both running Bitcoin 25.0",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 6,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "c01707bf8bec3947ce4321cef75c52b6cab743cc",
      "in_reply_to_id": null,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\nIn this tutorial, we have two hosts, both running Bitcoin Core v25.0:\r\n\r\n* [offline] which is disconnected from all networks (internet, Tor, wifi, bluetooth etc.) and does not have, or need, a copy of the blockchain.\r\n* [online] which is a regular online node with a synced blockchain.\r\n```",
      "created_at": "2023-09-26T09:47:19Z",
      "updated_at": "2023-09-26T11:58:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1336942221",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1336942221"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 6,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1336946159",
      "pull_request_review_id": 1643840266,
      "id": 1336946159,
      "node_id": "PRRC_kwDOABII585PsC3v",
      "diff_hunk": "@@ -0,0 +1,198 @@\n+# Offline Signing Tutorial\n+\n+Welcome to this tutorial on how to sign transactions offline using PSBT (Partially Signed Bitcoin Transactions). This tutorial will guide you through the process of securely signing Bitcoin transactions using an offline wallet and an online watch-only wallet.\n+\n+## Overview\n+In this tutorial, we have two hosts: [offline] which is totally offline and without a copy of the blockchain and [online] which is a regular online node, both running Bitcoin 25.0\n+\n+In this example, we are going to create an `offline_wallet` on the [offline] host. We will then create a `watch_only_wallet` on the [online] host using descriptors imported from the `offline_wallet` and load funds to the wallet. we'll create a PSBT transaction using the  `watch_only_wallet`, sign it with the `offline_wallet` then broadcast the transaction using the [online] host",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 8,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "c01707bf8bec3947ce4321cef75c52b6cab743cc",
      "in_reply_to_id": null,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\nWe are going to first create an `offline_wallet` on the [offline] host. We will then create a `watch_only_wallet` on the [online] host using public key descriptors exported from the `offline_wallet` and receive some coins into the wallet. In order to spend these coins we'll create an unsigned PSBT using the  `watch_only_wallet`, sign it with the `offline_wallet`  and finally broadcast the signed PSBT using the [online] host.\r\n```",
      "created_at": "2023-09-26T09:49:16Z",
      "updated_at": "2023-09-26T11:58:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1336946159",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1336946159"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 8,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1336979458",
      "pull_request_review_id": 1643840266,
      "id": 1336979458,
      "node_id": "PRRC_kwDOABII585PsLAC",
      "diff_hunk": "@@ -0,0 +1,198 @@\n+# Offline Signing Tutorial\n+\n+Welcome to this tutorial on how to sign transactions offline using PSBT (Partially Signed Bitcoin Transactions). This tutorial will guide you through the process of securely signing Bitcoin transactions using an offline wallet and an online watch-only wallet.\n+\n+## Overview\n+In this tutorial, we have two hosts: [offline] which is totally offline and without a copy of the blockchain and [online] which is a regular online node, both running Bitcoin 25.0\n+\n+In this example, we are going to create an `offline_wallet` on the [offline] host. We will then create a `watch_only_wallet` on the [online] host using descriptors imported from the `offline_wallet` and load funds to the wallet. we'll create a PSBT transaction using the  `watch_only_wallet`, sign it with the `offline_wallet` then broadcast the transaction using the [online] host\n+\n+### Requirements\n+- [jq](https://jqlang.github.io/jq/) installation - This tutorial uses jq to process JSON.\n+\n+> [!NOTE]\n+> Tested using Signet with a connected host machine and an offline docker container (representing the offline wallet) both running Signet, should also work with Regtest and Mainnet",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 14,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "c01707bf8bec3947ce4321cef75c52b6cab743cc",
      "in_reply_to_id": null,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't think that it's really necessary to say that docker was used here, nor the comment about it \"should also work with Regtest and Mainnet\" (it will :P )",
      "created_at": "2023-09-26T10:14:17Z",
      "updated_at": "2023-09-26T11:58:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1336979458",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1336979458"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1336981410",
      "pull_request_review_id": 1643840266,
      "id": 1336981410,
      "node_id": "PRRC_kwDOABII585PsLei",
      "diff_hunk": "@@ -0,0 +1,198 @@\n+# Offline Signing Tutorial\n+\n+Welcome to this tutorial on how to sign transactions offline using PSBT (Partially Signed Bitcoin Transactions). This tutorial will guide you through the process of securely signing Bitcoin transactions using an offline wallet and an online watch-only wallet.\n+\n+## Overview\n+In this tutorial, we have two hosts: [offline] which is totally offline and without a copy of the blockchain and [online] which is a regular online node, both running Bitcoin 25.0\n+\n+In this example, we are going to create an `offline_wallet` on the [offline] host. We will then create a `watch_only_wallet` on the [online] host using descriptors imported from the `offline_wallet` and load funds to the wallet. we'll create a PSBT transaction using the  `watch_only_wallet`, sign it with the `offline_wallet` then broadcast the transaction using the [online] host\n+\n+### Requirements\n+- [jq](https://jqlang.github.io/jq/) installation - This tutorial uses jq to process JSON.\n+\n+> [!NOTE]\n+> Tested using Signet with a connected host machine and an offline docker container (representing the offline wallet) both running Signet, should also work with Regtest and Mainnet\n+\n+### Create and Prepare the `offline_wallet`\n+\n+1. On the offline machine, create an offline wallet named `offline_wallet`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"offline_wallet\"",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 21,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "c01707bf8bec3947ce4321cef75c52b6cab743cc",
      "in_reply_to_id": null,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Could be worth mentioning that Bitcoin Core v23.0 upwards is needed for this command to create a descriptor wallet by default?",
      "created_at": "2023-09-26T10:16:04Z",
      "updated_at": "2023-09-26T11:58:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1336981410",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1336981410"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 25,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1336982456",
      "pull_request_review_id": 1643840266,
      "id": 1336982456,
      "node_id": "PRRC_kwDOABII585PsLu4",
      "diff_hunk": "@@ -0,0 +1,198 @@\n+# Offline Signing Tutorial\n+\n+Welcome to this tutorial on how to sign transactions offline using PSBT (Partially Signed Bitcoin Transactions). This tutorial will guide you through the process of securely signing Bitcoin transactions using an offline wallet and an online watch-only wallet.\n+\n+## Overview\n+In this tutorial, we have two hosts: [offline] which is totally offline and without a copy of the blockchain and [online] which is a regular online node, both running Bitcoin 25.0\n+\n+In this example, we are going to create an `offline_wallet` on the [offline] host. We will then create a `watch_only_wallet` on the [online] host using descriptors imported from the `offline_wallet` and load funds to the wallet. we'll create a PSBT transaction using the  `watch_only_wallet`, sign it with the `offline_wallet` then broadcast the transaction using the [online] host\n+\n+### Requirements\n+- [jq](https://jqlang.github.io/jq/) installation - This tutorial uses jq to process JSON.\n+\n+> [!NOTE]\n+> Tested using Signet with a connected host machine and an offline docker container (representing the offline wallet) both running Signet, should also work with Regtest and Mainnet\n+\n+### Create and Prepare the `offline_wallet`\n+\n+1. On the offline machine, create an offline wallet named `offline_wallet`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"offline_wallet\"\n+{\n+  \"name\": \"offline_wallet\"\n+}\n+```\n+\n+2. Export the offline wallet descriptors to a JSON file named `descriptors.json`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" listdescriptors | jq -r '.descriptors' >> /path/to/descriptors.json\n+```\n+\n+> [!NOTE]\n+> The `descriptors.json` file will be exported to the online machine (e.g. using a USB) to create a watch-only wallet. (This is an easier way to export the descriptors compared to manual export)",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 34,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "c01707bf8bec3947ce4321cef75c52b6cab743cc",
      "in_reply_to_id": null,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n> The `descriptors.json` file will be transferred to the online machine (e.g. using a USB) and imported to create a related watch-only wallet.\r\n```",
      "created_at": "2023-09-26T10:16:58Z",
      "updated_at": "2023-09-26T11:58:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1336982456",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1336982456"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 34,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1336984462",
      "pull_request_review_id": 1643840266,
      "id": 1336984462,
      "node_id": "PRRC_kwDOABII585PsMOO",
      "diff_hunk": "@@ -0,0 +1,198 @@\n+# Offline Signing Tutorial\n+\n+Welcome to this tutorial on how to sign transactions offline using PSBT (Partially Signed Bitcoin Transactions). This tutorial will guide you through the process of securely signing Bitcoin transactions using an offline wallet and an online watch-only wallet.\n+\n+## Overview\n+In this tutorial, we have two hosts: [offline] which is totally offline and without a copy of the blockchain and [online] which is a regular online node, both running Bitcoin 25.0\n+\n+In this example, we are going to create an `offline_wallet` on the [offline] host. We will then create a `watch_only_wallet` on the [online] host using descriptors imported from the `offline_wallet` and load funds to the wallet. we'll create a PSBT transaction using the  `watch_only_wallet`, sign it with the `offline_wallet` then broadcast the transaction using the [online] host\n+\n+### Requirements\n+- [jq](https://jqlang.github.io/jq/) installation - This tutorial uses jq to process JSON.\n+\n+> [!NOTE]\n+> Tested using Signet with a connected host machine and an offline docker container (representing the offline wallet) both running Signet, should also work with Regtest and Mainnet\n+\n+### Create and Prepare the `offline_wallet`\n+\n+1. On the offline machine, create an offline wallet named `offline_wallet`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"offline_wallet\"\n+{\n+  \"name\": \"offline_wallet\"\n+}\n+```\n+\n+2. Export the offline wallet descriptors to a JSON file named `descriptors.json`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" listdescriptors | jq -r '.descriptors' >> /path/to/descriptors.json\n+```\n+\n+> [!NOTE]\n+> The `descriptors.json` file will be exported to the online machine (e.g. using a USB) to create a watch-only wallet. (This is an easier way to export the descriptors compared to manual export)\n+\n+### Create the online `watch_only_wallet`\n+\n+1. On the online machine, create an online watch-only wallet named `watch_only_wallet` without private keys (disable_private_keys=true) and should be blank with no keys or HD seed (blank=true).",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 38,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "c01707bf8bec3947ce4321cef75c52b6cab743cc",
      "in_reply_to_id": null,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n1. On the online machine, create a blank watch-only wallet which has private keys disabled and is named `watch_only_wallet` by using the `createwallet` options: `disable_private_keys=true, blank=true`.\r\n\r\nNote: `blank` indicates that the wallet should not generate any new keys of its own. `disable_private_keys` indicates that the wallet should refuse to import private keys, i.e. will be a dedicated watch-only wallet.\r\n```",
      "created_at": "2023-09-26T10:18:47Z",
      "updated_at": "2023-09-26T11:58:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1336984462",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1336984462"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 38,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1336988543",
      "pull_request_review_id": 1643840266,
      "id": 1336988543,
      "node_id": "PRRC_kwDOABII585PsNN_",
      "diff_hunk": "@@ -0,0 +1,198 @@\n+# Offline Signing Tutorial\n+\n+Welcome to this tutorial on how to sign transactions offline using PSBT (Partially Signed Bitcoin Transactions). This tutorial will guide you through the process of securely signing Bitcoin transactions using an offline wallet and an online watch-only wallet.\n+\n+## Overview\n+In this tutorial, we have two hosts: [offline] which is totally offline and without a copy of the blockchain and [online] which is a regular online node, both running Bitcoin 25.0\n+\n+In this example, we are going to create an `offline_wallet` on the [offline] host. We will then create a `watch_only_wallet` on the [online] host using descriptors imported from the `offline_wallet` and load funds to the wallet. we'll create a PSBT transaction using the  `watch_only_wallet`, sign it with the `offline_wallet` then broadcast the transaction using the [online] host\n+\n+### Requirements\n+- [jq](https://jqlang.github.io/jq/) installation - This tutorial uses jq to process JSON.\n+\n+> [!NOTE]\n+> Tested using Signet with a connected host machine and an offline docker container (representing the offline wallet) both running Signet, should also work with Regtest and Mainnet\n+\n+### Create and Prepare the `offline_wallet`\n+\n+1. On the offline machine, create an offline wallet named `offline_wallet`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"offline_wallet\"\n+{\n+  \"name\": \"offline_wallet\"\n+}\n+```\n+\n+2. Export the offline wallet descriptors to a JSON file named `descriptors.json`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" listdescriptors | jq -r '.descriptors' >> /path/to/descriptors.json\n+```\n+\n+> [!NOTE]\n+> The `descriptors.json` file will be exported to the online machine (e.g. using a USB) to create a watch-only wallet. (This is an easier way to export the descriptors compared to manual export)\n+\n+### Create the online `watch_only_wallet`\n+\n+1. On the online machine, create an online watch-only wallet named `watch_only_wallet` without private keys (disable_private_keys=true) and should be blank with no keys or HD seed (blank=true).\n+- The `watch_only_wallet` wallet will be used to track transactions received to the `offline_wallet` and for creating PSBT transactions.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"watch_only_wallet\" disable_private_keys=true blank=true\n+{\n+  \"name\": \"watch_only_wallet\"\n+}\n+```\n+\n+2. Import the `offline_wallet` descriptors to the online `watch_only_wallet` using the `descriptors.json` file created on the offline wallet\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" importdescriptors \"$(cat /path/to/descriptors.json)\"\n+[\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  }\n+]\n+```\n+> [!NOTE]\n+> Importing the multiple descriptors from the `offline_wallet` provides the ability to generate a variety of address types by the [online] `watch_only_wallets`\n+\n+### Load Funds to the `offline_wallet`\n+\n+At this point, it's important to understand that both the `offline_wallet` and [online] `watch_only_wallets` share the same public keys. As a result, they generate the same addresses and have access to the same \"funds.\" However, to spend these funds, cooperation between both wallets is required since you need the private keys to sign the transactions which are only available on the `offline_wallet`.",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 84,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "c01707bf8bec3947ce4321cef75c52b6cab743cc",
      "in_reply_to_id": null,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\nAt this point, it's important to understand that both the `offline_wallet` and [online] `watch_only_wallet` share the same public keys. As a result, they generate the same addresses. To spend these coins cooperation between both wallets is required since the private keys needed to sign a transaction are only available on the `offline_wallet`.\r\n```",
      "created_at": "2023-09-26T10:22:28Z",
      "updated_at": "2023-09-26T11:58:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1336988543",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1336988543"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 84,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1336988918",
      "pull_request_review_id": 1643840266,
      "id": 1336988918,
      "node_id": "PRRC_kwDOABII585PsNT2",
      "diff_hunk": "@@ -0,0 +1,198 @@\n+# Offline Signing Tutorial\n+\n+Welcome to this tutorial on how to sign transactions offline using PSBT (Partially Signed Bitcoin Transactions). This tutorial will guide you through the process of securely signing Bitcoin transactions using an offline wallet and an online watch-only wallet.\n+\n+## Overview\n+In this tutorial, we have two hosts: [offline] which is totally offline and without a copy of the blockchain and [online] which is a regular online node, both running Bitcoin 25.0\n+\n+In this example, we are going to create an `offline_wallet` on the [offline] host. We will then create a `watch_only_wallet` on the [online] host using descriptors imported from the `offline_wallet` and load funds to the wallet. we'll create a PSBT transaction using the  `watch_only_wallet`, sign it with the `offline_wallet` then broadcast the transaction using the [online] host\n+\n+### Requirements\n+- [jq](https://jqlang.github.io/jq/) installation - This tutorial uses jq to process JSON.\n+\n+> [!NOTE]\n+> Tested using Signet with a connected host machine and an offline docker container (representing the offline wallet) both running Signet, should also work with Regtest and Mainnet\n+\n+### Create and Prepare the `offline_wallet`\n+\n+1. On the offline machine, create an offline wallet named `offline_wallet`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"offline_wallet\"\n+{\n+  \"name\": \"offline_wallet\"\n+}\n+```\n+\n+2. Export the offline wallet descriptors to a JSON file named `descriptors.json`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" listdescriptors | jq -r '.descriptors' >> /path/to/descriptors.json\n+```\n+\n+> [!NOTE]\n+> The `descriptors.json` file will be exported to the online machine (e.g. using a USB) to create a watch-only wallet. (This is an easier way to export the descriptors compared to manual export)\n+\n+### Create the online `watch_only_wallet`\n+\n+1. On the online machine, create an online watch-only wallet named `watch_only_wallet` without private keys (disable_private_keys=true) and should be blank with no keys or HD seed (blank=true).\n+- The `watch_only_wallet` wallet will be used to track transactions received to the `offline_wallet` and for creating PSBT transactions.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"watch_only_wallet\" disable_private_keys=true blank=true\n+{\n+  \"name\": \"watch_only_wallet\"\n+}\n+```\n+\n+2. Import the `offline_wallet` descriptors to the online `watch_only_wallet` using the `descriptors.json` file created on the offline wallet\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" importdescriptors \"$(cat /path/to/descriptors.json)\"\n+[\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  }\n+]\n+```\n+> [!NOTE]\n+> Importing the multiple descriptors from the `offline_wallet` provides the ability to generate a variety of address types by the [online] `watch_only_wallets`\n+\n+### Load Funds to the `offline_wallet`\n+\n+At this point, it's important to understand that both the `offline_wallet` and [online] `watch_only_wallets` share the same public keys. As a result, they generate the same addresses and have access to the same \"funds.\" However, to spend these funds, cooperation between both wallets is required since you need the private keys to sign the transactions which are only available on the `offline_wallet`.",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 84,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "c01707bf8bec3947ce4321cef75c52b6cab743cc",
      "in_reply_to_id": 1336988543,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Sorry to nit this (here, and elsewhere), I just don't really like the term \"funds\" in Bitcoin myself, but it's just a personal preference... I am going to leave suggestions in future occurrences too, but if folks are happy with \"funds\" then you can ignore them all?",
      "created_at": "2023-09-26T10:22:50Z",
      "updated_at": "2023-09-26T11:58:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1336988918",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1336988918"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 84,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1336991987",
      "pull_request_review_id": 1643840266,
      "id": 1336991987,
      "node_id": "PRRC_kwDOABII585PsODz",
      "diff_hunk": "@@ -0,0 +1,198 @@\n+# Offline Signing Tutorial\n+\n+Welcome to this tutorial on how to sign transactions offline using PSBT (Partially Signed Bitcoin Transactions). This tutorial will guide you through the process of securely signing Bitcoin transactions using an offline wallet and an online watch-only wallet.\n+\n+## Overview\n+In this tutorial, we have two hosts: [offline] which is totally offline and without a copy of the blockchain and [online] which is a regular online node, both running Bitcoin 25.0\n+\n+In this example, we are going to create an `offline_wallet` on the [offline] host. We will then create a `watch_only_wallet` on the [online] host using descriptors imported from the `offline_wallet` and load funds to the wallet. we'll create a PSBT transaction using the  `watch_only_wallet`, sign it with the `offline_wallet` then broadcast the transaction using the [online] host\n+\n+### Requirements\n+- [jq](https://jqlang.github.io/jq/) installation - This tutorial uses jq to process JSON.\n+\n+> [!NOTE]\n+> Tested using Signet with a connected host machine and an offline docker container (representing the offline wallet) both running Signet, should also work with Regtest and Mainnet\n+\n+### Create and Prepare the `offline_wallet`\n+\n+1. On the offline machine, create an offline wallet named `offline_wallet`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"offline_wallet\"\n+{\n+  \"name\": \"offline_wallet\"\n+}\n+```\n+\n+2. Export the offline wallet descriptors to a JSON file named `descriptors.json`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" listdescriptors | jq -r '.descriptors' >> /path/to/descriptors.json\n+```\n+\n+> [!NOTE]\n+> The `descriptors.json` file will be exported to the online machine (e.g. using a USB) to create a watch-only wallet. (This is an easier way to export the descriptors compared to manual export)\n+\n+### Create the online `watch_only_wallet`\n+\n+1. On the online machine, create an online watch-only wallet named `watch_only_wallet` without private keys (disable_private_keys=true) and should be blank with no keys or HD seed (blank=true).\n+- The `watch_only_wallet` wallet will be used to track transactions received to the `offline_wallet` and for creating PSBT transactions.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"watch_only_wallet\" disable_private_keys=true blank=true\n+{\n+  \"name\": \"watch_only_wallet\"\n+}\n+```\n+\n+2. Import the `offline_wallet` descriptors to the online `watch_only_wallet` using the `descriptors.json` file created on the offline wallet\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" importdescriptors \"$(cat /path/to/descriptors.json)\"\n+[\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  }\n+]\n+```\n+> [!NOTE]\n+> Importing the multiple descriptors from the `offline_wallet` provides the ability to generate a variety of address types by the [online] `watch_only_wallets`\n+\n+### Load Funds to the `offline_wallet`\n+\n+At this point, it's important to understand that both the `offline_wallet` and [online] `watch_only_wallets` share the same public keys. As a result, they generate the same addresses and have access to the same \"funds.\" However, to spend these funds, cooperation between both wallets is required since you need the private keys to sign the transactions which are only available on the `offline_wallet`.\n+\n+1. Generate an address for the `offline_wallet` to load funds. You can use either the `offline_wallet` or the [online] `watch_only_wallet` to generate this address, as they will produce the same address. For the sake of this guide, we'll use the [online] `watch_only_wallet` to generate the address, which can then be shared with others online.",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 86,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "c01707bf8bec3947ce4321cef75c52b6cab743cc",
      "in_reply_to_id": null,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n1. Generate an address for the `offline_wallet` to receive coins to. Note that here you can use _either_ the `offline_wallet` or the [online] `watch_only_wallet` to generate this address, as they will produce the same addresses. For the sake of this guide, we'll use the [online] `watch_only_wallet` to generate the address.\r\n```",
      "created_at": "2023-09-26T10:25:38Z",
      "updated_at": "2023-09-26T11:58:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1336991987",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1336991987"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 86,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1336993380",
      "pull_request_review_id": 1643840266,
      "id": 1336993380,
      "node_id": "PRRC_kwDOABII585PsOZk",
      "diff_hunk": "@@ -0,0 +1,198 @@\n+# Offline Signing Tutorial\n+\n+Welcome to this tutorial on how to sign transactions offline using PSBT (Partially Signed Bitcoin Transactions). This tutorial will guide you through the process of securely signing Bitcoin transactions using an offline wallet and an online watch-only wallet.\n+\n+## Overview\n+In this tutorial, we have two hosts: [offline] which is totally offline and without a copy of the blockchain and [online] which is a regular online node, both running Bitcoin 25.0\n+\n+In this example, we are going to create an `offline_wallet` on the [offline] host. We will then create a `watch_only_wallet` on the [online] host using descriptors imported from the `offline_wallet` and load funds to the wallet. we'll create a PSBT transaction using the  `watch_only_wallet`, sign it with the `offline_wallet` then broadcast the transaction using the [online] host\n+\n+### Requirements\n+- [jq](https://jqlang.github.io/jq/) installation - This tutorial uses jq to process JSON.\n+\n+> [!NOTE]\n+> Tested using Signet with a connected host machine and an offline docker container (representing the offline wallet) both running Signet, should also work with Regtest and Mainnet\n+\n+### Create and Prepare the `offline_wallet`\n+\n+1. On the offline machine, create an offline wallet named `offline_wallet`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"offline_wallet\"\n+{\n+  \"name\": \"offline_wallet\"\n+}\n+```\n+\n+2. Export the offline wallet descriptors to a JSON file named `descriptors.json`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" listdescriptors | jq -r '.descriptors' >> /path/to/descriptors.json\n+```\n+\n+> [!NOTE]\n+> The `descriptors.json` file will be exported to the online machine (e.g. using a USB) to create a watch-only wallet. (This is an easier way to export the descriptors compared to manual export)\n+\n+### Create the online `watch_only_wallet`\n+\n+1. On the online machine, create an online watch-only wallet named `watch_only_wallet` without private keys (disable_private_keys=true) and should be blank with no keys or HD seed (blank=true).\n+- The `watch_only_wallet` wallet will be used to track transactions received to the `offline_wallet` and for creating PSBT transactions.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"watch_only_wallet\" disable_private_keys=true blank=true\n+{\n+  \"name\": \"watch_only_wallet\"\n+}\n+```\n+\n+2. Import the `offline_wallet` descriptors to the online `watch_only_wallet` using the `descriptors.json` file created on the offline wallet\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" importdescriptors \"$(cat /path/to/descriptors.json)\"\n+[\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  }\n+]\n+```\n+> [!NOTE]\n+> Importing the multiple descriptors from the `offline_wallet` provides the ability to generate a variety of address types by the [online] `watch_only_wallets`\n+\n+### Load Funds to the `offline_wallet`\n+\n+At this point, it's important to understand that both the `offline_wallet` and [online] `watch_only_wallets` share the same public keys. As a result, they generate the same addresses and have access to the same \"funds.\" However, to spend these funds, cooperation between both wallets is required since you need the private keys to sign the transactions which are only available on the `offline_wallet`.\n+\n+1. Generate an address for the `offline_wallet` to load funds. You can use either the `offline_wallet` or the [online] `watch_only_wallet` to generate this address, as they will produce the same address. For the sake of this guide, we'll use the [online] `watch_only_wallet` to generate the address, which can then be shared with others online.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" getnewaddress\n+tb1qtu5qgc6ddhmqm5yqjvhg83qgk2t4ewajg0h6yh\n+```\n+\n+2. Visit a faucet like https://signet.bc-2.jp to load funds into the generated address.",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 93,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "c01707bf8bec3947ce4321cef75c52b6cab743cc",
      "in_reply_to_id": null,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n2. Visit a faucet like https://signet.bc-2.jp and enter your address from the previous command to receive a small amount of signet coins to this address.\r\n```",
      "created_at": "2023-09-26T10:26:57Z",
      "updated_at": "2023-09-26T11:58:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1336993380",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1336993380"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 93,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1336994048",
      "pull_request_review_id": 1643840266,
      "id": 1336994048,
      "node_id": "PRRC_kwDOABII585PsOkA",
      "diff_hunk": "@@ -0,0 +1,198 @@\n+# Offline Signing Tutorial\n+\n+Welcome to this tutorial on how to sign transactions offline using PSBT (Partially Signed Bitcoin Transactions). This tutorial will guide you through the process of securely signing Bitcoin transactions using an offline wallet and an online watch-only wallet.\n+\n+## Overview\n+In this tutorial, we have two hosts: [offline] which is totally offline and without a copy of the blockchain and [online] which is a regular online node, both running Bitcoin 25.0\n+\n+In this example, we are going to create an `offline_wallet` on the [offline] host. We will then create a `watch_only_wallet` on the [online] host using descriptors imported from the `offline_wallet` and load funds to the wallet. we'll create a PSBT transaction using the  `watch_only_wallet`, sign it with the `offline_wallet` then broadcast the transaction using the [online] host\n+\n+### Requirements\n+- [jq](https://jqlang.github.io/jq/) installation - This tutorial uses jq to process JSON.\n+\n+> [!NOTE]\n+> Tested using Signet with a connected host machine and an offline docker container (representing the offline wallet) both running Signet, should also work with Regtest and Mainnet\n+\n+### Create and Prepare the `offline_wallet`\n+\n+1. On the offline machine, create an offline wallet named `offline_wallet`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"offline_wallet\"\n+{\n+  \"name\": \"offline_wallet\"\n+}\n+```\n+\n+2. Export the offline wallet descriptors to a JSON file named `descriptors.json`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" listdescriptors | jq -r '.descriptors' >> /path/to/descriptors.json\n+```\n+\n+> [!NOTE]\n+> The `descriptors.json` file will be exported to the online machine (e.g. using a USB) to create a watch-only wallet. (This is an easier way to export the descriptors compared to manual export)\n+\n+### Create the online `watch_only_wallet`\n+\n+1. On the online machine, create an online watch-only wallet named `watch_only_wallet` without private keys (disable_private_keys=true) and should be blank with no keys or HD seed (blank=true).\n+- The `watch_only_wallet` wallet will be used to track transactions received to the `offline_wallet` and for creating PSBT transactions.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"watch_only_wallet\" disable_private_keys=true blank=true\n+{\n+  \"name\": \"watch_only_wallet\"\n+}\n+```\n+\n+2. Import the `offline_wallet` descriptors to the online `watch_only_wallet` using the `descriptors.json` file created on the offline wallet\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" importdescriptors \"$(cat /path/to/descriptors.json)\"\n+[\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  }\n+]\n+```\n+> [!NOTE]\n+> Importing the multiple descriptors from the `offline_wallet` provides the ability to generate a variety of address types by the [online] `watch_only_wallets`\n+\n+### Load Funds to the `offline_wallet`\n+\n+At this point, it's important to understand that both the `offline_wallet` and [online] `watch_only_wallets` share the same public keys. As a result, they generate the same addresses and have access to the same \"funds.\" However, to spend these funds, cooperation between both wallets is required since you need the private keys to sign the transactions which are only available on the `offline_wallet`.\n+\n+1. Generate an address for the `offline_wallet` to load funds. You can use either the `offline_wallet` or the [online] `watch_only_wallet` to generate this address, as they will produce the same address. For the sake of this guide, we'll use the [online] `watch_only_wallet` to generate the address, which can then be shared with others online.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" getnewaddress\n+tb1qtu5qgc6ddhmqm5yqjvhg83qgk2t4ewajg0h6yh\n+```\n+\n+2. Visit a faucet like https://signet.bc-2.jp to load funds into the generated address.\n+\n+3. Confirm the received funds (to the `offline_wallet`) using the online `watch_only_wallet`. Since both wallets are essentially the same, you can use the [online] `watch_only_wallet` to monitor and confirm that the transaction was broadcast and confirmed:",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 95,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "c01707bf8bec3947ce4321cef75c52b6cab743cc",
      "in_reply_to_id": null,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n3. Confirm that coins were recieved using the online `watch_only_wallet`. Note that the transaction may take a few moments before being received on your local node, depending on its connectivity. Just re-run the command periodically until the transaction is recieved.\r\n```",
      "created_at": "2023-09-26T10:27:33Z",
      "updated_at": "2023-09-26T11:58:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1336994048",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1336994048"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1336994449",
      "pull_request_review_id": 1643840266,
      "id": 1336994449,
      "node_id": "PRRC_kwDOABII585PsOqR",
      "diff_hunk": "@@ -0,0 +1,198 @@\n+# Offline Signing Tutorial\n+\n+Welcome to this tutorial on how to sign transactions offline using PSBT (Partially Signed Bitcoin Transactions). This tutorial will guide you through the process of securely signing Bitcoin transactions using an offline wallet and an online watch-only wallet.\n+\n+## Overview\n+In this tutorial, we have two hosts: [offline] which is totally offline and without a copy of the blockchain and [online] which is a regular online node, both running Bitcoin 25.0\n+\n+In this example, we are going to create an `offline_wallet` on the [offline] host. We will then create a `watch_only_wallet` on the [online] host using descriptors imported from the `offline_wallet` and load funds to the wallet. we'll create a PSBT transaction using the  `watch_only_wallet`, sign it with the `offline_wallet` then broadcast the transaction using the [online] host\n+\n+### Requirements\n+- [jq](https://jqlang.github.io/jq/) installation - This tutorial uses jq to process JSON.\n+\n+> [!NOTE]\n+> Tested using Signet with a connected host machine and an offline docker container (representing the offline wallet) both running Signet, should also work with Regtest and Mainnet\n+\n+### Create and Prepare the `offline_wallet`\n+\n+1. On the offline machine, create an offline wallet named `offline_wallet`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"offline_wallet\"\n+{\n+  \"name\": \"offline_wallet\"\n+}\n+```\n+\n+2. Export the offline wallet descriptors to a JSON file named `descriptors.json`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" listdescriptors | jq -r '.descriptors' >> /path/to/descriptors.json\n+```\n+\n+> [!NOTE]\n+> The `descriptors.json` file will be exported to the online machine (e.g. using a USB) to create a watch-only wallet. (This is an easier way to export the descriptors compared to manual export)\n+\n+### Create the online `watch_only_wallet`\n+\n+1. On the online machine, create an online watch-only wallet named `watch_only_wallet` without private keys (disable_private_keys=true) and should be blank with no keys or HD seed (blank=true).\n+- The `watch_only_wallet` wallet will be used to track transactions received to the `offline_wallet` and for creating PSBT transactions.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"watch_only_wallet\" disable_private_keys=true blank=true\n+{\n+  \"name\": \"watch_only_wallet\"\n+}\n+```\n+\n+2. Import the `offline_wallet` descriptors to the online `watch_only_wallet` using the `descriptors.json` file created on the offline wallet\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" importdescriptors \"$(cat /path/to/descriptors.json)\"\n+[\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  }\n+]\n+```\n+> [!NOTE]\n+> Importing the multiple descriptors from the `offline_wallet` provides the ability to generate a variety of address types by the [online] `watch_only_wallets`\n+\n+### Load Funds to the `offline_wallet`\n+\n+At this point, it's important to understand that both the `offline_wallet` and [online] `watch_only_wallets` share the same public keys. As a result, they generate the same addresses and have access to the same \"funds.\" However, to spend these funds, cooperation between both wallets is required since you need the private keys to sign the transactions which are only available on the `offline_wallet`.\n+\n+1. Generate an address for the `offline_wallet` to load funds. You can use either the `offline_wallet` or the [online] `watch_only_wallet` to generate this address, as they will produce the same address. For the sake of this guide, we'll use the [online] `watch_only_wallet` to generate the address, which can then be shared with others online.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" getnewaddress\n+tb1qtu5qgc6ddhmqm5yqjvhg83qgk2t4ewajg0h6yh\n+```\n+\n+2. Visit a faucet like https://signet.bc-2.jp to load funds into the generated address.\n+\n+3. Confirm the received funds (to the `offline_wallet`) using the online `watch_only_wallet`. Since both wallets are essentially the same, you can use the [online] `watch_only_wallet` to monitor and confirm that the transaction was broadcast and confirmed:",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 95,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "c01707bf8bec3947ce4321cef75c52b6cab743cc",
      "in_reply_to_id": 1336994048,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "We already said that both wallets share pubkeys and addresses, so I don't think the duplication is necessary here?",
      "created_at": "2023-09-26T10:27:56Z",
      "updated_at": "2023-09-26T11:58:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1336994449",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1336994449"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1337000358",
      "pull_request_review_id": 1643840266,
      "id": 1337000358,
      "node_id": "PRRC_kwDOABII585PsQGm",
      "diff_hunk": "@@ -0,0 +1,198 @@\n+# Offline Signing Tutorial\n+\n+Welcome to this tutorial on how to sign transactions offline using PSBT (Partially Signed Bitcoin Transactions). This tutorial will guide you through the process of securely signing Bitcoin transactions using an offline wallet and an online watch-only wallet.\n+\n+## Overview\n+In this tutorial, we have two hosts: [offline] which is totally offline and without a copy of the blockchain and [online] which is a regular online node, both running Bitcoin 25.0\n+\n+In this example, we are going to create an `offline_wallet` on the [offline] host. We will then create a `watch_only_wallet` on the [online] host using descriptors imported from the `offline_wallet` and load funds to the wallet. we'll create a PSBT transaction using the  `watch_only_wallet`, sign it with the `offline_wallet` then broadcast the transaction using the [online] host\n+\n+### Requirements\n+- [jq](https://jqlang.github.io/jq/) installation - This tutorial uses jq to process JSON.\n+\n+> [!NOTE]\n+> Tested using Signet with a connected host machine and an offline docker container (representing the offline wallet) both running Signet, should also work with Regtest and Mainnet\n+\n+### Create and Prepare the `offline_wallet`\n+\n+1. On the offline machine, create an offline wallet named `offline_wallet`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"offline_wallet\"\n+{\n+  \"name\": \"offline_wallet\"\n+}\n+```\n+\n+2. Export the offline wallet descriptors to a JSON file named `descriptors.json`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" listdescriptors | jq -r '.descriptors' >> /path/to/descriptors.json\n+```\n+\n+> [!NOTE]\n+> The `descriptors.json` file will be exported to the online machine (e.g. using a USB) to create a watch-only wallet. (This is an easier way to export the descriptors compared to manual export)\n+\n+### Create the online `watch_only_wallet`\n+\n+1. On the online machine, create an online watch-only wallet named `watch_only_wallet` without private keys (disable_private_keys=true) and should be blank with no keys or HD seed (blank=true).\n+- The `watch_only_wallet` wallet will be used to track transactions received to the `offline_wallet` and for creating PSBT transactions.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"watch_only_wallet\" disable_private_keys=true blank=true\n+{\n+  \"name\": \"watch_only_wallet\"\n+}\n+```\n+\n+2. Import the `offline_wallet` descriptors to the online `watch_only_wallet` using the `descriptors.json` file created on the offline wallet\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" importdescriptors \"$(cat /path/to/descriptors.json)\"\n+[\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  }\n+]\n+```\n+> [!NOTE]\n+> Importing the multiple descriptors from the `offline_wallet` provides the ability to generate a variety of address types by the [online] `watch_only_wallets`\n+\n+### Load Funds to the `offline_wallet`\n+\n+At this point, it's important to understand that both the `offline_wallet` and [online] `watch_only_wallets` share the same public keys. As a result, they generate the same addresses and have access to the same \"funds.\" However, to spend these funds, cooperation between both wallets is required since you need the private keys to sign the transactions which are only available on the `offline_wallet`.\n+\n+1. Generate an address for the `offline_wallet` to load funds. You can use either the `offline_wallet` or the [online] `watch_only_wallet` to generate this address, as they will produce the same address. For the sake of this guide, we'll use the [online] `watch_only_wallet` to generate the address, which can then be shared with others online.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" getnewaddress\n+tb1qtu5qgc6ddhmqm5yqjvhg83qgk2t4ewajg0h6yh\n+```\n+\n+2. Visit a faucet like https://signet.bc-2.jp to load funds into the generated address.\n+\n+3. Confirm the received funds (to the `offline_wallet`) using the online `watch_only_wallet`. Since both wallets are essentially the same, you can use the [online] `watch_only_wallet` to monitor and confirm that the transaction was broadcast and confirmed:\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" listunspent\n+[\n+  {\n+    \"txid\": \"0f3953dfc3eb8e753cd1633151837c5b9953992914ff32b7de08c47f1f29c762\",\n+    \"vout\": 1,\n+    \"address\": \"tb1qtu5qgc6ddhmqm5yqjvhg83qgk2t4ewajg0h6yh\",\n+    \"label\": \"\",\n+    \"scriptPubKey\": \"00145f2804634d6df60dd080932e83c408b2975cbbb2\",\n+    \"amount\": 0.01000000,\n+    \"confirmations\": 4,\n+    \"spendable\": true,\n+    \"solvable\": true,\n+    \"desc\": \"wpkh([306c734f/84h/1h/0h/0/0]025932ccee7590158f7e08bb36290d135d30a0b045163da896e1cd7645ec4223a9)#xytvyr4a\",\n+    \"parent_descs\": [\n+      \"wpkh([306c734f/84h/1h/0h]tpubDCJnY92ib4Zu3qd6wrBXEjG436tQdA2tDiJU2iSJYjkNS1darssPWKaBfojhjUF5vMLBcxbN2r93pmFMz2zyTEZuNx9JDo9rWqoHhATW3Uz/0/*)#7mh08dkg\"\n+    ],\n+    \"safe\": true\n+  }\n+]\n+```\n+\n+### Create and Export a PSBT Transaction\n+\n+0. Get a receiving address to send the funds to. In this tutorial, we'll be sending funds to the address `tb1q9k5w0nhnhyeh78snpxh0t5t7c3lxdeg3erez32`",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 120,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "c01707bf8bec3947ce4321cef75c52b6cab743cc",
      "in_reply_to_id": null,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n0. Get a destination address for the transaction. In this tutorial, we'll be sending funds to the address `tb1q9k5w0nhnhyeh78snpxh0t5t7c3lxdeg3erez32`, but it if you don't need the coins for further testing you could send the coins back to the faucet.\r\n```",
      "created_at": "2023-09-26T10:33:33Z",
      "updated_at": "2023-09-26T11:58:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1337000358",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1337000358"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 120,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1337004194",
      "pull_request_review_id": 1643840266,
      "id": 1337004194,
      "node_id": "PRRC_kwDOABII585PsRCi",
      "diff_hunk": "@@ -0,0 +1,198 @@\n+# Offline Signing Tutorial\n+\n+Welcome to this tutorial on how to sign transactions offline using PSBT (Partially Signed Bitcoin Transactions). This tutorial will guide you through the process of securely signing Bitcoin transactions using an offline wallet and an online watch-only wallet.\n+\n+## Overview\n+In this tutorial, we have two hosts: [offline] which is totally offline and without a copy of the blockchain and [online] which is a regular online node, both running Bitcoin 25.0\n+\n+In this example, we are going to create an `offline_wallet` on the [offline] host. We will then create a `watch_only_wallet` on the [online] host using descriptors imported from the `offline_wallet` and load funds to the wallet. we'll create a PSBT transaction using the  `watch_only_wallet`, sign it with the `offline_wallet` then broadcast the transaction using the [online] host\n+\n+### Requirements\n+- [jq](https://jqlang.github.io/jq/) installation - This tutorial uses jq to process JSON.\n+\n+> [!NOTE]\n+> Tested using Signet with a connected host machine and an offline docker container (representing the offline wallet) both running Signet, should also work with Regtest and Mainnet\n+\n+### Create and Prepare the `offline_wallet`\n+\n+1. On the offline machine, create an offline wallet named `offline_wallet`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"offline_wallet\"\n+{\n+  \"name\": \"offline_wallet\"\n+}\n+```\n+\n+2. Export the offline wallet descriptors to a JSON file named `descriptors.json`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" listdescriptors | jq -r '.descriptors' >> /path/to/descriptors.json\n+```\n+\n+> [!NOTE]\n+> The `descriptors.json` file will be exported to the online machine (e.g. using a USB) to create a watch-only wallet. (This is an easier way to export the descriptors compared to manual export)\n+\n+### Create the online `watch_only_wallet`\n+\n+1. On the online machine, create an online watch-only wallet named `watch_only_wallet` without private keys (disable_private_keys=true) and should be blank with no keys or HD seed (blank=true).\n+- The `watch_only_wallet` wallet will be used to track transactions received to the `offline_wallet` and for creating PSBT transactions.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"watch_only_wallet\" disable_private_keys=true blank=true\n+{\n+  \"name\": \"watch_only_wallet\"\n+}\n+```\n+\n+2. Import the `offline_wallet` descriptors to the online `watch_only_wallet` using the `descriptors.json` file created on the offline wallet\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" importdescriptors \"$(cat /path/to/descriptors.json)\"\n+[\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  }\n+]\n+```\n+> [!NOTE]\n+> Importing the multiple descriptors from the `offline_wallet` provides the ability to generate a variety of address types by the [online] `watch_only_wallets`\n+\n+### Load Funds to the `offline_wallet`\n+\n+At this point, it's important to understand that both the `offline_wallet` and [online] `watch_only_wallets` share the same public keys. As a result, they generate the same addresses and have access to the same \"funds.\" However, to spend these funds, cooperation between both wallets is required since you need the private keys to sign the transactions which are only available on the `offline_wallet`.\n+\n+1. Generate an address for the `offline_wallet` to load funds. You can use either the `offline_wallet` or the [online] `watch_only_wallet` to generate this address, as they will produce the same address. For the sake of this guide, we'll use the [online] `watch_only_wallet` to generate the address, which can then be shared with others online.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" getnewaddress\n+tb1qtu5qgc6ddhmqm5yqjvhg83qgk2t4ewajg0h6yh\n+```\n+\n+2. Visit a faucet like https://signet.bc-2.jp to load funds into the generated address.\n+\n+3. Confirm the received funds (to the `offline_wallet`) using the online `watch_only_wallet`. Since both wallets are essentially the same, you can use the [online] `watch_only_wallet` to monitor and confirm that the transaction was broadcast and confirmed:\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" listunspent\n+[\n+  {\n+    \"txid\": \"0f3953dfc3eb8e753cd1633151837c5b9953992914ff32b7de08c47f1f29c762\",\n+    \"vout\": 1,\n+    \"address\": \"tb1qtu5qgc6ddhmqm5yqjvhg83qgk2t4ewajg0h6yh\",\n+    \"label\": \"\",\n+    \"scriptPubKey\": \"00145f2804634d6df60dd080932e83c408b2975cbbb2\",\n+    \"amount\": 0.01000000,\n+    \"confirmations\": 4,\n+    \"spendable\": true,\n+    \"solvable\": true,\n+    \"desc\": \"wpkh([306c734f/84h/1h/0h/0/0]025932ccee7590158f7e08bb36290d135d30a0b045163da896e1cd7645ec4223a9)#xytvyr4a\",\n+    \"parent_descs\": [\n+      \"wpkh([306c734f/84h/1h/0h]tpubDCJnY92ib4Zu3qd6wrBXEjG436tQdA2tDiJU2iSJYjkNS1darssPWKaBfojhjUF5vMLBcxbN2r93pmFMz2zyTEZuNx9JDo9rWqoHhATW3Uz/0/*)#7mh08dkg\"\n+    ],\n+    \"safe\": true\n+  }\n+]\n+```\n+\n+### Create and Export a PSBT Transaction\n+\n+0. Get a receiving address to send the funds to. In this tutorial, we'll be sending funds to the address `tb1q9k5w0nhnhyeh78snpxh0t5t7c3lxdeg3erez32`\n+\n+1. Create a PSBT transaction using the online `watch_only_wallet`, sending funds to the receiving address. (using `walletcreatefundedpsbt inputs[], outputs[address: amount]`)",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 122,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "c01707bf8bec3947ce4321cef75c52b6cab743cc",
      "in_reply_to_id": null,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n1. Create an funded but unsigned PSBT to the destination address with the online `watch_only_wallet` by using `walletcreatefundedpsbt inputs[], outputs[address: amount]`\r\n```",
      "created_at": "2023-09-26T10:37:23Z",
      "updated_at": "2023-09-26T11:58:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1337004194",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1337004194"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 122,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1337005290",
      "pull_request_review_id": 1643840266,
      "id": 1337005290,
      "node_id": "PRRC_kwDOABII585PsRTq",
      "diff_hunk": "@@ -0,0 +1,198 @@\n+# Offline Signing Tutorial\n+\n+Welcome to this tutorial on how to sign transactions offline using PSBT (Partially Signed Bitcoin Transactions). This tutorial will guide you through the process of securely signing Bitcoin transactions using an offline wallet and an online watch-only wallet.\n+\n+## Overview\n+In this tutorial, we have two hosts: [offline] which is totally offline and without a copy of the blockchain and [online] which is a regular online node, both running Bitcoin 25.0\n+\n+In this example, we are going to create an `offline_wallet` on the [offline] host. We will then create a `watch_only_wallet` on the [online] host using descriptors imported from the `offline_wallet` and load funds to the wallet. we'll create a PSBT transaction using the  `watch_only_wallet`, sign it with the `offline_wallet` then broadcast the transaction using the [online] host\n+\n+### Requirements\n+- [jq](https://jqlang.github.io/jq/) installation - This tutorial uses jq to process JSON.\n+\n+> [!NOTE]\n+> Tested using Signet with a connected host machine and an offline docker container (representing the offline wallet) both running Signet, should also work with Regtest and Mainnet\n+\n+### Create and Prepare the `offline_wallet`\n+\n+1. On the offline machine, create an offline wallet named `offline_wallet`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"offline_wallet\"\n+{\n+  \"name\": \"offline_wallet\"\n+}\n+```\n+\n+2. Export the offline wallet descriptors to a JSON file named `descriptors.json`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" listdescriptors | jq -r '.descriptors' >> /path/to/descriptors.json\n+```\n+\n+> [!NOTE]\n+> The `descriptors.json` file will be exported to the online machine (e.g. using a USB) to create a watch-only wallet. (This is an easier way to export the descriptors compared to manual export)\n+\n+### Create the online `watch_only_wallet`\n+\n+1. On the online machine, create an online watch-only wallet named `watch_only_wallet` without private keys (disable_private_keys=true) and should be blank with no keys or HD seed (blank=true).\n+- The `watch_only_wallet` wallet will be used to track transactions received to the `offline_wallet` and for creating PSBT transactions.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"watch_only_wallet\" disable_private_keys=true blank=true\n+{\n+  \"name\": \"watch_only_wallet\"\n+}\n+```\n+\n+2. Import the `offline_wallet` descriptors to the online `watch_only_wallet` using the `descriptors.json` file created on the offline wallet\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" importdescriptors \"$(cat /path/to/descriptors.json)\"\n+[\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  }\n+]\n+```\n+> [!NOTE]\n+> Importing the multiple descriptors from the `offline_wallet` provides the ability to generate a variety of address types by the [online] `watch_only_wallets`\n+\n+### Load Funds to the `offline_wallet`\n+\n+At this point, it's important to understand that both the `offline_wallet` and [online] `watch_only_wallets` share the same public keys. As a result, they generate the same addresses and have access to the same \"funds.\" However, to spend these funds, cooperation between both wallets is required since you need the private keys to sign the transactions which are only available on the `offline_wallet`.\n+\n+1. Generate an address for the `offline_wallet` to load funds. You can use either the `offline_wallet` or the [online] `watch_only_wallet` to generate this address, as they will produce the same address. For the sake of this guide, we'll use the [online] `watch_only_wallet` to generate the address, which can then be shared with others online.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" getnewaddress\n+tb1qtu5qgc6ddhmqm5yqjvhg83qgk2t4ewajg0h6yh\n+```\n+\n+2. Visit a faucet like https://signet.bc-2.jp to load funds into the generated address.\n+\n+3. Confirm the received funds (to the `offline_wallet`) using the online `watch_only_wallet`. Since both wallets are essentially the same, you can use the [online] `watch_only_wallet` to monitor and confirm that the transaction was broadcast and confirmed:\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" listunspent\n+[\n+  {\n+    \"txid\": \"0f3953dfc3eb8e753cd1633151837c5b9953992914ff32b7de08c47f1f29c762\",\n+    \"vout\": 1,\n+    \"address\": \"tb1qtu5qgc6ddhmqm5yqjvhg83qgk2t4ewajg0h6yh\",\n+    \"label\": \"\",\n+    \"scriptPubKey\": \"00145f2804634d6df60dd080932e83c408b2975cbbb2\",\n+    \"amount\": 0.01000000,\n+    \"confirmations\": 4,\n+    \"spendable\": true,\n+    \"solvable\": true,\n+    \"desc\": \"wpkh([306c734f/84h/1h/0h/0/0]025932ccee7590158f7e08bb36290d135d30a0b045163da896e1cd7645ec4223a9)#xytvyr4a\",\n+    \"parent_descs\": [\n+      \"wpkh([306c734f/84h/1h/0h]tpubDCJnY92ib4Zu3qd6wrBXEjG436tQdA2tDiJU2iSJYjkNS1darssPWKaBfojhjUF5vMLBcxbN2r93pmFMz2zyTEZuNx9JDo9rWqoHhATW3Uz/0/*)#7mh08dkg\"\n+    ],\n+    \"safe\": true\n+  }\n+]\n+```\n+\n+### Create and Export a PSBT Transaction\n+\n+0. Get a receiving address to send the funds to. In this tutorial, we'll be sending funds to the address `tb1q9k5w0nhnhyeh78snpxh0t5t7c3lxdeg3erez32`\n+\n+1. Create a PSBT transaction using the online `watch_only_wallet`, sending funds to the receiving address. (using `walletcreatefundedpsbt inputs[], outputs[address: amount]`)\n+- Export the psbt transaction to `funded_psbt.txt` for easy portability to the `offline_wallet` which will be signing the transaction.",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 123,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "c01707bf8bec3947ce4321cef75c52b6cab743cc",
      "in_reply_to_id": null,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n- Export the unsigned PSBT to a file `funded_psbt.txt` for easy portability to the `offline_wallet` for signing.\r\n```",
      "created_at": "2023-09-26T10:38:28Z",
      "updated_at": "2023-09-26T11:58:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1337005290",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1337005290"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 123,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1337006432",
      "pull_request_review_id": 1643840266,
      "id": 1337006432,
      "node_id": "PRRC_kwDOABII585PsRlg",
      "diff_hunk": "@@ -0,0 +1,198 @@\n+# Offline Signing Tutorial\n+\n+Welcome to this tutorial on how to sign transactions offline using PSBT (Partially Signed Bitcoin Transactions). This tutorial will guide you through the process of securely signing Bitcoin transactions using an offline wallet and an online watch-only wallet.\n+\n+## Overview\n+In this tutorial, we have two hosts: [offline] which is totally offline and without a copy of the blockchain and [online] which is a regular online node, both running Bitcoin 25.0\n+\n+In this example, we are going to create an `offline_wallet` on the [offline] host. We will then create a `watch_only_wallet` on the [online] host using descriptors imported from the `offline_wallet` and load funds to the wallet. we'll create a PSBT transaction using the  `watch_only_wallet`, sign it with the `offline_wallet` then broadcast the transaction using the [online] host\n+\n+### Requirements\n+- [jq](https://jqlang.github.io/jq/) installation - This tutorial uses jq to process JSON.\n+\n+> [!NOTE]\n+> Tested using Signet with a connected host machine and an offline docker container (representing the offline wallet) both running Signet, should also work with Regtest and Mainnet\n+\n+### Create and Prepare the `offline_wallet`\n+\n+1. On the offline machine, create an offline wallet named `offline_wallet`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"offline_wallet\"\n+{\n+  \"name\": \"offline_wallet\"\n+}\n+```\n+\n+2. Export the offline wallet descriptors to a JSON file named `descriptors.json`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" listdescriptors | jq -r '.descriptors' >> /path/to/descriptors.json\n+```\n+\n+> [!NOTE]\n+> The `descriptors.json` file will be exported to the online machine (e.g. using a USB) to create a watch-only wallet. (This is an easier way to export the descriptors compared to manual export)\n+\n+### Create the online `watch_only_wallet`\n+\n+1. On the online machine, create an online watch-only wallet named `watch_only_wallet` without private keys (disable_private_keys=true) and should be blank with no keys or HD seed (blank=true).\n+- The `watch_only_wallet` wallet will be used to track transactions received to the `offline_wallet` and for creating PSBT transactions.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"watch_only_wallet\" disable_private_keys=true blank=true\n+{\n+  \"name\": \"watch_only_wallet\"\n+}\n+```\n+\n+2. Import the `offline_wallet` descriptors to the online `watch_only_wallet` using the `descriptors.json` file created on the offline wallet\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" importdescriptors \"$(cat /path/to/descriptors.json)\"\n+[\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  }\n+]\n+```\n+> [!NOTE]\n+> Importing the multiple descriptors from the `offline_wallet` provides the ability to generate a variety of address types by the [online] `watch_only_wallets`\n+\n+### Load Funds to the `offline_wallet`\n+\n+At this point, it's important to understand that both the `offline_wallet` and [online] `watch_only_wallets` share the same public keys. As a result, they generate the same addresses and have access to the same \"funds.\" However, to spend these funds, cooperation between both wallets is required since you need the private keys to sign the transactions which are only available on the `offline_wallet`.\n+\n+1. Generate an address for the `offline_wallet` to load funds. You can use either the `offline_wallet` or the [online] `watch_only_wallet` to generate this address, as they will produce the same address. For the sake of this guide, we'll use the [online] `watch_only_wallet` to generate the address, which can then be shared with others online.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" getnewaddress\n+tb1qtu5qgc6ddhmqm5yqjvhg83qgk2t4ewajg0h6yh\n+```\n+\n+2. Visit a faucet like https://signet.bc-2.jp to load funds into the generated address.\n+\n+3. Confirm the received funds (to the `offline_wallet`) using the online `watch_only_wallet`. Since both wallets are essentially the same, you can use the [online] `watch_only_wallet` to monitor and confirm that the transaction was broadcast and confirmed:\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" listunspent\n+[\n+  {\n+    \"txid\": \"0f3953dfc3eb8e753cd1633151837c5b9953992914ff32b7de08c47f1f29c762\",\n+    \"vout\": 1,\n+    \"address\": \"tb1qtu5qgc6ddhmqm5yqjvhg83qgk2t4ewajg0h6yh\",\n+    \"label\": \"\",\n+    \"scriptPubKey\": \"00145f2804634d6df60dd080932e83c408b2975cbbb2\",\n+    \"amount\": 0.01000000,\n+    \"confirmations\": 4,\n+    \"spendable\": true,\n+    \"solvable\": true,\n+    \"desc\": \"wpkh([306c734f/84h/1h/0h/0/0]025932ccee7590158f7e08bb36290d135d30a0b045163da896e1cd7645ec4223a9)#xytvyr4a\",\n+    \"parent_descs\": [\n+      \"wpkh([306c734f/84h/1h/0h]tpubDCJnY92ib4Zu3qd6wrBXEjG436tQdA2tDiJU2iSJYjkNS1darssPWKaBfojhjUF5vMLBcxbN2r93pmFMz2zyTEZuNx9JDo9rWqoHhATW3Uz/0/*)#7mh08dkg\"\n+    ],\n+    \"safe\": true\n+  }\n+]\n+```\n+\n+### Create and Export a PSBT Transaction\n+\n+0. Get a receiving address to send the funds to. In this tutorial, we'll be sending funds to the address `tb1q9k5w0nhnhyeh78snpxh0t5t7c3lxdeg3erez32`\n+\n+1. Create a PSBT transaction using the online `watch_only_wallet`, sending funds to the receiving address. (using `walletcreatefundedpsbt inputs[], outputs[address: amount]`)\n+- Export the psbt transaction to `funded_psbt.txt` for easy portability to the `offline_wallet` which will be signing the transaction.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" walletcreatefundedpsbt '[]' '[{\"tb1q9k5w0nhnhyeh78snpxh0t5t7c3lxdeg3erez32\": 0.009}]' | jq -r '.psbt' >> /path/to/funded_psbt.txt\n+[online]$ cat /path/to/funded_psbt.txt\n+cHNidP8BAHECAAAAAWLHKR9/xAjetzL/FCmZU5lbfINRMWPRPHWO68PfUzkPAQAAAAD9////AoA4AQAAAAAAFgAULajnzvO5M38eEwmu9dF+xH5m5RGs0g0AAAAAABYAFMaT0f/Wp2DCZzL6dkJ3GhWj4Y9vAAAAAAABAHECAAAAAY+dRPEBrGopkw4ugSzS9npzJDEIrE/bq1XXI0KbYnYrAQAAAAD+////ArKaXgAAAAAAFgAUwEc4LdoxSjbWo/2Ue+HS+QjwfiBAQg8AAAAAABYAFF8oBGNNbfYN0ICTLoPECLKXXLuyYW8CAAEBH0BCDwAAAAAAFgAUXygEY01t9g3QgJMug8QIspdcu7IiBgJZMszudZAVj34IuzYpDRNdMKCwRRY9qJbhzXZF7EIjqRgwbHNPVAAAgAEAAIAAAACAAAAAAAAAAAAAACICA7BlBnyAR4F2UkKuSX9MFhYCsn6j//z9i7lHDm1O0CU0GDBsc09UAACAAQAAgAAAAIABAAAAAAAAAAA=\n+```\n+\n+### Decode and Analyze the PSBT Transaction\n+\n+1. Decode and analyze the PSBT transaction on the `offline_wallet` using the `funded_psbt.txt` file.",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 133,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "c01707bf8bec3947ce4321cef75c52b6cab743cc",
      "in_reply_to_id": null,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n1. Decode and analyze the unsigned PSBT on the `offline_wallet` using the `funded_psbt.txt` file.\r\n```",
      "created_at": "2023-09-26T10:39:34Z",
      "updated_at": "2023-09-26T11:58:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1337006432",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1337006432"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 133,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1337006689",
      "pull_request_review_id": 1643840266,
      "id": 1337006689,
      "node_id": "PRRC_kwDOABII585PsRph",
      "diff_hunk": "@@ -0,0 +1,198 @@\n+# Offline Signing Tutorial\n+\n+Welcome to this tutorial on how to sign transactions offline using PSBT (Partially Signed Bitcoin Transactions). This tutorial will guide you through the process of securely signing Bitcoin transactions using an offline wallet and an online watch-only wallet.\n+\n+## Overview\n+In this tutorial, we have two hosts: [offline] which is totally offline and without a copy of the blockchain and [online] which is a regular online node, both running Bitcoin 25.0\n+\n+In this example, we are going to create an `offline_wallet` on the [offline] host. We will then create a `watch_only_wallet` on the [online] host using descriptors imported from the `offline_wallet` and load funds to the wallet. we'll create a PSBT transaction using the  `watch_only_wallet`, sign it with the `offline_wallet` then broadcast the transaction using the [online] host\n+\n+### Requirements\n+- [jq](https://jqlang.github.io/jq/) installation - This tutorial uses jq to process JSON.\n+\n+> [!NOTE]\n+> Tested using Signet with a connected host machine and an offline docker container (representing the offline wallet) both running Signet, should also work with Regtest and Mainnet\n+\n+### Create and Prepare the `offline_wallet`\n+\n+1. On the offline machine, create an offline wallet named `offline_wallet`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"offline_wallet\"\n+{\n+  \"name\": \"offline_wallet\"\n+}\n+```\n+\n+2. Export the offline wallet descriptors to a JSON file named `descriptors.json`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" listdescriptors | jq -r '.descriptors' >> /path/to/descriptors.json\n+```\n+\n+> [!NOTE]\n+> The `descriptors.json` file will be exported to the online machine (e.g. using a USB) to create a watch-only wallet. (This is an easier way to export the descriptors compared to manual export)\n+\n+### Create the online `watch_only_wallet`\n+\n+1. On the online machine, create an online watch-only wallet named `watch_only_wallet` without private keys (disable_private_keys=true) and should be blank with no keys or HD seed (blank=true).\n+- The `watch_only_wallet` wallet will be used to track transactions received to the `offline_wallet` and for creating PSBT transactions.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"watch_only_wallet\" disable_private_keys=true blank=true\n+{\n+  \"name\": \"watch_only_wallet\"\n+}\n+```\n+\n+2. Import the `offline_wallet` descriptors to the online `watch_only_wallet` using the `descriptors.json` file created on the offline wallet\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" importdescriptors \"$(cat /path/to/descriptors.json)\"\n+[\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  }\n+]\n+```\n+> [!NOTE]\n+> Importing the multiple descriptors from the `offline_wallet` provides the ability to generate a variety of address types by the [online] `watch_only_wallets`\n+\n+### Load Funds to the `offline_wallet`\n+\n+At this point, it's important to understand that both the `offline_wallet` and [online] `watch_only_wallets` share the same public keys. As a result, they generate the same addresses and have access to the same \"funds.\" However, to spend these funds, cooperation between both wallets is required since you need the private keys to sign the transactions which are only available on the `offline_wallet`.\n+\n+1. Generate an address for the `offline_wallet` to load funds. You can use either the `offline_wallet` or the [online] `watch_only_wallet` to generate this address, as they will produce the same address. For the sake of this guide, we'll use the [online] `watch_only_wallet` to generate the address, which can then be shared with others online.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" getnewaddress\n+tb1qtu5qgc6ddhmqm5yqjvhg83qgk2t4ewajg0h6yh\n+```\n+\n+2. Visit a faucet like https://signet.bc-2.jp to load funds into the generated address.\n+\n+3. Confirm the received funds (to the `offline_wallet`) using the online `watch_only_wallet`. Since both wallets are essentially the same, you can use the [online] `watch_only_wallet` to monitor and confirm that the transaction was broadcast and confirmed:\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" listunspent\n+[\n+  {\n+    \"txid\": \"0f3953dfc3eb8e753cd1633151837c5b9953992914ff32b7de08c47f1f29c762\",\n+    \"vout\": 1,\n+    \"address\": \"tb1qtu5qgc6ddhmqm5yqjvhg83qgk2t4ewajg0h6yh\",\n+    \"label\": \"\",\n+    \"scriptPubKey\": \"00145f2804634d6df60dd080932e83c408b2975cbbb2\",\n+    \"amount\": 0.01000000,\n+    \"confirmations\": 4,\n+    \"spendable\": true,\n+    \"solvable\": true,\n+    \"desc\": \"wpkh([306c734f/84h/1h/0h/0/0]025932ccee7590158f7e08bb36290d135d30a0b045163da896e1cd7645ec4223a9)#xytvyr4a\",\n+    \"parent_descs\": [\n+      \"wpkh([306c734f/84h/1h/0h]tpubDCJnY92ib4Zu3qd6wrBXEjG436tQdA2tDiJU2iSJYjkNS1darssPWKaBfojhjUF5vMLBcxbN2r93pmFMz2zyTEZuNx9JDo9rWqoHhATW3Uz/0/*)#7mh08dkg\"\n+    ],\n+    \"safe\": true\n+  }\n+]\n+```\n+\n+### Create and Export a PSBT Transaction\n+\n+0. Get a receiving address to send the funds to. In this tutorial, we'll be sending funds to the address `tb1q9k5w0nhnhyeh78snpxh0t5t7c3lxdeg3erez32`\n+\n+1. Create a PSBT transaction using the online `watch_only_wallet`, sending funds to the receiving address. (using `walletcreatefundedpsbt inputs[], outputs[address: amount]`)\n+- Export the psbt transaction to `funded_psbt.txt` for easy portability to the `offline_wallet` which will be signing the transaction.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" walletcreatefundedpsbt '[]' '[{\"tb1q9k5w0nhnhyeh78snpxh0t5t7c3lxdeg3erez32\": 0.009}]' | jq -r '.psbt' >> /path/to/funded_psbt.txt\n+[online]$ cat /path/to/funded_psbt.txt\n+cHNidP8BAHECAAAAAWLHKR9/xAjetzL/FCmZU5lbfINRMWPRPHWO68PfUzkPAQAAAAD9////AoA4AQAAAAAAFgAULajnzvO5M38eEwmu9dF+xH5m5RGs0g0AAAAAABYAFMaT0f/Wp2DCZzL6dkJ3GhWj4Y9vAAAAAAABAHECAAAAAY+dRPEBrGopkw4ugSzS9npzJDEIrE/bq1XXI0KbYnYrAQAAAAD+////ArKaXgAAAAAAFgAUwEc4LdoxSjbWo/2Ue+HS+QjwfiBAQg8AAAAAABYAFF8oBGNNbfYN0ICTLoPECLKXXLuyYW8CAAEBH0BCDwAAAAAAFgAUXygEY01t9g3QgJMug8QIspdcu7IiBgJZMszudZAVj34IuzYpDRNdMKCwRRY9qJbhzXZF7EIjqRgwbHNPVAAAgAEAAIAAAACAAAAAAAAAAAAAACICA7BlBnyAR4F2UkKuSX9MFhYCsn6j//z9i7lHDm1O0CU0GDBsc09UAACAAQAAgAAAAIABAAAAAAAAAAA=\n+```\n+\n+### Decode and Analyze the PSBT Transaction",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 131,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "c01707bf8bec3947ce4321cef75c52b6cab743cc",
      "in_reply_to_id": null,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n### Decode and Analyze the Unsigned PSBT\r\n```",
      "created_at": "2023-09-26T10:39:49Z",
      "updated_at": "2023-09-26T11:58:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1337006689",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1337006689"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 131,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1337007730",
      "pull_request_review_id": 1643840266,
      "id": 1337007730,
      "node_id": "PRRC_kwDOABII585PsR5y",
      "diff_hunk": "@@ -0,0 +1,198 @@\n+# Offline Signing Tutorial\n+\n+Welcome to this tutorial on how to sign transactions offline using PSBT (Partially Signed Bitcoin Transactions). This tutorial will guide you through the process of securely signing Bitcoin transactions using an offline wallet and an online watch-only wallet.\n+\n+## Overview\n+In this tutorial, we have two hosts: [offline] which is totally offline and without a copy of the blockchain and [online] which is a regular online node, both running Bitcoin 25.0\n+\n+In this example, we are going to create an `offline_wallet` on the [offline] host. We will then create a `watch_only_wallet` on the [online] host using descriptors imported from the `offline_wallet` and load funds to the wallet. we'll create a PSBT transaction using the  `watch_only_wallet`, sign it with the `offline_wallet` then broadcast the transaction using the [online] host\n+\n+### Requirements\n+- [jq](https://jqlang.github.io/jq/) installation - This tutorial uses jq to process JSON.\n+\n+> [!NOTE]\n+> Tested using Signet with a connected host machine and an offline docker container (representing the offline wallet) both running Signet, should also work with Regtest and Mainnet\n+\n+### Create and Prepare the `offline_wallet`\n+\n+1. On the offline machine, create an offline wallet named `offline_wallet`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"offline_wallet\"\n+{\n+  \"name\": \"offline_wallet\"\n+}\n+```\n+\n+2. Export the offline wallet descriptors to a JSON file named `descriptors.json`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" listdescriptors | jq -r '.descriptors' >> /path/to/descriptors.json\n+```\n+\n+> [!NOTE]\n+> The `descriptors.json` file will be exported to the online machine (e.g. using a USB) to create a watch-only wallet. (This is an easier way to export the descriptors compared to manual export)\n+\n+### Create the online `watch_only_wallet`\n+\n+1. On the online machine, create an online watch-only wallet named `watch_only_wallet` without private keys (disable_private_keys=true) and should be blank with no keys or HD seed (blank=true).\n+- The `watch_only_wallet` wallet will be used to track transactions received to the `offline_wallet` and for creating PSBT transactions.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"watch_only_wallet\" disable_private_keys=true blank=true\n+{\n+  \"name\": \"watch_only_wallet\"\n+}\n+```\n+\n+2. Import the `offline_wallet` descriptors to the online `watch_only_wallet` using the `descriptors.json` file created on the offline wallet\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" importdescriptors \"$(cat /path/to/descriptors.json)\"\n+[\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  }\n+]\n+```\n+> [!NOTE]\n+> Importing the multiple descriptors from the `offline_wallet` provides the ability to generate a variety of address types by the [online] `watch_only_wallets`\n+\n+### Load Funds to the `offline_wallet`\n+\n+At this point, it's important to understand that both the `offline_wallet` and [online] `watch_only_wallets` share the same public keys. As a result, they generate the same addresses and have access to the same \"funds.\" However, to spend these funds, cooperation between both wallets is required since you need the private keys to sign the transactions which are only available on the `offline_wallet`.\n+\n+1. Generate an address for the `offline_wallet` to load funds. You can use either the `offline_wallet` or the [online] `watch_only_wallet` to generate this address, as they will produce the same address. For the sake of this guide, we'll use the [online] `watch_only_wallet` to generate the address, which can then be shared with others online.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" getnewaddress\n+tb1qtu5qgc6ddhmqm5yqjvhg83qgk2t4ewajg0h6yh\n+```\n+\n+2. Visit a faucet like https://signet.bc-2.jp to load funds into the generated address.\n+\n+3. Confirm the received funds (to the `offline_wallet`) using the online `watch_only_wallet`. Since both wallets are essentially the same, you can use the [online] `watch_only_wallet` to monitor and confirm that the transaction was broadcast and confirmed:\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" listunspent\n+[\n+  {\n+    \"txid\": \"0f3953dfc3eb8e753cd1633151837c5b9953992914ff32b7de08c47f1f29c762\",\n+    \"vout\": 1,\n+    \"address\": \"tb1qtu5qgc6ddhmqm5yqjvhg83qgk2t4ewajg0h6yh\",\n+    \"label\": \"\",\n+    \"scriptPubKey\": \"00145f2804634d6df60dd080932e83c408b2975cbbb2\",\n+    \"amount\": 0.01000000,\n+    \"confirmations\": 4,\n+    \"spendable\": true,\n+    \"solvable\": true,\n+    \"desc\": \"wpkh([306c734f/84h/1h/0h/0/0]025932ccee7590158f7e08bb36290d135d30a0b045163da896e1cd7645ec4223a9)#xytvyr4a\",\n+    \"parent_descs\": [\n+      \"wpkh([306c734f/84h/1h/0h]tpubDCJnY92ib4Zu3qd6wrBXEjG436tQdA2tDiJU2iSJYjkNS1darssPWKaBfojhjUF5vMLBcxbN2r93pmFMz2zyTEZuNx9JDo9rWqoHhATW3Uz/0/*)#7mh08dkg\"\n+    ],\n+    \"safe\": true\n+  }\n+]\n+```\n+\n+### Create and Export a PSBT Transaction\n+\n+0. Get a receiving address to send the funds to. In this tutorial, we'll be sending funds to the address `tb1q9k5w0nhnhyeh78snpxh0t5t7c3lxdeg3erez32`\n+\n+1. Create a PSBT transaction using the online `watch_only_wallet`, sending funds to the receiving address. (using `walletcreatefundedpsbt inputs[], outputs[address: amount]`)\n+- Export the psbt transaction to `funded_psbt.txt` for easy portability to the `offline_wallet` which will be signing the transaction.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" walletcreatefundedpsbt '[]' '[{\"tb1q9k5w0nhnhyeh78snpxh0t5t7c3lxdeg3erez32\": 0.009}]' | jq -r '.psbt' >> /path/to/funded_psbt.txt\n+[online]$ cat /path/to/funded_psbt.txt\n+cHNidP8BAHECAAAAAWLHKR9/xAjetzL/FCmZU5lbfINRMWPRPHWO68PfUzkPAQAAAAD9////AoA4AQAAAAAAFgAULajnzvO5M38eEwmu9dF+xH5m5RGs0g0AAAAAABYAFMaT0f/Wp2DCZzL6dkJ3GhWj4Y9vAAAAAAABAHECAAAAAY+dRPEBrGopkw4ugSzS9npzJDEIrE/bq1XXI0KbYnYrAQAAAAD+////ArKaXgAAAAAAFgAUwEc4LdoxSjbWo/2Ue+HS+QjwfiBAQg8AAAAAABYAFF8oBGNNbfYN0ICTLoPECLKXXLuyYW8CAAEBH0BCDwAAAAAAFgAUXygEY01t9g3QgJMug8QIspdcu7IiBgJZMszudZAVj34IuzYpDRNdMKCwRRY9qJbhzXZF7EIjqRgwbHNPVAAAgAEAAIAAAACAAAAAAAAAAAAAACICA7BlBnyAR4F2UkKuSX9MFhYCsn6j//z9i7lHDm1O0CU0GDBsc09UAACAAQAAgAAAAIABAAAAAAAAAAA=\n+```\n+\n+### Decode and Analyze the PSBT Transaction\n+\n+1. Decode and analyze the PSBT transaction on the `offline_wallet` using the `funded_psbt.txt` file.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet decodepsbt $(cat /path/to/funded_psbt.txt)\n+{\n+    ...\n+}\n+[offline]$ ./src/bitcoin-cli -signet analyzepsbt $(cat /path/to/funded_psbt.txt)\n+{\n+  \"inputs\": [\n+    {\n+      \"has_utxo\": true,\n+      \"is_final\": false,\n+      \"next\": \"signer\",\n+      \"missing\": {\n+        \"signatures\": [\n+          \"5f2804634d6df60dd080932e83c408b2975cbbb2\"\n+        ]\n+      }\n+    }\n+  ],\n+  \"estimated_vsize\": 141,\n+  \"estimated_feerate\": 0.00100000,\n+  \"fee\": 0.00014100,\n+  \"next\": \"signer\"\n+}\n+```\n+\n+### Process and Sign the PSBT Transaction",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 161,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "c01707bf8bec3947ce4321cef75c52b6cab743cc",
      "in_reply_to_id": null,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n### Process and Sign the PSBT\r\n```",
      "created_at": "2023-09-26T10:40:52Z",
      "updated_at": "2023-09-26T11:58:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1337007730",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1337007730"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 161,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1337009652",
      "pull_request_review_id": 1643840266,
      "id": 1337009652,
      "node_id": "PRRC_kwDOABII585PsSX0",
      "diff_hunk": "@@ -0,0 +1,198 @@\n+# Offline Signing Tutorial\n+\n+Welcome to this tutorial on how to sign transactions offline using PSBT (Partially Signed Bitcoin Transactions). This tutorial will guide you through the process of securely signing Bitcoin transactions using an offline wallet and an online watch-only wallet.\n+\n+## Overview\n+In this tutorial, we have two hosts: [offline] which is totally offline and without a copy of the blockchain and [online] which is a regular online node, both running Bitcoin 25.0\n+\n+In this example, we are going to create an `offline_wallet` on the [offline] host. We will then create a `watch_only_wallet` on the [online] host using descriptors imported from the `offline_wallet` and load funds to the wallet. we'll create a PSBT transaction using the  `watch_only_wallet`, sign it with the `offline_wallet` then broadcast the transaction using the [online] host\n+\n+### Requirements\n+- [jq](https://jqlang.github.io/jq/) installation - This tutorial uses jq to process JSON.\n+\n+> [!NOTE]\n+> Tested using Signet with a connected host machine and an offline docker container (representing the offline wallet) both running Signet, should also work with Regtest and Mainnet\n+\n+### Create and Prepare the `offline_wallet`\n+\n+1. On the offline machine, create an offline wallet named `offline_wallet`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"offline_wallet\"\n+{\n+  \"name\": \"offline_wallet\"\n+}\n+```\n+\n+2. Export the offline wallet descriptors to a JSON file named `descriptors.json`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" listdescriptors | jq -r '.descriptors' >> /path/to/descriptors.json\n+```\n+\n+> [!NOTE]\n+> The `descriptors.json` file will be exported to the online machine (e.g. using a USB) to create a watch-only wallet. (This is an easier way to export the descriptors compared to manual export)\n+\n+### Create the online `watch_only_wallet`\n+\n+1. On the online machine, create an online watch-only wallet named `watch_only_wallet` without private keys (disable_private_keys=true) and should be blank with no keys or HD seed (blank=true).\n+- The `watch_only_wallet` wallet will be used to track transactions received to the `offline_wallet` and for creating PSBT transactions.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"watch_only_wallet\" disable_private_keys=true blank=true\n+{\n+  \"name\": \"watch_only_wallet\"\n+}\n+```\n+\n+2. Import the `offline_wallet` descriptors to the online `watch_only_wallet` using the `descriptors.json` file created on the offline wallet\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" importdescriptors \"$(cat /path/to/descriptors.json)\"\n+[\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  }\n+]\n+```\n+> [!NOTE]\n+> Importing the multiple descriptors from the `offline_wallet` provides the ability to generate a variety of address types by the [online] `watch_only_wallets`\n+\n+### Load Funds to the `offline_wallet`\n+\n+At this point, it's important to understand that both the `offline_wallet` and [online] `watch_only_wallets` share the same public keys. As a result, they generate the same addresses and have access to the same \"funds.\" However, to spend these funds, cooperation between both wallets is required since you need the private keys to sign the transactions which are only available on the `offline_wallet`.\n+\n+1. Generate an address for the `offline_wallet` to load funds. You can use either the `offline_wallet` or the [online] `watch_only_wallet` to generate this address, as they will produce the same address. For the sake of this guide, we'll use the [online] `watch_only_wallet` to generate the address, which can then be shared with others online.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" getnewaddress\n+tb1qtu5qgc6ddhmqm5yqjvhg83qgk2t4ewajg0h6yh\n+```\n+\n+2. Visit a faucet like https://signet.bc-2.jp to load funds into the generated address.\n+\n+3. Confirm the received funds (to the `offline_wallet`) using the online `watch_only_wallet`. Since both wallets are essentially the same, you can use the [online] `watch_only_wallet` to monitor and confirm that the transaction was broadcast and confirmed:\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" listunspent\n+[\n+  {\n+    \"txid\": \"0f3953dfc3eb8e753cd1633151837c5b9953992914ff32b7de08c47f1f29c762\",\n+    \"vout\": 1,\n+    \"address\": \"tb1qtu5qgc6ddhmqm5yqjvhg83qgk2t4ewajg0h6yh\",\n+    \"label\": \"\",\n+    \"scriptPubKey\": \"00145f2804634d6df60dd080932e83c408b2975cbbb2\",\n+    \"amount\": 0.01000000,\n+    \"confirmations\": 4,\n+    \"spendable\": true,\n+    \"solvable\": true,\n+    \"desc\": \"wpkh([306c734f/84h/1h/0h/0/0]025932ccee7590158f7e08bb36290d135d30a0b045163da896e1cd7645ec4223a9)#xytvyr4a\",\n+    \"parent_descs\": [\n+      \"wpkh([306c734f/84h/1h/0h]tpubDCJnY92ib4Zu3qd6wrBXEjG436tQdA2tDiJU2iSJYjkNS1darssPWKaBfojhjUF5vMLBcxbN2r93pmFMz2zyTEZuNx9JDo9rWqoHhATW3Uz/0/*)#7mh08dkg\"\n+    ],\n+    \"safe\": true\n+  }\n+]\n+```\n+\n+### Create and Export a PSBT Transaction\n+\n+0. Get a receiving address to send the funds to. In this tutorial, we'll be sending funds to the address `tb1q9k5w0nhnhyeh78snpxh0t5t7c3lxdeg3erez32`\n+\n+1. Create a PSBT transaction using the online `watch_only_wallet`, sending funds to the receiving address. (using `walletcreatefundedpsbt inputs[], outputs[address: amount]`)\n+- Export the psbt transaction to `funded_psbt.txt` for easy portability to the `offline_wallet` which will be signing the transaction.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" walletcreatefundedpsbt '[]' '[{\"tb1q9k5w0nhnhyeh78snpxh0t5t7c3lxdeg3erez32\": 0.009}]' | jq -r '.psbt' >> /path/to/funded_psbt.txt\n+[online]$ cat /path/to/funded_psbt.txt\n+cHNidP8BAHECAAAAAWLHKR9/xAjetzL/FCmZU5lbfINRMWPRPHWO68PfUzkPAQAAAAD9////AoA4AQAAAAAAFgAULajnzvO5M38eEwmu9dF+xH5m5RGs0g0AAAAAABYAFMaT0f/Wp2DCZzL6dkJ3GhWj4Y9vAAAAAAABAHECAAAAAY+dRPEBrGopkw4ugSzS9npzJDEIrE/bq1XXI0KbYnYrAQAAAAD+////ArKaXgAAAAAAFgAUwEc4LdoxSjbWo/2Ue+HS+QjwfiBAQg8AAAAAABYAFF8oBGNNbfYN0ICTLoPECLKXXLuyYW8CAAEBH0BCDwAAAAAAFgAUXygEY01t9g3QgJMug8QIspdcu7IiBgJZMszudZAVj34IuzYpDRNdMKCwRRY9qJbhzXZF7EIjqRgwbHNPVAAAgAEAAIAAAACAAAAAAAAAAAAAACICA7BlBnyAR4F2UkKuSX9MFhYCsn6j//z9i7lHDm1O0CU0GDBsc09UAACAAQAAgAAAAIABAAAAAAAAAAA=\n+```\n+\n+### Decode and Analyze the PSBT Transaction\n+\n+1. Decode and analyze the PSBT transaction on the `offline_wallet` using the `funded_psbt.txt` file.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet decodepsbt $(cat /path/to/funded_psbt.txt)\n+{\n+    ...\n+}\n+[offline]$ ./src/bitcoin-cli -signet analyzepsbt $(cat /path/to/funded_psbt.txt)\n+{\n+  \"inputs\": [\n+    {\n+      \"has_utxo\": true,\n+      \"is_final\": false,\n+      \"next\": \"signer\",\n+      \"missing\": {\n+        \"signatures\": [\n+          \"5f2804634d6df60dd080932e83c408b2975cbbb2\"\n+        ]\n+      }\n+    }\n+  ],\n+  \"estimated_vsize\": 141,\n+  \"estimated_feerate\": 0.00100000,\n+  \"fee\": 0.00014100,\n+  \"next\": \"signer\"\n+}\n+```\n+\n+### Process and Sign the PSBT Transaction",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 161,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "c01707bf8bec3947ce4321cef75c52b6cab743cc",
      "in_reply_to_id": 1337007730,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've been changing these as the `T` is for Transaction :P",
      "created_at": "2023-09-26T10:42:38Z",
      "updated_at": "2023-09-26T11:58:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1337009652",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1337009652"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 161,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1337010166",
      "pull_request_review_id": 1643840266,
      "id": 1337010166,
      "node_id": "PRRC_kwDOABII585PsSf2",
      "diff_hunk": "@@ -0,0 +1,198 @@\n+# Offline Signing Tutorial\n+\n+Welcome to this tutorial on how to sign transactions offline using PSBT (Partially Signed Bitcoin Transactions). This tutorial will guide you through the process of securely signing Bitcoin transactions using an offline wallet and an online watch-only wallet.\n+\n+## Overview\n+In this tutorial, we have two hosts: [offline] which is totally offline and without a copy of the blockchain and [online] which is a regular online node, both running Bitcoin 25.0\n+\n+In this example, we are going to create an `offline_wallet` on the [offline] host. We will then create a `watch_only_wallet` on the [online] host using descriptors imported from the `offline_wallet` and load funds to the wallet. we'll create a PSBT transaction using the  `watch_only_wallet`, sign it with the `offline_wallet` then broadcast the transaction using the [online] host\n+\n+### Requirements\n+- [jq](https://jqlang.github.io/jq/) installation - This tutorial uses jq to process JSON.\n+\n+> [!NOTE]\n+> Tested using Signet with a connected host machine and an offline docker container (representing the offline wallet) both running Signet, should also work with Regtest and Mainnet\n+\n+### Create and Prepare the `offline_wallet`\n+\n+1. On the offline machine, create an offline wallet named `offline_wallet`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"offline_wallet\"\n+{\n+  \"name\": \"offline_wallet\"\n+}\n+```\n+\n+2. Export the offline wallet descriptors to a JSON file named `descriptors.json`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" listdescriptors | jq -r '.descriptors' >> /path/to/descriptors.json\n+```\n+\n+> [!NOTE]\n+> The `descriptors.json` file will be exported to the online machine (e.g. using a USB) to create a watch-only wallet. (This is an easier way to export the descriptors compared to manual export)\n+\n+### Create the online `watch_only_wallet`\n+\n+1. On the online machine, create an online watch-only wallet named `watch_only_wallet` without private keys (disable_private_keys=true) and should be blank with no keys or HD seed (blank=true).\n+- The `watch_only_wallet` wallet will be used to track transactions received to the `offline_wallet` and for creating PSBT transactions.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"watch_only_wallet\" disable_private_keys=true blank=true\n+{\n+  \"name\": \"watch_only_wallet\"\n+}\n+```\n+\n+2. Import the `offline_wallet` descriptors to the online `watch_only_wallet` using the `descriptors.json` file created on the offline wallet\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" importdescriptors \"$(cat /path/to/descriptors.json)\"\n+[\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  }\n+]\n+```\n+> [!NOTE]\n+> Importing the multiple descriptors from the `offline_wallet` provides the ability to generate a variety of address types by the [online] `watch_only_wallets`\n+\n+### Load Funds to the `offline_wallet`\n+\n+At this point, it's important to understand that both the `offline_wallet` and [online] `watch_only_wallets` share the same public keys. As a result, they generate the same addresses and have access to the same \"funds.\" However, to spend these funds, cooperation between both wallets is required since you need the private keys to sign the transactions which are only available on the `offline_wallet`.\n+\n+1. Generate an address for the `offline_wallet` to load funds. You can use either the `offline_wallet` or the [online] `watch_only_wallet` to generate this address, as they will produce the same address. For the sake of this guide, we'll use the [online] `watch_only_wallet` to generate the address, which can then be shared with others online.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" getnewaddress\n+tb1qtu5qgc6ddhmqm5yqjvhg83qgk2t4ewajg0h6yh\n+```\n+\n+2. Visit a faucet like https://signet.bc-2.jp to load funds into the generated address.\n+\n+3. Confirm the received funds (to the `offline_wallet`) using the online `watch_only_wallet`. Since both wallets are essentially the same, you can use the [online] `watch_only_wallet` to monitor and confirm that the transaction was broadcast and confirmed:\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" listunspent\n+[\n+  {\n+    \"txid\": \"0f3953dfc3eb8e753cd1633151837c5b9953992914ff32b7de08c47f1f29c762\",\n+    \"vout\": 1,\n+    \"address\": \"tb1qtu5qgc6ddhmqm5yqjvhg83qgk2t4ewajg0h6yh\",\n+    \"label\": \"\",\n+    \"scriptPubKey\": \"00145f2804634d6df60dd080932e83c408b2975cbbb2\",\n+    \"amount\": 0.01000000,\n+    \"confirmations\": 4,\n+    \"spendable\": true,\n+    \"solvable\": true,\n+    \"desc\": \"wpkh([306c734f/84h/1h/0h/0/0]025932ccee7590158f7e08bb36290d135d30a0b045163da896e1cd7645ec4223a9)#xytvyr4a\",\n+    \"parent_descs\": [\n+      \"wpkh([306c734f/84h/1h/0h]tpubDCJnY92ib4Zu3qd6wrBXEjG436tQdA2tDiJU2iSJYjkNS1darssPWKaBfojhjUF5vMLBcxbN2r93pmFMz2zyTEZuNx9JDo9rWqoHhATW3Uz/0/*)#7mh08dkg\"\n+    ],\n+    \"safe\": true\n+  }\n+]\n+```\n+\n+### Create and Export a PSBT Transaction\n+\n+0. Get a receiving address to send the funds to. In this tutorial, we'll be sending funds to the address `tb1q9k5w0nhnhyeh78snpxh0t5t7c3lxdeg3erez32`\n+\n+1. Create a PSBT transaction using the online `watch_only_wallet`, sending funds to the receiving address. (using `walletcreatefundedpsbt inputs[], outputs[address: amount]`)\n+- Export the psbt transaction to `funded_psbt.txt` for easy portability to the `offline_wallet` which will be signing the transaction.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" walletcreatefundedpsbt '[]' '[{\"tb1q9k5w0nhnhyeh78snpxh0t5t7c3lxdeg3erez32\": 0.009}]' | jq -r '.psbt' >> /path/to/funded_psbt.txt\n+[online]$ cat /path/to/funded_psbt.txt\n+cHNidP8BAHECAAAAAWLHKR9/xAjetzL/FCmZU5lbfINRMWPRPHWO68PfUzkPAQAAAAD9////AoA4AQAAAAAAFgAULajnzvO5M38eEwmu9dF+xH5m5RGs0g0AAAAAABYAFMaT0f/Wp2DCZzL6dkJ3GhWj4Y9vAAAAAAABAHECAAAAAY+dRPEBrGopkw4ugSzS9npzJDEIrE/bq1XXI0KbYnYrAQAAAAD+////ArKaXgAAAAAAFgAUwEc4LdoxSjbWo/2Ue+HS+QjwfiBAQg8AAAAAABYAFF8oBGNNbfYN0ICTLoPECLKXXLuyYW8CAAEBH0BCDwAAAAAAFgAUXygEY01t9g3QgJMug8QIspdcu7IiBgJZMszudZAVj34IuzYpDRNdMKCwRRY9qJbhzXZF7EIjqRgwbHNPVAAAgAEAAIAAAACAAAAAAAAAAAAAACICA7BlBnyAR4F2UkKuSX9MFhYCsn6j//z9i7lHDm1O0CU0GDBsc09UAACAAQAAgAAAAIABAAAAAAAAAAA=\n+```\n+\n+### Decode and Analyze the PSBT Transaction\n+\n+1. Decode and analyze the PSBT transaction on the `offline_wallet` using the `funded_psbt.txt` file.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet decodepsbt $(cat /path/to/funded_psbt.txt)\n+{\n+    ...\n+}\n+[offline]$ ./src/bitcoin-cli -signet analyzepsbt $(cat /path/to/funded_psbt.txt)\n+{\n+  \"inputs\": [\n+    {\n+      \"has_utxo\": true,\n+      \"is_final\": false,\n+      \"next\": \"signer\",\n+      \"missing\": {\n+        \"signatures\": [\n+          \"5f2804634d6df60dd080932e83c408b2975cbbb2\"\n+        ]\n+      }\n+    }\n+  ],\n+  \"estimated_vsize\": 141,\n+  \"estimated_feerate\": 0.00100000,\n+  \"fee\": 0.00014100,\n+  \"next\": \"signer\"\n+}\n+```\n+\n+### Process and Sign the PSBT Transaction\n+\n+1. Process, Sign and Finalize the PSBT transaction on the `offline_wallet`.",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 163,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "c01707bf8bec3947ce4321cef75c52b6cab743cc",
      "in_reply_to_id": null,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n1. Process, Sign and Finalize the PSBT on the `offline_wallet`.\r\n```",
      "created_at": "2023-09-26T10:42:58Z",
      "updated_at": "2023-09-26T11:58:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1337010166",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1337010166"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 163,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1337010901",
      "pull_request_review_id": 1643840266,
      "id": 1337010901,
      "node_id": "PRRC_kwDOABII585PsSrV",
      "diff_hunk": "@@ -0,0 +1,198 @@\n+# Offline Signing Tutorial\n+\n+Welcome to this tutorial on how to sign transactions offline using PSBT (Partially Signed Bitcoin Transactions). This tutorial will guide you through the process of securely signing Bitcoin transactions using an offline wallet and an online watch-only wallet.\n+\n+## Overview\n+In this tutorial, we have two hosts: [offline] which is totally offline and without a copy of the blockchain and [online] which is a regular online node, both running Bitcoin 25.0\n+\n+In this example, we are going to create an `offline_wallet` on the [offline] host. We will then create a `watch_only_wallet` on the [online] host using descriptors imported from the `offline_wallet` and load funds to the wallet. we'll create a PSBT transaction using the  `watch_only_wallet`, sign it with the `offline_wallet` then broadcast the transaction using the [online] host\n+\n+### Requirements\n+- [jq](https://jqlang.github.io/jq/) installation - This tutorial uses jq to process JSON.\n+\n+> [!NOTE]\n+> Tested using Signet with a connected host machine and an offline docker container (representing the offline wallet) both running Signet, should also work with Regtest and Mainnet\n+\n+### Create and Prepare the `offline_wallet`\n+\n+1. On the offline machine, create an offline wallet named `offline_wallet`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"offline_wallet\"\n+{\n+  \"name\": \"offline_wallet\"\n+}\n+```\n+\n+2. Export the offline wallet descriptors to a JSON file named `descriptors.json`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" listdescriptors | jq -r '.descriptors' >> /path/to/descriptors.json\n+```\n+\n+> [!NOTE]\n+> The `descriptors.json` file will be exported to the online machine (e.g. using a USB) to create a watch-only wallet. (This is an easier way to export the descriptors compared to manual export)\n+\n+### Create the online `watch_only_wallet`\n+\n+1. On the online machine, create an online watch-only wallet named `watch_only_wallet` without private keys (disable_private_keys=true) and should be blank with no keys or HD seed (blank=true).\n+- The `watch_only_wallet` wallet will be used to track transactions received to the `offline_wallet` and for creating PSBT transactions.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"watch_only_wallet\" disable_private_keys=true blank=true\n+{\n+  \"name\": \"watch_only_wallet\"\n+}\n+```\n+\n+2. Import the `offline_wallet` descriptors to the online `watch_only_wallet` using the `descriptors.json` file created on the offline wallet\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" importdescriptors \"$(cat /path/to/descriptors.json)\"\n+[\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  }\n+]\n+```\n+> [!NOTE]\n+> Importing the multiple descriptors from the `offline_wallet` provides the ability to generate a variety of address types by the [online] `watch_only_wallets`\n+\n+### Load Funds to the `offline_wallet`\n+\n+At this point, it's important to understand that both the `offline_wallet` and [online] `watch_only_wallets` share the same public keys. As a result, they generate the same addresses and have access to the same \"funds.\" However, to spend these funds, cooperation between both wallets is required since you need the private keys to sign the transactions which are only available on the `offline_wallet`.\n+\n+1. Generate an address for the `offline_wallet` to load funds. You can use either the `offline_wallet` or the [online] `watch_only_wallet` to generate this address, as they will produce the same address. For the sake of this guide, we'll use the [online] `watch_only_wallet` to generate the address, which can then be shared with others online.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" getnewaddress\n+tb1qtu5qgc6ddhmqm5yqjvhg83qgk2t4ewajg0h6yh\n+```\n+\n+2. Visit a faucet like https://signet.bc-2.jp to load funds into the generated address.\n+\n+3. Confirm the received funds (to the `offline_wallet`) using the online `watch_only_wallet`. Since both wallets are essentially the same, you can use the [online] `watch_only_wallet` to monitor and confirm that the transaction was broadcast and confirmed:\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" listunspent\n+[\n+  {\n+    \"txid\": \"0f3953dfc3eb8e753cd1633151837c5b9953992914ff32b7de08c47f1f29c762\",\n+    \"vout\": 1,\n+    \"address\": \"tb1qtu5qgc6ddhmqm5yqjvhg83qgk2t4ewajg0h6yh\",\n+    \"label\": \"\",\n+    \"scriptPubKey\": \"00145f2804634d6df60dd080932e83c408b2975cbbb2\",\n+    \"amount\": 0.01000000,\n+    \"confirmations\": 4,\n+    \"spendable\": true,\n+    \"solvable\": true,\n+    \"desc\": \"wpkh([306c734f/84h/1h/0h/0/0]025932ccee7590158f7e08bb36290d135d30a0b045163da896e1cd7645ec4223a9)#xytvyr4a\",\n+    \"parent_descs\": [\n+      \"wpkh([306c734f/84h/1h/0h]tpubDCJnY92ib4Zu3qd6wrBXEjG436tQdA2tDiJU2iSJYjkNS1darssPWKaBfojhjUF5vMLBcxbN2r93pmFMz2zyTEZuNx9JDo9rWqoHhATW3Uz/0/*)#7mh08dkg\"\n+    ],\n+    \"safe\": true\n+  }\n+]\n+```\n+\n+### Create and Export a PSBT Transaction\n+\n+0. Get a receiving address to send the funds to. In this tutorial, we'll be sending funds to the address `tb1q9k5w0nhnhyeh78snpxh0t5t7c3lxdeg3erez32`\n+\n+1. Create a PSBT transaction using the online `watch_only_wallet`, sending funds to the receiving address. (using `walletcreatefundedpsbt inputs[], outputs[address: amount]`)\n+- Export the psbt transaction to `funded_psbt.txt` for easy portability to the `offline_wallet` which will be signing the transaction.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" walletcreatefundedpsbt '[]' '[{\"tb1q9k5w0nhnhyeh78snpxh0t5t7c3lxdeg3erez32\": 0.009}]' | jq -r '.psbt' >> /path/to/funded_psbt.txt\n+[online]$ cat /path/to/funded_psbt.txt\n+cHNidP8BAHECAAAAAWLHKR9/xAjetzL/FCmZU5lbfINRMWPRPHWO68PfUzkPAQAAAAD9////AoA4AQAAAAAAFgAULajnzvO5M38eEwmu9dF+xH5m5RGs0g0AAAAAABYAFMaT0f/Wp2DCZzL6dkJ3GhWj4Y9vAAAAAAABAHECAAAAAY+dRPEBrGopkw4ugSzS9npzJDEIrE/bq1XXI0KbYnYrAQAAAAD+////ArKaXgAAAAAAFgAUwEc4LdoxSjbWo/2Ue+HS+QjwfiBAQg8AAAAAABYAFF8oBGNNbfYN0ICTLoPECLKXXLuyYW8CAAEBH0BCDwAAAAAAFgAUXygEY01t9g3QgJMug8QIspdcu7IiBgJZMszudZAVj34IuzYpDRNdMKCwRRY9qJbhzXZF7EIjqRgwbHNPVAAAgAEAAIAAAACAAAAAAAAAAAAAACICA7BlBnyAR4F2UkKuSX9MFhYCsn6j//z9i7lHDm1O0CU0GDBsc09UAACAAQAAgAAAAIABAAAAAAAAAAA=\n+```\n+\n+### Decode and Analyze the PSBT Transaction\n+\n+1. Decode and analyze the PSBT transaction on the `offline_wallet` using the `funded_psbt.txt` file.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet decodepsbt $(cat /path/to/funded_psbt.txt)\n+{\n+    ...\n+}\n+[offline]$ ./src/bitcoin-cli -signet analyzepsbt $(cat /path/to/funded_psbt.txt)\n+{\n+  \"inputs\": [\n+    {\n+      \"has_utxo\": true,\n+      \"is_final\": false,\n+      \"next\": \"signer\",\n+      \"missing\": {\n+        \"signatures\": [\n+          \"5f2804634d6df60dd080932e83c408b2975cbbb2\"\n+        ]\n+      }\n+    }\n+  ],\n+  \"estimated_vsize\": 141,\n+  \"estimated_feerate\": 0.00100000,\n+  \"fee\": 0.00014100,\n+  \"next\": \"signer\"\n+}\n+```\n+\n+### Process and Sign the PSBT Transaction\n+\n+1. Process, Sign and Finalize the PSBT transaction on the `offline_wallet`.\n+- Save the final PSBT hex to the `final_psbt.txt` file, to be exported and broadcasted by the `online_wallet`\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" walletprocesspsbt $(cat /path/to/funded_psbt.txt) | jq -r .hex >> /path/to/final_psbt.txt\n+\n+[offline]$ cat ~/final_psbt.txt\n+0200000000010162c7291f7fc408deb732ff14299953995b7c83513163d13c758eebc3df53390f0100000000fdffffff028c4f010000000000160014dda0f427f67bfeca9f0e7252e458ee39b82c7e06a0bb0d00000000001600142da8e7cef3b9337f1e1309aef5d17ec47e66e5110247304402200d245ee92df8be0183c98fb26bcbc474307ccdb764877273644b4c4eb359138202206c4cf787f120828a812b47043902683e24d50a60216e3b2fe0f104be2806e54f0121025932ccee7590158f7e08bb36290d135d30a0b045163da896e1cd7645ec4223a900000000\n+```\n+\n+### Broadcast the Finalized PSBT Transaction",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 173,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "c01707bf8bec3947ce4321cef75c52b6cab743cc",
      "in_reply_to_id": null,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n### Broadcast the Signed and Finalized PSBT\r\n```",
      "created_at": "2023-09-26T10:43:39Z",
      "updated_at": "2023-09-26T11:58:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1337010901",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1337010901"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 173,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1337012177",
      "pull_request_review_id": 1643840266,
      "id": 1337012177,
      "node_id": "PRRC_kwDOABII585PsS_R",
      "diff_hunk": "@@ -0,0 +1,198 @@\n+# Offline Signing Tutorial\n+\n+Welcome to this tutorial on how to sign transactions offline using PSBT (Partially Signed Bitcoin Transactions). This tutorial will guide you through the process of securely signing Bitcoin transactions using an offline wallet and an online watch-only wallet.\n+\n+## Overview\n+In this tutorial, we have two hosts: [offline] which is totally offline and without a copy of the blockchain and [online] which is a regular online node, both running Bitcoin 25.0\n+\n+In this example, we are going to create an `offline_wallet` on the [offline] host. We will then create a `watch_only_wallet` on the [online] host using descriptors imported from the `offline_wallet` and load funds to the wallet. we'll create a PSBT transaction using the  `watch_only_wallet`, sign it with the `offline_wallet` then broadcast the transaction using the [online] host\n+\n+### Requirements\n+- [jq](https://jqlang.github.io/jq/) installation - This tutorial uses jq to process JSON.\n+\n+> [!NOTE]\n+> Tested using Signet with a connected host machine and an offline docker container (representing the offline wallet) both running Signet, should also work with Regtest and Mainnet\n+\n+### Create and Prepare the `offline_wallet`\n+\n+1. On the offline machine, create an offline wallet named `offline_wallet`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"offline_wallet\"\n+{\n+  \"name\": \"offline_wallet\"\n+}\n+```\n+\n+2. Export the offline wallet descriptors to a JSON file named `descriptors.json`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" listdescriptors | jq -r '.descriptors' >> /path/to/descriptors.json\n+```\n+\n+> [!NOTE]\n+> The `descriptors.json` file will be exported to the online machine (e.g. using a USB) to create a watch-only wallet. (This is an easier way to export the descriptors compared to manual export)\n+\n+### Create the online `watch_only_wallet`\n+\n+1. On the online machine, create an online watch-only wallet named `watch_only_wallet` without private keys (disable_private_keys=true) and should be blank with no keys or HD seed (blank=true).\n+- The `watch_only_wallet` wallet will be used to track transactions received to the `offline_wallet` and for creating PSBT transactions.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"watch_only_wallet\" disable_private_keys=true blank=true\n+{\n+  \"name\": \"watch_only_wallet\"\n+}\n+```\n+\n+2. Import the `offline_wallet` descriptors to the online `watch_only_wallet` using the `descriptors.json` file created on the offline wallet\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" importdescriptors \"$(cat /path/to/descriptors.json)\"\n+[\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  }\n+]\n+```\n+> [!NOTE]\n+> Importing the multiple descriptors from the `offline_wallet` provides the ability to generate a variety of address types by the [online] `watch_only_wallets`\n+\n+### Load Funds to the `offline_wallet`\n+\n+At this point, it's important to understand that both the `offline_wallet` and [online] `watch_only_wallets` share the same public keys. As a result, they generate the same addresses and have access to the same \"funds.\" However, to spend these funds, cooperation between both wallets is required since you need the private keys to sign the transactions which are only available on the `offline_wallet`.\n+\n+1. Generate an address for the `offline_wallet` to load funds. You can use either the `offline_wallet` or the [online] `watch_only_wallet` to generate this address, as they will produce the same address. For the sake of this guide, we'll use the [online] `watch_only_wallet` to generate the address, which can then be shared with others online.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" getnewaddress\n+tb1qtu5qgc6ddhmqm5yqjvhg83qgk2t4ewajg0h6yh\n+```\n+\n+2. Visit a faucet like https://signet.bc-2.jp to load funds into the generated address.\n+\n+3. Confirm the received funds (to the `offline_wallet`) using the online `watch_only_wallet`. Since both wallets are essentially the same, you can use the [online] `watch_only_wallet` to monitor and confirm that the transaction was broadcast and confirmed:\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" listunspent\n+[\n+  {\n+    \"txid\": \"0f3953dfc3eb8e753cd1633151837c5b9953992914ff32b7de08c47f1f29c762\",\n+    \"vout\": 1,\n+    \"address\": \"tb1qtu5qgc6ddhmqm5yqjvhg83qgk2t4ewajg0h6yh\",\n+    \"label\": \"\",\n+    \"scriptPubKey\": \"00145f2804634d6df60dd080932e83c408b2975cbbb2\",\n+    \"amount\": 0.01000000,\n+    \"confirmations\": 4,\n+    \"spendable\": true,\n+    \"solvable\": true,\n+    \"desc\": \"wpkh([306c734f/84h/1h/0h/0/0]025932ccee7590158f7e08bb36290d135d30a0b045163da896e1cd7645ec4223a9)#xytvyr4a\",\n+    \"parent_descs\": [\n+      \"wpkh([306c734f/84h/1h/0h]tpubDCJnY92ib4Zu3qd6wrBXEjG436tQdA2tDiJU2iSJYjkNS1darssPWKaBfojhjUF5vMLBcxbN2r93pmFMz2zyTEZuNx9JDo9rWqoHhATW3Uz/0/*)#7mh08dkg\"\n+    ],\n+    \"safe\": true\n+  }\n+]\n+```\n+\n+### Create and Export a PSBT Transaction\n+\n+0. Get a receiving address to send the funds to. In this tutorial, we'll be sending funds to the address `tb1q9k5w0nhnhyeh78snpxh0t5t7c3lxdeg3erez32`\n+\n+1. Create a PSBT transaction using the online `watch_only_wallet`, sending funds to the receiving address. (using `walletcreatefundedpsbt inputs[], outputs[address: amount]`)\n+- Export the psbt transaction to `funded_psbt.txt` for easy portability to the `offline_wallet` which will be signing the transaction.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" walletcreatefundedpsbt '[]' '[{\"tb1q9k5w0nhnhyeh78snpxh0t5t7c3lxdeg3erez32\": 0.009}]' | jq -r '.psbt' >> /path/to/funded_psbt.txt\n+[online]$ cat /path/to/funded_psbt.txt\n+cHNidP8BAHECAAAAAWLHKR9/xAjetzL/FCmZU5lbfINRMWPRPHWO68PfUzkPAQAAAAD9////AoA4AQAAAAAAFgAULajnzvO5M38eEwmu9dF+xH5m5RGs0g0AAAAAABYAFMaT0f/Wp2DCZzL6dkJ3GhWj4Y9vAAAAAAABAHECAAAAAY+dRPEBrGopkw4ugSzS9npzJDEIrE/bq1XXI0KbYnYrAQAAAAD+////ArKaXgAAAAAAFgAUwEc4LdoxSjbWo/2Ue+HS+QjwfiBAQg8AAAAAABYAFF8oBGNNbfYN0ICTLoPECLKXXLuyYW8CAAEBH0BCDwAAAAAAFgAUXygEY01t9g3QgJMug8QIspdcu7IiBgJZMszudZAVj34IuzYpDRNdMKCwRRY9qJbhzXZF7EIjqRgwbHNPVAAAgAEAAIAAAACAAAAAAAAAAAAAACICA7BlBnyAR4F2UkKuSX9MFhYCsn6j//z9i7lHDm1O0CU0GDBsc09UAACAAQAAgAAAAIABAAAAAAAAAAA=\n+```\n+\n+### Decode and Analyze the PSBT Transaction\n+\n+1. Decode and analyze the PSBT transaction on the `offline_wallet` using the `funded_psbt.txt` file.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet decodepsbt $(cat /path/to/funded_psbt.txt)\n+{\n+    ...\n+}\n+[offline]$ ./src/bitcoin-cli -signet analyzepsbt $(cat /path/to/funded_psbt.txt)\n+{\n+  \"inputs\": [\n+    {\n+      \"has_utxo\": true,\n+      \"is_final\": false,\n+      \"next\": \"signer\",\n+      \"missing\": {\n+        \"signatures\": [\n+          \"5f2804634d6df60dd080932e83c408b2975cbbb2\"\n+        ]\n+      }\n+    }\n+  ],\n+  \"estimated_vsize\": 141,\n+  \"estimated_feerate\": 0.00100000,\n+  \"fee\": 0.00014100,\n+  \"next\": \"signer\"\n+}\n+```\n+\n+### Process and Sign the PSBT Transaction\n+\n+1. Process, Sign and Finalize the PSBT transaction on the `offline_wallet`.\n+- Save the final PSBT hex to the `final_psbt.txt` file, to be exported and broadcasted by the `online_wallet`\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" walletprocesspsbt $(cat /path/to/funded_psbt.txt) | jq -r .hex >> /path/to/final_psbt.txt\n+\n+[offline]$ cat ~/final_psbt.txt\n+0200000000010162c7291f7fc408deb732ff14299953995b7c83513163d13c758eebc3df53390f0100000000fdffffff028c4f010000000000160014dda0f427f67bfeca9f0e7252e458ee39b82c7e06a0bb0d00000000001600142da8e7cef3b9337f1e1309aef5d17ec47e66e5110247304402200d245ee92df8be0183c98fb26bcbc474307ccdb764877273644b4c4eb359138202206c4cf787f120828a812b47043902683e24d50a60216e3b2fe0f104be2806e54f0121025932ccee7590158f7e08bb36290d135d30a0b045163da896e1cd7645ec4223a900000000\n+```\n+\n+### Broadcast the Finalized PSBT Transaction\n+1. Broadcast the signed and finalized PSBT transaction (on the `final_psbt.txt` file) using the online wallet",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 174,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "c01707bf8bec3947ce4321cef75c52b6cab743cc",
      "in_reply_to_id": null,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n1. Broadcast the funded, signed and finalized PSBT `final_psbt.txt` using the online wallet\r\n```",
      "created_at": "2023-09-26T10:44:55Z",
      "updated_at": "2023-09-26T11:58:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1337012177",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1337012177"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 174,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1337014770",
      "pull_request_review_id": 1643840266,
      "id": 1337014770,
      "node_id": "PRRC_kwDOABII585PsTny",
      "diff_hunk": "@@ -0,0 +1,198 @@\n+# Offline Signing Tutorial\n+\n+Welcome to this tutorial on how to sign transactions offline using PSBT (Partially Signed Bitcoin Transactions). This tutorial will guide you through the process of securely signing Bitcoin transactions using an offline wallet and an online watch-only wallet.\n+\n+## Overview\n+In this tutorial, we have two hosts: [offline] which is totally offline and without a copy of the blockchain and [online] which is a regular online node, both running Bitcoin 25.0\n+\n+In this example, we are going to create an `offline_wallet` on the [offline] host. We will then create a `watch_only_wallet` on the [online] host using descriptors imported from the `offline_wallet` and load funds to the wallet. we'll create a PSBT transaction using the  `watch_only_wallet`, sign it with the `offline_wallet` then broadcast the transaction using the [online] host\n+\n+### Requirements\n+- [jq](https://jqlang.github.io/jq/) installation - This tutorial uses jq to process JSON.\n+\n+> [!NOTE]\n+> Tested using Signet with a connected host machine and an offline docker container (representing the offline wallet) both running Signet, should also work with Regtest and Mainnet\n+\n+### Create and Prepare the `offline_wallet`\n+\n+1. On the offline machine, create an offline wallet named `offline_wallet`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"offline_wallet\"\n+{\n+  \"name\": \"offline_wallet\"\n+}\n+```\n+\n+2. Export the offline wallet descriptors to a JSON file named `descriptors.json`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" listdescriptors | jq -r '.descriptors' >> /path/to/descriptors.json\n+```\n+\n+> [!NOTE]\n+> The `descriptors.json` file will be exported to the online machine (e.g. using a USB) to create a watch-only wallet. (This is an easier way to export the descriptors compared to manual export)\n+\n+### Create the online `watch_only_wallet`\n+\n+1. On the online machine, create an online watch-only wallet named `watch_only_wallet` without private keys (disable_private_keys=true) and should be blank with no keys or HD seed (blank=true).\n+- The `watch_only_wallet` wallet will be used to track transactions received to the `offline_wallet` and for creating PSBT transactions.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"watch_only_wallet\" disable_private_keys=true blank=true\n+{\n+  \"name\": \"watch_only_wallet\"\n+}\n+```\n+\n+2. Import the `offline_wallet` descriptors to the online `watch_only_wallet` using the `descriptors.json` file created on the offline wallet\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" importdescriptors \"$(cat /path/to/descriptors.json)\"\n+[\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  }\n+]\n+```\n+> [!NOTE]\n+> Importing the multiple descriptors from the `offline_wallet` provides the ability to generate a variety of address types by the [online] `watch_only_wallets`\n+\n+### Load Funds to the `offline_wallet`\n+\n+At this point, it's important to understand that both the `offline_wallet` and [online] `watch_only_wallets` share the same public keys. As a result, they generate the same addresses and have access to the same \"funds.\" However, to spend these funds, cooperation between both wallets is required since you need the private keys to sign the transactions which are only available on the `offline_wallet`.\n+\n+1. Generate an address for the `offline_wallet` to load funds. You can use either the `offline_wallet` or the [online] `watch_only_wallet` to generate this address, as they will produce the same address. For the sake of this guide, we'll use the [online] `watch_only_wallet` to generate the address, which can then be shared with others online.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" getnewaddress\n+tb1qtu5qgc6ddhmqm5yqjvhg83qgk2t4ewajg0h6yh\n+```\n+\n+2. Visit a faucet like https://signet.bc-2.jp to load funds into the generated address.\n+\n+3. Confirm the received funds (to the `offline_wallet`) using the online `watch_only_wallet`. Since both wallets are essentially the same, you can use the [online] `watch_only_wallet` to monitor and confirm that the transaction was broadcast and confirmed:\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" listunspent\n+[\n+  {\n+    \"txid\": \"0f3953dfc3eb8e753cd1633151837c5b9953992914ff32b7de08c47f1f29c762\",\n+    \"vout\": 1,\n+    \"address\": \"tb1qtu5qgc6ddhmqm5yqjvhg83qgk2t4ewajg0h6yh\",\n+    \"label\": \"\",\n+    \"scriptPubKey\": \"00145f2804634d6df60dd080932e83c408b2975cbbb2\",\n+    \"amount\": 0.01000000,\n+    \"confirmations\": 4,\n+    \"spendable\": true,\n+    \"solvable\": true,\n+    \"desc\": \"wpkh([306c734f/84h/1h/0h/0/0]025932ccee7590158f7e08bb36290d135d30a0b045163da896e1cd7645ec4223a9)#xytvyr4a\",\n+    \"parent_descs\": [\n+      \"wpkh([306c734f/84h/1h/0h]tpubDCJnY92ib4Zu3qd6wrBXEjG436tQdA2tDiJU2iSJYjkNS1darssPWKaBfojhjUF5vMLBcxbN2r93pmFMz2zyTEZuNx9JDo9rWqoHhATW3Uz/0/*)#7mh08dkg\"\n+    ],\n+    \"safe\": true\n+  }\n+]\n+```\n+\n+### Create and Export a PSBT Transaction",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 118,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "c01707bf8bec3947ce4321cef75c52b6cab743cc",
      "in_reply_to_id": null,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n### Create and Export an Unsigned PSBT\r\n```",
      "created_at": "2023-09-26T10:47:26Z",
      "updated_at": "2023-09-26T11:58:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1337014770",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1337014770"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 118,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1337030493",
      "pull_request_review_id": 1643840266,
      "id": 1337030493,
      "node_id": "PRRC_kwDOABII585PsXdd",
      "diff_hunk": "@@ -0,0 +1,198 @@\n+# Offline Signing Tutorial\n+\n+Welcome to this tutorial on how to sign transactions offline using PSBT (Partially Signed Bitcoin Transactions). This tutorial will guide you through the process of securely signing Bitcoin transactions using an offline wallet and an online watch-only wallet.\n+\n+## Overview\n+In this tutorial, we have two hosts: [offline] which is totally offline and without a copy of the blockchain and [online] which is a regular online node, both running Bitcoin 25.0\n+\n+In this example, we are going to create an `offline_wallet` on the [offline] host. We will then create a `watch_only_wallet` on the [online] host using descriptors imported from the `offline_wallet` and load funds to the wallet. we'll create a PSBT transaction using the  `watch_only_wallet`, sign it with the `offline_wallet` then broadcast the transaction using the [online] host\n+\n+### Requirements\n+- [jq](https://jqlang.github.io/jq/) installation - This tutorial uses jq to process JSON.\n+\n+> [!NOTE]\n+> Tested using Signet with a connected host machine and an offline docker container (representing the offline wallet) both running Signet, should also work with Regtest and Mainnet\n+\n+### Create and Prepare the `offline_wallet`\n+\n+1. On the offline machine, create an offline wallet named `offline_wallet`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"offline_wallet\"\n+{\n+  \"name\": \"offline_wallet\"\n+}\n+```\n+\n+2. Export the offline wallet descriptors to a JSON file named `descriptors.json`.",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 27,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "c01707bf8bec3947ce4321cef75c52b6cab743cc",
      "in_reply_to_id": null,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n2. Export public key-only descriptors from [offline] to a JSON file named `descriptors.json`.\r\n```",
      "created_at": "2023-09-26T11:02:27Z",
      "updated_at": "2023-09-26T11:58:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1337030493",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1337030493"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 27,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1337080497",
      "pull_request_review_id": 1643840266,
      "id": 1337080497,
      "node_id": "PRRC_kwDOABII585Psjqx",
      "diff_hunk": "@@ -0,0 +1,198 @@\n+# Offline Signing Tutorial\n+\n+Welcome to this tutorial on how to sign transactions offline using PSBT (Partially Signed Bitcoin Transactions). This tutorial will guide you through the process of securely signing Bitcoin transactions using an offline wallet and an online watch-only wallet.\n+\n+## Overview\n+In this tutorial, we have two hosts: [offline] which is totally offline and without a copy of the blockchain and [online] which is a regular online node, both running Bitcoin 25.0\n+\n+In this example, we are going to create an `offline_wallet` on the [offline] host. We will then create a `watch_only_wallet` on the [online] host using descriptors imported from the `offline_wallet` and load funds to the wallet. we'll create a PSBT transaction using the  `watch_only_wallet`, sign it with the `offline_wallet` then broadcast the transaction using the [online] host\n+\n+### Requirements\n+- [jq](https://jqlang.github.io/jq/) installation - This tutorial uses jq to process JSON.\n+\n+> [!NOTE]\n+> Tested using Signet with a connected host machine and an offline docker container (representing the offline wallet) both running Signet, should also work with Regtest and Mainnet\n+\n+### Create and Prepare the `offline_wallet`\n+\n+1. On the offline machine, create an offline wallet named `offline_wallet`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"offline_wallet\"\n+{\n+  \"name\": \"offline_wallet\"\n+}\n+```\n+\n+2. Export the offline wallet descriptors to a JSON file named `descriptors.json`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" listdescriptors | jq -r '.descriptors' >> /path/to/descriptors.json\n+```\n+\n+> [!NOTE]\n+> The `descriptors.json` file will be exported to the online machine (e.g. using a USB) to create a watch-only wallet. (This is an easier way to export the descriptors compared to manual export)\n+\n+### Create the online `watch_only_wallet`\n+\n+1. On the online machine, create an online watch-only wallet named `watch_only_wallet` without private keys (disable_private_keys=true) and should be blank with no keys or HD seed (blank=true).\n+- The `watch_only_wallet` wallet will be used to track transactions received to the `offline_wallet` and for creating PSBT transactions.",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 39,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "c01707bf8bec3947ce4321cef75c52b6cab743cc",
      "in_reply_to_id": null,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n- The `watch_only_wallet` wallet will be used to track and validate incoming transactions, for creating unsigned PSBTs when spending coins, and for broadcasting signed and finalised PSBTs.\r\n```",
      "created_at": "2023-09-26T11:44:46Z",
      "updated_at": "2023-09-26T11:58:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1337080497",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1337080497"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 39,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1337084301",
      "pull_request_review_id": 1643840266,
      "id": 1337084301,
      "node_id": "PRRC_kwDOABII585PskmN",
      "diff_hunk": "@@ -0,0 +1,198 @@\n+# Offline Signing Tutorial\n+\n+Welcome to this tutorial on how to sign transactions offline using PSBT (Partially Signed Bitcoin Transactions). This tutorial will guide you through the process of securely signing Bitcoin transactions using an offline wallet and an online watch-only wallet.\n+\n+## Overview\n+In this tutorial, we have two hosts: [offline] which is totally offline and without a copy of the blockchain and [online] which is a regular online node, both running Bitcoin 25.0\n+\n+In this example, we are going to create an `offline_wallet` on the [offline] host. We will then create a `watch_only_wallet` on the [online] host using descriptors imported from the `offline_wallet` and load funds to the wallet. we'll create a PSBT transaction using the  `watch_only_wallet`, sign it with the `offline_wallet` then broadcast the transaction using the [online] host\n+\n+### Requirements\n+- [jq](https://jqlang.github.io/jq/) installation - This tutorial uses jq to process JSON.\n+\n+> [!NOTE]\n+> Tested using Signet with a connected host machine and an offline docker container (representing the offline wallet) both running Signet, should also work with Regtest and Mainnet\n+\n+### Create and Prepare the `offline_wallet`\n+\n+1. On the offline machine, create an offline wallet named `offline_wallet`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"offline_wallet\"\n+{\n+  \"name\": \"offline_wallet\"\n+}\n+```\n+\n+2. Export the offline wallet descriptors to a JSON file named `descriptors.json`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" listdescriptors | jq -r '.descriptors' >> /path/to/descriptors.json\n+```\n+\n+> [!NOTE]\n+> The `descriptors.json` file will be exported to the online machine (e.g. using a USB) to create a watch-only wallet. (This is an easier way to export the descriptors compared to manual export)\n+\n+### Create the online `watch_only_wallet`\n+\n+1. On the online machine, create an online watch-only wallet named `watch_only_wallet` without private keys (disable_private_keys=true) and should be blank with no keys or HD seed (blank=true).\n+- The `watch_only_wallet` wallet will be used to track transactions received to the `offline_wallet` and for creating PSBT transactions.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"watch_only_wallet\" disable_private_keys=true blank=true\n+{\n+  \"name\": \"watch_only_wallet\"\n+}\n+```\n+\n+2. Import the `offline_wallet` descriptors to the online `watch_only_wallet` using the `descriptors.json` file created on the offline wallet\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" importdescriptors \"$(cat /path/to/descriptors.json)\"\n+[\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  }\n+]\n+```\n+> [!NOTE]\n+> Importing the multiple descriptors from the `offline_wallet` provides the ability to generate a variety of address types by the [online] `watch_only_wallets`",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 80,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "c01707bf8bec3947ce4321cef75c52b6cab743cc",
      "in_reply_to_id": null,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n> Importing the multiple descriptors from the `offline_wallet` provides the ability to generate a variety of address types from the [online] `watch_only_wallet`\r\n```",
      "created_at": "2023-09-26T11:48:12Z",
      "updated_at": "2023-09-26T11:58:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1337084301",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1337084301"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 80,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1352284316",
      "pull_request_review_id": 1667371877,
      "id": 1352284316,
      "node_id": "PRRC_kwDOABII585Qmjic",
      "diff_hunk": "@@ -0,0 +1,247 @@\n+# Offline Signing Tutorial\n+\n+This tutorial will describe how to use two instances of Bitcoin Core, one online and one offline, to greatly increase security by not having private keys reside on a networked device.\n+\n+Maintaining an air-gap between private keys and any network connections drastically reduces the opportunity for those keys to be exfiltrated from the user.\n+\n+This workflow uses [Partially Signed Bitcoin Transactions](https://github.com/bitcoin/bitcoin/blob/master/doc/psbt.md) (PSBTs) to transfer the transaction to and from the offline wallet for signing using the private keys.\n+\n+## Overview\n+In this tutorial we have two hosts, both running Bitcoin v25.0\n+\n+* [offline] which is disconnected from all networks (internet, Tor, wifi, bluetooth etc.) and does not have, or need, a copy of the blockchain.\n+* [online] which is a regular online node with a synced blockchain.\n+\n+We are going to first create an `offline_wallet` on the [offline] host. We will then create a `watch_only_wallet` on the [online] host using public key descriptors exported from the `offline_wallet`. Next we will receive some coins into the wallet. In order to spend these coins we'll create an unsigned PSBT using the `watch_only_wallet`, sign the PSBT using the private keys in the `offline_wallet`, and finally broadcast the signed PSBT using the [online] host.\n+\n+### Requirements\n+- [jq](https://jqlang.github.io/jq/) installation - This tutorial uses jq to process certain fields from JSON RPC responses, but this convenience is optional.\n+\n+### Create and Prepare the `offline_wallet`\n+\n+1. On the offline machine create a wallet named `offline_wallet`. This wallet will contain private keys and must remain unconnected to any networks at all times.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"offline_wallet\"\n+\n+{\n+  \"name\": \"offline_wallet\"\n+}\n+```\n+\n+2. Export the public key-only descriptors from [offline] to a JSON file named `descriptors.json`. We use `jq` here to extract the `.descriptors` field from the full RPC response.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" listdescriptors \\\n+             | jq -r '.descriptors' \\\n+             >> /path/to/descriptors.json\n+```\n+\n+> [!NOTE]\n+> The `descriptors.json` file will be transferred to the online machine (e.g. using a USB flash drive) where it can be imported to create a related watch-only wallet.\n+\n+### Create the online `watch_only_wallet`\n+\n+1. On the online machine create a blank watch-only wallet which has private keys disabled and is named `watch_only_wallet`. This is achieved by using the `createwallet` options: `disable_private_keys=true, blank=true`.\n+\n+The `watch_only_wallet` wallet will be used to track and validate incoming transactions, for creating unsigned PSBTs when spending coins, and for broadcasting signed and finalised PSBTs.\n+\n+> [!NOTE]\n+> `blank` indicates that the wallet should not generate any new keys of its own. `disable_private_keys` indicates that the wallet should refuse to import private keys, i.e. will be a dedicated watch-only wallet.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet \\\n+              wallet_name=\"watch_only_wallet\" \\\n+              disable_private_keys=true \\\n+              blank=true\n+\n+{\n+  \"name\": \"watch_only_wallet\"\n+}\n+```\n+\n+2. Import the `offline_wallet`s public key descriptors to the online `watch_only_wallet` using the `descriptors.json` file created on the offline wallet.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" importdescriptors \"$(cat /path/to/descriptors.json)\"\n+\n+[\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  }\n+]\n+```\n+> [!NOTE]\n+> Multiple success values show indicates that multiple descriptors, for different address types, have been successfully imported. This allows generating different address types on the `watch_only_wallet`.\n+\n+### Fund the `offline_wallet`\n+\n+At this point it's important to understand that both the `offline_wallet` and [online] `watch_only_wallet` share the same public keys. As a result they generate the same addresses. Transactions can be constructed using either wallet, but valid signatures can only be added by the `offline_wallet` as only it has the private keys.\n+\n+1. Generate an address to receive coins to. You can use _either_ the `offline_wallet` or the [online] `watch_only_wallet` to generate this address, as they will produce the same addresses. For the sake of this guide we'll use the [online] `watch_only_wallet` to generate the address.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" getnewaddress\n+\n+tb1qtu5qgc6ddhmqm5yqjvhg83qgk2t4ewajg0h6yh\n+```\n+\n+2. Visit a faucet like https://signet.bc-2.jp and enter your address from the previous command to receive a small amount of signet coins to this address.\n+\n+3. Confirm that coins were received using the online `watch_only_wallet`. Note that the transaction may take a few moments before being received on your local node, depending on its connectivity. Just re-run the command periodically until the transaction is received.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" listunspent\n+\n+[\n+  {\n+    \"txid\": \"0f3953dfc3eb8e753cd1633151837c5b9953992914ff32b7de08c47f1f29c762\",\n+    \"vout\": 1,\n+    \"address\": \"tb1qtu5qgc6ddhmqm5yqjvhg83qgk2t4ewajg0h6yh\",\n+    \"label\": \"\",\n+    \"scriptPubKey\": \"00145f2804634d6df60dd080932e83c408b2975cbbb2\",\n+    \"amount\": 0.01000000,\n+    \"confirmations\": 4,\n+    \"spendable\": true,\n+    \"solvable\": true,\n+    \"desc\": \"wpkh([306c734f/84h/1h/0h/0/0]025932ccee7590158f7e08bb36290d135d30a0b045163da896e1cd7645ec4223a9)#xytvyr4a\",\n+    \"parent_descs\": [\n+      \"wpkh([306c734f/84h/1h/0h]tpubDCJnY92ib4Zu3qd6wrBXEjG436tQdA2tDiJU2iSJYjkNS1darssPWKaBfojhjUF5vMLBcxbN2r93pmFMz2zyTEZuNx9JDo9rWqoHhATW3Uz/0/*)#7mh08dkg\"\n+    ],\n+    \"safe\": true\n+  }\n+]\n+```\n+\n+### Create and Export an Unsigned PSBT\n+\n+1. Get a destination address for the transaction. In this tutorial we'll be sending funds to the address `tb1q9k5w0nhnhyeh78snpxh0t5t7c3lxdeg3erez32`, but if you don't need the coins for further testing you could send the coins back to the faucet.\n+\n+2. Create a funded but unsigned PSBT to the destination address with the [online] `watch_only_wallet` by using `walletcreatefundedpsbt inputs[], outputs[address: amount]` and export the unsigned PSBT to a file `funded_psbt.txt` for easy portability to the `offline_wallet` for signing:\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" walletcreatefundedpsbt \\\n+              '[]' '[{\"tb1q9k5w0nhnhyeh78snpxh0t5t7c3lxdeg3erez32\": 0.009}]' \\\n+              | jq -r '.psbt' \\\n+              >> /path/to/funded_psbt.txt\n+\n+[online]$ cat /path/to/funded_psbt.txt\n+\n+cHNidP8BAHECAAAAAWLHKR9/xAjetzL/FCmZU5lbfINRMWPRPHWO68PfUzkPAQAAAAD9////AoA4AQAAAAAAFgAULajnzvO5M38eEwmu9dF+xH5m5RGs0g0AAAAAABYAFMaT0f/Wp2DCZzL6dkJ3GhWj4Y9vAAAAAAABAHECAAAAAY+dRPEBrGopkw4ugSzS9npzJDEIrE/bq1XXI0KbYnYrAQAAAAD+////ArKaXgAAAAAAFgAUwEc4LdoxSjbWo/2Ue+HS+QjwfiBAQg8AAAAAABYAFF8oBGNNbfYN0ICTLoPECLKXXLuyYW8CAAEBH0BCDwAAAAAAFgAUXygEY01t9g3QgJMug8QIspdcu7IiBgJZMszudZAVj34IuzYpDRNdMKCwRRY9qJbhzXZF7EIjqRgwbHNPVAAAgAEAAIAAAACAAAAAAAAAAAAAACICA7BlBnyAR4F2UkKuSX9MFhYCsn6j//z9i7lHDm1O0CU0GDBsc09UAACAAQAAgAAAAIABAAAAAAAAAAA=\n+```\n+> [!NOTE]\n+> Leaving the `input` array empty in the above `walletcreatefundedpsbt` command is permitted and will cause the wallet to automatically select appropriate inputs for the transaction.\n+\n+### Decode and Analyze the Unsigned PSBT\n+\n+Decode and analyze the unsigned PSBT on the `offline_wallet` using the `funded_psbt.txt` file:",
      "path": "doc/offline-signing-tutorial.md",
      "position": 166,
      "original_position": 158,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "6473e4c0ec7eb970018574dedfd68f2d0dd2a4d0",
      "in_reply_to_id": null,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: Could mention here that `decodepsbt` can be used with the offline host to check that the outputs are paying to the expected address(es), as `analyzepsbt` doesn't deal with outputs?",
      "created_at": "2023-10-10T11:28:18Z",
      "updated_at": "2023-10-10T11:35:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1352284316",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1352284316"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 166,
      "original_line": 166,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1352285859",
      "pull_request_review_id": 1667371877,
      "id": 1352285859,
      "node_id": "PRRC_kwDOABII585Qmj6j",
      "diff_hunk": "@@ -0,0 +1,247 @@\n+# Offline Signing Tutorial\n+\n+This tutorial will describe how to use two instances of Bitcoin Core, one online and one offline, to greatly increase security by not having private keys reside on a networked device.\n+\n+Maintaining an air-gap between private keys and any network connections drastically reduces the opportunity for those keys to be exfiltrated from the user.\n+\n+This workflow uses [Partially Signed Bitcoin Transactions](https://github.com/bitcoin/bitcoin/blob/master/doc/psbt.md) (PSBTs) to transfer the transaction to and from the offline wallet for signing using the private keys.\n+\n+## Overview\n+In this tutorial we have two hosts, both running Bitcoin v25.0\n+\n+* [offline] which is disconnected from all networks (internet, Tor, wifi, bluetooth etc.) and does not have, or need, a copy of the blockchain.\n+* [online] which is a regular online node with a synced blockchain.\n+\n+We are going to first create an `offline_wallet` on the [offline] host. We will then create a `watch_only_wallet` on the [online] host using public key descriptors exported from the `offline_wallet`. Next we will receive some coins into the wallet. In order to spend these coins we'll create an unsigned PSBT using the `watch_only_wallet`, sign the PSBT using the private keys in the `offline_wallet`, and finally broadcast the signed PSBT using the [online] host.\n+\n+### Requirements\n+- [jq](https://jqlang.github.io/jq/) installation - This tutorial uses jq to process certain fields from JSON RPC responses, but this convenience is optional.\n+\n+### Create and Prepare the `offline_wallet`\n+\n+1. On the offline machine create a wallet named `offline_wallet`. This wallet will contain private keys and must remain unconnected to any networks at all times.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"offline_wallet\"\n+\n+{\n+  \"name\": \"offline_wallet\"\n+}\n+```\n+\n+2. Export the public key-only descriptors from [offline] to a JSON file named `descriptors.json`. We use `jq` here to extract the `.descriptors` field from the full RPC response.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" listdescriptors \\\n+             | jq -r '.descriptors' \\\n+             >> /path/to/descriptors.json\n+```\n+\n+> [!NOTE]\n+> The `descriptors.json` file will be transferred to the online machine (e.g. using a USB flash drive) where it can be imported to create a related watch-only wallet.\n+\n+### Create the online `watch_only_wallet`\n+\n+1. On the online machine create a blank watch-only wallet which has private keys disabled and is named `watch_only_wallet`. This is achieved by using the `createwallet` options: `disable_private_keys=true, blank=true`.\n+\n+The `watch_only_wallet` wallet will be used to track and validate incoming transactions, for creating unsigned PSBTs when spending coins, and for broadcasting signed and finalised PSBTs.\n+\n+> [!NOTE]\n+> `blank` indicates that the wallet should not generate any new keys of its own. `disable_private_keys` indicates that the wallet should refuse to import private keys, i.e. will be a dedicated watch-only wallet.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet \\\n+              wallet_name=\"watch_only_wallet\" \\\n+              disable_private_keys=true \\\n+              blank=true\n+\n+{\n+  \"name\": \"watch_only_wallet\"\n+}\n+```\n+\n+2. Import the `offline_wallet`s public key descriptors to the online `watch_only_wallet` using the `descriptors.json` file created on the offline wallet.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" importdescriptors \"$(cat /path/to/descriptors.json)\"\n+\n+[\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  }\n+]\n+```\n+> [!NOTE]\n+> Multiple success values show indicates that multiple descriptors, for different address types, have been successfully imported. This allows generating different address types on the `watch_only_wallet`.\n+\n+### Fund the `offline_wallet`\n+\n+At this point it's important to understand that both the `offline_wallet` and [online] `watch_only_wallet` share the same public keys. As a result they generate the same addresses. Transactions can be constructed using either wallet, but valid signatures can only be added by the `offline_wallet` as only it has the private keys.\n+\n+1. Generate an address to receive coins to. You can use _either_ the `offline_wallet` or the [online] `watch_only_wallet` to generate this address, as they will produce the same addresses. For the sake of this guide we'll use the [online] `watch_only_wallet` to generate the address.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" getnewaddress\n+\n+tb1qtu5qgc6ddhmqm5yqjvhg83qgk2t4ewajg0h6yh\n+```\n+\n+2. Visit a faucet like https://signet.bc-2.jp and enter your address from the previous command to receive a small amount of signet coins to this address.\n+\n+3. Confirm that coins were received using the online `watch_only_wallet`. Note that the transaction may take a few moments before being received on your local node, depending on its connectivity. Just re-run the command periodically until the transaction is received.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" listunspent\n+\n+[\n+  {\n+    \"txid\": \"0f3953dfc3eb8e753cd1633151837c5b9953992914ff32b7de08c47f1f29c762\",\n+    \"vout\": 1,\n+    \"address\": \"tb1qtu5qgc6ddhmqm5yqjvhg83qgk2t4ewajg0h6yh\",\n+    \"label\": \"\",\n+    \"scriptPubKey\": \"00145f2804634d6df60dd080932e83c408b2975cbbb2\",\n+    \"amount\": 0.01000000,\n+    \"confirmations\": 4,\n+    \"spendable\": true,\n+    \"solvable\": true,\n+    \"desc\": \"wpkh([306c734f/84h/1h/0h/0/0]025932ccee7590158f7e08bb36290d135d30a0b045163da896e1cd7645ec4223a9)#xytvyr4a\",\n+    \"parent_descs\": [\n+      \"wpkh([306c734f/84h/1h/0h]tpubDCJnY92ib4Zu3qd6wrBXEjG436tQdA2tDiJU2iSJYjkNS1darssPWKaBfojhjUF5vMLBcxbN2r93pmFMz2zyTEZuNx9JDo9rWqoHhATW3Uz/0/*)#7mh08dkg\"\n+    ],\n+    \"safe\": true\n+  }\n+]\n+```\n+\n+### Create and Export an Unsigned PSBT\n+\n+1. Get a destination address for the transaction. In this tutorial we'll be sending funds to the address `tb1q9k5w0nhnhyeh78snpxh0t5t7c3lxdeg3erez32`, but if you don't need the coins for further testing you could send the coins back to the faucet.\n+\n+2. Create a funded but unsigned PSBT to the destination address with the [online] `watch_only_wallet` by using `walletcreatefundedpsbt inputs[], outputs[address: amount]` and export the unsigned PSBT to a file `funded_psbt.txt` for easy portability to the `offline_wallet` for signing:\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" walletcreatefundedpsbt \\\n+              '[]' '[{\"tb1q9k5w0nhnhyeh78snpxh0t5t7c3lxdeg3erez32\": 0.009}]' \\\n+              | jq -r '.psbt' \\\n+              >> /path/to/funded_psbt.txt\n+\n+[online]$ cat /path/to/funded_psbt.txt\n+\n+cHNidP8BAHECAAAAAWLHKR9/xAjetzL/FCmZU5lbfINRMWPRPHWO68PfUzkPAQAAAAD9////AoA4AQAAAAAAFgAULajnzvO5M38eEwmu9dF+xH5m5RGs0g0AAAAAABYAFMaT0f/Wp2DCZzL6dkJ3GhWj4Y9vAAAAAAABAHECAAAAAY+dRPEBrGopkw4ugSzS9npzJDEIrE/bq1XXI0KbYnYrAQAAAAD+////ArKaXgAAAAAAFgAUwEc4LdoxSjbWo/2Ue+HS+QjwfiBAQg8AAAAAABYAFF8oBGNNbfYN0ICTLoPECLKXXLuyYW8CAAEBH0BCDwAAAAAAFgAUXygEY01t9g3QgJMug8QIspdcu7IiBgJZMszudZAVj34IuzYpDRNdMKCwRRY9qJbhzXZF7EIjqRgwbHNPVAAAgAEAAIAAAACAAAAAAAAAAAAAACICA7BlBnyAR4F2UkKuSX9MFhYCsn6j//z9i7lHDm1O0CU0GDBsc09UAACAAQAAgAAAAIABAAAAAAAAAAA=\n+```\n+> [!NOTE]\n+> Leaving the `input` array empty in the above `walletcreatefundedpsbt` command is permitted and will cause the wallet to automatically select appropriate inputs for the transaction.\n+\n+### Decode and Analyze the Unsigned PSBT\n+\n+Decode and analyze the unsigned PSBT on the `offline_wallet` using the `funded_psbt.txt` file:\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet decodepsbt $(cat /path/to/funded_psbt.txt)\n+\n+{\n+    ...\n+}\n+\n+[offline]$ ./src/bitcoin-cli -signet analyzepsbt $(cat /path/to/funded_psbt.txt)\n+\n+{\n+  \"inputs\": [\n+    {\n+      \"has_utxo\": true,\n+      \"is_final\": false,\n+      \"next\": \"signer\",\n+      \"missing\": {\n+        \"signatures\": [\n+          \"5f2804634d6df60dd080932e83c408b2975cbbb2\"\n+        ]\n+      }\n+    }\n+  ],\n+  \"estimated_vsize\": 141,\n+  \"estimated_feerate\": 0.00100000,\n+  \"fee\": 0.00014100,\n+  \"next\": \"signer\"\n+}\n+```\n+\n+Notice that the analysis of the PSBT shows that \"signatures\" are missing and should be provided by the private key corresponding to the public key hash (hash160) \"5f2804634d6df60dd080932e83c408b2975cbbb2\"\n+\n+### Process and Sign the PSBT\n+\n+Process, Sign and Finalize the PSBT on the `offline_wallet` using the `walletprocesspsbt` command.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" walletprocesspsbt $(cat /path/to/funded_psbt.txt) \\\n+               | jq -r .hex \\\n+               >> /path/to/final_psbt.txt\n+```\n+\n+Next save the final PSBT hex to a file `final_psbt.txt` so that it can be transferred back to the online wallet for broadcasting.\n+\n+```sh\n+[offline]$ cat ~/final_psbt.txt\n+\n+0200000000010162c7291f7fc408deb732ff14299953995b7c83513163d13c758eebc3df53390f0100000000fdffffff028c4f010000000000160014dda0f427f67bfeca9f0e7252e458ee39b82c7e06a0bb0d00000000001600142da8e7cef3b9337f1e1309aef5d17ec47e66e5110247304402200d245ee92df8be0183c98fb26bcbc474307ccdb764877273644b4c4eb359138202206c4cf787f120828a812b47043902683e24d50a60216e3b2fe0f104be2806e54f0121025932ccee7590158f7e08bb36290d135d30a0b045163da896e1cd7645ec4223a900000000\n+```\n+\n+### Broadcast the Signed and Finalized PSBT\n+Broadcast the funded, signed and finalized PSBT `final_psbt.txt` using the online wallet:",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 210,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "6473e4c0ec7eb970018574dedfd68f2d0dd2a4d0",
      "in_reply_to_id": null,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "super-extra clarity nit:\r\n\r\n```suggestion\r\nBroadcast the funded, signed and finalized PSBT `final_psbt.txt` using `sendrawtransaction` on the online wallet:\r\n```",
      "created_at": "2023-10-10T11:29:53Z",
      "updated_at": "2023-10-10T11:35:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1352285859",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1352285859"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 210,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1352289418",
      "pull_request_review_id": 1667371877,
      "id": 1352289418,
      "node_id": "PRRC_kwDOABII585QmkyK",
      "diff_hunk": "@@ -0,0 +1,247 @@\n+# Offline Signing Tutorial\n+\n+This tutorial will describe how to use two instances of Bitcoin Core, one online and one offline, to greatly increase security by not having private keys reside on a networked device.\n+\n+Maintaining an air-gap between private keys and any network connections drastically reduces the opportunity for those keys to be exfiltrated from the user.\n+\n+This workflow uses [Partially Signed Bitcoin Transactions](https://github.com/bitcoin/bitcoin/blob/master/doc/psbt.md) (PSBTs) to transfer the transaction to and from the offline wallet for signing using the private keys.\n+\n+## Overview\n+In this tutorial we have two hosts, both running Bitcoin v25.0\n+\n+* [offline] which is disconnected from all networks (internet, Tor, wifi, bluetooth etc.) and does not have, or need, a copy of the blockchain.\n+* [online] which is a regular online node with a synced blockchain.\n+\n+We are going to first create an `offline_wallet` on the [offline] host. We will then create a `watch_only_wallet` on the [online] host using public key descriptors exported from the `offline_wallet`. Next we will receive some coins into the wallet. In order to spend these coins we'll create an unsigned PSBT using the `watch_only_wallet`, sign the PSBT using the private keys in the `offline_wallet`, and finally broadcast the signed PSBT using the [online] host.\n+\n+### Requirements\n+- [jq](https://jqlang.github.io/jq/) installation - This tutorial uses jq to process certain fields from JSON RPC responses, but this convenience is optional.\n+\n+### Create and Prepare the `offline_wallet`\n+\n+1. On the offline machine create a wallet named `offline_wallet`. This wallet will contain private keys and must remain unconnected to any networks at all times.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"offline_wallet\"\n+\n+{\n+  \"name\": \"offline_wallet\"\n+}\n+```\n+\n+2. Export the public key-only descriptors from [offline] to a JSON file named `descriptors.json`. We use `jq` here to extract the `.descriptors` field from the full RPC response.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" listdescriptors \\\n+             | jq -r '.descriptors' \\\n+             >> /path/to/descriptors.json\n+```\n+\n+> [!NOTE]\n+> The `descriptors.json` file will be transferred to the online machine (e.g. using a USB flash drive) where it can be imported to create a related watch-only wallet.\n+\n+### Create the online `watch_only_wallet`\n+\n+1. On the online machine create a blank watch-only wallet which has private keys disabled and is named `watch_only_wallet`. This is achieved by using the `createwallet` options: `disable_private_keys=true, blank=true`.\n+\n+The `watch_only_wallet` wallet will be used to track and validate incoming transactions, for creating unsigned PSBTs when spending coins, and for broadcasting signed and finalised PSBTs.\n+\n+> [!NOTE]\n+> `blank` indicates that the wallet should not generate any new keys of its own. `disable_private_keys` indicates that the wallet should refuse to import private keys, i.e. will be a dedicated watch-only wallet.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet \\\n+              wallet_name=\"watch_only_wallet\" \\\n+              disable_private_keys=true \\\n+              blank=true\n+\n+{\n+  \"name\": \"watch_only_wallet\"\n+}\n+```\n+\n+2. Import the `offline_wallet`s public key descriptors to the online `watch_only_wallet` using the `descriptors.json` file created on the offline wallet.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" importdescriptors \"$(cat /path/to/descriptors.json)\"\n+\n+[\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  }\n+]\n+```\n+> [!NOTE]\n+> Multiple success values show indicates that multiple descriptors, for different address types, have been successfully imported. This allows generating different address types on the `watch_only_wallet`.\n+\n+### Fund the `offline_wallet`\n+\n+At this point it's important to understand that both the `offline_wallet` and [online] `watch_only_wallet` share the same public keys. As a result they generate the same addresses. Transactions can be constructed using either wallet, but valid signatures can only be added by the `offline_wallet` as only it has the private keys.\n+\n+1. Generate an address to receive coins to. You can use _either_ the `offline_wallet` or the [online] `watch_only_wallet` to generate this address, as they will produce the same addresses. For the sake of this guide we'll use the [online] `watch_only_wallet` to generate the address.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" getnewaddress\n+\n+tb1qtu5qgc6ddhmqm5yqjvhg83qgk2t4ewajg0h6yh\n+```\n+\n+2. Visit a faucet like https://signet.bc-2.jp and enter your address from the previous command to receive a small amount of signet coins to this address.\n+\n+3. Confirm that coins were received using the online `watch_only_wallet`. Note that the transaction may take a few moments before being received on your local node, depending on its connectivity. Just re-run the command periodically until the transaction is received.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" listunspent\n+\n+[\n+  {\n+    \"txid\": \"0f3953dfc3eb8e753cd1633151837c5b9953992914ff32b7de08c47f1f29c762\",\n+    \"vout\": 1,\n+    \"address\": \"tb1qtu5qgc6ddhmqm5yqjvhg83qgk2t4ewajg0h6yh\",\n+    \"label\": \"\",\n+    \"scriptPubKey\": \"00145f2804634d6df60dd080932e83c408b2975cbbb2\",\n+    \"amount\": 0.01000000,\n+    \"confirmations\": 4,\n+    \"spendable\": true,\n+    \"solvable\": true,\n+    \"desc\": \"wpkh([306c734f/84h/1h/0h/0/0]025932ccee7590158f7e08bb36290d135d30a0b045163da896e1cd7645ec4223a9)#xytvyr4a\",\n+    \"parent_descs\": [\n+      \"wpkh([306c734f/84h/1h/0h]tpubDCJnY92ib4Zu3qd6wrBXEjG436tQdA2tDiJU2iSJYjkNS1darssPWKaBfojhjUF5vMLBcxbN2r93pmFMz2zyTEZuNx9JDo9rWqoHhATW3Uz/0/*)#7mh08dkg\"\n+    ],\n+    \"safe\": true\n+  }\n+]\n+```\n+\n+### Create and Export an Unsigned PSBT\n+\n+1. Get a destination address for the transaction. In this tutorial we'll be sending funds to the address `tb1q9k5w0nhnhyeh78snpxh0t5t7c3lxdeg3erez32`, but if you don't need the coins for further testing you could send the coins back to the faucet.\n+\n+2. Create a funded but unsigned PSBT to the destination address with the [online] `watch_only_wallet` by using `walletcreatefundedpsbt inputs[], outputs[address: amount]` and export the unsigned PSBT to a file `funded_psbt.txt` for easy portability to the `offline_wallet` for signing:\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" walletcreatefundedpsbt \\\n+              '[]' '[{\"tb1q9k5w0nhnhyeh78snpxh0t5t7c3lxdeg3erez32\": 0.009}]' \\\n+              | jq -r '.psbt' \\\n+              >> /path/to/funded_psbt.txt\n+\n+[online]$ cat /path/to/funded_psbt.txt\n+\n+cHNidP8BAHECAAAAAWLHKR9/xAjetzL/FCmZU5lbfINRMWPRPHWO68PfUzkPAQAAAAD9////AoA4AQAAAAAAFgAULajnzvO5M38eEwmu9dF+xH5m5RGs0g0AAAAAABYAFMaT0f/Wp2DCZzL6dkJ3GhWj4Y9vAAAAAAABAHECAAAAAY+dRPEBrGopkw4ugSzS9npzJDEIrE/bq1XXI0KbYnYrAQAAAAD+////ArKaXgAAAAAAFgAUwEc4LdoxSjbWo/2Ue+HS+QjwfiBAQg8AAAAAABYAFF8oBGNNbfYN0ICTLoPECLKXXLuyYW8CAAEBH0BCDwAAAAAAFgAUXygEY01t9g3QgJMug8QIspdcu7IiBgJZMszudZAVj34IuzYpDRNdMKCwRRY9qJbhzXZF7EIjqRgwbHNPVAAAgAEAAIAAAACAAAAAAAAAAAAAACICA7BlBnyAR4F2UkKuSX9MFhYCsn6j//z9i7lHDm1O0CU0GDBsc09UAACAAQAAgAAAAIABAAAAAAAAAAA=\n+```\n+> [!NOTE]\n+> Leaving the `input` array empty in the above `walletcreatefundedpsbt` command is permitted and will cause the wallet to automatically select appropriate inputs for the transaction.\n+\n+### Decode and Analyze the Unsigned PSBT\n+\n+Decode and analyze the unsigned PSBT on the `offline_wallet` using the `funded_psbt.txt` file:\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet decodepsbt $(cat /path/to/funded_psbt.txt)\n+\n+{\n+    ...\n+}\n+\n+[offline]$ ./src/bitcoin-cli -signet analyzepsbt $(cat /path/to/funded_psbt.txt)\n+\n+{\n+  \"inputs\": [\n+    {\n+      \"has_utxo\": true,\n+      \"is_final\": false,\n+      \"next\": \"signer\",\n+      \"missing\": {\n+        \"signatures\": [\n+          \"5f2804634d6df60dd080932e83c408b2975cbbb2\"\n+        ]\n+      }\n+    }\n+  ],\n+  \"estimated_vsize\": 141,\n+  \"estimated_feerate\": 0.00100000,\n+  \"fee\": 0.00014100,\n+  \"next\": \"signer\"\n+}\n+```\n+\n+Notice that the analysis of the PSBT shows that \"signatures\" are missing and should be provided by the private key corresponding to the public key hash (hash160) \"5f2804634d6df60dd080932e83c408b2975cbbb2\"\n+\n+### Process and Sign the PSBT\n+\n+Process, Sign and Finalize the PSBT on the `offline_wallet` using the `walletprocesspsbt` command.",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 193,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "6473e4c0ec7eb970018574dedfd68f2d0dd2a4d0",
      "in_reply_to_id": null,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\nProcess, Sign and Finalize the PSBT on the `offline_wallet` using the `walletprocesspsbt` command, saving the output to a file `final_psbt.txt`.\r\n```",
      "created_at": "2023-10-10T11:32:41Z",
      "updated_at": "2023-10-10T11:35:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1352289418",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1352289418"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 193,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1352291092",
      "pull_request_review_id": 1667371877,
      "id": 1352291092,
      "node_id": "PRRC_kwDOABII585QmlMU",
      "diff_hunk": "@@ -0,0 +1,247 @@\n+# Offline Signing Tutorial\n+\n+This tutorial will describe how to use two instances of Bitcoin Core, one online and one offline, to greatly increase security by not having private keys reside on a networked device.\n+\n+Maintaining an air-gap between private keys and any network connections drastically reduces the opportunity for those keys to be exfiltrated from the user.\n+\n+This workflow uses [Partially Signed Bitcoin Transactions](https://github.com/bitcoin/bitcoin/blob/master/doc/psbt.md) (PSBTs) to transfer the transaction to and from the offline wallet for signing using the private keys.\n+\n+## Overview\n+In this tutorial we have two hosts, both running Bitcoin v25.0\n+\n+* [offline] which is disconnected from all networks (internet, Tor, wifi, bluetooth etc.) and does not have, or need, a copy of the blockchain.\n+* [online] which is a regular online node with a synced blockchain.\n+\n+We are going to first create an `offline_wallet` on the [offline] host. We will then create a `watch_only_wallet` on the [online] host using public key descriptors exported from the `offline_wallet`. Next we will receive some coins into the wallet. In order to spend these coins we'll create an unsigned PSBT using the `watch_only_wallet`, sign the PSBT using the private keys in the `offline_wallet`, and finally broadcast the signed PSBT using the [online] host.\n+\n+### Requirements\n+- [jq](https://jqlang.github.io/jq/) installation - This tutorial uses jq to process certain fields from JSON RPC responses, but this convenience is optional.\n+\n+### Create and Prepare the `offline_wallet`\n+\n+1. On the offline machine create a wallet named `offline_wallet`. This wallet will contain private keys and must remain unconnected to any networks at all times.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"offline_wallet\"\n+\n+{\n+  \"name\": \"offline_wallet\"\n+}\n+```\n+\n+2. Export the public key-only descriptors from [offline] to a JSON file named `descriptors.json`. We use `jq` here to extract the `.descriptors` field from the full RPC response.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" listdescriptors \\\n+             | jq -r '.descriptors' \\\n+             >> /path/to/descriptors.json\n+```\n+\n+> [!NOTE]\n+> The `descriptors.json` file will be transferred to the online machine (e.g. using a USB flash drive) where it can be imported to create a related watch-only wallet.\n+\n+### Create the online `watch_only_wallet`\n+\n+1. On the online machine create a blank watch-only wallet which has private keys disabled and is named `watch_only_wallet`. This is achieved by using the `createwallet` options: `disable_private_keys=true, blank=true`.\n+\n+The `watch_only_wallet` wallet will be used to track and validate incoming transactions, for creating unsigned PSBTs when spending coins, and for broadcasting signed and finalised PSBTs.\n+\n+> [!NOTE]\n+> `blank` indicates that the wallet should not generate any new keys of its own. `disable_private_keys` indicates that the wallet should refuse to import private keys, i.e. will be a dedicated watch-only wallet.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet \\\n+              wallet_name=\"watch_only_wallet\" \\\n+              disable_private_keys=true \\\n+              blank=true\n+\n+{\n+  \"name\": \"watch_only_wallet\"\n+}\n+```\n+\n+2. Import the `offline_wallet`s public key descriptors to the online `watch_only_wallet` using the `descriptors.json` file created on the offline wallet.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" importdescriptors \"$(cat /path/to/descriptors.json)\"\n+\n+[\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  }\n+]\n+```\n+> [!NOTE]\n+> Multiple success values show indicates that multiple descriptors, for different address types, have been successfully imported. This allows generating different address types on the `watch_only_wallet`.\n+\n+### Fund the `offline_wallet`\n+\n+At this point it's important to understand that both the `offline_wallet` and [online] `watch_only_wallet` share the same public keys. As a result they generate the same addresses. Transactions can be constructed using either wallet, but valid signatures can only be added by the `offline_wallet` as only it has the private keys.\n+\n+1. Generate an address to receive coins to. You can use _either_ the `offline_wallet` or the [online] `watch_only_wallet` to generate this address, as they will produce the same addresses. For the sake of this guide we'll use the [online] `watch_only_wallet` to generate the address.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" getnewaddress\n+\n+tb1qtu5qgc6ddhmqm5yqjvhg83qgk2t4ewajg0h6yh\n+```\n+\n+2. Visit a faucet like https://signet.bc-2.jp and enter your address from the previous command to receive a small amount of signet coins to this address.\n+\n+3. Confirm that coins were received using the online `watch_only_wallet`. Note that the transaction may take a few moments before being received on your local node, depending on its connectivity. Just re-run the command periodically until the transaction is received.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" listunspent\n+\n+[\n+  {\n+    \"txid\": \"0f3953dfc3eb8e753cd1633151837c5b9953992914ff32b7de08c47f1f29c762\",\n+    \"vout\": 1,\n+    \"address\": \"tb1qtu5qgc6ddhmqm5yqjvhg83qgk2t4ewajg0h6yh\",\n+    \"label\": \"\",\n+    \"scriptPubKey\": \"00145f2804634d6df60dd080932e83c408b2975cbbb2\",\n+    \"amount\": 0.01000000,\n+    \"confirmations\": 4,\n+    \"spendable\": true,\n+    \"solvable\": true,\n+    \"desc\": \"wpkh([306c734f/84h/1h/0h/0/0]025932ccee7590158f7e08bb36290d135d30a0b045163da896e1cd7645ec4223a9)#xytvyr4a\",\n+    \"parent_descs\": [\n+      \"wpkh([306c734f/84h/1h/0h]tpubDCJnY92ib4Zu3qd6wrBXEjG436tQdA2tDiJU2iSJYjkNS1darssPWKaBfojhjUF5vMLBcxbN2r93pmFMz2zyTEZuNx9JDo9rWqoHhATW3Uz/0/*)#7mh08dkg\"\n+    ],\n+    \"safe\": true\n+  }\n+]\n+```\n+\n+### Create and Export an Unsigned PSBT\n+\n+1. Get a destination address for the transaction. In this tutorial we'll be sending funds to the address `tb1q9k5w0nhnhyeh78snpxh0t5t7c3lxdeg3erez32`, but if you don't need the coins for further testing you could send the coins back to the faucet.\n+\n+2. Create a funded but unsigned PSBT to the destination address with the [online] `watch_only_wallet` by using `walletcreatefundedpsbt inputs[], outputs[address: amount]` and export the unsigned PSBT to a file `funded_psbt.txt` for easy portability to the `offline_wallet` for signing:\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" walletcreatefundedpsbt \\\n+              '[]' '[{\"tb1q9k5w0nhnhyeh78snpxh0t5t7c3lxdeg3erez32\": 0.009}]' \\\n+              | jq -r '.psbt' \\\n+              >> /path/to/funded_psbt.txt\n+\n+[online]$ cat /path/to/funded_psbt.txt\n+\n+cHNidP8BAHECAAAAAWLHKR9/xAjetzL/FCmZU5lbfINRMWPRPHWO68PfUzkPAQAAAAD9////AoA4AQAAAAAAFgAULajnzvO5M38eEwmu9dF+xH5m5RGs0g0AAAAAABYAFMaT0f/Wp2DCZzL6dkJ3GhWj4Y9vAAAAAAABAHECAAAAAY+dRPEBrGopkw4ugSzS9npzJDEIrE/bq1XXI0KbYnYrAQAAAAD+////ArKaXgAAAAAAFgAUwEc4LdoxSjbWo/2Ue+HS+QjwfiBAQg8AAAAAABYAFF8oBGNNbfYN0ICTLoPECLKXXLuyYW8CAAEBH0BCDwAAAAAAFgAUXygEY01t9g3QgJMug8QIspdcu7IiBgJZMszudZAVj34IuzYpDRNdMKCwRRY9qJbhzXZF7EIjqRgwbHNPVAAAgAEAAIAAAACAAAAAAAAAAAAAACICA7BlBnyAR4F2UkKuSX9MFhYCsn6j//z9i7lHDm1O0CU0GDBsc09UAACAAQAAgAAAAIABAAAAAAAAAAA=\n+```\n+> [!NOTE]\n+> Leaving the `input` array empty in the above `walletcreatefundedpsbt` command is permitted and will cause the wallet to automatically select appropriate inputs for the transaction.\n+\n+### Decode and Analyze the Unsigned PSBT\n+\n+Decode and analyze the unsigned PSBT on the `offline_wallet` using the `funded_psbt.txt` file:\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet decodepsbt $(cat /path/to/funded_psbt.txt)\n+\n+{\n+    ...\n+}\n+\n+[offline]$ ./src/bitcoin-cli -signet analyzepsbt $(cat /path/to/funded_psbt.txt)\n+\n+{\n+  \"inputs\": [\n+    {\n+      \"has_utxo\": true,\n+      \"is_final\": false,\n+      \"next\": \"signer\",\n+      \"missing\": {\n+        \"signatures\": [\n+          \"5f2804634d6df60dd080932e83c408b2975cbbb2\"\n+        ]\n+      }\n+    }\n+  ],\n+  \"estimated_vsize\": 141,\n+  \"estimated_feerate\": 0.00100000,\n+  \"fee\": 0.00014100,\n+  \"next\": \"signer\"\n+}\n+```\n+\n+Notice that the analysis of the PSBT shows that \"signatures\" are missing and should be provided by the private key corresponding to the public key hash (hash160) \"5f2804634d6df60dd080932e83c408b2975cbbb2\"\n+\n+### Process and Sign the PSBT\n+\n+Process, Sign and Finalize the PSBT on the `offline_wallet` using the `walletprocesspsbt` command.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" walletprocesspsbt $(cat /path/to/funded_psbt.txt) \\\n+               | jq -r .hex \\\n+               >> /path/to/final_psbt.txt\n+```\n+\n+Next save the final PSBT hex to a file `final_psbt.txt` so that it can be transferred back to the online wallet for broadcasting.",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 201,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "6473e4c0ec7eb970018574dedfd68f2d0dd2a4d0",
      "in_reply_to_id": null,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "We already saved this in the previous command.\r\n\r\nAlso not sure of the value of `cat`-ing the psbt file here? Just to check something saved correctly? Perhaps if there is little value we can remove L201-L207 altogether?",
      "created_at": "2023-10-10T11:34:14Z",
      "updated_at": "2023-10-10T11:35:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1352291092",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1352291092"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 201,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1360946640",
      "pull_request_review_id": 1680498323,
      "id": 1360946640,
      "node_id": "PRRC_kwDOABII585RHmXQ",
      "diff_hunk": "@@ -0,0 +1,239 @@\n+# Offline Signing Tutorial\n+\n+This tutorial will describe how to use two instances of Bitcoin Core, one online and one offline, to greatly increase security by not having private keys reside on a networked device.\n+\n+Maintaining an air-gap between private keys and any network connections drastically reduces the opportunity for those keys to be exfiltrated from the user.\n+\n+This workflow uses [Partially Signed Bitcoin Transactions](https://github.com/bitcoin/bitcoin/blob/master/doc/psbt.md) (PSBTs) to transfer the transaction to and from the offline wallet for signing using the private keys.\n+\n+## Overview\n+In this tutorial we have two hosts, both running Bitcoin v25.0\n+\n+* [offline] which is disconnected from all networks (internet, Tor, wifi, bluetooth etc.) and does not have, or need, a copy of the blockchain.\n+* [online] which is a regular online node with a synced blockchain.\n+\n+We are going to first create an `offline_wallet` on the [offline] host. We will then create a `watch_only_wallet` on the [online] host using public key descriptors exported from the `offline_wallet`. Next we will receive some coins into the wallet. In order to spend these coins we'll create an unsigned PSBT using the `watch_only_wallet`, sign the PSBT using the private keys in the `offline_wallet`, and finally broadcast the signed PSBT using the [online] host.",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 15,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "4f12e2ba986406aa623d2fa3adc75c239dfea409",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit, if you retouch: I'd say remove the brackets around online and offline - they are English words and don't really need to look like code",
      "created_at": "2023-10-16T16:37:24Z",
      "updated_at": "2023-10-16T16:49:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1360946640",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1360946640"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 15,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1360949924",
      "pull_request_review_id": 1680498323,
      "id": 1360949924,
      "node_id": "PRRC_kwDOABII585RHnKk",
      "diff_hunk": "@@ -0,0 +1,239 @@\n+# Offline Signing Tutorial\n+\n+This tutorial will describe how to use two instances of Bitcoin Core, one online and one offline, to greatly increase security by not having private keys reside on a networked device.\n+\n+Maintaining an air-gap between private keys and any network connections drastically reduces the opportunity for those keys to be exfiltrated from the user.\n+\n+This workflow uses [Partially Signed Bitcoin Transactions](https://github.com/bitcoin/bitcoin/blob/master/doc/psbt.md) (PSBTs) to transfer the transaction to and from the offline wallet for signing using the private keys.\n+\n+## Overview\n+In this tutorial we have two hosts, both running Bitcoin v25.0\n+\n+* [offline] which is disconnected from all networks (internet, Tor, wifi, bluetooth etc.) and does not have, or need, a copy of the blockchain.\n+* [online] which is a regular online node with a synced blockchain.\n+\n+We are going to first create an `offline_wallet` on the [offline] host. We will then create a `watch_only_wallet` on the [online] host using public key descriptors exported from the `offline_wallet`. Next we will receive some coins into the wallet. In order to spend these coins we'll create an unsigned PSBT using the `watch_only_wallet`, sign the PSBT using the private keys in the `offline_wallet`, and finally broadcast the signed PSBT using the [online] host.\n+\n+### Requirements\n+- [jq](https://jqlang.github.io/jq/) installation - This tutorial uses jq to process certain fields from JSON RPC responses, but this convenience is optional.\n+\n+### Create and Prepare the `offline_wallet`\n+\n+1. On the offline machine create a wallet named `offline_wallet`. This wallet will contain private keys and must remain unconnected to any networks at all times.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"offline_wallet\"",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 25,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "4f12e2ba986406aa623d2fa3adc75c239dfea409",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "1. First time signet is mentioned. I suggest either explaining it quickly at the top and inform users to leave it out for mainnet, or just leave it out for the guide\r\n2. I think `-passphrase` should be set here too to encrypt the wallet. This is a security tutorial after all!",
      "created_at": "2023-10-16T16:39:55Z",
      "updated_at": "2023-10-16T16:49:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1360949924",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1360949924"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 25,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1360957793",
      "pull_request_review_id": 1680498323,
      "id": 1360957793,
      "node_id": "PRRC_kwDOABII585RHpFh",
      "diff_hunk": "@@ -0,0 +1,239 @@\n+# Offline Signing Tutorial\n+\n+This tutorial will describe how to use two instances of Bitcoin Core, one online and one offline, to greatly increase security by not having private keys reside on a networked device.\n+\n+Maintaining an air-gap between private keys and any network connections drastically reduces the opportunity for those keys to be exfiltrated from the user.\n+\n+This workflow uses [Partially Signed Bitcoin Transactions](https://github.com/bitcoin/bitcoin/blob/master/doc/psbt.md) (PSBTs) to transfer the transaction to and from the offline wallet for signing using the private keys.\n+\n+## Overview\n+In this tutorial we have two hosts, both running Bitcoin v25.0\n+\n+* [offline] which is disconnected from all networks (internet, Tor, wifi, bluetooth etc.) and does not have, or need, a copy of the blockchain.\n+* [online] which is a regular online node with a synced blockchain.\n+\n+We are going to first create an `offline_wallet` on the [offline] host. We will then create a `watch_only_wallet` on the [online] host using public key descriptors exported from the `offline_wallet`. Next we will receive some coins into the wallet. In order to spend these coins we'll create an unsigned PSBT using the `watch_only_wallet`, sign the PSBT using the private keys in the `offline_wallet`, and finally broadcast the signed PSBT using the [online] host.\n+\n+### Requirements\n+- [jq](https://jqlang.github.io/jq/) installation - This tutorial uses jq to process certain fields from JSON RPC responses, but this convenience is optional.\n+\n+### Create and Prepare the `offline_wallet`\n+\n+1. On the offline machine create a wallet named `offline_wallet`. This wallet will contain private keys and must remain unconnected to any networks at all times.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"offline_wallet\"\n+\n+{\n+  \"name\": \"offline_wallet\"\n+}\n+```\n+\n+2. Export the public key-only descriptors from [offline] to a JSON file named `descriptors.json`. We use `jq` here to extract the `.descriptors` field from the full RPC response.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" listdescriptors \\\n+             | jq -r '.descriptors' \\\n+             >> /path/to/descriptors.json\n+```\n+\n+> [!NOTE]\n+> The `descriptors.json` file will be transferred to the online machine (e.g. using a USB flash drive) where it can be imported to create a related watch-only wallet.\n+\n+### Create the online `watch_only_wallet`\n+\n+1. On the online machine create a blank watch-only wallet which has private keys disabled and is named `watch_only_wallet`. This is achieved by using the `createwallet` options: `disable_private_keys=true, blank=true`.\n+\n+The `watch_only_wallet` wallet will be used to track and validate incoming transactions, for creating unsigned PSBTs when spending coins, and for broadcasting signed and finalised PSBTs.\n+\n+> [!NOTE]\n+> `blank` indicates that the wallet should not generate any new keys of its own. `disable_private_keys` indicates that the wallet should refuse to import private keys, i.e. will be a dedicated watch-only wallet.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet \\\n+              wallet_name=\"watch_only_wallet\" \\\n+              disable_private_keys=true \\\n+              blank=true\n+\n+{\n+  \"name\": \"watch_only_wallet\"\n+}\n+```\n+\n+2. Import the `offline_wallet`s public key descriptors to the online `watch_only_wallet` using the `descriptors.json` file created on the offline wallet.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" importdescriptors \"$(cat /path/to/descriptors.json)\"\n+\n+[\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  }\n+]\n+```\n+> [!NOTE]\n+> Multiple success values show indicates that multiple descriptors, for different address types, have been successfully imported. This allows generating different address types on the `watch_only_wallet`.\n+\n+### Fund the `offline_wallet`\n+\n+At this point it's important to understand that both the `offline_wallet` and [online] `watch_only_wallet` share the same public keys. As a result they generate the same addresses. Transactions can be constructed using either wallet, but valid signatures can only be added by the `offline_wallet` as only it has the private keys.\n+\n+1. Generate an address to receive coins to. You can use _either_ the `offline_wallet` or the [online] `watch_only_wallet` to generate this address, as they will produce the same addresses. For the sake of this guide we'll use the [online] `watch_only_wallet` to generate the address.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" getnewaddress\n+\n+tb1qtu5qgc6ddhmqm5yqjvhg83qgk2t4ewajg0h6yh\n+```\n+\n+2. Visit a faucet like https://signet.bc-2.jp and enter your address from the previous command to receive a small amount of signet coins to this address.\n+\n+3. Confirm that coins were received using the online `watch_only_wallet`. Note that the transaction may take a few moments before being received on your local node, depending on its connectivity. Just re-run the command periodically until the transaction is received.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" listunspent\n+\n+[\n+  {\n+    \"txid\": \"0f3953dfc3eb8e753cd1633151837c5b9953992914ff32b7de08c47f1f29c762\",\n+    \"vout\": 1,\n+    \"address\": \"tb1qtu5qgc6ddhmqm5yqjvhg83qgk2t4ewajg0h6yh\",\n+    \"label\": \"\",\n+    \"scriptPubKey\": \"00145f2804634d6df60dd080932e83c408b2975cbbb2\",\n+    \"amount\": 0.01000000,\n+    \"confirmations\": 4,\n+    \"spendable\": true,\n+    \"solvable\": true,\n+    \"desc\": \"wpkh([306c734f/84h/1h/0h/0/0]025932ccee7590158f7e08bb36290d135d30a0b045163da896e1cd7645ec4223a9)#xytvyr4a\",\n+    \"parent_descs\": [\n+      \"wpkh([306c734f/84h/1h/0h]tpubDCJnY92ib4Zu3qd6wrBXEjG436tQdA2tDiJU2iSJYjkNS1darssPWKaBfojhjUF5vMLBcxbN2r93pmFMz2zyTEZuNx9JDo9rWqoHhATW3Uz/0/*)#7mh08dkg\"\n+    ],\n+    \"safe\": true\n+  }\n+]\n+```\n+\n+### Create and Export an Unsigned PSBT\n+\n+1. Get a destination address for the transaction. In this tutorial we'll be sending funds to the address `tb1q9k5w0nhnhyeh78snpxh0t5t7c3lxdeg3erez32`, but if you don't need the coins for further testing you could send the coins back to the faucet.\n+\n+2. Create a funded but unsigned PSBT to the destination address with the [online] `watch_only_wallet` by using `walletcreatefundedpsbt inputs[], outputs[address: amount]` and export the unsigned PSBT to a file `funded_psbt.txt` for easy portability to the `offline_wallet` for signing:\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" walletcreatefundedpsbt \\\n+              '[]' '[{\"tb1q9k5w0nhnhyeh78snpxh0t5t7c3lxdeg3erez32\": 0.009}]' \\\n+              | jq -r '.psbt' \\\n+              >> /path/to/funded_psbt.txt\n+\n+[online]$ cat /path/to/funded_psbt.txt\n+\n+cHNidP8BAHECAAAAAWLHKR9/xAjetzL/FCmZU5lbfINRMWPRPHWO68PfUzkPAQAAAAD9////AoA4AQAAAAAAFgAULajnzvO5M38eEwmu9dF+xH5m5RGs0g0AAAAAABYAFMaT0f/Wp2DCZzL6dkJ3GhWj4Y9vAAAAAAABAHECAAAAAY+dRPEBrGopkw4ugSzS9npzJDEIrE/bq1XXI0KbYnYrAQAAAAD+////ArKaXgAAAAAAFgAUwEc4LdoxSjbWo/2Ue+HS+QjwfiBAQg8AAAAAABYAFF8oBGNNbfYN0ICTLoPECLKXXLuyYW8CAAEBH0BCDwAAAAAAFgAUXygEY01t9g3QgJMug8QIspdcu7IiBgJZMszudZAVj34IuzYpDRNdMKCwRRY9qJbhzXZF7EIjqRgwbHNPVAAAgAEAAIAAAACAAAAAAAAAAAAAACICA7BlBnyAR4F2UkKuSX9MFhYCsn6j//z9i7lHDm1O0CU0GDBsc09UAACAAQAAgAAAAIABAAAAAAAAAAA=\n+```\n+> [!NOTE]\n+> Leaving the `input` array empty in the above `walletcreatefundedpsbt` command is permitted and will cause the wallet to automatically select appropriate inputs for the transaction.\n+\n+### Decode and Analyze the Unsigned PSBT\n+\n+Decode and analyze the unsigned PSBT on the `offline_wallet` using the `funded_psbt.txt` file:\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet decodepsbt $(cat /path/to/funded_psbt.txt)\n+\n+{\n+    ...\n+}\n+\n+[offline]$ ./src/bitcoin-cli -signet analyzepsbt $(cat /path/to/funded_psbt.txt)\n+\n+{\n+  \"inputs\": [\n+    {\n+      \"has_utxo\": true,\n+      \"is_final\": false,\n+      \"next\": \"signer\",\n+      \"missing\": {\n+        \"signatures\": [\n+          \"5f2804634d6df60dd080932e83c408b2975cbbb2\"\n+        ]\n+      }\n+    }\n+  ],\n+  \"estimated_vsize\": 141,\n+  \"estimated_feerate\": 0.00100000,\n+  \"fee\": 0.00014100,\n+  \"next\": \"signer\"\n+}\n+```\n+\n+Notice that the analysis of the PSBT shows that \"signatures\" are missing and should be provided by the private key corresponding to the public key hash (hash160) \"5f2804634d6df60dd080932e83c408b2975cbbb2\"\n+\n+### Process and Sign the PSBT\n+\n+Process, Sign and Finalize the PSBT on the `offline_wallet` using the `walletprocesspsbt` command, saving the output to a file `final_psbt.txt`.",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 193,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "4f12e2ba986406aa623d2fa3adc75c239dfea409",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit\r\n```suggestion\r\nProcess, sign and finalize the PSBT on the `offline_wallet` using the `walletprocesspsbt` command, saving the output to a file `final_psbt.txt`.\r\n```",
      "created_at": "2023-10-16T16:45:46Z",
      "updated_at": "2023-10-16T16:49:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1360957793",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1360957793"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 193,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1360959686",
      "pull_request_review_id": 1680498323,
      "id": 1360959686,
      "node_id": "PRRC_kwDOABII585RHpjG",
      "diff_hunk": "@@ -0,0 +1,239 @@\n+# Offline Signing Tutorial\n+\n+This tutorial will describe how to use two instances of Bitcoin Core, one online and one offline, to greatly increase security by not having private keys reside on a networked device.\n+\n+Maintaining an air-gap between private keys and any network connections drastically reduces the opportunity for those keys to be exfiltrated from the user.\n+\n+This workflow uses [Partially Signed Bitcoin Transactions](https://github.com/bitcoin/bitcoin/blob/master/doc/psbt.md) (PSBTs) to transfer the transaction to and from the offline wallet for signing using the private keys.\n+\n+## Overview\n+In this tutorial we have two hosts, both running Bitcoin v25.0\n+\n+* [offline] which is disconnected from all networks (internet, Tor, wifi, bluetooth etc.) and does not have, or need, a copy of the blockchain.\n+* [online] which is a regular online node with a synced blockchain.\n+\n+We are going to first create an `offline_wallet` on the [offline] host. We will then create a `watch_only_wallet` on the [online] host using public key descriptors exported from the `offline_wallet`. Next we will receive some coins into the wallet. In order to spend these coins we'll create an unsigned PSBT using the `watch_only_wallet`, sign the PSBT using the private keys in the `offline_wallet`, and finally broadcast the signed PSBT using the [online] host.\n+\n+### Requirements\n+- [jq](https://jqlang.github.io/jq/) installation - This tutorial uses jq to process certain fields from JSON RPC responses, but this convenience is optional.\n+\n+### Create and Prepare the `offline_wallet`\n+\n+1. On the offline machine create a wallet named `offline_wallet`. This wallet will contain private keys and must remain unconnected to any networks at all times.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"offline_wallet\"\n+\n+{\n+  \"name\": \"offline_wallet\"\n+}\n+```\n+\n+2. Export the public key-only descriptors from [offline] to a JSON file named `descriptors.json`. We use `jq` here to extract the `.descriptors` field from the full RPC response.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" listdescriptors \\\n+             | jq -r '.descriptors' \\\n+             >> /path/to/descriptors.json\n+```\n+\n+> [!NOTE]\n+> The `descriptors.json` file will be transferred to the online machine (e.g. using a USB flash drive) where it can be imported to create a related watch-only wallet.\n+\n+### Create the online `watch_only_wallet`\n+\n+1. On the online machine create a blank watch-only wallet which has private keys disabled and is named `watch_only_wallet`. This is achieved by using the `createwallet` options: `disable_private_keys=true, blank=true`.\n+\n+The `watch_only_wallet` wallet will be used to track and validate incoming transactions, for creating unsigned PSBTs when spending coins, and for broadcasting signed and finalised PSBTs.\n+\n+> [!NOTE]\n+> `blank` indicates that the wallet should not generate any new keys of its own. `disable_private_keys` indicates that the wallet should refuse to import private keys, i.e. will be a dedicated watch-only wallet.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet \\\n+              wallet_name=\"watch_only_wallet\" \\\n+              disable_private_keys=true \\\n+              blank=true\n+\n+{\n+  \"name\": \"watch_only_wallet\"\n+}\n+```\n+\n+2. Import the `offline_wallet`s public key descriptors to the online `watch_only_wallet` using the `descriptors.json` file created on the offline wallet.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" importdescriptors \"$(cat /path/to/descriptors.json)\"\n+\n+[\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  }\n+]\n+```\n+> [!NOTE]\n+> Multiple success values show indicates that multiple descriptors, for different address types, have been successfully imported. This allows generating different address types on the `watch_only_wallet`.\n+\n+### Fund the `offline_wallet`\n+\n+At this point it's important to understand that both the `offline_wallet` and [online] `watch_only_wallet` share the same public keys. As a result they generate the same addresses. Transactions can be constructed using either wallet, but valid signatures can only be added by the `offline_wallet` as only it has the private keys.\n+\n+1. Generate an address to receive coins to. You can use _either_ the `offline_wallet` or the [online] `watch_only_wallet` to generate this address, as they will produce the same addresses. For the sake of this guide we'll use the [online] `watch_only_wallet` to generate the address.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" getnewaddress\n+\n+tb1qtu5qgc6ddhmqm5yqjvhg83qgk2t4ewajg0h6yh\n+```\n+\n+2. Visit a faucet like https://signet.bc-2.jp and enter your address from the previous command to receive a small amount of signet coins to this address.\n+\n+3. Confirm that coins were received using the online `watch_only_wallet`. Note that the transaction may take a few moments before being received on your local node, depending on its connectivity. Just re-run the command periodically until the transaction is received.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" listunspent\n+\n+[\n+  {\n+    \"txid\": \"0f3953dfc3eb8e753cd1633151837c5b9953992914ff32b7de08c47f1f29c762\",\n+    \"vout\": 1,\n+    \"address\": \"tb1qtu5qgc6ddhmqm5yqjvhg83qgk2t4ewajg0h6yh\",\n+    \"label\": \"\",\n+    \"scriptPubKey\": \"00145f2804634d6df60dd080932e83c408b2975cbbb2\",\n+    \"amount\": 0.01000000,\n+    \"confirmations\": 4,\n+    \"spendable\": true,\n+    \"solvable\": true,\n+    \"desc\": \"wpkh([306c734f/84h/1h/0h/0/0]025932ccee7590158f7e08bb36290d135d30a0b045163da896e1cd7645ec4223a9)#xytvyr4a\",\n+    \"parent_descs\": [\n+      \"wpkh([306c734f/84h/1h/0h]tpubDCJnY92ib4Zu3qd6wrBXEjG436tQdA2tDiJU2iSJYjkNS1darssPWKaBfojhjUF5vMLBcxbN2r93pmFMz2zyTEZuNx9JDo9rWqoHhATW3Uz/0/*)#7mh08dkg\"\n+    ],\n+    \"safe\": true\n+  }\n+]\n+```\n+\n+### Create and Export an Unsigned PSBT\n+\n+1. Get a destination address for the transaction. In this tutorial we'll be sending funds to the address `tb1q9k5w0nhnhyeh78snpxh0t5t7c3lxdeg3erez32`, but if you don't need the coins for further testing you could send the coins back to the faucet.\n+\n+2. Create a funded but unsigned PSBT to the destination address with the [online] `watch_only_wallet` by using `walletcreatefundedpsbt inputs[], outputs[address: amount]` and export the unsigned PSBT to a file `funded_psbt.txt` for easy portability to the `offline_wallet` for signing:\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" walletcreatefundedpsbt \\\n+              '[]' '[{\"tb1q9k5w0nhnhyeh78snpxh0t5t7c3lxdeg3erez32\": 0.009}]' \\\n+              | jq -r '.psbt' \\\n+              >> /path/to/funded_psbt.txt\n+\n+[online]$ cat /path/to/funded_psbt.txt\n+\n+cHNidP8BAHECAAAAAWLHKR9/xAjetzL/FCmZU5lbfINRMWPRPHWO68PfUzkPAQAAAAD9////AoA4AQAAAAAAFgAULajnzvO5M38eEwmu9dF+xH5m5RGs0g0AAAAAABYAFMaT0f/Wp2DCZzL6dkJ3GhWj4Y9vAAAAAAABAHECAAAAAY+dRPEBrGopkw4ugSzS9npzJDEIrE/bq1XXI0KbYnYrAQAAAAD+////ArKaXgAAAAAAFgAUwEc4LdoxSjbWo/2Ue+HS+QjwfiBAQg8AAAAAABYAFF8oBGNNbfYN0ICTLoPECLKXXLuyYW8CAAEBH0BCDwAAAAAAFgAUXygEY01t9g3QgJMug8QIspdcu7IiBgJZMszudZAVj34IuzYpDRNdMKCwRRY9qJbhzXZF7EIjqRgwbHNPVAAAgAEAAIAAAACAAAAAAAAAAAAAACICA7BlBnyAR4F2UkKuSX9MFhYCsn6j//z9i7lHDm1O0CU0GDBsc09UAACAAQAAgAAAAIABAAAAAAAAAAA=\n+```\n+> [!NOTE]\n+> Leaving the `input` array empty in the above `walletcreatefundedpsbt` command is permitted and will cause the wallet to automatically select appropriate inputs for the transaction.\n+\n+### Decode and Analyze the Unsigned PSBT\n+\n+Decode and analyze the unsigned PSBT on the `offline_wallet` using the `funded_psbt.txt` file:\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet decodepsbt $(cat /path/to/funded_psbt.txt)\n+\n+{\n+    ...\n+}\n+\n+[offline]$ ./src/bitcoin-cli -signet analyzepsbt $(cat /path/to/funded_psbt.txt)\n+\n+{\n+  \"inputs\": [\n+    {\n+      \"has_utxo\": true,\n+      \"is_final\": false,\n+      \"next\": \"signer\",\n+      \"missing\": {\n+        \"signatures\": [\n+          \"5f2804634d6df60dd080932e83c408b2975cbbb2\"\n+        ]\n+      }\n+    }\n+  ],\n+  \"estimated_vsize\": 141,\n+  \"estimated_feerate\": 0.00100000,\n+  \"fee\": 0.00014100,\n+  \"next\": \"signer\"\n+}\n+```\n+\n+Notice that the analysis of the PSBT shows that \"signatures\" are missing and should be provided by the private key corresponding to the public key hash (hash160) \"5f2804634d6df60dd080932e83c408b2975cbbb2\"\n+\n+### Process and Sign the PSBT\n+\n+Process, Sign and Finalize the PSBT on the `offline_wallet` using the `walletprocesspsbt` command, saving the output to a file `final_psbt.txt`.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" walletprocesspsbt $(cat /path/to/funded_psbt.txt) \\\n+               | jq -r .hex \\\n+               >> /path/to/final_psbt.txt\n+```\n+\n+### Broadcast the Signed and Finalized PSBT\n+Broadcast the funded, signed and finalized PSBT `final_psbt.txt` using `sendrawtransaction` on the online wallet:",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 202,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "4f12e2ba986406aa623d2fa3adc75c239dfea409",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit, could explain that the wallet's job is all done now and any bitcoin full node, light client, or even some block explorer APIs can be used just to broadcast.\r\n\r\n```suggestion\r\nBroadcast the funded, signed and finalized PSBT `final_psbt.txt` using `sendrawtransaction` with an online node:\r\n```",
      "created_at": "2023-10-16T16:47:14Z",
      "updated_at": "2023-10-16T16:49:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1360959686",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1360959686"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 202,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1361104721",
      "pull_request_review_id": 1680700563,
      "id": 1361104721,
      "node_id": "PRRC_kwDOABII585RIM9R",
      "diff_hunk": "@@ -0,0 +1,239 @@\n+# Offline Signing Tutorial\n+\n+This tutorial will describe how to use two instances of Bitcoin Core, one online and one offline, to greatly increase security by not having private keys reside on a networked device.\n+\n+Maintaining an air-gap between private keys and any network connections drastically reduces the opportunity for those keys to be exfiltrated from the user.\n+\n+This workflow uses [Partially Signed Bitcoin Transactions](https://github.com/bitcoin/bitcoin/blob/master/doc/psbt.md) (PSBTs) to transfer the transaction to and from the offline wallet for signing using the private keys.\n+\n+## Overview\n+In this tutorial we have two hosts, both running Bitcoin v25.0\n+\n+* [offline] which is disconnected from all networks (internet, Tor, wifi, bluetooth etc.) and does not have, or need, a copy of the blockchain.\n+* [online] which is a regular online node with a synced blockchain.\n+\n+We are going to first create an `offline_wallet` on the [offline] host. We will then create a `watch_only_wallet` on the [online] host using public key descriptors exported from the `offline_wallet`. Next we will receive some coins into the wallet. In order to spend these coins we'll create an unsigned PSBT using the `watch_only_wallet`, sign the PSBT using the private keys in the `offline_wallet`, and finally broadcast the signed PSBT using the [online] host.\n+\n+### Requirements\n+- [jq](https://jqlang.github.io/jq/) installation - This tutorial uses jq to process certain fields from JSON RPC responses, but this convenience is optional.\n+\n+### Create and Prepare the `offline_wallet`\n+\n+1. On the offline machine create a wallet named `offline_wallet`. This wallet will contain private keys and must remain unconnected to any networks at all times.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"offline_wallet\"\n+\n+{\n+  \"name\": \"offline_wallet\"\n+}\n+```\n+\n+2. Export the public key-only descriptors from [offline] to a JSON file named `descriptors.json`. We use `jq` here to extract the `.descriptors` field from the full RPC response.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" listdescriptors \\\n+             | jq -r '.descriptors' \\\n+             >> /path/to/descriptors.json\n+```\n+\n+> [!NOTE]\n+> The `descriptors.json` file will be transferred to the online machine (e.g. using a USB flash drive) where it can be imported to create a related watch-only wallet.\n+\n+### Create the online `watch_only_wallet`\n+\n+1. On the online machine create a blank watch-only wallet which has private keys disabled and is named `watch_only_wallet`. This is achieved by using the `createwallet` options: `disable_private_keys=true, blank=true`.\n+\n+The `watch_only_wallet` wallet will be used to track and validate incoming transactions, for creating unsigned PSBTs when spending coins, and for broadcasting signed and finalised PSBTs.\n+\n+> [!NOTE]\n+> `blank` indicates that the wallet should not generate any new keys of its own. `disable_private_keys` indicates that the wallet should refuse to import private keys, i.e. will be a dedicated watch-only wallet.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -named createwallet \\\n+              wallet_name=\"watch_only_wallet\" \\\n+              disable_private_keys=true \\\n+              blank=true\n+\n+{\n+  \"name\": \"watch_only_wallet\"\n+}\n+```\n+\n+2. Import the `offline_wallet`s public key descriptors to the online `watch_only_wallet` using the `descriptors.json` file created on the offline wallet.\n+\n+```sh\n+[online]$ ./src/bitcoin-cli -signet -rpcwallet=\"watch_only_wallet\" importdescriptors \"$(cat /path/to/descriptors.json)\"\n+\n+[\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  },\n+  {\n+    \"success\": true\n+  }\n+]\n+```\n+> [!NOTE]\n+> Multiple success values show indicates that multiple descriptors, for different address types, have been successfully imported. This allows generating different address types on the `watch_only_wallet`.\n+\n+### Fund the `offline_wallet`\n+\n+At this point it's important to understand that both the `offline_wallet` and [online] `watch_only_wallet` share the same public keys. As a result they generate the same addresses. Transactions can be constructed using either wallet, but valid signatures can only be added by the `offline_wallet` as only it has the private keys.",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 100,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "4f12e2ba986406aa623d2fa3adc75c239dfea409",
      "in_reply_to_id": null,
      "user": {
        "login": "MarnixCroes",
        "id": 93143998,
        "node_id": "U_kgDOBY1Dvg",
        "avatar_url": "https://avatars.githubusercontent.com/u/93143998?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarnixCroes",
        "html_url": "https://github.com/MarnixCroes",
        "followers_url": "https://api.github.com/users/MarnixCroes/followers",
        "following_url": "https://api.github.com/users/MarnixCroes/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarnixCroes/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarnixCroes/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarnixCroes/subscriptions",
        "organizations_url": "https://api.github.com/users/MarnixCroes/orgs",
        "repos_url": "https://api.github.com/users/MarnixCroes/repos",
        "events_url": "https://api.github.com/users/MarnixCroes/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarnixCroes/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: I'd use created like everywhere else\r\n```suggestion\r\nAt this point it's important to understand that both the `offline_wallet` and [online] `watch_only_wallet` share the same public keys. As a result they generate the same addresses. Transactions can be created using either wallet, but valid signatures can only be added by the `offline_wallet` as only it has the private keys.\r\n```",
      "created_at": "2023-10-16T18:18:57Z",
      "updated_at": "2023-10-16T18:47:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1361104721",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1361104721"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 100,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1361135935",
      "pull_request_review_id": 1680700563,
      "id": 1361135935,
      "node_id": "PRRC_kwDOABII585RIUk_",
      "diff_hunk": "@@ -0,0 +1,239 @@\n+# Offline Signing Tutorial\n+\n+This tutorial will describe how to use two instances of Bitcoin Core, one online and one offline, to greatly increase security by not having private keys reside on a networked device.\n+\n+Maintaining an air-gap between private keys and any network connections drastically reduces the opportunity for those keys to be exfiltrated from the user.\n+\n+This workflow uses [Partially Signed Bitcoin Transactions](https://github.com/bitcoin/bitcoin/blob/master/doc/psbt.md) (PSBTs) to transfer the transaction to and from the offline wallet for signing using the private keys.\n+\n+## Overview\n+In this tutorial we have two hosts, both running Bitcoin v25.0\n+\n+* [offline] which is disconnected from all networks (internet, Tor, wifi, bluetooth etc.) and does not have, or need, a copy of the blockchain.\n+* [online] which is a regular online node with a synced blockchain.\n+\n+We are going to first create an `offline_wallet` on the [offline] host. We will then create a `watch_only_wallet` on the [online] host using public key descriptors exported from the `offline_wallet`. Next we will receive some coins into the wallet. In order to spend these coins we'll create an unsigned PSBT using the `watch_only_wallet`, sign the PSBT using the private keys in the `offline_wallet`, and finally broadcast the signed PSBT using the [online] host.\n+\n+### Requirements\n+- [jq](https://jqlang.github.io/jq/) installation - This tutorial uses jq to process certain fields from JSON RPC responses, but this convenience is optional.\n+\n+### Create and Prepare the `offline_wallet`\n+\n+1. On the offline machine create a wallet named `offline_wallet`. This wallet will contain private keys and must remain unconnected to any networks at all times.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"offline_wallet\"\n+\n+{\n+  \"name\": \"offline_wallet\"\n+}\n+```\n+\n+2. Export the public key-only descriptors from [offline] to a JSON file named `descriptors.json`. We use `jq` here to extract the `.descriptors` field from the full RPC response.\n+\n+```sh\n+[offline]$ ./src/bitcoin-cli -signet -rpcwallet=\"offline_wallet\" listdescriptors \\\n+             | jq -r '.descriptors' \\\n+             >> /path/to/descriptors.json\n+```\n+\n+> [!NOTE]\n+> The `descriptors.json` file will be transferred to the online machine (e.g. using a USB flash drive) where it can be imported to create a related watch-only wallet.\n+\n+### Create the online `watch_only_wallet`\n+\n+1. On the online machine create a blank watch-only wallet which has private keys disabled and is named `watch_only_wallet`. This is achieved by using the `createwallet` options: `disable_private_keys=true, blank=true`.\n+\n+The `watch_only_wallet` wallet will be used to track and validate incoming transactions, for creating unsigned PSBTs when spending coins, and for broadcasting signed and finalised PSBTs.",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 47,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "4f12e2ba986406aa623d2fa3adc75c239dfea409",
      "in_reply_to_id": null,
      "user": {
        "login": "MarnixCroes",
        "id": 93143998,
        "node_id": "U_kgDOBY1Dvg",
        "avatar_url": "https://avatars.githubusercontent.com/u/93143998?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarnixCroes",
        "html_url": "https://github.com/MarnixCroes",
        "followers_url": "https://api.github.com/users/MarnixCroes/followers",
        "following_url": "https://api.github.com/users/MarnixCroes/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarnixCroes/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarnixCroes/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarnixCroes/subscriptions",
        "organizations_url": "https://api.github.com/users/MarnixCroes/orgs",
        "repos_url": "https://api.github.com/users/MarnixCroes/repos",
        "events_url": "https://api.github.com/users/MarnixCroes/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarnixCroes/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit, if you retouch:\r\n```suggestion\r\nThe `watch_only_wallet` wallet will be used to track and validate incoming transactions, for creating unsigned PSBTs when spending coins, and for broadcasting signed and finalized PSBTs.\r\n```",
      "created_at": "2023-10-16T18:44:02Z",
      "updated_at": "2023-10-16T18:47:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1361135935",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1361135935"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1362179780",
      "pull_request_review_id": 1682463406,
      "id": 1362179780,
      "node_id": "PRRC_kwDOABII585RMTbE",
      "diff_hunk": "@@ -0,0 +1,255 @@\n+# Offline Signing Tutorial\n+\n+This tutorial will describe how to use two instances of Bitcoin Core, one online and one offline, to greatly increase security by not having private keys reside on a networked device.\n+\n+Maintaining an air-gap between private keys and any network connections drastically reduces the opportunity for those keys to be exfiltrated from the user.\n+\n+This workflow uses [Partially Signed Bitcoin Transactions](https://github.com/bitcoin/bitcoin/blob/master/doc/psbt.md) (PSBTs) to transfer the transaction to and from the offline wallet for signing using the private keys.\n+\n+> [!NOTE]\n+> While this tutorial demonstrates the process using `Signet` network, you should omit the `-signet` flag in the provided commands when working with the `Mainnet`.\n+\n+## Overview\n+In this tutorial we have two hosts, both running Bitcoin v25.0\n+\n+* `offline` host which is disconnected from all networks (internet, Tor, wifi, bluetooth etc.) and does not have, or need, a copy of the blockchain.\n+* `online` host which is a regular online node with a synced blockchain.\n+\n+We are going to first create an `offline_wallet` on the offline host. We will then create a `watch_only_wallet` on the online host using public key descriptors exported from the `offline_wallet`. N`ext we will receive some coins into the wallet. In order to spend these coins we'll create an unsigned PSBT using the `watch_only_wallet`, sign the PSBT using the private keys in the `offline_wallet`, and finally broadcast the signed PSBT using the online host.",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 18,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "f49c917021541f65bc93f511dfc7ae310d4e8d53",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "misplaced backtick?\r\n\r\n```suggestion\r\nWe are going to first create an `offline_wallet` on the offline host. We will then create a `watch_only_wallet` on the online host using public key descriptors exported from the `offline_wallet`. Next we will receive some coins into the wallet. In order to spend these coins we'll create an unsigned PSBT using the `watch_only_wallet`, sign the PSBT using the private keys in the `offline_wallet`, and finally broadcast the signed PSBT using the online host.\r\n```",
      "created_at": "2023-10-17T14:03:22Z",
      "updated_at": "2023-10-17T14:33:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1362179780",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1362179780"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 18,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1362180877",
      "pull_request_review_id": 1682463406,
      "id": 1362180877,
      "node_id": "PRRC_kwDOABII585RMTsN",
      "diff_hunk": "@@ -0,0 +1,255 @@\n+# Offline Signing Tutorial\n+\n+This tutorial will describe how to use two instances of Bitcoin Core, one online and one offline, to greatly increase security by not having private keys reside on a networked device.\n+\n+Maintaining an air-gap between private keys and any network connections drastically reduces the opportunity for those keys to be exfiltrated from the user.\n+\n+This workflow uses [Partially Signed Bitcoin Transactions](https://github.com/bitcoin/bitcoin/blob/master/doc/psbt.md) (PSBTs) to transfer the transaction to and from the offline wallet for signing using the private keys.\n+\n+> [!NOTE]\n+> While this tutorial demonstrates the process using `Signet` network, you should omit the `-signet` flag in the provided commands when working with the `Mainnet`.",
      "path": "doc/offline-signing-tutorial.md",
      "position": null,
      "original_position": 10,
      "commit_id": "1f8ac46bea019f984f2a050e121a51eb79bf9580",
      "original_commit_id": "f49c917021541f65bc93f511dfc7ae310d4e8d53",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n> While this tutorial demonstrates the process using `signet` network, you should omit the `-signet` flag in the provided commands when working with `mainnet`.\r\n```",
      "created_at": "2023-10-17T14:03:57Z",
      "updated_at": "2023-10-17T14:33:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28363#discussion_r1362180877",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1362180877"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28363"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 10,
      "side": "RIGHT"
    }
  ]
}