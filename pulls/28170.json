{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170",
    "id": 1452224012,
    "node_id": "PR_kwDOABII585Wjy4M",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/28170",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/28170.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/28170.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28170",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28170/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
    "number": 28170,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "p2p: adaptive connections services flags",
    "user": {
      "login": "furszy",
      "id": 5377650,
      "node_id": "MDQ6VXNlcjUzNzc2NTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/furszy",
      "html_url": "https://github.com/furszy",
      "followers_url": "https://api.github.com/users/furszy/followers",
      "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
      "organizations_url": "https://api.github.com/users/furszy/orgs",
      "repos_url": "https://api.github.com/users/furszy/repos",
      "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/furszy/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Derived from #28120 discussion.\r\n\r\nBy relocating the peer desirable services flags into the peer manager, we\r\nallow the connections acceptance process to handle post-IBD potential\r\nstalling scenarios.\r\n\r\nThe peer manager will be able to dynamically adjust the services flags\r\nbased on the node's proximity to the tip (back and forth). Allowing the node\r\nto recover from the following post-IBD scenario:\r\nSuppose the node has successfully synced the chain, but later experienced\r\ndropped connections and remained inactive for a duration longer than the limited\r\npeers threshold (the timeframe within which limited peers can provide blocks). In\r\nsuch cases, upon reconnecting to the network, the node might only establish\r\nconnections with limited peers, filling up all available outbound slots. Resulting\r\nin an inability to synchronize the chain (because limited peers will not provide\r\nblocks older than the `NODE_NETWORK_LIMITED_MIN_BLOCKS` threshold).",
    "labels": [
      {
        "id": 98298007,
        "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
        "name": "P2P",
        "color": "006b75",
        "default": false
      }
    ],
    "created_at": "2023-07-27T15:34:45Z",
    "updated_at": "2023-12-20T02:00:36Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "4e11b49df1f1a80e8b1a99ecb9e5c8c291e78e5c",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "furszy:2023_net_adaptable_desirable_flags",
      "ref": "2023_net_adaptable_desirable_flags",
      "sha": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 143624913,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDM2MjQ5MTM=",
        "name": "bitcoin-core",
        "full_name": "furszy/bitcoin-core",
        "owner": {
          "login": "furszy",
          "id": 5377650,
          "node_id": "MDQ6VXNlcjUzNzc2NTA=",
          "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/furszy",
          "html_url": "https://github.com/furszy",
          "followers_url": "https://api.github.com/users/furszy/followers",
          "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
          "organizations_url": "https://api.github.com/users/furszy/orgs",
          "repos_url": "https://api.github.com/users/furszy/repos",
          "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/furszy/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/furszy/bitcoin-core",
        "description": "Bitcoin-Core",
        "fork": true,
        "url": "https://api.github.com/repos/furszy/bitcoin-core",
        "archive_url": "https://api.github.com/repos/furszy/bitcoin-core/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/furszy/bitcoin-core/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/furszy/bitcoin-core/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/furszy/bitcoin-core/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/furszy/bitcoin-core/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/furszy/bitcoin-core/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/furszy/bitcoin-core/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/furszy/bitcoin-core/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/furszy/bitcoin-core/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/furszy/bitcoin-core/contributors",
        "deployments_url": "https://api.github.com/repos/furszy/bitcoin-core/deployments",
        "downloads_url": "https://api.github.com/repos/furszy/bitcoin-core/downloads",
        "events_url": "https://api.github.com/repos/furszy/bitcoin-core/events",
        "forks_url": "https://api.github.com/repos/furszy/bitcoin-core/forks",
        "git_commits_url": "https://api.github.com/repos/furszy/bitcoin-core/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/furszy/bitcoin-core/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/furszy/bitcoin-core/git/tags%7B/sha%7D",
        "git_url": "git://github.com/furszy/bitcoin-core.git",
        "issue_comment_url": "https://api.github.com/repos/furszy/bitcoin-core/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/furszy/bitcoin-core/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/furszy/bitcoin-core/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/furszy/bitcoin-core/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/furszy/bitcoin-core/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/furszy/bitcoin-core/languages",
        "merges_url": "https://api.github.com/repos/furszy/bitcoin-core/merges",
        "milestones_url": "https://api.github.com/repos/furszy/bitcoin-core/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/furszy/bitcoin-core/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/furszy/bitcoin-core/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/furszy/bitcoin-core/releases%7B/id%7D",
        "ssh_url": "git@github.com:furszy/bitcoin-core.git",
        "stargazers_url": "https://api.github.com/repos/furszy/bitcoin-core/stargazers",
        "statuses_url": "https://api.github.com/repos/furszy/bitcoin-core/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/furszy/bitcoin-core/subscribers",
        "subscription_url": "https://api.github.com/repos/furszy/bitcoin-core/subscription",
        "tags_url": "https://api.github.com/repos/furszy/bitcoin-core/tags",
        "teams_url": "https://api.github.com/repos/furszy/bitcoin-core/teams",
        "trees_url": "https://api.github.com/repos/furszy/bitcoin-core/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/furszy/bitcoin-core.git",
        "hooks_url": "https://api.github.com/repos/furszy/bitcoin-core/hooks",
        "svn_url": "https://github.com/furszy/bitcoin-core",
        "homepage": "",
        "language": "C++",
        "forks_count": 3,
        "stargazers_count": 2,
        "watchers_count": 2,
        "size": 390382,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-12-19T19:18:42Z",
        "created_at": "2018-08-05T15:28:43Z",
        "updated_at": "2023-08-30T13:12:58Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "dd391944dc2d4e7dda9439647e603b41ba751b78",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 36208,
        "stargazers_count": 72715,
        "watchers_count": 72715,
        "size": 246908,
        "default_branch": "master",
        "open_issues_count": 679,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-12-20T00:36:28Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-12-20T01:30:29Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 178,
    "deletions": 71,
    "changed_files": 11,
    "commits": 6,
    "review_comments": 82,
    "comments": 12
  },
  "events": [
    {
      "event": "commented",
      "id": 1653862929,
      "node_id": "IC_kwDOABII585ik_IR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1653862929",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-27T15:34:48Z",
      "updated_at": "2023-12-20T02:00:36Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/28170).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [mzumsande](https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1581277414) |\n| Approach NACK | [vasild](https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1769801940) |\n| Stale ACK | [naumenkogs](https://github.com/bitcoin/bitcoin/pull/28170#issuecomment-1842572200), [andrewtoth](https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1771466506) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#28970](https://github.com/bitcoin/bitcoin/pull/28970) ([WIP] p2p: opportunistically accept 1-parent-1-child packages by glozow)\n* [#28031](https://github.com/bitcoin/bitcoin/pull/28031) (Package Relay 1/3: Introduce TxDownloadManager and improve orphan-handling by glozow)\n* [#28016](https://github.com/bitcoin/bitcoin/pull/28016) (p2p: gives seednode priority over dnsseed if both are provided by sr-gi)\n* [#27826](https://github.com/bitcoin/bitcoin/pull/27826) (validation: log which peer sent us a header by Sjors)\n* [#27052](https://github.com/bitcoin/bitcoin/pull/27052) (test: rpc: add last block announcement time to getpeerinfo result by LarryRuane)\n* [#15218](https://github.com/bitcoin/bitcoin/pull/15218) (validation: Flush state after initial sync by andrewtoth)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#issuecomment-1653862929",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28170"
    },
    {
      "event": "labeled",
      "id": 9937419983,
      "node_id": "LE_lADOABII585swZjNzwAAAAJQUP7P",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9937419983",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-27T15:34:49Z",
      "label": {
        "name": "P2P",
        "color": "006b75"
      }
    },
    {
      "event": "renamed",
      "id": 9937469277,
      "node_id": "RTE_lADOABII585swZjNzwAAAAJQUb9d",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9937469277",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-27T15:39:29Z",
      "rename": {
        "from": "net: adaptive connections services flags",
        "to": "p2p: adaptive connections services flags"
      }
    },
    {
      "event": "labeled",
      "id": 9939207651,
      "node_id": "LE_lADOABII585swZjNzwAAAAJQbEXj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9939207651",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-27T18:16:05Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-28T07:21:12Z",
      "updated_at": "2023-07-28T07:21:12Z",
      "source": {
        "issue": {
          "id": 1782622319,
          "node_id": "PR_kwDOABII585UVjBC",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28016",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28016/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28016/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28016/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28016",
          "number": 28016,
          "state": "open",
          "state_reason": null,
          "title": "p2p: gives seednode priority over dnsseed if both are provided",
          "body": "This is a follow-up of #27577 \r\n\r\nIf both `seednode` and `dnsseed` are provided, the node will start a race between them in order to fetch data to feed the `addrman`. \r\n\r\nThis PR gives priority to `seednode` over `dnsseed` so if some nodes are provided as seeds, they can be tried before defaulting to the `dnsseeds`",
          "user": {
            "login": "sr-gi",
            "id": 6665628,
            "node_id": "MDQ6VXNlcjY2NjU2Mjg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6665628?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sr-gi",
            "html_url": "https://github.com/sr-gi",
            "followers_url": "https://api.github.com/users/sr-gi/followers",
            "following_url": "https://api.github.com/users/sr-gi/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sr-gi/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sr-gi/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sr-gi/subscriptions",
            "organizations_url": "https://api.github.com/users/sr-gi/orgs",
            "repos_url": "https://api.github.com/users/sr-gi/repos",
            "events_url": "https://api.github.com/users/sr-gi/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sr-gi/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28016",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28016",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28016.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28016.patch"
          },
          "created_at": "2023-06-30T14:23:11Z",
          "updated_at": "2023-10-20T02:08:15Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-28T09:41:32Z",
      "updated_at": "2023-07-28T09:41:32Z",
      "source": {
        "issue": {
          "id": 1678541218,
          "node_id": "PR_kwDOABII585O3QRm",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27509",
          "number": 27509,
          "state": "open",
          "state_reason": null,
          "title": "Relay own transactions only via short-lived Tor or I2P connections",
          "body": "To improve privacy, relay locally submitted transactions (from the wallet or via RPC) to the P2P network only via Tor or I2P short-lived connections.\r\n\r\n* Introduce a new connection type for relaying sensitive data (our own transactions) with the following properties:\r\n  * started whenever there are local unbroadcast transactions to be sent\r\n  * only opened to Tor or I2P peers\r\n  * opened regardless of max connections limits\r\n  * after handshake is completed one local transaction is pushed to the peer and the connection is closed\r\n  * ignore all incoming messages after handshake is completed\r\n\r\n* Relay locally submitted transactions (from the wallet or via RPC) using this new mechanism, to a few Tor or I2P peers.\r\n\r\n* Hide those transactions from `GETDATA` and `MEMPOOL` requests, as if we don't have them.\r\n\r\n* Once we get an `INV` from somebody, request the transaction with `GETDATA`, as if we didn't have it before.\r\n\r\n* After we receive the full transaction as a `TX` message, in reply to our `GETDATA` request, only then consider the transaction has propagated through the network and remove it from the unbroadcast list.\r\n\r\n* `INV` it to others as a result of the `TX` message we get, like what we do with transactions that are not ours.\r\n\r\nThe messages exchange should look like this:\r\n\r\n```\r\ntx-sender >--- connect -------> tx-recipient\r\ntx-sender >--- VERSION -------> tx-recipient\r\ntx-sender <--- VERSION -------< tx-recipient\r\ntx-sender <--- WTXIDRELAY ----< tx-recipient (maybe) \r\ntx-sender <--- SENDADDRV2 ----< tx-recipient (maybe) \r\ntx-sender <--- SENDTXRCNCL ---< tx-recipient (maybe) \r\ntx-sender <--- VERACK --------< tx-recipient\r\ntx-sender >--- VERACK --------> tx-recipient\r\ntx-sender >--- TX ------------> tx-recipient\r\ntx-sender >--- PING ----------> tx-recipient\r\ntx-sender <--- PONG ----------< tx-recipient\r\ntx-sender disconnects\r\n```\r\n\r\nWhenever a new local transaction is received (from the wallet or RPC), the node will send it to 5 (`SENSITIVE_RELAY_NUM_BROADCAST_PER_TX`) recipients right away. If after 10-15 mins we still have not heard anything about the transaction from the network, then it will be sent to 5 more peers (see `PeerManagerImpl::ReattemptInitialBroadcast()`).\r\n\r\nA few considerations:\r\n* The short-lived sensitive relay connections are very cheap and fast wrt network traffic. It is expected that some of those peers will blackhole the transaction. Just one honest/proper peer is enough for successful propagation.\r\n* The peers that receive the transaction could deduce that this is initial transaction broadcast from the transaction originator. This is ok, they can't identify the sender.\r\n\r\nTODO:\r\n* [x] Disable if `-connect` is used or Tor and I2P are not reachable.\r\n* [x] Use I2P transient connections even if listening on I2P.\r\n* [x] Do something with the user-agent string (could reveal identity if it has been personalized) and make sure no identifying information in the `VERSION` message. Done: took the [suggestion below](https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1517896418).\r\n* [x] Improve the condition when we consider the transaction seen by the network: right now a single INV from somebody suffices (this is still an improvement over `master` which is ok right after pushing the tx to a peer). We could wait for more than one INV, from peers that we have selected (outbound) and that are specifically not the ones we broadcasted to (via short-lived connection). Edit: One `INV` should be enough because after that we broadcast the transaction to everybody we are connected to (like if it is not ours).\r\n* [ ] Idea: start with one connection per transaction (not 5 as it is now), optimistically assuming it will be sufficient. (numbers are examples) After 1 minute, if still not received from the network, try 2 connections, after a few minutes try more. If still unsuccessful after 10 minutes, then fall back to the old mechanism.\r\n\r\nThis is supposed to address:\r\nhttps://github.com/bitcoin/bitcoin/issues/3828\r\nhttps://github.com/bitcoin/bitcoin/issues/14692\r\nhttps://github.com/bitcoin/bitcoin/issues/19042\r\nhttps://github.com/bitcoin/bitcoin/issues/24557\r\nhttps://github.com/bitcoin/bitcoin/issues/25450\r\n",
          "user": {
            "login": "vasild",
            "id": 266751,
            "node_id": "MDQ6VXNlcjI2Njc1MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vasild",
            "html_url": "https://github.com/vasild",
            "followers_url": "https://api.github.com/users/vasild/followers",
            "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
            "organizations_url": "https://api.github.com/users/vasild/orgs",
            "repos_url": "https://api.github.com/users/vasild/repos",
            "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/vasild/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64584,
              "node_id": "MDU6TGFiZWw2NDU4NA==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Brainstorming",
              "name": "Brainstorming",
              "color": "ebd775",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 59,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27509",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27509.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27509.patch"
          },
          "created_at": "2023-04-21T13:39:19Z",
          "updated_at": "2023-10-02T10:28:17Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-28T12:14:58Z",
      "updated_at": "2023-07-28T12:14:58Z",
      "source": {
        "issue": {
          "id": 1471685707,
          "node_id": "PR_kwDOABII585EFGFt",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26621",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26621/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26621/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26621/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26621",
          "number": 26621,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: Continue moving application data from CNode to Peer",
          "body": "This PR picks up a subset of changes from #24970 and additionally moves `m_bip152_highbandwith{to,from}`, `nTimeOffset`, `nVersion`, `m_greates_common_version`.",
          "user": {
            "login": "dergoegge",
            "id": 8077169,
            "node_id": "MDQ6VXNlcjgwNzcxNjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dergoegge",
            "html_url": "https://github.com/dergoegge",
            "followers_url": "https://api.github.com/users/dergoegge/followers",
            "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
            "organizations_url": "https://api.github.com/users/dergoegge/orgs",
            "repos_url": "https://api.github.com/users/dergoegge/repos",
            "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/dergoegge/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 17,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26621",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26621",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26621.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26621.patch"
          },
          "closed_at": "2023-09-28T20:06:13Z",
          "created_at": "2022-12-01T17:26:32Z",
          "updated_at": "2023-09-28T20:06:13Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-28T13:49:30Z",
      "updated_at": "2023-07-28T13:49:30Z",
      "source": {
        "issue": {
          "id": 1299238264,
          "node_id": "PR_kwDOABII5847Ho23",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25572",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25572/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25572/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25572/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25572",
          "number": 25572,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: Introduce EvictionManager and use it for the inbound eviction logic",
          "body": "This PR splits off the next couple commits from #25268 that introduce the `EvictionManager` and use it for  the inbound eviction logic.\r\n\r\nOne instance of the `EvictionManager` is created at start up and passed as a reference to the connection and peer managers. The connection and peer managers report all eviction relevant information (for inbound connections) to the eviction manager who ultimately suggests nodes to evict as the result of `EvictionManager::SelectNodeToEvict`.",
          "user": {
            "login": "dergoegge",
            "id": 8077169,
            "node_id": "MDQ6VXNlcjgwNzcxNjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dergoegge",
            "html_url": "https://github.com/dergoegge",
            "followers_url": "https://api.github.com/users/dergoegge/followers",
            "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
            "organizations_url": "https://api.github.com/users/dergoegge/orgs",
            "repos_url": "https://api.github.com/users/dergoegge/repos",
            "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/dergoegge/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 11,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25572",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25572",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25572.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25572.patch"
          },
          "closed_at": "2023-09-28T20:06:18Z",
          "created_at": "2022-07-08T16:39:49Z",
          "updated_at": "2023-09-28T20:06:18Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-28T14:08:05Z",
      "updated_at": "2023-07-28T14:08:05Z",
      "source": {
        "issue": {
          "id": 1258121997,
          "node_id": "PR_kwDOABII5844-S2D",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25268",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25268/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25268/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25268/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25268",
          "number": 25268,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: Introduce EvictionManager",
          "body": "At the moment, the eviction logic is mangled across two different components (`CConnman`, `PeerManager`), so we can't really test it in isolation. This is not completely true for the inbound eviction logic as it exists as static functions in `net.{h.cpp}` for which tests already exist. However, the outbound eviction logic is not covered by any fuzz tests and is only testable by spinning up both a connman and peerman.\r\n\r\nThis PR splits out the eviction logic into its own component `EvictionManager`. In addition to isolating the eviction logic, we get rid of several layer violations (e.g. `CConnman::ForEachNode/ForNode` calls, `CNode::m_last_block_time`, etc.) between `net` and `net processing`.\r\n\r\nOne instance of the `EvictionManager` is created at start up and passed as a reference to the connection and peer managers. The connection and peer managers report all eviction relevant information to the eviction manager who ultimately suggests nodes to evict as the result of `EvictionManager::SelectInboundNodeToEvict` and `EvictionManager::SelectOutboundNodesToEvict`.",
          "user": {
            "login": "dergoegge",
            "id": 8077169,
            "node_id": "MDQ6VXNlcjgwNzcxNjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dergoegge",
            "html_url": "https://github.com/dergoegge",
            "followers_url": "https://api.github.com/users/dergoegge/followers",
            "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
            "organizations_url": "https://api.github.com/users/dergoegge/orgs",
            "repos_url": "https://api.github.com/users/dergoegge/repos",
            "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/dergoegge/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 12,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25268",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25268",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25268.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25268.patch"
          },
          "closed_at": "2023-09-28T20:06:22Z",
          "created_at": "2022-06-02T12:34:15Z",
          "updated_at": "2023-09-28T20:06:22Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "unlabeled",
      "id": 9949561751,
      "node_id": "UNLE_lADOABII585swZjNzwAAAAJRCkOX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9949561751",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-28T15:39:37Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-30T20:47:52Z",
      "updated_at": "2023-07-30T20:47:52Z",
      "source": {
        "issue": {
          "id": 401128377,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjQ2MTI4MDU5",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15218",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15218/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15218/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15218/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/15218",
          "number": 15218,
          "state": "open",
          "state_reason": null,
          "title": "validation: Flush state after initial sync",
          "body": "This fixes a common issue where initial sync is done with a high `dbcache` and then not cleanly shut down.\r\n\r\nResolves #11600.",
          "user": {
            "login": "andrewtoth",
            "id": 237213,
            "node_id": "MDQ6VXNlcjIzNzIxMw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andrewtoth",
            "html_url": "https://github.com/andrewtoth",
            "followers_url": "https://api.github.com/users/andrewtoth/followers",
            "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
            "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
            "repos_url": "https://api.github.com/users/andrewtoth/repos",
            "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 30,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15218",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/15218",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/15218.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/15218.patch"
          },
          "created_at": "2019-01-20T19:04:17Z",
          "updated_at": "2023-12-15T04:41:53Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-01T14:56:47Z",
      "updated_at": "2023-08-01T14:56:47Z",
      "source": {
        "issue": {
          "id": 1815856452,
          "node_id": "PR_kwDOABII585WGd4K",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28120",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28120/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28120/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28120/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28120",
          "number": 28120,
          "state": "open",
          "state_reason": null,
          "title": "p2p: make block download logic aware of limited peers threshold",
          "body": "Even when the node believes it has IBD completed, need to avoid\r\nrequesting historical blocks from network-limited peers.\r\nOtherwise, the limited peer will disconnect right away.\r\n\r\nThe simplest scenario could be a node that gets synced, drops\r\nconnections, and stays inactive for a while. Then, once it re-connects\r\n(IBD stays completed), the node tries to fetch all the missing blocks\r\nfrom any peer, getting disconnected by the limited ones.\r\n\r\nNote:\r\nCan verify the behavior by cherry-picking the test commit alone on\r\nmaster. It will fail there.",
          "user": {
            "login": "furszy",
            "id": 5377650,
            "node_id": "MDQ6VXNlcjUzNzc2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/furszy",
            "html_url": "https://github.com/furszy",
            "followers_url": "https://api.github.com/users/furszy/followers",
            "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
            "organizations_url": "https://api.github.com/users/furszy/orgs",
            "repos_url": "https://api.github.com/users/furszy/repos",
            "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/furszy/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28120",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28120.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28120.patch"
          },
          "created_at": "2023-07-21T13:55:22Z",
          "updated_at": "2023-12-06T12:59:30Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-01T21:29:30Z",
      "updated_at": "2023-08-01T21:29:30Z",
      "source": {
        "issue": {
          "id": 1746501636,
          "node_id": "PR_kwDOABII585ScjM9",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27837",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27837/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27837/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27837/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27837",
          "number": 27837,
          "state": "open",
          "state_reason": null,
          "title": "net: introduce block tracker to retry to download blocks after failure",
          "body": "Built on top of #28120 and #28170. Coming from #27652.\r\n\r\nThe general idea is to keep track of the user requested blocks so, in\r\ncase of a bad behaving peer or a network disconnection, they can be\r\nfetched from another one automatically without any further user interaction.\r\n\r\nThis was requested by users because the `getblockfrompeer` RPC command\r\nlacks the functionality to notify them about block request failures or peer\r\ndisconnections (which is expected due to the asynchronous nature of the block\r\nrequests).\r\n\r\nCurrently, this new functionality is limited to blocks requested by the\r\nuser via the 'getblockfrompeer' RPC command.\r\n\r\nIn the future, this class could expand its scope and be utilized in the\r\nregular chain synchronization process. Or, even could be employed in\r\nspecial procedures like a prune node rescan that uses BIP158 block filters,\r\nor even into BIP157 itself.",
          "user": {
            "login": "furszy",
            "id": 5377650,
            "node_id": "MDQ6VXNlcjUzNzc2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/furszy",
            "html_url": "https://github.com/furszy",
            "followers_url": "https://api.github.com/users/furszy/followers",
            "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
            "organizations_url": "https://api.github.com/users/furszy/orgs",
            "repos_url": "https://api.github.com/users/furszy/repos",
            "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/furszy/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27837",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27837",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27837.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27837.patch"
          },
          "created_at": "2023-06-07T19:01:56Z",
          "updated_at": "2023-10-19T18:29:38Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T14:02:25Z",
      "updated_at": "2023-08-04T14:02:25Z",
      "source": {
        "issue": {
          "id": 590224813,
          "node_id": "MDExOlB1bGxSZXF1ZXN0Mzk1NTk3MTM3",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18470",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18470/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18470/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18470/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/18470",
          "number": 18470,
          "state": "closed",
          "state_reason": null,
          "title": "test: Extend stale tip test",
          "body": "* Extend test with ASSERT_DEBUG_LOG\r\n* Extend test with case where a block is in flight from a node that is\r\n  about to be evicted",
          "user": {
            "login": "maflcko",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maflcko",
            "html_url": "https://github.com/maflcko",
            "followers_url": "https://api.github.com/users/maflcko/followers",
            "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
            "organizations_url": "https://api.github.com/users/maflcko/orgs",
            "repos_url": "https://api.github.com/users/maflcko/repos",
            "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/maflcko/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            },
            {
              "id": 749416508,
              "node_id": "MDU6TGFiZWw3NDk0MTY1MDg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Up%20for%20grabs",
              "name": "Up for grabs",
              "color": "99a810",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 11,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18470",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/18470",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/18470.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/18470.patch"
          },
          "closed_at": "2023-09-23T16:44:26Z",
          "created_at": "2020-03-30T11:45:59Z",
          "updated_at": "2023-09-23T16:44:27Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-05T20:31:01Z",
      "updated_at": "2023-08-05T20:31:01Z",
      "source": {
        "issue": {
          "id": 1837671308,
          "node_id": "PR_kwDOABII585XPvx_",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28222",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28222/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28222/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28222/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28222",
          "number": 28222,
          "state": "open",
          "state_reason": null,
          "title": "Use shared_ptr for CNode inside CConnman",
          "body": "Switch to using smart pointers to `CNode`s inside of `CConnman`.\r\n\r\nCurrently we are manually refcounting CNodes which is potentially error-prone and makes operations such as deleting them from multiple threads difficult without introducing new locks or other synchronisation operations (see https://github.com/bitcoin/bitcoin/pull/27912).\r\n\r\nSwitch to using `std::shared_ptr` references to `CNode`s inside of `m_nodes` and `m_nodes_disconnected` to give us better memory safety today, and in the future allow `AttemptToEvictConnection` (and optionally other sites) to safely synchronously disconnect nodes when needed.\r\n\r\nOpening as draft for now as I want to both gauge feedback on the approach, and see which PRs this may conflict with (#27213?) before moving it forwards.\r\n\r\nCC @vasild ",
          "user": {
            "login": "willcl-ark",
            "id": 6606587,
            "node_id": "MDQ6VXNlcjY2MDY1ODc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/willcl-ark",
            "html_url": "https://github.com/willcl-ark",
            "followers_url": "https://api.github.com/users/willcl-ark/followers",
            "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
            "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
            "repos_url": "https://api.github.com/users/willcl-ark/repos",
            "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 13,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28222",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28222",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28222.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28222.patch"
          },
          "created_at": "2023-08-05T09:45:10Z",
          "updated_at": "2023-11-13T16:09:26Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1565523628,
      "node_id": "PRR_kwDOABII585dT_6s",
      "url": null,
      "actor": null,
      "commit_id": "2325ff03f42606793d3c8f2a97fc73015b9c48dd",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "I don't think the scenario you describe is likely to happen since we consider ourselves to be in IBD if our tip is older than 24h (which corresponds to ~144 blocks).\r\n\r\n> Suppose the node has successfully synced the chain, but later experienced\r\ndropped connections and remained inactive for a duration longer than the limited\r\npeers threshold (the timeframe within which limited peers can provide blocks). In\r\nsuch cases, upon reconnecting to the network, the node might only establish\r\nconnections with limited peers, filling up all available outbound slots.\r\n\r\nSo this isn't true, upon restart the node would be behind by >24h and open connections to non-pruning peers (unless the block rate significantly increased beyond 1block/10min).\r\n\r\n---\r\n\r\nGetting rid of the `g_initial_block_download_completed` global would still be worthwhile but the other changes seem unnecessary to me. ",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1565523628",
      "submitted_at": "2023-08-07T14:54:19Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
    },
    {
      "event": "reviewed",
      "id": 1565687522,
      "node_id": "PRR_kwDOABII585dUn7i",
      "url": null,
      "actor": null,
      "commit_id": "2325ff03f42606793d3c8f2a97fc73015b9c48dd",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "> I don't think the scenario you describe is likely to happen since we consider ourselves to be in IBD if our tip is older than 24h (which corresponds to ~144 blocks).\r\n\r\nThats not entirely true, misses an important part. We consider ourselves in IBD if our tip is older than 24hs (or the custom max tip age) and we haven't completed IBD yet. Once IBD is completed, the node remains out of IBD for the entire software lifecycle.\r\n\r\n> > Suppose the node has successfully synced the chain, but later experienced\r\n> > dropped connections and remained inactive for a duration longer than the limited\r\n> > peers threshold (the timeframe within which limited peers can provide blocks). In\r\n> > such cases, upon reconnecting to the network, the node might only establish\r\n> > connections with limited peers, filling up all available outbound slots.\r\n> \r\n> So this isn't true, upon restart the node would be behind by >24h and open connections to non-pruning peers (unless the block rate significantly increased beyond 1block/10min).\r\n\r\nThis conclusion misses what I wrote above. The IBD flag is set to true but never reverted for the entire software lifecycle.\r\n\r\nThe scenario that I described in the PR description is a real scenario. Reproducible by running #28120 test case. Which exercises the proposed behavior.\r\n\r\nBasically, same as the IBD flag, `g_initial_block_download_completed` is set to true but never reverted. Which ends up with the node always connecting to limited peers after the first IBD completion. Not accounting for prolonged stalling situations, where the node is beyond the limited peers threshold due an internet outage.\r\n\r\nTo test the behavior, you could drop the bug fix commit from that branch. Will see the post-IBD super stalled node connecting to a limited peer even when such peer is not helpful, as it will not provide any of the historical blocks required to sync-up the node.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1565687522",
      "submitted_at": "2023-08-07T16:01:37Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-15T06:12:11Z",
      "updated_at": "2023-08-15T06:12:11Z",
      "source": {
        "issue": {
          "id": 1789806361,
          "node_id": "PR_kwDOABII585Ut7YI",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28031",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28031/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28031/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28031/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28031",
          "number": 28031,
          "state": "open",
          "state_reason": null,
          "title": "Package Relay 1/3: Introduce TxDownloadManager and improve orphan-handling",
          "body": "This is milestone 1 of package relay p2p changes. See #27463 for full project tracking.\r\n\r\nPlease see #27742 for how this PR fits into the big picture. I strongly suggest that reviewers look at that PR first to decide if they are comfortable with the overall approach.\r\n\r\nThis PR is mainly refactors, with a few behavior changes and improvements:\r\n- Introduces `TxDownloadManager`, which handles all transaction downloading. It contains the `TxRequestTracker`, `TxOrphanage`, and filters for `AlreadyHaveTx`.\r\n- Updates logs for tx {validation, relay, orphans} to include both txid and wtxid when possible.\r\n- Adds a new log category, `TXPACKAGES`. Logging in the orphanage is changed from `MEMPOOL` to `TXPACKAGES`.\r\n- Adds support for tracking when multiple peers provided the same tx in the orphanage.\r\n- Makes `TxDownloadManager` responsible for tracking the orphans we need to resolve and deciding how/when to resolve them.\r\n- Adds all announcers of an orphan as potential resolution candidates. This tracker is a `TxDownloadManager` which helps us schedule requests.\r\n   - In this PR, \"orphan resolution\" means requesting missing parents by `getdata(MSG_TX | MSG_WITNESS_FLAG, missing_txid)`.\r\n    - In a future PR, we'll add another resolution method, requesting ancestor wtxids using `getdata(MSG_ANCPKGINFO, orphan_wtxid)`.",
          "user": {
            "login": "glozow",
            "id": 25183001,
            "node_id": "MDQ6VXNlcjI1MTgzMDAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/glozow",
            "html_url": "https://github.com/glozow",
            "followers_url": "https://api.github.com/users/glozow/followers",
            "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
            "organizations_url": "https://api.github.com/users/glozow/orgs",
            "repos_url": "https://api.github.com/users/glozow/repos",
            "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/glozow/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 9,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28031",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28031.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28031.patch"
          },
          "created_at": "2023-07-05T15:30:40Z",
          "updated_at": "2023-12-20T02:12:21Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-15T10:21:46Z",
      "updated_at": "2023-08-15T10:21:46Z",
      "source": {
        "issue": {
          "id": 1573080079,
          "node_id": "PR_kwDOABII585JXcpb",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27052",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27052/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27052/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27052/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27052",
          "number": 27052,
          "state": "open",
          "state_reason": null,
          "title": "test: rpc: add last block announcement time to getpeerinfo result",
          "body": "This PR adds `last_block_announcement` to the per-peer `getpeerinfo` RPC result. This is the most recent time that this peer was the first to notify our node of a new block (one that we didn't already know about), or zero if this peer has never been the first to notify us of a new block. This timestamp already exists internally and is used for stale-tip eviction logic; this PR exposes it at the RPC layer.\r\n\r\nThis PR started out as a suggestion for additional test coverage, see https://github.com/bitcoin/bitcoin/pull/26172#issuecomment-1259678260. It turned out that the easiest way to test (already-merged) #26172 is to add this field to `getpeerinfo` and have a functional test verify its value. But it may also be useful to have this result in its own right, similar to that RPC's existing `last_block` field -- it indicates something about the quality of our peers. It allows one to predict which peer will be evicted when the stale tip logic activates. (I'm not sure if that would be useful, but it may be.)\r\n\r\nThe functional test added here fails without #26172, which is the main goal.\r\n\r\nThis PR does not test the actual stale-tip eviction logic; that's difficult to do with a functional test. But it does test the correctness of the timestamp that the eviction logic depends on. #23352 is an attempt to test the eviction logic using a unit test, it's not ready to be merged yet. I think having both kinds of tests would be beneficial.",
          "user": {
            "login": "LarryRuane",
            "id": 8321330,
            "node_id": "MDQ6VXNlcjgzMjEzMzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LarryRuane",
            "html_url": "https://github.com/LarryRuane",
            "followers_url": "https://api.github.com/users/LarryRuane/followers",
            "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
            "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
            "repos_url": "https://api.github.com/users/LarryRuane/repos",
            "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 7,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27052",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27052",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27052.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27052.patch"
          },
          "created_at": "2023-02-06T18:32:56Z",
          "updated_at": "2023-12-20T02:46:30Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-16T02:50:31Z",
      "updated_at": "2023-08-16T02:50:31Z",
      "source": {
        "issue": {
          "id": 1579504924,
          "node_id": "PR_kwDOABII585Js_-Z",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27071",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27071/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27071/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27071/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27071",
          "number": 27071,
          "state": "closed",
          "state_reason": null,
          "title": "Handle CJDNS from LookupSubNet()",
          "body": "`LookupSubNet()` would treat addresses that start with `fc` as IPv6 even if `-cjdnsreachable` is set. This creates the following problems where it is called:\r\n\r\n* `NetWhitelistPermissions::TryParse()`: otherwise `-whitelist=` fails to white list CJDNS addresses: when a CJDNS peer connects to us, it will be matched against IPv6 `fc...` subnet and the match will never succeed.\r\n\r\n* `BanMapFromJson()`: CJDNS bans are stored as just IPv6 addresses in `banlist.json`. Upon reading from disk they have to be converted back to CJDNS, otherwise, after restart, a ban entry like (`fc00::1`, IPv6) would not match a peer (`fc00::1`, CJDNS).\r\n    \r\n* `RPCConsole::unbanSelectedNode()`: in the GUI the ban entries go through `CSubNet::ToString()` and back via `LookupSubNet()`. Then it must match whatever is stored in `BanMan`, otherwise it is impossible to unban via the GUI.\r\n\r\nThese were uncovered by https://github.com/bitcoin/bitcoin/pull/26859.\r\n\r\nThus, flip the result of `LookupSubNet()` to CJDNS if the network base address starts with `fc` and `-cjdnsreachable` is set. Since subnetting/masking does not make sense for CJDNS (the address is \"random\" bytes, like Tor and I2P, there is no hierarchy) treat `fc.../mask` as an invalid `CSubNet`.\r\n\r\nTo achieve that, `MaybeFlipIPv6toCJDNS()` has to be moved from `net` to `netbase` and thus also `IsReachable()`. In the process of moving `IsReachable()`, `SetReachable()` and `vfLimited[]` encapsulate those in a class.",
          "user": {
            "login": "vasild",
            "id": 266751,
            "node_id": "MDQ6VXNlcjI2Njc1MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vasild",
            "html_url": "https://github.com/vasild",
            "followers_url": "https://api.github.com/users/vasild/followers",
            "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
            "organizations_url": "https://api.github.com/users/vasild/orgs",
            "repos_url": "https://api.github.com/users/vasild/repos",
            "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/vasild/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/60",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/60",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/60/labels",
            "id": 9286970,
            "node_id": "MI_kwDOABII584AjbU6",
            "number": 60,
            "state": "closed",
            "title": "26.0",
            "description": "",
            "creator": {
              "login": "fanquake",
              "id": 863730,
              "node_id": "MDQ6VXNlcjg2MzczMA==",
              "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/fanquake",
              "html_url": "https://github.com/fanquake",
              "followers_url": "https://api.github.com/users/fanquake/followers",
              "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
              "organizations_url": "https://api.github.com/users/fanquake/orgs",
              "repos_url": "https://api.github.com/users/fanquake/repos",
              "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/fanquake/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 116,
            "created_at": "2023-04-15T11:36:05Z",
            "updated_at": "2023-12-08T10:41:40Z",
            "closed_at": "2023-12-04T13:27:46Z"
          },
          "locked": false,
          "comments": 24,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27071",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27071",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27071.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27071.patch"
          },
          "closed_at": "2023-10-19T16:49:02Z",
          "created_at": "2023-02-10T11:20:45Z",
          "updated_at": "2023-10-23T12:24:09Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1581277414,
      "node_id": "PRR_kwDOABII585eQGDm",
      "url": null,
      "actor": null,
      "commit_id": "2325ff03f42606793d3c8f2a97fc73015b9c48dd",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK\r\nThis seems to be similar to the suggestion by gmaxwell in https://github.com/bitcoin/bitcoin/pull/10387#issuecomment-343357330\r\nIt also is a good thing to have `protocol.h` not depend on dynamic `net_processing` state.",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1581277414",
      "submitted_at": "2023-08-16T20:28:58Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
    },
    {
      "event": "reviewed",
      "id": 1582453390,
      "node_id": "PRR_kwDOABII585eUlKO",
      "url": null,
      "actor": null,
      "commit_id": "1dbc6cc6b177497c18664bcc08f4d55da21941a6",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1582453390",
      "submitted_at": "2023-08-17T11:57:16Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
    },
    {
      "event": "reviewed",
      "id": 1582457092,
      "node_id": "PRR_kwDOABII585eUmEE",
      "url": null,
      "actor": null,
      "commit_id": "1428b7f4e8c648fdc68ba5744d640d120d5d78eb",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1582457092",
      "submitted_at": "2023-08-17T11:59:37Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10124363207,
      "node_id": "HRFPE_lADOABII585swZjNzwAAAAJbdYXH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10124363207",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-17T22:18:35Z"
    },
    {
      "event": "labeled",
      "id": 10129245401,
      "node_id": "LE_lADOABII585swZjNzwAAAAJbwATZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10129245401",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-18T11:53:22Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10132103007,
      "node_id": "HRFPE_lADOABII585swZjNzwAAAAJb659f",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10132103007",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-18T17:26:53Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10132299525,
      "node_id": "HRFPE_lADOABII585swZjNzwAAAAJb7p8F",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10132299525",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-18T17:51:12Z"
    },
    {
      "event": "unlabeled",
      "id": 10133565682,
      "node_id": "UNLE_lADOABII585swZjNzwAAAAJcAfDy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10133565682",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-18T20:57:50Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1727793191,
      "node_id": "IC_kwDOABII585m_Agn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1727793191",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-20T13:59:30Z",
      "updated_at": "2023-09-20T13:59:30Z",
      "author_association": "MEMBER",
      "body": "per convo, cc @vasild ",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#issuecomment-1727793191",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28170"
    },
    {
      "event": "mentioned",
      "id": 10423685789,
      "node_id": "MEE_lADOABII585swZjNzwAAAAJtTNKd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10423685789",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-20T13:59:31Z"
    },
    {
      "event": "subscribed",
      "id": 10423685819,
      "node_id": "SE_lADOABII585swZjNzwAAAAJtTNK7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10423685819",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-20T13:59:31Z"
    },
    {
      "event": "subscribed",
      "id": 10453814710,
      "node_id": "SE_lADOABII585swZjNzwAAAAJvGI22",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10453814710",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-23T18:25:12Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-16T19:16:12Z",
      "updated_at": "2023-10-16T19:16:12Z",
      "source": {
        "issue": {
          "id": 1708710593,
          "node_id": "I_kwDOABII585l2NrB",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27652",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27652/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27652/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27652/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/27652",
          "number": 27652,
          "state": "open",
          "state_reason": null,
          "title": "Allow getblockfrompeer to use any peer",
          "body": "### Please describe the feature you'd like to see added.\n\nWhen you use `getblockfrompeer` you have to specify an index of a specific peer. But it would be much easier if it allowed you to use ANY peer.\r\n\r\nFor example, if you run a pruned node, and your first peer happens to be also pruned, the call will fail. If the call tried all nodes, until it finds a peer that has the block, it wouldn't require you that implement any logic for that.\n\n### Is your feature related to a problem, if so please describe it.\n\n_No response_\n\n### Describe the solution you'd like\n\nThe solution would be simple: if you don't specify any index, then try all peers untill you find one that does have block, otherwise fail.\n\n### Describe any alternatives you've considered\n\n_No response_\n\n### Please leave any additional context\n\n_No response_",
          "user": {
            "login": "kroese",
            "id": 5763256,
            "node_id": "MDQ6VXNlcjU3NjMyNTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5763256?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kroese",
            "html_url": "https://github.com/kroese",
            "followers_url": "https://api.github.com/users/kroese/followers",
            "following_url": "https://api.github.com/users/kroese/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/kroese/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/kroese/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/kroese/subscriptions",
            "organizations_url": "https://api.github.com/users/kroese/orgs",
            "repos_url": "https://api.github.com/users/kroese/repos",
            "events_url": "https://api.github.com/users/kroese/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/kroese/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64583,
              "node_id": "MDU6TGFiZWw2NDU4Mw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Feature",
              "name": "Feature",
              "color": "7cf575",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "NONE",
          "locked": false,
          "comments": 12,
          "created_at": "2023-05-13T18:44:59Z",
          "updated_at": "2023-10-16T19:21:58Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 10715617540,
      "node_id": "LE_lADOABII585swZjNzwAAAAJ-s1kE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10715617540",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-19T18:27:28Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10717862417,
      "node_id": "HRFPE_lADOABII585swZjNzwAAAAJ-1ZoR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10717862417",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-19T23:24:30Z"
    },
    {
      "event": "unlabeled",
      "id": 10718469331,
      "node_id": "UNLE_lADOABII585swZjNzwAAAAJ-3tzT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10718469331",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-20T01:07:11Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-25T12:28:24Z",
      "updated_at": "2023-10-25T12:28:24Z",
      "source": {
        "issue": {
          "id": 1795191607,
          "node_id": "PR_kwDOABII585VATJ8",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28055",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28055/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28055/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28055/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28055",
          "number": 28055,
          "state": "open",
          "state_reason": null,
          "title": "Bugfix: net_processing: Restore \"Already requested\" error for FetchBlock",
          "body": "Regression introduced by #27626\r\n\r\nAdds new tests",
          "user": {
            "login": "luke-jr",
            "id": 1095675,
            "node_id": "MDQ6VXNlcjEwOTU2NzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/luke-jr",
            "html_url": "https://github.com/luke-jr",
            "followers_url": "https://api.github.com/users/luke-jr/followers",
            "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
            "organizations_url": "https://api.github.com/users/luke-jr/orgs",
            "repos_url": "https://api.github.com/users/luke-jr/repos",
            "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/luke-jr/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 8,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28055",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28055",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28055.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28055.patch"
          },
          "created_at": "2023-07-09T01:26:25Z",
          "updated_at": "2023-10-25T19:02:20Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1702994944,
      "node_id": "PRR_kwDOABII585lgaQA",
      "url": null,
      "actor": null,
      "commit_id": "893c541dce938aaa210785df53a5841c5e90d924",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK.\r\n\r\nShould we have a functional test for this scenario?",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1702994944",
      "submitted_at": "2023-10-29T17:54:05Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-30T07:59:20Z",
      "updated_at": "2023-10-30T07:59:20Z",
      "source": {
        "issue": {
          "id": 1401856133,
          "node_id": "PR_kwDOABII585AbffS",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26283",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26283/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26283/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26283/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26283",
          "number": 26283,
          "state": "closed",
          "state_reason": null,
          "title": "p2p: Fill reconciliation sets and request reconciliation (Erlay)",
          "body": "*See #28765*\r\n\r\nFirst, this PR enables keeping track of per-peer reconciliation sets, containing those transactions which we intend to exchange efficiently. The remaining transactions are announced via flooding, as usual.\r\n\r\nSecond, this PR enables periodically initiating a reconciliation round via a new p2p message.\r\n\r\nErlay Project Tracking: #28646",
          "user": {
            "login": "naumenkogs",
            "id": 7975071,
            "node_id": "MDQ6VXNlcjc5NzUwNzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/naumenkogs",
            "html_url": "https://github.com/naumenkogs",
            "followers_url": "https://api.github.com/users/naumenkogs/followers",
            "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
            "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
            "repos_url": "https://api.github.com/users/naumenkogs/repos",
            "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 9,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26283",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26283",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26283.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26283.patch"
          },
          "closed_at": "2023-11-01T09:07:31Z",
          "created_at": "2022-10-08T07:29:52Z",
          "updated_at": "2023-11-01T20:41:48Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1701549241,
      "node_id": "PRR_kwDOABII585la5S5",
      "url": null,
      "actor": null,
      "commit_id": "893c541dce938aaa210785df53a5841c5e90d924",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1701549241",
      "submitted_at": "2023-10-30T12:53:07Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10813482764,
      "node_id": "HRFPE_lADOABII585swZjNzwAAAAKEiKcM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10813482764",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-30T22:00:03Z"
    },
    {
      "event": "reviewed",
      "id": 1705186171,
      "node_id": "PRR_kwDOABII585loxN7",
      "url": null,
      "actor": null,
      "commit_id": "bf3ce4a9ae88910ef33be61980be42c84fc812af",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Feedback tackled. Thanks both!\r\n\r\n> Should we have a functional test for this scenario?\r\n\r\nWe can't have a functional test because the automatic peers connection process skips localhost addresses. Will work on a unit test for it. Could do one validating that the peer manager service flags changes when the ibd state change.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1705186171",
      "submitted_at": "2023-10-30T22:44:47Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
    },
    {
      "event": "reviewed",
      "id": 1705210202,
      "node_id": "PRR_kwDOABII585lo3Fa",
      "url": null,
      "actor": null,
      "commit_id": "bf3ce4a9ae88910ef33be61980be42c84fc812af",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1705210202",
      "submitted_at": "2023-10-30T23:09:04Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10821841356,
      "node_id": "HRFPE_lADOABII585swZjNzwAAAAKFCDHM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10821841356",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-31T14:38:18Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10821857803,
      "node_id": "HRFPE_lADOABII585swZjNzwAAAAKFCHIL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10821857803",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-31T14:39:34Z"
    },
    {
      "event": "reviewed",
      "id": 1706509820,
      "node_id": "PRR_kwDOABII585lt0X8",
      "url": null,
      "actor": null,
      "commit_id": "3a56fe6dbb35ba809cd9611395f28d8fdd85df73",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Updated per feedback. Thanks again.\r\n\r\n* Added coverage for the introduced PeerManager's adaptive connections service flags.\r\n* Renamed StatelessServiceFlags function to SeedsServiceFlags.\r\n* Re-introduced the \"initial sync completed\" flag update on `UpdatedBlockTip`.\r\n   This is to not depend solely on the stale check inside `CheckForStaleTipAndEvictPeers` which is executed every 10 minutes (`STALE_CHECK_INTERVAL`). See code comments for more information.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1706509820",
      "submitted_at": "2023-10-31T14:48:09Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
    },
    {
      "event": "labeled",
      "id": 10822483406,
      "node_id": "LE_lADOABII585swZjNzwAAAAKFEf3O",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10822483406",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-31T15:24:13Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1706626162,
      "node_id": "PRR_kwDOABII585luQxy",
      "url": null,
      "actor": null,
      "commit_id": "3a56fe6dbb35ba809cd9611395f28d8fdd85df73",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1706626162",
      "submitted_at": "2023-10-31T15:31:57Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
    },
    {
      "event": "reviewed",
      "id": 1706640450,
      "node_id": "PRR_kwDOABII585luURC",
      "url": null,
      "actor": null,
      "commit_id": "3a56fe6dbb35ba809cd9611395f28d8fdd85df73",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1706640450",
      "submitted_at": "2023-10-31T15:37:42Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10825267773,
      "node_id": "HRFPE_lADOABII585swZjNzwAAAAKFPHo9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10825267773",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-31T19:36:52Z"
    },
    {
      "event": "reviewed",
      "id": 1707131031,
      "node_id": "PRR_kwDOABII585lwMCX",
      "url": null,
      "actor": null,
      "commit_id": "78e10967424731f00dd8f2af342ebe378aef234f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Updated per feedback, thanks @andrewtoth.\r\n\r\n* Re-ordered test checks for improved clarity.\r\n* Included coverage for when the node is stale but still recoverable (below the limited peers threshold).",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1707131031",
      "submitted_at": "2023-10-31T19:50:11Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
    },
    {
      "event": "unlabeled",
      "id": 10825857911,
      "node_id": "UNLE_lADOABII585swZjNzwAAAAKFRXt3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10825857911",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-31T20:48:27Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1707743315,
      "node_id": "PRR_kwDOABII585lyhhT",
      "url": null,
      "actor": null,
      "commit_id": "78e10967424731f00dd8f2af342ebe378aef234f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1707743315",
      "submitted_at": "2023-11-01T08:18:13Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10843850587,
      "node_id": "HRFPE_lADOABII585swZjNzwAAAAKGWAdb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10843850587",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-02T13:16:17Z"
    },
    {
      "event": "reviewed",
      "id": 1710304120,
      "node_id": "PRR_kwDOABII585l8St4",
      "url": null,
      "actor": null,
      "commit_id": "5628ac55be42c5450c6817ba8dcfe463ceda32a9",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Updated per feedback. Thanks everyone.\r\n\r\n* Improved test coverage.\r\n* Moved `GetAdjustedTime` usage to `GetTime`.\r\n* Renamed `in_ibd` variable to `past_net_limited`.\r\n* Updated comments and code to clearly state that the responsibility of setting the 'initial sync finished' flag backwards is inside the 'CheckForStaleTip' process.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1710304120",
      "submitted_at": "2023-11-02T13:36:28Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
    },
    {
      "event": "commented",
      "id": 1793773276,
      "node_id": "IC_kwDOABII585q6s7c",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1793773276",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-05T15:47:52Z",
      "updated_at": "2023-11-05T15:47:52Z",
      "author_association": "CONTRIBUTOR",
      "body": "ACK 5628ac55be42c5450c6817ba8dcfe463ceda32a9",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#issuecomment-1793773276",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28170"
    },
    {
      "event": "review_requested",
      "id": 10865268738,
      "node_id": "RRE_lADOABII585swZjNzwAAAAKHntgC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10865268738",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-05T15:47:57Z",
      "requested_reviewer": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "reviewed",
      "id": 1714010196,
      "node_id": "PRR_kwDOABII585mKbhU",
      "url": null,
      "actor": null,
      "commit_id": "5628ac55be42c5450c6817ba8dcfe463ceda32a9",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1714010196",
      "submitted_at": "2023-11-05T15:48:12Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
    },
    {
      "event": "reviewed",
      "id": 1717094661,
      "node_id": "PRR_kwDOABII585mWMkF",
      "url": null,
      "actor": null,
      "commit_id": "5628ac55be42c5450c6817ba8dcfe463ceda32a9",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1717094661",
      "submitted_at": "2023-11-07T08:38:08Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10887988153,
      "node_id": "HRFPE_lADOABII585swZjNzwAAAAKI-YO5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10887988153",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-07T14:50:26Z"
    },
    {
      "event": "commented",
      "id": 1798760647,
      "node_id": "IC_kwDOABII585rNujH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1798760647",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-07T14:52:28Z",
      "updated_at": "2023-11-07T14:52:37Z",
      "author_association": "MEMBER",
      "body": "Updated per @andrewtoth feedback via dm.\r\nImproved a test comment for better clarity. Tiny [diff](https://github.com/bitcoin/bitcoin/compare/5628ac55be42c5450c6817ba8dcfe463ceda32a9..60a487dd2430145115fcd0215472a5a2ef9bb090).",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#issuecomment-1798760647",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28170"
    },
    {
      "event": "mentioned",
      "id": 10888018141,
      "node_id": "MEE_lADOABII585swZjNzwAAAAKI-fjd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10888018141",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-07T14:52:28Z"
    },
    {
      "event": "subscribed",
      "id": 10888018168,
      "node_id": "SE_lADOABII585swZjNzwAAAAKI-fj4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10888018168",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-07T14:52:28Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-22T00:52:26Z",
      "updated_at": "2023-11-22T00:52:26Z",
      "source": {
        "issue": {
          "id": 2002532391,
          "node_id": "PR_kwDOABII585f7Ye-",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28920",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28920/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28920/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28920/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28920",
          "number": 28920,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: birth time update during tx scanning",
          "body": "Fixing #28897.\r\n\r\nAs the user may have imported a descriptor with a timestamp newer\r\nthan the actual birth time of the first key (by setting 'timestamp=now'),\r\nthe wallet needs to update the birth time when it detects a transaction\r\nolder than the oldest descriptor timestamp.\r\n\r\nTesting Notes:\r\nCan cherry-pick the test commit on top of master. It will fail there.",
          "user": {
            "login": "furszy",
            "id": 5377650,
            "node_id": "MDQ6VXNlcjUzNzc2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/furszy",
            "html_url": "https://github.com/furszy",
            "followers_url": "https://api.github.com/users/furszy/followers",
            "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
            "organizations_url": "https://api.github.com/users/furszy/orgs",
            "repos_url": "https://api.github.com/users/furszy/repos",
            "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/furszy/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 12,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28920",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28920",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28920.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28920.patch"
          },
          "closed_at": "2023-12-14T21:27:56Z",
          "created_at": "2023-11-20T16:05:49Z",
          "updated_at": "2023-12-15T10:38:13Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-28T14:54:31Z",
      "updated_at": "2023-11-28T14:54:31Z",
      "source": {
        "issue": {
          "id": 2014440188,
          "node_id": "PR_kwDOABII585gjeeE",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28956",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28956/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28956/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28956/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28956",
          "number": 28956,
          "state": "open",
          "state_reason": null,
          "title": "Nuke adjusted time (attempt 2)",
          "body": "This picks up #25908.\r\n\r\nAs suggested by reviewers on #25908, this PR keeps around a warning for users if their clock seems to be out of sync with the rest of the network.",
          "user": {
            "login": "dergoegge",
            "id": 8077169,
            "node_id": "MDQ6VXNlcjgwNzcxNjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dergoegge",
            "html_url": "https://github.com/dergoegge",
            "followers_url": "https://api.github.com/users/dergoegge/followers",
            "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
            "organizations_url": "https://api.github.com/users/dergoegge/orgs",
            "repos_url": "https://api.github.com/users/dergoegge/repos",
            "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/dergoegge/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 11,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28956",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28956",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28956.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28956.patch"
          },
          "created_at": "2023-11-28T13:26:59Z",
          "updated_at": "2023-12-18T15:01:06Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "review_requested",
      "id": 11089517064,
      "node_id": "RRE_lADOABII585swZjNzwAAAAKU_JoI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11089517064",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-28T22:38:29Z",
      "requested_reviewer": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "commented",
      "id": 1840311256,
      "node_id": "IC_kwDOABII585tsOvY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1840311256",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-05T09:05:05Z",
      "updated_at": "2023-12-05T09:05:05Z",
      "author_association": "MEMBER",
      "body": "ACK 60a487dd2430145115fcd0215472a5a2ef9bb090.\r\n\r\n[This](https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1413149420) would be an improvement.",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#issuecomment-1840311256",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28170"
    },
    {
      "event": "review_request_removed",
      "id": 11150175341,
      "node_id": "RRRE_lADOABII585swZjNzwAAAAKYmixt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11150175341",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-05T09:05:11Z",
      "requested_reviewer": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 11150175769,
      "node_id": "RRE_lADOABII585swZjNzwAAAAKYmi4Z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11150175769",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-05T09:05:13Z",
      "requested_reviewer": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "commented",
      "id": 1841506898,
      "node_id": "IC_kwDOABII585twypS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1841506898",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-05T19:44:27Z",
      "updated_at": "2023-12-05T19:45:20Z",
      "author_association": "MEMBER",
      "body": "Updated per feedback (https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1384553675). Thanks @andrewtoth and @naumenkogs.\r\nTiny diff, only renamed `m_initial_sync_finished` to `m_is_close_to_tip` in a scripted-diff commit afc29b15e262b4ff402d479ec77ab8507552bcbc.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#issuecomment-1841506898",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28170"
    },
    {
      "event": "mentioned",
      "id": 11158368057,
      "node_id": "MEE_lADOABII585swZjNzwAAAAKZFy85",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11158368057",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-05T19:44:27Z"
    },
    {
      "event": "subscribed",
      "id": 11158368068,
      "node_id": "SE_lADOABII585swZjNzwAAAAKZFy9E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11158368068",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-05T19:44:27Z"
    },
    {
      "event": "mentioned",
      "id": 11158368087,
      "node_id": "MEE_lADOABII585swZjNzwAAAAKZFy9X",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11158368087",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-05T19:44:27Z"
    },
    {
      "event": "subscribed",
      "id": 11158368096,
      "node_id": "SE_lADOABII585swZjNzwAAAAKZFy9g",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11158368096",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-05T19:44:27Z"
    },
    {
      "event": "commented",
      "id": 1842572200,
      "node_id": "IC_kwDOABII585t02uo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1842572200",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-06T10:10:06Z",
      "updated_at": "2023-12-06T10:10:06Z",
      "author_association": "MEMBER",
      "body": "ACK afc29b15e262b4ff402d479ec77ab8507552bcbc",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#issuecomment-1842572200",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28170"
    },
    {
      "event": "review_request_removed",
      "id": 11166123947,
      "node_id": "RRRE_lADOABII585swZjNzwAAAAKZjYer",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11166123947",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-06T10:10:13Z",
      "requested_reviewer": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 11166124183,
      "node_id": "RRE_lADOABII585swZjNzwAAAAKZjYiX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11166124183",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-06T10:10:14Z",
      "requested_reviewer": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "reviewed",
      "id": 1771466506,
      "node_id": "PRR_kwDOABII585plm8K",
      "url": null,
      "actor": null,
      "commit_id": "afc29b15e262b4ff402d479ec77ab8507552bcbc",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK afc29b15e262b4ff402d479ec77ab8507552bcbc",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1771466506",
      "submitted_at": "2023-12-08T03:01:49Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
    },
    {
      "event": "reviewed",
      "id": 1769801940,
      "node_id": "PRR_kwDOABII585pfQjU",
      "url": null,
      "actor": null,
      "commit_id": "afc29b15e262b4ff402d479ec77ab8507552bcbc",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK. I acknowledge this PR resolves the problem. But the situation is somewhat convoluted in `master` and I am not sure this PR makes it any better. There are multiple ways to determine if we are stale:\r\n\r\n1. `ChainstateManager::IsInitialBlockDownload()`: uses `-maxtipage` (default 24h). Once it considers out of IBD, it stays like that regardless of the tip age (why? surely it is possible to lag behind again).\r\n\r\n2. `g_initial_block_download_completed`\r\n  2.1. Set by `Chainstate::ActivateBestChain()` -> `PeerManagerImpl::UpdatedBlockTip()` -> `SetServiceFlagsIBDCache()` with a value determined by `ChainstateManager::IsInitialBlockDownload()`, can be changed to/from `true`/`false` but in practice is never because of `IsInitialBlockDownload()`.\r\n  2.2. Used to determine desired peers' service flags.\r\n\r\n3. `PeerManagerImpl::m_initial_sync_finished`\r\n  3.1. Set by `PeerManagerImpl::CheckForStaleTipAndEvictPeers()` depending on `PeerManagerImpl::CanDirectFetch()` which checks if the tip is older than 3h20min. Can only go from `false` to `true` (why?).\r\n  3.2. Used to determine whether to start extra block-relay-only connections.\r\n\r\n4. `PeerManagerImpl::TipMayBeStale()`: considers 30 minutes without tip change as stale (nb: not the tip age (!) for example if we updated the tip 5 minutes ago with a block that is 1 month old, then this method considers \"not stale\"). Also takes into account `mapBlocksInFlight.empty()`.\r\n  4.1. Used to try a new outbound peer if \"stale\".\r\n\r\nLimited peers are supposed to keep at least 288 blocks (48h).\r\n\r\nIn this PR:\r\n\r\n* `g_initial_block_download_completed` is removed\r\n* `PeerManagerImpl::m_initial_sync_finished` is used to determine desired peers' service flags\r\n* `PeerManagerImpl::m_initial_sync_finished` is set based on a bunch of factors: `m_stale_tip_check_time`, `m_chainman.m_blockman.LoadingBlocks()`, `m_connman.GetNetworkActive()`, `m_connman.GetUseAddrmanOutgoing()`, `m_last_tip_update`, `mapBlocksInFlight.empty()`, `CanDirectFetch()` and `ChainstateManager::IsInitialBlockDownload()` (I find this a bit obscure).\r\n\r\nApproach NACK. I could be wrong, but I think that it should be possible to resolve the problem in a simpler way and without touching unrelated stuff (like when to start \"extra block-relay-only connections\"). What about removing `g_initial_block_download_completed` and replacing it with an expression \"our highest block is older than 48h\" inside `GetDesirableServiceFlags()`?\r\n",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1769801940",
      "submitted_at": "2023-12-08T11:07:45Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-12T18:36:10Z",
      "updated_at": "2023-12-12T18:36:10Z",
      "source": {
        "issue": {
          "id": 1606662830,
          "node_id": "I_kwDOABII585fw7qu",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27188",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27188/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27188/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27188/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/27188",
          "number": 27188,
          "state": "closed",
          "state_reason": "completed",
          "title": "Use of a wallet shouldn't be blocked in prune mode (\"wallet loading failed... beyond pruned data\")",
          "body": "It is impossible to load and use a wallet neither in Bitcoin-qt GUI nor console/RPC commands. The wallet is only about 2 weeks old and typical settings are used (data pruned to 2 GB).\r\n\r\n**Expected behavior**\r\n\r\n- A wallet is loaded (either manually or automatically on startup) and addresses are shown in Bitcoin-qt, \r\n- successful execution of wallet RPC commands, e.g. getwalletinfo, dumpwallet, walletpassphrasechange etc. \r\n\r\n(not different from the way it had worked and looked the previous time a user started Bitcoin Core).\r\n\r\n**Actual behavior**\r\n\r\n![wallet loading failed  Prune](https://user-images.githubusercontent.com/111286121/222418406-67836dd2-f28b-4611-baeb-055ae21d9834.png)\r\n\r\n> Wallet loading failed. Prune: last wallet synchronisation goes beyond pruned data. You need to -reindex (download the whole blockchain again in case of pruned node)\r\n\r\nAlso, RPC commands fail, for example: loadwallet, getwalletinfo, dumpwallet (except for listwallets).\r\n\r\n**To reproduce**\r\n\r\n1. Start Bitcoin-qt\r\n2. Select File->Open Wallet->[Wallet name]\r\n\r\nReproducible every time in prune mode. The wallet was created at the time for which data were pruned. The wallet was created in bitcoin-qt.\r\n\r\n**System information**\r\n\r\nOfficial binary Bitcoin Core 24.0.1, Windows 11.",
          "user": {
            "login": "GregTonoski",
            "id": 111286121,
            "node_id": "U_kgDOBqIXaQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/111286121?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GregTonoski",
            "html_url": "https://github.com/GregTonoski",
            "followers_url": "https://api.github.com/users/GregTonoski/followers",
            "following_url": "https://api.github.com/users/GregTonoski/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/GregTonoski/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/GregTonoski/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/GregTonoski/subscriptions",
            "organizations_url": "https://api.github.com/users/GregTonoski/orgs",
            "repos_url": "https://api.github.com/users/GregTonoski/repos",
            "events_url": "https://api.github.com/users/GregTonoski/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/GregTonoski/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64585,
              "node_id": "MDU6TGFiZWw2NDU4NQ==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
              "name": "Bug",
              "color": "FBBAAB",
              "default": false
            },
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "NONE",
          "locked": false,
          "comments": 10,
          "closed_at": "2023-03-22T15:26:37Z",
          "created_at": "2023-03-02T11:54:22Z",
          "updated_at": "2023-12-14T16:42:59Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1852679820,
      "node_id": "IC_kwDOABII585ubaaM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1852679820",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-12T19:32:20Z",
      "updated_at": "2023-12-12T19:32:20Z",
      "author_association": "MEMBER",
      "body": "Thanks for the review vasild!. Will tackle all points in the coming days. I'm currently finishing few bug fixes priorities and will be fully here again.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#issuecomment-1852679820",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28170"
    },
    {
      "event": "commented",
      "id": 1853978983,
      "node_id": "IC_kwDOABII585ugXln",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1853978983",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-13T14:04:13Z",
      "updated_at": "2023-12-13T14:04:13Z",
      "author_association": "CONTRIBUTOR",
      "body": "Would this resolve the problem?\r\n\r\n<details>\r\n<summary>[patch] update g_initial_block_download_completed periodically based on our tip age</summary>\r\n\r\n```diff\r\ndiff --git i/src/net_processing.cpp w/src/net_processing.cpp\r\nindex df54a62f28..ec9bbff8f2 100644\r\n--- i/src/net_processing.cpp\r\n+++ w/src/net_processing.cpp\r\n@@ -2045,13 +2045,12 @@ void PeerManagerImpl::NewPoWValidBlock(const CBlockIndex *pindex, const std::sha\r\n  * Update our best height and announce any block hashes which weren't previously\r\n  * in m_chainman.ActiveChain() to our peers.\r\n  */\r\n void PeerManagerImpl::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload)\r\n {\r\n     SetBestHeight(pindexNew->nHeight);\r\n-    SetServiceFlagsIBDCache(!fInitialDownload);\r\n \r\n     // Don't relay inventory during initial block download.\r\n     if (fInitialDownload) return;\r\n \r\n     // Find the hashes of all blocks that weren't previously in the best chain.\r\n     std::vector<uint256> vHashes;\r\n@@ -5265,12 +5264,19 @@ void PeerManagerImpl::CheckForStaleTipAndEvictPeers()\r\n     }\r\n \r\n     if (!m_initial_sync_finished && CanDirectFetch()) {\r\n         m_connman.StartExtraBlockRelayPeers();\r\n         m_initial_sync_finished = true;\r\n     }\r\n+\r\n+    const std::chrono::seconds time_between_blocks{m_chainparams.GetConsensus().nPowTargetSpacing};\r\n+    const NodeSeconds limited_peers_oldest_block_time{Now<NodeSeconds>() -\r\n+                                                      time_between_blocks * NODE_NETWORK_LIMITED_MIN_BLOCKS};\r\n+    const bool tip_within_limited_peers_reach{m_chainman.ActiveChain().Tip()->Time() >\r\n+                                              limited_peers_oldest_block_time};\r\n+    SetServiceFlagsIBDCache(tip_within_limited_peers_reach);\r\n }\r\n \r\n void PeerManagerImpl::MaybeSendPing(CNode& node_to, Peer& peer, std::chrono::microseconds now)\r\n {\r\n     if (m_connman.ShouldRunInactivityChecks(node_to, std::chrono::duration_cast<std::chrono::seconds>(now)) &&\r\n         peer.m_ping_nonce_sent &&\r\n```\r\nagainst `master` @ f0e829022a415c7c9513e715c532079ec7756306\r\nplus maybe some renaming is warranted\r\n</details>\r\n\r\nMy addrman has 71837 addresses and from those 11795 are limited peers. The chance of getting all 10 peers limited is (11795 / 71837)<sup>10</sup> which is really small. Was this observed in practice or is it more of a theoretical problem? (I think it should be fixed even if \"theoretical\").",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#issuecomment-1853978983",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28170"
    },
    {
      "event": "reviewed",
      "id": 1781749563,
      "node_id": "PRR_kwDOABII585qM1c7",
      "url": null,
      "actor": null,
      "commit_id": "afc29b15e262b4ff402d479ec77ab8507552bcbc",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "> But the situation is somewhat convoluted in master and I am not sure this PR makes it any better. There are multiple ways to determine if we are stale.\r\n\r\nEach of those flags have a different meaning depending on where they are located. They are not equivalent and shouldn't be used interchangeably. For instance:\r\nThe flag at the chain state manager level tells us whether the node passed IBD or not based only on the chain information.\r\nThe flag at the peers manager level tells us whether the node passed IBD or not based on the chain information, last received tip time and the in-flight block requests.\r\n\r\nThe higher we go in terms of layering levels, the more complete the sync status information is.\r\n\r\nThat being said, it is hard to disagree over the convoluted situation in master. One of the reasons behind the way I implemented this PR is to unify the different ways we check for a stale scenario at the PeerManager level (where we sometimes call `CanDirectFetch()` directly, others we call `IsInitialBlockDownload()` and others we use the `m_initial_sync_finished` field..).\r\n\r\n> ChainstateManager::IsInitialBlockDownload(): uses -maxtipage (default 24h). Once it considers out of IBD, it stays like that regardless of the tip age (why? surely it is possible to lag behind again).\r\n\r\nI'm quite sure we don't want to modify `IsInitialBlockDownload()` without a really good reason. It has been there for over a decade, and many processes depend on it. Instead, I advocate for a gradual migration of callers to not depend on it. This PR essentially moves in that direction by improving the PeerManager's existing view of the synchronization state, which differs from the lower-level ChainStateManager view.\r\nThis is because the concept of the 'initial block download' state is incomplete at the ChainStateManager level; it does not consider the in-flight blocks, any recent chain movement nor any network-level heuristic.\r\nFurthermore, this concept fails to describe what happens after initial-block-download.. what if the node lags behind for a really long time, etc. The staleness situations can be a bit more more complex than a simple 'stale'-'not stale' state obtained only by checking the diff between the tip time and the current clock time.\r\n\r\nOn top of that, I'm pretty strong on stopping using functions that lock `cs_main` indiscriminately everywhere in the sources. The more we lock this mutex, the worse the overall node responsiveness becomes. With this PR changes, we are improving the situation and merging the base building blocks for other `cs_main` locks removals in the future as well.\r\n\r\n\r\n> PeerManagerImpl::m_initial_sync_finished > 3.1. Set by PeerManagerImpl::CheckForStaleTipAndEvictPeers() depending on PeerManagerImpl::CanDirectFetch() which checks if the tip is older than 3h20min. Can only go from false to true (why?).\r\n\r\nBecause the field is called 'initial sync finished'. Same terminology used at the chain state manager level. This field pertains to the initial block download state and does not reflect the node's proximity to the tip during the entire node lifetime. It does not provide information about post-IBD staling situations.\r\nHence, there are instances in the sources where `CanDirectFetch()` is directly called, resulting in repeated locking of `cs_main` to detect stale situations. Instead, we should aim to have this flag accurately represent the true synchronization state. Consequently, we can replace all calls to `CanDirectFetch()` and, possibly, other lower-level `IsInitialBlockDownload()` with this PeerManager level flag. (My idea is to submit follow-ups moving into this direction).",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1781749563",
      "submitted_at": "2023-12-14T12:51:23Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
    },
    {
      "event": "commented",
      "id": 1856680153,
      "node_id": "IC_kwDOABII585uqrDZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1856680153",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-14T21:40:06Z",
      "updated_at": "2023-12-18T15:38:21Z",
      "author_association": "MEMBER",
      "body": "> I think that it should be possible to resolve the problem in a simpler way and without touching unrelated stuff (like when to start \"extra block-relay-only connections\")\r\n\r\nPlease look https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1296355296.\r\nThe convo started from a different angle but I think the outcome addresses your concern.\r\nWe ended up agreeing that keeping the extra block relay connection logic as is in the current change set actually improves certain scenarios. For instance; if we are in a post-IBD stalling state, we do need more block relay connections. Could be full node outbound connections or extra block relay only connections. It doesn't matter. We just need some peer who can help us sync.\r\n\r\n> Would this resolve the problem?\r\n>\r\n> [patch] update g_initial_block_download_completed periodically based on our tip age\r\n\r\nHmm, I wouldn't be so happy with it. It is re-implementing existing pieces of code in a CPU-wasteful manner.\r\n\r\nKeep in mind that `CheckForStaleTipAndEvictPeers()` is executed every 45 seconds indefinitely. We don't want to perform the checks and updates you added when the node is fully synced. These should only be executed when the node detects the tip lagging behind.\r\nTo achieve this, we already have the `TipMayBeStale()` function, which runs only at a 10-minute interval to prevent CPU waste.\r\nAdditionally, would say that the reason behind `PeerManager` caching the last time the tip was updated, and not the last tip time, is to differentiate between a node completely isolated, lagging behind, with no relevant connections vs a node that is lagging behind but it is connected to the network and syncing up the chain. These are two different scenarios: the first one requires new connections, meanwhile the second one does not (it could be syncing slow due to a poor internet connection, but the node is still syncing, which is positive).\r\n\r\nAlso, the way we cache the last time the tip was updated inside `PeerManager` is great for avoiding unnecessary `cs_main` locks, which impact the entire node's responsiveness (a key motivation behind the current implementation of this PR).\r\nA small note about this last point: we can and should do better. I think we will be able to remove the high-level `cs_main` lock at `CheckForStaleTipAndEvictPeers()` in a future future follow-up PR.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#issuecomment-1856680153",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28170"
    },
    {
      "event": "commented",
      "id": 1858509374,
      "node_id": "IC_kwDOABII585uxpo-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1858509374",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-15T21:26:37Z",
      "updated_at": "2023-12-19T19:06:22Z",
      "author_association": "MEMBER",
      "body": "News, found something after all the walls of texts.\r\n~Having the ´TipMayBeStale()´ call surrounded by `GetUseAddrmanOutgoing()` check makes the node accept limited peers incoming connections indiscriminately when it was initialized with outgoing connections disabled.~\r\nUpdate: ^^ this is ok. We skip the desirable services flag check on inbound, feeler and manual connections. Not an issue.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#issuecomment-1858509374",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28170"
    },
    {
      "event": "commented",
      "id": 1860824375,
      "node_id": "IC_kwDOABII585u6e03",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1860824375",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-18T15:32:11Z",
      "updated_at": "2023-12-18T15:32:11Z",
      "author_association": "CONTRIBUTOR",
      "body": "I agree with what you say, except the below:\r\n\r\n> It is re-implementing existing pieces of code\r\n\r\nWhich?\r\n\r\n> in a CPU-wasteful manner.\r\n\r\nIsn't that just a few CPU instructions? (comparing the tip age to the current time). I agree it can be done less often than 45 seconds for the purpose of avoiding limited peers.\r\n\r\n> a node completely isolated, lagging behind, with no relevant connections vs a node that is lagging behind but it is connected to the network and syncing up the chain\r\n\r\nYes, these are two different scenarios in general. My understanding is that in both we better avoid limited peers.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#issuecomment-1860824375",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28170"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDM5MDA2ZWQxNThmNWY4YWQwNWYzNzU2ZDdmMWU2ZjFlNGQ3YjRmMGM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/39006ed158f5f8ad05f3756d7f1e6f1e4d7b4f0c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/39006ed158f5f8ad05f3756d7f1e6f1e4d7b4f0c",
      "tree": {
        "sha": "77052c4f0e4864741c14420fbdc354fd4cdff4b1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/77052c4f0e4864741c14420fbdc354fd4cdff4b1"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 77052c4f0e4864741c14420fbdc354fd4cdff4b1\nparent dd391944dc2d4e7dda9439647e603b41ba751b78\nauthor furszy <matiasfurszyfer@protonmail.com> 1690392081 -0300\ncommitter furszy <matiasfurszyfer@protonmail.com> 1702989688 -0300\n\nnet: decouple state independent service flags from desirable ones\n\nThis former one will be moved to the peer manager class in the\nfollowing-up commit.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEA++0fqwRHQpmlZfQXdI8zGhqpiMFAmWBj3gACgkQXdI8zGhq\npiPoWg//VfSIfltShTySFHiyvcb7aJEQfcEs0kFDG3s7xQsNJm3tRqfb65VAciET\ndUxpZZpDNub2l6KeAC0XUSkG5rDHU6QS8lmXvExTe5BOO/TKakXfkvTTYgnNHEfm\nRfCIv6XrpgnS33Bbt+jnm5f7MOvq/QN62gGZikbzlBKtUlO7Mswtxz6TwD3ZWIbd\nGuJpuVxhev/FwKE66MdLc1ixuXJKJoI1L+S9pX6Mqk4M8bNkpeZqhUp8zY1nuHvY\nXkKw9jc3xKyyf74lkLLCpC1Vb+JZEM5b7JfpgRhn9ApPV9Y7kmSnK8dIrbinHdf6\ngDsWL31c3p8lcsjfkQmVutw/D11C0Yivo2xIM6D5oY8E8gowCCymtLaRHA8wilgx\nPqkKs4EbEVW9+nl8xKXjpC9BsKSR7oFO1+efLO2e/362m+tag/HuuQdeVTfKwgKs\nKo7XY7YOph+62bhmcGKSxKvCrL56mgvSb40MKRfQLZaSnO1vQUS40P5D0Y5hWp24\nzc8tfVuIQbcmf4TqIeOvD6oU9Ta+YTl/78MU7z9y2EMVpBcujpoKBYKLeT8B1fTG\nwo9f8FmN479jQm4FuEDQkojnVwhL+r2jC/n4747r0ZiqCpfcTus17jMFslUq1pXi\nOMgu3VZYAxNOEAhiyMGaH+/qihbeXRnle92BqkKaqjhtJCOuFGw=\n=YNH2\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dd391944dc2d4e7dda9439647e603b41ba751b78",
          "sha": "dd391944dc2d4e7dda9439647e603b41ba751b78",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/dd391944dc2d4e7dda9439647e603b41ba751b78"
        }
      ],
      "message": "net: decouple state independent service flags from desirable ones\n\nThis former one will be moved to the peer manager class in the\nfollowing-up commit.",
      "committer": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-12-19T12:41:28Z"
      },
      "author": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-07-26T17:21:21Z"
      },
      "sha": "39006ed158f5f8ad05f3756d7f1e6f1e4d7b4f0c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGE3MTBlMDgzOThhZTQ4OTU3MmFkNDk1NzIxZGIwNzRiYmFiNmRmZjE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a710e08398ae489572ad495721db074bbab6dff1",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a710e08398ae489572ad495721db074bbab6dff1",
      "tree": {
        "sha": "81477d38406e96fd640f7d2c768c063ec01f5713",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/81477d38406e96fd640f7d2c768c063ec01f5713"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 81477d38406e96fd640f7d2c768c063ec01f5713\nparent 39006ed158f5f8ad05f3756d7f1e6f1e4d7b4f0c\nauthor furszy <matiasfurszyfer@protonmail.com> 1702990237 -0300\ncommitter furszy <matiasfurszyfer@protonmail.com> 1703013191 -0300\n\nnet: move state dependent peer services flags\n\nBy relocating the peer desirable services flags into the peer\nmanager, we allow the connections acceptance process to handle\npost-IBD potential stalling scenarios.\n\nIn the follow-up commit(s), the desirable service flags will be\ndynamically adjusted to detect post-IBD stalling scenarios (such\nas a +48-hour inactive node that must prefer full node connections\ninstead of limited peer connections because they cannot provide\nhistorical blocks). Additionally, this encapsulation enable us\nto customize the connections decision-making process based on\nnew user's configurations in the future.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEA++0fqwRHQpmlZfQXdI8zGhqpiMFAmWB60cACgkQXdI8zGhq\npiN02Q//eMEpZ/P/reXlLuw/O3jIC/QQKrUK/MqV29cxoywMyYaN24YzvXslEQ/6\nxrYblhUcRqxnHivlS4FCuyfvs2hAQ2NxMp3c+mGAI5sINvMfi1H1WwrwlLg1LW55\nq4nrRhAKw6RrsMA4zg0hFenCWXxU+7hi523kLnrO5vkTnH3X3bXuIUdiD7wfkC6p\n87XdGMovh2zj2gtPc3WQo2tnRSbSbaGGkPtX2kve6yOD7uK1w2da42cgDsU2N+Cq\nLvOMZJdZsMgJQbVQZJoa/0cPu6GqXPfOdbQaThG7Q8wpfMQRvVZQgWIigZNgBkao\nOnaSW3SY46anxR2yTDsgBgirhQ63lbORUKL+8Xr5VUlIe1x+KS+QTCgEB0p03WOJ\n8ohtaKTuX9lBm3WOmh2PdqSivs35vgi68M6dvKH0Vgv7lYuri+t3TvDFSP1VLr0+\n80SYhwCKWO0fXgmUAcuRHl0o6gSGkJBU+2S3n4WU8dslVtE1Db3wQcHbMwjZbtHA\nTw01UT08X9vwoWcELvS7qN8V2r9w9KZUfvA8jwTFWnwjBzjmnXTq1etGQ3/NrZqg\nYSaTKEbxfk7fxEQk7DLoOCtoYuMh34l/FU+1uua+N5VLL90ze6nYDzhoEmGjQhy1\n47ybULClbS3EICf66kt6ha7V/8QRjnbxdOPmeZHXAcy8uCa0qTI=\n=tD11\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/39006ed158f5f8ad05f3756d7f1e6f1e4d7b4f0c",
          "sha": "39006ed158f5f8ad05f3756d7f1e6f1e4d7b4f0c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/39006ed158f5f8ad05f3756d7f1e6f1e4d7b4f0c"
        }
      ],
      "message": "net: move state dependent peer services flags\n\nBy relocating the peer desirable services flags into the peer\nmanager, we allow the connections acceptance process to handle\npost-IBD potential stalling scenarios.\n\nIn the follow-up commit(s), the desirable service flags will be\ndynamically adjusted to detect post-IBD stalling scenarios (such\nas a +48-hour inactive node that must prefer full node connections\ninstead of limited peer connections because they cannot provide\nhistorical blocks). Additionally, this encapsulation enable us\nto customize the connections decision-making process based on\nnew user's configurations in the future.",
      "committer": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-12-19T19:13:11Z"
      },
      "author": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-12-19T12:50:37Z"
      },
      "sha": "a710e08398ae489572ad495721db074bbab6dff1"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGEwNDJhOGY5NTE4NTk5Mzg2MzhhMThmOTM1YWQ4OGZkZmYzMzFiZDE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a042a8f951859938638a18f935ad88fdff331bd1",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a042a8f951859938638a18f935ad88fdff331bd1",
      "tree": {
        "sha": "dd55195b0a80bea8062657523d1639be0b175122",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dd55195b0a80bea8062657523d1639be0b175122"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree dd55195b0a80bea8062657523d1639be0b175122\nparent a710e08398ae489572ad495721db074bbab6dff1\nauthor furszy <matiasfurszyfer@protonmail.com> 1702992614 -0300\ncommitter furszy <matiasfurszyfer@protonmail.com> 1703013192 -0300\n\nnet: store best block tip time inside PeerManager\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEA++0fqwRHQpmlZfQXdI8zGhqpiMFAmWB60gACgkQXdI8zGhq\npiMrYBAAmImfJ07IiywuK3tkwj70Kz97tfS/2yeH/eaau7YEKviiKp7AV4x3lDQm\nmPdEvkSMIDc1MfuZsV8+4h7CjfQSkuTLt1S7XLyl2fzPTvPaRHF3v/Gj5R0OCHHX\nLj6GSQgqJOC/luWHn4rCLg74yolaWi4K3qdUZwpIF3sBP8ahHIyyhlmzIcE9CZxC\nFTxPvEcWL57TourDuhNSDgtPbYTplznlWbs9z46nZ2kmifnmCrOu4vSsEBpQvXfO\nh8yOFaz6IYlbsmkp3mynrcGsNMTtTV9SyU6bmAiMXWtS50KvnPkNQIZfJeHfXxWD\nGhaBl5YG8xLY7vJEv4bdpqoqcm6yB5E/7eVRuK3fkxe3S3FWIKhfrnDPz7gHjgeW\n9Px/txESzX0iDgXX8gCLlk9L7TfXcPc1yxT7+jdgS/9xVi1QYnDIfoXP/TRlG4NT\ncCmLIfAO1bPzHcs5n6eyjHmr8pyrOMOt2gq/6s5AktR9DlhSeJ7In95/2ulGmZrm\n0+8j6lOKWgnNuOWAYwFZDX2mw+EAF7MqGizDMrc1UhQIfO/TYBHJRxYsWy3S3SPx\n1zDHBQdyk1+LWyodq0knNnvD9C6s0ezQ+37O+IGfJxYZNDLoeSp2zn/vtEvUAucw\neJcxfXWrOgFH31vzC172cSW8FxoPJgI0C05yP58GXWfNxa/XVtU=\n=aQqu\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a710e08398ae489572ad495721db074bbab6dff1",
          "sha": "a710e08398ae489572ad495721db074bbab6dff1",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a710e08398ae489572ad495721db074bbab6dff1"
        }
      ],
      "message": "net: store best block tip time inside PeerManager",
      "committer": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-12-19T19:13:12Z"
      },
      "author": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-12-19T13:30:14Z"
      },
      "sha": "a042a8f951859938638a18f935ad88fdff331bd1"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDViNGUwMzFiNDM3OTIyNzM1ZmYyNjc2ZmE5MGZiZjNkNDA0YWI0NGY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5b4e031b437922735ff2676fa90fbf3d404ab44f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5b4e031b437922735ff2676fa90fbf3d404ab44f",
      "tree": {
        "sha": "259212f96c9af45e7881ba792e9645771a3d833c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/259212f96c9af45e7881ba792e9645771a3d833c"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 259212f96c9af45e7881ba792e9645771a3d833c\nparent a042a8f951859938638a18f935ad88fdff331bd1\nauthor furszy <matiasfurszyfer@protonmail.com> 1702993394 -0300\ncommitter furszy <matiasfurszyfer@protonmail.com> 1703013192 -0300\n\nnet: peer manager, dynamically adjust desirable services flag\n\nIntroduces functionality to detect when limited peers connections\nare desirable or not. Ensuring that the new connections desirable\nservices flags stay relevant throughout the software's lifecycle.\n(Unlike the previous approach, where once the validation IBD flag\nwas set, the desirable services flags remained constant forever).\n\nThis will let us recover from stalling scenarios where the node had\nsuccessfully synced, but subsequently dropped connections and remained\ninactive for a duration longer than the limited peers threshold (the\ntimeframe within which limited peers can provide blocks). Then, upon\nreconnection to the network, the node may end up only establishing\nconnections with limited peers, leading to an inability to synchronize\nthe chain.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEA++0fqwRHQpmlZfQXdI8zGhqpiMFAmWB60gACgkQXdI8zGhq\npiPWCA//RjdXgkNt3V2iIbmcpG6BoZh/koDdWL3LrBEuR46ajxN8KMsFyP17Ozyh\nHncGik2Y0eNg+tlaziKP7g9iBdUw40Tog4ZS+T1yo4TgXLcr7/c+iMqH8vhowU+k\nyHS/AP1QI2xTynWY5+zgymx5DLnjaA9+LqiORl5HYIKCrmjHzLd1l7OgstvxBMgJ\nIPJUaH2ig7i0zsMvG3kN0BGaEgb8cp6EtxQqbZq96ZNdqDmyCQn0n3Ras6BwzZfh\nzkBKdZSsGPtMsYAPTvt9sIy0fPUqy/Ymk1V4WXHAYKB8tr6WqwVHdZugUr4QsOF0\nrnzqHH+g3ewjAjBXVBKTWJTf+Dc905jqB/Y2D3vVd1hqoJDYghrHnfXGZASD92jT\n5Uday23RzzyCa/ocin2EZpPMNSO8Ymh23D0nvgMzflzHXvxg/v+V60cyce61OmMY\nGhaTX4AQC05PNpFmarfnA/SPnMKk8yY97NvNnGwZACZ7P18gi3gg9ym6xxqLy9IH\nxC1bX0GYUG5o2M1queFhjqGnygcILxHpRqoMoofBj4rfpj994Z3SAYGvjbePplUf\nuDx9adhVuTfOlGnflPkeyJytZDhUxs+cRoJGFDfV9rI4c1gMvgCNvqGaKBFcjHL3\nk5WtZdHBz4s870WsSArV/430n5uWCsmKmV3f32r58HsrWmi1Te0=\n=AxtW\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a042a8f951859938638a18f935ad88fdff331bd1",
          "sha": "a042a8f951859938638a18f935ad88fdff331bd1",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a042a8f951859938638a18f935ad88fdff331bd1"
        }
      ],
      "message": "net: peer manager, dynamically adjust desirable services flag\n\nIntroduces functionality to detect when limited peers connections\nare desirable or not. Ensuring that the new connections desirable\nservices flags stay relevant throughout the software's lifecycle.\n(Unlike the previous approach, where once the validation IBD flag\nwas set, the desirable services flags remained constant forever).\n\nThis will let us recover from stalling scenarios where the node had\nsuccessfully synced, but subsequently dropped connections and remained\ninactive for a duration longer than the limited peers threshold (the\ntimeframe within which limited peers can provide blocks). Then, upon\nreconnection to the network, the node may end up only establishing\nconnections with limited peers, leading to an inability to synchronize\nthe chain.",
      "committer": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-12-19T19:13:12Z"
      },
      "author": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-12-19T13:43:14Z"
      },
      "sha": "5b4e031b437922735ff2676fa90fbf3d404ab44f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDM3NDZkYWM3Mzk1MDQxMzg0ZWRmNmFmMDg3N2M3MTYyOWY2MDVmYjU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3746dac7395041384edf6af0877c71629f605fb5",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3746dac7395041384edf6af0877c71629f605fb5",
      "tree": {
        "sha": "0e32dc3ca29223965304bbc3d555026ad8855d2e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0e32dc3ca29223965304bbc3d555026ad8855d2e"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 0e32dc3ca29223965304bbc3d555026ad8855d2e\nparent 5b4e031b437922735ff2676fa90fbf3d404ab44f\nauthor furszy <matiasfurszyfer@protonmail.com> 1698761734 -0300\ncommitter furszy <matiasfurszyfer@protonmail.com> 1703013193 -0300\n\ntest: add coverage for peerman adaptive connections service flags\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEA++0fqwRHQpmlZfQXdI8zGhqpiMFAmWB60kACgkQXdI8zGhq\npiNPLw//RmA7ajUe1MLe9F3fxfo4KiUNblBOEJ3DoAcrIsaWColfmRLJTIUrU0Sb\nGMQLvGVHxwSX4z1q0Bw/4sSawqzWACznIgqHoEAt13QIHKgjzRGTQbF+uSfK5axi\nfQfosmE8NZF/LoXzoBVsGQ32QitThLpyCWw1IHTsVtZunFPnfxnVly0Q01Or7gMA\nzt7JYsfEnKHdFMQ7FS4V5UCGellK6oj6a2Q5w8zIoXvmi2BLZAF76TFSkK4W2k70\njcqpdYU/K2l+n9GKjIvZQxPwaJWA6wlfxPFa+/0D1MAWAxA/yGBmI02Lz44Cbcyu\nxwvcy3+NM59lwOc/BfOouZzHxsi2fBmvh4iBgTVecmfdT5BuFUKT9irLUOcYeVKC\nz5SuB4HtVidjUiqM8X+umCW3w8NUIHVJ/GKtAUN1bt1O1lHYDuo4yqsLGOhjKBFV\nVAj1hIv9rJJAVpJ0vbqnlqHxtJKI+us9nGJRh9n75Qi7cWwLFiilSDaJTX4twEyD\nlhSn7pXze84UBRLgNG7YEPK0Txksmq03rvKwYsSqO6gDuZaDvbjmnwWCa7CXNXJF\nkUa48dMQSFvejbCGuH+O/IhZC5MSAjwjN8BQZTfOGZhxI0njEloP1ExgmtPP5cDO\nS7a/GSzij0qgrGK/xC/QZDxyCaRJvjX17eF9sFG54Yh7q1SmWRw=\n=kqin\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5b4e031b437922735ff2676fa90fbf3d404ab44f",
          "sha": "5b4e031b437922735ff2676fa90fbf3d404ab44f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5b4e031b437922735ff2676fa90fbf3d404ab44f"
        }
      ],
      "message": "test: add coverage for peerman adaptive connections service flags",
      "committer": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-12-19T19:13:13Z"
      },
      "author": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-10-31T14:15:34Z"
      },
      "sha": "3746dac7395041384edf6af0877c71629f605fb5"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZlOGU5MDdlOTE4NmMwYzkwMDgwOTFkNGEzZGFjMmY5ZmRiNmIwNTk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "tree": {
        "sha": "b2fe77fd80edd0c53f10001379b1a2ea029cfada",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b2fe77fd80edd0c53f10001379b1a2ea029cfada"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree b2fe77fd80edd0c53f10001379b1a2ea029cfada\nparent 3746dac7395041384edf6af0877c71629f605fb5\nauthor furszy <matiasfurszyfer@protonmail.com> 1702999142 -0300\ncommitter furszy <matiasfurszyfer@protonmail.com> 1703013193 -0300\n\nnet: remove now unused global 'g_initial_block_download_completed'\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEA++0fqwRHQpmlZfQXdI8zGhqpiMFAmWB60kACgkQXdI8zGhq\npiOjKxAAwnmdYjO58HrksGLtyy70Lo+XGV2kIht1ygcGsKXv9rCz/0IgCR0ZpyhI\nsdKqq6AN4l+8a2ubuSht2uAyTJ5+nIRhDMLXB18lwvw2tQ3Tj5i+A1D/1a9dtigL\nr7RiPuKbZQvDo4fb2XgM1NUX8jD+uMgBy2ywcCvQYkrEKZt2UkuKGHlswFClVje4\nTt73CoQAivfk49eolGrJVKYvHiYBmU9h/1BrghRGAM8f3KEzCWFmAI8c/R/HW4fR\nPzTNhAP8I7SZZvV1O+dal44pdQHSCwDb++e1WXmb8NBDaQ5h1cw96k4QBgCmkAAC\nNWkuVaBrWROxo6IkAGgojZghjQl9DxurAZtAVs8R0wpmwAkBtRzS8rncoiHsqoTh\nrHpVbv4ewf5tfbDNGCpSpLthU2M8v/rVgs6es5wdv3h6AdOo++/eG2L1Z5fSIp96\n0Z7nT0PQP1zFEX5S5jFFZJsz7dZSFavCD+O3N/ZpnaJWL0UTCy7l5Cx0HmzclNc4\nWy95Mu32ZMd5r8qId5rR5FqH2+Ykj/DGRcvnLNkut/ngm3ZIU7ORPhcP0W7ev5co\n50bxLZd7UfZS3vY18Ggli/y5ArEpb3Hd9WzZOh3N5M4CixF/hzMqGkTzpNleREQ1\nTmtliuwA6dFi21se/zSiQnYe+06JzF2Az6G1ik7wv8kg9F//bzA=\n=/Bpy\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3746dac7395041384edf6af0877c71629f605fb5",
          "sha": "3746dac7395041384edf6af0877c71629f605fb5",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3746dac7395041384edf6af0877c71629f605fb5"
        }
      ],
      "message": "net: remove now unused global 'g_initial_block_download_completed'",
      "committer": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-12-19T19:13:13Z"
      },
      "author": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-12-19T15:19:02Z"
      },
      "sha": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11293831161,
      "node_id": "HRFPE_lADOABII585swZjNzwAAAAKhKi_5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11293831161",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-19T19:18:45Z"
    },
    {
      "event": "reviewed",
      "id": 1789712050,
      "node_id": "PRR_kwDOABII585qrNay",
      "url": null,
      "actor": null,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "PR reworked based on the feedback. Thanks @vasild for the rounds of review.\r\n\r\nThe functionality is no longer tied to the last tip update time; is now linked to the actual tip time, which is now cached by `PeerManager` to prevent undesirable `cs_main` locks. This implies simpler code since we are no longer modifying `TipMayBeStale()` nor the `m_initial_sync_finished` field.\r\n\r\nI still believe that we should implement some of the changes made earlier, such as the `PeerManager` IBD flag modifications, which will allow us to clean up a good number of `cs_main` locks. However, I agree that these changes should be done in a separate PR.\r\n\r\n> It is re-implementing existing pieces of code\r\n> Which?\r\n\r\nWas talking about `TipMayBeStale()` which checks the time already. But.. I wasn't contemplating the fact that it can return `NotStale` only because the node has in-flight blocks (which could be ancient..).\r\n\r\n> Isn't that just a few CPU instructions? (comparing the tip age to the current time). I agree it can be done less often than 45 seconds for the purpose of avoiding limited peers.\r\n\r\nCovered. Check it now.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#pullrequestreview-1789712050",
      "submitted_at": "2023-12-19T21:03:37Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-20T00:23:39Z",
      "updated_at": "2023-12-20T00:23:39Z",
      "source": {
        "issue": {
          "id": 2016966837,
          "node_id": "PR_kwDOABII585gsIyD",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28970",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28970/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28970/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28970/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28970",
          "number": 28970,
          "state": "open",
          "state_reason": null,
          "title": "[WIP] p2p: opportunistically accept 1-parent-1-child packages",
          "body": "Draft for now while working on other things. See https://github.com/bitcoin/bitcoin/issues/27463 for overall package relay tracking.\r\n\r\nRationale:\r\n- Package relay is nice [1]. Relaying 1-parent-1-child CPFP when mempool min feerate is high would be a subset of the use cases, but a pretty significant improvement over what we have today.\r\n- Switching to a cluster-based mempool (see\r\nhttps://github.com/bitcoin/bitcoin/issues/27677 and https://github.com/bitcoin/bitcoin/pull/28676) requires the removal of CPFP carve out, which applications depend on. V3 + package RBF + ephemeral anchors + 1-parent-1-child package relay provides an intermediate solution.\r\n- The majority of this code is useful for building e.g. #27742.\r\n\r\nThis means 1p1c packages propagate in the \"happy case\" where nobody is deliberately withholding packages. To make this more robust, we need receiver-side logic to retry orphan resolution with multiple peers. Also, since we rely on the orphanage to remember the child while waiting for the parent, peers may cause us to drop packages by sending lots of orphans. To make this robust, we need to make efforts to protect some amount of orphans from eviction.\r\n\r\n[1]: see this writeup and its links https://github.com/bitcoin/bips/blob/02ec218c7857ef60914e9a3d383b68caf987f70b/bip-0331.mediawiki#propagate-high-feerate-transactions",
          "user": {
            "login": "glozow",
            "id": 25183001,
            "node_id": "MDQ6VXNlcjI1MTgzMDAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/glozow",
            "html_url": "https://github.com/glozow",
            "followers_url": "https://api.github.com/users/glozow/followers",
            "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
            "organizations_url": "https://api.github.com/users/glozow/orgs",
            "repos_url": "https://api.github.com/users/glozow/repos",
            "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/glozow/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 2,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28970",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28970",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28970.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28970.patch"
          },
          "created_at": "2023-11-29T16:25:29Z",
          "updated_at": "2023-12-20T00:23:38Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-20T02:19:10Z",
      "updated_at": "2023-12-20T02:19:10Z",
      "source": {
        "issue": {
          "id": 1741612382,
          "node_id": "PR_kwDOABII585SL5TZ",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27826",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27826/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27826/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27826/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27826",
          "number": 27826,
          "state": "open",
          "state_reason": null,
          "title": "validation: log which peer sent us a header",
          "body": "Fixes #27744\r\n\r\nSince #27278 we log received headers. For compact blocks we also log which peer sent it (e5ce8576349d404c466b2f4cab1ca7bf920904b2), but not for regular headers. That required an additional refactor, which this PR provides.\r\n\r\nMove the logging from validation to net_processing.\r\n\r\nThis also reduces the number of log entries (under default configuration) per compact block header from 3 to 2: one for the header and one for the connected tip.\r\n\r\nThe PR introduces a new helper method `LogBlockHeader`.\r\n\r\nWhen receiving a _compact block_ we call `LogBlockHeader` from the exact same place as where we previously logged. So that log message doesn't change. What does change is that we no longer _also_ log from `AcceptBlockHeader`.\r\n\r\nWhen receiving a regular header(s) message, _we only log the last one_. This is a change in behaviour because it was simpler to implement, but it's probably better anyway. It does mean that if a peer sends of a bunch of headers of which _any_ is invalid, we won't log it (here).\r\n\r\nLastly I expanded the code comment explaining why we log this. It initially only covered selfish mining, but we also care about peers sending us headers but not following up (see e.g. #27626).\r\n\r\nExample log:\r\n\r\n```\r\n2023-06-05T13:12:21Z Saw new header hash=000000000000000000045910263ef84b575ae3af151865238f1e5c619e69c330 height=792964 peer=0\r\n2023-06-05T13:12:23Z UpdateTip: new best=000000000000000000045910263ef84b575ae3af151865238f1e5c619e69c330 height=792964 version=0x20000000 log2_work=94.223098 tx=848176824 date='2023-06-05T13:11:49Z' progress=1.000000 cache=6.4MiB(54615txo)\r\n2023-06-05T13:14:05Z Saw new cmpctblock header hash=00000000000000000003c6fd4ef2e1246a3f9e1fffab7247344f94cadb9de979 height=792965 peer=0\r\n2023-06-05T13:14:05Z UpdateTip: new best=00000000000000000003c6fd4ef2e1246a3f9e1fffab7247344f94cadb9de979 height=792965 version=0x20000000 log2_work=94.223112 tx=848179461 date='2023-06-05T13:13:58Z' progress=1.000000 cache=7.2MiB(61275txo)\r\n2023-06-05T13:14:41Z Saw new header hash=000000000000000000048e6d69c8399992782d08cb57f5d6cbc81a9f996c3f43 height=792966 peer=8\r\n2023-06-05T13:14:42Z UpdateTip: new best=000000000000000000048e6d69c8399992782d08cb57f5d6cbc81a9f996c3f43 height=792966 version=0x2db3c000 log2_work=94.223126 tx=848182944 date='2023-06-05T13:14:35Z' progress=1.000000 cache=8.0MiB(69837txo)\r\n```",
          "user": {
            "login": "Sjors",
            "id": 10217,
            "node_id": "MDQ6VXNlcjEwMjE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sjors",
            "html_url": "https://github.com/Sjors",
            "followers_url": "https://api.github.com/users/Sjors/followers",
            "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
            "organizations_url": "https://api.github.com/users/Sjors/orgs",
            "repos_url": "https://api.github.com/users/Sjors/repos",
            "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Sjors/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 16,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27826",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27826",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27826.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27826.patch"
          },
          "created_at": "2023-06-05T11:53:28Z",
          "updated_at": "2023-12-20T02:19:09Z"
        },
        "type": "issue"
      }
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285990092",
      "pull_request_review_id": 1565523628,
      "id": 1285990092,
      "node_id": "PRRC_kwDOABII585MpqbM",
      "diff_hunk": "@@ -666,6 +666,12 @@ class NetEventsInterface\n     /** Handle removal of a peer (clear state) */\n     virtual void FinalizeNode(const CNode& node) = 0;\n \n+    /**\n+     * Callback to determine whether the given set of service flags are sufficient\n+     * for a peer to be \"relevant\".\n+     */\n+    virtual bool HasDesirableServiceFlags(ServiceFlags services) = 0;",
      "path": "src/net.h",
      "position": null,
      "original_position": 8,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "2325ff03f42606793d3c8f2a97fc73015b9c48dd",
      "in_reply_to_id": null,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This interface is not the right place for a callback like this because it is not a \"net event\".\r\n\r\nWould be better to have a method on connman, e.g. `CConnman::SetDesirableServiceFlags` that is then called by peerman.",
      "created_at": "2023-08-07T14:50:21Z",
      "updated_at": "2023-08-07T14:54:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1285990092",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285990092"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": 669,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1019,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286427458",
      "pull_request_review_id": 1566217778,
      "id": 1286427458,
      "node_id": "PRRC_kwDOABII585MrVNC",
      "diff_hunk": "@@ -666,6 +666,12 @@ class NetEventsInterface\n     /** Handle removal of a peer (clear state) */\n     virtual void FinalizeNode(const CNode& node) = 0;\n \n+    /**\n+     * Callback to determine whether the given set of service flags are sufficient\n+     * for a peer to be \"relevant\".\n+     */\n+    virtual bool HasDesirableServiceFlags(ServiceFlags services) = 0;",
      "path": "src/net.h",
      "position": null,
      "original_position": 8,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "2325ff03f42606793d3c8f2a97fc73015b9c48dd",
      "in_reply_to_id": 1285990092,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> This interface is not the right place for a callback like this because it is not a \"net event\".\r\n\r\nHmm ok, that would avoid locking `cs_main` in the open connections thread. Which is nice.",
      "created_at": "2023-08-07T22:20:19Z",
      "updated_at": "2023-08-07T22:20:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1286427458",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286427458"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": 669,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1019,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1287286613",
      "pull_request_review_id": 1567568353,
      "id": 1287286613,
      "node_id": "PRRC_kwDOABII585Mum9V",
      "diff_hunk": "@@ -666,6 +666,12 @@ class NetEventsInterface\n     /** Handle removal of a peer (clear state) */\n     virtual void FinalizeNode(const CNode& node) = 0;\n \n+    /**\n+     * Callback to determine whether the given set of service flags are sufficient\n+     * for a peer to be \"relevant\".\n+     */\n+    virtual bool HasDesirableServiceFlags(ServiceFlags services) = 0;",
      "path": "src/net.h",
      "position": null,
      "original_position": 8,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "2325ff03f42606793d3c8f2a97fc73015b9c48dd",
      "in_reply_to_id": 1285990092,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Have thought more about this and I'm not so convinced about it anymore.\r\n\r\nThe connection manager class lives on a lower level, and manages only a fraction of the node's information. And this field is strictly linked to the node's overall status. Right now, `HasDesirableServiceFlags()` requires to know the chain sync status.\r\nSo, by placing it inside `CConMan`, we add another level of indirection. Because, most of the time, the peer manager class will call to the `CConMan` setter and subsequently call the getter to utilize it. Using the `CConMan` class mostly as a field container.\r\n\r\nAlso, it would complicate any expansion of the peer services selectivity logic because different processes would require to update the flag stored in `CConMan`. For instance, the node could be seeking to exclusively connect to peers that provide block filters (up to a certain point, then pick other preferences on a case basis), or could want to minimize the number of limited connections based on the chain download state, or if a chain stale state was detected, or could be needing to disallow certain peer types for a certain time etc.\r\n\r\nConsidering this, the responsibility for managing this field seems to fit better inside the peer manager class.\r\n\r\nHappy to hear your thoughts about this. Will keep thinking about it, we can still improve this to not require `cs_main` lock even when it's placed inside the peers manager class.",
      "created_at": "2023-08-08T15:23:38Z",
      "updated_at": "2023-08-14T15:09:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1287286613",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1287286613"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": 669,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1019,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1293556312",
      "pull_request_review_id": 1576991490,
      "id": 1293556312,
      "node_id": "PRRC_kwDOABII585NGhpY",
      "diff_hunk": "@@ -666,6 +666,12 @@ class NetEventsInterface\n     /** Handle removal of a peer (clear state) */\n     virtual void FinalizeNode(const CNode& node) = 0;\n \n+    /**\n+     * Callback to determine whether the given set of service flags are sufficient\n+     * for a peer to be \"relevant\".\n+     */\n+    virtual bool HasDesirableServiceFlags(ServiceFlags services) = 0;",
      "path": "src/net.h",
      "position": null,
      "original_position": 8,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "2325ff03f42606793d3c8f2a97fc73015b9c48dd",
      "in_reply_to_id": 1285990092,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Because, most of the time, the peer manager class will call to the CConMan setter and subsequently call the getter to utilize it. \r\n\r\nI wasn't saying to make connman the container for this data, I only meant to add a setter to inform connman of the things it needs to perform its job (making connections to desirable nodes). The main container for the flags would still be peerman.",
      "created_at": "2023-08-14T14:37:45Z",
      "updated_at": "2023-08-14T14:37:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1293556312",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1293556312"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": 669,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1019,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1296335745",
      "pull_request_review_id": 1581277414,
      "id": 1296335745,
      "node_id": "PRRC_kwDOABII585NRIOB",
      "diff_hunk": "@@ -1577,6 +1579,20 @@ void PeerManagerImpl::FinalizeNode(const CNode& node)\n     LogPrint(BCLog::NET, \"Cleared nodestate for peer=%d\\n\", nodeid);\n }\n \n+bool PeerManagerImpl::HasDesirableServiceFlags(ServiceFlags services)",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "1428b7f4e8c648fdc68ba5744d640d120d5d78eb",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The comment (\"shortcut for...\") was helpful for me, any reason to drop it?",
      "created_at": "2023-08-16T19:23:07Z",
      "updated_at": "2023-08-16T20:28:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1296335745",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1296335745"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1655,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1296355296",
      "pull_request_review_id": 1581277414,
      "id": 1296355296,
      "node_id": "PRRC_kwDOABII585NRM_g",
      "diff_hunk": "@@ -5235,6 +5244,11 @@ void PeerManagerImpl::CheckForStaleTipAndEvictPeers()\n     if (!m_initial_sync_finished && CanDirectFetch()) {\n         m_connman.StartExtraBlockRelayPeers();\n         m_initial_sync_finished = true;\n+    } else if (super_stale) {\n+        // Disable extra block relay peers and disallow connection to limited peers.\n+        // We need to find a full node that can help us recover.\n+        m_connman.StopExtraBlockRelayPeers();",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 63,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "2325ff03f42606793d3c8f2a97fc73015b9c48dd",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why stop doing extra block-relay peers in this situation? These aren't attempted during original IBD because we are  expected to be behind the tip. However, in this super-stale situation which should really not happen normally, it seems that they could only help?",
      "created_at": "2023-08-16T19:44:37Z",
      "updated_at": "2023-08-16T20:28:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1296355296",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1296355296"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5251,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1296375222",
      "pull_request_review_id": 1581277414,
      "id": 1296375222,
      "node_id": "PRRC_kwDOABII585NRR22",
      "diff_hunk": "@@ -1265,14 +1266,21 @@ void PeerManagerImpl::MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid)\n     });\n }\n \n-bool PeerManagerImpl::TipMayBeStale()\n+bool PeerManagerImpl::TipMayBeStale(bool& super_stale)\n {\n     AssertLockHeld(cs_main);\n     const Consensus::Params& consensusParams = m_chainparams.GetConsensus();\n     if (m_last_tip_update.load() == 0s) {\n         m_last_tip_update = GetTime<std::chrono::seconds>();\n     }\n-    return m_last_tip_update.load() < GetTime<std::chrono::seconds>() - std::chrono::seconds{consensusParams.nPowTargetSpacing * 3} && mapBlocksInFlight.empty();\n+\n+    auto last_update_time = m_last_tip_update.load();\n+    if (last_update_time < GetTime<std::chrono::seconds>() - std::chrono::seconds{consensusParams.nPowTargetSpacing * 3} && mapBlocksInFlight.empty()) {\n+        // If tip is further than NODE_NETWORK_LIMITED_MIN_BLOCKS, we are really behind and shouldn't connect to limited peers anymore.\n+        super_stale = last_update_time < GetTime<std::chrono::seconds>() - std::chrono::seconds{consensusParams.nPowTargetSpacing * 290};",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 36,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "2325ff03f42606793d3c8f2a97fc73015b9c48dd",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`m_initial_sync_finished` is set using AdjustedTime (see `CanDirectFetch()`) while it's unset using local time. In spite of plans to get rid of AdjustedTime, I  think it would be better to use it here as well, otherwise there could be constant switching back and forth in some situations where the two times differ.\r\n\r\nAlso, why introduce a new magic number of 290, can't we just use `NODE_NETWORK_LIMITED_MIN_BLOCKS` (maybe + 2, if there is a reason for it)?",
      "created_at": "2023-08-16T20:07:35Z",
      "updated_at": "2023-08-16T20:28:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1296375222",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1296375222"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1280,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297115636",
      "pull_request_review_id": 1582453390,
      "id": 1297115636,
      "node_id": "PRRC_kwDOABII585NUGn0",
      "diff_hunk": "@@ -327,12 +327,16 @@ std::vector<std::string> serviceFlagsToStr(uint64_t flags);\n  * guaranteed to not change dependent on state - ie they are suitable for\n  * use when describing peers which we know to be desirable, but for which\n  * we do not have a confirmed set of service flags.\n- *\n- * If the NODE_NONE return value is changed, contrib/seeds/makeseeds.py",
      "path": "src/protocol.h",
      "position": 24,
      "original_position": 5,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "1dbc6cc6b177497c18664bcc08f4d55da21941a6",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Was it just outdated already? I'm confused by what NODE_NONE meant here before this change.",
      "created_at": "2023-08-17T11:57:16Z",
      "updated_at": "2023-08-17T11:57:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1297115636",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297115636"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 334,
      "original_line": 334,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297117898",
      "pull_request_review_id": 1582457092,
      "id": 1297117898,
      "node_id": "PRRC_kwDOABII585NUHLK",
      "diff_hunk": "@@ -90,6 +90,29 @@ class PeerManager : public CValidationInterface, public NetEventsInterface\n \n     /** This function is used for testing the stale tip eviction logic, see denialofservice_tests.cpp */\n     virtual void UpdateLastBlockAnnounceTime(NodeId node, int64_t time_in_seconds) = 0;\n+\n+    /**\n+     * Gets the set of service flags which are \"desirable\" for a given peer.\n+     *\n+     * These are the flags which are required for a peer to support for them\n+     * to be \"interesting\" to us, ie for us to wish to use one of our few\n+     * outbound connection slots for or for us to wish to prioritize keeping\n+     * their connection around.\n+     *\n+     * Relevant service flags may be peer- and state-specific in that the\n+     * version of the peer may determine which flags are required (eg in the\n+     * case of NODE_NETWORK_LIMITED where we seek out NODE_NETWORK peers\n+     * unless they set NODE_NETWORK_LIMITED and we are out of IBD, in which\n+     * case NODE_NETWORK_LIMITED suffices).\n+     *\n+     * Thus, generally, avoid calling with peerServices == NODE_NONE, unless",
      "path": "src/net_processing.h",
      "position": null,
      "original_position": 19,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "1428b7f4e8c648fdc68ba5744d640d120d5d78eb",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "does `peerServices` refer to the outdated code? Pehraps we should change it here?",
      "created_at": "2023-08-17T11:59:36Z",
      "updated_at": "2023-08-17T11:59:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1297117898",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297117898"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 108,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297132683",
      "pull_request_review_id": 1582480170,
      "id": 1297132683,
      "node_id": "PRRC_kwDOABII585NUKyL",
      "diff_hunk": "@@ -5235,6 +5244,11 @@ void PeerManagerImpl::CheckForStaleTipAndEvictPeers()\n     if (!m_initial_sync_finished && CanDirectFetch()) {\n         m_connman.StartExtraBlockRelayPeers();\n         m_initial_sync_finished = true;\n+    } else if (super_stale) {\n+        // Disable extra block relay peers and disallow connection to limited peers.\n+        // We need to find a full node that can help us recover.\n+        m_connman.StopExtraBlockRelayPeers();",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 63,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "2325ff03f42606793d3c8f2a97fc73015b9c48dd",
      "in_reply_to_id": 1296355296,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What do you think they would help with?",
      "created_at": "2023-08-17T12:13:37Z",
      "updated_at": "2023-08-17T12:13:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1297132683",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297132683"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5251,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297205559",
      "pull_request_review_id": 1582597289,
      "id": 1297205559,
      "node_id": "PRRC_kwDOABII585NUck3",
      "diff_hunk": "@@ -5235,6 +5244,11 @@ void PeerManagerImpl::CheckForStaleTipAndEvictPeers()\n     if (!m_initial_sync_finished && CanDirectFetch()) {\n         m_connman.StartExtraBlockRelayPeers();\n         m_initial_sync_finished = true;\n+    } else if (super_stale) {\n+        // Disable extra block relay peers and disallow connection to limited peers.\n+        // We need to find a full node that can help us recover.\n+        m_connman.StopExtraBlockRelayPeers();",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 63,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "2325ff03f42606793d3c8f2a97fc73015b9c48dd",
      "in_reply_to_id": 1296355296,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If for whatever reason our current peers aren't able to send us the blocks to get us out of this situation, maybe trying an additional one will.",
      "created_at": "2023-08-17T13:14:41Z",
      "updated_at": "2023-08-17T13:14:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1297205559",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297205559"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5251,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297413491",
      "pull_request_review_id": 1582929778,
      "id": 1297413491,
      "node_id": "PRRC_kwDOABII585NVPVz",
      "diff_hunk": "@@ -666,6 +666,12 @@ class NetEventsInterface\n     /** Handle removal of a peer (clear state) */\n     virtual void FinalizeNode(const CNode& node) = 0;\n \n+    /**\n+     * Callback to determine whether the given set of service flags are sufficient\n+     * for a peer to be \"relevant\".\n+     */\n+    virtual bool HasDesirableServiceFlags(ServiceFlags services) = 0;",
      "path": "src/net.h",
      "position": null,
      "original_position": 8,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "2325ff03f42606793d3c8f2a97fc73015b9c48dd",
      "in_reply_to_id": 1285990092,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> > Because, most of the time, the peer manager class will call to the CConMan setter and subsequently call the getter to utilize it.\r\n> \r\n> I wasn't saying to make connman the container for this data, I only meant to add a setter to inform connman of the things it needs to perform its job (making connections to desirable nodes). The main container for the flags would still be peerman.\r\n\r\nOk. What I dislike about that approach is that we lose a lot of flexibility.\r\n\r\nThe PeerManager should be able to decide granularly whether to connect to a specific address before ConnMann opens the connection and initiates handshaking etc.\r\nThe node's contextual information and logic required to take the decision of opening a socket to a particular address resides mostly in PeerManager (right now, we only have the stale chain condition, but there could be more). And, by adding another field inside ConnMan, we would be duplicating data (same `desirable_services` field inside PeerManager and ConnMan), which would need to be synchronized and could potentially lead to race conditions.\r\n\r\nI mean, this misalignment could result in ConnMan performing actions that are no longer in line with the latest PeerManager state. For instance, it might create connections to multiple peers with certain service flags, when PeerManager only intended to connect to one peer supporting such service flags. This situation would eventually lead to PeerManager closing the newly created connections when it sends the version message, as these connections are no longer desirable. Which is a waste of resources.\r\n\r\nThus why I think that the callback mechanism suits well here. So PeerManager is able to evaluate each connection request, and avoid executing the connection + handshake when we are going to disconnect the peer anyway.",
      "created_at": "2023-08-17T15:47:16Z",
      "updated_at": "2023-08-17T20:15:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1297413491",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297413491"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": 669,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1019,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297744944",
      "pull_request_review_id": 1583483576,
      "id": 1297744944,
      "node_id": "PRRC_kwDOABII585NWgQw",
      "diff_hunk": "@@ -5235,6 +5244,11 @@ void PeerManagerImpl::CheckForStaleTipAndEvictPeers()\n     if (!m_initial_sync_finished && CanDirectFetch()) {\n         m_connman.StartExtraBlockRelayPeers();\n         m_initial_sync_finished = true;\n+    } else if (super_stale) {\n+        // Disable extra block relay peers and disallow connection to limited peers.\n+        // We need to find a full node that can help us recover.\n+        m_connman.StopExtraBlockRelayPeers();",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 63,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "2325ff03f42606793d3c8f2a97fc73015b9c48dd",
      "in_reply_to_id": 1296355296,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Why stop doing extra block-relay peers in this situation?\r\n\r\nBecause, in the stalling scenario, we not only need to progress at the chain level, we might also need to receive new addresses from the network. And block-relay-only connections are limited in that sense. The node rejects addresses coming from them.\r\n\r\n> If for whatever reason our current peers aren't able to send us the blocks to get us out of this situation, maybe trying an additional one will.\r\n\r\nThats basically what we currently do. The stalling behavior triggers the \"try new outbound connection\" functionality. Which instructs ConnMan to create a new full relay connection even when the outbound slots are full.\r\n\r\n....\r\n\r\nWith this, I'm not disagreeing about keeping the extra-block-relay connections enabled. Just thought that they might not be as useful, given that we're already performing the same actions with the \"try new outbound connection\" functionality.",
      "created_at": "2023-08-17T20:57:31Z",
      "updated_at": "2023-08-17T21:03:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1297744944",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297744944"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5251,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297791137",
      "pull_request_review_id": 1583552709,
      "id": 1297791137,
      "node_id": "PRRC_kwDOABII585NWrih",
      "diff_hunk": "@@ -1265,14 +1266,21 @@ void PeerManagerImpl::MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid)\n     });\n }\n \n-bool PeerManagerImpl::TipMayBeStale()\n+bool PeerManagerImpl::TipMayBeStale(bool& super_stale)\n {\n     AssertLockHeld(cs_main);\n     const Consensus::Params& consensusParams = m_chainparams.GetConsensus();\n     if (m_last_tip_update.load() == 0s) {\n         m_last_tip_update = GetTime<std::chrono::seconds>();\n     }\n-    return m_last_tip_update.load() < GetTime<std::chrono::seconds>() - std::chrono::seconds{consensusParams.nPowTargetSpacing * 3} && mapBlocksInFlight.empty();\n+\n+    auto last_update_time = m_last_tip_update.load();\n+    if (last_update_time < GetTime<std::chrono::seconds>() - std::chrono::seconds{consensusParams.nPowTargetSpacing * 3} && mapBlocksInFlight.empty()) {\n+        // If tip is further than NODE_NETWORK_LIMITED_MIN_BLOCKS, we are really behind and shouldn't connect to limited peers anymore.\n+        super_stale = last_update_time < GetTime<std::chrono::seconds>() - std::chrono::seconds{consensusParams.nPowTargetSpacing * 290};",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 36,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "2325ff03f42606793d3c8f2a97fc73015b9c48dd",
      "in_reply_to_id": 1296375222,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah. Sure for both.\r\nNot sure why I hardcoded the number..",
      "created_at": "2023-08-17T21:59:04Z",
      "updated_at": "2023-08-17T21:59:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1297791137",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297791137"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1280,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297796093",
      "pull_request_review_id": 1583559886,
      "id": 1297796093,
      "node_id": "PRRC_kwDOABII585NWsv9",
      "diff_hunk": "@@ -327,12 +327,16 @@ std::vector<std::string> serviceFlagsToStr(uint64_t flags);\n  * guaranteed to not change dependent on state - ie they are suitable for\n  * use when describing peers which we know to be desirable, but for which\n  * we do not have a confirmed set of service flags.\n- *\n- * If the NODE_NONE return value is changed, contrib/seeds/makeseeds.py",
      "path": "src/protocol.h",
      "position": 24,
      "original_position": 5,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "1dbc6cc6b177497c18664bcc08f4d55da21941a6",
      "in_reply_to_id": 1297115636,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Was it just outdated already? I'm confused by what NODE_NONE meant here before this change.\r\n\r\nIt was talking about the input `ServiceFlags`. Not the `GetDesirableServiceFlags()` output.\r\n\r\nBasically, we expect to have all the hardcoded seeds supporting `NODE_NETWORK` and `NODE_WITNESS`.\r\n",
      "created_at": "2023-08-17T22:07:25Z",
      "updated_at": "2023-08-17T22:07:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1297796093",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297796093"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 334,
      "original_line": 334,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297797152",
      "pull_request_review_id": 1583561365,
      "id": 1297797152,
      "node_id": "PRRC_kwDOABII585NWtAg",
      "diff_hunk": "@@ -90,6 +90,29 @@ class PeerManager : public CValidationInterface, public NetEventsInterface\n \n     /** This function is used for testing the stale tip eviction logic, see denialofservice_tests.cpp */\n     virtual void UpdateLastBlockAnnounceTime(NodeId node, int64_t time_in_seconds) = 0;\n+\n+    /**\n+     * Gets the set of service flags which are \"desirable\" for a given peer.\n+     *\n+     * These are the flags which are required for a peer to support for them\n+     * to be \"interesting\" to us, ie for us to wish to use one of our few\n+     * outbound connection slots for or for us to wish to prioritize keeping\n+     * their connection around.\n+     *\n+     * Relevant service flags may be peer- and state-specific in that the\n+     * version of the peer may determine which flags are required (eg in the\n+     * case of NODE_NETWORK_LIMITED where we seek out NODE_NETWORK peers\n+     * unless they set NODE_NETWORK_LIMITED and we are out of IBD, in which\n+     * case NODE_NETWORK_LIMITED suffices).\n+     *\n+     * Thus, generally, avoid calling with peerServices == NODE_NONE, unless",
      "path": "src/net_processing.h",
      "position": null,
      "original_position": 19,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "1428b7f4e8c648fdc68ba5744d640d120d5d78eb",
      "in_reply_to_id": 1297117898,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "yeah sure.",
      "created_at": "2023-08-17T22:09:08Z",
      "updated_at": "2023-08-17T22:09:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1297797152",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297797152"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 108,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297802187",
      "pull_request_review_id": 1583568676,
      "id": 1297802187,
      "node_id": "PRRC_kwDOABII585NWuPL",
      "diff_hunk": "@@ -1577,6 +1579,20 @@ void PeerManagerImpl::FinalizeNode(const CNode& node)\n     LogPrint(BCLog::NET, \"Cleared nodestate for peer=%d\\n\", nodeid);\n }\n \n+bool PeerManagerImpl::HasDesirableServiceFlags(ServiceFlags services)",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "1428b7f4e8c648fdc68ba5744d640d120d5d78eb",
      "in_reply_to_id": 1296335745,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> The comment (\"shortcut for...\") was helpful for me, any reason to drop it?\r\n\r\nThat was because the method was moved to the net interface ([see](https://github.com/bitcoin/bitcoin/blob/1428b7f4e8c648fdc68ba5744d640d120d5d78eb/src/net.h#L673)). And there, this is no longer a shortcut. It is the only available method. ",
      "created_at": "2023-08-17T22:17:19Z",
      "updated_at": "2023-08-17T22:17:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1297802187",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297802187"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1655,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1298341327",
      "pull_request_review_id": 1584395102,
      "id": 1298341327,
      "node_id": "PRRC_kwDOABII585NYx3P",
      "diff_hunk": "@@ -5235,6 +5244,11 @@ void PeerManagerImpl::CheckForStaleTipAndEvictPeers()\n     if (!m_initial_sync_finished && CanDirectFetch()) {\n         m_connman.StartExtraBlockRelayPeers();\n         m_initial_sync_finished = true;\n+    } else if (super_stale) {\n+        // Disable extra block relay peers and disallow connection to limited peers.\n+        // We need to find a full node that can help us recover.\n+        m_connman.StopExtraBlockRelayPeers();",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 63,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "2325ff03f42606793d3c8f2a97fc73015b9c48dd",
      "in_reply_to_id": 1296355296,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In that case i'd rather not `StopExtraBlockRelayPeers`. Instead we can leave a comment regarding the \"same actions\", although I'm not sure what's the appropriate place for it.",
      "created_at": "2023-08-18T11:25:31Z",
      "updated_at": "2023-08-18T11:25:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1298341327",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1298341327"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5251,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1298677448",
      "pull_request_review_id": 1584926434,
      "id": 1298677448,
      "node_id": "PRRC_kwDOABII585NaD7I",
      "diff_hunk": "@@ -1577,6 +1579,20 @@ void PeerManagerImpl::FinalizeNode(const CNode& node)\n     LogPrint(BCLog::NET, \"Cleared nodestate for peer=%d\\n\", nodeid);\n }\n \n+bool PeerManagerImpl::HasDesirableServiceFlags(ServiceFlags services)",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "1428b7f4e8c648fdc68ba5744d640d120d5d78eb",
      "in_reply_to_id": 1296335745,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I interpreted the comment as explaining the not-so-trivial bit-operator logic:\r\n`!(GetDesirableServiceFlags(services) & (~services));` \r\nis still a shortcut for the longer, but more understandable alternative\r\n`services & GetDesirableServiceFlags(services)) == GetDesirableServiceFlags(services)`\r\nno matter where the function is situated.",
      "created_at": "2023-08-18T17:09:23Z",
      "updated_at": "2023-08-18T17:09:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1298677448",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1298677448"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1655,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1298685145",
      "pull_request_review_id": 1584938489,
      "id": 1298685145,
      "node_id": "PRRC_kwDOABII585NaFzZ",
      "diff_hunk": "@@ -1577,6 +1579,20 @@ void PeerManagerImpl::FinalizeNode(const CNode& node)\n     LogPrint(BCLog::NET, \"Cleared nodestate for peer=%d\\n\", nodeid);\n }\n \n+bool PeerManagerImpl::HasDesirableServiceFlags(ServiceFlags services)",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "1428b7f4e8c648fdc68ba5744d640d120d5d78eb",
      "in_reply_to_id": 1296335745,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ok. For that, we can locate the comment in the implementation (above the no-so-trivial logic). So it's clear what that single line does. I just don't think that is good to place it at the API level. Where `GetDesirableServiceFlags` doesn't exist and `HasDesirableServiceFlags()` could be implemented in different manners.\r\n\r\nSide note:\r\nIf the line is confusing, instead of adding the comment, we could just replace it by the more understandable one. Isn't something that will really affect anything.",
      "created_at": "2023-08-18T17:19:07Z",
      "updated_at": "2023-08-18T17:27:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1298685145",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1298685145"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1655,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1298718974",
      "pull_request_review_id": 1584993083,
      "id": 1298718974,
      "node_id": "PRRC_kwDOABII585NaOD-",
      "diff_hunk": "@@ -1577,6 +1579,20 @@ void PeerManagerImpl::FinalizeNode(const CNode& node)\n     LogPrint(BCLog::NET, \"Cleared nodestate for peer=%d\\n\", nodeid);\n }\n \n+bool PeerManagerImpl::HasDesirableServiceFlags(ServiceFlags services)",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "1428b7f4e8c648fdc68ba5744d640d120d5d78eb",
      "in_reply_to_id": 1296335745,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Both options are fine with me. I will admit that I'm not as fluent/quick reading code with bitwise operators as I should be, but then again if even the original author of this code got it wrong at first (https://github.com/bitcoin/bitcoin/pull/11456#discussion_r144391264) it's probably not just me.",
      "created_at": "2023-08-18T18:01:24Z",
      "updated_at": "2023-08-18T18:01:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1298718974",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1298718974"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1655,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1298723753",
      "pull_request_review_id": 1585002068,
      "id": 1298723753,
      "node_id": "PRRC_kwDOABII585NaPOp",
      "diff_hunk": "@@ -5235,6 +5244,11 @@ void PeerManagerImpl::CheckForStaleTipAndEvictPeers()\n     if (!m_initial_sync_finished && CanDirectFetch()) {\n         m_connman.StartExtraBlockRelayPeers();\n         m_initial_sync_finished = true;\n+    } else if (super_stale) {\n+        // Disable extra block relay peers and disallow connection to limited peers.\n+        // We need to find a full node that can help us recover.\n+        m_connman.StopExtraBlockRelayPeers();",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 63,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "2325ff03f42606793d3c8f2a97fc73015b9c48dd",
      "in_reply_to_id": 1296355296,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think there's no harm in keeping the `ExtraBlockRelayPeers` logic:\r\nWhile it's true that we would also do extra full outbound connections in this case, those have priority in `ThreadOpenConnections` over the block-relay-only ones, so trying another block-relay only might not have a super high chance of helping, but it still is another try and if there is no downside to it (I can't see any), I don't see why we should actively add logic to stop these.",
      "created_at": "2023-08-18T18:07:28Z",
      "updated_at": "2023-08-18T18:07:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1298723753",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1298723753"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5251,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1298732036",
      "pull_request_review_id": 1585012519,
      "id": 1298732036,
      "node_id": "PRRC_kwDOABII585NaRQE",
      "diff_hunk": "@@ -5235,6 +5244,11 @@ void PeerManagerImpl::CheckForStaleTipAndEvictPeers()\n     if (!m_initial_sync_finished && CanDirectFetch()) {\n         m_connman.StartExtraBlockRelayPeers();\n         m_initial_sync_finished = true;\n+    } else if (super_stale) {\n+        // Disable extra block relay peers and disallow connection to limited peers.\n+        // We need to find a full node that can help us recover.\n+        m_connman.StopExtraBlockRelayPeers();",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 63,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "2325ff03f42606793d3c8f2a97fc73015b9c48dd",
      "in_reply_to_id": 1296355296,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "yeah, agree",
      "created_at": "2023-08-18T18:17:29Z",
      "updated_at": "2023-08-18T18:17:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1298732036",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1298732036"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5251,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1374426573",
      "pull_request_review_id": 1701549241,
      "id": 1374426573,
      "node_id": "PRRC_kwDOABII585R7BXN",
      "diff_hunk": "@@ -330,12 +330,16 @@ std::vector<std::string> serviceFlagsToStr(uint64_t flags);\n  * guaranteed to not change dependent on state - ie they are suitable for\n  * use when describing peers which we know to be desirable, but for which\n  * we do not have a confirmed set of service flags.\n- *\n- * If the NODE_NONE return value is changed, contrib/seeds/makeseeds.py\n- * should be updated appropriately to filter for the same nodes.\n  */\n ServiceFlags GetDesirableServiceFlags(ServiceFlags services);\n \n+/**\n+ * State independent service flags.\n+ * If the return value is changed, contrib/seeds/makeseeds.py\n+ * should be updated appropriately to filter for the same nodes.",
      "path": "src/protocol.h",
      "position": null,
      "original_position": 13,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "7c20e65b2880a23d753b3f05fd28994353b3049d",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "7c20e65b2880a23d753b3f05fd28994353b3049d\r\n\r\n`the same nodes` always takes non-negligible time for me to understand... I would suggest making it less ambiguous, e.g. \"nodes with desired service flags (compatible with our new flags)\"",
      "created_at": "2023-10-27T11:18:46Z",
      "updated_at": "2023-10-30T12:53:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1374426573",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1374426573"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 339,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1375473315",
      "pull_request_review_id": 1702994944,
      "id": 1375473315,
      "node_id": "PRRC_kwDOABII585R_A6j",
      "diff_hunk": "@@ -311,43 +311,11 @@ enum ServiceFlags : uint64_t {\n std::vector<std::string> serviceFlagsToStr(uint64_t flags);\n \n /**\n- * Gets the set of service flags which are \"desirable\" for a given peer.\n- *\n- * These are the flags which are required for a peer to support for them\n- * to be \"interesting\" to us, ie for us to wish to use one of our few\n- * outbound connection slots for or for us to wish to prioritize keeping\n- * their connection around.\n- *\n- * Relevant service flags may be peer- and state-specific in that the\n- * version of the peer may determine which flags are required (eg in the\n- * case of NODE_NETWORK_LIMITED where we seek out NODE_NETWORK peers\n- * unless they set NODE_NETWORK_LIMITED and we are out of IBD, in which\n- * case NODE_NETWORK_LIMITED suffices).\n- *\n- * Thus, generally, avoid calling with peerServices == NODE_NONE, unless\n- * state-specific flags must absolutely be avoided. When called with\n- * peerServices == NODE_NONE, the returned desirable service flags are\n- * guaranteed to not change dependent on state - ie they are suitable for\n- * use when describing peers which we know to be desirable, but for which\n- * we do not have a confirmed set of service flags.\n- *\n- * If the NODE_NONE return value is changed, contrib/seeds/makeseeds.py\n+ * State independent service flags.\n+ * If the return value is changed, contrib/seeds/makeseeds.py\n  * should be updated appropriately to filter for the same nodes.\n  */\n-ServiceFlags GetDesirableServiceFlags(ServiceFlags services);\n-\n-/** Set the current IBD status in order to figure out the desirable service flags */\n-void SetServiceFlagsIBDCache(bool status);\n-\n-/**\n- * A shortcut for (services & GetDesirableServiceFlags(services))\n- * == GetDesirableServiceFlags(services), ie determines whether the given\n- * set of service flags are sufficient for a peer to be \"relevant\".\n- */\n-static inline bool HasAllDesirableServiceFlags(ServiceFlags services)\n-{\n-    return !(GetDesirableServiceFlags(services) & (~services));\n-}\n+ServiceFlags StatelessServicesFlags();",
      "path": "src/protocol.h",
      "position": null,
      "original_position": 43,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "893c541dce938aaa210785df53a5841c5e90d924",
      "in_reply_to_id": null,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The implementation could be moved here and this made `constexpr`?\r\n```suggestion\r\nServiceFlags StatelessServiceFlags();\r\n```",
      "created_at": "2023-10-29T16:57:22Z",
      "updated_at": "2023-10-29T17:54:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1375473315",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1375473315"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 318,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1375475833",
      "pull_request_review_id": 1702994944,
      "id": 1375475833,
      "node_id": "PRRC_kwDOABII585R_Bh5",
      "diff_hunk": "@@ -1642,6 +1644,21 @@ void PeerManagerImpl::FinalizeNode(const CNode& node)\n     LogPrint(BCLog::NET, \"Cleared nodestate for peer=%d\\n\", nodeid);\n }\n \n+bool PeerManagerImpl::HasDesirableServiceFlags(ServiceFlags services)",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "3c895206cbff7a45d467878caa19aef8bd3aef4e",
      "in_reply_to_id": null,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why rename from `HasAllDesirableServiceFlags`? The `HasAll` is more descriptive. It is now ambiguous whether this returns `true` if the `ServiceFlags` has some number of desirable service flags or strictly all of them.",
      "created_at": "2023-10-29T17:12:38Z",
      "updated_at": "2023-10-29T17:54:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1375475833",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1375475833"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1647,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1375477984",
      "pull_request_review_id": 1702994944,
      "id": 1375477984,
      "node_id": "PRRC_kwDOABII585R_CDg",
      "diff_hunk": "@@ -110,6 +110,29 @@ class PeerManager : public CValidationInterface, public NetEventsInterface\n \n     /** This function is used for testing the stale tip eviction logic, see denialofservice_tests.cpp */\n     virtual void UpdateLastBlockAnnounceTime(NodeId node, int64_t time_in_seconds) = 0;\n+\n+    /**\n+     * Gets the set of service flags which are \"desirable\" for a given peer.\n+     *\n+     * These are the flags which are required for a peer to support for them\n+     * to be \"interesting\" to us, ie for us to wish to use one of our few\n+     * outbound connection slots for or for us to wish to prioritize keeping\n+     * their connection around.\n+     *\n+     * Relevant service flags may be peer- and state-specific in that the\n+     * version of the peer may determine which flags are required (eg in the\n+     * case of NODE_NETWORK_LIMITED where we seek out NODE_NETWORK peers\n+     * unless they set NODE_NETWORK_LIMITED and we are out of IBD, in which\n+     * case NODE_NETWORK_LIMITED suffices).\n+     *\n+     * Thus, generally, avoid calling with 'services' == NODE_NONE, unless\n+     * state-specific flags must absolutely be avoided. When called with\n+     * 'services' == NODE_NONE, the returned desirable service flags are\n+     * guaranteed to not change dependent on state - ie they are suitable for\n+     * use when describing peers which we know to be desirable, but for which\n+     * we do not have a confirmed set of service flags.\n+    */\n+    virtual ServiceFlags GetDesirableServiceFlags(ServiceFlags services) = 0;",
      "path": "src/net_processing.h",
      "position": null,
      "original_position": 26,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "3c895206cbff7a45d467878caa19aef8bd3aef4e",
      "in_reply_to_id": null,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Could be a `const` function?",
      "created_at": "2023-10-29T17:23:53Z",
      "updated_at": "2023-10-29T17:54:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1375477984",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1375477984"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 135,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1375478210",
      "pull_request_review_id": 1702994944,
      "id": 1375478210,
      "node_id": "PRRC_kwDOABII585R_CHC",
      "diff_hunk": "@@ -1012,6 +1012,12 @@ class NetEventsInterface\n     /** Handle removal of a peer (clear state) */\n     virtual void FinalizeNode(const CNode& node) = 0;\n \n+    /**\n+     * Callback to determine whether the given set of service flags are sufficient\n+     * for a peer to be \"relevant\".\n+     */\n+    virtual bool HasDesirableServiceFlags(ServiceFlags services) = 0;",
      "path": "src/net.h",
      "position": null,
      "original_position": 8,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "3c895206cbff7a45d467878caa19aef8bd3aef4e",
      "in_reply_to_id": null,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Could be a `const` function?",
      "created_at": "2023-10-29T17:25:15Z",
      "updated_at": "2023-10-29T17:54:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1375478210",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1375478210"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1019,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1375481949",
      "pull_request_review_id": 1702994944,
      "id": 1375481949,
      "node_id": "PRRC_kwDOABII585R_DBd",
      "diff_hunk": "@@ -892,7 +893,7 @@ class PeerManagerImpl final : public PeerManager\n      */\n     bool BlockRequested(NodeId nodeid, const CBlockIndex& block, std::list<QueuedBlock>::iterator** pit = nullptr) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n-    bool TipMayBeStale() EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+    bool TipMayBeStale(bool& super_stale) EXCLUSIVE_LOCKS_REQUIRED(cs_main);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "cc5f276fa2acbd13d044fbf5e7dfff46d296b898",
      "in_reply_to_id": null,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think `super_stale` is not very descriptive. I also think this pattern of returning extra data from this function in this way is a little confusing. This could be made more descriptive by declaring a new enum and using it as the return value. eg\r\n```\r\nenum Staleness {\r\n    NotStale,\r\n    Stale,\r\n    StalePastNetworkLimited,\r\n};\r\n```",
      "created_at": "2023-10-29T17:51:19Z",
      "updated_at": "2023-10-29T17:54:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1375481949",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1375481949"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 896,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1375482009",
      "pull_request_review_id": 1702994944,
      "id": 1375482009,
      "node_id": "PRRC_kwDOABII585R_DCZ",
      "diff_hunk": "@@ -1661,7 +1661,6 @@ bool PeerManagerImpl::HasDesirableServiceFlags(ServiceFlags services)\n ServiceFlags PeerManagerImpl::GetDesirableServiceFlags(ServiceFlags services)\n {\n     if (services & NODE_NETWORK_LIMITED) {\n-        LOCK(::cs_main);\n         if (m_initial_sync_finished) return ServiceFlags(NODE_NETWORK_LIMITED | NODE_WITNESS);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "893c541dce938aaa210785df53a5841c5e90d924",
      "in_reply_to_id": null,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is relaxed ordering ok for this? We don't need to call `m_initial_sync_finished.load()`?",
      "created_at": "2023-10-29T17:51:50Z",
      "updated_at": "2023-10-29T17:54:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1375482009",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1375482009"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1677,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1375843721",
      "pull_request_review_id": 1701549241,
      "id": 1375843721,
      "node_id": "PRRC_kwDOABII585SAbWJ",
      "diff_hunk": "@@ -1294,14 +1295,21 @@ void PeerManagerImpl::MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid)\n     });\n }\n \n-bool PeerManagerImpl::TipMayBeStale()\n+bool PeerManagerImpl::TipMayBeStale(bool& super_stale)\n {\n     AssertLockHeld(cs_main);\n     const Consensus::Params& consensusParams = m_chainparams.GetConsensus();\n     if (m_last_tip_update.load() == 0s) {\n         m_last_tip_update = GetTime<std::chrono::seconds>();\n     }\n-    return m_last_tip_update.load() < GetTime<std::chrono::seconds>() - std::chrono::seconds{consensusParams.nPowTargetSpacing * 3} && mapBlocksInFlight.empty();\n+\n+    auto last_update_time = m_last_tip_update.load();\n+    if (last_update_time < GetTime<std::chrono::seconds>() - std::chrono::seconds{consensusParams.nPowTargetSpacing * 3} && mapBlocksInFlight.empty()) {\n+        // If tip is further than NODE_NETWORK_LIMITED_MIN_BLOCKS, we are really behind and shouldn't connect to limited peers anymore.\n+        super_stale = NodeSeconds{last_update_time} < GetAdjustedTime() - std::chrono::seconds{consensusParams.nPowTargetSpacing * NODE_NETWORK_LIMITED_MIN_BLOCKS};",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 36,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "cc5f276fa2acbd13d044fbf5e7dfff46d296b898",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: add `Assume(NODE_NETWORK_LIMITED_MIN_BLOCKS > 3)` so that stale/super-stale makes sense here.",
      "created_at": "2023-10-30T08:31:39Z",
      "updated_at": "2023-10-30T12:53:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1375843721",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1375843721"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1309,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376165998",
      "pull_request_review_id": 1701549241,
      "id": 1376165998,
      "node_id": "PRRC_kwDOABII585SBqBu",
      "diff_hunk": "@@ -134,6 +134,11 @@ ServiceFlags GetDesirableServiceFlags(ServiceFlags services) {\n     return ServiceFlags(NODE_NETWORK | NODE_WITNESS);\n }\n \n+ServiceFlags StatelessServicesFlags()\n+{\n+    return ServiceFlags(NODE_NETWORK | NODE_WITNESS);",
      "path": "src/protocol.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "7c20e65b2880a23d753b3f05fd28994353b3049d",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "7c20e65b2880a23d753b3f05fd28994353b3049d\r\n\r\nWhile you decouple the two, do you mean to make them independent from each other? It seems to me they will always be roughly the same. I agree with the goal of the PR, just not sure about this approach.",
      "created_at": "2023-10-30T12:53:01Z",
      "updated_at": "2023-10-30T12:53:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1376165998",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376165998"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 139,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376733399",
      "pull_request_review_id": 1704958214,
      "id": 1376733399,
      "node_id": "PRRC_kwDOABII585SD0jX",
      "diff_hunk": "@@ -1642,6 +1644,21 @@ void PeerManagerImpl::FinalizeNode(const CNode& node)\n     LogPrint(BCLog::NET, \"Cleared nodestate for peer=%d\\n\", nodeid);\n }\n \n+bool PeerManagerImpl::HasDesirableServiceFlags(ServiceFlags services)",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "3c895206cbff7a45d467878caa19aef8bd3aef4e",
      "in_reply_to_id": 1375475833,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Why rename from `HasAllDesirableServiceFlags`? The `HasAll` is more descriptive. It is now ambiguous whether this returns `true` if the `ServiceFlags` has some number of desirable service flags or strictly all of them.\r\n\r\nI don't think the name is good for the PeerManager-Connman interface. What \"HasAll\" means for `NetEventsInterface`? There, it should be something like `bool CanConnectTo(services)` or something similar.\r\n\r\nStill, I'm not really happy with the interface at this point. No problem on renaming it back.",
      "created_at": "2023-10-30T19:52:26Z",
      "updated_at": "2023-10-30T19:52:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1376733399",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376733399"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1647,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376794129",
      "pull_request_review_id": 1705055908,
      "id": 1376794129,
      "node_id": "PRRC_kwDOABII585SEDYR",
      "diff_hunk": "@@ -1661,7 +1661,6 @@ bool PeerManagerImpl::HasDesirableServiceFlags(ServiceFlags services)\n ServiceFlags PeerManagerImpl::GetDesirableServiceFlags(ServiceFlags services)\n {\n     if (services & NODE_NETWORK_LIMITED) {\n-        LOCK(::cs_main);\n         if (m_initial_sync_finished) return ServiceFlags(NODE_NETWORK_LIMITED | NODE_WITNESS);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "893c541dce938aaa210785df53a5841c5e90d924",
      "in_reply_to_id": 1375482009,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why relaxed? look at the [operator](https://en.cppreference.com/w/cpp/atomic/atomic/operator_T). Is equivalent to `load`, which uses [std::memory_order_seq_cst](http://en.cppreference.com/w/cpp/atomic/memory_order).",
      "created_at": "2023-10-30T20:59:16Z",
      "updated_at": "2023-10-30T20:59:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1376794129",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376794129"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1677,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376837397",
      "pull_request_review_id": 1705128417,
      "id": 1376837397,
      "node_id": "PRRC_kwDOABII585SEN8V",
      "diff_hunk": "@@ -134,6 +134,11 @@ ServiceFlags GetDesirableServiceFlags(ServiceFlags services) {\n     return ServiceFlags(NODE_NETWORK | NODE_WITNESS);\n }\n \n+ServiceFlags StatelessServicesFlags()\n+{\n+    return ServiceFlags(NODE_NETWORK | NODE_WITNESS);",
      "path": "src/protocol.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "7c20e65b2880a23d753b3f05fd28994353b3049d",
      "in_reply_to_id": 1376165998,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> While you decouple the two, do you mean to make them independent from each other? It seems to me they will always be roughly the same. I agree with the goal of the PR, just not sure about this approach.\r\n\r\nYeah. The goal is to make them independent from each other so the peer manager runtime logic doesn't affect the hardcoded seeds. They are built from another source and depend on the way we externally collect them. These peers are stored in db with the stateless service flags, and would be an error to store them with a different one (they might not support the service).",
      "created_at": "2023-10-30T21:48:42Z",
      "updated_at": "2023-10-30T21:48:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1376837397",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376837397"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 139,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376845662",
      "pull_request_review_id": 1705142132,
      "id": 1376845662,
      "node_id": "PRRC_kwDOABII585SEP9e",
      "diff_hunk": "@@ -311,43 +311,11 @@ enum ServiceFlags : uint64_t {\n std::vector<std::string> serviceFlagsToStr(uint64_t flags);\n \n /**\n- * Gets the set of service flags which are \"desirable\" for a given peer.\n- *\n- * These are the flags which are required for a peer to support for them\n- * to be \"interesting\" to us, ie for us to wish to use one of our few\n- * outbound connection slots for or for us to wish to prioritize keeping\n- * their connection around.\n- *\n- * Relevant service flags may be peer- and state-specific in that the\n- * version of the peer may determine which flags are required (eg in the\n- * case of NODE_NETWORK_LIMITED where we seek out NODE_NETWORK peers\n- * unless they set NODE_NETWORK_LIMITED and we are out of IBD, in which\n- * case NODE_NETWORK_LIMITED suffices).\n- *\n- * Thus, generally, avoid calling with peerServices == NODE_NONE, unless\n- * state-specific flags must absolutely be avoided. When called with\n- * peerServices == NODE_NONE, the returned desirable service flags are\n- * guaranteed to not change dependent on state - ie they are suitable for\n- * use when describing peers which we know to be desirable, but for which\n- * we do not have a confirmed set of service flags.\n- *\n- * If the NODE_NONE return value is changed, contrib/seeds/makeseeds.py\n+ * State independent service flags.\n+ * If the return value is changed, contrib/seeds/makeseeds.py\n  * should be updated appropriately to filter for the same nodes.\n  */\n-ServiceFlags GetDesirableServiceFlags(ServiceFlags services);\n-\n-/** Set the current IBD status in order to figure out the desirable service flags */\n-void SetServiceFlagsIBDCache(bool status);\n-\n-/**\n- * A shortcut for (services & GetDesirableServiceFlags(services))\n- * == GetDesirableServiceFlags(services), ie determines whether the given\n- * set of service flags are sufficient for a peer to be \"relevant\".\n- */\n-static inline bool HasAllDesirableServiceFlags(ServiceFlags services)\n-{\n-    return !(GetDesirableServiceFlags(services) & (~services));\n-}\n+ServiceFlags StatelessServicesFlags();",
      "path": "src/protocol.h",
      "position": null,
      "original_position": 43,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "893c541dce938aaa210785df53a5841c5e90d924",
      "in_reply_to_id": 1375473315,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done as suggested",
      "created_at": "2023-10-30T22:00:10Z",
      "updated_at": "2023-10-30T22:00:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1376845662",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376845662"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 318,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376845719",
      "pull_request_review_id": 1705142221,
      "id": 1376845719,
      "node_id": "PRRC_kwDOABII585SEP-X",
      "diff_hunk": "@@ -110,6 +110,29 @@ class PeerManager : public CValidationInterface, public NetEventsInterface\n \n     /** This function is used for testing the stale tip eviction logic, see denialofservice_tests.cpp */\n     virtual void UpdateLastBlockAnnounceTime(NodeId node, int64_t time_in_seconds) = 0;\n+\n+    /**\n+     * Gets the set of service flags which are \"desirable\" for a given peer.\n+     *\n+     * These are the flags which are required for a peer to support for them\n+     * to be \"interesting\" to us, ie for us to wish to use one of our few\n+     * outbound connection slots for or for us to wish to prioritize keeping\n+     * their connection around.\n+     *\n+     * Relevant service flags may be peer- and state-specific in that the\n+     * version of the peer may determine which flags are required (eg in the\n+     * case of NODE_NETWORK_LIMITED where we seek out NODE_NETWORK peers\n+     * unless they set NODE_NETWORK_LIMITED and we are out of IBD, in which\n+     * case NODE_NETWORK_LIMITED suffices).\n+     *\n+     * Thus, generally, avoid calling with 'services' == NODE_NONE, unless\n+     * state-specific flags must absolutely be avoided. When called with\n+     * 'services' == NODE_NONE, the returned desirable service flags are\n+     * guaranteed to not change dependent on state - ie they are suitable for\n+     * use when describing peers which we know to be desirable, but for which\n+     * we do not have a confirmed set of service flags.\n+    */\n+    virtual ServiceFlags GetDesirableServiceFlags(ServiceFlags services) = 0;",
      "path": "src/net_processing.h",
      "position": null,
      "original_position": 26,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "3c895206cbff7a45d467878caa19aef8bd3aef4e",
      "in_reply_to_id": 1375477984,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done as suggested",
      "created_at": "2023-10-30T22:00:15Z",
      "updated_at": "2023-10-30T22:00:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1376845719",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376845719"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 135,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376845755",
      "pull_request_review_id": 1705142273,
      "id": 1376845755,
      "node_id": "PRRC_kwDOABII585SEP-7",
      "diff_hunk": "@@ -1012,6 +1012,12 @@ class NetEventsInterface\n     /** Handle removal of a peer (clear state) */\n     virtual void FinalizeNode(const CNode& node) = 0;\n \n+    /**\n+     * Callback to determine whether the given set of service flags are sufficient\n+     * for a peer to be \"relevant\".\n+     */\n+    virtual bool HasDesirableServiceFlags(ServiceFlags services) = 0;",
      "path": "src/net.h",
      "position": null,
      "original_position": 8,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "3c895206cbff7a45d467878caa19aef8bd3aef4e",
      "in_reply_to_id": 1375478210,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done as suggested",
      "created_at": "2023-10-30T22:00:18Z",
      "updated_at": "2023-10-30T22:00:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1376845755",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376845755"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1019,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376845963",
      "pull_request_review_id": 1705142584,
      "id": 1376845963,
      "node_id": "PRRC_kwDOABII585SEQCL",
      "diff_hunk": "@@ -892,7 +893,7 @@ class PeerManagerImpl final : public PeerManager\n      */\n     bool BlockRequested(NodeId nodeid, const CBlockIndex& block, std::list<QueuedBlock>::iterator** pit = nullptr) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n-    bool TipMayBeStale() EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+    bool TipMayBeStale(bool& super_stale) EXCLUSIVE_LOCKS_REQUIRED(cs_main);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "cc5f276fa2acbd13d044fbf5e7dfff46d296b898",
      "in_reply_to_id": 1375481949,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "yeah, better. Done as suggested",
      "created_at": "2023-10-30T22:00:37Z",
      "updated_at": "2023-10-30T22:00:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1376845963",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376845963"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 896,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376846014",
      "pull_request_review_id": 1705142677,
      "id": 1376846014,
      "node_id": "PRRC_kwDOABII585SEQC-",
      "diff_hunk": "@@ -330,12 +330,16 @@ std::vector<std::string> serviceFlagsToStr(uint64_t flags);\n  * guaranteed to not change dependent on state - ie they are suitable for\n  * use when describing peers which we know to be desirable, but for which\n  * we do not have a confirmed set of service flags.\n- *\n- * If the NODE_NONE return value is changed, contrib/seeds/makeseeds.py\n- * should be updated appropriately to filter for the same nodes.\n  */\n ServiceFlags GetDesirableServiceFlags(ServiceFlags services);\n \n+/**\n+ * State independent service flags.\n+ * If the return value is changed, contrib/seeds/makeseeds.py\n+ * should be updated appropriately to filter for the same nodes.",
      "path": "src/protocol.h",
      "position": null,
      "original_position": 13,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "7c20e65b2880a23d753b3f05fd28994353b3049d",
      "in_reply_to_id": 1374426573,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done as suggested",
      "created_at": "2023-10-30T22:00:42Z",
      "updated_at": "2023-10-30T22:00:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1376846014",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376846014"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 339,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376846059",
      "pull_request_review_id": 1705142752,
      "id": 1376846059,
      "node_id": "PRRC_kwDOABII585SEQDr",
      "diff_hunk": "@@ -1294,14 +1295,21 @@ void PeerManagerImpl::MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid)\n     });\n }\n \n-bool PeerManagerImpl::TipMayBeStale()\n+bool PeerManagerImpl::TipMayBeStale(bool& super_stale)\n {\n     AssertLockHeld(cs_main);\n     const Consensus::Params& consensusParams = m_chainparams.GetConsensus();\n     if (m_last_tip_update.load() == 0s) {\n         m_last_tip_update = GetTime<std::chrono::seconds>();\n     }\n-    return m_last_tip_update.load() < GetTime<std::chrono::seconds>() - std::chrono::seconds{consensusParams.nPowTargetSpacing * 3} && mapBlocksInFlight.empty();\n+\n+    auto last_update_time = m_last_tip_update.load();\n+    if (last_update_time < GetTime<std::chrono::seconds>() - std::chrono::seconds{consensusParams.nPowTargetSpacing * 3} && mapBlocksInFlight.empty()) {\n+        // If tip is further than NODE_NETWORK_LIMITED_MIN_BLOCKS, we are really behind and shouldn't connect to limited peers anymore.\n+        super_stale = NodeSeconds{last_update_time} < GetAdjustedTime() - std::chrono::seconds{consensusParams.nPowTargetSpacing * NODE_NETWORK_LIMITED_MIN_BLOCKS};",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 36,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "cc5f276fa2acbd13d044fbf5e7dfff46d296b898",
      "in_reply_to_id": 1375843721,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done as suggested",
      "created_at": "2023-10-30T22:00:47Z",
      "updated_at": "2023-10-30T22:00:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1376846059",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376846059"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1309,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376889771",
      "pull_request_review_id": 1705210202,
      "id": 1376889771,
      "node_id": "PRRC_kwDOABII585SEaur",
      "diff_hunk": "@@ -1642,6 +1659,20 @@ void PeerManagerImpl::FinalizeNode(const CNode& node)\n     LogPrint(BCLog::NET, \"Cleared nodestate for peer=%d\\n\", nodeid);\n }\n \n+bool PeerManagerImpl::HasAllDesirableServiceFlags(ServiceFlags services) const\n+{\n+    // Shortcut for (services & GetDesirableServiceFlags(services)) == GetDesirableServiceFlags(services)\n+    return !(GetDesirableServiceFlags(services) & (~services));\n+}\n+\n+ServiceFlags PeerManagerImpl::GetDesirableServiceFlags(ServiceFlags services) const\n+{\n+    if (services & NODE_NETWORK_LIMITED) {\n+        if (m_initial_sync_finished) return ServiceFlags(NODE_NETWORK_LIMITED | NODE_WITNESS);\n+    }\n+    return ServiceFlags(NODE_NETWORK | NODE_WITNESS);",
      "path": "src/net_processing.cpp",
      "position": 78,
      "original_position": 83,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "bf3ce4a9ae88910ef33be61980be42c84fc812af",
      "in_reply_to_id": null,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can we return `StatelessServiceFlags()` here instead?",
      "created_at": "2023-10-30T23:08:47Z",
      "updated_at": "2023-10-30T23:09:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1376889771",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376889771"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1686,
      "original_line": 1686,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1377164244",
      "pull_request_review_id": 1705619635,
      "id": 1377164244,
      "node_id": "PRRC_kwDOABII585SFdvU",
      "diff_hunk": "@@ -1642,6 +1659,20 @@ void PeerManagerImpl::FinalizeNode(const CNode& node)\n     LogPrint(BCLog::NET, \"Cleared nodestate for peer=%d\\n\", nodeid);\n }\n \n+bool PeerManagerImpl::HasAllDesirableServiceFlags(ServiceFlags services) const\n+{\n+    // Shortcut for (services & GetDesirableServiceFlags(services)) == GetDesirableServiceFlags(services)\n+    return !(GetDesirableServiceFlags(services) & (~services));\n+}\n+\n+ServiceFlags PeerManagerImpl::GetDesirableServiceFlags(ServiceFlags services) const\n+{\n+    if (services & NODE_NETWORK_LIMITED) {\n+        if (m_initial_sync_finished) return ServiceFlags(NODE_NETWORK_LIMITED | NODE_WITNESS);\n+    }\n+    return ServiceFlags(NODE_NETWORK | NODE_WITNESS);",
      "path": "src/net_processing.cpp",
      "position": 78,
      "original_position": 83,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "bf3ce4a9ae88910ef33be61980be42c84fc812af",
      "in_reply_to_id": 1376889771,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah this what causes my confusion [here](https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1376837397) as well. I think the author means to use `StatelessServiceFlags` only for seed peers. In that case, i'd probably say that explicitly in the function's name. Like `SeedsServiceFlags`. Then, a comment saying something like `these flags should probably be in sync with GetDesirableServiceFlags, but not strictly`.",
      "created_at": "2023-10-31T07:36:53Z",
      "updated_at": "2023-10-31T07:36:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1377164244",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1377164244"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1686,
      "original_line": 1686,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1377694801",
      "pull_request_review_id": 1706479807,
      "id": 1377694801,
      "node_id": "PRRC_kwDOABII585SHfRR",
      "diff_hunk": "@@ -1642,6 +1659,20 @@ void PeerManagerImpl::FinalizeNode(const CNode& node)\n     LogPrint(BCLog::NET, \"Cleared nodestate for peer=%d\\n\", nodeid);\n }\n \n+bool PeerManagerImpl::HasAllDesirableServiceFlags(ServiceFlags services) const\n+{\n+    // Shortcut for (services & GetDesirableServiceFlags(services)) == GetDesirableServiceFlags(services)\n+    return !(GetDesirableServiceFlags(services) & (~services));\n+}\n+\n+ServiceFlags PeerManagerImpl::GetDesirableServiceFlags(ServiceFlags services) const\n+{\n+    if (services & NODE_NETWORK_LIMITED) {\n+        if (m_initial_sync_finished) return ServiceFlags(NODE_NETWORK_LIMITED | NODE_WITNESS);\n+    }\n+    return ServiceFlags(NODE_NETWORK | NODE_WITNESS);",
      "path": "src/net_processing.cpp",
      "position": 78,
      "original_position": 83,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "bf3ce4a9ae88910ef33be61980be42c84fc812af",
      "in_reply_to_id": 1376889771,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> In that case, i'd probably say that explicitly in the function's name. Like SeedsServiceFlags.\r\n\r\nSounds good. Will rename it to `SeedsServiceFlags`.\r\nI was thinking we would use this function for other cases in the future, but agree that this can be simplified for now.\r\n\r\n> Then, a comment saying something like these flags should probably be in sync with GetDesirableServiceFlags, but not strictly.\r\n\r\nI'm not sure about this comment. We could have a much more complex logic at the PeerManager level, adaptable based on the chain context and/or the user's configurations. For instance, the user could be running a node whose preferred connections are ones supporting `NODE_P2P_V2` or `NODE_COMPACT_FILTERS` (because the sync mechanism is BIP157) or some other service flag in the future.\r\n\r\n\r\n",
      "created_at": "2023-10-31T14:36:35Z",
      "updated_at": "2023-10-31T14:37:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1377694801",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1377694801"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1686,
      "original_line": 1686,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1377784027",
      "pull_request_review_id": 1706626162,
      "id": 1377784027,
      "node_id": "PRRC_kwDOABII585SH1Db",
      "diff_hunk": "@@ -0,0 +1,58 @@\n+// Copyright (c) 2023-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <node/miner.h>\n+#include <net_processing.h>\n+#include <pow.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(peerman_tests, RegTestingSetup)\n+\n+// Verifying when network-limited peer connections are desirable based on the node's IBD status\n+BOOST_AUTO_TEST_CASE(connections_desirable_service_flags)\n+{\n+    std::unique_ptr<PeerManager> peerman = PeerManager::make(*m_node.connman, *m_node.addrman, nullptr, *m_node.chainman, *m_node.mempool, {});\n+\n+    // Check we start connecting to full nodes\n+    ServiceFlags peer_flags{NODE_WITNESS | NODE_NETWORK_LIMITED};\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK | NODE_WITNESS));\n+\n+    // Check we accept network limited peers when we are out of ibd\n+    SetMockTime(WITH_LOCK(::cs_main, return m_node.chainman->ActiveChain().Tip()->GetBlockTime())); // time to tip time so we are out of ibd\n+    peerman->CheckForStaleTipAndEvictPeers();  // Update ibd state\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK_LIMITED | NODE_WITNESS));\n+\n+    // Now check we can go back to ibd if we are further than the limited peers threshold (NODE_NETWORK_LIMITED_MIN_BLOCKS)",
      "path": "src/test/peerman_tests.cpp",
      "position": null,
      "original_position": 30,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "3a56fe6dbb35ba809cd9611395f28d8fdd85df73",
      "in_reply_to_id": null,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can we first check that we don't go back to ibd if we are stale but at the threshold, then we do go back to ibd once we step over the threshold?",
      "created_at": "2023-10-31T15:31:57Z",
      "updated_at": "2023-10-31T15:31:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1377784027",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1377784027"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 30,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1377793447",
      "pull_request_review_id": 1706640450,
      "id": 1377793447,
      "node_id": "PRRC_kwDOABII585SH3Wn",
      "diff_hunk": "@@ -0,0 +1,58 @@\n+// Copyright (c) 2023-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <node/miner.h>\n+#include <net_processing.h>\n+#include <pow.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(peerman_tests, RegTestingSetup)\n+\n+// Verifying when network-limited peer connections are desirable based on the node's IBD status\n+BOOST_AUTO_TEST_CASE(connections_desirable_service_flags)\n+{\n+    std::unique_ptr<PeerManager> peerman = PeerManager::make(*m_node.connman, *m_node.addrman, nullptr, *m_node.chainman, *m_node.mempool, {});\n+\n+    // Check we start connecting to full nodes\n+    ServiceFlags peer_flags{NODE_WITNESS | NODE_NETWORK_LIMITED};\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK | NODE_WITNESS));\n+\n+    // Check we accept network limited peers when we are out of ibd\n+    SetMockTime(WITH_LOCK(::cs_main, return m_node.chainman->ActiveChain().Tip()->GetBlockTime())); // time to tip time so we are out of ibd\n+    peerman->CheckForStaleTipAndEvictPeers();  // Update ibd state\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK_LIMITED | NODE_WITNESS));\n+\n+    // Now check we can go back to ibd if we are further than the limited peers threshold (NODE_NETWORK_LIMITED_MIN_BLOCKS)\n+    auto consensus = m_node.chainman->GetParams().GetConsensus();\n+    auto time_last_stale = GetTime<std::chrono::seconds>() + std::chrono::seconds{consensus.nPowTargetSpacing * 300};\n+    SetMockTime(time_last_stale);\n+    peerman->CheckForStaleTipAndEvictPeers();\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK | NODE_WITNESS));\n+\n+    // Check we can get back out of ibd again\n+    SetMockTime(WITH_LOCK(::cs_main, return m_node.chainman->ActiveChain().Tip()->GetBlockTime())); // time to tip time so we are out of ibd\n+    peerman->CheckForStaleTipAndEvictPeers();  // Update ibd state\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK_LIMITED | NODE_WITNESS));\n+\n+    // Push the chain forward to surpass the 'STALE_CHECK_INTERVAL' (time between 'CheckForStaleTipAndEvictPeers' calls)\n+    // to move the \"initial sync finished\" state flag back to false (back to IBD state once more).",
      "path": "src/test/peerman_tests.cpp",
      "position": null,
      "original_position": 43,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "3a56fe6dbb35ba809cd9611395f28d8fdd85df73",
      "in_reply_to_id": null,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The 3 lines below are the same as lines 33-35, except for the +11min. It's unclear to me from this comment what the 11min is doing and why this is different from what we are doing before. Can this maybe be explained better?",
      "created_at": "2023-10-31T15:37:42Z",
      "updated_at": "2023-10-31T15:38:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1377793447",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1377793447"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1378086895",
      "pull_request_review_id": 1707112442,
      "id": 1378086895,
      "node_id": "PRRC_kwDOABII585SI-_v",
      "diff_hunk": "@@ -0,0 +1,58 @@\n+// Copyright (c) 2023-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <node/miner.h>\n+#include <net_processing.h>\n+#include <pow.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(peerman_tests, RegTestingSetup)\n+\n+// Verifying when network-limited peer connections are desirable based on the node's IBD status\n+BOOST_AUTO_TEST_CASE(connections_desirable_service_flags)\n+{\n+    std::unique_ptr<PeerManager> peerman = PeerManager::make(*m_node.connman, *m_node.addrman, nullptr, *m_node.chainman, *m_node.mempool, {});\n+\n+    // Check we start connecting to full nodes\n+    ServiceFlags peer_flags{NODE_WITNESS | NODE_NETWORK_LIMITED};\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK | NODE_WITNESS));\n+\n+    // Check we accept network limited peers when we are out of ibd\n+    SetMockTime(WITH_LOCK(::cs_main, return m_node.chainman->ActiveChain().Tip()->GetBlockTime())); // time to tip time so we are out of ibd\n+    peerman->CheckForStaleTipAndEvictPeers();  // Update ibd state\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK_LIMITED | NODE_WITNESS));\n+\n+    // Now check we can go back to ibd if we are further than the limited peers threshold (NODE_NETWORK_LIMITED_MIN_BLOCKS)",
      "path": "src/test/peerman_tests.cpp",
      "position": null,
      "original_position": 30,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "3a56fe6dbb35ba809cd9611395f28d8fdd85df73",
      "in_reply_to_id": 1377784027,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "yeah sure, good idea.",
      "created_at": "2023-10-31T19:37:01Z",
      "updated_at": "2023-10-31T19:37:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1378086895",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1378086895"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 30,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1378088543",
      "pull_request_review_id": 1707115293,
      "id": 1378088543,
      "node_id": "PRRC_kwDOABII585SI_Zf",
      "diff_hunk": "@@ -0,0 +1,58 @@\n+// Copyright (c) 2023-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <node/miner.h>\n+#include <net_processing.h>\n+#include <pow.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(peerman_tests, RegTestingSetup)\n+\n+// Verifying when network-limited peer connections are desirable based on the node's IBD status\n+BOOST_AUTO_TEST_CASE(connections_desirable_service_flags)\n+{\n+    std::unique_ptr<PeerManager> peerman = PeerManager::make(*m_node.connman, *m_node.addrman, nullptr, *m_node.chainman, *m_node.mempool, {});\n+\n+    // Check we start connecting to full nodes\n+    ServiceFlags peer_flags{NODE_WITNESS | NODE_NETWORK_LIMITED};\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK | NODE_WITNESS));\n+\n+    // Check we accept network limited peers when we are out of ibd\n+    SetMockTime(WITH_LOCK(::cs_main, return m_node.chainman->ActiveChain().Tip()->GetBlockTime())); // time to tip time so we are out of ibd\n+    peerman->CheckForStaleTipAndEvictPeers();  // Update ibd state\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK_LIMITED | NODE_WITNESS));\n+\n+    // Now check we can go back to ibd if we are further than the limited peers threshold (NODE_NETWORK_LIMITED_MIN_BLOCKS)\n+    auto consensus = m_node.chainman->GetParams().GetConsensus();\n+    auto time_last_stale = GetTime<std::chrono::seconds>() + std::chrono::seconds{consensus.nPowTargetSpacing * 300};\n+    SetMockTime(time_last_stale);\n+    peerman->CheckForStaleTipAndEvictPeers();\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK | NODE_WITNESS));\n+\n+    // Check we can get back out of ibd again\n+    SetMockTime(WITH_LOCK(::cs_main, return m_node.chainman->ActiveChain().Tip()->GetBlockTime())); // time to tip time so we are out of ibd\n+    peerman->CheckForStaleTipAndEvictPeers();  // Update ibd state\n+    BOOST_CHECK(peerman->GetDesirableServiceFlags(peer_flags) == ServiceFlags(NODE_NETWORK_LIMITED | NODE_WITNESS));\n+\n+    // Push the chain forward to surpass the 'STALE_CHECK_INTERVAL' (time between 'CheckForStaleTipAndEvictPeers' calls)\n+    // to move the \"initial sync finished\" state flag back to false (back to IBD state once more).",
      "path": "src/test/peerman_tests.cpp",
      "position": null,
      "original_position": 43,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "3a56fe6dbb35ba809cd9611395f28d8fdd85df73",
      "in_reply_to_id": 1377793447,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Sure. This is because we execute the stale check every 10 min, so needed to push the last stale check time forward.\r\nWill re-order the test checks so this becomes clearer.",
      "created_at": "2023-10-31T19:39:03Z",
      "updated_at": "2023-10-31T19:39:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1378088543",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1378088543"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1378500641",
      "pull_request_review_id": 1707743315,
      "id": 1378500641,
      "node_id": "PRRC_kwDOABII585SKkAh",
      "diff_hunk": "@@ -1294,19 +1302,32 @@ void PeerManagerImpl::MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid)\n     });\n }\n \n-bool PeerManagerImpl::TipMayBeStale()\n+PeerManagerImpl::Staleness PeerManagerImpl::TipMayBeStale()\n {\n     AssertLockHeld(cs_main);\n     const Consensus::Params& consensusParams = m_chainparams.GetConsensus();\n     if (m_last_tip_update.load() == 0s) {\n         m_last_tip_update = GetTime<std::chrono::seconds>();\n     }\n-    return m_last_tip_update.load() < GetTime<std::chrono::seconds>() - std::chrono::seconds{consensusParams.nPowTargetSpacing * 3} && mapBlocksInFlight.empty();\n+\n+    auto last_update_time = m_last_tip_update.load();\n+    if (last_update_time < GetTime<std::chrono::seconds>() - std::chrono::seconds{consensusParams.nPowTargetSpacing * 3} && mapBlocksInFlight.empty()) {\n+        // If tip is further than NODE_NETWORK_LIMITED_MIN_BLOCKS, we are really behind and shouldn't connect to limited peers anymore.\n+        Assume(NODE_NETWORK_LIMITED_MIN_BLOCKS > 3);\n+        bool in_ibd = NodeSeconds{last_update_time} < GetAdjustedTime() - std::chrono::seconds{consensusParams.nPowTargetSpacing * NODE_NETWORK_LIMITED_MIN_BLOCKS};",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 51,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "636d927c4a9cd5cbf4d0c22e1c25dc44ecaf7a69",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "636d927c4a9cd5cbf4d0c22e1c25dc44ecaf7a69\r\n\r\nIs it still fair to call this state *initial* block download?",
      "created_at": "2023-11-01T08:08:22Z",
      "updated_at": "2023-11-01T08:18:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1378500641",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1378500641"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1317,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1378798478",
      "pull_request_review_id": 1708216770,
      "id": 1378798478,
      "node_id": "PRRC_kwDOABII585SLsuO",
      "diff_hunk": "@@ -1294,19 +1302,32 @@ void PeerManagerImpl::MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid)\n     });\n }\n \n-bool PeerManagerImpl::TipMayBeStale()\n+PeerManagerImpl::Staleness PeerManagerImpl::TipMayBeStale()\n {\n     AssertLockHeld(cs_main);\n     const Consensus::Params& consensusParams = m_chainparams.GetConsensus();\n     if (m_last_tip_update.load() == 0s) {\n         m_last_tip_update = GetTime<std::chrono::seconds>();\n     }\n-    return m_last_tip_update.load() < GetTime<std::chrono::seconds>() - std::chrono::seconds{consensusParams.nPowTargetSpacing * 3} && mapBlocksInFlight.empty();\n+\n+    auto last_update_time = m_last_tip_update.load();\n+    if (last_update_time < GetTime<std::chrono::seconds>() - std::chrono::seconds{consensusParams.nPowTargetSpacing * 3} && mapBlocksInFlight.empty()) {\n+        // If tip is further than NODE_NETWORK_LIMITED_MIN_BLOCKS, we are really behind and shouldn't connect to limited peers anymore.\n+        Assume(NODE_NETWORK_LIMITED_MIN_BLOCKS > 3);\n+        bool in_ibd = NodeSeconds{last_update_time} < GetAdjustedTime() - std::chrono::seconds{consensusParams.nPowTargetSpacing * NODE_NETWORK_LIMITED_MIN_BLOCKS};",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 51,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "636d927c4a9cd5cbf4d0c22e1c25dc44ecaf7a69",
      "in_reply_to_id": 1378500641,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "That's just me trying to save few characters. Will rename it to `past_net_limited`.",
      "created_at": "2023-11-01T13:23:37Z",
      "updated_at": "2023-11-01T13:23:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1378798478",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1378798478"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1317,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1378806543",
      "pull_request_review_id": 1708229887,
      "id": 1378806543,
      "node_id": "PRRC_kwDOABII585SLusP",
      "diff_hunk": "@@ -1294,19 +1302,32 @@ void PeerManagerImpl::MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid)\n     });\n }\n \n-bool PeerManagerImpl::TipMayBeStale()\n+PeerManagerImpl::Staleness PeerManagerImpl::TipMayBeStale()\n {\n     AssertLockHeld(cs_main);\n     const Consensus::Params& consensusParams = m_chainparams.GetConsensus();\n     if (m_last_tip_update.load() == 0s) {\n         m_last_tip_update = GetTime<std::chrono::seconds>();\n     }\n-    return m_last_tip_update.load() < GetTime<std::chrono::seconds>() - std::chrono::seconds{consensusParams.nPowTargetSpacing * 3} && mapBlocksInFlight.empty();\n+\n+    auto last_update_time = m_last_tip_update.load();\n+    if (last_update_time < GetTime<std::chrono::seconds>() - std::chrono::seconds{consensusParams.nPowTargetSpacing * 3} && mapBlocksInFlight.empty()) {\n+        // If tip is further than NODE_NETWORK_LIMITED_MIN_BLOCKS, we are really behind and shouldn't connect to limited peers anymore.\n+        Assume(NODE_NETWORK_LIMITED_MIN_BLOCKS > 3);\n+        bool in_ibd = NodeSeconds{last_update_time} < GetAdjustedTime() - std::chrono::seconds{consensusParams.nPowTargetSpacing * NODE_NETWORK_LIMITED_MIN_BLOCKS};",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 51,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "636d927c4a9cd5cbf4d0c22e1c25dc44ecaf7a69",
      "in_reply_to_id": 1378500641,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Any reason to use adjusted time, when the tip update time is recorded as NodeClock?",
      "created_at": "2023-11-01T13:30:54Z",
      "updated_at": "2023-11-01T13:30:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1378806543",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1378806543"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1317,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1378842023",
      "pull_request_review_id": 1708287474,
      "id": 1378842023,
      "node_id": "PRRC_kwDOABII585SL3Wn",
      "diff_hunk": "@@ -1294,19 +1302,32 @@ void PeerManagerImpl::MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid)\n     });\n }\n \n-bool PeerManagerImpl::TipMayBeStale()\n+PeerManagerImpl::Staleness PeerManagerImpl::TipMayBeStale()\n {\n     AssertLockHeld(cs_main);\n     const Consensus::Params& consensusParams = m_chainparams.GetConsensus();\n     if (m_last_tip_update.load() == 0s) {\n         m_last_tip_update = GetTime<std::chrono::seconds>();\n     }\n-    return m_last_tip_update.load() < GetTime<std::chrono::seconds>() - std::chrono::seconds{consensusParams.nPowTargetSpacing * 3} && mapBlocksInFlight.empty();\n+\n+    auto last_update_time = m_last_tip_update.load();\n+    if (last_update_time < GetTime<std::chrono::seconds>() - std::chrono::seconds{consensusParams.nPowTargetSpacing * 3} && mapBlocksInFlight.empty()) {\n+        // If tip is further than NODE_NETWORK_LIMITED_MIN_BLOCKS, we are really behind and shouldn't connect to limited peers anymore.\n+        Assume(NODE_NETWORK_LIMITED_MIN_BLOCKS > 3);\n+        bool in_ibd = NodeSeconds{last_update_time} < GetAdjustedTime() - std::chrono::seconds{consensusParams.nPowTargetSpacing * NODE_NETWORK_LIMITED_MIN_BLOCKS};",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 51,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "636d927c4a9cd5cbf4d0c22e1c25dc44ecaf7a69",
      "in_reply_to_id": 1378500641,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Any reason to use adjusted time, when the tip update time is recorded as NodeClock?\r\n\r\nGood point. The idea was to considerate the peers' time too, so the node has less chances of requesting a block at the limited peers threshold that does no longer exist in the other side. In other words, if the peer's time deviates slightly from the node time, the peer could have pruned the block at the verge of the threshold.\r\nBut we could achieve the same outcome by reducing the window size by one or two blocks. Which does not require to mix `GetTime` and `GetAdjustedTime` usages.",
      "created_at": "2023-11-01T14:01:09Z",
      "updated_at": "2023-11-01T14:01:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1378842023",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1378842023"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1317,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1378907084",
      "pull_request_review_id": 1708392307,
      "id": 1378907084,
      "node_id": "PRRC_kwDOABII585SMHPM",
      "diff_hunk": "@@ -1294,19 +1302,32 @@ void PeerManagerImpl::MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid)\n     });\n }\n \n-bool PeerManagerImpl::TipMayBeStale()\n+PeerManagerImpl::Staleness PeerManagerImpl::TipMayBeStale()\n {\n     AssertLockHeld(cs_main);\n     const Consensus::Params& consensusParams = m_chainparams.GetConsensus();\n     if (m_last_tip_update.load() == 0s) {\n         m_last_tip_update = GetTime<std::chrono::seconds>();\n     }\n-    return m_last_tip_update.load() < GetTime<std::chrono::seconds>() - std::chrono::seconds{consensusParams.nPowTargetSpacing * 3} && mapBlocksInFlight.empty();\n+\n+    auto last_update_time = m_last_tip_update.load();\n+    if (last_update_time < GetTime<std::chrono::seconds>() - std::chrono::seconds{consensusParams.nPowTargetSpacing * 3} && mapBlocksInFlight.empty()) {\n+        // If tip is further than NODE_NETWORK_LIMITED_MIN_BLOCKS, we are really behind and shouldn't connect to limited peers anymore.\n+        Assume(NODE_NETWORK_LIMITED_MIN_BLOCKS > 3);\n+        bool in_ibd = NodeSeconds{last_update_time} < GetAdjustedTime() - std::chrono::seconds{consensusParams.nPowTargetSpacing * NODE_NETWORK_LIMITED_MIN_BLOCKS};",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 51,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "636d927c4a9cd5cbf4d0c22e1c25dc44ecaf7a69",
      "in_reply_to_id": 1378500641,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> In other words, if the peer's time deviates slightly from the node time\r\n\r\nI don't think `GetAdjustedTime` offers this precision even. Also, it is not a per-peer offset, but a global one.",
      "created_at": "2023-11-01T14:52:26Z",
      "updated_at": "2023-11-01T14:52:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1378907084",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1378907084"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1317,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1380107969",
      "pull_request_review_id": 1710249269,
      "id": 1380107969,
      "node_id": "PRRC_kwDOABII585SQsbB",
      "diff_hunk": "@@ -1294,19 +1302,32 @@ void PeerManagerImpl::MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid)\n     });\n }\n \n-bool PeerManagerImpl::TipMayBeStale()\n+PeerManagerImpl::Staleness PeerManagerImpl::TipMayBeStale()\n {\n     AssertLockHeld(cs_main);\n     const Consensus::Params& consensusParams = m_chainparams.GetConsensus();\n     if (m_last_tip_update.load() == 0s) {\n         m_last_tip_update = GetTime<std::chrono::seconds>();\n     }\n-    return m_last_tip_update.load() < GetTime<std::chrono::seconds>() - std::chrono::seconds{consensusParams.nPowTargetSpacing * 3} && mapBlocksInFlight.empty();\n+\n+    auto last_update_time = m_last_tip_update.load();\n+    if (last_update_time < GetTime<std::chrono::seconds>() - std::chrono::seconds{consensusParams.nPowTargetSpacing * 3} && mapBlocksInFlight.empty()) {\n+        // If tip is further than NODE_NETWORK_LIMITED_MIN_BLOCKS, we are really behind and shouldn't connect to limited peers anymore.\n+        Assume(NODE_NETWORK_LIMITED_MIN_BLOCKS > 3);\n+        bool in_ibd = NodeSeconds{last_update_time} < GetAdjustedTime() - std::chrono::seconds{consensusParams.nPowTargetSpacing * NODE_NETWORK_LIMITED_MIN_BLOCKS};",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 51,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "636d927c4a9cd5cbf4d0c22e1c25dc44ecaf7a69",
      "in_reply_to_id": 1378500641,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> > In other words, if the peer's time deviates slightly from the node time\r\n> \r\n> I don't think `GetAdjustedTime` offers this precision even. Also, it is not a per-peer offset, but a global one.\r\n\r\nYeah I know. I just thought it was better to do that than nothing.\r\nStill, I'm quite sure we cannot trigger the edge case I mentioned above only using core vanilla alone. The pruning process isn't that aggressive for the time being. It might arise across different implementations but we can revisit it in a follow-up, the limited peers connection window can be easily shortened without any problem.",
      "created_at": "2023-11-02T13:29:05Z",
      "updated_at": "2023-11-02T13:29:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1380107969",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1380107969"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1317,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1384547974",
      "pull_request_review_id": 1717094661,
      "id": 1384547974,
      "node_id": "PRRC_kwDOABII585ShoaG",
      "diff_hunk": "@@ -892,7 +893,13 @@ class PeerManagerImpl final : public PeerManager\n      */\n     bool BlockRequested(NodeId nodeid, const CBlockIndex& block, std::list<QueuedBlock>::iterator** pit = nullptr) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n-    bool TipMayBeStale() EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+    enum class Staleness {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "ef4a1a44dca1af20adcc8fb0c14e8a31683a9d99",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "ef4a1a44dca1af20adcc8fb0c14e8a31683a9d99\r\n\r\nnit: this enum could be better... First, `StalePast` also qualifies as `Stale` (just english-wise). Second, it's a negation (non-synced).",
      "created_at": "2023-11-07T08:31:58Z",
      "updated_at": "2023-11-07T08:38:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1384547974",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1384547974"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 896,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1384550193",
      "pull_request_review_id": 1717094661,
      "id": 1384550193,
      "node_id": "PRRC_kwDOABII585Sho8x",
      "diff_hunk": "@@ -2057,6 +2078,16 @@ void PeerManagerImpl::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlock\n {\n     SetBestHeight(pindexNew->nHeight);\n \n+    // Update internal sync state.\n+    // Avoid using 'fInitialDownload' alone since the flag currently cannot go backwards after passing IBD once.",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 74,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "ef4a1a44dca1af20adcc8fb0c14e8a31683a9d99",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm wondering, does it even make sense to keep such flag at this point? What it would take to adjust all code to going back-and-forth w.r.t. superstale?",
      "created_at": "2023-11-07T08:33:52Z",
      "updated_at": "2023-11-07T08:38:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1384550193",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1384550193"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2082,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1384553675",
      "pull_request_review_id": 1717094661,
      "id": 1384553675,
      "node_id": "PRRC_kwDOABII585ShpzL",
      "diff_hunk": "@@ -5279,22 +5310,31 @@ void PeerManagerImpl::CheckForStaleTipAndEvictPeers()\n \n     EvictExtraOutboundPeers(now);\n \n+    Staleness staleness{Staleness::NotStale};\n     if (now > m_stale_tip_check_time) {\n-        // Check whether our tip is stale, and if so, allow using an extra\n-        // outbound peer\n-        if (!m_chainman.m_blockman.LoadingBlocks() && m_connman.GetNetworkActive() && m_connman.GetUseAddrmanOutgoing() && TipMayBeStale()) {\n+        // Check whether our tip is stale, and if so, allow using an extra outbound peer\n+        if (!m_chainman.m_blockman.LoadingBlocks() && m_connman.GetNetworkActive() && m_connman.GetUseAddrmanOutgoing()) {\n+            staleness = TipMayBeStale();\n+        }\n+\n+        if (staleness != Staleness::NotStale) {\n             LogPrintf(\"Potential stale tip detected, will try using extra outbound peer (last tip update: %d seconds ago)\\n\",\n                       count_seconds(now - m_last_tip_update.load()));\n             m_connman.SetTryNewOutboundPeer(true);\n         } else if (m_connman.GetTryNewOutboundPeer()) {\n             m_connman.SetTryNewOutboundPeer(false);\n         }\n+\n         m_stale_tip_check_time = now + STALE_CHECK_INTERVAL;\n     }\n \n     if (!m_initial_sync_finished && CanDirectFetch()) {\n         m_connman.StartExtraBlockRelayPeers();\n         m_initial_sync_finished = true;\n+    } else if (staleness == Staleness::StalePastNetworkLimited) {\n+        // Disallow connection to limited peers.\n+        // We need to find a full node that can help us recover.\n+        m_initial_sync_finished = false;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 117,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "ef4a1a44dca1af20adcc8fb0c14e8a31683a9d99",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The word `initial` here is indeed confusing... Thinking about something happening only at node bootstrap, which is a more obvious version i think. Can we find a different word now that you're changing it to certainly not mean that?",
      "created_at": "2023-11-07T08:36:58Z",
      "updated_at": "2023-11-07T08:38:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1384553675",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1384553675"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5337,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1384972762",
      "pull_request_review_id": 1717778418,
      "id": 1384972762,
      "node_id": "PRRC_kwDOABII585SjQHa",
      "diff_hunk": "@@ -2057,6 +2078,16 @@ void PeerManagerImpl::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlock\n {\n     SetBestHeight(pindexNew->nHeight);\n \n+    // Update internal sync state.\n+    // Avoid using 'fInitialDownload' alone since the flag currently cannot go backwards after passing IBD once.",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 74,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "ef4a1a44dca1af20adcc8fb0c14e8a31683a9d99",
      "in_reply_to_id": 1384550193,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I'm wondering, does it even make sense to keep such flag at this point? What it would take to adjust all code to going back-and-forth w.r.t. superstale?\r\n\r\nI think that would be an oxymoron. We would be adding code to put the node back into IBD state, because of a stale tip check, when the node is updating the tip.\r\n\r\nThe `fInitialDownload` flag usage is just a speedup. We know for sure that when the flag is true, it is because the node is in IBD. So we don't need to check anything else in such case.\r\n\r\nAside from that, about the adjustments: the stale tip check uses the last tip updated time (`m_last_tip_update`) which is updated on every new block `BlockConnected` (which is executed prior to `UpdatedBlockTip`). So that would need to be moved to `UpdatedBlockTip`. Also, and more importantly for me, because the stale tip check checks the in-flight block requests map, it requires `cs_main` lock. Which I would try to avoid as much as possible as it usage slows down the net messages processing and validation thread.\r\nA little note about this last point; with something like #27837, we could guard `mapBlocksInFlight` under a different mutex and not `cs_main`. ",
      "created_at": "2023-11-07T14:07:29Z",
      "updated_at": "2023-11-07T14:19:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1384972762",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1384972762"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2082,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1384991649",
      "pull_request_review_id": 1717778418,
      "id": 1384991649,
      "node_id": "PRRC_kwDOABII585SjUuh",
      "diff_hunk": "@@ -5279,22 +5310,31 @@ void PeerManagerImpl::CheckForStaleTipAndEvictPeers()\n \n     EvictExtraOutboundPeers(now);\n \n+    Staleness staleness{Staleness::NotStale};\n     if (now > m_stale_tip_check_time) {\n-        // Check whether our tip is stale, and if so, allow using an extra\n-        // outbound peer\n-        if (!m_chainman.m_blockman.LoadingBlocks() && m_connman.GetNetworkActive() && m_connman.GetUseAddrmanOutgoing() && TipMayBeStale()) {\n+        // Check whether our tip is stale, and if so, allow using an extra outbound peer\n+        if (!m_chainman.m_blockman.LoadingBlocks() && m_connman.GetNetworkActive() && m_connman.GetUseAddrmanOutgoing()) {\n+            staleness = TipMayBeStale();\n+        }\n+\n+        if (staleness != Staleness::NotStale) {\n             LogPrintf(\"Potential stale tip detected, will try using extra outbound peer (last tip update: %d seconds ago)\\n\",\n                       count_seconds(now - m_last_tip_update.load()));\n             m_connman.SetTryNewOutboundPeer(true);\n         } else if (m_connman.GetTryNewOutboundPeer()) {\n             m_connman.SetTryNewOutboundPeer(false);\n         }\n+\n         m_stale_tip_check_time = now + STALE_CHECK_INTERVAL;\n     }\n \n     if (!m_initial_sync_finished && CanDirectFetch()) {\n         m_connman.StartExtraBlockRelayPeers();\n         m_initial_sync_finished = true;\n+    } else if (staleness == Staleness::StalePastNetworkLimited) {\n+        // Disallow connection to limited peers.\n+        // We need to find a full node that can help us recover.\n+        m_initial_sync_finished = false;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 117,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "ef4a1a44dca1af20adcc8fb0c14e8a31683a9d99",
      "in_reply_to_id": 1384553675,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> The word `initial` here is indeed confusing... Thinking about something happening only at node bootstrap, which is a more obvious version i think. Can we find a different word now that you're changing it to certainly not mean that?\r\n\r\nHmm, first names coming to my mind are `m_close_to_synced` or `m_close_to_tip`? or, could use the existing term `m_can_direct_fetch`?\r\n\r\nStill, maybe better to leave it for a follow-up because, with the back-and-forth functionality, we could also use this flag instead of calling `CanDirectFetch()` which locks `cs_main`.",
      "created_at": "2023-11-07T14:18:57Z",
      "updated_at": "2023-11-07T14:19:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1384991649",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1384991649"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5337,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1385001110",
      "pull_request_review_id": 1717826616,
      "id": 1385001110,
      "node_id": "PRRC_kwDOABII585SjXCW",
      "diff_hunk": "@@ -892,7 +893,13 @@ class PeerManagerImpl final : public PeerManager\n      */\n     bool BlockRequested(NodeId nodeid, const CBlockIndex& block, std::list<QueuedBlock>::iterator** pit = nullptr) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n-    bool TipMayBeStale() EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+    enum class Staleness {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "ef4a1a44dca1af20adcc8fb0c14e8a31683a9d99",
      "in_reply_to_id": 1384547974,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hmm, naming is hard.\r\nAs the function is called `TipMayBeStale()`, maybe calling it `SyncState` could also work. Thoughts? Or do you have anything else in mind?",
      "created_at": "2023-11-07T14:24:46Z",
      "updated_at": "2023-11-07T14:24:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1385001110",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1385001110"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 896,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1386309080",
      "pull_request_review_id": 1719854627,
      "id": 1386309080,
      "node_id": "PRRC_kwDOABII585SoWXY",
      "diff_hunk": "@@ -892,7 +893,13 @@ class PeerManagerImpl final : public PeerManager\n      */\n     bool BlockRequested(NodeId nodeid, const CBlockIndex& block, std::list<QueuedBlock>::iterator** pit = nullptr) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n-    bool TipMayBeStale() EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+    enum class Staleness {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "ef4a1a44dca1af20adcc8fb0c14e8a31683a9d99",
      "in_reply_to_id": 1384547974,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`SyncState` yeah that would work if you come up with a good enum values.",
      "created_at": "2023-11-08T09:55:57Z",
      "updated_at": "2023-11-08T09:55:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1386309080",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1386309080"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 896,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1386826811",
      "pull_request_review_id": 1720677656,
      "id": 1386826811,
      "node_id": "PRRC_kwDOABII585SqUw7",
      "diff_hunk": "@@ -892,7 +893,13 @@ class PeerManagerImpl final : public PeerManager\n      */\n     bool BlockRequested(NodeId nodeid, const CBlockIndex& block, std::list<QueuedBlock>::iterator** pit = nullptr) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n-    bool TipMayBeStale() EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+    enum class Staleness {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "ef4a1a44dca1af20adcc8fb0c14e8a31683a9d99",
      "in_reply_to_id": 1384547974,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> `SyncState` yeah that would work if you come up with a good enum values.\r\n\r\nMaybe `Synced`, `RecentStale`, `Stale`?\r\nNamed the second and third \"stale\" because these states have no in-flight block requests.\r\n\r\nStill, this could also be easily changed in the future if we come up with better names.",
      "created_at": "2023-11-08T15:41:02Z",
      "updated_at": "2023-11-08T15:41:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1386826811",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1386826811"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 896,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1413138828",
      "pull_request_review_id": 1761294796,
      "id": 1413138828,
      "node_id": "PRRC_kwDOABII585UOsmM",
      "diff_hunk": "@@ -5279,22 +5310,31 @@ void PeerManagerImpl::CheckForStaleTipAndEvictPeers()\n \n     EvictExtraOutboundPeers(now);\n \n+    Staleness staleness{Staleness::NotStale};\n     if (now > m_stale_tip_check_time) {\n-        // Check whether our tip is stale, and if so, allow using an extra\n-        // outbound peer\n-        if (!m_chainman.m_blockman.LoadingBlocks() && m_connman.GetNetworkActive() && m_connman.GetUseAddrmanOutgoing() && TipMayBeStale()) {\n+        // Check whether our tip is stale, and if so, allow using an extra outbound peer\n+        if (!m_chainman.m_blockman.LoadingBlocks() && m_connman.GetNetworkActive() && m_connman.GetUseAddrmanOutgoing()) {\n+            staleness = TipMayBeStale();\n+        }\n+\n+        if (staleness != Staleness::NotStale) {\n             LogPrintf(\"Potential stale tip detected, will try using extra outbound peer (last tip update: %d seconds ago)\\n\",\n                       count_seconds(now - m_last_tip_update.load()));\n             m_connman.SetTryNewOutboundPeer(true);\n         } else if (m_connman.GetTryNewOutboundPeer()) {\n             m_connman.SetTryNewOutboundPeer(false);\n         }\n+\n         m_stale_tip_check_time = now + STALE_CHECK_INTERVAL;\n     }\n \n     if (!m_initial_sync_finished && CanDirectFetch()) {\n         m_connman.StartExtraBlockRelayPeers();\n         m_initial_sync_finished = true;\n+    } else if (staleness == Staleness::StalePastNetworkLimited) {\n+        // Disallow connection to limited peers.\n+        // We need to find a full node that can help us recover.\n+        m_initial_sync_finished = false;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 117,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "ef4a1a44dca1af20adcc8fb0c14e8a31683a9d99",
      "in_reply_to_id": 1384553675,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This flag is only used to connect to limited peers or not. In that case, why not remove the indirection about syncing and just call it `allow_limited_peers`?",
      "created_at": "2023-12-03T15:42:18Z",
      "updated_at": "2023-12-03T15:42:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1413138828",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1413138828"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5337,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1413143266",
      "pull_request_review_id": 1761299662,
      "id": 1413143266,
      "node_id": "PRRC_kwDOABII585UOtri",
      "diff_hunk": "@@ -5279,22 +5310,31 @@ void PeerManagerImpl::CheckForStaleTipAndEvictPeers()\n \n     EvictExtraOutboundPeers(now);\n \n+    Staleness staleness{Staleness::NotStale};\n     if (now > m_stale_tip_check_time) {\n-        // Check whether our tip is stale, and if so, allow using an extra\n-        // outbound peer\n-        if (!m_chainman.m_blockman.LoadingBlocks() && m_connman.GetNetworkActive() && m_connman.GetUseAddrmanOutgoing() && TipMayBeStale()) {\n+        // Check whether our tip is stale, and if so, allow using an extra outbound peer\n+        if (!m_chainman.m_blockman.LoadingBlocks() && m_connman.GetNetworkActive() && m_connman.GetUseAddrmanOutgoing()) {\n+            staleness = TipMayBeStale();\n+        }\n+\n+        if (staleness != Staleness::NotStale) {\n             LogPrintf(\"Potential stale tip detected, will try using extra outbound peer (last tip update: %d seconds ago)\\n\",\n                       count_seconds(now - m_last_tip_update.load()));\n             m_connman.SetTryNewOutboundPeer(true);\n         } else if (m_connman.GetTryNewOutboundPeer()) {\n             m_connman.SetTryNewOutboundPeer(false);\n         }\n+\n         m_stale_tip_check_time = now + STALE_CHECK_INTERVAL;\n     }\n \n     if (!m_initial_sync_finished && CanDirectFetch()) {\n         m_connman.StartExtraBlockRelayPeers();\n         m_initial_sync_finished = true;\n+    } else if (staleness == Staleness::StalePastNetworkLimited) {\n+        // Disallow connection to limited peers.\n+        // We need to find a full node that can help us recover.\n+        m_initial_sync_finished = false;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 117,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "ef4a1a44dca1af20adcc8fb0c14e8a31683a9d99",
      "in_reply_to_id": 1384553675,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> This flag is only used to connect to limited peers or not. In that case, why not remove the indirection about syncing and just call it `allow_limited_peers`?\r\n\r\nBecause of what I wrote above, this flag can (and most likely will) be used in other places as well, fulfilling two goals: (1) minimizing `cs_main` locks, which improves the overall node response, and (2) minimizing the usage of the chainstate IBD flag, which lacks back-and-forth functionality.\r\n\r\nAs this PR did not introduce the flag and it is fixing an issue, I think is fine to leave the flag name as is now. It could be revisited on a follow-up.",
      "created_at": "2023-12-03T15:55:50Z",
      "updated_at": "2023-12-03T16:00:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1413143266",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1413143266"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5337,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1413149420",
      "pull_request_review_id": 1761305909,
      "id": 1413149420,
      "node_id": "PRRC_kwDOABII585UOvLs",
      "diff_hunk": "@@ -5279,22 +5310,31 @@ void PeerManagerImpl::CheckForStaleTipAndEvictPeers()\n \n     EvictExtraOutboundPeers(now);\n \n+    Staleness staleness{Staleness::NotStale};\n     if (now > m_stale_tip_check_time) {\n-        // Check whether our tip is stale, and if so, allow using an extra\n-        // outbound peer\n-        if (!m_chainman.m_blockman.LoadingBlocks() && m_connman.GetNetworkActive() && m_connman.GetUseAddrmanOutgoing() && TipMayBeStale()) {\n+        // Check whether our tip is stale, and if so, allow using an extra outbound peer\n+        if (!m_chainman.m_blockman.LoadingBlocks() && m_connman.GetNetworkActive() && m_connman.GetUseAddrmanOutgoing()) {\n+            staleness = TipMayBeStale();\n+        }\n+\n+        if (staleness != Staleness::NotStale) {\n             LogPrintf(\"Potential stale tip detected, will try using extra outbound peer (last tip update: %d seconds ago)\\n\",\n                       count_seconds(now - m_last_tip_update.load()));\n             m_connman.SetTryNewOutboundPeer(true);\n         } else if (m_connman.GetTryNewOutboundPeer()) {\n             m_connman.SetTryNewOutboundPeer(false);\n         }\n+\n         m_stale_tip_check_time = now + STALE_CHECK_INTERVAL;\n     }\n \n     if (!m_initial_sync_finished && CanDirectFetch()) {\n         m_connman.StartExtraBlockRelayPeers();\n         m_initial_sync_finished = true;\n+    } else if (staleness == Staleness::StalePastNetworkLimited) {\n+        // Disallow connection to limited peers.\n+        // We need to find a full node that can help us recover.\n+        m_initial_sync_finished = false;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 117,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "ef4a1a44dca1af20adcc8fb0c14e8a31683a9d99",
      "in_reply_to_id": 1384553675,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Right, then I think `m_is_close_to_tip` would make the most sense, since it's set initially after calling `IsBlockCloseToTip`.",
      "created_at": "2023-12-03T16:24:19Z",
      "updated_at": "2023-12-03T16:24:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1413149420",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1413149420"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5337,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1413843279",
      "pull_request_review_id": 1762353698,
      "id": 1413843279,
      "node_id": "PRRC_kwDOABII585URYlP",
      "diff_hunk": "@@ -5279,22 +5310,31 @@ void PeerManagerImpl::CheckForStaleTipAndEvictPeers()\n \n     EvictExtraOutboundPeers(now);\n \n+    Staleness staleness{Staleness::NotStale};\n     if (now > m_stale_tip_check_time) {\n-        // Check whether our tip is stale, and if so, allow using an extra\n-        // outbound peer\n-        if (!m_chainman.m_blockman.LoadingBlocks() && m_connman.GetNetworkActive() && m_connman.GetUseAddrmanOutgoing() && TipMayBeStale()) {\n+        // Check whether our tip is stale, and if so, allow using an extra outbound peer\n+        if (!m_chainman.m_blockman.LoadingBlocks() && m_connman.GetNetworkActive() && m_connman.GetUseAddrmanOutgoing()) {\n+            staleness = TipMayBeStale();\n+        }\n+\n+        if (staleness != Staleness::NotStale) {\n             LogPrintf(\"Potential stale tip detected, will try using extra outbound peer (last tip update: %d seconds ago)\\n\",\n                       count_seconds(now - m_last_tip_update.load()));\n             m_connman.SetTryNewOutboundPeer(true);\n         } else if (m_connman.GetTryNewOutboundPeer()) {\n             m_connman.SetTryNewOutboundPeer(false);\n         }\n+\n         m_stale_tip_check_time = now + STALE_CHECK_INTERVAL;\n     }\n \n     if (!m_initial_sync_finished && CanDirectFetch()) {\n         m_connman.StartExtraBlockRelayPeers();\n         m_initial_sync_finished = true;\n+    } else if (staleness == Staleness::StalePastNetworkLimited) {\n+        // Disallow connection to limited peers.\n+        // We need to find a full node that can help us recover.\n+        m_initial_sync_finished = false;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 117,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "ef4a1a44dca1af20adcc8fb0c14e8a31683a9d99",
      "in_reply_to_id": 1384553675,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@naumenkogs, do you agree on the naming as well? I'm happy to change it if we all agree.\r\nBetter to be sync to not circle much around the naming here.",
      "created_at": "2023-12-04T13:03:14Z",
      "updated_at": "2023-12-04T13:03:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1413843279",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1413843279"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5337,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1415169393",
      "pull_request_review_id": 1764414714,
      "id": 1415169393,
      "node_id": "PRRC_kwDOABII585UWcVx",
      "diff_hunk": "@@ -5279,22 +5310,31 @@ void PeerManagerImpl::CheckForStaleTipAndEvictPeers()\n \n     EvictExtraOutboundPeers(now);\n \n+    Staleness staleness{Staleness::NotStale};\n     if (now > m_stale_tip_check_time) {\n-        // Check whether our tip is stale, and if so, allow using an extra\n-        // outbound peer\n-        if (!m_chainman.m_blockman.LoadingBlocks() && m_connman.GetNetworkActive() && m_connman.GetUseAddrmanOutgoing() && TipMayBeStale()) {\n+        // Check whether our tip is stale, and if so, allow using an extra outbound peer\n+        if (!m_chainman.m_blockman.LoadingBlocks() && m_connman.GetNetworkActive() && m_connman.GetUseAddrmanOutgoing()) {\n+            staleness = TipMayBeStale();\n+        }\n+\n+        if (staleness != Staleness::NotStale) {\n             LogPrintf(\"Potential stale tip detected, will try using extra outbound peer (last tip update: %d seconds ago)\\n\",\n                       count_seconds(now - m_last_tip_update.load()));\n             m_connman.SetTryNewOutboundPeer(true);\n         } else if (m_connman.GetTryNewOutboundPeer()) {\n             m_connman.SetTryNewOutboundPeer(false);\n         }\n+\n         m_stale_tip_check_time = now + STALE_CHECK_INTERVAL;\n     }\n \n     if (!m_initial_sync_finished && CanDirectFetch()) {\n         m_connman.StartExtraBlockRelayPeers();\n         m_initial_sync_finished = true;\n+    } else if (staleness == Staleness::StalePastNetworkLimited) {\n+        // Disallow connection to limited peers.\n+        // We need to find a full node that can help us recover.\n+        m_initial_sync_finished = false;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 117,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "ef4a1a44dca1af20adcc8fb0c14e8a31683a9d99",
      "in_reply_to_id": 1384553675,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "yeah that would be better i think",
      "created_at": "2023-12-05T09:00:32Z",
      "updated_at": "2023-12-05T09:00:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1415169393",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1415169393"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5337,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1416195304",
      "pull_request_review_id": 1765972033,
      "id": 1416195304,
      "node_id": "PRRC_kwDOABII585UaWzo",
      "diff_hunk": "@@ -5279,22 +5310,31 @@ void PeerManagerImpl::CheckForStaleTipAndEvictPeers()\n \n     EvictExtraOutboundPeers(now);\n \n+    Staleness staleness{Staleness::NotStale};\n     if (now > m_stale_tip_check_time) {\n-        // Check whether our tip is stale, and if so, allow using an extra\n-        // outbound peer\n-        if (!m_chainman.m_blockman.LoadingBlocks() && m_connman.GetNetworkActive() && m_connman.GetUseAddrmanOutgoing() && TipMayBeStale()) {\n+        // Check whether our tip is stale, and if so, allow using an extra outbound peer\n+        if (!m_chainman.m_blockman.LoadingBlocks() && m_connman.GetNetworkActive() && m_connman.GetUseAddrmanOutgoing()) {\n+            staleness = TipMayBeStale();\n+        }\n+\n+        if (staleness != Staleness::NotStale) {\n             LogPrintf(\"Potential stale tip detected, will try using extra outbound peer (last tip update: %d seconds ago)\\n\",\n                       count_seconds(now - m_last_tip_update.load()));\n             m_connman.SetTryNewOutboundPeer(true);\n         } else if (m_connman.GetTryNewOutboundPeer()) {\n             m_connman.SetTryNewOutboundPeer(false);\n         }\n+\n         m_stale_tip_check_time = now + STALE_CHECK_INTERVAL;\n     }\n \n     if (!m_initial_sync_finished && CanDirectFetch()) {\n         m_connman.StartExtraBlockRelayPeers();\n         m_initial_sync_finished = true;\n+    } else if (staleness == Staleness::StalePastNetworkLimited) {\n+        // Disallow connection to limited peers.\n+        // We need to find a full node that can help us recover.\n+        m_initial_sync_finished = false;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 117,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "ef4a1a44dca1af20adcc8fb0c14e8a31683a9d99",
      "in_reply_to_id": 1384553675,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "ok cool. Updated per feedback.",
      "created_at": "2023-12-05T19:42:03Z",
      "updated_at": "2023-12-05T19:42:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1416195304",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1416195304"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5337,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1418747776",
      "pull_request_review_id": 1769801940,
      "id": 1418747776,
      "node_id": "PRRC_kwDOABII585UkF-A",
      "diff_hunk": "@@ -110,6 +110,29 @@ class PeerManager : public CValidationInterface, public NetEventsInterface\n \n     /** This function is used for testing the stale tip eviction logic, see denialofservice_tests.cpp */\n     virtual void UpdateLastBlockAnnounceTime(NodeId node, int64_t time_in_seconds) = 0;\n+\n+    /**\n+     * Gets the set of service flags which are \"desirable\" for a given peer.\n+     *\n+     * These are the flags which are required for a peer to support for them\n+     * to be \"interesting\" to us, ie for us to wish to use one of our few\n+     * outbound connection slots for or for us to wish to prioritize keeping",
      "path": "src/net_processing.h",
      "position": 19,
      "original_position": 10,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "afc29b15e262b4ff402d479ec77ab8507552bcbc",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit:\r\n```suggestion\r\n     * outbound connection slots or for us to wish to prioritize keeping\r\n```",
      "created_at": "2023-12-07T10:37:21Z",
      "updated_at": "2023-12-08T11:07:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1418747776",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1418747776"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 119,
      "original_line": 119,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1418751438",
      "pull_request_review_id": 1769801940,
      "id": 1418751438,
      "node_id": "PRRC_kwDOABII585UkG3O",
      "diff_hunk": "@@ -110,6 +110,29 @@ class PeerManager : public CValidationInterface, public NetEventsInterface\n \n     /** This function is used for testing the stale tip eviction logic, see denialofservice_tests.cpp */\n     virtual void UpdateLastBlockAnnounceTime(NodeId node, int64_t time_in_seconds) = 0;\n+\n+    /**\n+     * Gets the set of service flags which are \"desirable\" for a given peer.\n+     *\n+     * These are the flags which are required for a peer to support for them\n+     * to be \"interesting\" to us, ie for us to wish to use one of our few\n+     * outbound connection slots for or for us to wish to prioritize keeping\n+     * their connection around.\n+     *\n+     * Relevant service flags may be peer- and state-specific in that the\n+     * version of the peer may determine which flags are required (eg in the\n+     * case of NODE_NETWORK_LIMITED where we seek out NODE_NETWORK peers\n+     * unless they set NODE_NETWORK_LIMITED and we are out of IBD, in which\n+     * case NODE_NETWORK_LIMITED suffices).",
      "path": "src/net_processing.h",
      "position": 26,
      "original_position": 17,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "afc29b15e262b4ff402d479ec77ab8507552bcbc",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What is meant by \"the version of the peer\" here?",
      "created_at": "2023-12-07T10:39:56Z",
      "updated_at": "2023-12-08T11:07:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1418751438",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1418751438"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": 122,
      "original_start_line": 122,
      "start_side": "RIGHT",
      "line": 126,
      "original_line": 126,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1420201385",
      "pull_request_review_id": 1769801940,
      "id": 1420201385,
      "node_id": "PRRC_kwDOABII585Upo2p",
      "diff_hunk": "@@ -1292,19 +1302,32 @@ void PeerManagerImpl::MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid)\n     });\n }\n \n-bool PeerManagerImpl::TipMayBeStale()\n+PeerManagerImpl::Staleness PeerManagerImpl::TipMayBeStale()\n {\n     AssertLockHeld(cs_main);\n     const Consensus::Params& consensusParams = m_chainparams.GetConsensus();\n     if (m_last_tip_update.load() == 0s) {\n         m_last_tip_update = GetTime<std::chrono::seconds>();\n     }\n-    return m_last_tip_update.load() < GetTime<std::chrono::seconds>() - std::chrono::seconds{consensusParams.nPowTargetSpacing * 3} && mapBlocksInFlight.empty();\n+\n+    auto last_update_time = m_last_tip_update.load();\n+    if (last_update_time < GetTime<std::chrono::seconds>() - std::chrono::seconds{consensusParams.nPowTargetSpacing * 3} && mapBlocksInFlight.empty()) {\n+        // If tip is further than NODE_NETWORK_LIMITED_MIN_BLOCKS, we are really behind and shouldn't connect to limited peers anymore.\n+        Assume(NODE_NETWORK_LIMITED_MIN_BLOCKS > 3);\n+        bool past_net_limited = last_update_time < GetTime<std::chrono::seconds>() - std::chrono::seconds{consensusParams.nPowTargetSpacing * NODE_NETWORK_LIMITED_MIN_BLOCKS};\n+        return past_net_limited ? Staleness::StalePastNetworkLimited : Staleness::Stale;\n+    }\n+    return Staleness::NotStale;\n+}\n+\n+static bool IsBlockCloseToTip(const CBlockIndex* index, const Consensus::Params& consensus)\n+{\n+    return index->Time() > GetAdjustedTime() - consensus.PowTargetSpacing() * 20;\n }",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 78,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "afc29b15e262b4ff402d479ec77ab8507552bcbc",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "naming: \"close to tip\" is misleading because there is no \"tip\" involved here. Just the block time is compared to the current time. `IsBlockRecent()` would be better. Or maybe even `size_t BlockAge(const CBlockIndex& index) { return (GetAdjustedTime() - index.Time()) / consensus.PowTargetSpacing(); }`",
      "created_at": "2023-12-08T09:53:21Z",
      "updated_at": "2023-12-08T11:09:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1420201385",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1420201385"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": 1323,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1333,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1420215938",
      "pull_request_review_id": 1769801940,
      "id": 1420215938,
      "node_id": "PRRC_kwDOABII585UpsaC",
      "diff_hunk": "@@ -721,8 +723,9 @@ class PeerManagerImpl final : public PeerManager\n     bool RejectIncomingTxs(const CNode& peer) const;\n \n     /** Whether we've completed initial sync yet, for determining when to turn\n-      * on extra block-relay-only peers. */\n-    bool m_initial_sync_finished GUARDED_BY(cs_main){false};\n+      * on extra block-relay-only peers and the peer connections desirable\n+      * services flags. */\n+    std::atomic<bool> m_is_close_to_tip{false};",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "afc29b15e262b4ff402d479ec77ab8507552bcbc",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Tying together the \"extra block-relay-only peers\" and the \"desirable service flags\" seems unnecessary and maybe even wrong, because the conditions should be different. Flipping back to `false` is needed for \"desirable service flags\", but not for \"extra block-relay-only peers\" because then this code will be executed more than once:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/1d9da8da309d1dbf9aef15eb8dc43b4a2dc3d309/src/net_processing.cpp#L5268-L5269\r\n\r\nWhich seems innocent, but is confusing and looks like a change that is not needed to fix the problem this PR aims to fix.",
      "created_at": "2023-12-08T10:05:18Z",
      "updated_at": "2023-12-08T11:07:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1420215938",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1420215938"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": 725,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 728,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1420242098",
      "pull_request_review_id": 1769801940,
      "id": 1420242098,
      "node_id": "PRRC_kwDOABII585Upyyy",
      "diff_hunk": "@@ -2039,7 +2076,16 @@ void PeerManagerImpl::NewPoWValidBlock(const CBlockIndex *pindex, const std::sha\n void PeerManagerImpl::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload)\n {\n     SetBestHeight(pindexNew->nHeight);\n-    SetServiceFlagsIBDCache(!fInitialDownload);\n+\n+    // Update internal sync state.\n+    // Avoid using 'fInitialDownload' alone since the flag currently cannot go backwards after passing IBD once.\n+    // This means that, after completing sync for the first time, 'fInitialDownload' will remain true even\n+    // when the node has been stalled for days and the arriving block is within the IBD window.\n+    if (!fInitialDownload && IsBlockCloseToTip(pindexNew, m_chainparams.GetConsensus())) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 118,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "afc29b15e262b4ff402d479ec77ab8507552bcbc",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Seems like `!fInitialDownload && ` can be removed? If `IsBlockCloseToTip()` is `true` then that block is 3h20min or younger. In this case `fInitialDownload` will always be `false` because it uses 24h, right?",
      "created_at": "2023-12-08T10:26:41Z",
      "updated_at": "2023-12-08T11:07:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1420242098",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1420242098"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2084,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1420254312",
      "pull_request_review_id": 1769801940,
      "id": 1420254312,
      "node_id": "PRRC_kwDOABII585Up1xo",
      "diff_hunk": "@@ -2039,7 +2076,16 @@ void PeerManagerImpl::NewPoWValidBlock(const CBlockIndex *pindex, const std::sha\n void PeerManagerImpl::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload)\n {\n     SetBestHeight(pindexNew->nHeight);\n-    SetServiceFlagsIBDCache(!fInitialDownload);\n+\n+    // Update internal sync state.\n+    // Avoid using 'fInitialDownload' alone since the flag currently cannot go backwards after passing IBD once.\n+    // This means that, after completing sync for the first time, 'fInitialDownload' will remain true even\n+    // when the node has been stalled for days and the arriving block is within the IBD window.\n+    if (!fInitialDownload && IsBlockCloseToTip(pindexNew, m_chainparams.GetConsensus())) {\n+        // At this point, only move the flag forward. The responsibility of setting the flag backwards is on\n+        // the 'CheckForStaleTip' process, which performs a more exhaustive stale tip verification.",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 120,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "afc29b15e262b4ff402d479ec77ab8507552bcbc",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I find it confusing to have one condition to set the flag to `true` and a different condition to set it to `false`. I mean this:\r\n\r\n```cpp\r\nif (A) flag = true;\r\nif (B) flag = false;\r\n```\r\nbecause, for example, it may happen that `B` is `true` and the flag is `true` (if the first `if` was not executed yet).\r\n\r\nIn this case it can be simpler:\r\n```cpp\r\nif (C) flag = true;\r\nif (!C) flag = false;\r\n// or just:\r\nflag = C;\r\n```\r\nand C should be just \"our highest block is older than 48h\" (regardless of whether `mapBlocksInFlight` is empty) => then don't connect to limited peers.",
      "created_at": "2023-12-08T10:36:38Z",
      "updated_at": "2023-12-08T11:07:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1420254312",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1420254312"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": 2085,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 2086,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1427973929",
      "pull_request_review_id": 1784007714,
      "id": 1427973929,
      "node_id": "PRRC_kwDOABII585VHScp",
      "diff_hunk": "@@ -110,6 +110,29 @@ class PeerManager : public CValidationInterface, public NetEventsInterface\n \n     /** This function is used for testing the stale tip eviction logic, see denialofservice_tests.cpp */\n     virtual void UpdateLastBlockAnnounceTime(NodeId node, int64_t time_in_seconds) = 0;\n+\n+    /**\n+     * Gets the set of service flags which are \"desirable\" for a given peer.\n+     *\n+     * These are the flags which are required for a peer to support for them\n+     * to be \"interesting\" to us, ie for us to wish to use one of our few\n+     * outbound connection slots for or for us to wish to prioritize keeping\n+     * their connection around.\n+     *\n+     * Relevant service flags may be peer- and state-specific in that the\n+     * version of the peer may determine which flags are required (eg in the\n+     * case of NODE_NETWORK_LIMITED where we seek out NODE_NETWORK peers\n+     * unless they set NODE_NETWORK_LIMITED and we are out of IBD, in which\n+     * case NODE_NETWORK_LIMITED suffices).",
      "path": "src/net_processing.h",
      "position": 26,
      "original_position": 17,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "afc29b15e262b4ff402d479ec77ab8507552bcbc",
      "in_reply_to_id": 1418751438,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> What is meant by \"the version of the peer\" here?\r\n\r\nIt is talking about the version message. `NetMsgType::VERSION`. Which informs the supported services to the other end.",
      "created_at": "2023-12-15T13:25:52Z",
      "updated_at": "2023-12-15T14:13:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1427973929",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1427973929"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": 122,
      "original_start_line": 122,
      "start_side": "RIGHT",
      "line": 126,
      "original_line": 126,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1427974175",
      "pull_request_review_id": 1784007714,
      "id": 1427974175,
      "node_id": "PRRC_kwDOABII585VHSgf",
      "diff_hunk": "@@ -110,6 +110,29 @@ class PeerManager : public CValidationInterface, public NetEventsInterface\n \n     /** This function is used for testing the stale tip eviction logic, see denialofservice_tests.cpp */\n     virtual void UpdateLastBlockAnnounceTime(NodeId node, int64_t time_in_seconds) = 0;\n+\n+    /**\n+     * Gets the set of service flags which are \"desirable\" for a given peer.\n+     *\n+     * These are the flags which are required for a peer to support for them\n+     * to be \"interesting\" to us, ie for us to wish to use one of our few\n+     * outbound connection slots for or for us to wish to prioritize keeping",
      "path": "src/net_processing.h",
      "position": 19,
      "original_position": 10,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "afc29b15e262b4ff402d479ec77ab8507552bcbc",
      "in_reply_to_id": 1418747776,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "sure",
      "created_at": "2023-12-15T13:26:10Z",
      "updated_at": "2023-12-15T14:13:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1427974175",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1427974175"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 119,
      "original_line": 119,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1428012937",
      "pull_request_review_id": 1784007714,
      "id": 1428012937,
      "node_id": "PRRC_kwDOABII585VHb-J",
      "diff_hunk": "@@ -721,8 +723,9 @@ class PeerManagerImpl final : public PeerManager\n     bool RejectIncomingTxs(const CNode& peer) const;\n \n     /** Whether we've completed initial sync yet, for determining when to turn\n-      * on extra block-relay-only peers. */\n-    bool m_initial_sync_finished GUARDED_BY(cs_main){false};\n+      * on extra block-relay-only peers and the peer connections desirable\n+      * services flags. */\n+    std::atomic<bool> m_is_close_to_tip{false};",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "afc29b15e262b4ff402d479ec77ab8507552bcbc",
      "in_reply_to_id": 1420215938,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "There isn't a behavior change here. `StartExtraBlockRelayPeers()` can only be executed once, then it runs for the entire software lifetime. \r\n\r\nI don't think the base condition is different. Both action paths depend on the proximity to the tip. The extra block-relay-only peers functionality is activated when the node is close to the tip (20 blocks away). And the \"desirable service flags\" is modified on the opposite direction, when the node detect it is further than 288 blocks from the tip.\r\n\r\nI think we should try to consolidate concepts that can be unified instead of continuing adding independent checks for each feature/validation we have.\r\nAdditionally, something that I had floating around my head when I did this was to transform the `m_initial_sync_finished` (now named `m_is_close_to_tip`) into a `SyncState` field with the different states the sync process could have (sync, close to tip, recent_lagging_behind, not sync) and a bool flag field to denote whether the chain is moving forward or not (if there is any in-flight blocks and the last received block is close to the node's clock time etc).",
      "created_at": "2023-12-15T14:06:43Z",
      "updated_at": "2023-12-15T14:13:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1428012937",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1428012937"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": 725,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 728,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1428016068",
      "pull_request_review_id": 1784007714,
      "id": 1428016068,
      "node_id": "PRRC_kwDOABII585VHcvE",
      "diff_hunk": "@@ -1292,19 +1302,32 @@ void PeerManagerImpl::MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid)\n     });\n }\n \n-bool PeerManagerImpl::TipMayBeStale()\n+PeerManagerImpl::Staleness PeerManagerImpl::TipMayBeStale()\n {\n     AssertLockHeld(cs_main);\n     const Consensus::Params& consensusParams = m_chainparams.GetConsensus();\n     if (m_last_tip_update.load() == 0s) {\n         m_last_tip_update = GetTime<std::chrono::seconds>();\n     }\n-    return m_last_tip_update.load() < GetTime<std::chrono::seconds>() - std::chrono::seconds{consensusParams.nPowTargetSpacing * 3} && mapBlocksInFlight.empty();\n+\n+    auto last_update_time = m_last_tip_update.load();\n+    if (last_update_time < GetTime<std::chrono::seconds>() - std::chrono::seconds{consensusParams.nPowTargetSpacing * 3} && mapBlocksInFlight.empty()) {\n+        // If tip is further than NODE_NETWORK_LIMITED_MIN_BLOCKS, we are really behind and shouldn't connect to limited peers anymore.\n+        Assume(NODE_NETWORK_LIMITED_MIN_BLOCKS > 3);\n+        bool past_net_limited = last_update_time < GetTime<std::chrono::seconds>() - std::chrono::seconds{consensusParams.nPowTargetSpacing * NODE_NETWORK_LIMITED_MIN_BLOCKS};\n+        return past_net_limited ? Staleness::StalePastNetworkLimited : Staleness::Stale;\n+    }\n+    return Staleness::NotStale;\n+}\n+\n+static bool IsBlockCloseToTip(const CBlockIndex* index, const Consensus::Params& consensus)\n+{\n+    return index->Time() > GetAdjustedTime() - consensus.PowTargetSpacing() * 20;\n }",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 78,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "afc29b15e262b4ff402d479ec77ab8507552bcbc",
      "in_reply_to_id": 1420201385,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "sure, `IsBlockRecent()` sounds good.",
      "created_at": "2023-12-15T14:09:42Z",
      "updated_at": "2023-12-15T14:13:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1428016068",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1428016068"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": 1323,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1333,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1428018613",
      "pull_request_review_id": 1784007714,
      "id": 1428018613,
      "node_id": "PRRC_kwDOABII585VHdW1",
      "diff_hunk": "@@ -2039,7 +2076,16 @@ void PeerManagerImpl::NewPoWValidBlock(const CBlockIndex *pindex, const std::sha\n void PeerManagerImpl::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload)\n {\n     SetBestHeight(pindexNew->nHeight);\n-    SetServiceFlagsIBDCache(!fInitialDownload);\n+\n+    // Update internal sync state.\n+    // Avoid using 'fInitialDownload' alone since the flag currently cannot go backwards after passing IBD once.\n+    // This means that, after completing sync for the first time, 'fInitialDownload' will remain true even\n+    // when the node has been stalled for days and the arriving block is within the IBD window.\n+    if (!fInitialDownload && IsBlockCloseToTip(pindexNew, m_chainparams.GetConsensus())) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 118,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "afc29b15e262b4ff402d479ec77ab8507552bcbc",
      "in_reply_to_id": 1420242098,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Seems like `!fInitialDownload && ` can be removed? If `IsBlockCloseToTip()` is `true` then that block is 3h20min or younger. In this case `fInitialDownload` will always be `false` because it uses 24h, right?\r\n\r\nIt is a simple and quick check to not execute `IsBlockCloseToTip()` during IBD at all.",
      "created_at": "2023-12-15T14:12:11Z",
      "updated_at": "2023-12-15T14:13:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1428018613",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1428018613"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2084,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1428467257",
      "pull_request_review_id": 1784900600,
      "id": 1428467257,
      "node_id": "PRRC_kwDOABII585VJK45",
      "diff_hunk": "@@ -2039,7 +2076,16 @@ void PeerManagerImpl::NewPoWValidBlock(const CBlockIndex *pindex, const std::sha\n void PeerManagerImpl::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload)\n {\n     SetBestHeight(pindexNew->nHeight);\n-    SetServiceFlagsIBDCache(!fInitialDownload);\n+\n+    // Update internal sync state.\n+    // Avoid using 'fInitialDownload' alone since the flag currently cannot go backwards after passing IBD once.\n+    // This means that, after completing sync for the first time, 'fInitialDownload' will remain true even\n+    // when the node has been stalled for days and the arriving block is within the IBD window.\n+    if (!fInitialDownload && IsBlockCloseToTip(pindexNew, m_chainparams.GetConsensus())) {\n+        // At this point, only move the flag forward. The responsibility of setting the flag backwards is on\n+        // the 'CheckForStaleTip' process, which performs a more exhaustive stale tip verification.",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 120,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "afc29b15e262b4ff402d479ec77ab8507552bcbc",
      "in_reply_to_id": 1420254312,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> and C should be just \"our highest block is older than 48h\" (regardless of whether mapBlocksInFlight is empty) => then don't connect to limited peers.\r\n\r\nHmm, this observation makes me think..\r\nwhat if `m_is_close_to_tip=true` and then the node lags behind; there could be an edge case scenario where the node starts slowly syncing-up the historical blocks before `CheckForStaleTipAndEvictPeers()` is executed, so `mapBlocksInFlight` wouldn't be empty, so.. it would still connect to limited peers even when it is behind what they can provide.\r\nThis is what you have in mind?",
      "created_at": "2023-12-15T20:49:11Z",
      "updated_at": "2023-12-15T20:49:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1428467257",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1428467257"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": 2085,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 2086,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1430198623",
      "pull_request_review_id": 1786984692,
      "id": 1430198623,
      "node_id": "PRRC_kwDOABII585VPxlf",
      "diff_hunk": "@@ -2039,7 +2076,16 @@ void PeerManagerImpl::NewPoWValidBlock(const CBlockIndex *pindex, const std::sha\n void PeerManagerImpl::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload)\n {\n     SetBestHeight(pindexNew->nHeight);\n-    SetServiceFlagsIBDCache(!fInitialDownload);\n+\n+    // Update internal sync state.\n+    // Avoid using 'fInitialDownload' alone since the flag currently cannot go backwards after passing IBD once.\n+    // This means that, after completing sync for the first time, 'fInitialDownload' will remain true even\n+    // when the node has been stalled for days and the arriving block is within the IBD window.\n+    if (!fInitialDownload && IsBlockCloseToTip(pindexNew, m_chainparams.GetConsensus())) {\n+        // At this point, only move the flag forward. The responsibility of setting the flag backwards is on\n+        // the 'CheckForStaleTip' process, which performs a more exhaustive stale tip verification.",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 120,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "afc29b15e262b4ff402d479ec77ab8507552bcbc",
      "in_reply_to_id": 1420254312,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I was just thinking on ways to simplify this. `CheckForStaleTipAndEvictPeers()` is executed every 45 seconds. I think it is ok if for a while (~ 10 mins) we think we are close to the tip but we are not in practice. Given that we realize this in a few minutes and don't get stuck with the wrong assumption forever.",
      "created_at": "2023-12-18T14:15:45Z",
      "updated_at": "2023-12-18T14:15:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1430198623",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1430198623"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": 2085,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 2086,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1430238465",
      "pull_request_review_id": 1787049523,
      "id": 1430238465,
      "node_id": "PRRC_kwDOABII585VP7UB",
      "diff_hunk": "@@ -5235,6 +5244,11 @@ void PeerManagerImpl::CheckForStaleTipAndEvictPeers()\n     if (!m_initial_sync_finished && CanDirectFetch()) {\n         m_connman.StartExtraBlockRelayPeers();\n         m_initial_sync_finished = true;\n+    } else if (super_stale) {\n+        // Disable extra block relay peers and disallow connection to limited peers.\n+        // We need to find a full node that can help us recover.\n+        m_connman.StopExtraBlockRelayPeers();",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 63,
      "commit_id": "fe8e907e9186c0c9008091d4a3dac2f9fdb6b059",
      "original_commit_id": "2325ff03f42606793d3c8f2a97fc73015b9c48dd",
      "in_reply_to_id": 1296355296,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The problem this PR aims to resolve is that if we are too much behind (48h), then limited peers may not be able to give us the blocks we need. To resolve this problem, I think that it is not necessary to change the \"extra block relay only connections\" logic. IMO that better be done in a separate PR with its own justification.",
      "created_at": "2023-12-18T14:47:55Z",
      "updated_at": "2023-12-18T14:47:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28170#discussion_r1430238465",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1430238465"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28170"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5251,
      "side": "RIGHT"
    }
  ]
}