{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30286",
    "id": 1919780807,
    "node_id": "PR_kwDOABII585ybYfH",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/30286",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/30286.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/30286.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30286",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30286/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30286/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30286/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/98fd28fabdbf24e89a63b2b2a7a18cf21e681dbf",
    "number": 30286,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "cluster mempool: optimized candidate search",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Part of cluster mempool: #30289 \r\n\r\nDepends on #30126, and was split off from it.\r\n\r\nThis improves the candidate search algorithm introduced in the previous PR with a variety of optimizations.\r\n\r\nThe resulting search algorithm largely follows Section 2 of [How to linearize your cluster](https://delvingbitcoin.org/t/how-to-linearize-your-cluster/303#h-2-finding-high-feerate-subsets-5), though with a few changes:\r\n* Connected component analysis is performed inside the search algorithm (creating initial work items per component for each candidate), rather than once at a higher level. This duplicates some work but is significantly simpler in implementation.\r\n* No ancestor-set based presplitting inside the search is performed; instead, the `best` value is initialized with the best topologically valid set known to the LIMO algorithm before search starts: the better one out of the highest-feerate remaining ancestor set, and the highest-feerate prefix of remaining transactions in `old_linearization`.\r\n* Work items are represented using an included set *inc* and an undefined set *und*, rather than included and excluded.\r\n* Potential sets *pot* are not computed for work items with empty *inc*.\r\n\r\nAt a high level, the only missing optimization from that post is bottleneck analysis; my thinking is that it only really helps with clusters that are already relatively cheap to linearize (doing so would need to be done at a higher level, not inside the search algorithm).\r\n",
    "labels": [
      {
        "id": 164208572,
        "node_id": "MDU6TGFiZWwxNjQyMDg1NzI=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Mempool",
        "name": "Mempool",
        "color": "fef2c0",
        "default": false
      }
    ],
    "created_at": "2024-06-14T02:16:31Z",
    "updated_at": "2024-08-12T11:40:48Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "9fee16e24a895e836095e9ebdb30210e16c8f81a",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "sipa:202406_clusterlin_opt",
      "ref": "202406_clusterlin_opt",
      "sha": "98fd28fabdbf24e89a63b2b2a7a18cf21e681dbf",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 1458655,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDU4NjU1",
        "name": "bitcoin",
        "full_name": "sipa/bitcoin",
        "owner": {
          "login": "sipa",
          "id": 548488,
          "node_id": "MDQ6VXNlcjU0ODQ4OA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sipa",
          "html_url": "https://github.com/sipa",
          "followers_url": "https://api.github.com/users/sipa/followers",
          "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
          "organizations_url": "https://api.github.com/users/sipa/orgs",
          "repos_url": "https://api.github.com/users/sipa/repos",
          "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/sipa/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/sipa/bitcoin",
        "description": "Bitcoin integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/sipa/bitcoin",
        "archive_url": "https://api.github.com/repos/sipa/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/sipa/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/sipa/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/sipa/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/sipa/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/sipa/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/sipa/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/sipa/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/sipa/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/sipa/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/sipa/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/sipa/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/sipa/bitcoin/events",
        "forks_url": "https://api.github.com/repos/sipa/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/sipa/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/sipa/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/sipa/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/sipa/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/sipa/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/sipa/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/sipa/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/sipa/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/sipa/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/sipa/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/sipa/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/sipa/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/sipa/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/sipa/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/sipa/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:sipa/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/sipa/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/sipa/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/sipa/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/sipa/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/sipa/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/sipa/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/sipa/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/sipa/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/sipa/bitcoin/hooks",
        "svn_url": "https://github.com/sipa/bitcoin",
        "homepage": "http://www.bitcoin.org",
        "language": "TypeScript",
        "forks_count": 22,
        "stargazers_count": 86,
        "watchers_count": 86,
        "size": 244854,
        "default_branch": "lows",
        "open_issues_count": 16,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-08-09T16:42:03Z",
        "created_at": "2011-03-09T10:46:59Z",
        "updated_at": "2024-06-02T01:19:44Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "27a770b34b8f1dbb84760f442edb3e23a0c2420b",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35995,
        "stargazers_count": 77847,
        "watchers_count": 77847,
        "size": 265364,
        "default_branch": "master",
        "open_issues_count": 657,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-08-12T11:52:24Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-08-12T10:48:56Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30286"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 379,
    "deletions": 77,
    "changed_files": 4,
    "commits": 10,
    "review_comments": 44,
    "comments": 5
  },
  "events": [
    {
      "event": "commented",
      "id": 2167086582,
      "node_id": "IC_kwDOABII586BKx32",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2167086582",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-14T02:16:34Z",
      "updated_at": "2024-08-08T05:33:53Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/30286).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [glozow](https://github.com/bitcoin/bitcoin/pull/30286#pullrequestreview-2221566752) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#30605](https://github.com/bitcoin/bitcoin/pull/30605) (Cluster linearization: separate tests from tests-of-tests by sipa)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30286#issuecomment-2167086582",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30286"
    },
    {
      "event": "renamed",
      "id": 13160824632,
      "node_id": "RTE_lADOABII586MNfM5zwAAAAMQcj84",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13160824632",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-14T13:12:25Z",
      "rename": {
        "from": "Low-level cluster linearization code: optimizations",
        "to": "cluster mempool: optimized candidate search"
      }
    },
    {
      "event": "labeled",
      "id": 13160852664,
      "node_id": "LE_lADOABII586MNfM5zwAAAAMQcqy4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13160852664",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-14T13:14:31Z",
      "label": {
        "name": "Mempool",
        "color": "fef2c0"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13371816771,
      "node_id": "HRFPE_lADOABII586MNfM5zwAAAAMdBbtD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13371816771",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-02T21:05:40Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13430168882,
      "node_id": "HRFPE_lADOABII586MNfM5zwAAAAMggB0y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13430168882",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-08T21:28:24Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13462745165,
      "node_id": "HRFPE_lADOABII586MNfM5zwAAAAMicTBN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13462745165",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-10T21:18:50Z"
    },
    {
      "event": "labeled",
      "id": 13463446729,
      "node_id": "LE_lADOABII586MNfM5zwAAAAMie-TJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13463446729",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-10T22:46:02Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2221652361,
      "node_id": "IC_kwDOABII586Ea7mJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2221652361",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-10T22:46:03Z",
      "updated_at": "2024-07-10T22:46:03Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n\n🚧 At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/27292784397</sub>",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30286#issuecomment-2221652361",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30286"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13471067016,
      "node_id": "HRFPE_lADOABII586MNfM5zwAAAAMi8CuI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13471067016",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-11T12:31:55Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13471158065,
      "node_id": "HRFPE_lADOABII586MNfM5zwAAAAMi8Y8x",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13471158065",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-11T12:39:11Z"
    },
    {
      "event": "unlabeled",
      "id": 13473203861,
      "node_id": "UNLE_lADOABII586MNfM5zwAAAAMjEMaV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13473203861",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-11T14:59:24Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13542807415,
      "node_id": "HRFPE_lADOABII586MNfM5zwAAAAMnNtd3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13542807415",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-17T20:37:02Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13579190845,
      "node_id": "HRFPE_lADOABII586MNfM5zwAAAAMpYgI9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13579190845",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-19T17:53:58Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13637251425,
      "node_id": "HRFPE_lADOABII586MNfM5zwAAAAMs1_Fh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13637251425",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-24T23:17:41Z"
    },
    {
      "event": "referenced",
      "id": 13659808898,
      "node_id": "REFE_lADOABII586MNfM5zwAAAAMuMCSC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13659808898",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "37bd70a2253331ffd24650e6536695e7f47a86b0",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/37bd70a2253331ffd24650e6536695e7f47a86b0",
      "created_at": "2024-07-26T11:12:18Z"
    },
    {
      "event": "labeled",
      "id": 13659857373,
      "node_id": "LE_lADOABII586MNfM5zwAAAAMuMOHd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13659857373",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-26T11:17:32Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13660484246,
      "node_id": "HRFPE_lADOABII586MNfM5zwAAAAMuOnKW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13660484246",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-26T12:19:45Z"
    },
    {
      "event": "unlabeled",
      "id": 13661348326,
      "node_id": "UNLE_lADOABII586MNfM5zwAAAAMuR6Hm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13661348326",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-26T13:36:10Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2207305648,
      "node_id": "PRR_kwDOABII586DkM-w",
      "url": null,
      "actor": null,
      "commit_id": "3eb993466b26bcddfd20fe4820d364480e3c3de3",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Did an initial read-through",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30286#pullrequestreview-2207305648",
      "submitted_at": "2024-07-30T15:50:41Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30286"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13701885868,
      "node_id": "HRFPE_lADOABII586MNfM5zwAAAAMwsi-s",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13701885868",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-30T22:09:39Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13755663797,
      "node_id": "HRFPE_lADOABII586MNfM5zwAAAAMz5sW1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13755663797",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-04T17:59:57Z"
    },
    {
      "event": "commented",
      "id": 2267621645,
      "node_id": "IC_kwDOABII586HKSkN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2267621645",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-04T18:00:34Z",
      "updated_at": "2024-08-04T18:00:34Z",
      "author_association": "MEMBER",
      "body": "Rebased on top of #30285 as it looks like that is closer.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30286#issuecomment-2267621645",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30286"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13763136604,
      "node_id": "HRFPE_lADOABII586MNfM5zwAAAAM0WMxc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13763136604",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-05T11:55:08Z"
    },
    {
      "event": "reviewed",
      "id": 2221566752,
      "node_id": "PRR_kwDOABII586Eamsg",
      "url": null,
      "actor": null,
      "commit_id": "400a72b4abef4fd2aca8415d489d9d399f29b63d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "code review ACK. I haven't reviewed the fuzzers yet, doing that next. Tested by writing some benches that run a lot faster with the optimizations.",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30286#pullrequestreview-2221566752",
      "submitted_at": "2024-08-06T16:26:55Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30286"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13781921142,
      "node_id": "HRFPE_lADOABII586MNfM5zwAAAAM1d212",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13781921142",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-06T17:29:54Z"
    },
    {
      "event": "commented",
      "id": 2273780176,
      "node_id": "IC_kwDOABII586HhyHQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2273780176",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-07T15:44:35Z",
      "updated_at": "2024-08-07T16:00:55Z",
      "author_association": "MEMBER",
      "body": "reviewed through https://github.com/bitcoin/bitcoin/pull/30286/commits/06ea1016ff40ebcf3e668bdb993a0747904cb40f\r\n\r\neverything made sense to me except https://github.com/bitcoin/bitcoin/commit/29cac3e85b23f1264121cbd50e4a09755b0c8352",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30286#issuecomment-2273780176",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30286"
    },
    {
      "event": "reviewed",
      "id": 2219685837,
      "node_id": "PRR_kwDOABII586ETbfN",
      "url": null,
      "actor": null,
      "commit_id": "06ea1016ff40ebcf3e668bdb993a0747904cb40f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30286#pullrequestreview-2219685837",
      "submitted_at": "2024-08-07T15:44:43Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30286"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13798208653,
      "node_id": "HRFPE_lADOABII586MNfM5zwAAAAM2b_SN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13798208653",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-07T21:45:19Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13798812225,
      "node_id": "HRFPE_lADOABII586MNfM5zwAAAAM2eSpB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13798812225",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-07T23:32:48Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGNkM2M1YWRjMjE4NGVhYmMwYjQ5ODhiOTdmMWJkZGMwY2VkYjA4NzM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cd3c5adc2184eabc0b4988b97f1bddc0cedb0873",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/cd3c5adc2184eabc0b4988b97f1bddc0cedb0873",
      "tree": {
        "sha": "054d4a760ae88f99103583ac255ebce3a3db1fc3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/054d4a760ae88f99103583ac255ebce3a3db1fc3"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/27a770b34b8f1dbb84760f442edb3e23a0c2420b",
          "sha": "27a770b34b8f1dbb84760f442edb3e23a0c2420b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/27a770b34b8f1dbb84760f442edb3e23a0c2420b"
        }
      ],
      "message": "clusterlin: separate initial search entries per component (optimization)\n\nBefore this commit, the worst case for linearization involves clusters which\nbreak apart in several smaller components after the first candidate is\nincluded in the output linearization.\n\nAddress this by never considering work items that span multiple components\nof what remains of the cluster.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-08-08T02:38:06Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-05-13T20:50:34Z"
      },
      "sha": "cd3c5adc2184eabc0b4988b97f1bddc0cedb0873"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13800398719,
      "node_id": "HRFPE_lADOABII586MNfM5zwAAAAM2kV9_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13800398719",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-08T02:54:29Z"
    },
    {
      "event": "reviewed",
      "id": 2227384818,
      "node_id": "PRR_kwDOABII586EwzHy",
      "url": null,
      "actor": null,
      "commit_id": "f46c0cc3d21c7c55ee077989af09f1d7e20472bc",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30286#pullrequestreview-2227384818",
      "submitted_at": "2024-08-08T09:47:18Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30286"
    },
    {
      "event": "reviewed",
      "id": 2227520975,
      "node_id": "PRR_kwDOABII586ExUXP",
      "url": null,
      "actor": null,
      "commit_id": "f46c0cc3d21c7c55ee077989af09f1d7e20472bc",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30286#pullrequestreview-2227520975",
      "submitted_at": "2024-08-08T14:29:10Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30286"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGM2ZjViOTU1NmNjZTM2Y2JkZmU1NmNlZDQ0MmI1NGRkODQzMjQ2M2M",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c6f5b9556cce36cbdfe56ced442b54dd8432463c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c6f5b9556cce36cbdfe56ced442b54dd8432463c",
      "tree": {
        "sha": "f6311da85b41c67106212728d0add263c21cfdfe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f6311da85b41c67106212728d0add263c21cfdfe"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cd3c5adc2184eabc0b4988b97f1bddc0cedb0873",
          "sha": "cd3c5adc2184eabc0b4988b97f1bddc0cedb0873",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/cd3c5adc2184eabc0b4988b97f1bddc0cedb0873"
        }
      ],
      "message": "clusterlin: add reordering support for DepGraph\n\nAdd a DepGraph(depgraph, reordering) function that constructs a new DepGraph\ncorresponding to an old one, but with its transactions is a modified order\n(given as a vector from old to new positions).\n\nAlso use this reordering feature inside DepGraphFormatter::Unser, which needs\na small modification so that its reordering mapping is old-to-new (rather than\nthe new-to-old it used before).",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-08-09T01:42:52Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-08-09T01:42:28Z"
      },
      "sha": "c6f5b9556cce36cbdfe56ced442b54dd8432463c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGFkNzhkODM5ZDUxOGI5NDI2MTE5NWRlYWUwYWM1MGE5MDE1YzkwOWE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ad78d839d518b94261195deae0ac50a9015c909a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ad78d839d518b94261195deae0ac50a9015c909a",
      "tree": {
        "sha": "d6f563cc092c8d1feec0cbd7f8991b9b2629d926",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d6f563cc092c8d1feec0cbd7f8991b9b2629d926"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c6f5b9556cce36cbdfe56ced442b54dd8432463c",
          "sha": "c6f5b9556cce36cbdfe56ced442b54dd8432463c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c6f5b9556cce36cbdfe56ced442b54dd8432463c"
        }
      ],
      "message": "clusterlin: use feerate-sorted depgraph in SearchCandidateFinder\n\nThis is a requirement for a future commit, which will rely on quickly iterating\nover transaction sets in decreasing individual feerate order.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-08-09T01:45:04Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-08-09T01:42:30Z"
      },
      "sha": "ad78d839d518b94261195deae0ac50a9015c909a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDhkOWRmNjhkMmE4NDkwYmFkY2VkY2ZhZTBjNjcyMTI4MGMwOWM1Njg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8d9df68d2a8490badcedcfae0c6721280c09c568",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8d9df68d2a8490badcedcfae0c6721280c09c568",
      "tree": {
        "sha": "a3933deaa1d226382584a92226ad117c92665d8f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a3933deaa1d226382584a92226ad117c92665d8f"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ad78d839d518b94261195deae0ac50a9015c909a",
          "sha": "ad78d839d518b94261195deae0ac50a9015c909a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ad78d839d518b94261195deae0ac50a9015c909a"
        }
      ],
      "message": "clusterlin: track upper bound potential set for work items (optimization)\n\nIn each work item, keep track of a conservative overestimate of the best\npossible feerate that can be reached from it, and then use these to avoid\nexploring hopeless work items.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-08-09T01:45:04Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-05-09T19:22:49Z"
      },
      "sha": "8d9df68d2a8490badcedcfae0c6721280c09c568"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDc2YWM1YTQ5ODNiMTJhMTAyNzYwZDJlN2MxNDVlY2EyYzhmMDYxYjc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/76ac5a4983b12a102760d2e7c145eca2c8f061b7",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/76ac5a4983b12a102760d2e7c145eca2c8f061b7",
      "tree": {
        "sha": "8971b40fc76c2c746bd4c289f94f0dd35b7abe84",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8971b40fc76c2c746bd4c289f94f0dd35b7abe84"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8d9df68d2a8490badcedcfae0c6721280c09c568",
          "sha": "8d9df68d2a8490badcedcfae0c6721280c09c568",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8d9df68d2a8490badcedcfae0c6721280c09c568"
        }
      ],
      "message": "clusterlin: reduce computation of unnecessary pot sets (optimization)\n\nKeep track of which transactions in the graph have an individual\nfeerate that is better than the best included set so far. Others do not\nneed to be added to the pot set, as they cannot possibly help beating\nbest.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-08-09T01:45:04Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-05-09T18:30:05Z"
      },
      "sha": "76ac5a4983b12a102760d2e7c145eca2c8f061b7"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDBiZjZkZTE1ZWNhZGMxOWIwYWY4M2ZiNTBhMjliYzIxNTA2NWQwZTk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0bf6de15ecadc19b0af83fb50a29bc215065d0e9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/0bf6de15ecadc19b0af83fb50a29bc215065d0e9",
      "tree": {
        "sha": "a8c7ce5b69c637d5a320c6da54b818b09231f522",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a8c7ce5b69c637d5a320c6da54b818b09231f522"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/76ac5a4983b12a102760d2e7c145eca2c8f061b7",
          "sha": "76ac5a4983b12a102760d2e7c145eca2c8f061b7",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/76ac5a4983b12a102760d2e7c145eca2c8f061b7"
        }
      ],
      "message": "clusterlin: include topological pot subsets automatically (optimization)\n\nAutomatically add topologically-valid subsets of the potential set pot\nto inc. It can be proven that these must be part of the best reachable\ntopologically-valid set from that work item.\n\nThis is a crucial optimization that (apparently) reduces the maximum\nnumber of iterations from ~2^(N-1) to ~sqrt(2^N).",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-08-09T01:45:04Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-05-09T17:53:27Z"
      },
      "sha": "0bf6de15ecadc19b0af83fb50a29bc215065d0e9"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGNlYWJmZmRhNWVkYmRiOTk0MmQ4ZDRhYTRiODc3NTk2M2NhOTRjM2U",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ceabffda5edbdb9942d8d4aa4b8775963ca94c3e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ceabffda5edbdb9942d8d4aa4b8775963ca94c3e",
      "tree": {
        "sha": "f2ab303ea1ecdd9de9a36544b047be0b3d332837",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f2ab303ea1ecdd9de9a36544b047be0b3d332837"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0bf6de15ecadc19b0af83fb50a29bc215065d0e9",
          "sha": "0bf6de15ecadc19b0af83fb50a29bc215065d0e9",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0bf6de15ecadc19b0af83fb50a29bc215065d0e9"
        }
      ],
      "message": "clusterlin: improve heuristic to decide split transaction (optimization)\n\nEmpirically, this approach seems to be more efficient in common real-life\nclusters, and does not change the worst case.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-08-09T01:45:04Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-05-09T17:45:38Z"
      },
      "sha": "ceabffda5edbdb9942d8d4aa4b8775963ca94c3e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGM3ZGY0Y2NmMmM3ZThlZmMzY2U4ZDZlNTY1MmJlMjZjNzEwYjVjNTI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c7df4ccf2c7e8efc3ce8d6e5652be26c710b5c52",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c7df4ccf2c7e8efc3ce8d6e5652be26c710b5c52",
      "tree": {
        "sha": "14b83771d0bd5d0d60a85ccbcf266c9b2ef42ea8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/14b83771d0bd5d0d60a85ccbcf266c9b2ef42ea8"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ceabffda5edbdb9942d8d4aa4b8775963ca94c3e",
          "sha": "ceabffda5edbdb9942d8d4aa4b8775963ca94c3e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ceabffda5edbdb9942d8d4aa4b8775963ca94c3e"
        }
      ],
      "message": "clusterlin: avoid recomputing potential set on every split (optimization)\n\nCache the potential set inside work items, and use it as a starting point for\ncomputing the potential sets of the new work items created from it.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-08-09T01:45:04Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-05-09T20:46:48Z"
      },
      "sha": "c7df4ccf2c7e8efc3ce8d6e5652be26c710b5c52"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGFhZTdhYjdkZTY4ZDJlYzY0YTM1NTkyM2ZmMDY5YjM1MjJjNTVkY2E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/aae7ab7de68d2ec64a355923ff069b3522c55dca",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/aae7ab7de68d2ec64a355923ff069b3522c55dca",
      "tree": {
        "sha": "2bbbd8138d1b7d1df1a177c72f913cfb9f59c40b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2bbbd8138d1b7d1df1a177c72f913cfb9f59c40b"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c7df4ccf2c7e8efc3ce8d6e5652be26c710b5c52",
          "sha": "c7df4ccf2c7e8efc3ce8d6e5652be26c710b5c52",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c7df4ccf2c7e8efc3ce8d6e5652be26c710b5c52"
        }
      ],
      "message": "clusterlin: avoid jump ahead in unmodified pot sets (optimization)\n\nIn exclusion branches (where inc does not change, and transactions are only\nremoved from und), the jump ahead optimization cannot find anything to add to\ninc that wasn't possible already. Thus, only do it for inclusion branches, or\nfor transactions that were missing from pot.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-08-09T01:45:04Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-08-08T02:13:53Z"
      },
      "sha": "aae7ab7de68d2ec64a355923ff069b3522c55dca"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDk4ZmQyOGZhYmRiZjI0ZTg5YTYzYjJiMmE3YTE4Y2YyMWU2ODFkYmY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/98fd28fabdbf24e89a63b2b2a7a18cf21e681dbf",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/98fd28fabdbf24e89a63b2b2a7a18cf21e681dbf",
      "tree": {
        "sha": "2635543f3e683cd964bca177ba78a2d600c83982",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2635543f3e683cd964bca177ba78a2d600c83982"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/aae7ab7de68d2ec64a355923ff069b3522c55dca",
          "sha": "aae7ab7de68d2ec64a355923ff069b3522c55dca",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/aae7ab7de68d2ec64a355923ff069b3522c55dca"
        }
      ],
      "message": "clusterlin: only start/use search when enough iterations left",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-08-09T01:45:04Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-07-25T04:13:11Z"
      },
      "sha": "98fd28fabdbf24e89a63b2b2a7a18cf21e681dbf"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13814583533,
      "node_id": "HRFPE_lADOABII586MNfM5zwAAAAM3adDt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13814583533",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-09T01:46:20Z"
    },
    {
      "event": "commented",
      "id": 2277019007,
      "node_id": "IC_kwDOABII586HuI1_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2277019007",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-09T02:13:11Z",
      "updated_at": "2024-08-09T02:13:11Z",
      "author_association": "MEMBER",
      "body": "Unsure where this should live, but I have a Python reimplementation of the depgraph serialization code + mermaid formatter: https://gist.github.com/sipa/822f60db6608a26bb4aae75fd31bcb12",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30286#issuecomment-2277019007",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30286"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1696729657",
      "pull_request_review_id": 2207305648,
      "id": 1696729657,
      "node_id": "PRRC_kwDOABII585lIgo5",
      "diff_hunk": "@@ -817,8 +817,38 @@ class SearchCandidateFinder\n                 if (m_depgraph.FeeRate(first) <= best.feerate) return;\n             }\n \n-            // Pick the first undecided transaction as the one to split on.\n-            const ClusterIndex split = first;\n+            // Decide which transaction to split on. Splitting is how new work items are added, and\n+            // how progress is made. One split transaction is chosen among the queue item's\n+            // undecided ones, and:\n+            // - A work item is (potentially) added with that transaction plus its remaining\n+            //   descendants excluded (removed from the und set).\n+            // - A work item is (potentially) added with that transaction plus its remaining\n+            //   ancestors included (added to the inc set).\n+            //\n+            // To decide what to split, pick among the undecided ancestors of the highest\n+            // individual feerate transaction among the undecided ones the one which reduces the\n+            // search space most:",
      "path": "src/cluster_linearize.h",
      "position": null,
      "original_position": 16,
      "commit_id": "98fd28fabdbf24e89a63b2b2a7a18cf21e681dbf",
      "original_commit_id": "a3ba9c1714b7d74fcb08609500170f8794378fe5",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit in a3ba9c1714b7d74fcb08609500170f8794378fe5, I found this hard to parse\r\n```suggestion\r\n            // To decide what to split, consider the undecided ancestors of the highest\r\n            // individual feerate undecided transaction. Pick the one which reduces the\r\n            // search space most:\r\n```",
      "created_at": "2024-07-30T10:30:20Z",
      "updated_at": "2024-07-30T15:50:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30286#discussion_r1696729657",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1696729657"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30286"
        }
      },
      "start_line": null,
      "original_start_line": 828,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 859,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1696730466",
      "pull_request_review_id": 2207305648,
      "id": 1696730466,
      "node_id": "PRRC_kwDOABII585lIg1i",
      "diff_hunk": "@@ -817,8 +817,38 @@ class SearchCandidateFinder\n                 if (m_depgraph.FeeRate(first) <= best.feerate) return;\n             }\n \n-            // Pick the first undecided transaction as the one to split on.\n-            const ClusterIndex split = first;\n+            // Decide which transaction to split on. Splitting is how new work items are added, and\n+            // how progress is made. One split transaction is chosen among the queue item's\n+            // undecided ones, and:\n+            // - A work item is (potentially) added with that transaction plus its remaining\n+            //   descendants excluded (removed from the und set).\n+            // - A work item is (potentially) added with that transaction plus its remaining\n+            //   ancestors included (added to the inc set).\n+            //\n+            // To decide what to split, pick among the undecided ancestors of the highest\n+            // individual feerate transaction among the undecided ones the one which reduces the\n+            // search space most:",
      "path": "src/cluster_linearize.h",
      "position": null,
      "original_position": 16,
      "commit_id": "98fd28fabdbf24e89a63b2b2a7a18cf21e681dbf",
      "original_commit_id": "a3ba9c1714b7d74fcb08609500170f8794378fe5",
      "in_reply_to_id": 1696729657,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit in commit message: s/emperically/empirically",
      "created_at": "2024-07-30T10:31:04Z",
      "updated_at": "2024-07-30T15:50:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30286#discussion_r1696730466",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1696730466"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30286"
        }
      },
      "start_line": null,
      "original_start_line": 828,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 859,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1696776855",
      "pull_request_review_id": 2207305648,
      "id": 1696776855,
      "node_id": "PRRC_kwDOABII585lIsKX",
      "diff_hunk": "@@ -171,6 +171,45 @@ class DepGraph\n         return ret;\n     }\n \n+    /** Find some connected component within the subset \"todo\" of this graph.\n+     *\n+     * Complexity: O(ret.Count()).\n+     */\n+    SetType FindConnectedComponent(const SetType& todo) const noexcept\n+    {\n+        if (todo.None()) return todo;\n+        auto first = todo.First();\n+        SetType ret = Descendants(first) | Ancestors(first);\n+        ret &= todo;\n+        SetType to_add = ret;\n+        to_add.Reset(first);",
      "path": "src/cluster_linearize.h",
      "position": null,
      "original_position": 15,
      "commit_id": "98fd28fabdbf24e89a63b2b2a7a18cf21e681dbf",
      "original_commit_id": "9e154b0eea2c1409a38cc02e742e1e2320947495",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "9e154b0eea2c1409a38cc02e742e1e2320947495\r\n\r\nWould it be cleaner to not do the first iteration outside the loop?\r\n```suggestion\r\n        SetType ret;\r\n        SetType to_add = Singleton(todo.First());\r\n```",
      "created_at": "2024-07-30T11:09:31Z",
      "updated_at": "2024-07-30T15:50:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30286#discussion_r1696776855",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1696776855"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30286"
        }
      },
      "start_line": null,
      "original_start_line": 181,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 185,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1697074917",
      "pull_request_review_id": 2207305648,
      "id": 1697074917,
      "node_id": "PRRC_kwDOABII585lJ07l",
      "diff_hunk": "@@ -171,6 +171,45 @@ class DepGraph\n         return ret;\n     }\n \n+    /** Find some connected component within the subset \"todo\" of this graph.",
      "path": "src/cluster_linearize.h",
      "position": null,
      "original_position": 4,
      "commit_id": "98fd28fabdbf24e89a63b2b2a7a18cf21e681dbf",
      "original_commit_id": "9e154b0eea2c1409a38cc02e742e1e2320947495",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: maybe add \"Specifically, all of the transactions connected to the first element of todo.\"",
      "created_at": "2024-07-30T14:30:20Z",
      "updated_at": "2024-07-30T15:50:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30286#discussion_r1697074917",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1697074917"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 198,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1697165641",
      "pull_request_review_id": 2207305648,
      "id": 1697165641,
      "node_id": "PRRC_kwDOABII585lKLFJ",
      "diff_hunk": "@@ -711,8 +721,11 @@ class SearchCandidateFinder\n              *  pot_feerate. It starts off equal to inc. */\n             auto pot = inc;\n             if (!inc.feerate.IsEmpty()) {\n-                // Add entries to pot.\n-                for (auto pos : und) {\n+                // Add entries to pot. We iterate over all undecided transactions whose feerate is\n+                // higher than best. While undecided transactions of lower feerate may improve pot\n+                // still, if they do, the resulting pot feerate cannot possibly exceed best's (and",
      "path": "src/cluster_linearize.h",
      "position": null,
      "original_position": 37,
      "commit_id": "98fd28fabdbf24e89a63b2b2a7a18cf21e681dbf",
      "original_commit_id": "fbb988a6128b859b204299357cb6bb4133f83e25",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "fbb988a6128b859b204299357cb6bb4133f83e25, are there some extra words?\r\n```suggestion\r\n                // higher than best. While undecided transactions of lower feerate may improve pot,\r\n                // the resulting pot feerate cannot possibly exceed best's (and\r\n```",
      "created_at": "2024-07-30T15:26:27Z",
      "updated_at": "2024-07-30T15:50:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30286#discussion_r1697165641",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1697165641"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30286"
        }
      },
      "start_line": null,
      "original_start_line": 725,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 726,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1697199304",
      "pull_request_review_id": 2207305648,
      "id": 1697199304,
      "node_id": "PRRC_kwDOABII585lKTTI",
      "diff_hunk": "@@ -966,10 +972,18 @@ std::pair<std::vector<ClusterIndex>, bool> Linearize(const DepGraph<SetType>& de\n     std::vector<ClusterIndex> linearization;\n \n     AncestorCandidateFinder anc_finder(depgraph);\n-    SearchCandidateFinder src_finder(depgraph, rng_seed);\n+    std::optional<SearchCandidateFinder<SetType>> src_finder;\n     linearization.reserve(depgraph.TxCount());\n     bool optimal = true;\n \n+    // Treat the initialization of SearchCandidateFinder as taking N^2/64 (rounded up) iterations.\n+    // If we don't have that many, don't start it.\n+    uint64_t start_iterations = (uint64_t{depgraph.TxCount()} * depgraph.TxCount() + 63) / 64;",
      "path": "src/cluster_linearize.h",
      "position": null,
      "original_position": 24,
      "commit_id": "98fd28fabdbf24e89a63b2b2a7a18cf21e681dbf",
      "original_commit_id": "3eb993466b26bcddfd20fe4820d364480e3c3de3",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is the idea that, if we have fewer than n^2/64, we can pretty much expect `SearchCandidateFinder` to not make any meaningful progress?",
      "created_at": "2024-07-30T15:49:03Z",
      "updated_at": "2024-07-30T15:50:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30286#discussion_r1697199304",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1697199304"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30286"
        }
      },
      "start_line": null,
      "original_start_line": 979,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 998,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1697662516",
      "pull_request_review_id": 2208802730,
      "id": 1697662516,
      "node_id": "PRRC_kwDOABII585lMEY0",
      "diff_hunk": "@@ -171,6 +171,45 @@ class DepGraph\n         return ret;\n     }\n \n+    /** Find some connected component within the subset \"todo\" of this graph.\n+     *\n+     * Complexity: O(ret.Count()).\n+     */\n+    SetType FindConnectedComponent(const SetType& todo) const noexcept\n+    {\n+        if (todo.None()) return todo;\n+        auto first = todo.First();\n+        SetType ret = Descendants(first) | Ancestors(first);\n+        ret &= todo;\n+        SetType to_add = ret;\n+        to_add.Reset(first);",
      "path": "src/cluster_linearize.h",
      "position": null,
      "original_position": 15,
      "commit_id": "98fd28fabdbf24e89a63b2b2a7a18cf21e681dbf",
      "original_commit_id": "9e154b0eea2c1409a38cc02e742e1e2320947495",
      "in_reply_to_id": 1696776855,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It's certainly cleaner. It's perhaps also a bit slower, but probably not measurably so. Done.",
      "created_at": "2024-07-30T22:14:16Z",
      "updated_at": "2024-07-30T22:14:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30286#discussion_r1697662516",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1697662516"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30286"
        }
      },
      "start_line": null,
      "original_start_line": 181,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 185,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1697664551",
      "pull_request_review_id": 2208805698,
      "id": 1697664551,
      "node_id": "PRRC_kwDOABII585lME4n",
      "diff_hunk": "@@ -966,10 +972,18 @@ std::pair<std::vector<ClusterIndex>, bool> Linearize(const DepGraph<SetType>& de\n     std::vector<ClusterIndex> linearization;\n \n     AncestorCandidateFinder anc_finder(depgraph);\n-    SearchCandidateFinder src_finder(depgraph, rng_seed);\n+    std::optional<SearchCandidateFinder<SetType>> src_finder;\n     linearization.reserve(depgraph.TxCount());\n     bool optimal = true;\n \n+    // Treat the initialization of SearchCandidateFinder as taking N^2/64 (rounded up) iterations.\n+    // If we don't have that many, don't start it.\n+    uint64_t start_iterations = (uint64_t{depgraph.TxCount()} * depgraph.TxCount() + 63) / 64;",
      "path": "src/cluster_linearize.h",
      "position": null,
      "original_position": 24,
      "commit_id": "98fd28fabdbf24e89a63b2b2a7a18cf21e681dbf",
      "original_commit_id": "3eb993466b26bcddfd20fe4820d364480e3c3de3",
      "in_reply_to_id": 1697199304,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "No, it's trying to use \"iterations\" as a generic metric for computation time, and benchmarks show that n^2/64 times the time per iteration is roughly what just constructing the search object can take.\r\n\r\nThe real purpose here is that if you pass in `iterations=0`, the code won't bother performing a relatively costly initialization of a search object if it's not going to be used. But that's then generalized a bit to also skip it if doing so would cost more than the time spent proportionally on the number of iterations you asked for.",
      "created_at": "2024-07-30T22:17:07Z",
      "updated_at": "2024-07-30T22:17:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30286#discussion_r1697664551",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1697664551"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30286"
        }
      },
      "start_line": null,
      "original_start_line": 979,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 998,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698314082",
      "pull_request_review_id": 2209838536,
      "id": 1698314082,
      "node_id": "PRRC_kwDOABII585lOjdi",
      "diff_hunk": "@@ -966,10 +972,18 @@ std::pair<std::vector<ClusterIndex>, bool> Linearize(const DepGraph<SetType>& de\n     std::vector<ClusterIndex> linearization;\n \n     AncestorCandidateFinder anc_finder(depgraph);\n-    SearchCandidateFinder src_finder(depgraph, rng_seed);\n+    std::optional<SearchCandidateFinder<SetType>> src_finder;\n     linearization.reserve(depgraph.TxCount());\n     bool optimal = true;\n \n+    // Treat the initialization of SearchCandidateFinder as taking N^2/64 (rounded up) iterations.\n+    // If we don't have that many, don't start it.\n+    uint64_t start_iterations = (uint64_t{depgraph.TxCount()} * depgraph.TxCount() + 63) / 64;",
      "path": "src/cluster_linearize.h",
      "position": null,
      "original_position": 24,
      "commit_id": "98fd28fabdbf24e89a63b2b2a7a18cf21e681dbf",
      "original_commit_id": "3eb993466b26bcddfd20fe4820d364480e3c3de3",
      "in_reply_to_id": 1697199304,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ahh I see, thanks",
      "created_at": "2024-07-31T10:56:24Z",
      "updated_at": "2024-07-31T10:56:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30286#discussion_r1698314082",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698314082"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30286"
        }
      },
      "start_line": null,
      "original_start_line": 979,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 998,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1704001510",
      "pull_request_review_id": 2218800971,
      "id": 1704001510,
      "node_id": "PRRC_kwDOABII585lkP_m",
      "diff_hunk": "@@ -711,8 +721,11 @@ class SearchCandidateFinder\n              *  pot_feerate. It starts off equal to inc. */\n             auto pot = inc;\n             if (!inc.feerate.IsEmpty()) {\n-                // Add entries to pot.\n-                for (auto pos : und) {\n+                // Add entries to pot. We iterate over all undecided transactions whose feerate is\n+                // higher than best. While undecided transactions of lower feerate may improve pot\n+                // still, if they do, the resulting pot feerate cannot possibly exceed best's (and",
      "path": "src/cluster_linearize.h",
      "position": null,
      "original_position": 37,
      "commit_id": "98fd28fabdbf24e89a63b2b2a7a18cf21e681dbf",
      "original_commit_id": "fbb988a6128b859b204299357cb6bb4133f83e25",
      "in_reply_to_id": 1697165641,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2024-08-05T11:55:12Z",
      "updated_at": "2024-08-05T11:55:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30286#discussion_r1704001510",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1704001510"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30286"
        }
      },
      "start_line": null,
      "original_start_line": 725,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 726,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1704001736",
      "pull_request_review_id": 2218801370,
      "id": 1704001736,
      "node_id": "PRRC_kwDOABII585lkQDI",
      "diff_hunk": "@@ -171,6 +171,45 @@ class DepGraph\n         return ret;\n     }\n \n+    /** Find some connected component within the subset \"todo\" of this graph.",
      "path": "src/cluster_linearize.h",
      "position": null,
      "original_position": 4,
      "commit_id": "98fd28fabdbf24e89a63b2b2a7a18cf21e681dbf",
      "original_commit_id": "9e154b0eea2c1409a38cc02e742e1e2320947495",
      "in_reply_to_id": 1697074917,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done (in #30285 already).",
      "created_at": "2024-08-05T11:55:27Z",
      "updated_at": "2024-08-05T11:55:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30286#discussion_r1704001736",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1704001736"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 198,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1704001843",
      "pull_request_review_id": 2218801559,
      "id": 1704001843,
      "node_id": "PRRC_kwDOABII585lkQEz",
      "diff_hunk": "@@ -817,8 +817,38 @@ class SearchCandidateFinder\n                 if (m_depgraph.FeeRate(first) <= best.feerate) return;\n             }\n \n-            // Pick the first undecided transaction as the one to split on.\n-            const ClusterIndex split = first;\n+            // Decide which transaction to split on. Splitting is how new work items are added, and\n+            // how progress is made. One split transaction is chosen among the queue item's\n+            // undecided ones, and:\n+            // - A work item is (potentially) added with that transaction plus its remaining\n+            //   descendants excluded (removed from the und set).\n+            // - A work item is (potentially) added with that transaction plus its remaining\n+            //   ancestors included (added to the inc set).\n+            //\n+            // To decide what to split, pick among the undecided ancestors of the highest\n+            // individual feerate transaction among the undecided ones the one which reduces the\n+            // search space most:",
      "path": "src/cluster_linearize.h",
      "position": null,
      "original_position": 16,
      "commit_id": "98fd28fabdbf24e89a63b2b2a7a18cf21e681dbf",
      "original_commit_id": "a3ba9c1714b7d74fcb08609500170f8794378fe5",
      "in_reply_to_id": 1696729657,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2024-08-05T11:55:33Z",
      "updated_at": "2024-08-05T11:55:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30286#discussion_r1704001843",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1704001843"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30286"
        }
      },
      "start_line": null,
      "original_start_line": 828,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 859,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1704526813",
      "pull_request_review_id": 2219685837,
      "id": 1704526813,
      "node_id": "PRRC_kwDOABII585lmQPd",
      "diff_hunk": "@@ -513,9 +548,11 @@ FUZZ_TARGET(clusterlin_search_finder)\n             assert(found.transactions.IsSupersetOf(depgraph.Ancestors(i) & todo));\n         }\n \n-        // At most 2^N-1 iterations can be required: the number of non-empty subsets a graph with N\n-        // transactions has.\n-        assert(iterations_done <= ((uint64_t{1} << todo.Count()) - 1));\n+        // At most 2^(N-1) iterations can be required: the maximum number of topological subsets a",
      "path": "src/test/fuzz/cluster_linearize.cpp",
      "position": null,
      "original_position": 72,
      "commit_id": "98fd28fabdbf24e89a63b2b2a7a18cf21e681dbf",
      "original_commit_id": "5fddd456b11727ac3f1b8aca6780aa965f1e268b",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "*non-empty* topological subsets?",
      "created_at": "2024-08-05T19:08:18Z",
      "updated_at": "2024-08-07T15:44:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30286#discussion_r1704526813",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1704526813"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 551,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705666485",
      "pull_request_review_id": 2219685837,
      "id": 1705666485,
      "node_id": "PRRC_kwDOABII585lqme1",
      "diff_hunk": "@@ -541,23 +563,61 @@ class SearchCandidateFinder\n {\n     /** Internal RNG. */\n     InsecureRandomContext m_rng;\n-    /** Internal dependency graph for the cluster. */\n-    const DepGraph<SetType>& m_depgraph;\n-    /** Which transactions are left to do (sorted indices). */\n+    /** m_sorted_to_original[i] is the original position that sorted transaction position i had. */\n+    std::vector<ClusterIndex> m_sorted_to_original;\n+    /** m_original_to_sorted[i] is the sorted position original transaction position i has. */\n+    std::vector<ClusterIndex> m_original_to_sorted;\n+    /** Internal dependency graph for the cluster (with transactions in decreasing individual\n+     *  feerate order). */\n+    DepGraph<SetType> m_depgraph;\n+    /** Which transactions are left to do (indices in m_depgraph's sorted order). */\n     SetType m_todo;\n \n+    /** Given a set of transactions with sorted indices, get their original indices. */\n+    SetType SortedToOriginal(const SetType& arg) const noexcept\n+    {\n+        SetType ret;\n+        for (auto pos : arg) ret.Set(m_sorted_to_original[pos]);\n+        return ret;\n+    }\n+\n+    /** Given a set of transactions with original indices, get their sorted indices. */\n+    SetType OriginalToSorted(const SetType& arg) const noexcept\n+    {\n+        SetType ret;\n+        for (auto pos : arg) ret.Set(m_original_to_sorted[pos]);\n+        return ret;\n+    }\n+\n public:\n     /** Construct a candidate finder for a graph.\n      *\n      * @param[in] depgraph   Dependency graph for the to-be-linearized cluster.\n      * @param[in] rng_seed   A random seed to control the search order.\n      *\n-     * Complexity: O(1).\n+     * Complexity: O(N^2) where N=depgraph.Count().\n      */\n-    SearchCandidateFinder(const DepGraph<SetType>& depgraph LIFETIMEBOUND, uint64_t rng_seed) noexcept :\n+    SearchCandidateFinder(const DepGraph<SetType>& depgraph, uint64_t rng_seed) noexcept :\n         m_rng(rng_seed),\n-        m_depgraph(depgraph),\n-        m_todo(SetType::Fill(depgraph.TxCount())) {}\n+        m_sorted_to_original(depgraph.TxCount()),\n+        m_original_to_sorted(depgraph.TxCount())\n+    {\n+        // Determine reordering mapping, by sorting by decreasing feerate.\n+        std::iota(m_sorted_to_original.begin(), m_sorted_to_original.end(), ClusterIndex{0});\n+        std::sort(m_sorted_to_original.begin(), m_sorted_to_original.end(), [&](auto a, auto b) {\n+            auto feerate_cmp = depgraph.FeeRate(a) <=> depgraph.FeeRate(b);\n+            if (feerate_cmp == 0) return a < b;\n+            return feerate_cmp > 0;\n+        });\n+        // Compute reverse mapping.\n+        for (ClusterIndex i = 0; i < depgraph.TxCount(); ++i) {\n+            m_original_to_sorted[m_sorted_to_original[i]] = i;\n+        }\n+        // Compute reordered dependency graph.\n+        m_depgraph = DepGraph(depgraph, m_original_to_sorted);\n+        // Set todo to the entire graph.\n+        m_todo = SetType::Fill(depgraph.TxCount());",
      "path": "src/cluster_linearize.h",
      "position": null,
      "original_position": 93,
      "commit_id": "98fd28fabdbf24e89a63b2b2a7a18cf21e681dbf",
      "original_commit_id": "4e7ff15ce48d705b260fdfba5d600b0186846dca",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "move of `m_todo` instantiation seems like a no-op?",
      "created_at": "2024-08-06T14:41:43Z",
      "updated_at": "2024-08-07T15:44:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30286#discussion_r1705666485",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705666485"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 619,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705696515",
      "pull_request_review_id": 2221566752,
      "id": 1705696515,
      "node_id": "PRRC_kwDOABII585lqt0D",
      "diff_hunk": "@@ -987,12 +1001,21 @@ std::pair<std::vector<ClusterIndex>, bool> Linearize(const DepGraph<SetType>& de\n         auto best = anc_finder.FindCandidateSet();\n         if (!best_prefix.feerate.IsEmpty() && best_prefix.feerate >= best.feerate) best = best_prefix;\n \n-        // Invoke bounded search to update best, with up to half of our remaining iterations as\n-        // limit.\n-        uint64_t max_iterations_now = (iterations_left + 1) / 2;\n         uint64_t iterations_done_now = 0;\n-        std::tie(best, iterations_done_now) = src_finder.FindCandidateSet(max_iterations_now, best);\n-        iterations_left -= iterations_done_now;\n+        uint64_t max_iterations_now = 0;\n+        if (src_finder) {\n+            // Treat the invocation of SearchCandidateFinder::FindCandidateSet() as costing N/4\n+            // iterations (rounded up).\n+            uint64_t base_iterations = (anc_finder.NumRemaining() + 3) / 4;\n+            if (iterations_left > base_iterations) {\n+                // Invoke bounded search to update best, with up to half of our remaining\n+                // iterations as limit.\n+                iterations_left -= base_iterations;\n+                max_iterations_now = (iterations_left + 1) / 2;\n+                std::tie(best, iterations_done_now) = src_finder->FindCandidateSet(max_iterations_now, best);\n+                iterations_left -= iterations_done_now;",
      "path": "src/cluster_linearize.h",
      "position": 479,
      "original_position": 54,
      "commit_id": "98fd28fabdbf24e89a63b2b2a7a18cf21e681dbf",
      "original_commit_id": "400a72b4abef4fd2aca8415d489d9d399f29b63d",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Since we're subtracting both `base_iterations` (the N/4 estimate) and `iterations_done_now` from `iterations_left`, is the idea that `base_iterations` incorporates the computational overhead beyond the splitting operations?",
      "created_at": "2024-08-06T14:59:59Z",
      "updated_at": "2024-08-06T16:26:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30286#discussion_r1705696515",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705696515"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30286"
        }
      },
      "start_line": 1026,
      "original_start_line": 1013,
      "start_side": "RIGHT",
      "line": 1029,
      "original_line": 1029,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705727595",
      "pull_request_review_id": 2221566752,
      "id": 1705727595,
      "node_id": "PRRC_kwDOABII585lq1Zr",
      "diff_hunk": "@@ -824,8 +824,37 @@ class SearchCandidateFinder\n                 if (m_depgraph.FeeRate(first) <= best.feerate) return;\n             }\n \n-            // Pick the first undecided transaction as the one to split on.\n-            const ClusterIndex split = first;\n+            // Decide which transaction to split on. Splitting is how new work items are added, and\n+            // how progress is made. One split transaction is chosen among the queue item's\n+            // undecided ones, and:\n+            // - A work item is (potentially) added with that transaction plus its remaining\n+            //   descendants excluded (removed from the und set).\n+            // - A work item is (potentially) added with that transaction plus its remaining\n+            //   ancestors included (added to the inc set).\n+            //\n+            // To decide what to split on, consider the undecided ancestors of the highest\n+            // individual feerate undecided transaction. Pick the one which reduces the search space\n+            // most. Let I(t) be the size of the undecided set after including t, and E(t) the size\n+            // of the undecided set after excluding t. Then choose the split transaction t such\n+            // that 2^I(t) + 2^E(t) is minimal, tie-breaking by highest individual feerate for t.",
      "path": "src/cluster_linearize.h",
      "position": 359,
      "original_position": 18,
      "commit_id": "98fd28fabdbf24e89a63b2b2a7a18cf21e681dbf",
      "original_commit_id": "a88207c4eedda1c5455e187f0a91a619e60e9d9e",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Wow, cool way to convey pair comparison",
      "created_at": "2024-08-06T15:19:50Z",
      "updated_at": "2024-08-06T16:26:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30286#discussion_r1705727595",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705727595"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 866,
      "original_line": 866,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705747742",
      "pull_request_review_id": 2219685837,
      "id": 1705747742,
      "node_id": "PRRC_kwDOABII585lq6Ue",
      "diff_hunk": "@@ -118,6 +118,28 @@ class DepGraph\n         }\n     }\n \n+    /** Construct a DepGraph object given another DepGraph and a mapping from old to new.\n+     *\n+     * Complexity: O(N^2) where N=depgraph.TxCount().\n+     */\n+    DepGraph(const DepGraph<SetType>& depgraph, Span<const ClusterIndex> mapping) noexcept : entries(depgraph.TxCount())",
      "path": "src/cluster_linearize.h",
      "position": 8,
      "original_position": 8,
      "commit_id": "98fd28fabdbf24e89a63b2b2a7a18cf21e681dbf",
      "original_commit_id": "4e7ff15ce48d705b260fdfba5d600b0186846dca",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think this can be used with DepGraphFormatter during `Unser` with reversed `reordering`",
      "created_at": "2024-08-06T15:33:53Z",
      "updated_at": "2024-08-07T15:44:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30286#discussion_r1705747742",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705747742"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 125,
      "original_line": 125,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705762087",
      "pull_request_review_id": 2221566752,
      "id": 1705762087,
      "node_id": "PRRC_kwDOABII585lq90n",
      "diff_hunk": "@@ -613,11 +613,20 @@ class SearchCandidateFinder\n         VecDeque<WorkItem> queue;\n         queue.reserve(std::max<size_t>(256, 2 * m_todo.Count()));\n \n-        // Create an initial entry with m_todo as undecided. Also use it as best if not provided,\n-        // so that during the work processing loop below, and during the add_fn/split_fn calls, we\n-        // do not need to deal with the best=empty case.\n-        if (best.feerate.IsEmpty()) best = SetInfo(m_depgraph, m_todo);\n-        queue.emplace_back(SetInfo<SetType>{}, SetType{m_todo});\n+        // Create initial entries per connected component of m_todo. While clusters themselves are\n+        // generally connected, this is not necessarily true after some parts have already been\n+        // removed from m_todo. Without this, effort can be wasted on searching \"inc\" sets that\n+        // span multiple components.\n+        auto to_cover = m_todo;\n+        do {\n+            auto component = m_depgraph.FindConnectedComponent(to_cover);\n+            to_cover -= component;\n+            // If best is not provided, set it to the first component, so that during the work\n+            // processing loop below, and during the add_fn/split_fn calls, we do not need to deal\n+            // with the best=empty case.\n+            if (best.feerate.IsEmpty()) best = SetInfo(m_depgraph, component);",
      "path": "src/cluster_linearize.h",
      "position": 201,
      "original_position": 20,
      "commit_id": "98fd28fabdbf24e89a63b2b2a7a18cf21e681dbf",
      "original_commit_id": "5fddd456b11727ac3f1b8aca6780aa965f1e268b",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Would it make sense to use `if (best.feerate.IsEmpty() || best.feerate << m_depgraph.feerate(component)`? We set `imp` based on this afterward, and it seems like it could help it start smaller.",
      "created_at": "2024-08-06T15:44:00Z",
      "updated_at": "2024-08-06T16:26:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30286#discussion_r1705762087",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705762087"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 716,
      "original_line": 716,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705789091",
      "pull_request_review_id": 2219685837,
      "id": 1705789091,
      "node_id": "PRRC_kwDOABII585lrEaj",
      "diff_hunk": "@@ -688,7 +701,7 @@ class SearchCandidateFinder\n             // processing loop below, and during the add_fn/split_fn calls, we do not need to deal\n             // with the best=empty case.\n             if (best.feerate.IsEmpty()) best = SetInfo(m_depgraph, component);\n-            queue.emplace_back(SetInfo<SetType>{}, std::move(component));\n+            queue.emplace_back(SetInfo<SetType>{}, std::move(component), FeeFrac{});",
      "path": "src/cluster_linearize.h",
      "position": null,
      "original_position": 44,
      "commit_id": "98fd28fabdbf24e89a63b2b2a7a18cf21e681dbf",
      "original_commit_id": "4e63e0a9512c7c8a2a11fae383ddc26b3b9790fd",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I do realize the argument changes later, so maybe this just on the later commit \r\n```Suggestion\r\n            queue.emplace_back(/*inc=*/SetInfo<SetType>{}, /*und=*/std::move(component), /*pot_feerate=*/FeeFrac{});\r\n```",
      "created_at": "2024-08-06T16:02:52Z",
      "updated_at": "2024-08-07T15:44:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30286#discussion_r1705789091",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705789091"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 704,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705890739",
      "pull_request_review_id": 2221883694,
      "id": 1705890739,
      "node_id": "PRRC_kwDOABII585lrdOz",
      "diff_hunk": "@@ -987,12 +1001,21 @@ std::pair<std::vector<ClusterIndex>, bool> Linearize(const DepGraph<SetType>& de\n         auto best = anc_finder.FindCandidateSet();\n         if (!best_prefix.feerate.IsEmpty() && best_prefix.feerate >= best.feerate) best = best_prefix;\n \n-        // Invoke bounded search to update best, with up to half of our remaining iterations as\n-        // limit.\n-        uint64_t max_iterations_now = (iterations_left + 1) / 2;\n         uint64_t iterations_done_now = 0;\n-        std::tie(best, iterations_done_now) = src_finder.FindCandidateSet(max_iterations_now, best);\n-        iterations_left -= iterations_done_now;\n+        uint64_t max_iterations_now = 0;\n+        if (src_finder) {\n+            // Treat the invocation of SearchCandidateFinder::FindCandidateSet() as costing N/4\n+            // iterations (rounded up).\n+            uint64_t base_iterations = (anc_finder.NumRemaining() + 3) / 4;\n+            if (iterations_left > base_iterations) {\n+                // Invoke bounded search to update best, with up to half of our remaining\n+                // iterations as limit.\n+                iterations_left -= base_iterations;\n+                max_iterations_now = (iterations_left + 1) / 2;\n+                std::tie(best, iterations_done_now) = src_finder->FindCandidateSet(max_iterations_now, best);\n+                iterations_left -= iterations_done_now;",
      "path": "src/cluster_linearize.h",
      "position": 479,
      "original_position": 54,
      "commit_id": "98fd28fabdbf24e89a63b2b2a7a18cf21e681dbf",
      "original_commit_id": "400a72b4abef4fd2aca8415d489d9d399f29b63d",
      "in_reply_to_id": 1705696515,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Indeed; largely due to the connected-component splitting. I've expanded the comments a bit.",
      "created_at": "2024-08-06T17:30:13Z",
      "updated_at": "2024-08-06T17:30:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30286#discussion_r1705890739",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705890739"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30286"
        }
      },
      "start_line": 1026,
      "original_start_line": 1013,
      "start_side": "RIGHT",
      "line": 1029,
      "original_line": 1029,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705892110",
      "pull_request_review_id": 2221886288,
      "id": 1705892110,
      "node_id": "PRRC_kwDOABII585lrdkO",
      "diff_hunk": "@@ -613,11 +613,20 @@ class SearchCandidateFinder\n         VecDeque<WorkItem> queue;\n         queue.reserve(std::max<size_t>(256, 2 * m_todo.Count()));\n \n-        // Create an initial entry with m_todo as undecided. Also use it as best if not provided,\n-        // so that during the work processing loop below, and during the add_fn/split_fn calls, we\n-        // do not need to deal with the best=empty case.\n-        if (best.feerate.IsEmpty()) best = SetInfo(m_depgraph, m_todo);\n-        queue.emplace_back(SetInfo<SetType>{}, SetType{m_todo});\n+        // Create initial entries per connected component of m_todo. While clusters themselves are\n+        // generally connected, this is not necessarily true after some parts have already been\n+        // removed from m_todo. Without this, effort can be wasted on searching \"inc\" sets that\n+        // span multiple components.\n+        auto to_cover = m_todo;\n+        do {\n+            auto component = m_depgraph.FindConnectedComponent(to_cover);\n+            to_cover -= component;\n+            // If best is not provided, set it to the first component, so that during the work\n+            // processing loop below, and during the add_fn/split_fn calls, we do not need to deal\n+            // with the best=empty case.\n+            if (best.feerate.IsEmpty()) best = SetInfo(m_depgraph, component);",
      "path": "src/cluster_linearize.h",
      "position": 201,
      "original_position": 20,
      "commit_id": "98fd28fabdbf24e89a63b2b2a7a18cf21e681dbf",
      "original_commit_id": "5fddd456b11727ac3f1b8aca6780aa965f1e268b",
      "in_reply_to_id": 1705762087,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Perhaps, but due the BFS search order, the normal iteration code should very quickly try splitting the whole-component work items anyway. The goal here is really just making sure `best` is not empty, so branches aren't needed to deal with that case.",
      "created_at": "2024-08-06T17:31:44Z",
      "updated_at": "2024-08-06T17:31:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30286#discussion_r1705892110",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705892110"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 716,
      "original_line": 716,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705913641",
      "pull_request_review_id": 2219685837,
      "id": 1705913641,
      "node_id": "PRRC_kwDOABII585lri0p",
      "diff_hunk": "@@ -824,8 +824,37 @@ class SearchCandidateFinder\n                 if (m_depgraph.FeeRate(first) <= best.feerate) return;\n             }\n \n-            // Pick the first undecided transaction as the one to split on.\n-            const ClusterIndex split = first;\n+            // Decide which transaction to split on. Splitting is how new work items are added, and\n+            // how progress is made. One split transaction is chosen among the queue item's\n+            // undecided ones, and:\n+            // - A work item is (potentially) added with that transaction plus its remaining\n+            //   descendants excluded (removed from the und set).\n+            // - A work item is (potentially) added with that transaction plus its remaining\n+            //   ancestors included (added to the inc set).\n+            //\n+            // To decide what to split on, consider the undecided ancestors of the highest\n+            // individual feerate undecided transaction. Pick the one which reduces the search space\n+            // most. Let I(t) be the size of the undecided set after including t, and E(t) the size\n+            // of the undecided set after excluding t. Then choose the split transaction t such\n+            // that 2^I(t) + 2^E(t) is minimal, tie-breaking by highest individual feerate for t.",
      "path": "src/cluster_linearize.h",
      "position": 359,
      "original_position": 18,
      "commit_id": "98fd28fabdbf24e89a63b2b2a7a18cf21e681dbf",
      "original_commit_id": "a88207c4eedda1c5455e187f0a91a619e60e9d9e",
      "in_reply_to_id": 1705727595,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I would have appreciated slightly more pedantic comments demonstrating how the computation matches the comments :sweat: ",
      "created_at": "2024-08-06T17:51:22Z",
      "updated_at": "2024-08-07T15:44:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30286#discussion_r1705913641",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1705913641"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 866,
      "original_line": 866,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1706029402",
      "pull_request_review_id": 2219685837,
      "id": 1706029402,
      "node_id": "PRRC_kwDOABII585lr_Fa",
      "diff_hunk": "@@ -723,19 +729,25 @@ class SearchCandidateFinder\n          *\n          * - inc: the \"inc\" value for the new work item (must be topological).\n          * - und: the \"und\" value for the new work item ((inc | und) must be topological).\n+         * - pot: a subset of the \"pot\" value for the new work item (but a superset of inc).\n+         *        It does not need to be the full pot value; missing pot transactions will be added\n+         *        to it by add_fn.\n+         * - grow_inc: whether to attempt moving transactions from und to inc, if it can be proven",
      "path": "src/cluster_linearize.h",
      "position": null,
      "original_position": 62,
      "commit_id": "98fd28fabdbf24e89a63b2b2a7a18cf21e681dbf",
      "original_commit_id": "29cac3e85b23f1264121cbd50e4a09755b0c8352",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "in 29cac3e85b23f1264121cbd50e4a09755b0c8352\r\n\r\nI think this commit may benefit from being two smaller commits, one that demonstrates the caching, and a second that demonstrates using it to skip the splitting computation?\r\n\r\nI do not understand what it's doing, as-is.",
      "created_at": "2024-08-06T19:45:03Z",
      "updated_at": "2024-08-07T15:44:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30286#discussion_r1706029402",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1706029402"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 740,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707280073",
      "pull_request_review_id": 2219685837,
      "id": 1707280073,
      "node_id": "PRRC_kwDOABII585lwwbJ",
      "diff_hunk": "@@ -971,10 +977,19 @@ std::pair<std::vector<ClusterIndex>, bool> Linearize(const DepGraph<SetType>& de\n     std::vector<ClusterIndex> linearization;\n \n     AncestorCandidateFinder anc_finder(depgraph);\n-    SearchCandidateFinder src_finder(depgraph, rng_seed);\n+    std::optional<SearchCandidateFinder<SetType>> src_finder;\n     linearization.reserve(depgraph.TxCount());\n     bool optimal = true;\n \n+    // Treat the initialization of SearchCandidateFinder as taking N^2/64 (rounded up) iterations",
      "path": "src/cluster_linearize.h",
      "position": 444,
      "original_position": 22,
      "commit_id": "98fd28fabdbf24e89a63b2b2a7a18cf21e681dbf",
      "original_commit_id": "06ea1016ff40ebcf3e668bdb993a0747904cb40f",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "why 64?",
      "created_at": "2024-08-07T15:34:06Z",
      "updated_at": "2024-08-07T15:44:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30286#discussion_r1707280073",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707280073"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 994,
      "original_line": 994,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707294690",
      "pull_request_review_id": 2219685837,
      "id": 1707294690,
      "node_id": "PRRC_kwDOABII585lwz_i",
      "diff_hunk": "@@ -987,12 +1002,22 @@ std::pair<std::vector<ClusterIndex>, bool> Linearize(const DepGraph<SetType>& de\n         auto best = anc_finder.FindCandidateSet();\n         if (!best_prefix.feerate.IsEmpty() && best_prefix.feerate >= best.feerate) best = best_prefix;\n \n-        // Invoke bounded search to update best, with up to half of our remaining iterations as\n-        // limit.\n-        uint64_t max_iterations_now = (iterations_left + 1) / 2;\n         uint64_t iterations_done_now = 0;\n-        std::tie(best, iterations_done_now) = src_finder.FindCandidateSet(max_iterations_now, best);\n-        iterations_left -= iterations_done_now;\n+        uint64_t max_iterations_now = 0;\n+        if (src_finder) {\n+            // Treat the invocation of SearchCandidateFinder::FindCandidateSet() as costing N/4",
      "path": "src/cluster_linearize.h",
      "position": 469,
      "original_position": 46,
      "commit_id": "98fd28fabdbf24e89a63b2b2a7a18cf21e681dbf",
      "original_commit_id": "06ea1016ff40ebcf3e668bdb993a0747904cb40f",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "why 4?",
      "created_at": "2024-08-07T15:40:33Z",
      "updated_at": "2024-08-07T15:44:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30286#discussion_r1707294690",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707294690"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1019,
      "original_line": 1019,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1708102729",
      "pull_request_review_id": 2226354488,
      "id": 1708102729,
      "node_id": "PRRC_kwDOABII585lz5RJ",
      "diff_hunk": "@@ -513,9 +548,11 @@ FUZZ_TARGET(clusterlin_search_finder)\n             assert(found.transactions.IsSupersetOf(depgraph.Ancestors(i) & todo));\n         }\n \n-        // At most 2^N-1 iterations can be required: the number of non-empty subsets a graph with N\n-        // transactions has.\n-        assert(iterations_done <= ((uint64_t{1} << todo.Count()) - 1));\n+        // At most 2^(N-1) iterations can be required: the maximum number of topological subsets a",
      "path": "src/test/fuzz/cluster_linearize.cpp",
      "position": null,
      "original_position": 72,
      "commit_id": "98fd28fabdbf24e89a63b2b2a7a18cf21e681dbf",
      "original_commit_id": "5fddd456b11727ac3f1b8aca6780aa965f1e268b",
      "in_reply_to_id": 1704526813,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Indeed, done.",
      "created_at": "2024-08-07T23:34:36Z",
      "updated_at": "2024-08-07T23:34:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30286#discussion_r1708102729",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1708102729"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 551,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1708102944",
      "pull_request_review_id": 2226354731,
      "id": 1708102944,
      "node_id": "PRRC_kwDOABII585lz5Ug",
      "diff_hunk": "@@ -541,23 +563,61 @@ class SearchCandidateFinder\n {\n     /** Internal RNG. */\n     InsecureRandomContext m_rng;\n-    /** Internal dependency graph for the cluster. */\n-    const DepGraph<SetType>& m_depgraph;\n-    /** Which transactions are left to do (sorted indices). */\n+    /** m_sorted_to_original[i] is the original position that sorted transaction position i had. */\n+    std::vector<ClusterIndex> m_sorted_to_original;\n+    /** m_original_to_sorted[i] is the sorted position original transaction position i has. */\n+    std::vector<ClusterIndex> m_original_to_sorted;\n+    /** Internal dependency graph for the cluster (with transactions in decreasing individual\n+     *  feerate order). */\n+    DepGraph<SetType> m_depgraph;\n+    /** Which transactions are left to do (indices in m_depgraph's sorted order). */\n     SetType m_todo;\n \n+    /** Given a set of transactions with sorted indices, get their original indices. */\n+    SetType SortedToOriginal(const SetType& arg) const noexcept\n+    {\n+        SetType ret;\n+        for (auto pos : arg) ret.Set(m_sorted_to_original[pos]);\n+        return ret;\n+    }\n+\n+    /** Given a set of transactions with original indices, get their sorted indices. */\n+    SetType OriginalToSorted(const SetType& arg) const noexcept\n+    {\n+        SetType ret;\n+        for (auto pos : arg) ret.Set(m_original_to_sorted[pos]);\n+        return ret;\n+    }\n+\n public:\n     /** Construct a candidate finder for a graph.\n      *\n      * @param[in] depgraph   Dependency graph for the to-be-linearized cluster.\n      * @param[in] rng_seed   A random seed to control the search order.\n      *\n-     * Complexity: O(1).\n+     * Complexity: O(N^2) where N=depgraph.Count().\n      */\n-    SearchCandidateFinder(const DepGraph<SetType>& depgraph LIFETIMEBOUND, uint64_t rng_seed) noexcept :\n+    SearchCandidateFinder(const DepGraph<SetType>& depgraph, uint64_t rng_seed) noexcept :\n         m_rng(rng_seed),\n-        m_depgraph(depgraph),\n-        m_todo(SetType::Fill(depgraph.TxCount())) {}\n+        m_sorted_to_original(depgraph.TxCount()),\n+        m_original_to_sorted(depgraph.TxCount())\n+    {\n+        // Determine reordering mapping, by sorting by decreasing feerate.\n+        std::iota(m_sorted_to_original.begin(), m_sorted_to_original.end(), ClusterIndex{0});\n+        std::sort(m_sorted_to_original.begin(), m_sorted_to_original.end(), [&](auto a, auto b) {\n+            auto feerate_cmp = depgraph.FeeRate(a) <=> depgraph.FeeRate(b);\n+            if (feerate_cmp == 0) return a < b;\n+            return feerate_cmp > 0;\n+        });\n+        // Compute reverse mapping.\n+        for (ClusterIndex i = 0; i < depgraph.TxCount(); ++i) {\n+            m_original_to_sorted[m_sorted_to_original[i]] = i;\n+        }\n+        // Compute reordered dependency graph.\n+        m_depgraph = DepGraph(depgraph, m_original_to_sorted);\n+        // Set todo to the entire graph.\n+        m_todo = SetType::Fill(depgraph.TxCount());",
      "path": "src/cluster_linearize.h",
      "position": null,
      "original_position": 93,
      "commit_id": "98fd28fabdbf24e89a63b2b2a7a18cf21e681dbf",
      "original_commit_id": "4e7ff15ce48d705b260fdfba5d600b0186846dca",
      "in_reply_to_id": 1705666485,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Indeed, fixed.",
      "created_at": "2024-08-07T23:34:42Z",
      "updated_at": "2024-08-07T23:34:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30286#discussion_r1708102944",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1708102944"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 619,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1708104386",
      "pull_request_review_id": 2226356557,
      "id": 1708104386,
      "node_id": "PRRC_kwDOABII585lz5rC",
      "diff_hunk": "@@ -118,6 +118,28 @@ class DepGraph\n         }\n     }\n \n+    /** Construct a DepGraph object given another DepGraph and a mapping from old to new.\n+     *\n+     * Complexity: O(N^2) where N=depgraph.TxCount().\n+     */\n+    DepGraph(const DepGraph<SetType>& depgraph, Span<const ClusterIndex> mapping) noexcept : entries(depgraph.TxCount())",
      "path": "src/cluster_linearize.h",
      "position": 8,
      "original_position": 8,
      "commit_id": "98fd28fabdbf24e89a63b2b2a7a18cf21e681dbf",
      "original_commit_id": "4e7ff15ce48d705b260fdfba5d600b0186846dca",
      "in_reply_to_id": 1705747742,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nice, indeed! I needed to make some change to the unserializer to track in `reordering` the reverse mapping, which I've for now done in the same commit. Happy to split that out if useful.",
      "created_at": "2024-08-07T23:35:29Z",
      "updated_at": "2024-08-07T23:35:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30286#discussion_r1708104386",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1708104386"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 125,
      "original_line": 125,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1708106586",
      "pull_request_review_id": 2226358172,
      "id": 1708106586,
      "node_id": "PRRC_kwDOABII585lz6Na",
      "diff_hunk": "@@ -824,8 +824,37 @@ class SearchCandidateFinder\n                 if (m_depgraph.FeeRate(first) <= best.feerate) return;\n             }\n \n-            // Pick the first undecided transaction as the one to split on.\n-            const ClusterIndex split = first;\n+            // Decide which transaction to split on. Splitting is how new work items are added, and\n+            // how progress is made. One split transaction is chosen among the queue item's\n+            // undecided ones, and:\n+            // - A work item is (potentially) added with that transaction plus its remaining\n+            //   descendants excluded (removed from the und set).\n+            // - A work item is (potentially) added with that transaction plus its remaining\n+            //   ancestors included (added to the inc set).\n+            //\n+            // To decide what to split on, consider the undecided ancestors of the highest\n+            // individual feerate undecided transaction. Pick the one which reduces the search space\n+            // most. Let I(t) be the size of the undecided set after including t, and E(t) the size\n+            // of the undecided set after excluding t. Then choose the split transaction t such\n+            // that 2^I(t) + 2^E(t) is minimal, tie-breaking by highest individual feerate for t.",
      "path": "src/cluster_linearize.h",
      "position": 359,
      "original_position": 18,
      "commit_id": "98fd28fabdbf24e89a63b2b2a7a18cf21e681dbf",
      "original_commit_id": "a88207c4eedda1c5455e187f0a91a619e60e9d9e",
      "in_reply_to_id": 1705727595,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@instagibbs I've expanded the comments to explain why the (max,min) sort order is the same as (2^max + 2^min).",
      "created_at": "2024-08-07T23:37:16Z",
      "updated_at": "2024-08-07T23:37:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30286#discussion_r1708106586",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1708106586"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 866,
      "original_line": 866,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1708486665",
      "pull_request_review_id": 2226774179,
      "id": 1708486665,
      "node_id": "PRRC_kwDOABII585l1XAJ",
      "diff_hunk": "@@ -723,19 +729,25 @@ class SearchCandidateFinder\n          *\n          * - inc: the \"inc\" value for the new work item (must be topological).\n          * - und: the \"und\" value for the new work item ((inc | und) must be topological).\n+         * - pot: a subset of the \"pot\" value for the new work item (but a superset of inc).\n+         *        It does not need to be the full pot value; missing pot transactions will be added\n+         *        to it by add_fn.\n+         * - grow_inc: whether to attempt moving transactions from und to inc, if it can be proven",
      "path": "src/cluster_linearize.h",
      "position": null,
      "original_position": 62,
      "commit_id": "98fd28fabdbf24e89a63b2b2a7a18cf21e681dbf",
      "original_commit_id": "29cac3e85b23f1264121cbd50e4a09755b0c8352",
      "in_reply_to_id": 1706029402,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I have split the commit in two, with additional comments, and I renamed `grow_inc` to `reconsider_pot`.\r\n\r\nRoughly what is going on is that:\r\n* In \"include topological pot subsets automatically\", all of every new work item's `pot` set is searched for topologically-valid subsets (which can be moved to `inc` instead)\r\n* In \"avoid recomputing potential set on every split\" (before my last push), only the part of the new item's `pot` set that *wasn't* in the parent work item's `pot` set is searched for topologically-valid subsets *unless* `grow_inc` was set, in which case all of `pot` is searched.\r\n\r\nI have now split this second commit into:\r\n* In \"avoid recomputing potential set on every split\", still all of the new item's `pot` set is searched.\r\n* In \"avoid jump ahead in unmodified pot sets\", only the part of the new item's `pot` set that wasn't in the parent work item's set is searched unless `reconsider_pot` is set.",
      "created_at": "2024-08-08T02:58:53Z",
      "updated_at": "2024-08-08T02:58:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30286#discussion_r1708486665",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1708486665"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 740,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1708487431",
      "pull_request_review_id": 2226774713,
      "id": 1708487431,
      "node_id": "PRRC_kwDOABII585l1XMH",
      "diff_hunk": "@@ -688,7 +701,7 @@ class SearchCandidateFinder\n             // processing loop below, and during the add_fn/split_fn calls, we do not need to deal\n             // with the best=empty case.\n             if (best.feerate.IsEmpty()) best = SetInfo(m_depgraph, component);\n-            queue.emplace_back(SetInfo<SetType>{}, std::move(component));\n+            queue.emplace_back(SetInfo<SetType>{}, std::move(component), FeeFrac{});",
      "path": "src/cluster_linearize.h",
      "position": null,
      "original_position": 44,
      "commit_id": "98fd28fabdbf24e89a63b2b2a7a18cf21e681dbf",
      "original_commit_id": "4e63e0a9512c7c8a2a11fae383ddc26b3b9790fd",
      "in_reply_to_id": 1705789091,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2024-08-08T02:59:37Z",
      "updated_at": "2024-08-08T02:59:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30286#discussion_r1708487431",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1708487431"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 704,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1708488215",
      "pull_request_review_id": 2226775180,
      "id": 1708488215,
      "node_id": "PRRC_kwDOABII585l1XYX",
      "diff_hunk": "@@ -971,10 +977,19 @@ std::pair<std::vector<ClusterIndex>, bool> Linearize(const DepGraph<SetType>& de\n     std::vector<ClusterIndex> linearization;\n \n     AncestorCandidateFinder anc_finder(depgraph);\n-    SearchCandidateFinder src_finder(depgraph, rng_seed);\n+    std::optional<SearchCandidateFinder<SetType>> src_finder;\n     linearization.reserve(depgraph.TxCount());\n     bool optimal = true;\n \n+    // Treat the initialization of SearchCandidateFinder as taking N^2/64 (rounded up) iterations",
      "path": "src/cluster_linearize.h",
      "position": 444,
      "original_position": 22,
      "commit_id": "98fd28fabdbf24e89a63b2b2a7a18cf21e681dbf",
      "original_commit_id": "06ea1016ff40ebcf3e668bdb993a0747904cb40f",
      "in_reply_to_id": 1707280073,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Just a rough estimate based on benchmarks. Added a comment.",
      "created_at": "2024-08-08T03:00:15Z",
      "updated_at": "2024-08-08T03:00:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30286#discussion_r1708488215",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1708488215"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 994,
      "original_line": 994,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1708488330",
      "pull_request_review_id": 2226775245,
      "id": 1708488330,
      "node_id": "PRRC_kwDOABII585l1XaK",
      "diff_hunk": "@@ -987,12 +1002,22 @@ std::pair<std::vector<ClusterIndex>, bool> Linearize(const DepGraph<SetType>& de\n         auto best = anc_finder.FindCandidateSet();\n         if (!best_prefix.feerate.IsEmpty() && best_prefix.feerate >= best.feerate) best = best_prefix;\n \n-        // Invoke bounded search to update best, with up to half of our remaining iterations as\n-        // limit.\n-        uint64_t max_iterations_now = (iterations_left + 1) / 2;\n         uint64_t iterations_done_now = 0;\n-        std::tie(best, iterations_done_now) = src_finder.FindCandidateSet(max_iterations_now, best);\n-        iterations_left -= iterations_done_now;\n+        uint64_t max_iterations_now = 0;\n+        if (src_finder) {\n+            // Treat the invocation of SearchCandidateFinder::FindCandidateSet() as costing N/4",
      "path": "src/cluster_linearize.h",
      "position": 469,
      "original_position": 46,
      "commit_id": "98fd28fabdbf24e89a63b2b2a7a18cf21e681dbf",
      "original_commit_id": "06ea1016ff40ebcf3e668bdb993a0747904cb40f",
      "in_reply_to_id": 1707294690,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Just a rough estimate based on benchmarks. Added a comment.",
      "created_at": "2024-08-08T03:00:20Z",
      "updated_at": "2024-08-08T03:00:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30286#discussion_r1708488330",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1708488330"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1019,
      "original_line": 1019,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709093275",
      "pull_request_review_id": 2227384818,
      "id": 1709093275,
      "node_id": "PRRC_kwDOABII585l3rGb",
      "diff_hunk": "@@ -756,10 +987,20 @@ std::pair<std::vector<ClusterIndex>, bool> Linearize(const DepGraph<SetType>& de\n     std::vector<ClusterIndex> linearization;\n \n     AncestorCandidateFinder anc_finder(depgraph);\n-    SearchCandidateFinder src_finder(depgraph, rng_seed);\n+    std::optional<SearchCandidateFinder<SetType>> src_finder;\n     linearization.reserve(depgraph.TxCount());\n     bool optimal = true;\n \n+    // Treat the initialization of SearchCandidateFinder as taking N^2/64 (rounded up) iterations\n+    // (largely due to the cost of constructing the internal sorted-by-feerate DepGraph inside\n+    // SearchCandidateFinder), a rough approximation based on benchmark. If we don't have that\n+    // many, don't start it.\n+    uint64_t start_iterations = (uint64_t{depgraph.TxCount()} * depgraph.TxCount() + 63) / 64;",
      "path": "src/cluster_linearize.h",
      "position": 448,
      "original_position": 448,
      "commit_id": "98fd28fabdbf24e89a63b2b2a7a18cf21e681dbf",
      "original_commit_id": "f46c0cc3d21c7c55ee077989af09f1d7e20472bc",
      "in_reply_to_id": null,
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Do these adhoc initialization costs interact well with the with the upper bound 2^(k-1)  and the empirical sqrt(2^k)+1  limits in the tests or should the bounds in the test be increased by these adhoc initialization costs?",
      "created_at": "2024-08-08T09:47:18Z",
      "updated_at": "2024-08-08T09:47:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30286#discussion_r1709093275",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709093275"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 998,
      "original_line": 998,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709211453",
      "pull_request_review_id": 2227520975,
      "id": 1709211453,
      "node_id": "PRRC_kwDOABII585l4H89",
      "diff_hunk": "@@ -596,56 +678,147 @@ class SearchCandidateFinder\n             /** Set of undecided transactions. This must be a subset of m_todo, and have no overlap\n              *  with inc. The set (inc | und) must be topologically valid. */\n             SetType und;\n+            /** (Only when inc is not empty) The subset with the best feerate of any superset of\n+             *  inc that is also a subset of (inc | und), without requiring it to be topologically\n+             *  valid. Its feerate forms a conservative upper bound on how good a set this work\n+             *  item can give rise to. If the real best such feerate does not exceed best's, then\n+             *  this value is not guaranteed to be accurate. */\n+            SetInfo<SetType> pot;\n \n             /** Construct a new work item. */\n-            WorkItem(SetInfo<SetType>&& i, SetType&& u) noexcept :\n-                inc(std::move(i)), und(std::move(u)) {}\n+            WorkItem(SetInfo<SetType>&& i, SetType&& u, SetInfo<SetType>&& p) noexcept :\n+                inc(std::move(i)), und(std::move(u)), pot(std::move(p)) {}\n \n             /** Swap two WorkItems. */\n             void Swap(WorkItem& other) noexcept\n             {\n                 swap(inc, other.inc);\n                 swap(und, other.und);\n+                swap(pot, other.pot);\n             }\n         };\n \n         /** The queue of work items. */\n         VecDeque<WorkItem> queue;\n         queue.reserve(std::max<size_t>(256, 2 * m_todo.Count()));\n \n-        // Create an initial entry with m_todo as undecided. Also use it as best if not provided,\n-        // so that during the work processing loop below, and during the add_fn/split_fn calls, we\n-        // do not need to deal with the best=empty case.\n-        if (best.feerate.IsEmpty()) best = SetInfo(m_depgraph, m_todo);\n-        queue.emplace_back(SetInfo<SetType>{}, SetType{m_todo});\n+        // Create initial entries per connected component of m_todo. While clusters themselves are\n+        // generally connected, this is not necessarily true after some parts have already been\n+        // removed from m_todo. Without this, effort can be wasted on searching \"inc\" sets that\n+        // span multiple components.\n+        auto to_cover = m_todo;\n+        do {\n+            auto component = m_depgraph.FindConnectedComponent(to_cover);\n+            to_cover -= component;\n+            // If best is not provided, set it to the first component, so that during the work\n+            // processing loop below, and during the add_fn/split_fn calls, we do not need to deal\n+            // with the best=empty case.\n+            if (best.feerate.IsEmpty()) best = SetInfo(m_depgraph, component);\n+            queue.emplace_back(/*inc=*/SetInfo<SetType>{},\n+                               /*und=*/std::move(component),\n+                               /*pot=*/SetInfo<SetType>{});\n+        } while (to_cover.Any());\n \n         /** Local copy of the iteration limit. */\n         uint64_t iterations_left = max_iterations;\n \n+        /** The set of transactions in m_todo which have feerate > best's. */\n+        SetType imp = m_todo;\n+        while (imp.Any()) {\n+            ClusterIndex check = imp.Last();\n+            if (m_depgraph.FeeRate(check) >> best.feerate) break;\n+            imp.Reset(check);\n+        }\n+\n         /** Internal function to add an item to the queue of elements to explore if there are any\n-         *  transactions left to split on, and to update best.\n+         *  transactions left to split on, possibly improving it before doing so, and to update\n+         *  best/imp.\n          *\n          * - inc: the \"inc\" value for the new work item (must be topological).\n          * - und: the \"und\" value for the new work item ((inc | und) must be topological).\n+         * - pot: a subset of the \"pot\" value for the new work item (but a superset of inc).\n+         *        It does not need to be the full pot value; missing pot transactions will be added\n+         *        to it by add_fn.\n+         * - reconsider_pot: this function will automatically add topologically-valid subsets of\n+         *                   pot to inc (the jump ahead optimization). If reconsider_pot is true,\n+         *                   the search for such subsets will include the transactions in the pot\n+         *                   argument to the function. If reconsider_pot is false, only transactions\n+         *                   that were missing from the pot argument will be considered. If no new\n+         *                   transactions were added to inc since the last split (i.e., when this\n+         *                   function is called for an exclusion) then there is no need to\n+         *                   set this to true.\n          */\n-        auto add_fn = [&](SetInfo<SetType> inc, SetType und) noexcept {\n+        auto add_fn = [&](SetInfo<SetType> inc, SetType und, SetInfo<SetType> pot, bool reconsider_pot) noexcept {\n             if (!inc.feerate.IsEmpty()) {\n+                /** Which transactions to consider adding to inc. */\n+                SetType consider_inc;\n+                if (reconsider_pot) consider_inc = pot.transactions - inc.transactions;\n+                // Add entries to pot. We iterate over all undecided transactions whose feerate is\n+                // higher than best, and aren't already part of pot. While undecided transactions\n+                // of lower feerate may improve, the resulting pot feerate cannot possibly exceed\n+                // best's (and this item will be skipped in split_fn anyway).\n+                for (auto pos : (imp & und) - pot.transactions) {\n+                    // Determine if adding transaction pos to pot (ignoring topology) would improve\n+                    // it. If not, we're done updating pot. This relies on the fact that\n+                    // m_depgraph, and thus the transactions iterated over, are in decreasing\n+                    // individual feerate order.\n+                    if (!(m_depgraph.FeeRate(pos) >> pot.feerate)) break;\n+                    pot.Set(m_depgraph, pos);\n+                    consider_inc.Set(pos);",
      "path": "src/cluster_linearize.h",
      "position": 254,
      "original_position": 254,
      "commit_id": "98fd28fabdbf24e89a63b2b2a7a18cf21e681dbf",
      "original_commit_id": "f46c0cc3d21c7c55ee077989af09f1d7e20472bc",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "in c68d26a0e97d7544076f00a467a8eca16658077a\r\n\r\nIf we're meant to avoid jump ahead, should this be gated on `reconsider_pot` as well?",
      "created_at": "2024-08-08T10:52:20Z",
      "updated_at": "2024-08-08T14:29:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30286#discussion_r1709211453",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709211453"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 767,
      "original_line": 767,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709581953",
      "pull_request_review_id": 2227987139,
      "id": 1709581953,
      "node_id": "PRRC_kwDOABII585l5iaB",
      "diff_hunk": "@@ -118,6 +118,28 @@ class DepGraph\n         }\n     }\n \n+    /** Construct a DepGraph object given another DepGraph and a mapping from old to new.\n+     *\n+     * Complexity: O(N^2) where N=depgraph.TxCount().\n+     */\n+    DepGraph(const DepGraph<SetType>& depgraph, Span<const ClusterIndex> mapping) noexcept : entries(depgraph.TxCount())",
      "path": "src/cluster_linearize.h",
      "position": 8,
      "original_position": 8,
      "commit_id": "98fd28fabdbf24e89a63b2b2a7a18cf21e681dbf",
      "original_commit_id": "4e7ff15ce48d705b260fdfba5d600b0186846dca",
      "in_reply_to_id": 1705747742,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "LGTM, I tested by manually making the map and reversing it right at the end, which also seemed to work?",
      "created_at": "2024-08-08T14:02:43Z",
      "updated_at": "2024-08-08T14:03:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30286#discussion_r1709581953",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709581953"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 125,
      "original_line": 125,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709617445",
      "pull_request_review_id": 2228034060,
      "id": 1709617445,
      "node_id": "PRRC_kwDOABII585l5rEl",
      "diff_hunk": "@@ -723,19 +729,25 @@ class SearchCandidateFinder\n          *\n          * - inc: the \"inc\" value for the new work item (must be topological).\n          * - und: the \"und\" value for the new work item ((inc | und) must be topological).\n+         * - pot: a subset of the \"pot\" value for the new work item (but a superset of inc).\n+         *        It does not need to be the full pot value; missing pot transactions will be added\n+         *        to it by add_fn.\n+         * - grow_inc: whether to attempt moving transactions from und to inc, if it can be proven",
      "path": "src/cluster_linearize.h",
      "position": null,
      "original_position": 62,
      "commit_id": "98fd28fabdbf24e89a63b2b2a7a18cf21e681dbf",
      "original_commit_id": "29cac3e85b23f1264121cbd50e4a09755b0c8352",
      "in_reply_to_id": 1706029402,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think this has helped a lot, \"clusterlin: avoid recomputing potential set on every split (optimization)\" now makes sense to me. Lots of interlocking parts, so having small bite-sizes helps.\r\n\r\nCan you motivate why `reconsider_pot` is set as true on inclusion of `anc` and not on exclude? \r\n\r\nWhen `anc` is included, it's included in both `inc` and `pot`, then:\r\n\r\n`if (reconsider_pot) consider_inc = pot.transactions - inc.transactions;`\r\n\r\nso no part of `anc` will be in `consider_inc`.",
      "created_at": "2024-08-08T14:19:49Z",
      "updated_at": "2024-08-08T14:19:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30286#discussion_r1709617445",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709617445"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 740,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709648591",
      "pull_request_review_id": 2228076376,
      "id": 1709648591,
      "node_id": "PRRC_kwDOABII585l5yrP",
      "diff_hunk": "@@ -596,56 +678,147 @@ class SearchCandidateFinder\n             /** Set of undecided transactions. This must be a subset of m_todo, and have no overlap\n              *  with inc. The set (inc | und) must be topologically valid. */\n             SetType und;\n+            /** (Only when inc is not empty) The subset with the best feerate of any superset of\n+             *  inc that is also a subset of (inc | und), without requiring it to be topologically\n+             *  valid. Its feerate forms a conservative upper bound on how good a set this work\n+             *  item can give rise to. If the real best such feerate does not exceed best's, then\n+             *  this value is not guaranteed to be accurate. */\n+            SetInfo<SetType> pot;\n \n             /** Construct a new work item. */\n-            WorkItem(SetInfo<SetType>&& i, SetType&& u) noexcept :\n-                inc(std::move(i)), und(std::move(u)) {}\n+            WorkItem(SetInfo<SetType>&& i, SetType&& u, SetInfo<SetType>&& p) noexcept :\n+                inc(std::move(i)), und(std::move(u)), pot(std::move(p)) {}\n \n             /** Swap two WorkItems. */\n             void Swap(WorkItem& other) noexcept\n             {\n                 swap(inc, other.inc);\n                 swap(und, other.und);\n+                swap(pot, other.pot);\n             }\n         };\n \n         /** The queue of work items. */\n         VecDeque<WorkItem> queue;\n         queue.reserve(std::max<size_t>(256, 2 * m_todo.Count()));\n \n-        // Create an initial entry with m_todo as undecided. Also use it as best if not provided,\n-        // so that during the work processing loop below, and during the add_fn/split_fn calls, we\n-        // do not need to deal with the best=empty case.\n-        if (best.feerate.IsEmpty()) best = SetInfo(m_depgraph, m_todo);\n-        queue.emplace_back(SetInfo<SetType>{}, SetType{m_todo});\n+        // Create initial entries per connected component of m_todo. While clusters themselves are\n+        // generally connected, this is not necessarily true after some parts have already been\n+        // removed from m_todo. Without this, effort can be wasted on searching \"inc\" sets that\n+        // span multiple components.\n+        auto to_cover = m_todo;\n+        do {\n+            auto component = m_depgraph.FindConnectedComponent(to_cover);\n+            to_cover -= component;\n+            // If best is not provided, set it to the first component, so that during the work\n+            // processing loop below, and during the add_fn/split_fn calls, we do not need to deal\n+            // with the best=empty case.\n+            if (best.feerate.IsEmpty()) best = SetInfo(m_depgraph, component);\n+            queue.emplace_back(/*inc=*/SetInfo<SetType>{},\n+                               /*und=*/std::move(component),\n+                               /*pot=*/SetInfo<SetType>{});\n+        } while (to_cover.Any());\n \n         /** Local copy of the iteration limit. */\n         uint64_t iterations_left = max_iterations;\n \n+        /** The set of transactions in m_todo which have feerate > best's. */\n+        SetType imp = m_todo;\n+        while (imp.Any()) {\n+            ClusterIndex check = imp.Last();\n+            if (m_depgraph.FeeRate(check) >> best.feerate) break;\n+            imp.Reset(check);\n+        }\n+\n         /** Internal function to add an item to the queue of elements to explore if there are any\n-         *  transactions left to split on, and to update best.\n+         *  transactions left to split on, possibly improving it before doing so, and to update\n+         *  best/imp.\n          *\n          * - inc: the \"inc\" value for the new work item (must be topological).\n          * - und: the \"und\" value for the new work item ((inc | und) must be topological).\n+         * - pot: a subset of the \"pot\" value for the new work item (but a superset of inc).\n+         *        It does not need to be the full pot value; missing pot transactions will be added\n+         *        to it by add_fn.\n+         * - reconsider_pot: this function will automatically add topologically-valid subsets of\n+         *                   pot to inc (the jump ahead optimization). If reconsider_pot is true,\n+         *                   the search for such subsets will include the transactions in the pot\n+         *                   argument to the function. If reconsider_pot is false, only transactions\n+         *                   that were missing from the pot argument will be considered. If no new\n+         *                   transactions were added to inc since the last split (i.e., when this\n+         *                   function is called for an exclusion) then there is no need to\n+         *                   set this to true.\n          */\n-        auto add_fn = [&](SetInfo<SetType> inc, SetType und) noexcept {\n+        auto add_fn = [&](SetInfo<SetType> inc, SetType und, SetInfo<SetType> pot, bool reconsider_pot) noexcept {\n             if (!inc.feerate.IsEmpty()) {\n+                /** Which transactions to consider adding to inc. */\n+                SetType consider_inc;\n+                if (reconsider_pot) consider_inc = pot.transactions - inc.transactions;\n+                // Add entries to pot. We iterate over all undecided transactions whose feerate is\n+                // higher than best, and aren't already part of pot. While undecided transactions\n+                // of lower feerate may improve, the resulting pot feerate cannot possibly exceed\n+                // best's (and this item will be skipped in split_fn anyway).\n+                for (auto pos : (imp & und) - pot.transactions) {\n+                    // Determine if adding transaction pos to pot (ignoring topology) would improve\n+                    // it. If not, we're done updating pot. This relies on the fact that\n+                    // m_depgraph, and thus the transactions iterated over, are in decreasing\n+                    // individual feerate order.\n+                    if (!(m_depgraph.FeeRate(pos) >> pot.feerate)) break;\n+                    pot.Set(m_depgraph, pos);\n+                    consider_inc.Set(pos);",
      "path": "src/cluster_linearize.h",
      "position": 254,
      "original_position": 254,
      "commit_id": "98fd28fabdbf24e89a63b2b2a7a18cf21e681dbf",
      "original_commit_id": "f46c0cc3d21c7c55ee077989af09f1d7e20472bc",
      "in_reply_to_id": 1709211453,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "No, we *always* want to consider transactions that were missing from `pot`, because those couldn't have been considered for the parent work item. `reconsider_pot` only controls whether we should reconsider the ones *already* in `pot`.",
      "created_at": "2024-08-08T14:33:43Z",
      "updated_at": "2024-08-08T14:33:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30286#discussion_r1709648591",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709648591"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 767,
      "original_line": 767,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709766961",
      "pull_request_review_id": 2228227286,
      "id": 1709766961,
      "node_id": "PRRC_kwDOABII585l6Pkx",
      "diff_hunk": "@@ -723,19 +729,25 @@ class SearchCandidateFinder\n          *\n          * - inc: the \"inc\" value for the new work item (must be topological).\n          * - und: the \"und\" value for the new work item ((inc | und) must be topological).\n+         * - pot: a subset of the \"pot\" value for the new work item (but a superset of inc).\n+         *        It does not need to be the full pot value; missing pot transactions will be added\n+         *        to it by add_fn.\n+         * - grow_inc: whether to attempt moving transactions from und to inc, if it can be proven",
      "path": "src/cluster_linearize.h",
      "position": null,
      "original_position": 62,
      "commit_id": "98fd28fabdbf24e89a63b2b2a7a18cf21e681dbf",
      "original_commit_id": "29cac3e85b23f1264121cbd50e4a09755b0c8352",
      "in_reply_to_id": 1706029402,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@instagibbs @glozow Let me try giving an explanation here. If this helps you, I'll rework it into a comment in the code.\r\n\r\nThink of the set of transactions in every work items as falling within one of four classes (roughly from \"more likely to be included\" to \"less likely to be included\"):\r\n* **I**: definitely included transactions, (= `item.inc`).\r\n* **U**: undecided transactions that may or may not end up being included (= `item.und`), subdided in:\r\n  * **UH**: possibly included, and including any of them will definitely increase the included set's feerate (even when other lower-fee UH transactions are included too) (=`item.pot - item.inc`, =`item.und & item.pot`).\r\n  * **UL**: possibly included, but including it is not guaranteed to increase the included set's feerate (=`item.und - item.pot`)\r\n* **E**: definitely excluded transactions, (= `todo - item.inc - item.und`).\r\n\r\nIn other words, `item.pot` is I+UH and `item.und` is U=UH+UL. Further, I is always topological, as is I+U. I+UH however may be non-topological.\r\n\r\nNow let's consider what happens in an inclusion branch (i.e., the call to `add_fn` for adding the split transaction and its ancestors):\r\n1. We start with a parent object which has a given I, UH, UL, E (assume I is non-empty; I=empty is a special case that has separate logic in several places).\r\n2. A split transaction t is chosen from U=UH+UL (=`item.und`).\r\n3. anc(t) are moved from UH+UL to I (this is done inside `split_fn`, in the invocation of `add_fn`).\r\n4. anc(t) will always include at least one UL transaction (*), and because of that the feerate of I may have gone down. If so, it is possible that more transactions can be moved from UL to UH. This is done inside `add_fn`, in the `for (auto pos : (imp & und) - pot.transactions) {` loop. \r\n5. Because of the changes to I and UH above, it is possible that there is now a new topologically-valid subset of I+UH that isn't already entirely in I, so it can be moved to I (jump ahead). This can be due to UH entries added in (4) **or due to I entries added in (3).**. This is done in `add_fn`, in the `for (auto pos : consider_inc) {` loop.\r\n7. If I now has the best feerate ever, remember it.\r\n8. Construct a new work item with the resulting I,UH,UL,E, unless UH+UL is empty (which is always the case if UL is empty, **) because then no more splits can take place.\r\n\r\nCompare this to what happens in an exclusion branch:\r\n1. Same\r\n2. Same\r\n3. desc(t) are moved from UH+UL to E and **I does not change**.\r\n4. desc(t) may include a UH transaction, and because of that it is possible that more transactions can be moved from UL to UH.\r\n5. Because of the above, it is possible that there are new topologically-valid subsets of I+UH now that can be moved to I. **This can only be due to UH entries added in (4).**\r\n6. Same\r\n7. Same\r\n\r\nThe bold parts correspond to `reconsider_pot`. In the inclusion branch, UL transactions moved to UH may result in existing UH transactions becoming part of a topologically-valid subset, so UH needs to be reconsidered. In an exclusion branch I does not change in (3), and so only new UH transactions added in (4) need to be considered for moving to I. Now, if that happens (something moves from UH to I due to jump ahead), it may be that what was in UH before becomes eligible to move as well, but doing so does not seem to affect the performance or number of iterations the algorithm needs.\r\n\r\n(*) The jump ahead is exactly what guarantees that anc(t) always includes a UL transaction. If anc(t) was entirely within UH, it would be topologically valid, and thus the parent work item's jump ahead step would have moved it to I already.\r\n\r\n(**) Same reason: if UL is empty, then the entirety if I+UH is topologically valid, and thus would have been moved to I entirely in the jump ahead. Thus, UL empty implies UH is also empty.",
      "created_at": "2024-08-08T15:26:38Z",
      "updated_at": "2024-08-09T13:39:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30286#discussion_r1709766961",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1709766961"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 740,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1710368478",
      "pull_request_review_id": 2228965282,
      "id": 1710368478,
      "node_id": "PRRC_kwDOABII585l8ibe",
      "diff_hunk": "@@ -756,10 +987,20 @@ std::pair<std::vector<ClusterIndex>, bool> Linearize(const DepGraph<SetType>& de\n     std::vector<ClusterIndex> linearization;\n \n     AncestorCandidateFinder anc_finder(depgraph);\n-    SearchCandidateFinder src_finder(depgraph, rng_seed);\n+    std::optional<SearchCandidateFinder<SetType>> src_finder;\n     linearization.reserve(depgraph.TxCount());\n     bool optimal = true;\n \n+    // Treat the initialization of SearchCandidateFinder as taking N^2/64 (rounded up) iterations\n+    // (largely due to the cost of constructing the internal sorted-by-feerate DepGraph inside\n+    // SearchCandidateFinder), a rough approximation based on benchmark. If we don't have that\n+    // many, don't start it.\n+    uint64_t start_iterations = (uint64_t{depgraph.TxCount()} * depgraph.TxCount() + 63) / 64;",
      "path": "src/cluster_linearize.h",
      "position": 448,
      "original_position": 448,
      "commit_id": "98fd28fabdbf24e89a63b2b2a7a18cf21e681dbf",
      "original_commit_id": "f46c0cc3d21c7c55ee077989af09f1d7e20472bc",
      "in_reply_to_id": 1709093275,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@gmaxwell I think you're right that these ought to be added to the limits in the tests, though I don't actually see any failures with a quick test. The sqrt(2^k)+1 limit is only hit for very small clusters (say, 3 transactions) though, for larger ones the worst I've seen is around 70%-80% of this presumed limit, which may explain not seeing failures.\r\n\r\nIt does make me wonder if perhaps `Linearize` shouldn't bother with trying to do CPU time management, and should just expose a `bool do_search` option.",
      "created_at": "2024-08-08T22:23:40Z",
      "updated_at": "2024-08-08T22:23:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30286#discussion_r1710368478",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1710368478"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 998,
      "original_line": 998,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1710491169",
      "pull_request_review_id": 2229091435,
      "id": 1710491169,
      "node_id": "PRRC_kwDOABII585l9AYh",
      "diff_hunk": "@@ -756,10 +987,20 @@ std::pair<std::vector<ClusterIndex>, bool> Linearize(const DepGraph<SetType>& de\n     std::vector<ClusterIndex> linearization;\n \n     AncestorCandidateFinder anc_finder(depgraph);\n-    SearchCandidateFinder src_finder(depgraph, rng_seed);\n+    std::optional<SearchCandidateFinder<SetType>> src_finder;\n     linearization.reserve(depgraph.TxCount());\n     bool optimal = true;\n \n+    // Treat the initialization of SearchCandidateFinder as taking N^2/64 (rounded up) iterations\n+    // (largely due to the cost of constructing the internal sorted-by-feerate DepGraph inside\n+    // SearchCandidateFinder), a rough approximation based on benchmark. If we don't have that\n+    // many, don't start it.\n+    uint64_t start_iterations = (uint64_t{depgraph.TxCount()} * depgraph.TxCount() + 63) / 64;",
      "path": "src/cluster_linearize.h",
      "position": 448,
      "original_position": 448,
      "commit_id": "98fd28fabdbf24e89a63b2b2a7a18cf21e681dbf",
      "original_commit_id": "f46c0cc3d21c7c55ee077989af09f1d7e20472bc",
      "in_reply_to_id": 1709093275,
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah, I assumed that the specific limit used in the tests right how happened to evade failing.   I don't have a strong opinion.  The adjustments seemed fine to me but maybe just making some function for the adjustments and having the test use that to derive its test limits might make sense-- so that further updates to those adhoc adjustments don't accidentally break test limits that might be hit infrequently (or after changing the amount of work the test does).",
      "created_at": "2024-08-09T00:32:42Z",
      "updated_at": "2024-08-09T00:32:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30286#discussion_r1710491169",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1710491169"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 998,
      "original_line": 998,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1710554112",
      "pull_request_review_id": 2229144634,
      "id": 1710554112,
      "node_id": "PRRC_kwDOABII585l9PwA",
      "diff_hunk": "@@ -118,6 +118,28 @@ class DepGraph\n         }\n     }\n \n+    /** Construct a DepGraph object given another DepGraph and a mapping from old to new.\n+     *\n+     * Complexity: O(N^2) where N=depgraph.TxCount().\n+     */\n+    DepGraph(const DepGraph<SetType>& depgraph, Span<const ClusterIndex> mapping) noexcept : entries(depgraph.TxCount())",
      "path": "src/cluster_linearize.h",
      "position": 8,
      "original_position": 8,
      "commit_id": "98fd28fabdbf24e89a63b2b2a7a18cf21e681dbf",
      "original_commit_id": "4e7ff15ce48d705b260fdfba5d600b0186846dca",
      "in_reply_to_id": 1705747742,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've simplified the change a bit (now much closer to older deserialization code) and moved it to a separate commit (together with the introduction of the `DepGraph` reordering constructor).",
      "created_at": "2024-08-09T01:47:43Z",
      "updated_at": "2024-08-09T01:47:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30286#discussion_r1710554112",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1710554112"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 125,
      "original_line": 125,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711719710",
      "pull_request_review_id": 2230548079,
      "id": 1711719710,
      "node_id": "PRRC_kwDOABII585mBsUe",
      "diff_hunk": "@@ -596,56 +678,147 @@ class SearchCandidateFinder\n             /** Set of undecided transactions. This must be a subset of m_todo, and have no overlap\n              *  with inc. The set (inc | und) must be topologically valid. */\n             SetType und;\n+            /** (Only when inc is not empty) The subset with the best feerate of any superset of\n+             *  inc that is also a subset of (inc | und), without requiring it to be topologically\n+             *  valid. Its feerate forms a conservative upper bound on how good a set this work\n+             *  item can give rise to. If the real best such feerate does not exceed best's, then\n+             *  this value is not guaranteed to be accurate. */\n+            SetInfo<SetType> pot;\n \n             /** Construct a new work item. */\n-            WorkItem(SetInfo<SetType>&& i, SetType&& u) noexcept :\n-                inc(std::move(i)), und(std::move(u)) {}\n+            WorkItem(SetInfo<SetType>&& i, SetType&& u, SetInfo<SetType>&& p) noexcept :\n+                inc(std::move(i)), und(std::move(u)), pot(std::move(p)) {}\n \n             /** Swap two WorkItems. */\n             void Swap(WorkItem& other) noexcept\n             {\n                 swap(inc, other.inc);\n                 swap(und, other.und);\n+                swap(pot, other.pot);\n             }\n         };\n \n         /** The queue of work items. */\n         VecDeque<WorkItem> queue;\n         queue.reserve(std::max<size_t>(256, 2 * m_todo.Count()));\n \n-        // Create an initial entry with m_todo as undecided. Also use it as best if not provided,\n-        // so that during the work processing loop below, and during the add_fn/split_fn calls, we\n-        // do not need to deal with the best=empty case.\n-        if (best.feerate.IsEmpty()) best = SetInfo(m_depgraph, m_todo);\n-        queue.emplace_back(SetInfo<SetType>{}, SetType{m_todo});\n+        // Create initial entries per connected component of m_todo. While clusters themselves are\n+        // generally connected, this is not necessarily true after some parts have already been\n+        // removed from m_todo. Without this, effort can be wasted on searching \"inc\" sets that\n+        // span multiple components.\n+        auto to_cover = m_todo;\n+        do {\n+            auto component = m_depgraph.FindConnectedComponent(to_cover);\n+            to_cover -= component;\n+            // If best is not provided, set it to the first component, so that during the work\n+            // processing loop below, and during the add_fn/split_fn calls, we do not need to deal\n+            // with the best=empty case.\n+            if (best.feerate.IsEmpty()) best = SetInfo(m_depgraph, component);\n+            queue.emplace_back(/*inc=*/SetInfo<SetType>{},\n+                               /*und=*/std::move(component),\n+                               /*pot=*/SetInfo<SetType>{});\n+        } while (to_cover.Any());\n \n         /** Local copy of the iteration limit. */\n         uint64_t iterations_left = max_iterations;\n \n+        /** The set of transactions in m_todo which have feerate > best's. */\n+        SetType imp = m_todo;\n+        while (imp.Any()) {\n+            ClusterIndex check = imp.Last();\n+            if (m_depgraph.FeeRate(check) >> best.feerate) break;\n+            imp.Reset(check);\n+        }\n+\n         /** Internal function to add an item to the queue of elements to explore if there are any\n-         *  transactions left to split on, and to update best.\n+         *  transactions left to split on, possibly improving it before doing so, and to update\n+         *  best/imp.\n          *\n          * - inc: the \"inc\" value for the new work item (must be topological).\n          * - und: the \"und\" value for the new work item ((inc | und) must be topological).\n+         * - pot: a subset of the \"pot\" value for the new work item (but a superset of inc).\n+         *        It does not need to be the full pot value; missing pot transactions will be added\n+         *        to it by add_fn.\n+         * - reconsider_pot: this function will automatically add topologically-valid subsets of\n+         *                   pot to inc (the jump ahead optimization). If reconsider_pot is true,\n+         *                   the search for such subsets will include the transactions in the pot\n+         *                   argument to the function. If reconsider_pot is false, only transactions\n+         *                   that were missing from the pot argument will be considered. If no new\n+         *                   transactions were added to inc since the last split (i.e., when this\n+         *                   function is called for an exclusion) then there is no need to\n+         *                   set this to true.\n          */\n-        auto add_fn = [&](SetInfo<SetType> inc, SetType und) noexcept {\n+        auto add_fn = [&](SetInfo<SetType> inc, SetType und, SetInfo<SetType> pot, bool reconsider_pot) noexcept {\n             if (!inc.feerate.IsEmpty()) {\n+                /** Which transactions to consider adding to inc. */\n+                SetType consider_inc;\n+                if (reconsider_pot) consider_inc = pot.transactions - inc.transactions;\n+                // Add entries to pot. We iterate over all undecided transactions whose feerate is\n+                // higher than best, and aren't already part of pot. While undecided transactions\n+                // of lower feerate may improve, the resulting pot feerate cannot possibly exceed\n+                // best's (and this item will be skipped in split_fn anyway).\n+                for (auto pos : (imp & und) - pot.transactions) {\n+                    // Determine if adding transaction pos to pot (ignoring topology) would improve\n+                    // it. If not, we're done updating pot. This relies on the fact that\n+                    // m_depgraph, and thus the transactions iterated over, are in decreasing\n+                    // individual feerate order.\n+                    if (!(m_depgraph.FeeRate(pos) >> pot.feerate)) break;\n+                    pot.Set(m_depgraph, pos);\n+                    consider_inc.Set(pos);",
      "path": "src/cluster_linearize.h",
      "position": 254,
      "original_position": 254,
      "commit_id": "98fd28fabdbf24e89a63b2b2a7a18cf21e681dbf",
      "original_commit_id": "f46c0cc3d21c7c55ee077989af09f1d7e20472bc",
      "in_reply_to_id": 1709211453,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oh of course, I was confusing myself :+1: ",
      "created_at": "2024-08-09T15:56:22Z",
      "updated_at": "2024-08-09T15:56:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30286#discussion_r1711719710",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1711719710"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 767,
      "original_line": 767,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1713603196",
      "pull_request_review_id": 2232761781,
      "id": 1713603196,
      "node_id": "PRRC_kwDOABII585mI4J8",
      "diff_hunk": "@@ -723,19 +729,25 @@ class SearchCandidateFinder\n          *\n          * - inc: the \"inc\" value for the new work item (must be topological).\n          * - und: the \"und\" value for the new work item ((inc | und) must be topological).\n+         * - pot: a subset of the \"pot\" value for the new work item (but a superset of inc).\n+         *        It does not need to be the full pot value; missing pot transactions will be added\n+         *        to it by add_fn.\n+         * - grow_inc: whether to attempt moving transactions from und to inc, if it can be proven",
      "path": "src/cluster_linearize.h",
      "position": null,
      "original_position": 62,
      "commit_id": "98fd28fabdbf24e89a63b2b2a7a18cf21e681dbf",
      "original_commit_id": "29cac3e85b23f1264121cbd50e4a09755b0c8352",
      "in_reply_to_id": 1706029402,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@sipa thanks this is really helpful, particularly this part:\r\n\r\n> 4. anc(t) will always include at least one UL transaction (*)\r\n> (*) The jump ahead is exactly what guarantees that anc(t) always includes a UL transaction. If anc(t) was entirely within UH, it would be topologically valid, and thus the parent work item's jump ahead step would have moved it to I already.\r\n\r\nHowever I'm still having trouble with this part:\r\n\r\n> Compare this to what happens in an exclusion branch ...\r\n> 4. desc(t) may include a UH transaction, and because of that it is possible that more transactions can be moved from UL to UH.\r\n> 5. Because of the above, it is possible that there are new topologically-valid subsets of I+UH now that can be moved to I. This can only be due to UH entries added in (4).\r\n\r\nIt seems true that only the entries added in (4) can cause jump-aheads. However, I'm not convinced that existing `pot` transactions cannot be jump-aheadable. For instance, it's possible that we added a new tx that is the parent of a tx that was already in `pot`.\r\n\r\nI added an `assert(anc.Overlaps(elem.und - elem.pot.transactions))` in `split_fn`, right before we call `add_fn` for the inclusion branch in order to check that \"jump ahead guarantees that anc(t) always includes a UL transaction\". The assertion hit, and essentially what I saw was:\r\n\r\n1. Going into a split, we had a really high pot feerate, which included tx `C`.\r\n2. For the exclusion branch, desc(t) included lots of high feerate transactions which lowered the pot feerate. `C` is still in pot. At the start of this `add_fn`, we add tx `P` to pot, since its feerate is now high enough.\r\n3. `P` is part of `consider_inc`, and is added to `inc` in the jump-ahead.\r\n4. `C`, which a child of `P`, would be good because anc(C) is a topological subset of `pot`, but is skipped because `reconsider_pot=false`\r\n5. Later, we split on `C`. `C` is part of UH, not UL, which hits the assert. anc(C) = C which is in UH, but it wasn't added to `inc` during a jump-ahead. This is because `C` was added to UH when its ancestor `P` was considered UL, and `reconsider_pot=false` when `P` was added to UH.\r\n\r\nDoes this make sense? Or maybe my `assert` isn't the right interpretation of this? I don't think this changes what `FindCandidateSet` outputs, but it means I still don't quite understand the \" avoid jump ahead in unmodified pot sets\" commit :(\r\n\r\n(fwiw the fuzz I crashed on is `echo \"AQBJCAgAIysjIyMiIyMjIyMjIyMjIyM6IyMIACMrIyMjIiMjIyMjIyMjIyMjIyMjCBlE+xEvRG9v\r\nAggAbwAR\" | base 64 -d`)",
      "created_at": "2024-08-12T11:40:48Z",
      "updated_at": "2024-08-12T11:40:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30286#discussion_r1713603196",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1713603196"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30286"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 740,
      "side": "RIGHT"
    }
  ]
}