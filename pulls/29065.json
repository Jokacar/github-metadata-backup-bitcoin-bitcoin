{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29065",
    "id": 1641214188,
    "node_id": "PR_kwDOABII585h0vDs",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/29065",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/29065.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/29065.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29065",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29065/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29065/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29065/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/37c75c58202f89b752500f76c872d7f8caf6bdb3",
    "number": 29065,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "bench: wallet, fix change position out of range error",
    "user": {
      "login": "furszy",
      "id": 5377650,
      "node_id": "MDQ6VXNlcjUzNzc2NTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/furszy",
      "html_url": "https://github.com/furszy",
      "followers_url": "https://api.github.com/users/furszy/followers",
      "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
      "organizations_url": "https://api.github.com/users/furszy/orgs",
      "repos_url": "https://api.github.com/users/furszy/repos",
      "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/furszy/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Fixes #29061. Only the benchmark is affected.\r\n\r\nSince #25273, the behavior of 'inserting change at a random position'\r\nis instructed by passing ´std::nullopt´ instead of -1.\r\n\r\nAlso, added missing documentation about the meaning of\r\n'change_pos=std::nullopt' inside 'CWallet::CreateTransaction()'",
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "created_at": "2023-12-12T18:23:11Z",
    "updated_at": "2023-12-13T02:34:50Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "b286efc63224f01834ae9e13bb21af8d982daf02",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "furszy:2023_bench_wallet_fix",
      "ref": "2023_bench_wallet_fix",
      "sha": "37c75c58202f89b752500f76c872d7f8caf6bdb3",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 143624913,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDM2MjQ5MTM=",
        "name": "bitcoin-core",
        "full_name": "furszy/bitcoin-core",
        "owner": {
          "login": "furszy",
          "id": 5377650,
          "node_id": "MDQ6VXNlcjUzNzc2NTA=",
          "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/furszy",
          "html_url": "https://github.com/furszy",
          "followers_url": "https://api.github.com/users/furszy/followers",
          "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
          "organizations_url": "https://api.github.com/users/furszy/orgs",
          "repos_url": "https://api.github.com/users/furszy/repos",
          "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/furszy/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/furszy/bitcoin-core",
        "description": "Bitcoin-Core",
        "fork": true,
        "url": "https://api.github.com/repos/furszy/bitcoin-core",
        "archive_url": "https://api.github.com/repos/furszy/bitcoin-core/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/furszy/bitcoin-core/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/furszy/bitcoin-core/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/furszy/bitcoin-core/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/furszy/bitcoin-core/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/furszy/bitcoin-core/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/furszy/bitcoin-core/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/furszy/bitcoin-core/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/furszy/bitcoin-core/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/furszy/bitcoin-core/contributors",
        "deployments_url": "https://api.github.com/repos/furszy/bitcoin-core/deployments",
        "downloads_url": "https://api.github.com/repos/furszy/bitcoin-core/downloads",
        "events_url": "https://api.github.com/repos/furszy/bitcoin-core/events",
        "forks_url": "https://api.github.com/repos/furszy/bitcoin-core/forks",
        "git_commits_url": "https://api.github.com/repos/furszy/bitcoin-core/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/furszy/bitcoin-core/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/furszy/bitcoin-core/git/tags%7B/sha%7D",
        "git_url": "git://github.com/furszy/bitcoin-core.git",
        "issue_comment_url": "https://api.github.com/repos/furszy/bitcoin-core/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/furszy/bitcoin-core/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/furszy/bitcoin-core/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/furszy/bitcoin-core/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/furszy/bitcoin-core/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/furszy/bitcoin-core/languages",
        "merges_url": "https://api.github.com/repos/furszy/bitcoin-core/merges",
        "milestones_url": "https://api.github.com/repos/furszy/bitcoin-core/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/furszy/bitcoin-core/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/furszy/bitcoin-core/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/furszy/bitcoin-core/releases%7B/id%7D",
        "ssh_url": "git@github.com:furszy/bitcoin-core.git",
        "stargazers_url": "https://api.github.com/repos/furszy/bitcoin-core/stargazers",
        "statuses_url": "https://api.github.com/repos/furszy/bitcoin-core/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/furszy/bitcoin-core/subscribers",
        "subscription_url": "https://api.github.com/repos/furszy/bitcoin-core/subscription",
        "tags_url": "https://api.github.com/repos/furszy/bitcoin-core/tags",
        "teams_url": "https://api.github.com/repos/furszy/bitcoin-core/teams",
        "trees_url": "https://api.github.com/repos/furszy/bitcoin-core/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/furszy/bitcoin-core.git",
        "hooks_url": "https://api.github.com/repos/furszy/bitcoin-core/hooks",
        "svn_url": "https://github.com/furszy/bitcoin-core",
        "homepage": "",
        "language": "C++",
        "forks_count": 3,
        "stargazers_count": 2,
        "watchers_count": 2,
        "size": 389906,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-12-12T18:20:41Z",
        "created_at": "2018-08-05T15:28:43Z",
        "updated_at": "2023-08-30T13:12:58Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "d646ca35d991e4f694096fdbd2d2ebd8cebf244e",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 36151,
        "stargazers_count": 72626,
        "watchers_count": 72626,
        "size": 246519,
        "default_branch": "master",
        "open_issues_count": 672,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-12-13T02:36:20Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-12-13T00:52:41Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29065"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 8,
    "deletions": 8,
    "changed_files": 6,
    "commits": 1,
    "review_comments": 0,
    "comments": 4
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDM3Yzc1YzU4MjAyZjg5Yjc1MjUwMGY3NmM4NzJkN2Y4Y2FmNmJkYjM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/37c75c58202f89b752500f76c872d7f8caf6bdb3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/37c75c58202f89b752500f76c872d7f8caf6bdb3",
      "tree": {
        "sha": "8992cd7b761c63a5654dd5219a4e05f5e717bb96",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8992cd7b761c63a5654dd5219a4e05f5e717bb96"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 8992cd7b761c63a5654dd5219a4e05f5e717bb96\nparent a7484be65f7617d77aff92ecf6f5fb26015d27a8\nauthor furszy <matiasfurszyfer@protonmail.com> 1702404203 -0300\ncommitter furszy <matiasfurszyfer@protonmail.com> 1702405238 -0300\n\ntest: wallet, fix change position out of range error\n\nSince #25273, the behavior of 'inserting change at a random\nposition' is instructed by passing std::nullopt instead of -1.\n\nAlso, added missing documentation about the meaning of\n'change_pos=std::nullopt' inside 'CWallet::CreateTransaction()'\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEA++0fqwRHQpmlZfQXdI8zGhqpiMFAmV4pHYACgkQXdI8zGhq\npiNDnA//V3+d65i6dAEFFo28BlJeww1lSu5OKg0k0EThhKvX6lMcNNVdeTL8AW28\nedfxGfaJOD9Ym2t7/kg8t+nhaUnv27HiccOxkbHX9Bz3MgFXQSdwIm8Iz31ezMPD\nNKKaFxDPIwqW6d5zPzJwD4HFY604sTBVYlMWvdrVUCEp7ZFqFE6ixx5+PyeG3saH\nQsLwgXcNA4agQq8hrI8oX8ue1NHq20Cv6LQB725V7csD1BweMkamwHzk8xwLBrlC\nMNpbDZIZNwz9C8YSAGrZ5Q6bbCXekEx1bE2c9WJjTz2eGM+gN4BeebdeUyYhqd9b\ninIIpKCoy8/bUSlyXjz0Q4Rd9I3hteYNQuM7V5zCQCKEZbUszCxxOYWCb39XO5oF\nQkmLrTwn/KwTiXwQpQss6X8WdVb8UC4+ysZrMK4bsA0rs1QKUSMaeJ+7jppeyKEv\nSv6dNZ4fpg5/ZomrZ0HrEne93IXt/BpDjxb4wlFlMUVhBmQSvR1ToH21gep7pkX7\nrVZ0rudGtylirsLruIoj2BI2N9TVeLcL40agtgRYTCeugI5jlFELVdsaaHpD2J8Q\nJlwiPUug8QvIcU5i9I8QiPNLjV6+zanlBGINa6tt51S7ZcZcI5945Mbb6BP9iHs+\nxkpd0z89ustxduV0xUvJYawzUcbMdB+OCdLSIr12AISORixV/uY=\n=TX/P\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a7484be65f7617d77aff92ecf6f5fb26015d27a8",
          "sha": "a7484be65f7617d77aff92ecf6f5fb26015d27a8",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a7484be65f7617d77aff92ecf6f5fb26015d27a8"
        }
      ],
      "message": "test: wallet, fix change position out of range error\n\nSince #25273, the behavior of 'inserting change at a random\nposition' is instructed by passing std::nullopt instead of -1.\n\nAlso, added missing documentation about the meaning of\n'change_pos=std::nullopt' inside 'CWallet::CreateTransaction()'",
      "committer": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-12-12T18:20:38Z"
      },
      "author": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2023-12-12T18:03:23Z"
      },
      "sha": "37c75c58202f89b752500f76c872d7f8caf6bdb3"
    },
    {
      "event": "commented",
      "id": 1852579304,
      "node_id": "IC_kwDOABII585ubB3o",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1852579304",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-12T18:23:14Z",
      "updated_at": "2023-12-13T02:34:27Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/29065).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [achow101](https://github.com/bitcoin/bitcoin/pull/29065#issuecomment-1852720898), [kevkevinpal](https://github.com/bitcoin/bitcoin/pull/29065#issuecomment-1853172985) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29065#issuecomment-1852579304",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29065"
    },
    {
      "event": "labeled",
      "id": 11227241078,
      "node_id": "LE_lADOABII5855fnY_zwAAAAKdMhp2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11227241078",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-12T18:23:17Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-12T18:30:48Z",
      "updated_at": "2023-12-12T18:30:48Z",
      "source": {
        "issue": {
          "id": 2037860377,
          "node_id": "I_kwDOABII5855d0gZ",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29061",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29061/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29061/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29061/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/29061",
          "number": 29061,
          "state": "open",
          "state_reason": null,
          "title": "Benchmark WalletCreateTxUsePresetInputsAndCoinSelection crashes due to #25273",
          "body": "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Current behaviour\r\n\r\nThe WalletCreateTxUsePresetInputsAndCoinSelection benchmark crashes on master due to the commit 758501b71391136c33b525b1a0109b990d4f463e introduced in #25273 (I used git bisect to verify).\r\n\r\n```\r\nvalgrind ./src/bench/bench_bitcoin -filter=WalletCreateTxUsePresetInputsAndCoinSelection -min-time=10000\r\n==34277== Memcheck, a memory error detector\r\n==34277== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\r\n==34277== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info\r\n==34277== Command: ./src/bench/bench_bitcoin -filter=WalletCreateTxUsePresetInputsAndCoinSelection -min-time=10000\r\n==34277==\r\nbench_bitcoin: bench/wallet_create_tx.cpp:135: WalletCreateTx(ankerl::nanobench::Bench&, OutputType, bool, std::optional<PreSelectInputs>)::<lambda()>: Assertion `tx_res' failed.\r\n==34277==\r\n==34277== Process terminating with default action of signal 6 (SIGABRT)\r\n==34277==    at 0x4DD79FC: __pthread_kill_implementation (pthread_kill.c:44)\r\n==34277==    by 0x4DD79FC: __pthread_kill_internal (pthread_kill.c:78)\r\n==34277==    by 0x4DD79FC: pthread_kill@@GLIBC_2.34 (pthread_kill.c:89)\r\n==34277==    by 0x4D83475: raise (raise.c:26)\r\n==34277==    by 0x4D697F2: abort (abort.c:79)\r\n==34277==    by 0x4D6971A: __assert_fail_base.cold (assert.c:92)\r\n==34277==    by 0x4D7AE95: __assert_fail (assert.c:101)\r\n==34277==    by 0x29607B: operator() (wallet_create_tx.cpp:135)\r\n==34277==    by 0x29607B: ankerl::nanobench::Bench& ankerl::nanobench::Bench::run<WalletCreateTx(ankerl::nanobench::Bench&, OutputType, bool, std::optional<PreSelectInputs>)::{lambda()#3}>(WalletCreateTx(ankerl::nanobench::Bench&, OutputType, bool, std::optional<PreSelectInputs>)::{lambda()#3}&&) [clone .isra.0] (nanobench.h:1221)\r\n==34277==    by 0x297F81: WalletCreateTx(ankerl::nanobench::Bench&, OutputType, bool, std::optional<PreSelectInputs>) [clone .constprop.0] [clone .isra.0] (wallet_create_tx.cpp:132)\r\n==34277==    by 0x21B74A: operator() (std_function.h:590)\r\n==34277==    by 0x21B74A: benchmark::BenchRunner::RunAll(benchmark::Args const&) (bench.cpp:119)\r\n==34277==    by 0x1F8B96: main (bench_bitcoin.cpp:132)\r\n==34277==\r\n==34277== HEAP SUMMARY:\r\n==34277==     in use at exit: 48,159,834 bytes in 72,552 blocks\r\n==34277==   total heap usage: 1,668,158 allocs, 1,595,606 frees, 552,252,252 bytes allocated\r\n==34277==\r\n==34277== LEAK SUMMARY:\r\n==34277==    definitely lost: 0 bytes in 0 blocks\r\n==34277==    indirectly lost: 0 bytes in 0 blocks\r\n==34277==      possibly lost: 912 bytes in 3 blocks\r\n==34277==    still reachable: 48,158,922 bytes in 72,549 blocks\r\n==34277==         suppressed: 0 bytes in 0 blocks\r\n==34277== Rerun with --leak-check=full to see details of leaked memory\r\n==34277==\r\n==34277== For lists of detected and suppressed errors, rerun with: -s\r\n==34277== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\r\nAborted\r\n```\r\n\r\n### Expected behaviour\r\n\r\nNo crash\r\n\r\n### Steps to reproduce\r\n\r\n`git checkout master && make -j$(nproc)`\r\n`valgrind ./src/bench/bench_bitcoin -filter=WalletCreateTxUsePresetInputsAndCoinSelection -min-time=10000`\r\n\r\n### Relevant log output\r\n\r\n_No response_\r\n\r\n### How did you obtain Bitcoin Core\r\n\r\nCompiled from source\r\n\r\n### What version of Bitcoin Core are you using?\r\n\r\nmaster@758501b71391136c33b525b1a0109b990d4f463e\r\n\r\n### Operating system and version\r\n\r\nUbuntu 22.04.3 LTS\r\n\r\n### Machine specifications\r\n\r\n_No response_",
          "user": {
            "login": "aureleoules",
            "id": 22493292,
            "node_id": "MDQ6VXNlcjIyNDkzMjky",
            "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aureleoules",
            "html_url": "https://github.com/aureleoules",
            "followers_url": "https://api.github.com/users/aureleoules/followers",
            "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
            "organizations_url": "https://api.github.com/users/aureleoules/orgs",
            "repos_url": "https://api.github.com/users/aureleoules/repos",
            "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/aureleoules/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/61",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/61",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/61/labels",
            "id": 9334188,
            "node_id": "MI_kwDOABII584Ajm2s",
            "number": 61,
            "state": "open",
            "title": "27.0",
            "description": "",
            "creator": {
              "login": "sipa",
              "id": 548488,
              "node_id": "MDQ6VXNlcjU0ODQ4OA==",
              "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/sipa",
              "html_url": "https://github.com/sipa",
              "followers_url": "https://api.github.com/users/sipa/followers",
              "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
              "organizations_url": "https://api.github.com/users/sipa/orgs",
              "repos_url": "https://api.github.com/users/sipa/repos",
              "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/sipa/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 11,
            "closed_issues": 22,
            "created_at": "2023-04-27T08:01:57Z",
            "updated_at": "2023-12-12T19:54:47Z"
          },
          "locked": false,
          "comments": 9,
          "created_at": "2023-12-12T14:21:52Z",
          "updated_at": "2023-12-12T20:34:35Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1852720898,
      "node_id": "IC_kwDOABII585ubkcC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1852720898",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-12T20:02:56Z",
      "updated_at": "2023-12-12T20:02:56Z",
      "author_association": "MEMBER",
      "body": "ACK 37c75c58202f89b752500f76c872d7f8caf6bdb3",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29065#issuecomment-1852720898",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29065"
    },
    {
      "event": "review_requested",
      "id": 11228131641,
      "node_id": "RRE_lADOABII5855fnY_zwAAAAKdP7E5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11228131641",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-12T20:03:02Z",
      "requested_reviewer": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "commented",
      "id": 1852759253,
      "node_id": "IC_kwDOABII585ubtzV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1852759253",
      "actor": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-12T20:31:48Z",
      "updated_at": "2023-12-12T20:31:48Z",
      "author_association": "MEMBER",
      "body": "This pull does fix the crash but I am still getting valgrind errors when executing the benchmark, which did not happen on master before. I haven't verified that these errors were introduced by #25273 but I would suppose so.\r\n\r\n```\r\nvalgrind ./src/bench/bench_bitcoin -filter=WalletCreateTxUsePresetInputsAndCoinSelection\r\n==243376== Memcheck, a memory error detector\r\n==243376== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\r\n==243376== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info\r\n==243376== Command: ./src/bench/bench_bitcoin -filter=WalletCreateTxUsePresetInputsAndCoinSelection\r\n==243376==\r\n==243376== Use of uninitialised value of size 8\r\n==243376==    at 0x606AF0: wallet::CreateTransactionInternal(wallet::CWallet&, std::vector<wallet::CRecipient, std::allocator<wallet::CRecipient> > const&, std::optional<unsigned int>, wallet::CCoinControl const&, bool) (spend.cpp:1240)\r\n==243376==    by 0x6086A6: wallet::CreateTransaction(wallet::CWallet&, std::vector<wallet::CRecipient, std::allocator<wallet::CRecipient> > const&, std::optional<unsigned int>, wallet::CCoinControl const&, bool) (spend.cpp:1333)\r\n==243376==    by 0x29843E: operator() (wallet_create_tx.cpp:132)\r\n==243376==    by 0x29843E: ankerl::nanobench::Bench& ankerl::nanobench::Bench::run<WalletCreateTx(ankerl::nanobench::Bench&, OutputType, bool, std::optional<PreSelectInputs>)::{lambda()#3}>(WalletCreateTx(ankerl::nanobench::Bench&, OutputType, bool, std::optional<PreSelectInputs>)::{lambda()#3}&&) [clone .isra.0] (nanobench.h:1221)\r\n==243376==    by 0x29A381: WalletCreateTx(ankerl::nanobench::Bench&, OutputType, bool, std::optional<PreSelectInputs>) [clone .constprop.0] [clone .isra.0] (wallet_create_tx.cpp:130)\r\n==243376==    by 0x21BA5A: operator() (std_function.h:590)\r\n==243376==    by 0x21BA5A: benchmark::BenchRunner::RunAll(benchmark::Args const&) (bench.cpp:119)\r\n==243376==    by 0x1F84B6: main (bench_bitcoin.cpp:132)\r\n==243376==\r\n==243376== Use of uninitialised value of size 8\r\n==243376==    at 0x7FABE9: IsDust(CTxOut const&, CFeeRate const&) (policy.cpp:67)\r\n==243376==    by 0x606B2B: wallet::CreateTransactionInternal(wallet::CWallet&, std::vector<wallet::CRecipient, std::allocator<wallet::CRecipient> > const&, std::optional<unsigned int>, wallet::CCoinControl const&, bool) (spend.cpp:1249)\r\n==243376==    by 0x6086A6: wallet::CreateTransaction(wallet::CWallet&, std::vector<wallet::CRecipient, std::allocator<wallet::CRecipient> > const&, std::optional<unsigned int>, wallet::CCoinControl const&, bool) (spend.cpp:1333)\r\n==243376==    by 0x29843E: operator() (wallet_create_tx.cpp:132)\r\n==243376==    by 0x29843E: ankerl::nanobench::Bench& ankerl::nanobench::Bench::run<WalletCreateTx(ankerl::nanobench::Bench&, OutputType, bool, std::optional<PreSelectInputs>)::{lambda()#3}>(WalletCreateTx(ankerl::nanobench::Bench&, OutputType, bool, std::optional<PreSelectInputs>)::{lambda()#3}&&) [clone .isra.0] (nanobench.h:1221)\r\n==243376==    by 0x29A381: WalletCreateTx(ankerl::nanobench::Bench&, OutputType, bool, std::optional<PreSelectInputs>) [clone .constprop.0] [clone .isra.0] (wallet_create_tx.cpp:130)\r\n==243376==    by 0x21BA5A: operator() (std_function.h:590)\r\n==243376==    by 0x21BA5A: benchmark::BenchRunner::RunAll(benchmark::Args const&) (bench.cpp:119)\r\n==243376==    by 0x1F84B6: main (bench_bitcoin.cpp:132)\r\n==243376==\r\n==243376== Use of uninitialised value of size 8\r\n==243376==    at 0x7FAACD: is_direct (prevector.h:170)\r\n==243376==    by 0x7FAACD: size (prevector.h:292)\r\n==243376==    by 0x7FAACD: IsUnspendable (script.h:554)\r\n==243376==    by 0x7FAACD: GetDustThreshold(CTxOut const&, CFeeRate const&) (policy.cpp:42)\r\n==243376==    by 0x7FAC00: IsDust(CTxOut const&, CFeeRate const&) (policy.cpp:67)\r\n==243376==    by 0x606B2B: wallet::CreateTransactionInternal(wallet::CWallet&, std::vector<wallet::CRecipient, std::allocator<wallet::CRecipient> > const&, std::optional<unsigned int>, wallet::CCoinControl const&, bool) (spend.cpp:1249)\r\n==243376==    by 0x6086A6: wallet::CreateTransaction(wallet::CWallet&, std::vector<wallet::CRecipient, std::allocator<wallet::CRecipient> > const&, std::optional<unsigned int>, wallet::CCoinControl const&, bool) (spend.cpp:1333)\r\n==243376==    by 0x29843E: operator() (wallet_create_tx.cpp:132)\r\n==243376==    by 0x29843E: ankerl::nanobench::Bench& ankerl::nanobench::Bench::run<WalletCreateTx(ankerl::nanobench::Bench&, OutputType, bool, std::optional<PreSelectInputs>)::{lambda()#3}>(WalletCreateTx(ankerl::nanobench::Bench&, OutputType, bool, std::optional<PreSelectInputs>)::{lambda()#3}&&) [clone .isra.0] (nanobench.h:1221)\r\n==243376==    by 0x29A381: WalletCreateTx(ankerl::nanobench::Bench&, OutputType, bool, std::optional<PreSelectInputs>) [clone .constprop.0] [clone .isra.0] (wallet_create_tx.cpp:130)\r\n==243376==    by 0x21BA5A: operator() (std_function.h:590)\r\n==243376==    by 0x21BA5A: benchmark::BenchRunner::RunAll(benchmark::Args const&) (bench.cpp:119)\r\n==243376==    by 0x1F84B6: main (bench_bitcoin.cpp:132)\r\n==243376==\r\n==243376== Use of uninitialised value of size 8\r\n==243376==    at 0x7FAB88: IsUnspendable (script.h:554)\r\n==243376==    by 0x7FAB88: GetDustThreshold(CTxOut const&, CFeeRate const&) (policy.cpp:42)\r\n==243376==    by 0x7FAC00: IsDust(CTxOut const&, CFeeRate const&) (policy.cpp:67)\r\n==243376==    by 0x606B2B: wallet::CreateTransactionInternal(wallet::CWallet&, std::vector<wallet::CRecipient, std::allocator<wallet::CRecipient> > const&, std::optional<unsigned int>, wallet::CCoinControl const&, bool) (spend.cpp:1249)\r\n==243376==    by 0x6086A6: wallet::CreateTransaction(wallet::CWallet&, std::vector<wallet::CRecipient, std::allocator<wallet::CRecipient> > const&, std::optional<unsigned int>, wallet::CCoinControl const&, bool) (spend.cpp:1333)\r\n==243376==    by 0x29843E: operator() (wallet_create_tx.cpp:132)\r\n==243376==    by 0x29843E: ankerl::nanobench::Bench& ankerl::nanobench::Bench::run<WalletCreateTx(ankerl::nanobench::Bench&, OutputType, bool, std::optional<PreSelectInputs>)::{lambda()#3}>(WalletCreateTx(ankerl::nanobench::Bench&, OutputType, bool, std::optional<PreSelectInputs>)::{lambda()#3}&&) [clone .isra.0] (nanobench.h:1221)\r\n==243376==    by 0x29A381: WalletCreateTx(ankerl::nanobench::Bench&, OutputType, bool, std::optional<PreSelectInputs>) [clone .constprop.0] [clone .isra.0] (wallet_create_tx.cpp:130)\r\n==243376==    by 0x21BA5A: operator() (std_function.h:590)\r\n==243376==    by 0x21BA5A: benchmark::BenchRunner::RunAll(benchmark::Args const&) (bench.cpp:119)\r\n==243376==    by 0x1F84B6: main (bench_bitcoin.cpp:132)\r\n==243376==\r\n==243376== Use of uninitialised value of size 8\r\n==243376==    at 0x8F8364: is_direct (prevector.h:170)\r\n==243376==    by 0x8F8364: size (prevector.h:292)\r\n==243376==    by 0x8F8364: CScript::IsWitnessProgram(int&, std::vector<unsigned char, std::allocator<unsigned char> >&) const (script.cpp:228)\r\n==243376==    by 0x7FAB1F: GetDustThreshold(CTxOut const&, CFeeRate const&) (policy.cpp:54)\r\n==243376==    by 0x7FAC00: IsDust(CTxOut const&, CFeeRate const&) (policy.cpp:67)\r\n==243376==    by 0x606B2B: wallet::CreateTransactionInternal(wallet::CWallet&, std::vector<wallet::CRecipient, std::allocator<wallet::CRecipient> > const&, std::optional<unsigned int>, wallet::CCoinControl const&, bool) (spend.cpp:1249)\r\n==243376==    by 0x6086A6: wallet::CreateTransaction(wallet::CWallet&, std::vector<wallet::CRecipient, std::allocator<wallet::CRecipient> > const&, std::optional<unsigned int>, wallet::CCoinControl const&, bool) (spend.cpp:1333)\r\n==243376==    by 0x29843E: operator() (wallet_create_tx.cpp:132)\r\n==243376==    by 0x29843E: ankerl::nanobench::Bench& ankerl::nanobench::Bench::run<WalletCreateTx(ankerl::nanobench::Bench&, OutputType, bool, std::optional<PreSelectInputs>)::{lambda()#3}>(WalletCreateTx(ankerl::nanobench::Bench&, OutputType, bool, std::optional<PreSelectInputs>)::{lambda()#3}&&) [clone .isra.0] (nanobench.h:1221)\r\n==243376==    by 0x29A381: WalletCreateTx(ankerl::nanobench::Bench&, OutputType, bool, std::optional<PreSelectInputs>) [clone .constprop.0] [clone .isra.0] (wallet_create_tx.cpp:130)\r\n==243376==    by 0x21BA5A: operator() (std_function.h:590)\r\n==243376==    by 0x21BA5A: benchmark::BenchRunner::RunAll(benchmark::Args const&) (bench.cpp:119)\r\n==243376==    by 0x1F84B6: main (bench_bitcoin.cpp:132)\r\n==243376==\r\n==243376== Use of uninitialised value of size 8\r\n==243376==    at 0x8F83AB: CScript::IsWitnessProgram(int&, std::vector<unsigned char, std::allocator<unsigned char> >&) const (script.cpp:231)\r\n==243376==    by 0x7FAB1F: GetDustThreshold(CTxOut const&, CFeeRate const&) (policy.cpp:54)\r\n==243376==    by 0x7FAC00: IsDust(CTxOut const&, CFeeRate const&) (policy.cpp:67)\r\n==243376==    by 0x606B2B: wallet::CreateTransactionInternal(wallet::CWallet&, std::vector<wallet::CRecipient, std::allocator<wallet::CRecipient> > const&, std::optional<unsigned int>, wallet::CCoinControl const&, bool) (spend.cpp:1249)\r\n==243376==    by 0x6086A6: wallet::CreateTransaction(wallet::CWallet&, std::vector<wallet::CRecipient, std::allocator<wallet::CRecipient> > const&, std::optional<unsigned int>, wallet::CCoinControl const&, bool) (spend.cpp:1333)\r\n==243376==    by 0x29843E: operator() (wallet_create_tx.cpp:132)\r\n==243376==    by 0x29843E: ankerl::nanobench::Bench& ankerl::nanobench::Bench::run<WalletCreateTx(ankerl::nanobench::Bench&, OutputType, bool, std::optional<PreSelectInputs>)::{lambda()#3}>(WalletCreateTx(ankerl::nanobench::Bench&, OutputType, bool, std::optional<PreSelectInputs>)::{lambda()#3}&&) [clone .isra.0] (nanobench.h:1221)\r\n==243376==    by 0x29A381: WalletCreateTx(ankerl::nanobench::Bench&, OutputType, bool, std::optional<PreSelectInputs>) [clone .constprop.0] [clone .isra.0] (wallet_create_tx.cpp:130)\r\n==243376==    by 0x21BA5A: operator() (std_function.h:590)\r\n==243376==    by 0x21BA5A: benchmark::BenchRunner::RunAll(benchmark::Args const&) (bench.cpp:119)\r\n==243376==    by 0x1F84B6: main (bench_bitcoin.cpp:132)\r\n==243376==\r\n==243376== Use of uninitialised value of size 8\r\n==243376==    at 0x8F83BF: item_ptr (prevector.h:167)\r\n==243376==    by 0x8F83BF: operator[] (prevector.h:322)\r\n==243376==    by 0x8F83BF: CScript::IsWitnessProgram(int&, std::vector<unsigned char, std::allocator<unsigned char> >&) const (script.cpp:234)\r\n==243376==    by 0x7FAB1F: GetDustThreshold(CTxOut const&, CFeeRate const&) (policy.cpp:54)\r\n==243376==    by 0x7FAC00: IsDust(CTxOut const&, CFeeRate const&) (policy.cpp:67)\r\n==243376==    by 0x606B2B: wallet::CreateTransactionInternal(wallet::CWallet&, std::vector<wallet::CRecipient, std::allocator<wallet::CRecipient> > const&, std::optional<unsigned int>, wallet::CCoinControl const&, bool) (spend.cpp:1249)\r\n==243376==    by 0x6086A6: wallet::CreateTransaction(wallet::CWallet&, std::vector<wallet::CRecipient, std::allocator<wallet::CRecipient> > const&, std::optional<unsigned int>, wallet::CCoinControl const&, bool) (spend.cpp:1333)\r\n==243376==    by 0x29843E: operator() (wallet_create_tx.cpp:132)\r\n==243376==    by 0x29843E: ankerl::nanobench::Bench& ankerl::nanobench::Bench::run<WalletCreateTx(ankerl::nanobench::Bench&, OutputType, bool, std::optional<PreSelectInputs>)::{lambda()#3}>(WalletCreateTx(ankerl::nanobench::Bench&, OutputType, bool, std::optional<PreSelectInputs>)::{lambda()#3}&&) [clone .isra.0] (nanobench.h:1221)\r\n==243376==    by 0x29A381: WalletCreateTx(ankerl::nanobench::Bench&, OutputType, bool, std::optional<PreSelectInputs>) [clone .constprop.0] [clone .isra.0] (wallet_create_tx.cpp:130)\r\n==243376==    by 0x21BA5A: operator() (std_function.h:590)\r\n==243376==    by 0x21BA5A: benchmark::BenchRunner::RunAll(benchmark::Args const&) (bench.cpp:119)\r\n==243376==    by 0x1F84B6: main (bench_bitcoin.cpp:132)\r\n==243376==\r\n==243376== Use of uninitialised value of size 8\r\n==243376==    at 0x8F840B: is_direct (prevector.h:170)\r\n==243376==    by 0x8F840B: size (prevector.h:292)\r\n==243376==    by 0x8F840B: end (prevector.h:302)\r\n==243376==    by 0x8F840B: CScript::IsWitnessProgram(int&, std::vector<unsigned char, std::allocator<unsigned char> >&) const (script.cpp:236)\r\n==243376==    by 0x7FAB1F: GetDustThreshold(CTxOut const&, CFeeRate const&) (policy.cpp:54)\r\n==243376==    by 0x7FAC00: IsDust(CTxOut const&, CFeeRate const&) (policy.cpp:67)\r\n==243376==    by 0x606B2B: wallet::CreateTransactionInternal(wallet::CWallet&, std::vector<wallet::CRecipient, std::allocator<wallet::CRecipient> > const&, std::optional<unsigned int>, wallet::CCoinControl const&, bool) (spend.cpp:1249)\r\n==243376==    by 0x6086A6: wallet::CreateTransaction(wallet::CWallet&, std::vector<wallet::CRecipient, std::allocator<wallet::CRecipient> > const&, std::optional<unsigned int>, wallet::CCoinControl const&, bool) (spend.cpp:1333)\r\n==243376==    by 0x29843E: operator() (wallet_create_tx.cpp:132)\r\n==243376==    by 0x29843E: ankerl::nanobench::Bench& ankerl::nanobench::Bench::run<WalletCreateTx(ankerl::nanobench::Bench&, OutputType, bool, std::optional<PreSelectInputs>)::{lambda()#3}>(WalletCreateTx(ankerl::nanobench::Bench&, OutputType, bool, std::optional<PreSelectInputs>)::{lambda()#3}&&) [clone .isra.0] (nanobench.h:1221)\r\n==243376==    by 0x29A381: WalletCreateTx(ankerl::nanobench::Bench&, OutputType, bool, std::optional<PreSelectInputs>) [clone .constprop.0] [clone .isra.0] (wallet_create_tx.cpp:130)\r\n==243376==    by 0x21BA5A: operator() (std_function.h:590)\r\n==243376==    by 0x21BA5A: benchmark::BenchRunner::RunAll(benchmark::Args const&) (bench.cpp:119)\r\n==243376==    by 0x1F84B6: main (bench_bitcoin.cpp:132)\r\n==243376==\r\n==243376== Conditional jump or move depends on uninitialised value(s)\r\n==243376==    at 0x8F844B: _S_check_init_len (stl_vector.h:1769)\r\n==243376==    by 0x8F844B: _M_range_initialize<prevector<28, unsigned char>::const_iterator> (stl_vector.h:1582)\r\n==243376==    by 0x8F844B: vector<prevector<28, unsigned char>::const_iterator> (stl_vector.h:657)\r\n==243376==    by 0x8F844B: CScript::IsWitnessProgram(int&, std::vector<unsigned char, std::allocator<unsigned char> >&) const (script.cpp:236)\r\n==243376==    by 0x7FAB1F: GetDustThreshold(CTxOut const&, CFeeRate const&) (policy.cpp:54)\r\n==243376==    by 0x7FAC00: IsDust(CTxOut const&, CFeeRate const&) (policy.cpp:67)\r\n==243376==    by 0x606B2B: wallet::CreateTransactionInternal(wallet::CWallet&, std::vector<wallet::CRecipient, std::allocator<wallet::CRecipient> > const&, std::optional<unsigned int>, wallet::CCoinControl const&, bool) (spend.cpp:1249)\r\n==243376==    by 0x6086A6: wallet::CreateTransaction(wallet::CWallet&, std::vector<wallet::CRecipient, std::allocator<wallet::CRecipient> > const&, std::optional<unsigned int>, wallet::CCoinControl const&, bool) (spend.cpp:1333)\r\n==243376==    by 0x29843E: operator() (wallet_create_tx.cpp:132)\r\n==243376==    by 0x29843E: ankerl::nanobench::Bench& ankerl::nanobench::Bench::run<WalletCreateTx(ankerl::nanobench::Bench&, OutputType, bool, std::optional<PreSelectInputs>)::{lambda()#3}>(WalletCreateTx(ankerl::nanobench::Bench&, OutputType, bool, std::optional<PreSelectInputs>)::{lambda()#3}&&) [clone .isra.0] (nanobench.h:1221)\r\n==243376==    by 0x29A381: WalletCreateTx(ankerl::nanobench::Bench&, OutputType, bool, std::optional<PreSelectInputs>) [clone .constprop.0] [clone .isra.0] (wallet_create_tx.cpp:130)\r\n==243376==    by 0x21BA5A: operator() (std_function.h:590)\r\n==243376==    by 0x21BA5A: benchmark::BenchRunner::RunAll(benchmark::Args const&) (bench.cpp:119)\r\n==243376==    by 0x1F84B6: main (bench_bitcoin.cpp:132)\r\n==243376==\r\n==243376== Use of uninitialised value of size 8\r\n==243376==    at 0x8F8470: __copy_m<prevector<28, unsigned char>::const_iterator, unsigned char*> (stl_algobase.h:385)\r\n==243376==    by 0x8F8470: __copy_move_a2<false, prevector<28, unsigned char>::const_iterator, unsigned char*> (stl_algobase.h:495)\r\n==243376==    by 0x8F8470: __copy_move_a1<false, prevector<28, unsigned char>::const_iterator, unsigned char*> (stl_algobase.h:522)\r\n==243376==    by 0x8F8470: __copy_move_a<false, prevector<28, unsigned char>::const_iterator, unsigned char*> (stl_algobase.h:529)\r\n==243376==    by 0x8F8470: copy<prevector<28, unsigned char>::const_iterator, unsigned char*> (stl_algobase.h:620)\r\n==243376==    by 0x8F8470: __uninit_copy<prevector<28, unsigned char>::const_iterator, unsigned char*> (stl_uninitialized.h:110)\r\n==243376==    by 0x8F8470: uninitialized_copy<prevector<28, unsigned char>::const_iterator, unsigned char*> (stl_uninitialized.h:151)\r\n==243376==    by 0x8F8470: __uninitialized_copy_a<prevector<28, unsigned char>::const_iterator, unsigned char*, unsigned char> (stl_uninitialized.h:333)\r\n==243376==    by 0x8F8470: _M_range_initialize<prevector<28, unsigned char>::const_iterator> (stl_vector.h:1585)\r\n==243376==    by 0x8F8470: vector<prevector<28, unsigned char>::const_iterator> (stl_vector.h:657)\r\n==243376==    by 0x8F8470: CScript::IsWitnessProgram(int&, std::vector<unsigned char, std::allocator<unsigned char> >&) const (script.cpp:236)\r\n==243376==    by 0x7FAB1F: GetDustThreshold(CTxOut const&, CFeeRate const&) (policy.cpp:54)\r\n==243376==    by 0x7FAC00: IsDust(CTxOut const&, CFeeRate const&) (policy.cpp:67)\r\n==243376==    by 0x606B2B: wallet::CreateTransactionInternal(wallet::CWallet&, std::vector<wallet::CRecipient, std::allocator<wallet::CRecipient> > const&, std::optional<unsigned int>, wallet::CCoinControl const&, bool) (spend.cpp:1249)\r\n==243376==    by 0x6086A6: wallet::CreateTransaction(wallet::CWallet&, std::vector<wallet::CRecipient, std::allocator<wallet::CRecipient> > const&, std::optional<unsigned int>, wallet::CCoinControl const&, bool) (spend.cpp:1333)\r\n==243376==    by 0x29843E: operator() (wallet_create_tx.cpp:132)\r\n==243376==    by 0x29843E: ankerl::nanobench::Bench& ankerl::nanobench::Bench::run<WalletCreateTx(ankerl::nanobench::Bench&, OutputType, bool, std::optional<PreSelectInputs>)::{lambda()#3}>(WalletCreateTx(ankerl::nanobench::Bench&, OutputType, bool, std::optional<PreSelectInputs>)::{lambda()#3}&&) [clone .isra.0] (nanobench.h:1221)\r\n==243376==    by 0x29A381: WalletCreateTx(ankerl::nanobench::Bench&, OutputType, bool, std::optional<PreSelectInputs>) [clone .constprop.0] [clone .isra.0] (wallet_create_tx.cpp:130)\r\n==243376==    by 0x21BA5A: operator() (std_function.h:590)\r\n==243376==    by 0x21BA5A: benchmark::BenchRunner::RunAll(benchmark::Args const&) (bench.cpp:119)\r\n==243376==    by 0x1F84B6: main (bench_bitcoin.cpp:132)\r\n==243376==\r\n==243376== Use of uninitialised value of size 8\r\n==243376==    at 0x8F8482: __copy_m<prevector<28, unsigned char>::const_iterator, unsigned char*> (stl_algobase.h:383)\r\n==243376==    by 0x8F8482: __copy_move_a2<false, prevector<28, unsigned char>::const_iterator, unsigned char*> (stl_algobase.h:495)\r\n==243376==    by 0x8F8482: __copy_move_a1<false, prevector<28, unsigned char>::const_iterator, unsigned char*> (stl_algobase.h:522)\r\n==243376==    by 0x8F8482: __copy_move_a<false, prevector<28, unsigned char>::const_iterator, unsigned char*> (stl_algobase.h:529)\r\n==243376==    by 0x8F8482: copy<prevector<28, unsigned char>::const_iterator, unsigned char*> (stl_algobase.h:620)\r\n==243376==    by 0x8F8482: __uninit_copy<prevector<28, unsigned char>::const_iterator, unsigned char*> (stl_uninitialized.h:110)\r\n==243376==    by 0x8F8482: uninitialized_copy<prevector<28, unsigned char>::const_iterator, unsigned char*> (stl_uninitialized.h:151)\r\n==243376==    by 0x8F8482: __uninitialized_copy_a<prevector<28, unsigned char>::const_iterator, unsigned char*, unsigned char> (stl_uninitialized.h:333)\r\n==243376==    by 0x8F8482: _M_range_initialize<prevector<28, unsigned char>::const_iterator> (stl_vector.h:1585)\r\n==243376==    by 0x8F8482: vector<prevector<28, unsigned char>::const_iterator> (stl_vector.h:657)\r\n==243376==    by 0x8F8482: CScript::IsWitnessProgram(int&, std::vector<unsigned char, std::allocator<unsigned char> >&) const (script.cpp:236)\r\n==243376==    by 0x7FAB1F: GetDustThreshold(CTxOut const&, CFeeRate const&) (policy.cpp:54)\r\n==243376==    by 0x7FAC00: IsDust(CTxOut const&, CFeeRate const&) (policy.cpp:67)\r\n==243376==    by 0x606B2B: wallet::CreateTransactionInternal(wallet::CWallet&, std::vector<wallet::CRecipient, std::allocator<wallet::CRecipient> > const&, std::optional<unsigned int>, wallet::CCoinControl const&, bool) (spend.cpp:1249)\r\n==243376==    by 0x6086A6: wallet::CreateTransaction(wallet::CWallet&, std::vector<wallet::CRecipient, std::allocator<wallet::CRecipient> > const&, std::optional<unsigned int>, wallet::CCoinControl const&, bool) (spend.cpp:1333)\r\n==243376==    by 0x29843E: operator() (wallet_create_tx.cpp:132)\r\n==243376==    by 0x29843E: ankerl::nanobench::Bench& ankerl::nanobench::Bench::run<WalletCreateTx(ankerl::nanobench::Bench&, OutputType, bool, std::optional<PreSelectInputs>)::{lambda()#3}>(WalletCreateTx(ankerl::nanobench::Bench&, OutputType, bool, std::optional<PreSelectInputs>)::{lambda()#3}&&) [clone .isra.0] (nanobench.h:1221)\r\n==243376==    by 0x29A381: WalletCreateTx(ankerl::nanobench::Bench&, OutputType, bool, std::optional<PreSelectInputs>) [clone .constprop.0] [clone .isra.0] (wallet_create_tx.cpp:130)\r\n==243376==    by 0x21BA5A: operator() (std_function.h:590)\r\n==243376==    by 0x21BA5A: benchmark::BenchRunner::RunAll(benchmark::Args const&) (bench.cpp:119)\r\n==243376==    by 0x1F84B6: main (bench_bitcoin.cpp:132)\r\n==243376==\r\n==243376== Conditional jump or move depends on uninitialised value(s)\r\n==243376==    at 0x8F8482: __copy_m<prevector<28, unsigned char>::const_iterator, unsigned char*> (stl_algobase.h:383)\r\n==243376==    by 0x8F8482: __copy_move_a2<false, prevector<28, unsigned char>::const_iterator, unsigned char*> (stl_algobase.h:495)\r\n==243376==    by 0x8F8482: __copy_move_a1<false, prevector<28, unsigned char>::const_iterator, unsigned char*> (stl_algobase.h:522)\r\n==243376==    by 0x8F8482: __copy_move_a<false, prevector<28, unsigned char>::const_iterator, unsigned char*> (stl_algobase.h:529)\r\n==243376==    by 0x8F8482: copy<prevector<28, unsigned char>::const_iterator, unsigned char*> (stl_algobase.h:620)\r\n==243376==    by 0x8F8482: __uninit_copy<prevector<28, unsigned char>::const_iterator, unsigned char*> (stl_uninitialized.h:110)\r\n==243376==    by 0x8F8482: uninitialized_copy<prevector<28, unsigned char>::const_iterator, unsigned char*> (stl_uninitialized.h:151)\r\n==243376==    by 0x8F8482: __uninitialized_copy_a<prevector<28, unsigned char>::const_iterator, unsigned char*, unsigned char> (stl_uninitialized.h:333)\r\n==243376==    by 0x8F8482: _M_range_initialize<prevector<28, unsigned char>::const_iterator> (stl_vector.h:1585)\r\n==243376==    by 0x8F8482: vector<prevector<28, unsigned char>::const_iterator> (stl_vector.h:657)\r\n==243376==    by 0x8F8482: CScript::IsWitnessProgram(int&, std::vector<unsigned char, std::allocator<unsigned char> >&) const (script.cpp:236)\r\n==243376==    by 0x7FAB1F: GetDustThreshold(CTxOut const&, CFeeRate const&) (policy.cpp:54)\r\n==243376==    by 0x7FAC00: IsDust(CTxOut const&, CFeeRate const&) (policy.cpp:67)\r\n==243376==    by 0x606B2B: wallet::CreateTransactionInternal(wallet::CWallet&, std::vector<wallet::CRecipient, std::allocator<wallet::CRecipient> > const&, std::optional<unsigned int>, wallet::CCoinControl const&, bool) (spend.cpp:1249)\r\n==243376==    by 0x6086A6: wallet::CreateTransaction(wallet::CWallet&, std::vector<wallet::CRecipient, std::allocator<wallet::CRecipient> > const&, std::optional<unsigned int>, wallet::CCoinControl const&, bool) (spend.cpp:1333)\r\n==243376==    by 0x29843E: operator() (wallet_create_tx.cpp:132)\r\n==243376==    by 0x29843E: ankerl::nanobench::Bench& ankerl::nanobench::Bench::run<WalletCreateTx(ankerl::nanobench::Bench&, OutputType, bool, std::optional<PreSelectInputs>)::{lambda()#3}>(WalletCreateTx(ankerl::nanobench::Bench&, OutputType, bool, std::optional<PreSelectInputs>)::{lambda()#3}&&) [clone .isra.0] (nanobench.h:1221)\r\n==243376==    by 0x29A381: WalletCreateTx(ankerl::nanobench::Bench&, OutputType, bool, std::optional<PreSelectInputs>) [clone .constprop.0] [clone .isra.0] (wallet_create_tx.cpp:130)\r\n==243376==    by 0x21BA5A: operator() (std_function.h:590)\r\n==243376==    by 0x21BA5A: benchmark::BenchRunner::RunAll(benchmark::Args const&) (bench.cpp:119)\r\n==243376==    by 0x1F84B6: main (bench_bitcoin.cpp:132)\r\n==243376==\r\n\r\n\r\n\r\n|               ns/op |                op/s |    err% |          ins/op |          cyc/op |    IPC |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|    1,013,313,787.80 |                0.99 |    0.8% |12,459,882,645.20 |5,208,416,083.40 |  2.392 |1,982,028,973.60 |    1.1% |     55.84 | `WalletCreateTxUsePresetInputsAndCoinSelection`\r\n==243376==\r\n==243376== HEAP SUMMARY:\r\n==243376==     in use at exit: 1,241 bytes in 7 blocks\r\n==243376==   total heap usage: 23,470,975 allocs, 23,470,968 frees, 6,267,436,104 bytes allocated\r\n==243376==\r\n==243376== LEAK SUMMARY:\r\n==243376==    definitely lost: 0 bytes in 0 blocks\r\n==243376==    indirectly lost: 0 bytes in 0 blocks\r\n==243376==      possibly lost: 0 bytes in 0 blocks\r\n==243376==    still reachable: 1,241 bytes in 7 blocks\r\n==243376==         suppressed: 0 bytes in 0 blocks\r\n==243376== Rerun with --leak-check=full to see details of leaked memory\r\n==243376==\r\n==243376== Use --track-origins=yes to see where uninitialised values come from\r\n==243376== For lists of detected and suppressed errors, rerun with: -s\r\n==243376== ERROR SUMMARY: 480 errors from 12 contexts (suppressed: 0 from 0)\r\n```",
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29065#issuecomment-1852759253",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29065"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-13T02:07:18Z",
      "updated_at": "2023-12-13T02:07:18Z",
      "source": {
        "issue": {
          "id": 2038795147,
          "node_id": "I_kwDOABII5855hYuL",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29069",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29069/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29069/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29069/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/29069",
          "number": 29069,
          "state": "open",
          "state_reason": null,
          "title": "[bench] Assertion error on wallet_create_tx.cpp, line 133.",
          "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Current behaviour\n\nOn bitcoin/master d646ca35d991e4f694096fdbd2d2ebd8cebf244e \r\nI compiled bitcoin core with bench on macOS and tried to run the benchmarks but got an error as such\r\n`Assertion failed: (tx_res), function operator(), file wallet_create_tx.cpp, line 133.`\r\n\r\nthis is the last few logs I see before it fails\r\n```\r\n./src/bench/bench_bitcoin\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|        1,404,059.73 |              712.22 |    5.0% |      0.17 | `AddAndRemoveDisconnectedBlockTransactions10`\r\n|        1,294,287.55 |              772.63 |    2.2% |      0.16 | `AddAndRemoveDisconnectedBlockTransactions90`\r\n|        1,254,398.83 |              797.19 |    3.0% |      0.15 | `AddAndRemoveDisconnectedBlockTransactionsAll`\r\n|       45,671,853.00 |               21.90 |    6.8% |      0.51 | :wavy_dash: `AddrManAdd` (Unstable with ~1.0 iters. Increase `minEpochIterations` to e.g. 10)\r\n|      127,220,073.00 |                7.86 |    6.6% |      1.41 | :wavy_dash: `AddrManAddThenGood` (Unstable with ~1.0 iters. Increase `minEpochIterations` to e.g. 10)\r\n|          171,068.17 |            5,845.62 |    0.6% |      0.01 | `AddrManGetAddr`\r\n|              144.86 |        6,903,190.28 |    4.9% |      0.01 | `AddrManSelect`\r\n|          453,220.50 |            2,206.43 |   51.2% |      0.01 | :wavy_dash: `AddrManSelectByNetwork` (Unstable with ~1.8 iters. Increase `minEpochIterations` to e.g. 18)\r\n|           99,628.00 |           10,037.34 |   16.5% |      0.01 | :wavy_dash: `AddrManSelectFromAlmostEmpty` (Unstable with ~9.1 iters. Increase `minEpochIterations` to e.g. 91)\r\n|          333,518.33 |            2,998.34 |    5.3% |      0.01 | :wavy_dash: `AssembleBlock` (Unstable with ~3.0 iters. Increase `minEpochIterations` to e.g. 30)\r\n\r\n|             ns/ecdh |              ecdh/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|           43,924.38 |           22,766.40 |   13.2% |      0.01 | :wavy_dash: `BIP324_ECDH` (Unstable with ~23.1 iters. Increase `minEpochIterations` to e.g. 231)\r\n\r\n|             ns/byte |              byte/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|               98.01 |       10,202,943.41 |   13.4% |      0.01 | :wavy_dash: `Base58CheckEncode` (Unstable with ~298.4 iters. Increase `minEpochIterations` to e.g. 2984)\r\n|               22.03 |       45,384,476.83 |    2.2% |      0.01 | `Base58Decode`\r\n|               68.53 |       14,592,583.70 |    0.4% |      0.01 | `Base58Encode`\r\n|               12.49 |       80,052,422.25 |    0.2% |      0.01 | `Bech32Decode`\r\n|               27.40 |       36,497,890.54 |    0.2% |      0.01 | `Bech32Encode`\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|              213.36 |        4,686,990.79 |   10.0% |      0.01 | :wavy_dash: `BenchLockedPool` (Unstable with ~4,815.3 iters. Increase `minEpochIterations` to e.g. 48153)\r\n\r\n|             ns/byte |              byte/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|                2.19 |      457,372,222.78 |   10.2% |      0.02 | :wavy_dash: `BenchRIPEMD160` (Unstable with ~1.0 iters. Increase `minEpochIterations` to e.g. 10)\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|               28.48 |       35,112,077.29 |    2.3% |      0.01 | `BenchTimeDeprecated`\r\n|               24.88 |       40,199,467.44 |    1.7% |      0.01 | `BenchTimeMillis`\r\n|               23.66 |       42,258,804.89 |    0.3% |      0.01 | `BenchTimeMillisSys`\r\n|                2.85 |      351,247,083.74 |    7.1% |      0.01 | :wavy_dash: `BenchTimeMock` (Unstable with ~364,918.2 iters. Increase `minEpochIterations` to e.g. 3649182)\r\n|      906,910,349.00 |                1.10 |    0.9% |      9.95 | `BlockAssemblerAddPackageTxns`\r\n|      107,240,809.00 |                9.32 |    1.9% |      1.20 | `BlockToJsonVerbose`\r\n|       46,955,665.00 |               21.30 |    2.8% |      0.53 | `BlockToJsonVerboseWrite`\r\n|          821,344.00 |            1,217.52 |    3.2% |      0.01 | `BnBExhaustion`\r\n\r\n|              ns/job |               job/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|            1,057.21 |          945,884.89 |    2.4% |      0.38 | `CCheckQueueSpeedPrevectorJob`\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|              745.97 |        1,340,534.52 |    6.8% |      0.01 | :wavy_dash: `CCoinsCaching` (Unstable with ~1,334.9 iters. Increase `minEpochIterations` to e.g. 13349)\r\n\r\n|             ns/byte |              byte/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|                1.87 |      534,651,415.72 |    7.5% |      0.02 | :wavy_dash: `CHACHA20_1MB` (Unstable with ~1.0 iters. Increase `minEpochIterations` to e.g. 10)\r\n|                1.76 |      567,285,183.13 |    1.6% |      0.01 | `CHACHA20_256BYTES`\r\n|                1.88 |      531,709,143.26 |    0.4% |      0.01 | `CHACHA20_64BYTES`\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|        1,124,437.00 |              889.33 |    2.4% |      0.01 | `CoinSelection`\r\n|      281,890,514.00 |                3.55 |    2.1% |      3.09 | `ComplexMemPool`\r\n\r\n|            ns/block |             block/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|        6,264,009.00 |              159.64 |    9.5% |      0.07 | :wavy_dash: `DeserializeAndCheckBlockTest` (Unstable with ~1.0 iters. Increase `minEpochIterations` to e.g. 10)\r\n|        4,689,212.00 |              213.26 |    1.5% |      0.05 | `DeserializeBlockTest`\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|        6,843,852.00 |              146.12 |    4.4% |      0.08 | `DuplicateInputs`\r\n\r\n|           ns/pubkey |            pubkey/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|           36,552.31 |           27,358.05 |    3.1% |      0.01 | `EllSwiftCreate`\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|           10,464.20 |           95,563.96 |    5.0% |      0.01 | :wavy_dash: `EvictionProtection0Networks250Candidates` (Unstable with ~88.5 iters. Increase `minEpochIterations` to e.g. 885)\r\n|            8,047.51 |          124,262.04 |    5.9% |      0.01 | :wavy_dash: `EvictionProtection1Networks250Candidates` (Unstable with ~93.6 iters. Increase `minEpochIterations` to e.g. 936)\r\n|           15,605.87 |           64,078.46 |   27.3% |      0.01 | :wavy_dash: `EvictionProtection2Networks250Candidates` (Unstable with ~51.9 iters. Increase `minEpochIterations` to e.g. 519)\r\n|            3,338.20 |          299,562.81 |    8.2% |      0.01 | :wavy_dash: `EvictionProtection3Networks050Candidates` (Unstable with ~308.2 iters. Increase `minEpochIterations` to e.g. 3082)\r\n|           11,651.77 |           85,823.86 |   13.8% |      0.01 | :wavy_dash: `EvictionProtection3Networks100Candidates` (Unstable with ~92.5 iters. Increase `minEpochIterations` to e.g. 925)\r\n|           19,133.39 |           52,264.66 |    4.0% |      0.01 | `EvictionProtection3Networks250Candidates`\r\n|       20,708,737.00 |               48.29 |    1.9% |      0.23 | `ExpandDescriptor`\r\n\r\n|             ns/byte |              byte/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|                1.98 |      504,919,295.81 |    4.5% |      0.02 | `FSCHACHA20POLY1305_1MB`\r\n|                2.73 |      365,632,551.58 |    8.6% |      0.01 | :wavy_dash: `FSCHACHA20POLY1305_256BYTES` (Unstable with ~1,072.5 iters. Increase `minEpochIterations` to e.g. 10725)\r\n|                4.63 |      216,073,335.65 |    5.4% |      0.01 | :wavy_dash: `FSCHACHA20POLY1305_64BYTES` (Unstable with ~3,237.0 iters. Increase `minEpochIterations` to e.g. 32370)\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|                1.42 |      704,872,115.47 |    0.1% |      0.01 | `FastRandom_1bit`\r\n|                7.87 |      127,003,264.54 |    2.1% |      0.01 | `FastRandom_32bit`\r\n|               83.79 |       11,934,834.05 |    4.3% |      0.01 | `FindByte`\r\n|          429,806.50 |            2,326.63 |    5.5% |      0.01 | :wavy_dash: `GCSBlockFilterGetHash` (Unstable with ~2.0 iters. Increase `minEpochIterations` to e.g. 20)\r\n|       12,045,240.00 |               83.02 |   13.6% |      0.14 | :wavy_dash: `GCSFilterConstruct` (Unstable with ~1.0 iters. Increase `minEpochIterations` to e.g. 10)\r\n|        2,083,659.00 |              479.92 |    1.9% |      0.02 | `GCSFilterDecode`\r\n|            9,252.21 |          108,082.26 |    1.6% |      0.01 | `GCSFilterDecodeSkipCheck`\r\n|          242,903.75 |            4,116.86 |    3.5% |      0.01 | `GCSFilterMatch`\r\n\r\n|             ns/byte |              byte/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|                0.47 |    2,129,267,534.37 |    0.8% |      0.01 | `HexStrBench`\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|       19,072,145.00 |               52.43 |    0.8% |      0.21 | `LoadExternalBlockFile`\r\n|            9,338.32 |          107,085.68 |    1.4% |      0.01 | `LogPrintLevelWithThreadNames`\r\n|            8,827.85 |          113,277.82 |    0.8% |      0.01 | `LogPrintLevelWithoutThreadNames`\r\n|            8,973.99 |          111,433.14 |    1.7% |      0.01 | `LogPrintWithCategory`\r\n|                7.70 |      129,923,111.50 |    0.1% |      0.01 | `LogPrintWithoutCategory`\r\n|            8,892.90 |          112,449.28 |    0.8% |      0.01 | `LogPrintfCategoryWithThreadNames`\r\n|            8,885.83 |          112,538.78 |    1.2% |      0.01 | `LogPrintfCategoryWithoutThreadNames`\r\n|            8,827.92 |          113,276.94 |    1.3% |      0.01 | `LogPrintfWithThreadNames`\r\n|            8,781.48 |          113,876.07 |    1.9% |      0.01 | `LogPrintfWithoutThreadNames`\r\n|               89.91 |       11,122,615.61 |    0.0% |      0.01 | `LogWithoutWriteToFile`\r\n|       77,830,848.00 |               12.85 |    2.7% |      0.86 | `MempoolCheck`\r\n|           46,574.00 |           21,471.21 |    8.2% |      0.01 | :wavy_dash: `MempoolEviction` (Unstable with ~24.2 iters. Increase `minEpochIterations` to e.g. 242)\r\n\r\n|             ns/leaf |              leaf/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|              137.16 |        7,290,892.10 |    0.4% |      0.01 | `MerkleRoot`\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|            5,742.17 |          174,150.32 |    5.3% |      0.01 | :wavy_dash: `MuHash` (Unstable with ~165.7 iters. Increase `minEpochIterations` to e.g. 1657)\r\n|            4,643.77 |          215,342.48 |    3.0% |      0.01 | `MuHashDiv`\r\n|            4,221.39 |          236,888.85 |    5.0% |      0.01 | :wavy_dash: `MuHashMul` (Unstable with ~225.7 iters. Increase `minEpochIterations` to e.g. 2257)\r\n|              769.04 |        1,300,316.69 |    9.3% |      0.01 | :wavy_dash: `MuHashPrecompute` (Unstable with ~1,327.9 iters. Increase `minEpochIterations` to e.g. 13279)\r\n\r\n|             ns/byte |              byte/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|                0.63 |    1,584,500,971.26 |    0.1% |      0.01 | `POLY1305_1MB`\r\n|                0.80 |    1,245,497,377.56 |    8.1% |      0.01 | :wavy_dash: `POLY1305_256BYTES` (Unstable with ~4,762.0 iters. Increase `minEpochIterations` to e.g. 47620)\r\n|                1.01 |      993,003,254.67 |    6.4% |      0.01 | :wavy_dash: `POLY1305_64BYTES` (Unstable with ~15,781.5 iters. Increase `minEpochIterations` to e.g. 157815)\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|               77.43 |       12,915,449.65 |    5.8% |      0.05 | :wavy_dash: `PoolAllocator_StdUnorderedMap` (Unstable with ~10.9 iters. Increase `minEpochIterations` to e.g. 109)\r\n|               40.33 |       24,794,833.09 |    8.8% |      0.03 | :wavy_dash: `PoolAllocator_StdUnorderedMapWithPoolResource` (Unstable with ~10.9 iters. Increase `minEpochIterations` to e.g. 109)\r\n|              184.50 |        5,420,096.62 |    8.3% |      0.01 | :wavy_dash: `PrePadded` (Unstable with ~4,881.6 iters. Increase `minEpochIterations` to e.g. 48816)\r\n|                9.65 |      103,641,497.48 |    6.3% |      0.01 | :wavy_dash: `PrevectorClearNontrivial` (Unstable with ~51,587.7 iters. Increase `minEpochIterations` to e.g. 515877)\r\n|               10.19 |       98,153,251.14 |    3.7% |      0.01 | `PrevectorClearTrivial`\r\n|              383.99 |        2,604,250.31 |   10.3% |      0.01 | :wavy_dash: `PrevectorDeserializeNontrivial` (Unstable with ~2.8 iters. Increase `minEpochIterations` to e.g. 28)\r\n|               20.76 |       48,177,485.86 |   11.6% |      0.01 | :wavy_dash: `PrevectorDeserializeTrivial` (Unstable with ~47.5 iters. Increase `minEpochIterations` to e.g. 475)\r\n|                   - |                   - |       - |         - | :boom: `PrevectorDestructorNontrivial` (iterations overflow. Maybe your code got optimized away?)\r\n|                   - |                   - |       - |         - | :boom: `PrevectorDestructorTrivial` (iterations overflow. Maybe your code got optimized away?)\r\n|            6,262.69 |          159,675.72 |    4.4% |      0.01 | `PrevectorFillVectorDirectNontrivial`\r\n|            2,360.83 |          423,579.24 |   13.9% |      0.01 | :wavy_dash: `PrevectorFillVectorDirectTrivial` (Unstable with ~416.3 iters. Increase `minEpochIterations` to e.g. 4163)\r\n|           20,881.96 |           47,888.22 |    5.0% |      0.01 | `PrevectorFillVectorIndirectNontrivial`\r\n|           13,908.64 |           71,897.74 |    5.8% |      0.01 | :wavy_dash: `PrevectorFillVectorIndirectTrivial` (Unstable with ~68.2 iters. Increase `minEpochIterations` to e.g. 682)\r\n|                4.48 |      223,151,649.08 |    6.8% |      0.01 | :wavy_dash: `PrevectorResizeNontrivial` (Unstable with ~55,496.0 iters. Increase `minEpochIterations` to e.g. 554960)\r\n|                5.10 |      196,114,852.61 |    2.7% |      0.01 | `PrevectorResizeTrivial`\r\n|              331.25 |        3,018,826.33 |    0.3% |      0.01 | `RegularPadded`\r\n|              461.89 |        2,165,032.12 |   13.5% |      0.01 | :wavy_dash: `RollingBloom` (Unstable with ~2,180.5 iters. Increase `minEpochIterations` to e.g. 21805)\r\n|           27,072.58 |           36,937.74 |    9.5% |      0.01 | :wavy_dash: `RollingBloomReset` (Unstable with ~38.7 iters. Increase `minEpochIterations` to e.g. 387)\r\n|        8,006,783.00 |              124.89 |    9.2% |      0.09 | :wavy_dash: `RpcMempool` (Unstable with ~1.0 iters. Increase `minEpochIterations` to e.g. 10)\r\n\r\n|             ns/byte |              byte/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|                1.81 |      553,945,727.72 |   20.6% |      0.02 | :wavy_dash: `SHA1` (Unstable with ~1.0 iters. Increase `minEpochIterations` to e.g. 10)\r\n|                1.87 |      535,824,297.12 |    6.0% |      0.01 | :wavy_dash: `SHA256D64_1024_AVX2 using the 'sse4(1way),sse41(4way),avx2(8way)' SHA256 implementation` (Unstable with ~7.3 iters. Increase `minEpochIterations` to e.g. 73)\r\n|                5.18 |      192,994,562.80 |    1.6% |      0.01 | `SHA256D64_1024_SHANI using the 'sse4(1way),sse41(4way)' SHA256 implementation`\r\n|                5.06 |      197,514,195.13 |    1.0% |      0.01 | `SHA256D64_1024_SSE4 using the 'sse4(1way),sse41(4way)' SHA256 implementation`\r\n|               12.70 |       78,726,271.96 |    0.9% |      0.01 | `SHA256D64_1024_STANDARD using the 'standard' SHA256 implementation`\r\n|                6.72 |      148,840,226.81 |    4.5% |      0.01 | `SHA256_32b_AVX2 using the 'sse4(1way),sse41(4way),avx2(8way)' SHA256 implementation`\r\n|                7.43 |      134,570,878.05 |    1.0% |      0.01 | `SHA256_32b_SHANI using the 'sse4(1way),sse41(4way)' SHA256 implementation`\r\n|                7.42 |      134,766,372.01 |    1.3% |      0.01 | `SHA256_32b_SSE4 using the 'sse4(1way),sse41(4way)' SHA256 implementation`\r\n|               10.77 |       92,889,906.04 |    0.2% |      0.01 | `SHA256_32b_STANDARD using the 'standard' SHA256 implementation`\r\n|                2.77 |      361,075,745.75 |    3.4% |      0.03 | `SHA256_AVX2 using the 'sse4(1way),sse41(4way),avx2(8way)' SHA256 implementation`\r\n|                2.59 |      386,561,872.32 |    1.7% |      0.03 | `SHA256_SHANI using the 'sse4(1way),sse41(4way)' SHA256 implementation`\r\n|                2.54 |      393,429,259.26 |    2.2% |      0.03 | `SHA256_SSE4 using the 'sse4(1way),sse41(4way)' SHA256 implementation`\r\n|                3.94 |      253,670,806.83 |    2.5% |      0.04 | `SHA256_STANDARD using the 'standard' SHA256 implementation`\r\n|                3.09 |      323,698,658.56 |    2.8% |      0.04 | `SHA3_256_1M`\r\n|                2.56 |      389,866,587.65 |   11.2% |      0.03 | :wavy_dash: `SHA512` (Unstable with ~1.0 iters. Increase `minEpochIterations` to e.g. 10)\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|               23.02 |       43,444,456.94 |    6.5% |      0.01 | :wavy_dash: `SipHash_32b` (Unstable with ~43,173.2 iters. Increase `minEpochIterations` to e.g. 431732)\r\n|                5.96 |      167,858,848.11 |   15.9% |      0.02 | :wavy_dash: `Trig` (Unstable with ~244,527.1 iters. Increase `minEpochIterations` to e.g. 2445271)\r\n|           66,123.00 |           15,123.33 |    2.5% |      0.01 | `VerifyNestedIfScript`\r\n|           71,879.87 |           13,912.10 |    4.3% |      0.01 | `VerifyScriptBench`\r\n|       67,780,410.50 |               14.75 |    3.5% |      1.53 | `WalletAvailableCoins`\r\n|            7,995.70 |          125,067.17 |    3.9% |      0.01 | `WalletBalanceClean`\r\n|          171,561.20 |            5,828.82 |   10.0% |      0.01 | :wavy_dash: `WalletBalanceDirty` (Unstable with ~6.0 iters. Increase `minEpochIterations` to e.g. 60)\r\n|            8,292.98 |          120,583.91 |    7.6% |      0.01 | :wavy_dash: `WalletBalanceMine` (Unstable with ~102.5 iters. Increase `minEpochIterations` to e.g. 1025)\r\n|               34.36 |       29,102,280.22 |    6.8% |      0.01 | :wavy_dash: `WalletBalanceWatch` (Unstable with ~27,349.1 iters. Increase `minEpochIterations` to e.g. 273491)\r\n|      794,569,135.00 |                1.26 |    1.0% |      8.77 | `WalletCreateEncrypted`\r\n|      400,911,129.00 |                2.49 |    2.2% |      4.39 | `WalletCreatePlain`\r\n|        1,724,541.80 |              579.86 |    6.4% |      0.10 | :wavy_dash: `WalletCreateTxUseOnlyPresetInputs` (Unstable with ~5.0 iters. Increase `minEpochIterations` to e.g. 50)\r\nAssertion failed: (tx_res), function operator(), file wallet_create_tx.cpp, line 133.\r\n[1]    68585 abort      ./src/bench/bench_bitcoin\r\n```\n\n### Expected behaviour\n\nIts expected to run the benchmark and then exit without failure\n\n### Steps to reproduce\n\nSteps I took\r\n```\r\n./autogen.sh\r\n./configure --enable-debug=true CC=/usr/bin/clang  CXX=/usr/bin/clang++\r\nsudo make -j\"$(($(nproc)+1))\" install\r\n./src/bench/bench_bitcoin\r\n```\r\n\r\nThis was done on `macOS 14.1.2 (23B92)`\n\n### Relevant log output\n\n_No response_\n\n### How did you obtain Bitcoin Core\n\nCompiled from source\n\n### What version of Bitcoin Core are you using?\n\nd646ca35d991e4f694096fdbd2d2ebd8cebf244e\n\n### Operating system and version\n\nmacOS 14.1.2 (23B92)\n\n### Machine specifications\n\nThis is an intel based mac pro 2019 ",
          "user": {
            "login": "kevkevinpal",
            "id": 15950706,
            "node_id": "MDQ6VXNlcjE1OTUwNzA2",
            "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevkevinpal",
            "html_url": "https://github.com/kevkevinpal",
            "followers_url": "https://api.github.com/users/kevkevinpal/followers",
            "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
            "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
            "repos_url": "https://api.github.com/users/kevkevinpal/repos",
            "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 3,
          "created_at": "2023-12-13T01:32:10Z",
          "updated_at": "2023-12-13T02:29:36Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1853172985,
      "node_id": "IC_kwDOABII585udSz5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1853172985",
      "actor": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-13T02:34:23Z",
      "updated_at": "2023-12-13T02:34:50Z",
      "author_association": "CONTRIBUTOR",
      "body": "ACK [37c75c5](https://github.com/bitcoin/bitcoin/pull/29065/commits/37c75c58202f89b752500f76c872d7f8caf6bdb3)\r\n\r\ncloses https://github.com/bitcoin/bitcoin/issues/29069\r\n\r\nWas able to reproduce issue and building with this change fixed it for me",
      "user": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29065#issuecomment-1853172985",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29065"
    }
  ],
  "comments": []
}