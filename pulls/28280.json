{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280",
    "id": 1478150495,
    "node_id": "PR_kwDOABII585YGslf",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/28280",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/28280.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/28280.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28280",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28280/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
    "number": 28280,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "Don't empty dbcache on prune flushes: >30% faster IBD",
    "user": {
      "login": "andrewtoth",
      "id": 237213,
      "node_id": "MDQ6VXNlcjIzNzIxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewtoth",
      "html_url": "https://github.com/andrewtoth",
      "followers_url": "https://api.github.com/users/andrewtoth/followers",
      "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
      "repos_url": "https://api.github.com/users/andrewtoth/repos",
      "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Since https://github.com/bitcoin/bitcoin/pull/17487 we no longer need to clear the coins cache when syncing to disk. A warm coins cache significantly speeds up block connection, and only needs to be fully flushed when nearing the `dbcache` limit.\r\n\r\nFor frequent pruning flushes there's no need to empty the cache and kill connect block speed. However, simply using `Sync` in place of `Flush` actually slows down a pruned full IBD with a high `dbcache` value. This is because as the cache grows, sync takes longer since every coin in the cache is scanned to check if it's dirty. For frequent prune flushes and a large cache this constant scanning starts to really slow IBD down, and just emptying the cache on every prune becomes faster.\r\n\r\nTo fix this, we can add two pointers to each cache entry and construct a doubly linked list of dirty entries. We can then only iterate through all dirty entries on each `Sync`, and simply clear the pointers after.\r\n\r\nWith this approach a full IBD with `dbcache=16384` and `prune=550` was 32% faster than master. For default `dbcache=450` speedup was ~9%. All benchmarks were run with `stopatheight=800000`.\r\n\r\n|  | prune | dbcache | time | max RSS | speedup |\r\n|-----------:|----------:|------------:|--------:|-------------:|--------------:|\r\n| master | 550 | 16384 | 8:52:57 | 2,417,464k | - |\r\n| branch | 550 | 16384 | 6:01:00 | 16,216,736k | 32% |\r\n| branch | 550 | 450 | 8:05:08 | 2,818,072k | 8.8% |\r\n| master | 10000 | 5000 | 8:19:59 | 2,962,752k | - |\r\n| branch | 10000 | 5000| 5:56:39 | 6,179,764k | 28.8% |\r\n| master | 0 | 16384 | 4:51:53 | 14,726,408k | - |\r\n| branch | 0 | 16384 | 4:43:11 | 16,526,348k | 2.7% |\r\n| master | 0 | 450 | 7:08:07 | 3,005,892k | - |\r\n| branch | 0 | 450 | 6:57:24 | 3,013,556k |2.6%|\r\n\r\nWhile the 2 pointers add memory to each cache entry, it did not slow down IBD. For non-pruned IBD results were similar for this branch and master. When I performed the initial IBD, the full UTXO set could be held in memory when using the max `dbcache` value. For non-pruned IBD with max `dbcache` to tip ended up using 12% more memory, but it was also 2.7% faster somehow. For smaller `dbcache` values the `dbcache` limit is respected so does not consume more memory, and the potentially more frequent flushes were not significant enough to cause any slowdown.\r\n\r\nFor reviewers, the commits in order do the following:\r\nCommits bc95669d72d1aa9519514c0c7efd026c254e9e90 to 8ca27c7bb60f1d0042806010e60478e5190ddc52 encapsulate all accesses to `flags` on cache entries, and then e0f394ec9d955d543dd8e4553aa3c566f5aea9cf makes `flags` private.\r\nCommits 784b8db2db7068954c0f7b6e1acb9670fe5182bd to 6321388b430b62d6b9b74982a4e31a6bfedc1bc6 create the linked list head nodes and cache entry self references and pass them into `AddFlags`.\r\nCommit fd53f603645a7a9baee9d5cb9a6c0f47c6b8bf87 actually adds the entries into a linked list when they are flagged DIRTY or FRESH and removes them from the linked list when they are destroyed or the flags are cleared manually. However, the linked list is not yet used anywhere.\r\nCommit f5443052bf5db66c922e9239344afcb07f486070 adds unit tests for the linked list.\r\nCommit 7b73a9b99f26964d413e3805cb25f5e8c7da324a uses the linked list to iterate through DIRTY entries instead of using the entire coins cache.\r\nCommit c36363f6b24c7ab2afe198d9855f507ddf096e1f uses `Sync` instead of `Flush` for pruning flushes, so the cache is no longer cleared. \r\n\r\nInspired by [this comment](https://github.com/bitcoin/bitcoin/pull/15265#issuecomment-457720636).\r\n\r\nFixes https://github.com/bitcoin/bitcoin/issues/11315.",
    "labels": [],
    "created_at": "2023-08-16T22:38:19Z",
    "updated_at": "2024-07-03T18:43:54Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "b364ef8312d5177346d0e188a9a724446fc11e51",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "andrewtoth:sync-dirty",
      "ref": "sync-dirty",
      "sha": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 156145027,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNTYxNDUwMjc=",
        "name": "bitcoin",
        "full_name": "andrewtoth/bitcoin",
        "owner": {
          "login": "andrewtoth",
          "id": 237213,
          "node_id": "MDQ6VXNlcjIzNzIxMw==",
          "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/andrewtoth",
          "html_url": "https://github.com/andrewtoth",
          "followers_url": "https://api.github.com/users/andrewtoth/followers",
          "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
          "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
          "repos_url": "https://api.github.com/users/andrewtoth/repos",
          "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/andrewtoth/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/andrewtoth/bitcoin",
        "archive_url": "https://api.github.com/repos/andrewtoth/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/andrewtoth/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/andrewtoth/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/andrewtoth/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/andrewtoth/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/andrewtoth/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/andrewtoth/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/andrewtoth/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/andrewtoth/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/andrewtoth/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/andrewtoth/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/andrewtoth/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/andrewtoth/bitcoin/events",
        "forks_url": "https://api.github.com/repos/andrewtoth/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/andrewtoth/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/andrewtoth/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/andrewtoth/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/andrewtoth/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/andrewtoth/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/andrewtoth/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/andrewtoth/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/andrewtoth/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/andrewtoth/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/andrewtoth/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/andrewtoth/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/andrewtoth/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/andrewtoth/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/andrewtoth/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/andrewtoth/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:andrewtoth/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/andrewtoth/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/andrewtoth/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/andrewtoth/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/andrewtoth/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/andrewtoth/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/andrewtoth/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/andrewtoth/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/andrewtoth/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/andrewtoth/bitcoin/hooks",
        "svn_url": "https://github.com/andrewtoth/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 241845,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-07-03T17:49:06Z",
        "created_at": "2018-11-05T01:43:59Z",
        "updated_at": "2022-12-23T04:16:30Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "3714692644f45808a6480525abc36870aeee1de4",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35590,
        "stargazers_count": 77071,
        "watchers_count": 77071,
        "size": 262492,
        "default_branch": "master",
        "open_issues_count": 677,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-07-03T17:58:34Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-07-03T15:40:07Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 357,
    "deletions": 79,
    "changed_files": 10,
    "commits": 13,
    "review_comments": 131,
    "comments": 48
  },
  "events": [
    {
      "event": "commented",
      "id": 1681358199,
      "node_id": "IC_kwDOABII585kN313",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1681358199",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-16T22:38:21Z",
      "updated_at": "2024-07-03T16:46:50Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/28280).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [jamesob](https://github.com/bitcoin/bitcoin/pull/28280#issuecomment-1691875284), [hernanmarino](https://github.com/bitcoin/bitcoin/pull/28280#issuecomment-2052697672) |\n| Stale ACK | [paplorinc](https://github.com/bitcoin/bitcoin/pull/28280#issuecomment-2199661794) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#30370](https://github.com/bitcoin/bitcoin/pull/30370) (sync: improve CCoinsViewCache ReallocateCache - 2nd try by fjahr)\n* [#30326](https://github.com/bitcoin/bitcoin/pull/30326) (optimization: Reduce cache lookups in CCoinsViewCache::FetchCoin by paplorinc)\n* [#28216](https://github.com/bitcoin/bitcoin/pull/28216) (fuzz: a new target for the coins database by darosior)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#issuecomment-1681358199",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28280"
    },
    {
      "event": "reviewed",
      "id": 1581554153,
      "node_id": "PRR_kwDOABII585eRJnp",
      "url": null,
      "actor": null,
      "commit_id": "dbd663c4461cf0d8f478d46e224a966293db3bd3",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#pullrequestreview-1581554153",
      "submitted_at": "2023-08-16T23:14:04Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10123512171,
      "node_id": "HRFPE_lADOABII585ugaXwzwAAAAJbaIlr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10123512171",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-17T20:10:20Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10123555599,
      "node_id": "HRFPE_lADOABII585ugaXwzwAAAAJbaTMP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10123555599",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-17T20:15:59Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10124422402,
      "node_id": "HRFPE_lADOABII585ugaXwzwAAAAJbdm0C",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10124422402",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-17T22:31:30Z"
    },
    {
      "event": "labeled",
      "id": 10124422736,
      "node_id": "LE_lADOABII585ugaXwzwAAAAJbdm5Q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10124422736",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-17T22:31:35Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 10130705083,
      "node_id": "UNLE_lADOABII585ugaXwzwAAAAJb1kq7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10130705083",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-18T14:35:06Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10132002506,
      "node_id": "HRFPE_lADOABII585ugaXwzwAAAAJb6hbK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10132002506",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-18T17:12:33Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10132957791,
      "node_id": "HRFPE_lADOABII585ugaXwzwAAAAJb-Kpf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10132957791",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-18T19:22:35Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10134958395,
      "node_id": "HRFPE_lADOABII585ugaXwzwAAAAJcFzE7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10134958395",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-19T03:03:43Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10134960283,
      "node_id": "HRFPE_lADOABII585ugaXwzwAAAAJcFzib",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10134960283",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-19T03:04:25Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10138434528,
      "node_id": "HRFPE_lADOABII585ugaXwzwAAAAJcTDvg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10138434528",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-20T14:46:58Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10164404536,
      "node_id": "HRFPE_lADOABII585ugaXwzwAAAAJd2IE4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10164404536",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-23T01:18:45Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10181502847,
      "node_id": "HRFPE_lADOABII585ugaXwzwAAAAJe3Wd_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10181502847",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-24T13:29:51Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10182720590,
      "node_id": "HRFPE_lADOABII585ugaXwzwAAAAJe7_xO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10182720590",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-24T15:03:34Z"
    },
    {
      "event": "commented",
      "id": 1691875284,
      "node_id": "IC_kwDOABII585k1_fU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1691875284",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-24T15:14:30Z",
      "updated_at": "2023-08-24T15:14:30Z",
      "author_association": "MEMBER",
      "body": "Concept ACK! I'll try to repro the bench results in the next week or so.",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#issuecomment-1691875284",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28280"
    },
    {
      "event": "labeled",
      "id": 10186350765,
      "node_id": "LE_lADOABII585ugaXwzwAAAAJfJ2Ct",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10186350765",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-24T21:50:03Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 10189524521,
      "node_id": "UNLE_lADOABII585ugaXwzwAAAAJfV84p",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10189524521",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-25T07:03:47Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1698672209,
      "node_id": "IC_kwDOABII585lP65R",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1698672209",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-30T07:52:19Z",
      "updated_at": "2023-08-30T07:52:19Z",
      "author_association": "CONTRIBUTOR",
      "body": "@andrewtoth Not sure if you have seen https://github.com/bitcoin/bitcoin/pull/20827 which is a different approach but has a similar effect.",
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#issuecomment-1698672209",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28280"
    },
    {
      "event": "mentioned",
      "id": 10229678650,
      "node_id": "MEE_lADOABII585ugaXwzwAAAAJhvII6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10229678650",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-30T07:52:19Z"
    },
    {
      "event": "subscribed",
      "id": 10229678663,
      "node_id": "SE_lADOABII585ugaXwzwAAAAJhvIJH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10229678663",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-30T07:52:19Z"
    },
    {
      "event": "commented",
      "id": 1699702875,
      "node_id": "IC_kwDOABII585lT2hb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1699702875",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-30T19:13:19Z",
      "updated_at": "2023-08-31T02:24:12Z",
      "author_association": "CONTRIBUTOR",
      "body": "@0xB10C indeed I have seen that one. I believe they complement each other. #20827 reduces IBD time for larger `prune` values and this PR reduces it even more for smaller `prune` values. I should benchmark this on top of that one.\r\nAlso, I'm curious how you are performing your benchmarks and generating all those nice graphs. Do you mind sharing what tools you use?",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#issuecomment-1699702875",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28280"
    },
    {
      "event": "mentioned",
      "id": 10236527283,
      "node_id": "MEE_lADOABII585ugaXwzwAAAAJiJQKz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10236527283",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-30T19:13:20Z"
    },
    {
      "event": "subscribed",
      "id": 10236527293,
      "node_id": "SE_lADOABII585ugaXwzwAAAAJiJQK9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10236527293",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-30T19:13:20Z"
    },
    {
      "event": "commented",
      "id": 1700446063,
      "node_id": "IC_kwDOABII585lWr9v",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1700446063",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-31T06:35:34Z",
      "updated_at": "2023-08-31T06:35:34Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Also, I'm curious how you are performing your benchmarks and generating all those nice graphs. Do you mind sharing what tools you use?\r\n\r\nAt the time I had a spare and otherwise idle machine set up I could use. I don't have the bash script at hand but IIRC I had a merge base (MB)  and a pull-request (PR) binary I'd run with different `prune` and `dbcache` configurations. After each run, the script would rename and move the debug log (with extra `-debug=coindb -debug=prune`) to a separate folder. After all runs were done, I loaded the debug logs into the following Jupyter notebooks to parse the debug logs and to generate the graphs. For anyone revisiting this, these are the relevant comments https://github.com/bitcoin/bitcoin/pull/20827#issuecomment-1009016428, https://github.com/bitcoin/bitcoin/pull/20827#issuecomment-1017603590, and https://github.com/bitcoin/bitcoin/pull/20827#issuecomment-1023108273 for my setup and results.\r\n\r\nI've uploaded the jupyter nodebooks here https://gist.github.com/0xB10C/89c2903290cfb1840792d41dcd079646. The first was used for a partial IBD from 500k-600k and the second one with a full IBD. Both times syncing from a local node on the same host. The notebooks expect the debug log files with the name `debug_{binary}_{cset}_{run}.log` where {binary} is either MB or PR, {cset} is an integer specifying the configuration set (pruning and dbcache parameter), and {run} is an integer numbering the run of this binary-cset combination if I did multiple. Feel free to remix and share in any way you want. Keep in mind that parsing logs is quite fragile as log message format can change. Feel free to reach out if there are questions. \r\n\r\n\r\n\r\n\r\n",
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#issuecomment-1700446063",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28280"
    },
    {
      "event": "labeled",
      "id": 10268013708,
      "node_id": "LE_lADOABII585ugaXwzwAAAAJkBXSM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10268013708",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-04T00:45:59Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 10285246017,
      "node_id": "UNLE_lADOABII585ugaXwzwAAAAJlDGZB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10285246017",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-05T15:31:44Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "mentioned",
      "id": 10426129791,
      "node_id": "MEE_lADOABII585ugaXwzwAAAAJtch1_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10426129791",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-20T17:42:41Z"
    },
    {
      "event": "subscribed",
      "id": 10426129805,
      "node_id": "SE_lADOABII585ugaXwzwAAAAJtch2N",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10426129805",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-20T17:42:41Z"
    },
    {
      "event": "commented",
      "id": 1728185226,
      "node_id": "IC_kwDOABII585nAgOK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1728185226",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-20T17:47:38Z",
      "updated_at": "2023-09-20T17:47:38Z",
      "author_association": "MEMBER",
      "body": "Bench running now, should have some results in the next day or so.\r\n```shell\r\n$ ( bitcoinperf --no-teardown bench-pr --num-blocks 30_000 --run-id no-flush-on-prune \\\r\n    --bitcoind-args='-dbcache=4000 -prune=550' --run-count 3 28280 && \\\r\n    pushover 'Bench for andrewtoth SUCCEEDED!' ) || \\\r\n  pushover 'Bench for andrewtoth failed'\r\n```",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#issuecomment-1728185226",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28280"
    },
    {
      "event": "commented",
      "id": 1737126367,
      "node_id": "IC_kwDOABII585ninHf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1737126367",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-27T10:25:25Z",
      "updated_at": "2023-09-27T10:25:25Z",
      "author_association": "MEMBER",
      "body": "Local IBD of 30_000 blocks with `-prune=550` from a Taproot-enabled height didn't show any difference. I didn't have `-log=prune` enabled, so my bench debug.log was basically useless. Rerunning...",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#issuecomment-1737126367",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28280"
    },
    {
      "event": "labeled",
      "id": 10902450609,
      "node_id": "LE_lADOABII585ugaXwzwAAAAKJ1jGx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10902450609",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-08T15:29:52Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11115010677,
      "node_id": "HRFPE_lADOABII585ugaXwzwAAAAKWgZp1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11115010677",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-30T23:13:39Z"
    },
    {
      "event": "unlabeled",
      "id": 11115575365,
      "node_id": "UNLE_lADOABII585ugaXwzwAAAAKWijhF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11115575365",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-01T00:27:06Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11131803234,
      "node_id": "HRFPE_lADOABII585ugaXwzwAAAAKXgdZi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11131803234",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-03T15:31:09Z"
    },
    {
      "event": "commented",
      "id": 1837561632,
      "node_id": "IC_kwDOABII585thvcg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1837561632",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-03T18:30:58Z",
      "updated_at": "2023-12-03T18:34:43Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased, ran the following benchmark using hyperfine. Sync to block 800k 3 times on master commit and the last commit of this branch (I updated the commit recently, but no code changes only commit order changes to satisfy CI), dbcache=4000 and prune=550:\r\n\r\n```\r\nhyperfine \\\r\n--export-markdown ~/bench.md \\\r\n--show-output --parameter-list commit 498994b6f55d04a7940f832e7fbd17e5acdaff15,216bd93138a46cdfa66523878a36d0e634476079 \\\r\n--prepare 'git checkout {commit} && make -j$(nproc) src/bitcoind; sync; sudo /sbin/sysctl vm.drop_caches=3; rm -rf ~/.bitcoin/blocks; rm -rf ~/.bitcoin/chainstate;' \\\r\n-M 3 './src/bitcoind -dbcache=4000 -prune=550 -printtoconsole=0 -connect=<local_node> -stopatheight=800000'\r\n```\r\n\r\nResults from `~/bench.md`:\r\n| Command | Mean [s] | Min [s] | Max [s] | Relative |\r\n|:---|---:|---:|---:|---:|\r\n| `./src/bitcoind -dbcache=4000 -datadir=/home/user/.bitcoin -prune=550 -printtoconsole=0 -connect=192.168.2.11:8333 -stopatheight=800000` | 27609.574 ± 37.857 | 27580.531 | 27652.389 | 1.24 ± 0.00 |\r\n| `./src/bitcoind -dbcache=4000 -datadir=/home/user/.bitcoin -prune=550 -printtoconsole=0 -connect=192.168.2.11:8333 -stopatheight=800000` | 22188.405 ± 52.561 | 22128.517 | 22226.878 | 1.00 |\r\n\r\nThe second commit is this branch, so it runs 24% faster than master.\r\n\r\n@jamesob I suppose 30k blocks is not enough to appreciate the effect of syncing with a full cache?",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#issuecomment-1837561632",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28280"
    },
    {
      "event": "mentioned",
      "id": 11132120697,
      "node_id": "MEE_lADOABII585ugaXwzwAAAAKXhq55",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11132120697",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-03T18:30:58Z"
    },
    {
      "event": "subscribed",
      "id": 11132120701,
      "node_id": "SE_lADOABII585ugaXwzwAAAAKXhq59",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11132120701",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-03T18:30:58Z"
    },
    {
      "event": "reviewed",
      "id": 1763003369,
      "node_id": "PRR_kwDOABII585pFUvp",
      "url": null,
      "actor": null,
      "commit_id": "0d83e209311d7286465255e592c9cfd9c8f84e7f",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "martinus",
        "id": 14386,
        "node_id": "MDQ6VXNlcjE0Mzg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/martinus",
        "html_url": "https://github.com/martinus",
        "followers_url": "https://api.github.com/users/martinus/followers",
        "following_url": "https://api.github.com/users/martinus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/martinus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/martinus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
        "organizations_url": "https://api.github.com/users/martinus/orgs",
        "repos_url": "https://api.github.com/users/martinus/repos",
        "events_url": "https://api.github.com/users/martinus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/martinus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#pullrequestreview-1763003369",
      "submitted_at": "2023-12-04T20:16:50Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11147206956,
      "node_id": "HRFPE_lADOABII585ugaXwzwAAAAKYbOEs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11147206956",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-05T03:02:39Z"
    },
    {
      "event": "commented",
      "id": 1839920097,
      "node_id": "IC_kwDOABII585tqvPh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1839920097",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-05T03:03:06Z",
      "updated_at": "2023-12-05T03:03:06Z",
      "author_association": "CONTRIBUTOR",
      "body": "@martinus thank you very much for your review! I updated the PR with all your suggestions.",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#issuecomment-1839920097",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28280"
    },
    {
      "event": "mentioned",
      "id": 11147209076,
      "node_id": "MEE_lADOABII585ugaXwzwAAAAKYbOl0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11147209076",
      "actor": {
        "login": "martinus",
        "id": 14386,
        "node_id": "MDQ6VXNlcjE0Mzg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/martinus",
        "html_url": "https://github.com/martinus",
        "followers_url": "https://api.github.com/users/martinus/followers",
        "following_url": "https://api.github.com/users/martinus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/martinus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/martinus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
        "organizations_url": "https://api.github.com/users/martinus/orgs",
        "repos_url": "https://api.github.com/users/martinus/repos",
        "events_url": "https://api.github.com/users/martinus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/martinus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-05T03:03:06Z"
    },
    {
      "event": "subscribed",
      "id": 11147209090,
      "node_id": "SE_lADOABII585ugaXwzwAAAAKYbOmC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11147209090",
      "actor": {
        "login": "martinus",
        "id": 14386,
        "node_id": "MDQ6VXNlcjE0Mzg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/martinus",
        "html_url": "https://github.com/martinus",
        "followers_url": "https://api.github.com/users/martinus/followers",
        "following_url": "https://api.github.com/users/martinus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/martinus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/martinus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
        "organizations_url": "https://api.github.com/users/martinus/orgs",
        "repos_url": "https://api.github.com/users/martinus/repos",
        "events_url": "https://api.github.com/users/martinus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/martinus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-05T03:03:06Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11147257329,
      "node_id": "HRFPE_lADOABII585ugaXwzwAAAAKYbaXx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11147257329",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-05T03:12:35Z"
    },
    {
      "event": "labeled",
      "id": 11147257874,
      "node_id": "LE_lADOABII585ugaXwzwAAAAKYbagS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11147257874",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-05T03:12:40Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 11147454770,
      "node_id": "UNLE_lADOABII585ugaXwzwAAAAKYcKky",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11147454770",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-05T03:48:53Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1840061587,
      "node_id": "IC_kwDOABII585trRyT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1840061587",
      "actor": {
        "login": "martinus",
        "id": 14386,
        "node_id": "MDQ6VXNlcjE0Mzg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/martinus",
        "html_url": "https://github.com/martinus",
        "followers_url": "https://api.github.com/users/martinus/followers",
        "following_url": "https://api.github.com/users/martinus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/martinus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/martinus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
        "organizations_url": "https://api.github.com/users/martinus/orgs",
        "repos_url": "https://api.github.com/users/martinus/repos",
        "events_url": "https://api.github.com/users/martinus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/martinus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-05T05:55:52Z",
      "updated_at": "2023-12-05T05:59:19Z",
      "author_association": "CONTRIBUTOR",
      "body": "I didn't think this through yet, but this might be an alternative way to achieve the same thing: Instead of the double linked list, split the `cacheCoins` map up into 4 different maps, one map for each flag setting, e.g. as a `std::array<CCoinMap, 4> m_cache_coins_per_flag;`. Index is the flag, e.g. `m_cache_coins_per_flag[FRESH | DIRTY]` to get the map with all entries that are fresh & dirty. Instead of setting a flag & linking the list, use the unordered_map's `auto node = extract(...)` and `insert(std::move(node))` to move the entry to the corresponding map. This only relinks the unordered_map node and causes no allocation, pointers to the entry stay valid. \r\n\r\nThis approach would have a few advantages:\r\n* Less memory usage: no `m_flag` member is needed that actually required 8 bytes due to alignment, no 2 pointers needed for interlinking, and multiple maps means overall bucket sizes will stay smaller.\r\n* processing the maps might be faster: iteration is fast because e.g. skipping non-dirty entries is trivial (they are in a different map). There might be a hashing overhead though from `extract()` and `insert()`.\r\n\r\nFor this to work, all 4 maps need to use the same `m_cache_coins_memory_resource` (`insert()` into a different map where the allocator doesn't compare equal is undefined behavior).",
      "user": {
        "login": "martinus",
        "id": 14386,
        "node_id": "MDQ6VXNlcjE0Mzg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/martinus",
        "html_url": "https://github.com/martinus",
        "followers_url": "https://api.github.com/users/martinus/followers",
        "following_url": "https://api.github.com/users/martinus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/martinus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/martinus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
        "organizations_url": "https://api.github.com/users/martinus/orgs",
        "repos_url": "https://api.github.com/users/martinus/repos",
        "events_url": "https://api.github.com/users/martinus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/martinus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#issuecomment-1840061587",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28280"
    },
    {
      "event": "commented",
      "id": 1840779612,
      "node_id": "IC_kwDOABII585tuBFc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1840779612",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-05T13:19:41Z",
      "updated_at": "2023-12-05T13:19:41Z",
      "author_association": "CONTRIBUTOR",
      "body": "@martinus something similar was mentioned in https://github.com/bitcoin/bitcoin/pull/15265#issuecomment-457720636. However, with your approach every access would require 4 lookups.",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#issuecomment-1840779612",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28280"
    },
    {
      "event": "mentioned",
      "id": 11153193504,
      "node_id": "MEE_lADOABII585ugaXwzwAAAAKYyDog",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11153193504",
      "actor": {
        "login": "martinus",
        "id": 14386,
        "node_id": "MDQ6VXNlcjE0Mzg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/martinus",
        "html_url": "https://github.com/martinus",
        "followers_url": "https://api.github.com/users/martinus/followers",
        "following_url": "https://api.github.com/users/martinus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/martinus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/martinus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
        "organizations_url": "https://api.github.com/users/martinus/orgs",
        "repos_url": "https://api.github.com/users/martinus/repos",
        "events_url": "https://api.github.com/users/martinus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/martinus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-05T13:19:42Z"
    },
    {
      "event": "subscribed",
      "id": 11153193532,
      "node_id": "SE_lADOABII585ugaXwzwAAAAKYyDo8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11153193532",
      "actor": {
        "login": "martinus",
        "id": 14386,
        "node_id": "MDQ6VXNlcjE0Mzg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/martinus",
        "html_url": "https://github.com/martinus",
        "followers_url": "https://api.github.com/users/martinus/followers",
        "following_url": "https://api.github.com/users/martinus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/martinus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/martinus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
        "organizations_url": "https://api.github.com/users/martinus/orgs",
        "repos_url": "https://api.github.com/users/martinus/repos",
        "events_url": "https://api.github.com/users/martinus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/martinus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-05T13:19:42Z"
    },
    {
      "event": "commented",
      "id": 1841506238,
      "node_id": "IC_kwDOABII585twye-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1841506238",
      "actor": {
        "login": "martinus",
        "id": 14386,
        "node_id": "MDQ6VXNlcjE0Mzg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/martinus",
        "html_url": "https://github.com/martinus",
        "followers_url": "https://api.github.com/users/martinus/followers",
        "following_url": "https://api.github.com/users/martinus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/martinus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/martinus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
        "organizations_url": "https://api.github.com/users/martinus/orgs",
        "repos_url": "https://api.github.com/users/martinus/repos",
        "events_url": "https://api.github.com/users/martinus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/martinus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-05T19:43:57Z",
      "updated_at": "2023-12-05T19:43:57Z",
      "author_association": "CONTRIBUTOR",
      "body": "> @martinus something similar was mentioned in [#15265 (comment)](https://github.com/bitcoin/bitcoin/pull/15265#issuecomment-457720636). However, with your approach every access would require 4 lookups.\r\n\r\nHa, of course; I didn't think about that at all. ",
      "user": {
        "login": "martinus",
        "id": 14386,
        "node_id": "MDQ6VXNlcjE0Mzg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/martinus",
        "html_url": "https://github.com/martinus",
        "followers_url": "https://api.github.com/users/martinus/followers",
        "following_url": "https://api.github.com/users/martinus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/martinus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/martinus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
        "organizations_url": "https://api.github.com/users/martinus/orgs",
        "repos_url": "https://api.github.com/users/martinus/repos",
        "events_url": "https://api.github.com/users/martinus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/martinus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#issuecomment-1841506238",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28280"
    },
    {
      "event": "mentioned",
      "id": 11158363476,
      "node_id": "MEE_lADOABII585ugaXwzwAAAAKZFx1U",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11158363476",
      "actor": {
        "login": "martinus",
        "id": 14386,
        "node_id": "MDQ6VXNlcjE0Mzg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/martinus",
        "html_url": "https://github.com/martinus",
        "followers_url": "https://api.github.com/users/martinus/followers",
        "following_url": "https://api.github.com/users/martinus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/martinus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/martinus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
        "organizations_url": "https://api.github.com/users/martinus/orgs",
        "repos_url": "https://api.github.com/users/martinus/repos",
        "events_url": "https://api.github.com/users/martinus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/martinus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-05T19:43:57Z"
    },
    {
      "event": "subscribed",
      "id": 11158363489,
      "node_id": "SE_lADOABII585ugaXwzwAAAAKZFx1h",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11158363489",
      "actor": {
        "login": "martinus",
        "id": 14386,
        "node_id": "MDQ6VXNlcjE0Mzg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/martinus",
        "html_url": "https://github.com/martinus",
        "followers_url": "https://api.github.com/users/martinus/followers",
        "following_url": "https://api.github.com/users/martinus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/martinus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/martinus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
        "organizations_url": "https://api.github.com/users/martinus/orgs",
        "repos_url": "https://api.github.com/users/martinus/repos",
        "events_url": "https://api.github.com/users/martinus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/martinus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-05T19:43:58Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11230780069,
      "node_id": "HRFPE_lADOABII585ugaXwzwAAAAKdaBql",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11230780069",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-13T03:25:00Z"
    },
    {
      "event": "subscribed",
      "id": 11397772983,
      "node_id": "SE_lADOABII585ugaXwzwAAAAKnXDa3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11397772983",
      "actor": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-05T05:45:24Z"
    },
    {
      "event": "labeled",
      "id": 11470972425,
      "node_id": "LE_lADOABII585ugaXwzwAAAAKruSYJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11470972425",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-12T15:57:50Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12049951863,
      "node_id": "HRFPE_lADOABII585ugaXwzwAAAALOO6x3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12049951863",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-08T01:15:31Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12050567698,
      "node_id": "HRFPE_lADOABII585ugaXwzwAAAALORRIS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12050567698",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-08T03:12:08Z"
    },
    {
      "event": "unlabeled",
      "id": 12050873614,
      "node_id": "UNLE_lADOABII585ugaXwzwAAAALOSb0O",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12050873614",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-08T04:12:02Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12119772676,
      "node_id": "HRFPE_lADOABII585ugaXwzwAAAALSZQ4E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12119772676",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-14T14:59:23Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12120035336,
      "node_id": "HRFPE_lADOABII585ugaXwzwAAAALSaRAI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12120035336",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-14T15:17:23Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12122155978,
      "node_id": "HRFPE_lADOABII585ugaXwzwAAAALSiWvK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12122155978",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-14T18:08:05Z"
    },
    {
      "event": "labeled",
      "id": 12122156872,
      "node_id": "LE_lADOABII585ugaXwzwAAAALSiW9I",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12122156872",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-14T18:08:10Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1998045192,
      "node_id": "IC_kwDOABII5853F8AI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1998045192",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-14T18:08:11Z",
      "updated_at": "2024-03-14T18:08:11Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n\n🚧 At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/22665800478</sub>",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#issuecomment-1998045192",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28280"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12123086108,
      "node_id": "HRFPE_lADOABII585ugaXwzwAAAALSl50c",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12123086108",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-14T19:42:09Z"
    },
    {
      "event": "unlabeled",
      "id": 12124344733,
      "node_id": "UNLE_lADOABII585ugaXwzwAAAALSqtGd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12124344733",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-14T22:00:14Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12140250573,
      "node_id": "HRFPE_lADOABII585ugaXwzwAAAALTnYXN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12140250573",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-16T15:37:15Z"
    },
    {
      "event": "reviewed",
      "id": 1941500013,
      "node_id": "PRR_kwDOABII585zuPBt",
      "url": null,
      "actor": null,
      "commit_id": "25bdbc7f340884b3ab871c7948a4f2693037b871",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#pullrequestreview-1941500013",
      "submitted_at": "2024-03-17T15:22:31Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12201469435,
      "node_id": "HRFPE_lADOABII585ugaXwzwAAAALXQ6X7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12201469435",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-21T14:10:30Z"
    },
    {
      "event": "commented",
      "id": 2012404862,
      "node_id": "IC_kwDOABII58538tx-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2012404862",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-21T14:11:11Z",
      "updated_at": "2024-03-21T14:15:26Z",
      "author_association": "CONTRIBUTOR",
      "body": "@0xB10C rebased after https://github.com/bitcoin/bitcoin/pull/20827 was merged, and ran the following benchmark:\r\n```\r\nhyperfine --export-markdown ~/bench.md --show-output --parameter-list commit 015ac13dcc964a31ef06dfdb565f88f901607f0e,25bdbc7f340884b3ab871c7948a4f2693037b871 --prepare 'git checkout {commit} && make -j$(nproc) src/bitcoind; sync; sudo /sbin/sysctl vm.drop_caches=3; rm -rf ~/.bitcoin/blocks; rm -rf ~/.bitcoin/chainstate;' -M 3 './src/bitcoind -dbcache=4000 -prune=550 -printtoconsole=0 -connect=<local network node ip> -stopatheight=800000'\r\n\r\n...\r\n\r\nBenchmark 1: ./src/bitcoind -dbcache=4000 -prune=550 -printtoconsole=0 -connect=<local network node ip> -stopatheight=800000 (commit = 015ac13dcc964a31ef06dfdb565f88f901607f0e)\r\n\r\n  Time (mean ± σ):     27241.365 s ± 33.693 s    [User: 34791.898 s, System: 7357.098 s]\r\n  Range (min … max):   27202.978 s … 27266.037 s    3 runs\r\n\r\nBenchmark 2: ./src/bitcoind -dbcache=4000 -prune=550 -printtoconsole=0 -connect=<local network node ip> -stopatheight=800000 (commit = 25bdbc7f340884b3ab871c7948a4f2693037b871)\r\n\r\n  Time (mean ± σ):     22153.568 s ± 37.663 s    [User: 27818.681 s, System: 4309.878 s]\r\n  Range (min … max):   22119.682 s … 22194.118 s    3 runs\r\n \r\nSummary\r\n  ./src/bitcoind -dbcache=4000 -prune=550 -printtoconsole=0 -connect=192.168.2.13 -stopatheight=800000 (commit = 25bdbc7f340884b3ab871c7948a4f2693037b871) ran\r\n    1.23 ± 0.00 times faster than ./src/bitcoind -dbcache=4000 -prune=550 -printtoconsole=0 -connect=192.168.2.13 -stopatheight=800000 (commit = 015ac13dcc964a31ef06dfdb565f88f901607f0e)\r\n```\r\nSo this is 23% faster than master when using `dbcache=4000`, `prune=550`. (I just rebased again but 015ac13dcc964a31ef06dfdb565f88f901607f0e is master and 25bdbc7f340884b3ab871c7948a4f2693037b871 is my branch).\r\n\r\n@sipa thank you for your review! Addressed your nits and added more comments about flagged entries.\r\n",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#issuecomment-2012404862",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28280"
    },
    {
      "event": "mentioned",
      "id": 12201480454,
      "node_id": "MEE_lADOABII585ugaXwzwAAAALXQ9EG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12201480454",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-21T14:11:12Z"
    },
    {
      "event": "subscribed",
      "id": 12201480490,
      "node_id": "SE_lADOABII585ugaXwzwAAAALXQ9Eq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12201480490",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-21T14:11:13Z"
    },
    {
      "event": "mentioned",
      "id": 12201480531,
      "node_id": "MEE_lADOABII585ugaXwzwAAAALXQ9FT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12201480531",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-21T14:11:13Z"
    },
    {
      "event": "subscribed",
      "id": 12201480564,
      "node_id": "SE_lADOABII585ugaXwzwAAAALXQ9F0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12201480564",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-21T14:11:13Z"
    },
    {
      "event": "labeled",
      "id": 12220488664,
      "node_id": "LE_lADOABII585ugaXwzwAAAALYZdvY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12220488664",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-22T20:09:28Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12348975277,
      "node_id": "HRFPE_lADOABII585ugaXwzwAAAALgDmit",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12348975277",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-03T22:06:50Z"
    },
    {
      "event": "unlabeled",
      "id": 12349288413,
      "node_id": "UNLE_lADOABII585ugaXwzwAAAALgEy_d",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12349288413",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-03T22:49:50Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 12349436894,
      "node_id": "LE_lADOABII585ugaXwzwAAAALgFXPe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12349436894",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-03T23:10:17Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2038255584,
      "node_id": "IC_kwDOABII5855fU_g",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2038255584",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-04T21:26:56Z",
      "updated_at": "2024-04-04T21:31:02Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased and ran some faster benchmarks, 2 each but only until 400k. Will do some more going to 800k.\r\n\r\n|  | prune | dbcache | mean time (s) | speedup |\r\n|-----------:|----------:|------------:|--------:|--------------:|\r\n| master | 550 | 16384 | 2,018 | - |\r\n| branch | 550 | 16384 | 1,667 | 17.4% |\r\n| master | 550 | 450 | 2,069 | - |\r\n| branch | 550 | 450 | 1,822 | 11.9% |\r\n| master | 0 | 16384 | 1,447 | - |\r\n| branch | 0 | 16384 | 1,396 | 3.5% |\r\n| master | 0 | 450 | 1,546 | - |\r\n| branch | 0 | 450 | 1,527 |1.2%|\r\n\r\nCommand was\r\n```\r\nhyperfine \\\r\n--export-markdown ~/bench.md \\\r\n--show-output \\\r\n--parameter-list commit 0d509bab45d292caeaf34600e57b5928757c6005,499f1f029a265fbeb4824e5cb84726f82ca2824b \\\r\n--parameter-list dbcache 450,16384 \\\r\n--parameter-list prune 550,0 \\\r\n--prepare 'git checkout {commit} && \\\r\nmake -j$(nproc) src/bitcoind; \\\r\nsync; sudo /sbin/sysctl vm.drop_caches=3; \\\r\nrm -rf /home/user/.bitcoin/blocks; \\\r\nrm -rf /home/user/.bitcoin/chainstate;' \\\r\n-M 2 \\\r\n'echo '{commit}' && \\\r\n./src/bitcoind -datadir=/home/user/.bitcoin \\\r\n-dbcache={dbcache} \\\r\n-prune={prune} \\\r\n-printtoconsole=0 \\\r\n-connect=<local node> \\\r\n-stopatheight=400000'\r\n```",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#issuecomment-2038255584",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28280"
    },
    {
      "event": "unlabeled",
      "id": 12365974803,
      "node_id": "UNLE_lADOABII585ugaXwzwAAAALhEc0T",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12365974803",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-04T23:41:38Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2044108942,
      "node_id": "IC_kwDOABII58551qCO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2044108942",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-09T04:03:18Z",
      "updated_at": "2024-04-09T04:03:18Z",
      "author_association": "CONTRIBUTOR",
      "body": "Ran benchmarks to 800k blocks, 2 times each. As expected, results are very good when running pruned. When running non-pruned with default `dbcache`, however, `master` was 1% faster. I think this slowdown is negligible though and the improvements to syncing with pruning enabled make this worth the changes here. Also, potential improvements like https://github.com/bitcoin/bitcoin/pull/28945 will make up for it.\r\n\r\n|  | prune | dbcache | mean time | speedup |\r\n|-----------:|----------:|------------:|--------:|--------------:|\r\n| master | 550 | 16384 | 7h 29m | - |\r\n| branch | 550 | 16384 | 4h 56m | 34% |\r\n| branch | 550 | 450 | 6h 33m | 12% |\r\n| master | 0 | 16384 | 3h 34m | - |\r\n| branch | 0 | 16384 | 3h 29m | 2% |\r\n| master | 0 | 450 | 5h 34m | 1% |\r\n| branch | 0 | 450 | 5h 40m | - |",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#issuecomment-2044108942",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28280"
    },
    {
      "event": "commented",
      "id": 2052697672,
      "node_id": "IC_kwDOABII5856Wa5I",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2052697672",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-12T23:37:28Z",
      "updated_at": "2024-04-12T23:37:28Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK . I 'd really like to see this merged",
      "user": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#issuecomment-2052697672",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28280"
    },
    {
      "event": "labeled",
      "id": 12551062135,
      "node_id": "LE_lADOABII585ugaXwzwAAAALsGgJ3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12551062135",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-21T14:45:55Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 12570291145,
      "node_id": "UNLE_lADOABII585ugaXwzwAAAALtP2vJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12570291145",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-23T06:55:10Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2108732705,
      "node_id": "IC_kwDOABII5859sLUh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2108732705",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-13T20:21:21Z",
      "updated_at": "2024-05-13T20:21:21Z",
      "author_association": "MEMBER",
      "body": "> For frequent pruning flushes there's no need to empty the cache and kill connect block speed. However, simply using `Sync` in place of `Flush` actually slows down a pruned full IBD with a high `dbcache` value. This is because as the cache grows, sync takes longer since every coin in the cache is scanned to check if it's dirty. For frequent prune flushes and a large cache this constant scanning starts to really slow IBD down, and just emptying the cache on every prune becomes faster.\r\n> \r\n> To fix this, we can add two pointers to each cache entry and construct a doubly linked list of dirty entries. We can then only iterate through all dirty entries on each `Sync`, and simply clear the pointers after.\r\n\r\nPerhaps I'm missing something, but it seems to me that the obvious solution to this problem is to have `BatchWrite` always delete dirty entries and clear the flags on all entries, rather than implementing a whole new data structure? `BatchWrite` already iterates the entire cache anyways, so it would make sense to me that we can consolidate all of the operations that occur for each cache entry.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#issuecomment-2108732705",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28280"
    },
    {
      "event": "referenced",
      "id": 12792668573,
      "node_id": "REFE_lADOABII585ugaXwzwAAAAL6gKGd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12792668573",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "d6069cb8d6bad2da111e9db0f6ba587855349bc8",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d6069cb8d6bad2da111e9db0f6ba587855349bc8",
      "created_at": "2024-05-13T20:31:57Z"
    },
    {
      "event": "commented",
      "id": 2108754056,
      "node_id": "IC_kwDOABII5859sQiI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2108754056",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-13T20:35:23Z",
      "updated_at": "2024-05-13T20:35:23Z",
      "author_association": "MEMBER",
      "body": "@achow101 That works, but it misses the point. If you delete the dirty entries on a prune flush, then those entries need to be re-read from disk when they are (likely soon) spent.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#issuecomment-2108754056",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28280"
    },
    {
      "event": "mentioned",
      "id": 12792700441,
      "node_id": "MEE_lADOABII585ugaXwzwAAAAL6gR4Z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12792700441",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-13T20:35:25Z"
    },
    {
      "event": "subscribed",
      "id": 12792700456,
      "node_id": "SE_lADOABII585ugaXwzwAAAAL6gR4o",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12792700456",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-13T20:35:25Z"
    },
    {
      "event": "commented",
      "id": 2108756050,
      "node_id": "IC_kwDOABII5859sRBS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2108756050",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-13T20:36:39Z",
      "updated_at": "2024-05-13T20:37:28Z",
      "author_association": "MEMBER",
      "body": "> @achow101 That works, but it misses the point. If you delete the dirty entries on a prune flush, then those entries need to be re-read from disk when they are (likely soon) spent.\r\n\r\nSorry, I meant clear the Dirty and spent ones. Basically just move the stuff that `Sync()` does into the loop that `BatchWrite` is doing.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#issuecomment-2108756050",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28280"
    },
    {
      "event": "mentioned",
      "id": 12792712050,
      "node_id": "MEE_lADOABII585ugaXwzwAAAAL6gUty",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12792712050",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-13T20:36:41Z"
    },
    {
      "event": "subscribed",
      "id": 12792712057,
      "node_id": "SE_lADOABII585ugaXwzwAAAAL6gUt5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12792712057",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-13T20:36:41Z"
    },
    {
      "event": "labeled",
      "id": 12793432638,
      "node_id": "LE_lADOABII585ugaXwzwAAAAL6jEo-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12793432638",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-13T22:01:47Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2109161840,
      "node_id": "IC_kwDOABII5859t0Fw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2109161840",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-14T02:32:40Z",
      "updated_at": "2024-05-14T02:32:40Z",
      "author_association": "CONTRIBUTOR",
      "body": "@achow101 I see what you mean, clear the flags and delete spent entries in the loop in `BatchWrite`. That would reduce each `Sync` from 2 full scans of the `coinsCache` to 1. It still scans the entire `coinsCache`, while the current change here only loops through flagged entries. Will experiment with how that performs, and possibly combining both ideas to do a single loop of only the flagged entries. ",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#issuecomment-2109161840",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28280"
    },
    {
      "event": "mentioned",
      "id": 12795082992,
      "node_id": "MEE_lADOABII585ugaXwzwAAAAL6pXjw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12795082992",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-14T02:32:42Z"
    },
    {
      "event": "subscribed",
      "id": 12795082997,
      "node_id": "SE_lADOABII585ugaXwzwAAAAL6pXj1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12795082997",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-14T02:32:42Z"
    },
    {
      "event": "commented",
      "id": 2121088705,
      "node_id": "IC_kwDOABII585-bT7B",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2121088705",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-20T19:44:23Z",
      "updated_at": "2024-05-20T20:25:37Z",
      "author_association": "MEMBER",
      "body": "Am I right that after this change (or alternatives which let BatchWrite just iterate dirty/fresh entries), it would be possible to (perhaps dramatically) reduce the periodic flush time, so that after IBD, we basically always have a mostly non-dirty cache? Such a change could be made today of course, but the cost of iterating the entire cache every time would add up quickly.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#issuecomment-2121088705",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28280"
    },
    {
      "event": "commented",
      "id": 2123033320,
      "node_id": "IC_kwDOABII585-iuro",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2123033320",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-21T16:44:32Z",
      "updated_at": "2024-05-21T16:44:32Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Am I right that after this change (or alternatives which let BatchWrite just iterate dirty/fresh entries), it would be possible to (perhaps dramatically) reduce the periodic flush time, so that after IBD, we basically always have a mostly non-dirty cache? Such a change could be made today of course, but the cost of iterating the entire cache every time would add up quickly.\r\n\r\nI believe you are right, but I'm unsure what the benefit is that you see. From my understanding, the periodic flushes are solely to prevent data loss in case of unclean shutdown (otherwise, flushing from filling the dbcache or flushing from shutting down cleanly prevent data loss). With a 24 hour periodic flush schedule and https://github.com/bitcoin/bitcoin/pull/15218, the most that is at risk is ~144 blocks worth of data?\r\n\r\nIf you are talking about periodic flushes *during* IBD though, that might be a benefit that could obviate https://github.com/bitcoin/bitcoin/pull/15218 and properly fix https://github.com/bitcoin/bitcoin/issues/11600. If we reduce the periodic flush interval to an hour or so, then only an hour or so of IBD data would be at risk of rolling back. This would of course mean that there is less opportunity for the cache to delete FRESH & DIRTY entries on spend so they never have to hit the disk, so it would be less performant. But it would still keep the cache for connecting blocks quickly.",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#issuecomment-2123033320",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28280"
    },
    {
      "event": "commented",
      "id": 2123045950,
      "node_id": "IC_kwDOABII585-ixw-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2123045950",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-21T16:51:41Z",
      "updated_at": "2024-05-21T16:51:41Z",
      "author_association": "MEMBER",
      "body": "@andrewtoth I was talking about post-IBD. And one advantage to more frequent flushing is reducing the latency spikes you get when a flush is triggered.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#issuecomment-2123045950",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28280"
    },
    {
      "event": "mentioned",
      "id": 12882907120,
      "node_id": "MEE_lADOABII585ugaXwzwAAAAL_4Y_w",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12882907120",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-21T16:51:43Z"
    },
    {
      "event": "subscribed",
      "id": 12882907132,
      "node_id": "SE_lADOABII585ugaXwzwAAAAL_4Y_8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12882907132",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-21T16:51:43Z"
    },
    {
      "event": "commented",
      "id": 2145109407,
      "node_id": "IC_kwDOABII585_28Wf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2145109407",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-03T12:43:06Z",
      "updated_at": "2024-06-03T12:43:06Z",
      "author_association": "CONTRIBUTOR",
      "body": "> `BatchWrite` already iterates the entire cache anyways\r\n\r\n@achow101 I think this is what you might not be clear about. `BatchWrite` iterates the entire cache, but this patch does not. After this patch `BatchWrite` only iterates flagged entries, which is a much smaller subset of the cache.\r\n\r\nI tried moving everything in the loop in `Sync` into `BatchWrite`, along with `cachedCoinsUsage` so it can be decremented as we delete spent coins from the child cache, and it looks like it will take many times longer to sync with `dbcache=16384 prune=550` than current `master`. So I don't think that's a viable alternative solution to what is proposed here.",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#issuecomment-2145109407",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28280"
    },
    {
      "event": "mentioned",
      "id": 13020575493,
      "node_id": "MEE_lADOABII585ugaXwzwAAAAMIFjcF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13020575493",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-03T12:43:07Z"
    },
    {
      "event": "subscribed",
      "id": 13020575518,
      "node_id": "SE_lADOABII585ugaXwzwAAAAMIFjce",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13020575518",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-03T12:43:07Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13021992190,
      "node_id": "HRFPE_lADOABII585ugaXwzwAAAAMIK9T-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13021992190",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-03T14:12:34Z"
    },
    {
      "event": "commented",
      "id": 2145320870,
      "node_id": "IC_kwDOABII585_3v-m",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2145320870",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-03T14:17:18Z",
      "updated_at": "2024-06-03T14:17:18Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased, and added a small optimization based on @achow101's suggestion. In `BatchWrite`, we also clear the flags when not erasing if the coin is unspent. This reduces the amount of flagged entries needed to be iterated in `Sync` to find the spent entries to delete. We can also throw a logic error now if we find a flagged entry in `Sync` that is not spent.\r\n\r\n",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#issuecomment-2145320870",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28280"
    },
    {
      "event": "mentioned",
      "id": 13022068511,
      "node_id": "MEE_lADOABII585ugaXwzwAAAAMILP8f",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13022068511",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-03T14:17:20Z"
    },
    {
      "event": "subscribed",
      "id": 13022068542,
      "node_id": "SE_lADOABII585ugaXwzwAAAAMILP8-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13022068542",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-03T14:17:20Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13022611857,
      "node_id": "HRFPE_lADOABII585ugaXwzwAAAAMINUmR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13022611857",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-03T14:50:27Z"
    },
    {
      "event": "unlabeled",
      "id": 13022668435,
      "node_id": "UNLE_lADOABII585ugaXwzwAAAAMINiaT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13022668435",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-03T14:54:07Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2145621189,
      "node_id": "IC_kwDOABII585_45TF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2145621189",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-03T16:16:48Z",
      "updated_at": "2024-06-03T16:16:48Z",
      "author_association": "MEMBER",
      "body": "> @achow101 I think this is what you might not be clear about. `BatchWrite` iterates the entire cache, but this patch does not. After this patch `BatchWrite` only iterates flagged entries, which is a much smaller subset of the cache.\r\n\r\nYes, that was what I was missing. It just wasn't clear to me from the description that this was implemented as another performance improvement in addition to clearing dirty and spent UTXOs.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#issuecomment-2145621189",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28280"
    },
    {
      "event": "mentioned",
      "id": 13023843540,
      "node_id": "MEE_lADOABII585ugaXwzwAAAAMISBTU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13023843540",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-03T16:16:50Z"
    },
    {
      "event": "subscribed",
      "id": 13023843561,
      "node_id": "SE_lADOABII585ugaXwzwAAAAMISBTp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13023843561",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-03T16:16:50Z"
    },
    {
      "event": "labeled",
      "id": 13024733682,
      "node_id": "LE_lADOABII585ugaXwzwAAAAMIVany",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13024733682",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-03T17:34:08Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13028114686,
      "node_id": "HRFPE_lADOABII585ugaXwzwAAAAMIiUD-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13028114686",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-03T23:35:57Z"
    },
    {
      "event": "unlabeled",
      "id": 13042098408,
      "node_id": "UNLE_lADOABII585ugaXwzwAAAAMJXqDo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13042098408",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-04T21:32:20Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2142888699,
      "node_id": "PRR_kwDOABII585_ueL7",
      "url": null,
      "actor": null,
      "commit_id": "6ed20408df85ed31cfb0ca7bc8da7b8140e1ef2f",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "> A non-pruned IBD with full dbcache to tip ended up using 12% more memory, but it was also 2.7% faster somehow.\r\n\r\nI'm not sure if I understand this, is this still the case?\r\nWhy would a node use more memory after this pull? Shouldn't the 2 added pointers be included in the dbcache accounting, resulting in more frequent flushes due to the cache filling up faster, but not in an increase in memory when the cache is full?",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#pullrequestreview-2142888699",
      "submitted_at": "2024-06-27T18:45:40Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
    },
    {
      "event": "commented",
      "id": 2195528186,
      "node_id": "IC_kwDOABII586C3Rn6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2195528186",
      "actor": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-27T19:36:35Z",
      "updated_at": "2024-06-27T19:36:35Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Also, potential improvements like #28945 will make up for it.\r\n\r\nIt seems https://github.com/bitcoin/bitcoin/pull/28945#issuecomment-2081170953 was abandoned since",
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#issuecomment-2195528186",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28280"
    },
    {
      "event": "commented",
      "id": 2195533792,
      "node_id": "IC_kwDOABII586C3S_g",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2195533792",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-27T19:40:32Z",
      "updated_at": "2024-06-28T14:07:29Z",
      "author_association": "CONTRIBUTOR",
      "body": "> > A non-pruned IBD with full dbcache to tip ended up using 12% more memory, but it was also 2.7% faster somehow.\r\n> \r\n> I'm not sure if I understand this, is this still the case? Why would a node use more memory after this pull? Shouldn't the 2 added pointers be included in the dbcache accounting, resulting in more frequent flushes due to the cache filling up faster, but not in an increase in memory when the cache is full?\r\n\r\nThis is no longer the case. When I did the initial benchmarks the full UTXO set could be stored in memory, and so a full IBD on mainnet would be 14.7 GB for master and 16.5 GB for this pull. Today both master and this pull will hit the max limit and flush at some point, so their memory usage should be near identical. You are correct that if the dbcache limit is set below the maximum UTXO set size then this pull will not use more memory.\r\n\r\nFor clarity, this pull only uses more memory if the entire IBD can occur without a single flush. What I meant in the description is this pull uses more memory when the entire utxo set is stored in memory and never flushed.\r\n\r\nThis pull could use more memory again on mainnet if #28358 is merged, and this pull will use more memory on other chains than mainnet if the UTXO size is smaller than the dbcache setting.",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#issuecomment-2195533792",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28280"
    },
    {
      "event": "commented",
      "id": 2195540246,
      "node_id": "IC_kwDOABII586C3UkW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2195540246",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-27T19:44:54Z",
      "updated_at": "2024-06-27T19:44:54Z",
      "author_association": "CONTRIBUTOR",
      "body": "> > Also, potential improvements like #28945 will make up for it.\r\n> \r\n> It seems [#28945 (comment)](https://github.com/bitcoin/bitcoin/pull/28945#issuecomment-2081170953) was abandoned since\r\n\r\nIn my recent benchmarks it was again slightly faster on this branch for default dbcache and no pruning. So I think this PR is essentially the same.",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#issuecomment-2195540246",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28280"
    },
    {
      "event": "reviewed",
      "id": 2138727793,
      "node_id": "PRR_kwDOABII585_emVx",
      "url": null,
      "actor": null,
      "commit_id": "6ed20408df85ed31cfb0ca7bc8da7b8140e1ef2f",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "First half of the review:",
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#pullrequestreview-2138727793",
      "submitted_at": "2024-06-28T15:07:57Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
    },
    {
      "event": "reviewed",
      "id": 2148425344,
      "node_id": "PRR_kwDOABII586ADl6A",
      "url": null,
      "actor": null,
      "commit_id": "6ed20408df85ed31cfb0ca7bc8da7b8140e1ef2f",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Fantastic change, would be helpful if you could make it a bit more digestible by separating it into smaller commits (especially splitting high-risk changes from low-risk refactoring), explaining the changes in commit messages.",
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#pullrequestreview-2148425344",
      "submitted_at": "2024-06-28T16:37:19Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
    },
    {
      "event": "reviewed",
      "id": 2148488069,
      "node_id": "PRR_kwDOABII586AD1OF",
      "url": null,
      "actor": null,
      "commit_id": "6ed20408df85ed31cfb0ca7bc8da7b8140e1ef2f",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#pullrequestreview-2148488069",
      "submitted_at": "2024-06-28T16:50:53Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
    },
    {
      "event": "commented",
      "id": 2197401102,
      "node_id": "IC_kwDOABII586C-a4O",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2197401102",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-28T17:56:52Z",
      "updated_at": "2024-06-28T17:56:52Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Fantastic change, would be helpful if you could make it a bit more digestible by separating it into smaller commits (especially splitting high-risk changes from low-risk refactoring), explaining the changes in commit messages.\r\n\r\nThank you @paplorinc! I did try initially to separate the changes more. However, I found the third commit has to have all those changes done in one commit otherwise the test-all-commits CI job will fail. Changing only parts of it can break the tests, and break building the fuzz targets. I will explore to see if I can break it down any further and keep CI happy.",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#issuecomment-2197401102",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28280"
    },
    {
      "event": "mentioned",
      "id": 13334746197,
      "node_id": "MEE_lADOABII585ugaXwzwAAAAMa0BRV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13334746197",
      "actor": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-28T17:56:54Z"
    },
    {
      "event": "subscribed",
      "id": 13334746208,
      "node_id": "SE_lADOABII585ugaXwzwAAAAMa0BRg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13334746208",
      "actor": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-28T17:56:54Z"
    },
    {
      "event": "commented",
      "id": 2197498881,
      "node_id": "IC_kwDOABII586C-ywB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2197498881",
      "actor": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-28T19:22:51Z",
      "updated_at": "2024-06-28T19:25:02Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Changing only parts of it can break the tests\r\n\r\nI usually try to recreate every line, after I have all the changes by interactively rebasing the current state and adding small refactoring under the current commit.\r\nE.g. these could be separate commits doing a single thing:\r\n* renaming `bool erase` to `bool will_erase`\r\n* changing `it->second.flags` usages to `it->second.GetFlags()` (again, without change in behavior, but you could also add another commit after this which extracts the usages and returns `it->second.IsFresh()` instead, making commits after it easier to read)\r\n* changing `it->second.flags |= ` to use `it->second.AddFlags(CCoinsCacheEntry::DIRTY);` (without any change in behavior, just doing it in a method)\r\n* changing iterators to the new linked list - without any other change in logic.\r\n\r\netc, I think you got the picture. By extracting these to separate trivial commits (which are followed by high risk changes, done in as few lines as possible without any refactorings in the way), we can concentrate on the difficult ones (which are a lot simpler and in separate commits themselves).\r\n\r\nThanks!",
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#issuecomment-2197498881",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28280"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13339690101,
      "node_id": "HRFPE_lADOABII585ugaXwzwAAAAMbG4R1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13339690101",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-29T14:56:29Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13339712713,
      "node_id": "HRFPE_lADOABII585ugaXwzwAAAAMbG9zJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13339712713",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-29T15:02:41Z"
    },
    {
      "event": "labeled",
      "id": 13339713113,
      "node_id": "LE_lADOABII585ugaXwzwAAAAMbG95Z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13339713113",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-29T15:02:45Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2198223778,
      "node_id": "IC_kwDOABII586DBjui",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2198223778",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-29T15:02:46Z",
      "updated_at": "2024-06-29T15:02:46Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n\n🚧 At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/26841759796</sub>",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#issuecomment-2198223778",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28280"
    },
    {
      "event": "unlabeled",
      "id": 13339926274,
      "node_id": "UNLE_lADOABII585ugaXwzwAAAAMbHx8C",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13339926274",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-29T16:23:01Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2198280480,
      "node_id": "IC_kwDOABII586DBxkg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2198280480",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-29T18:06:27Z",
      "updated_at": "2024-06-29T18:06:27Z",
      "author_association": "CONTRIBUTOR",
      "body": "@mzumsande @paplorinc thank you very much for your reviews! I've rebased and updated with all your suggested changes.\r\n\r\nI also updated the commits for easier review. First, `flags` is encapsulated whenever used, then made private. Then linked list head and self references are added to `AddFlags`, followed by `AddFlags` and `ClearFlags` actually maintaining a linked list of entries. Lastly, the linked list is used for `BatchWrite` instead of passing the entire map of entries.",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#issuecomment-2198280480",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28280"
    },
    {
      "event": "mentioned",
      "id": 13340254217,
      "node_id": "MEE_lADOABII585ugaXwzwAAAAMbJCAJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13340254217",
      "actor": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-29T18:06:28Z"
    },
    {
      "event": "subscribed",
      "id": 13340254220,
      "node_id": "SE_lADOABII585ugaXwzwAAAAMbJCAM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13340254220",
      "actor": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-29T18:06:29Z"
    },
    {
      "event": "mentioned",
      "id": 13340254228,
      "node_id": "MEE_lADOABII585ugaXwzwAAAAMbJCAU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13340254228",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-29T18:06:29Z"
    },
    {
      "event": "subscribed",
      "id": 13340254230,
      "node_id": "SE_lADOABII585ugaXwzwAAAAMbJCAW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13340254230",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-29T18:06:29Z"
    },
    {
      "event": "reviewed",
      "id": 2149804075,
      "node_id": "PRR_kwDOABII586AI2gr",
      "url": null,
      "actor": null,
      "commit_id": "c36363f6b24c7ab2afe198d9855f507ddf096e1f",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Added a few more comments, it's a lot more understandable to me now - though I'm still lacking a few important details, I'll investigate those next week.\r\nThanks for all your effort!",
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#pullrequestreview-2149804075",
      "submitted_at": "2024-06-29T21:02:10Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
    },
    {
      "event": "reviewed",
      "id": 2149965342,
      "node_id": "PRR_kwDOABII586AJd4e",
      "url": null,
      "actor": null,
      "commit_id": "c36363f6b24c7ab2afe198d9855f507ddf096e1f",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#pullrequestreview-2149965342",
      "submitted_at": "2024-06-30T07:00:57Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
    },
    {
      "event": "reviewed",
      "id": 2150053762,
      "node_id": "PRR_kwDOABII586AJzeC",
      "url": null,
      "actor": null,
      "commit_id": "c36363f6b24c7ab2afe198d9855f507ddf096e1f",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "This kept me up at night, we should be able to get rid of `m_prev` by doing insertions and deletions slightly differently:\r\n* we'd have an immutable `SENTINEL` value always serving as the last element (instead of `nullptr`);\r\n* insertion would always be in front of the previous element, which would serve as the new head (iterating from which will always get us to the `SENTINEL`);\r\n* deletion would copy the content (`node`, `flag` and `next`) of the next node instead (unless it's a `SENTINEL`), and dispose of that instead.\r\n\r\nSomething like this:\r\n```patch\r\ndiff --git a/src/coins.h b/src/coins.h\r\n--- a/src/coins.h\t(revision c36363f6b24c7ab2afe198d9855f507ddf096e1f)\r\n+++ b/src/coins.h\t(date 1719755615706)\r\n@@ -123,11 +123,11 @@\r\n      * parent cache, the FRESH-but-not-DIRTY coin will be tracked by the linked\r\n      * list and deleted when Sync or Flush is called on the CCoinsViewCache.\r\n      */\r\n-    CoinsCachePair* m_prev{nullptr};\r\n     CoinsCachePair* m_next{nullptr};\r\n     uint8_t m_flags{0};\r\n \r\n public:\r\n+    static CoinsCachePair SENTINEL;\r\n     Coin coin; // The actual cached data.\r\n \r\n     enum Flags {\r\n@@ -154,22 +154,19 @@\r\n     //! Adding a flag also requires a self reference to the pair that contains\r\n     //! this entry in the CCoinsCache map and a reference to the head of the\r\n     //! flagged pair linked list.\r\n-    inline void AddFlags(uint8_t flags, CoinsCachePair& self, CoinsCachePair& head)\r\n+    inline void AddFlags(uint8_t flags, CoinsCachePair& next)\r\n     {\r\n         if (!m_flags && flags) {\r\n-            m_prev = &head;\r\n-            m_next = head.second.m_next;\r\n-            if (m_next) m_next->second.m_prev = &self;\r\n-            head.second.m_next = &self;\r\n+            m_next = &next;\r\n         }\r\n         m_flags |= flags;\r\n     }\r\n     inline void ClearFlags()\r\n     {\r\n-        if (m_flags) {\r\n-            if (m_next) m_next->second.m_prev = m_prev;\r\n-            m_prev->second.m_next = m_next;\r\n-            m_prev = m_next = nullptr;\r\n+        if (m_flags && m_next != &SENTINEL) {\r\n+            coin = std::move(m_next->second.coin);\r\n+            m_flags = m_next->second.m_flags;\r\n+            m_next = m_next->second.m_next;\r\n         }\r\n         m_flags = 0;\r\n     }\r\n```\r\n\r\nWhat do you think?",
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#pullrequestreview-2150053762",
      "submitted_at": "2024-06-30T14:18:11Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
    },
    {
      "event": "commented",
      "id": 2198587395,
      "node_id": "IC_kwDOABII586DC8gD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2198587395",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-30T14:50:03Z",
      "updated_at": "2024-06-30T14:50:03Z",
      "author_association": "CONTRIBUTOR",
      "body": "> we should be able to get rid of m_prev by doing insertions and deletions slightly differently\r\n\r\nBut we can't move the coin from the next entry to us. The `coinsCache` map will still point to the next entry for that outpoint.",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#issuecomment-2198587395",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28280"
    },
    {
      "event": "commented",
      "id": 2198592345,
      "node_id": "IC_kwDOABII586DC9tZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2198592345",
      "actor": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-30T15:06:56Z",
      "updated_at": "2024-06-30T15:06:56Z",
      "author_association": "CONTRIBUTOR",
      "body": "> The coinsCache map will still point to the next entry for that outpoint\r\n\r\nYeah, but we can update the map in constant time, right? Do you think that would measurably slow down execution?\r\nCould the memory savings of one less pointer allow us to increase cache hit rate, or am I completely off here?",
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#issuecomment-2198592345",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28280"
    },
    {
      "event": "commented",
      "id": 2198593956,
      "node_id": "IC_kwDOABII586DC-Gk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2198593956",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-30T15:13:05Z",
      "updated_at": "2024-06-30T15:13:05Z",
      "author_association": "CONTRIBUTOR",
      "body": "Using a singly linked list would be better, agreed. I just don't see how this design would work. How do we clear the flags but keep the coin? That is the purpose of this patch, to *not* delete an entry after clearing the flags.",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#issuecomment-2198593956",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28280"
    },
    {
      "event": "commented",
      "id": 2198594749,
      "node_id": "IC_kwDOABII586DC-S9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2198594749",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-30T15:16:07Z",
      "updated_at": "2024-06-30T15:17:02Z",
      "author_association": "CONTRIBUTOR",
      "body": "Oh wait, we only need random access for deletion! Otherwise we can clear the flags on iteration!\r\n\r\nBrilliant! I think this could work then.",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#issuecomment-2198594749",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28280"
    },
    {
      "event": "commented",
      "id": 2198761817,
      "node_id": "IC_kwDOABII586DDnFZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2198761817",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-30T21:24:11Z",
      "updated_at": "2024-06-30T21:24:11Z",
      "author_association": "CONTRIBUTOR",
      "body": "@paplorinc was trying to implement your suggestion, but it's much too complex I think.\r\nHow do we delete the node that points to the sentinel? If we move the sentinel into the node and reassign sentinel to that node, we would still need to erase that node from the `coinsCache` map. We could extract the node handle from the map and have the `CCoinsViewCache` own that, but this seems like far too much code being changed. I don't think there's that much benefit for removing one pointer per entry. We would also have to extract the node from the map after the next node moves into it, and then reinsert the node with the next node's original outpoint.",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#issuecomment-2198761817",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28280"
    },
    {
      "event": "mentioned",
      "id": 13343066048,
      "node_id": "MEE_lADOABII585ugaXwzwAAAAMbTwfA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13343066048",
      "actor": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-30T21:24:13Z"
    },
    {
      "event": "subscribed",
      "id": 13343066051,
      "node_id": "SE_lADOABII585ugaXwzwAAAAMbTwfD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13343066051",
      "actor": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-30T21:24:13Z"
    },
    {
      "event": "commented",
      "id": 2198762814,
      "node_id": "IC_kwDOABII586DDnU-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2198762814",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-30T21:28:46Z",
      "updated_at": "2024-06-30T21:28:46Z",
      "author_association": "MEMBER",
      "body": "@andrewtoth Just high-level brainstorming, and I really don't want to push this PR into something more complex than necessary.\n\nBut would it be possible to have a map from outpoints to entries, with a singly-linked list through the entries, such that *(map[key].m_prev) stores the data for key key, rather than map[key] itself?",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#issuecomment-2198762814",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28280"
    },
    {
      "event": "mentioned",
      "id": 13343073828,
      "node_id": "MEE_lADOABII585ugaXwzwAAAAMbTyYk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13343073828",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-30T21:28:48Z"
    },
    {
      "event": "subscribed",
      "id": 13343073833,
      "node_id": "SE_lADOABII585ugaXwzwAAAAMbTyYp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13343073833",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-30T21:28:48Z"
    },
    {
      "event": "commented",
      "id": 2198767807,
      "node_id": "IC_kwDOABII586DDoi_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2198767807",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-30T21:49:27Z",
      "updated_at": "2024-06-30T21:49:27Z",
      "author_association": "CONTRIBUTOR",
      "body": "> But would it be possible to have a map from outpoints to entries, with a singly-linked list through the entries, such that *(map[key].m_prev) stores the data for key key, rather than map[key] itself?\r\n\r\n@sipa Sorry I'm not sure I follow. What does *(map[key].m_prev) store?",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#issuecomment-2198767807",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28280"
    },
    {
      "event": "mentioned",
      "id": 13343111085,
      "node_id": "MEE_lADOABII585ugaXwzwAAAAMbT7et",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13343111085",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-30T21:49:28Z"
    },
    {
      "event": "subscribed",
      "id": 13343111089,
      "node_id": "SE_lADOABII585ugaXwzwAAAAMbT7ex",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13343111089",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-30T21:49:28Z"
    },
    {
      "event": "commented",
      "id": 2198775424,
      "node_id": "IC_kwDOABII586DDqaA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2198775424",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-30T22:18:35Z",
      "updated_at": "2024-06-30T22:33:41Z",
      "author_association": "MEMBER",
      "body": "@andrewtoth \r\n\r\nSo the data structure we want has (a) an index on COutPoint and (b) a single-linked list that stores an iteration order. The issue (I think, I haven't followed in detail) is that we need the ability to delete entries found through the (a) index, and if we naively do that, the entry that (b) points to the deleted entry will have its prev pointer invalidated.\r\n\r\nMy suggestion is \"shifting\" the values of the map by one. `map[key]` stores the UTXO for the entry that is (b)-after `key`, so the UTXO for outpoint key is found in `*(map[key]->m_prev)` instead. This means an extra indirection on lookup (which may make the whole thing already not worth it from a performance perspective), but it does mean entries can be deleted (to delete `key`, do `{ auto to_del = map[key]->m_prev; map[key]->m_prev = to_del->m_prev; delete(to_del); }`.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#issuecomment-2198775424",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28280"
    },
    {
      "event": "mentioned",
      "id": 13343160035,
      "node_id": "MEE_lADOABII585ugaXwzwAAAAMbUHbj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13343160035",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-30T22:18:37Z"
    },
    {
      "event": "subscribed",
      "id": 13343160039,
      "node_id": "SE_lADOABII585ugaXwzwAAAAMbUHbn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13343160039",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-30T22:18:37Z"
    },
    {
      "event": "commented",
      "id": 2198787407,
      "node_id": "IC_kwDOABII586DDtVP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2198787407",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-30T22:42:01Z",
      "updated_at": "2024-06-30T22:42:01Z",
      "author_association": "CONTRIBUTOR",
      "body": "@sipa thank you for the suggestion! I think it's missing the fact that we want entries in the map to possibly not belong to the linked list. So we want to clear the linked list after a non-erasing flush, but leave the map intact otherwise. I don't think that's possible with just this data structure. We would need 2 parallel maps, one with unflagged entries and one with dirty entries. I'm not sure if that would be more performant with 2 lookups for every access? I think if we have 2 maps we can also just get rid of the linked list entirely.\r\n\r\nYou did mention the 2 maps idea a while ago https://github.com/bitcoin/bitcoin/pull/15265#issuecomment-457720636 and @martinus had a similar idea earlier in this PR discussion.",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#issuecomment-2198787407",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28280"
    },
    {
      "event": "mentioned",
      "id": 13343209394,
      "node_id": "MEE_lADOABII585ugaXwzwAAAAMbUTey",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13343209394",
      "actor": {
        "login": "martinus",
        "id": 14386,
        "node_id": "MDQ6VXNlcjE0Mzg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/martinus",
        "html_url": "https://github.com/martinus",
        "followers_url": "https://api.github.com/users/martinus/followers",
        "following_url": "https://api.github.com/users/martinus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/martinus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/martinus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
        "organizations_url": "https://api.github.com/users/martinus/orgs",
        "repos_url": "https://api.github.com/users/martinus/repos",
        "events_url": "https://api.github.com/users/martinus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/martinus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-30T22:42:02Z"
    },
    {
      "event": "subscribed",
      "id": 13343209399,
      "node_id": "SE_lADOABII585ugaXwzwAAAAMbUTe3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13343209399",
      "actor": {
        "login": "martinus",
        "id": 14386,
        "node_id": "MDQ6VXNlcjE0Mzg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/martinus",
        "html_url": "https://github.com/martinus",
        "followers_url": "https://api.github.com/users/martinus/followers",
        "following_url": "https://api.github.com/users/martinus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/martinus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/martinus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
        "organizations_url": "https://api.github.com/users/martinus/orgs",
        "repos_url": "https://api.github.com/users/martinus/repos",
        "events_url": "https://api.github.com/users/martinus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/martinus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-30T22:42:02Z"
    },
    {
      "event": "mentioned",
      "id": 13343209404,
      "node_id": "MEE_lADOABII585ugaXwzwAAAAMbUTe8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13343209404",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-30T22:42:02Z"
    },
    {
      "event": "subscribed",
      "id": 13343209408,
      "node_id": "SE_lADOABII585ugaXwzwAAAAMbUTfA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13343209408",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-30T22:42:02Z"
    },
    {
      "event": "commented",
      "id": 2198788192,
      "node_id": "IC_kwDOABII586DDthg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2198788192",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-30T22:45:01Z",
      "updated_at": "2024-06-30T22:45:01Z",
      "author_association": "MEMBER",
      "body": "@andrewtoth You can have 1 map, with 2 sentinels, each being the end of one linked list (one for flagged entries, one for unflagged ones)... but yeah, fair point, this perhaps complicates matters even more. And the performance penalty of this idea is probably not insignificant either.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#issuecomment-2198788192",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28280"
    },
    {
      "event": "mentioned",
      "id": 13343215750,
      "node_id": "MEE_lADOABII585ugaXwzwAAAAMbUVCG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13343215750",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-30T22:45:02Z"
    },
    {
      "event": "subscribed",
      "id": 13343215752,
      "node_id": "SE_lADOABII585ugaXwzwAAAAMbUVCI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13343215752",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-30T22:45:02Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13343503077,
      "node_id": "HRFPE_lADOABII585ugaXwzwAAAAMbVbLl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13343503077",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-01T00:27:05Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13343873473,
      "node_id": "HRFPE_lADOABII585ugaXwzwAAAAMbW1nB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13343873473",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-01T01:40:21Z"
    },
    {
      "event": "reviewed",
      "id": 2150803719,
      "node_id": "PRR_kwDOABII586AMqkH",
      "url": null,
      "actor": null,
      "commit_id": "5f753defe55b12afa950e5f98a6fe689232fde92",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#pullrequestreview-2150803719",
      "submitted_at": "2024-07-01T08:51:45Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
    },
    {
      "event": "reviewed",
      "id": 2150817746,
      "node_id": "PRR_kwDOABII586AMt_S",
      "url": null,
      "actor": null,
      "commit_id": "670084adc53e3d661ea5b4a19743659609a42d5e",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#pullrequestreview-2150817746",
      "submitted_at": "2024-07-01T09:22:19Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
    },
    {
      "event": "commented",
      "id": 2199661794,
      "node_id": "IC_kwDOABII586DHCzi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2199661794",
      "actor": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-01T09:24:55Z",
      "updated_at": "2024-07-01T09:24:55Z",
      "author_association": "CONTRIBUTOR",
      "body": "utACK 670084adc53e3d661ea5b4a19743659609a42d5e, will run the benchmarks in the following weeks, thanks for addressing the suggestions.",
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#issuecomment-2199661794",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28280"
    },
    {
      "event": "review_requested",
      "id": 13348201580,
      "node_id": "RRE_lADOABII585ugaXwzwAAAAMbnWRs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13348201580",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-01T09:25:00Z",
      "requested_reviewer": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGMzMDFiNWY1MDhmN2QyNDQ3NDlhMGQxZTk2NGNmMDUxNGM1N2JiOTM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c301b5f508f7d244749a0d1e964cf0514c57bb93",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c301b5f508f7d244749a0d1e964cf0514c57bb93",
      "tree": {
        "sha": "7f262e1840ea8e57342d8144a9c7878791e4b102",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7f262e1840ea8e57342d8144a9c7878791e4b102"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 7f262e1840ea8e57342d8144a9c7878791e4b102\nparent 3714692644f45808a6480525abc36870aeee1de4\nauthor Andrew Toth <andrewstoth@gmail.com> 1719605476 -0400\ncommitter Andrew Toth <andrewstoth@gmail.com> 1720025113 -0400\n\nrefactor: encapsulate flags access for dirty and fresh checks\n\nNo behavior change. This prepares moving the cache entry flags field\nto private access.\n\nCo-Authored-By: l0rinc <1841944+paplorinc@users.noreply.github.com>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEISytpz6vNK/yCogaYAB6/Ik4sBgFAmaFgBkACgkQYAB6/Ik4\nsBiRrBAAgvF6gF5OEI1kqUcXLyay6cQbjzdh8tkUQqonfTGLC1uHclLC4QXca9/c\nntD+gs30pHAeMBcabjLaOnarXu008mQAcMaNKiC4LjKdQxRhONz1IMUGdisJp3W8\nmgwFzn3z4PTCyuBdh00fVWOieApdkXGMOqg3YMCH8I+XYFDihdGLlZYyD3lk9KbM\nokalK9Wfq1xawrH3akB09O0D2wYZ2ss/mqQTyJW6HQexG4CZF2UoD707BFMGt/CH\nmcPIsAnvjJBPP63y82BVp2qKHw4NKz9uV8gt7LAsyY2wwlHBhPIHIaMBhfqQJHVT\ncky+WFDCh5xRZpKjaV3v0hPnecVk19mEN1iF0BNtpYQp8ETes4qZp3+ybhgs8CaL\n12Rb+ayYUBTk8QibH1JQR//eMb7TOw66tcszrB50ebDRv6l0ZfuWkEx3dsSGLR1T\nZMw/lEbTlzgyNTTnzANZ7MC9sDpJkeeRzkSH4abAvJqMdPrqtGajjkjI+IAXpzjE\nuFgJX3FRVR9hGnf1vUOOgVB3MovrDErane4b66/+5kANRjFMvYPcoibqhzbgUcne\ngtpmeWN1NzSYgZRNS6pfS94D4pJmZMrLHvV3aDWljE1o7uEyl2kECMdWS4Q/XCLi\nffK2KLWbJH8FohF+uBEWFZavvg4OBPodp2Eup6Jkco+NEblNohM=\n=hskq\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3714692644f45808a6480525abc36870aeee1de4",
          "sha": "3714692644f45808a6480525abc36870aeee1de4",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3714692644f45808a6480525abc36870aeee1de4"
        }
      ],
      "message": "refactor: encapsulate flags access for dirty and fresh checks\n\nNo behavior change. This prepares moving the cache entry flags field\nto private access.\n\nCo-Authored-By: l0rinc <1841944+paplorinc@users.noreply.github.com>",
      "committer": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-07-03T16:45:13Z"
      },
      "author": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-06-28T20:11:16Z"
      },
      "sha": "c301b5f508f7d244749a0d1e964cf0514c57bb93"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDc0ZTFiMmZiNzdiNzIyNDdiYTVlMTYxMmZlOWMxYWRkNzlmNmU5YmE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/74e1b2fb77b72247ba5e1612fe9c1add79f6e9ba",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/74e1b2fb77b72247ba5e1612fe9c1add79f6e9ba",
      "tree": {
        "sha": "0548fa91658e8c76ed9aeb6dfb2788e19ddee532",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0548fa91658e8c76ed9aeb6dfb2788e19ddee532"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 0548fa91658e8c76ed9aeb6dfb2788e19ddee532\nparent c301b5f508f7d244749a0d1e964cf0514c57bb93\nauthor Andrew Toth <andrewstoth@gmail.com> 1719605957 -0400\ncommitter Andrew Toth <andrewstoth@gmail.com> 1720025113 -0400\n\nrefactor: encapsulate flags get access for all other checks\n\nNo behavior change. This prepares moving the cache entry\nflags field to private access.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEISytpz6vNK/yCogaYAB6/Ik4sBgFAmaFgBkACgkQYAB6/Ik4\nsBjnOBAAmjpqWpvSxcZ/Vo0NCIS1lEPRwFc5SAAQvU2OnGkM8PaeMWA4mgsIuMzX\n7qNH+x09JqUDknrN48E1Y0mdJSWyQ6adGofLf73kI9zZE+eotHTyzKhBBtDC8srL\nJm9sjlVICH5y09vE7841osIP2Mkks6sKlUByjoru6edKHOZlH71T22R7a0qEzCht\n7KouWcZxzKVgZhM1ihrrgIdRhfl9F4tTomKpP0i4koCifQbQUCS9fqIHuMKhHpY2\nCBvADFKUgbqSoBd/+IFN1H+WXFpkQgj5qPUt0q4IxS4GHsWUFbtp9/S+ZmjRP22X\npUnIWMOIEr6rU1GnjBDbjVMrVazNGTrvEfz+NjQ55HXjuOSOwfUVowR0N8PS1reP\ni1dgIL6AhNsiecrLbE/ABVNJ/Rt8jxifJwvy8E4re6u7tMWbaVdnHcXVITlBNTdj\nIbTavpGDF3gT79V711VVdKk0VhOGvSi+eUWazEmWxEYzZ16f2HvkKpMfwXxQAfDf\ntUy7nng5G7YVF0jUDKuoso2rgbgtPZhX6SQSiqgQbGj2Ol0cTfQyA+rq2yBrIbQo\naYkGRiDMsohQq/10oh/+DfvGjxeLKxF6kmF+A53bizrutnVkwU0tws7AY/LYyyGi\nL9LvPnwiy5cZBYF9GC9EwHl9bvt2TX+Y3A8QhoHygbSrq41GuOA=\n=RRUy\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c301b5f508f7d244749a0d1e964cf0514c57bb93",
          "sha": "c301b5f508f7d244749a0d1e964cf0514c57bb93",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c301b5f508f7d244749a0d1e964cf0514c57bb93"
        }
      ],
      "message": "refactor: encapsulate flags get access for all other checks\n\nNo behavior change. This prepares moving the cache entry\nflags field to private access.",
      "committer": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-07-03T16:45:13Z"
      },
      "author": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-06-28T20:19:17Z"
      },
      "sha": "74e1b2fb77b72247ba5e1612fe9c1add79f6e9ba"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZmMTcwMzA1N2ExYTFmZGQ2MzI4YmJiZDJmMTM5OTFiNmVjZjVlZjk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ff1703057a1a1fdd6328bbbd2f13991b6ecf5ef9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ff1703057a1a1fdd6328bbbd2f13991b6ecf5ef9",
      "tree": {
        "sha": "d6716ebaa94fc3da5002993bb7e938fadcf68ec7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d6716ebaa94fc3da5002993bb7e938fadcf68ec7"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree d6716ebaa94fc3da5002993bb7e938fadcf68ec7\nparent 74e1b2fb77b72247ba5e1612fe9c1add79f6e9ba\nauthor Andrew Toth <andrewstoth@gmail.com> 1719606468 -0400\ncommitter Andrew Toth <andrewstoth@gmail.com> 1720025113 -0400\n\nrefactor: encapsulate flags setting with AddFlags and ClearFlags\n\nNo behavior change. This prepares moving the cache entry\nflags field to private access.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEISytpz6vNK/yCogaYAB6/Ik4sBgFAmaFgBkACgkQYAB6/Ik4\nsBjaDQ/+LCmTqRMP3NHNJjn8Qa9FMG8gPlUuJiJXRgkxFJ0M3wh8V3Bj5Has3XMv\nHxhmhIoTxevFnqdOZ+RGw1zADr6m5cSW7fTZZSgBKikL9dtvGP3OgjX76kQNyxzi\nnmtBrudoPEyBhZs66eficzpwKEdAdSndLIKk+QfGNNQDQAMxkctO9s49iguXELnd\nkE16AKAiAFLKFVpwOLDOcY32eptq2zBrcVhRkHhZbqsJXc8uC8tECVN3vvibvBzs\nbAvyfisqXdKeM9lv30VGAL4DNSwg09UfWxyHREdftJQVmWvUPdgxhjilhuz/8X9S\nooJxcTuV3eI/C/5MmTb9hQjh5UHcZ8fVaWkYXYJbMUjrwWHfQOscTeGLwEG+uSEm\n+qDJdeYxG3my9mik0HgfjEGuY88rqEQc2bOzT194B2fpz0NnIntvmxtO2hTk7xuI\nzBSJrbA4jqjojTp2K1EGSJkTV8mh+K9knCSXIzRrzO+OP28V/aD77zfvkOHNXj11\nlD1zUdLhb/W9BNAYXfai1Jm0vKYqB88U/f3runEkl+jTXLFTefkhrHkd7eVVl0Ij\nu/R4vsFFb8RrMJG4RYMlduMg3l7uv8WkTBsIZV0stMmZv0EZ3/1ZEdcZ2oFB7isj\nW1BTInjFWjsKMYQinCiQ9NQM72wDZWowV+JZcADAxCM+yXW0u4o=\n=ngS1\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/74e1b2fb77b72247ba5e1612fe9c1add79f6e9ba",
          "sha": "74e1b2fb77b72247ba5e1612fe9c1add79f6e9ba",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/74e1b2fb77b72247ba5e1612fe9c1add79f6e9ba"
        }
      ],
      "message": "refactor: encapsulate flags setting with AddFlags and ClearFlags\n\nNo behavior change. This prepares moving the cache entry\nflags field to private access.",
      "committer": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-07-03T16:45:13Z"
      },
      "author": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-06-28T20:27:48Z"
      },
      "sha": "ff1703057a1a1fdd6328bbbd2f13991b6ecf5ef9"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQ2Zjk5ODA5ZTFhYmFmM2VmMjhlZjY0NjU2ZDQ0YmZjZDU4ODY3YTc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d6f99809e1abaf3ef28ef64656d44bfcd58867a7",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d6f99809e1abaf3ef28ef64656d44bfcd58867a7",
      "tree": {
        "sha": "1f917338008b1bb9bf6a4fd7102a7c38595fe7b0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1f917338008b1bb9bf6a4fd7102a7c38595fe7b0"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 1f917338008b1bb9bf6a4fd7102a7c38595fe7b0\nparent ff1703057a1a1fdd6328bbbd2f13991b6ecf5ef9\nauthor Andrew Toth <andrewstoth@gmail.com> 1719607261 -0400\ncommitter Andrew Toth <andrewstoth@gmail.com> 1720025148 -0400\n\nrefactor: disallow setting flags in CCoinsCacheEntry constructors\n\nNo behavior change because any entries that are added in EmplaceCoinInternalDANGER\nhave DIRTY assigned to them after, and if they\nare not inserted then they will not be\nmodified as before.\nThis prepares moving the cache entry\nflags field to private access.\n\nCo-Authored-By: Martin Leitner-Ankerl <martin.ankerl@gmail.com>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEISytpz6vNK/yCogaYAB6/Ik4sBgFAmaFgD4ACgkQYAB6/Ik4\nsBj/fQ/6AlvBvYbC6ihubXxxxaO8Q79hV0mDRdWG+YQ6D8Z4snOJfD2p0ex23iiB\nXSNOP7IKChtgqWrVD+aIWEF2LsacUBh72zpSKMCjVDiqRUMpe6n5PR2tznzay+bq\nfuQUP3mp5M4il/iFLNDINSo/XQxaztPjeH0O63JBJyfftphReqEzA8IlN2deQCBS\nwFDu4gEk3R+FW2Og7jc73wJ+omRczxiBCqKcw4+9qPZv0+e1Po7YeFbiV70K6cB4\nqEhqe2LK4k7Swqsaky0vlUEaL6UVDxJpzwhHjbZbXPH8siLoEI+sOkbbFDqkjt4b\ntFdJv3NhpNn8x/gK8oTYl/dn/lhA0VXTa8NUHcTd/Gq2DoISnVb9W/yCNqVVxDdn\nQK3XVS1bJlLY7sZ2jwo4k5sTPgBzLA03e1fVGEXuqzlL7NuSw2LSnvn/ubncb29e\nm4YtZN6fwDrhUpfW2jCuOq7F+sRDxeNUboENDVQyCoMywHwyv53B3gYR99aZw0E1\n1KDvN/197T80OnTWLTFNyVVOehztan8Jtnyiqi8rNiKCb4iTcHZzWiz57G9z3/Rr\n3bj6k89x97Ln+KP4uFXKd4GlvPtmlP7qpoIMwqE6sSr9TtnL0HzxE34FLFjn872o\nOZYrzGaCrN4aXVGCXUyWc3bpiS1koa8om4cr/JWnhQi2Yi62eBQ=\n=yRWZ\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ff1703057a1a1fdd6328bbbd2f13991b6ecf5ef9",
          "sha": "ff1703057a1a1fdd6328bbbd2f13991b6ecf5ef9",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ff1703057a1a1fdd6328bbbd2f13991b6ecf5ef9"
        }
      ],
      "message": "refactor: disallow setting flags in CCoinsCacheEntry constructors\n\nNo behavior change because any entries that are added in EmplaceCoinInternalDANGER\nhave DIRTY assigned to them after, and if they\nare not inserted then they will not be\nmodified as before.\nThis prepares moving the cache entry\nflags field to private access.\n\nCo-Authored-By: Martin Leitner-Ankerl <martin.ankerl@gmail.com>",
      "committer": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-07-03T16:45:48Z"
      },
      "author": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-06-28T20:41:01Z"
      },
      "sha": "d6f99809e1abaf3ef28ef64656d44bfcd58867a7"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGI1M2JkMTc2M2ZlYjQzZDYxNmU2NWQzY2U3YjA3ZGNjMTI2MjM3Y2U",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b53bd1763feb43d616e65d3ce7b07dcc126237ce",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b53bd1763feb43d616e65d3ce7b07dcc126237ce",
      "tree": {
        "sha": "40c92114aecf047a52d94f1ed42ac588c68d6087",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/40c92114aecf047a52d94f1ed42ac588c68d6087"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 40c92114aecf047a52d94f1ed42ac588c68d6087\nparent d6f99809e1abaf3ef28ef64656d44bfcd58867a7\nauthor Andrew Toth <andrewstoth@gmail.com> 1719607465 -0400\ncommitter Andrew Toth <andrewstoth@gmail.com> 1720025150 -0400\n\nrefactor: move flags to private uint8_t and rename to m_flags\n\nNo behavior change. This prepares to add CCoinsCacheEntrys\nto a doubly linked list when a flag is added.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEISytpz6vNK/yCogaYAB6/Ik4sBgFAmaFgD4ACgkQYAB6/Ik4\nsBhOoxAAgWwY76yLIqIMTZnpzn7v2GOw+a2k+lDmBSPGtqWC+bRARokJdmMNUYNt\nsYeOm2IikWBePL/YYlz5MdqYdN7u6yPg7eSgwWQbJFuC1vcXoAb1bdskD/31jjAX\njBYwDQA0dqhFaiSukOnYKiVv8L9kYMY+KdTsNH9MW/zn7cl5ZA687b4Z3Fenw4H1\nOpW4A+JI1Kv5lxsf6VmkaaSK7eK4fk+tOX6XLdwsuiaUhnQOLMYOPNc89hLIIdeV\nARpFGR5QtMGTGTYnGQedXA/sYgvgzR2tM+/6JhrQDvWQXsQsH4Wisn4tzlvmawBF\n0xJkCPczPy6tEjxx4IfguP8wHZz+LUoootNgkreWcdSqsZhRJpbPuQ9Um06Fp0f/\ng9P6tqXMyc/YzoClDuer9WBjRe1r2AXkCHFwViZBdiJqlyAz/zUFHkli6c3lq7gV\n9k9ArMKx5Ff0aLxHINwOsuUzbM0iewI/4lh37TcJaqzPZ7zeWM0X7HXB0stnkoWl\nQewWddv4idQQoi3ih31hobFZmI/z/zUzzaMmsCH33jNM+GJ5BkWVavJ3NskHT7hW\nEmGFQ/6rSynCigPADpaIkYswfmwFHSYiVjxhUEOywJfvzvkfUyEnIQsyh/ipRDCh\nMsgw0oKuzvyYJxOQY8N0NhYbkDBxDlMfSfGKlc7MobwVF3kfmzs=\n=qg7i\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d6f99809e1abaf3ef28ef64656d44bfcd58867a7",
          "sha": "d6f99809e1abaf3ef28ef64656d44bfcd58867a7",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d6f99809e1abaf3ef28ef64656d44bfcd58867a7"
        }
      ],
      "message": "refactor: move flags to private uint8_t and rename to m_flags\n\nNo behavior change. This prepares to add CCoinsCacheEntrys\nto a doubly linked list when a flag is added.",
      "committer": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-07-03T16:45:50Z"
      },
      "author": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-06-28T20:44:25Z"
      },
      "sha": "b53bd1763feb43d616e65d3ce7b07dcc126237ce"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGJjMTU4MzM0ZDljMjdjN2QzYzlmM2MzZTJlYmI4MzhiZjIzN2RkYTQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bc158334d9c27c7d3c9f3c3e2ebb838bf237dda4",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/bc158334d9c27c7d3c9f3c3e2ebb838bf237dda4",
      "tree": {
        "sha": "365651a5fa6f93be113fe99a4d923d4c356993ad",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/365651a5fa6f93be113fe99a4d923d4c356993ad"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 365651a5fa6f93be113fe99a4d923d4c356993ad\nparent b53bd1763feb43d616e65d3ce7b07dcc126237ce\nauthor Andrew Toth <andrewstoth@gmail.com> 1719608262 -0400\ncommitter Andrew Toth <andrewstoth@gmail.com> 1720025150 -0400\n\nrefactor: add CoinsCachePair alias\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEISytpz6vNK/yCogaYAB6/Ik4sBgFAmaFgD4ACgkQYAB6/Ik4\nsBjErA/9FZdUfJHJriRSVNwjA7m3S0gaAYBZFuqFoV6BAVTnaojxHnaym/BgGISK\n6WMhXhNyGoafqDiH+EHpPYlnegwYx1fIIxxrj9pa4EgG2wNgywFSteZvWvmuRqAK\n5uFcoUnxXWDH5S4Qw/oVx/m8OzelpCKa95nUut+2YcCk1CK6cSqHFCI/GNUg8LMq\n7lVTpLrqYmKj5M1KXcAR5xODg5q5h8xaP1bqFnEf89mNe+1Pqquz0bi7aUktn4or\nLBKYy9DAFEDObVVn0wKyc6lhviUmlmYUCSjxsGHm9HdhXW6TVBMxYzARem1UktPr\nv6gXlbu+sI5VepaXOwdxbekobJxRJ/27Voh7aZgJq6PKjBZ8EAV5IRclbglk+KpI\nS+aKtz4r0D69whFusPxvy61ESdYUHzOI97peg4+5Tb+tziPcoGVMbuZ8ZEuDVG5L\nX7mRUyihygifK8JEKmvffqqRnh8qet+mL/GE5NFibcfeUqz3OiylGpb4/nb8HrBA\n5rqb4ZAyGmARrsR/NrgyJ+G59LwsIqGfzQCjXFJ5KtOfTiGdRILMY5wzqpK3llzL\nmr6d7aoh+HVwVeQdF1lLgn3D5k+Tr9HZs/NBE6/AaGL+fS1NIxrvF2hMGn4zqsjr\npCI9w758LUe0CMtVUXV5yDTc7bRfyPkziyz5rTggImK7DP6M2WI=\n=xVrT\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b53bd1763feb43d616e65d3ce7b07dcc126237ce",
          "sha": "b53bd1763feb43d616e65d3ce7b07dcc126237ce",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b53bd1763feb43d616e65d3ce7b07dcc126237ce"
        }
      ],
      "message": "refactor: add CoinsCachePair alias",
      "committer": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-07-03T16:45:50Z"
      },
      "author": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-06-28T20:57:42Z"
      },
      "sha": "bc158334d9c27c7d3c9f3c3e2ebb838bf237dda4"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13383524110,
      "node_id": "HRFPE_lADOABII585ugaXwzwAAAAMduF8O",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13383524110",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-03T16:46:46Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13383698354,
      "node_id": "HRFPE_lADOABII585ugaXwzwAAAAMduwey",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13383698354",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-03T17:04:22Z"
    },
    {
      "event": "reviewed",
      "id": 2157025488,
      "node_id": "PRR_kwDOABII586AkZjQ",
      "url": null,
      "actor": null,
      "commit_id": "9d539b74516c7ee1bdc775e80d1a54882ffc3683",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#pullrequestreview-2157025488",
      "submitted_at": "2024-07-03T17:36:19Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDZiNzM2MWUxODk0NzI3ZGMyOTA4M2IwMmU2YmY1NGUyMzEyMWVlODc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6b7361e1894727dc29083b02e6bf54e23121ee87",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6b7361e1894727dc29083b02e6bf54e23121ee87",
      "tree": {
        "sha": "10666399944e105ef06ad7fd47aa72db010c90a5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/10666399944e105ef06ad7fd47aa72db010c90a5"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 10666399944e105ef06ad7fd47aa72db010c90a5\nparent bc158334d9c27c7d3c9f3c3e2ebb838bf237dda4\nauthor Andrew Toth <andrewstoth@gmail.com> 1719609273 -0400\ncommitter Andrew Toth <andrewstoth@gmail.com> 1720028905 -0400\n\nrefactor: require self and head parameters for AddFlags\n\nNo behavior change. Prepares for adding the CoinsCachePairs to\na linked list when flagged.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEISytpz6vNK/yCogaYAB6/Ik4sBgFAmaFjusACgkQYAB6/Ik4\nsBikIw/+MwBFeOPynAdEFeYM0x7tcs9hDTKfSIk5A4awP+823CME2HNhY5rILYmm\nEpnxMltpNhWB3ru6qK+mW5NSzVtDxehIV0uBHL/+N4JNa9SSVpkVkqKGTUeOKxbm\nPcywL5+ON0qxgnY3+WvFLxp3QIBNAZUMhNkklm4psdcgVkYFtXsUsNZzcxU8QUvF\nkL+pPA3ZckXVoMxcVzlMesSdjmwAiM++v40ITCvOc/+JceOdzxwgixOmQ/AqlRbQ\nIdHmcdlUlw3JySgh8yAj0xMui63NUZENLvCFpOsCLoH5nyHbqLPywfmfSwJKFYZx\nBuFv4Mcj/NMqx5kfVi7oB7g60+K/aTvvAziFkDo/mnJJc+hEdD+XFKBwWQellvwQ\nAt7CnT4KEuYmZfzS8yUHlE+vpWNnkTHH/hJoOkVyG/BvpWTVm1NxnivC1/i+8j3r\n8SjWB0yDJeZ5IKAX54QL1DoXqY9ZD3A2lkTQu20PF66wUQdRHjgcyYCenawcZhvI\nukRQckFeg6nFDQxRiBTZ0GVoQLe5sz2ALzpPAkWIVKdT7i/SLexj13giACfFk0dF\n89uz9uLl9B1HRk/6japIPxmQAb2fGXMehOK57GTOaghrGkcX+cNSW81mXX6Z3I0/\nHVTYVnm8fJiuPVeoi5FSmFGYIJ0CPgEp1xcPXs1Ukv86kcuPUCE=\n=Z4lU\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bc158334d9c27c7d3c9f3c3e2ebb838bf237dda4",
          "sha": "bc158334d9c27c7d3c9f3c3e2ebb838bf237dda4",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/bc158334d9c27c7d3c9f3c3e2ebb838bf237dda4"
        }
      ],
      "message": "refactor: require self and head parameters for AddFlags\n\nNo behavior change. Prepares for adding the CoinsCachePairs to\na linked list when flagged.",
      "committer": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-07-03T17:48:25Z"
      },
      "author": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-06-28T21:14:33Z"
      },
      "sha": "6b7361e1894727dc29083b02e6bf54e23121ee87"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDhhYmZmMTJmMjdmZDY1N2Y3NTNhZGU3YjJhYzg3OGMzMGExMzFhNGE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8abff12f27fd657f753ade7b2ac878c30a131a4a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8abff12f27fd657f753ade7b2ac878c30a131a4a",
      "tree": {
        "sha": "68dca0c16030a63ffaf64e24dc558daacf801cb0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/68dca0c16030a63ffaf64e24dc558daacf801cb0"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 68dca0c16030a63ffaf64e24dc558daacf801cb0\nparent 6b7361e1894727dc29083b02e6bf54e23121ee87\nauthor Andrew Toth <andrewstoth@gmail.com> 1719618132 -0400\ncommitter Andrew Toth <andrewstoth@gmail.com> 1720028907 -0400\n\nrefactor: rename erase to will_erase\n\nNo behavior change. Prepare for change where BatchWrite\nwill not erase coins internally.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEISytpz6vNK/yCogaYAB6/Ik4sBgFAmaFjusACgkQYAB6/Ik4\nsBiUGxAAntdMa7OMy0EcWzANm77j/Dfv8b8poi3yo+9Mq4g/40bQssh2sIxFoiSc\nIHT9KxtdB0WzwIaufXkL5eNungxX/stAT/PeIDticMoMQodT3mvROa7BcTagWj5H\n0TL6le0hEKLnJ/AJH7Ly+HDqd+PsBzqJ4RyUAkYtyK24NAC8dFipli8TTsH7tZR7\nSZEDR1o4Ze3ImYfDyfh4oPWm+7nWI8R10haU2pfrPsKZY477cMhGB6opa4DQMPG+\n2RJzpWEA8owXyJ8vEKxic6nVYH7wiRF7oJxcxzx1wAFtpVJ7jdo41Jh5+mq7Yema\nIVo2w+8G9Ct3YTI9VdwkZrnoAiedY1S/8Ud1eWriLiu1wLjAmBIS5e5vp9VxWcaQ\nmPouUMr6XcLU5habe4ICFjiu6TlBilP4pN8GBnQCt4DZGHb1VoJut5qgHwBGGyzY\ni4qkQ6pvEzPawNegxHLoZYNHIJKEIGg6qGB3k3jmy38CGpSMLBgA3gy76WqEhW9A\nzzBfKMAZMibxZVDoCaoOAymGPmneGvluPd9E2OuqDPuRZc8Qsw1ELAuW+p5RFbSH\nM6R7zyYy+T2F6y6BSkFoh7QKt8GO0Ga9bLFlUSKo1LwbzgFfDaPn8oiHRO7YdeRv\niCxDZqnYu2wCqZIIKaL3qnAQwPF4G/jmU/uMnnRnHfngN942bcw=\n=7t2j\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6b7361e1894727dc29083b02e6bf54e23121ee87",
          "sha": "6b7361e1894727dc29083b02e6bf54e23121ee87",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6b7361e1894727dc29083b02e6bf54e23121ee87"
        }
      ],
      "message": "refactor: rename erase to will_erase\n\nNo behavior change. Prepare for change where BatchWrite\nwill not erase coins internally.",
      "committer": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-07-03T17:48:27Z"
      },
      "author": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-06-28T23:42:12Z"
      },
      "sha": "8abff12f27fd657f753ade7b2ac878c30a131a4a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDEyYjdlYzkxMTQyZTE1YjQzYmQ4OTQ4NjY3YTU4YzA3YjgwOTE1OTc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/12b7ec91142e15b43bd8948667a58c07b8091597",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/12b7ec91142e15b43bd8948667a58c07b8091597",
      "tree": {
        "sha": "e9bea95e634ac4a5f558d38050ec5d0ca893e431",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e9bea95e634ac4a5f558d38050ec5d0ca893e431"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree e9bea95e634ac4a5f558d38050ec5d0ca893e431\nparent 8abff12f27fd657f753ade7b2ac878c30a131a4a\nauthor Andrew Toth <andrewstoth@gmail.com> 1719618580 -0400\ncommitter Andrew Toth <andrewstoth@gmail.com> 1720028907 -0400\n\ncoins: call ClearFlags in CCoinsCacheEntry destructor\n\nNo behavior change. Prepares for flags adding CCoinsCacheEntrys\nto a linked list which need to be removed on destruction.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEISytpz6vNK/yCogaYAB6/Ik4sBgFAmaFjusACgkQYAB6/Ik4\nsBj8VA//bE4UQVA3b9hIA0KJsqem6hgK5D5pQPuEcwchRmQgHUwj8vLLyo8M2wg9\nIU9IYtH0vPO/pWTAxHQXzu3gEqog5FmhmwYfVZ7xMG3ApM0kgblkrej46vctmv3v\n/GphEa50+QryYKrAdcw4nPEOIL/JcwwSSd0IsK8vK1ykPtCWL9B8Ev0dCTzX+C2Q\nQizgy/exd7isFosU+fFWm3zlgUSGuG4wBe+pOb893ns+AvFxp6NxDelO2uQ29zlG\nClLtJ1o+vOITONUPxOxoMMRxEejyDvspDqw/kWXeGL3Vb1muyALz7It15xDeP1l0\ntyEKh0sNKevLHACjEKNLF04F79U4YWYNr7zqLnsaa48laj6+8a3o0+mNXgwS4nFM\n7NH0B8Z9dagzztuaNMbbgxCzDV2+DMf4YfEEj3u+y77Kb67gvoOOmseuDicnFC3Z\n5wF3ur6xeXa8jzCQody0yfzADDtytt+LfNHxfjkll+yOl0IlpCcKb5uy92PTgrVZ\ne5LN6bXvCQckdaML+Rul95dzj5YdhbiEX+PZ3+WTsZShA52GO9IUQlJtJNK4t5lx\n1uzZiXF7TUEsrbgGop+bK7qAbyL7wqb9LZVRmQUzzaAtiqoX1jurGmDevWvF4+fs\nOXecfxNtGwXjeVljA7dRCjhdPCn3QHnQvRpmaKYW9EKCc1YFVSU=\n=Diq1\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8abff12f27fd657f753ade7b2ac878c30a131a4a",
          "sha": "8abff12f27fd657f753ade7b2ac878c30a131a4a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8abff12f27fd657f753ade7b2ac878c30a131a4a"
        }
      ],
      "message": "coins: call ClearFlags in CCoinsCacheEntry destructor\n\nNo behavior change. Prepares for flags adding CCoinsCacheEntrys\nto a linked list which need to be removed on destruction.",
      "committer": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-07-03T17:48:27Z"
      },
      "author": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-06-28T23:49:40Z"
      },
      "sha": "12b7ec91142e15b43bd8948667a58c07b8091597"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGU0OTZlM2ExYTk3NDdiNDhhN2QwNzU0ZWRkZmQzMjYwNzIwOTEwMTI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e496e3a1a9747b48a7d0754eddfd326072091012",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e496e3a1a9747b48a7d0754eddfd326072091012",
      "tree": {
        "sha": "77dd4a1d3db86143b66cb84345a72234194d368e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/77dd4a1d3db86143b66cb84345a72234194d368e"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 77dd4a1d3db86143b66cb84345a72234194d368e\nparent 12b7ec91142e15b43bd8948667a58c07b8091597\nauthor Andrew Toth <andrewstoth@gmail.com> 1719619514 -0400\ncommitter Andrew Toth <andrewstoth@gmail.com> 1720028938 -0400\n\ncoins: add cache entry linked list fields and methods\n\nNo visible behavior change. This commit tracks the flagged\nentries internally but the list is not iterated by anything.\n\nCo-Authored-By: Pieter Wuille <pieter@wuille.net>\nCo-Authored-By: l0rinc <1841944+paplorinc@users.noreply.github.com>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEISytpz6vNK/yCogaYAB6/Ik4sBgFAmaFjwwACgkQYAB6/Ik4\nsBjKyhAAvD3gHWo3iisE0VETOyrukO+AoHlaJxKK1Hqv+7/mB6LmNJHZyc1hTxvw\nu0u0+qwWy+5p6SOHZ+mf2Uleq3MJCRyv/rcYCVLk4yJ5wluzNUoZ53+rbK4yUFmU\nugcj04XqR2CG7NTlg/hfuzGrYoAhvH1KLx9pdfsIPHOTUlbc5CHLmSQBQuUN/4PJ\nLIJaiBf/UqzUGv4rua8TW0lhy0KyOqBAhcxqRUo3nc1he2y2fpdnQuqR261zlZJD\nuYSmYb5YlSrHqZHoWB0dPmnps3HdwmWucFzTK3hK0WvAm1/E5pfKw8ksJkpgDCzQ\n9x1+TBazlCY4G2Qtf2Pbi2wjq6XGoE5TQQYycaoWTA23IFjZD+cfsWhzjz9frr/M\nB2fZPc/w7C4ZICGfJm5xlbPHxpDKZwdh1Y2PM7h6AmFsr7TKURdoykFyVoecMmEM\nmYVZaMw3HLhJURJadsI4F0sJ8AYSNSBl28H2mmqaqGegTm0Z4hHUt4vmWvKHv4Ym\nAO/dz0CMcCUOGee5mQUMqMiF1s+0BwqeqBplVlzoJMHDhdYupPW+qkPaOschit7q\nVL1PtUWIiboX0x9mM+eOveJU5bRrMIG5gCbQbftiJBoNFZ19JnstceecUM6beBFY\nkI0uPgfDOktfgPM2P7KLSkqYMBvrWVtv1Z47+S0k4ovoqrwekCg=\n=N5VU\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/12b7ec91142e15b43bd8948667a58c07b8091597",
          "sha": "12b7ec91142e15b43bd8948667a58c07b8091597",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/12b7ec91142e15b43bd8948667a58c07b8091597"
        }
      ],
      "message": "coins: add cache entry linked list fields and methods\n\nNo visible behavior change. This commit tracks the flagged\nentries internally but the list is not iterated by anything.\n\nCo-Authored-By: Pieter Wuille <pieter@wuille.net>\nCo-Authored-By: l0rinc <1841944+paplorinc@users.noreply.github.com>",
      "committer": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-07-03T17:48:58Z"
      },
      "author": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-06-29T00:05:14Z"
      },
      "sha": "e496e3a1a9747b48a7d0754eddfd326072091012"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDIzNmZlMDVhZjVhNzdiZGNlNzM2MGVmZDFjNTA5OTExOWFkN2MwZWE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/236fe05af5a77bdce7360efd1c5099119ad7c0ea",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/236fe05af5a77bdce7360efd1c5099119ad7c0ea",
      "tree": {
        "sha": "164b2eee6bf44aa088ce5c3005fadaeb9bc86f93",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/164b2eee6bf44aa088ce5c3005fadaeb9bc86f93"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 164b2eee6bf44aa088ce5c3005fadaeb9bc86f93\nparent e496e3a1a9747b48a7d0754eddfd326072091012\nauthor Andrew Toth <andrewstoth@gmail.com> 1719619939 -0400\ncommitter Andrew Toth <andrewstoth@gmail.com> 1720028940 -0400\n\ntest: add cache entry linked list tests\n\n\n\nCo-Authored-By: l0rinc <1841944+paplorinc@users.noreply.github.com>",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEISytpz6vNK/yCogaYAB6/Ik4sBgFAmaFjwwACgkQYAB6/Ik4\nsBji2Q//Xi5PPPIHA5IIdfOrbCbQ3y8VPZ26lbOmkPmGPeJYjvbIz3M18LD5HHrY\nUWXwfYSuGee/QBdropxO+VIKa1IPOH7fhY3MF7A8017jPkii5W8VIRRVx7kM/w/z\nF23DcBNrQfR2HDPEGfmMRVoJAjjqdU1UIVgIUNVYwDUc43y1z2UauhFB6hUzX3Zv\nhUBtQRg6fERTQBelYQVlr9h62LkJdjYFLqlpuiZ0lh31i9Ryw70sfkGBY75ciIBk\nUhg2pRXXiouCUMiiAHIQo53zgFA3J4T+cu4S6SFnY6teC2zxL/CvXK/TSCglkf0S\ntI3o+9PDCZRop3l2RPxPvmO8HoIL6rwWxIAHwxmOUwrvX5WlADLbIyCFHflMThti\nz6Q3fhoPVBgWvFa2XlkbyiWr3Zobre5vPVwrtHedniAoj9vlZGNqHeBQdr2drevT\nE3J1ujK6QhyPZ6WpE8DZssHg1SkHM3NvxsetB6DwSpVRc7Q4GkuOMpVt/LVjnCGU\naI8ZJjIJjZS5MAghijZ+W5nHvPNPnILhZ90e5/5bGXgd5qYJZxWYV+3vkaka9hAl\n2aKy1umkZ6881BMwMtUa0vn941C13sGFHJbSus23rUvnoLaW+udbjiVKqhPkDXm6\nzC7CKLQjmuTN0KDA8NOlRyuUbbuZl/7z2FyftzFPirK2v58Ieh8=\n=RAE0\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e496e3a1a9747b48a7d0754eddfd326072091012",
          "sha": "e496e3a1a9747b48a7d0754eddfd326072091012",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e496e3a1a9747b48a7d0754eddfd326072091012"
        }
      ],
      "message": "test: add cache entry linked list tests\n\n\n\nCo-Authored-By: l0rinc <1841944+paplorinc@users.noreply.github.com>",
      "committer": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-07-03T17:49:00Z"
      },
      "author": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-06-29T00:12:19Z"
      },
      "sha": "236fe05af5a77bdce7360efd1c5099119ad7c0ea"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDIzMGUwZDc0N2E2MDY5OTY2ODUyOWM5ZjRkYTdkODM2NjUxYmQ4ZGQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/230e0d747a60699668529c9f4da7d836651bd8dd",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/230e0d747a60699668529c9f4da7d836651bd8dd",
      "tree": {
        "sha": "a9f3b27c23e345988152e734ec27cee2cb7ff7fa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a9f3b27c23e345988152e734ec27cee2cb7ff7fa"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree a9f3b27c23e345988152e734ec27cee2cb7ff7fa\nparent 236fe05af5a77bdce7360efd1c5099119ad7c0ea\nauthor Andrew Toth <andrewstoth@gmail.com> 1719621223 -0400\ncommitter Andrew Toth <andrewstoth@gmail.com> 1720028940 -0400\n\ncoins: track dirty cache entries in doubly linked list\n\n\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEISytpz6vNK/yCogaYAB6/Ik4sBgFAmaFjwwACgkQYAB6/Ik4\nsBiphg/9H9/Aawv6UXsPCsOhwOD2E8l91pLFhpxxCi2k7yquwER4/+rzqWQEmx1Z\n2T4d4vP+C2pe9q4gVXsi4CqmTk5El86/wenA71e9zNVjLaiIql3xXR48xbEIRYb6\nEDv8LF0OJ5xSt6ZsDAxvniVo6CoAmTXUNFitsDJLel4DSzq/wR6XEPGtQHv7KgGz\nkdBGeLCpipuIIJKvh9uv29F+vm6D81y2u3zISyC0D7o6/cM6k3lgFkw403T9dIBb\n0W84RN+o8qjhsXocRUPxyHT6w9inuzk9j1cG82kYw5vHdKsMYDj5atw5sggNXTCT\nVJjZluYx4YagngvSJd4fxeFrphnItOoJT13HDbxpEyxY+Pn6r1VHjWOVT0RZcf3D\ng4x16kQJyE1xjRjADfZynOsp/FtAjVz1kxS6KOlxy0mV2zvyJ47HUZXZcEhUDSzI\ngX29BZ7Ns74CKhyBGql02XKOTyqXPTO08f7iiBRjJuqztV6QG9pjHTNeQZhpa8a4\ncf2IiAqq6w+fRea5Csi5dr8rKtBKIuumXWBdqC+Ow3MYrGQKydCB0MF9E2XG50jd\nihDbmz1bT5OwI0HA/WV6QAfG+Z339h7hHiI/d07q412N3Sr1kSGTo/IQe65Q2vSi\nCUcMSC1EFGYBhh3/jlQtO5TAqrxW4flm2WcZodVWkM2SD6H4wds=\n=ztDn\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/236fe05af5a77bdce7360efd1c5099119ad7c0ea",
          "sha": "236fe05af5a77bdce7360efd1c5099119ad7c0ea",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/236fe05af5a77bdce7360efd1c5099119ad7c0ea"
        }
      ],
      "message": "coins: track dirty cache entries in doubly linked list",
      "committer": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-07-03T17:49:00Z"
      },
      "author": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-06-29T00:33:43Z"
      },
      "sha": "230e0d747a60699668529c9f4da7d836651bd8dd"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDkxNTYwYTZmMjNhMGUwZjMwMjFiNjNmYWNiNGFkM2E4NGNlYmIwYTA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "tree": {
        "sha": "7060aa7dba344a6eead10bcd28444578d940be01",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7060aa7dba344a6eead10bcd28444578d940be01"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 7060aa7dba344a6eead10bcd28444578d940be01\nparent 230e0d747a60699668529c9f4da7d836651bd8dd\nauthor Andrew Toth <andrewstoth@gmail.com> 1719621269 -0400\ncommitter Andrew Toth <andrewstoth@gmail.com> 1720028940 -0400\n\nvalidation: don't erase coins cache on prune flushes\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEISytpz6vNK/yCogaYAB6/Ik4sBgFAmaFjwwACgkQYAB6/Ik4\nsBg1XQ//d3MPscbivz1X+SxFMWA7yFhm1IvjA9w7dmnquWJKCRFcFcj0TgEI68gP\niyjcg5JQF22d9iMD6brKWUBJzXtAM2AbAFvnV6aObQbD5U9AQ8Zm89QAdSDP53sV\nAooFga8+e456w0CCLFd7Y9F++W9CyuaolenznYS4celxUSClFSka4Z4y+pfwgKKz\nb8+BB1gIDwYp6hRA2YH68PBgEwot7Y6seHmuiUlAbfOq8OwFfrfH7wwULkhLDm35\nlkddhCBGiQUX5DOiuTX4d0XOlEGrUw946cSX4PpNduMjILkiNxfl+pUXgY5EbQyp\n+qoWUXdTlnYIwg8E6j6VpeIyPxBSAJbbqgHqyjq7ZH5dllAivjRNEgloaTaYOEFI\nampssJtRglfEhMVCa4IdAUkbJDMK32AittlDxcm5UGtk26tdbNc89gZJM42CUssV\niePefCSVTyfVHWQCuipGJvejHVll/sQi4rJ49OQ/GZUhKjt/aBOroVnDKRJIWn7V\n6r3nY/gO31neHGTbWtUeBfX6ONKzKivIwaTmyAczr9bxdhd4J61aRVXhWfpZUnfN\n8l6H5E+qavxjCA9H5skINsQPfHJcSyZCvreUZ1s2VSEqdIGLpNS9EhhbvmAmDJpv\niTEA1IcVfiHLvSOQqyMu4JDM0eqZMCEYW/FFQc3b6A9GJfIrnhY=\n=s+H5\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/230e0d747a60699668529c9f4da7d836651bd8dd",
          "sha": "230e0d747a60699668529c9f4da7d836651bd8dd",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/230e0d747a60699668529c9f4da7d836651bd8dd"
        }
      ],
      "message": "validation: don't erase coins cache on prune flushes",
      "committer": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-07-03T17:49:00Z"
      },
      "author": {
        "name": "Andrew Toth",
        "email": "andrewstoth@gmail.com",
        "date": "2024-06-29T00:34:29Z"
      },
      "sha": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13384170158,
      "node_id": "HRFPE_lADOABII585ugaXwzwAAAAMdwjqu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13384170158",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-03T17:49:08Z"
    },
    {
      "event": "reviewed",
      "id": 2157030164,
      "node_id": "PRR_kwDOABII586AkasU",
      "url": null,
      "actor": null,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "I ran the benchmarks without prune (on the previous push), with just a lazy `-reindex` or `-reindex-chainstate`, but couldn't measure any difference - do I need more than 200k blocks? Or is prune critical here? Or is lazy reindexing not enough?\r\n\r\n```bash\r\nsudo ./src/bitcoind -stopatheight=200000\r\n\r\nsudo hyperfine \\\r\n--warmup 1 --runs 5 \\\r\n--show-output \\\r\n--parameter-list commit master,670084adc53e3d661ea5b4a19743659609a42d5e \\\r\n--prepare 'git checkout {commit} && git reset --hard && make -j10 && sync && purge' \\\r\n'./src/bitcoind -dbcache=4000 -stopatheight=200000 -reindex-chainstate -assumevalid=0 -connect=0 -listen=0 -maxconnections=0'\r\n```\r\nresulting in\r\n```\r\nSummary\r\n  ./src/bitcoind -dbcache=4000 -stopatheight=100000 -reindex -assumevalid=0 -connect=0 -listen=0 -maxconnections=0 (commit = 670084adc53e3d661ea5b4a19743659609a42d5e) ran\r\n    1.00 ± 0.01 times faster than ./src/bitcoind -dbcache=4000 -stopatheight=100000 -reindex -assumevalid=0 -connect=0 -listen=0 -maxconnections=0 (commit = master)\r\n```",
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#pullrequestreview-2157030164",
      "submitted_at": "2024-07-03T18:19:23Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
    },
    {
      "event": "commented",
      "id": 2206960214,
      "node_id": "IC_kwDOABII586Di4pW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2206960214",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-03T18:34:03Z",
      "updated_at": "2024-07-03T18:34:03Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I ran the benchmarks without prune (on the previous push), with just a lazy -reindex or -reindex-chainstate, but couldn't measure any difference - do I need more than 200k blocks? Or is prune critical here? Or is lazy reindexing not enough?\r\n\r\nIt shouldn't have much effect on non-pruning nodes, so it's good that there's no regression.\r\nYou will need pruning enabled to see the performance benefits. The higher the dbcache and lower the prune settings the better. The higher the block height the better.",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#issuecomment-2206960214",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28280"
    },
    {
      "event": "commented",
      "id": 2206961708,
      "node_id": "IC_kwDOABII586Di5As",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2206961708",
      "actor": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-03T18:35:07Z",
      "updated_at": "2024-07-03T18:35:07Z",
      "author_association": "CONTRIBUTOR",
      "body": "> You will need pruning enabled to see the performance benefits\r\n\r\nThat requires a bit more setup to be able to do it offline",
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#issuecomment-2206961708",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28280"
    },
    {
      "event": "commented",
      "id": 2206973129,
      "node_id": "IC_kwDOABII586Di7zJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2206973129",
      "actor": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-03T18:43:53Z",
      "updated_at": "2024-07-03T18:43:53Z",
      "author_association": "CONTRIBUTOR",
      "body": "> That requires a bit more setup to be able to do it offline\r\n\r\nI don't think it's possible to reindex the chainstate of a pruned node, since that requires having all blocks. So you will need to redownload blocks to benchmark this. In my setup I have another fully synced non-pruned node on a separate machine in my local network and I only connect the node being benchmarked to that other node.",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#issuecomment-2206973129",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28280"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1296524385",
      "pull_request_review_id": 1581554153,
      "id": 1296524385,
      "node_id": "PRRC_kwDOABII585NR2Rh",
      "diff_hunk": "@@ -103,8 +103,16 @@ class Coin\n  */\n struct CCoinsCacheEntry\n {\n+private:\n+    //! These are used to create a doubly linked list of dirty entries. They are\n+    //! set in SetFlags and unset in ClearFlags.\n+    CCoinsCacheEntry *m_prev{nullptr};",
      "path": "src/coins.h",
      "position": null,
      "original_position": 7,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "dbd663c4461cf0d8f478d46e224a966293db3bd3",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If these were iterators into the map, rather than pointers to the value, I think you wouldn't need the `m_outpoint`.",
      "created_at": "2023-08-16T23:14:03Z",
      "updated_at": "2023-08-16T23:14:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1296524385",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1296524385"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 109,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297300532",
      "pull_request_review_id": 1582751611,
      "id": 1297300532,
      "node_id": "PRRC_kwDOABII585NUzw0",
      "diff_hunk": "@@ -103,8 +103,16 @@ class Coin\n  */\n struct CCoinsCacheEntry\n {\n+private:\n+    //! These are used to create a doubly linked list of dirty entries. They are\n+    //! set in SetFlags and unset in ClearFlags.\n+    CCoinsCacheEntry *m_prev{nullptr};",
      "path": "src/coins.h",
      "position": null,
      "original_position": 7,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "dbd663c4461cf0d8f478d46e224a966293db3bd3",
      "in_reply_to_id": 1296524385,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Actually, it seems iterators may get invalidated when a map rehash occurs, but pointers to elements don't.\r\n\r\nI think you can however store pointers to `std::pair<const COutPoint, CoinsCacheEntry>` (the `value_type` of the map). Would that help alleviate the need for `m_outpoint`?",
      "created_at": "2023-08-17T14:23:57Z",
      "updated_at": "2023-08-17T14:55:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1297300532",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297300532"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 109,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297307567",
      "pull_request_review_id": 1582762652,
      "id": 1297307567,
      "node_id": "PRRC_kwDOABII585NU1ev",
      "diff_hunk": "@@ -103,8 +103,16 @@ class Coin\n  */\n struct CCoinsCacheEntry\n {\n+private:\n+    //! These are used to create a doubly linked list of dirty entries. They are\n+    //! set in SetFlags and unset in ClearFlags.\n+    CCoinsCacheEntry *m_prev{nullptr};",
      "path": "src/coins.h",
      "position": null,
      "original_position": 7,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "dbd663c4461cf0d8f478d46e224a966293db3bd3",
      "in_reply_to_id": 1296524385,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Brilliant, thanks! Was just trying this last night, this looks like the way. Will give it a shot.",
      "created_at": "2023-08-17T14:28:58Z",
      "updated_at": "2023-08-17T14:29:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1297307567",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297307567"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 109,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297701571",
      "pull_request_review_id": 1583408156,
      "id": 1297701571,
      "node_id": "PRRC_kwDOABII585NWVrD",
      "diff_hunk": "@@ -103,8 +103,16 @@ class Coin\n  */\n struct CCoinsCacheEntry\n {\n+private:\n+    //! These are used to create a doubly linked list of dirty entries. They are\n+    //! set in SetFlags and unset in ClearFlags.\n+    CCoinsCacheEntry *m_prev{nullptr};",
      "path": "src/coins.h",
      "position": null,
      "original_position": 7,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "dbd663c4461cf0d8f478d46e224a966293db3bd3",
      "in_reply_to_id": 1296524385,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@sipa done! Thank you for the elegant solution.",
      "created_at": "2023-08-17T20:21:49Z",
      "updated_at": "2023-08-17T20:21:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1297701571",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1297701571"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 109,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1414243104",
      "pull_request_review_id": 1763003369,
      "id": 1414243104,
      "node_id": "PRRC_kwDOABII585US6Mg",
      "diff_hunk": "@@ -138,9 +137,9 @@ struct CCoinsCacheEntry\n         FRESH = (1 << 1),\n     };\n \n-    CCoinsCacheEntry() : flags(0) {}\n-    explicit CCoinsCacheEntry(Coin&& coin_) : coin(std::move(coin_)), flags(0) {}\n-    CCoinsCacheEntry(Coin&& coin_, unsigned char flag) : coin(std::move(coin_)), flags(flag) {}\n+    CCoinsCacheEntry() {}",
      "path": "src/coins.h",
      "position": null,
      "original_position": 15,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "ba09f5039c4bd2868335d5616f86acbfa41bedd9",
      "in_reply_to_id": null,
      "user": {
        "login": "martinus",
        "id": 14386,
        "node_id": "MDQ6VXNlcjE0Mzg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/martinus",
        "html_url": "https://github.com/martinus",
        "followers_url": "https://api.github.com/users/martinus/followers",
        "following_url": "https://api.github.com/users/martinus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/martinus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/martinus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
        "organizations_url": "https://api.github.com/users/martinus/orgs",
        "repos_url": "https://api.github.com/users/martinus/repos",
        "events_url": "https://api.github.com/users/martinus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/martinus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "While you are at it, I'd use `CCoinsCacheEntry = default;`. clang-tidy usually warns against this: https://clang.llvm.org/extra/clang-tidy/checks/modernize/use-equals-default.html",
      "created_at": "2023-12-04T17:26:57Z",
      "updated_at": "2023-12-04T20:16:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1414243104",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1414243104"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 140,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1414384720",
      "pull_request_review_id": 1763003369,
      "id": 1414384720,
      "node_id": "PRRC_kwDOABII585UTcxQ",
      "diff_hunk": "@@ -9,6 +9,42 @@\n #include <random.h>\n #include <util/trace.h>\n \n+void CCoinsCacheEntry::SetFlags(uint8_t flags, CoinsCachePair &self, CoinsCachePair &head)",
      "path": "src/coins.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "d66ad8efafe95445fcfcec6c07a6117faa32fa36",
      "in_reply_to_id": null,
      "user": {
        "login": "martinus",
        "id": 14386,
        "node_id": "MDQ6VXNlcjE0Mzg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/martinus",
        "html_url": "https://github.com/martinus",
        "followers_url": "https://api.github.com/users/martinus/followers",
        "following_url": "https://api.github.com/users/martinus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/martinus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/martinus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
        "organizations_url": "https://api.github.com/users/martinus/orgs",
        "repos_url": "https://api.github.com/users/martinus/repos",
        "events_url": "https://api.github.com/users/martinus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/martinus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think `SetFlags` is a bit confusing name, since it's more a `AddFlags`, because it doesn't simply set the flags, it ORs them together.\r\n\r\nAlternatively (and I think this is the better solution) really use `m_flags = flags` instead of `mflags |= flags`.",
      "created_at": "2023-12-04T19:25:35Z",
      "updated_at": "2023-12-04T20:16:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1414384720",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1414384720"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 12,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1414394258",
      "pull_request_review_id": 1763003369,
      "id": 1414394258,
      "node_id": "PRRC_kwDOABII585UTfGS",
      "diff_hunk": "@@ -144,10 +144,11 @@ void CCoinsViewCache::AddCoin(const COutPoint &outpoint, Coin&& coin, bool possi\n \n void CCoinsViewCache::EmplaceCoinInternalDANGER(COutPoint&& outpoint, Coin&& coin) {\n     cachedCoinsUsage += coin.DynamicMemoryUsage();\n-    cacheCoins.emplace(\n+    auto it{cacheCoins.emplace(\n         std::piecewise_construct,\n         std::forward_as_tuple(std::move(outpoint)),\n-        std::forward_as_tuple(std::move(coin), CCoinsCacheEntry::DIRTY));\n+        std::forward_as_tuple(std::move(coin))).first};\n+    it->second.SetFlags(CCoinsCacheEntry::DIRTY, *it, m_flagged_head);",
      "path": "src/coins.cpp",
      "position": null,
      "original_position": 50,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "ba09f5039c4bd2868335d5616f86acbfa41bedd9",
      "in_reply_to_id": null,
      "user": {
        "login": "martinus",
        "id": 14386,
        "node_id": "MDQ6VXNlcjE0Mzg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/martinus",
        "html_url": "https://github.com/martinus",
        "followers_url": "https://api.github.com/users/martinus/followers",
        "following_url": "https://api.github.com/users/martinus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/martinus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/martinus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
        "organizations_url": "https://api.github.com/users/martinus/orgs",
        "repos_url": "https://api.github.com/users/martinus/repos",
        "events_url": "https://api.github.com/users/martinus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/martinus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not sure if that is possible in the call, but when `emplace` doesn't create a new object because the outpoint is already present, then previously the flags didn't change. Now, the flag DIRTY is always added, regardless if the outpoint was already present in `cacheCoins` or not.",
      "created_at": "2023-12-04T19:32:52Z",
      "updated_at": "2023-12-04T20:16:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1414394258",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1414394258"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 151,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1414402060",
      "pull_request_review_id": 1763003369,
      "id": 1414402060,
      "node_id": "PRRC_kwDOABII585UThAM",
      "diff_hunk": "@@ -214,22 +216,23 @@ void CCoinsViewCache::SetBestBlock(const uint256 &hashBlockIn) {\n     hashBlock = hashBlockIn;\n }\n \n-bool CCoinsViewCache::BatchWrite(CCoinsMap &mapCoins, const uint256 &hashBlockIn, bool erase) {\n-    for (CCoinsMap::iterator it = mapCoins.begin();\n-            it != mapCoins.end();\n-            it = erase ? mapCoins.erase(it) : std::next(it)) {\n+bool CCoinsViewCache::BatchWrite(CoinsCachePair *pairs, const uint256 &hashBlockIn, bool erase) {\n+    for (auto it{pairs};\n+            it != nullptr;\n+            it = it->second.Next(erase)) {\n         // Ignore non-dirty entries (optimization).\n-        if (!(it->second.flags & CCoinsCacheEntry::DIRTY)) {\n+        if (!(it->second.GetFlags() & CCoinsCacheEntry::DIRTY)) {\n             continue;\n         }\n         CCoinsMap::iterator itUs = cacheCoins.find(it->first);\n         if (itUs == cacheCoins.end()) {\n             // The parent cache does not have an entry, while the child cache does.\n             // We can ignore it if it's both spent and FRESH in the child\n-            if (!(it->second.flags & CCoinsCacheEntry::FRESH && it->second.coin.IsSpent())) {\n+            if (!(it->second.GetFlags() & CCoinsCacheEntry::FRESH && it->second.coin.IsSpent())) {\n                 // Create the coin in the parent cache, move the data up\n                 // and mark it as dirty.\n-                CCoinsCacheEntry& entry = cacheCoins[it->first];\n+                itUs = cacheCoins.emplace(std::piecewise_construct, std::forward_as_tuple(it->first), std::tuple<>()).first;",
      "path": "src/coins.cpp",
      "position": null,
      "original_position": 94,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "ba09f5039c4bd2868335d5616f86acbfa41bedd9",
      "in_reply_to_id": null,
      "user": {
        "login": "martinus",
        "id": 14386,
        "node_id": "MDQ6VXNlcjE0Mzg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/martinus",
        "html_url": "https://github.com/martinus",
        "followers_url": "https://api.github.com/users/martinus/followers",
        "following_url": "https://api.github.com/users/martinus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/martinus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/martinus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
        "organizations_url": "https://api.github.com/users/martinus/orgs",
        "repos_url": "https://api.github.com/users/martinus/repos",
        "events_url": "https://api.github.com/users/martinus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/martinus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'd use `itUs = cacheCoins.try_emplace(it->first).first;` instead, it's just less code and does the same thing",
      "created_at": "2023-12-04T19:40:15Z",
      "updated_at": "2023-12-04T20:16:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1414402060",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1414402060"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 234,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1414435232",
      "pull_request_review_id": 1763003369,
      "id": 1414435232,
      "node_id": "PRRC_kwDOABII585UTpGg",
      "diff_hunk": "@@ -301,16 +306,20 @@ bool CCoinsViewCache::Flush() {\n \n bool CCoinsViewCache::Sync()\n {\n-    bool fOk = base->BatchWrite(cacheCoins, hashBlock, /*erase=*/false);\n+    const auto fOk{base->BatchWrite(m_flagged_head.second.Next(), hashBlock, /*erase=*/false)};\n     // Instead of clearing `cacheCoins` as we would in Flush(), just clear the\n     // FRESH/DIRTY flags of any coin that isn't spent.\n-    for (auto it = cacheCoins.begin(); it != cacheCoins.end(); ) {\n+    for (auto it{m_flagged_head.second.Next()}; it != nullptr; ) {\n         if (it->second.coin.IsSpent()) {\n+            // We need to get next entry before we erase this entry.\n+            // Since cacheCoins owns the entry, it will be deallocated before we\n+            // can access the next entry if we erase first.\n+            const auto next_entry{it->second.Next(/*clear_flags=*/true)};",
      "path": "src/coins.cpp",
      "position": null,
      "original_position": 175,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "ba09f5039c4bd2868335d5616f86acbfa41bedd9",
      "in_reply_to_id": null,
      "user": {
        "login": "martinus",
        "id": 14386,
        "node_id": "MDQ6VXNlcjE0Mzg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/martinus",
        "html_url": "https://github.com/martinus",
        "followers_url": "https://api.github.com/users/martinus/followers",
        "following_url": "https://api.github.com/users/martinus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/martinus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/martinus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
        "organizations_url": "https://api.github.com/users/martinus/orgs",
        "repos_url": "https://api.github.com/users/martinus/repos",
        "events_url": "https://api.github.com/users/martinus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/martinus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit, you could move that line in front of the `if`, then remove the else, like so:\r\n\r\n```cpp\r\nconst auto next_entry{it->second.Next(/*clear_flags=*/true)};\r\nif (it->second.coin.IsSpent()) {\r\n    cachedCoinsUsage -= it->second.coin.DynamicMemoryUsage();\r\n    cacheCoins.erase(it->first);\r\n}\r\nit = next_entry;\r\n```",
      "created_at": "2023-12-04T20:12:08Z",
      "updated_at": "2023-12-04T20:16:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1414435232",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1414435232"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 317,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1414758537",
      "pull_request_review_id": 1763789494,
      "id": 1414758537,
      "node_id": "PRRC_kwDOABII585UU4CJ",
      "diff_hunk": "@@ -9,6 +9,42 @@\n #include <random.h>\n #include <util/trace.h>\n \n+void CCoinsCacheEntry::SetFlags(uint8_t flags, CoinsCachePair &self, CoinsCachePair &head)",
      "path": "src/coins.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "d66ad8efafe95445fcfcec6c07a6117faa32fa36",
      "in_reply_to_id": 1414384720,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Only 2 of the 6 previous `flags` assignments (aside from `= 0`) used simple assignment, the other 4 use OR assignment. The 2 that use simple assignment we know logically that they must have been just created and therefore their flags are 0 so we are not overwriting any existing flags. Therefore an OR assignment in those 2 cases is logically equivalent.\r\n\r\nSo if we were to go with your second suggestion we would need to modify behavior to make sure we assign the new flags we wish to set OR'd with the current flags so we don't overwrite existing flags. Or create separate Set and Add methods. I think that would make this patch more cumbersome.\r\n\r\nIt seems to me your first suggestion would be the path of least resistance. Updated to `AddFlags`.",
      "created_at": "2023-12-05T02:15:17Z",
      "updated_at": "2023-12-05T03:32:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1414758537",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1414758537"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 12,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1415458663",
      "pull_request_review_id": 1764866102,
      "id": 1415458663,
      "node_id": "PRRC_kwDOABII585UXi9n",
      "diff_hunk": "@@ -138,9 +137,9 @@ struct CCoinsCacheEntry\n         FRESH = (1 << 1),\n     };\n \n-    CCoinsCacheEntry() : flags(0) {}\n-    explicit CCoinsCacheEntry(Coin&& coin_) : coin(std::move(coin_)), flags(0) {}\n-    CCoinsCacheEntry(Coin&& coin_, unsigned char flag) : coin(std::move(coin_)), flags(flag) {}\n+    CCoinsCacheEntry() {}",
      "path": "src/coins.h",
      "position": null,
      "original_position": 15,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "ba09f5039c4bd2868335d5616f86acbfa41bedd9",
      "in_reply_to_id": 1414243104,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "One thing I don't like about `modernize-use-equals-default` is that it makes aggregate initialization possible again, when a developer disabled it by declaring a constructor.\r\n\r\nThough, now that C++20 will be required soon, I guess it can be enabled. C.f.\r\n\r\n```cpp\r\nstruct A {\r\n    // A() {}; // \"main\" fn fails to compile under C++17 and 20\r\n    A() = default;  // \"main\" fn fails to compile under C++20\r\n    int b{};\r\n};\r\n\r\nint main() { (void)A{1}; }\r\n",
      "created_at": "2023-12-05T11:46:54Z",
      "updated_at": "2023-12-05T11:46:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1415458663",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1415458663"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 140,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1415481883",
      "pull_request_review_id": 1764898773,
      "id": 1415481883,
      "node_id": "PRRC_kwDOABII585UXoob",
      "diff_hunk": "@@ -138,9 +137,9 @@ struct CCoinsCacheEntry\n         FRESH = (1 << 1),\n     };\n \n-    CCoinsCacheEntry() : flags(0) {}\n-    explicit CCoinsCacheEntry(Coin&& coin_) : coin(std::move(coin_)), flags(0) {}\n-    CCoinsCacheEntry(Coin&& coin_, unsigned char flag) : coin(std::move(coin_)), flags(flag) {}\n+    CCoinsCacheEntry() {}",
      "path": "src/coins.h",
      "position": null,
      "original_position": 15,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "ba09f5039c4bd2868335d5616f86acbfa41bedd9",
      "in_reply_to_id": 1414243104,
      "user": {
        "login": "martinus",
        "id": 14386,
        "node_id": "MDQ6VXNlcjE0Mzg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/martinus",
        "html_url": "https://github.com/martinus",
        "followers_url": "https://api.github.com/users/martinus/followers",
        "following_url": "https://api.github.com/users/martinus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/martinus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/martinus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
        "organizations_url": "https://api.github.com/users/martinus/orgs",
        "repos_url": "https://api.github.com/users/martinus/repos",
        "events_url": "https://api.github.com/users/martinus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/martinus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah, I wasn't aware of that, good to know :+1: ",
      "created_at": "2023-12-05T12:00:07Z",
      "updated_at": "2023-12-05T12:00:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1415481883",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1415481883"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 140,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1527532617",
      "pull_request_review_id": 1941500013,
      "id": 1527532617,
      "node_id": "PRRC_kwDOABII585bDExJ",
      "diff_hunk": "@@ -103,6 +106,14 @@ class Coin\n  */\n struct CCoinsCacheEntry\n {\n+private:\n+    //! These are used to create a doubly linked list of flagged entries. They",
      "path": "src/coins.h",
      "position": null,
      "original_position": 15,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "56faed97cd462345578b482c2d2089081ca393b6",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"coins: add cache entry linked list fields and methods\"\r\n\r\nNit: `//!` is for doxygen comments on the *next* definition. Since this is really a comment on the next two, it probably shouldn't be a doxygen comment.",
      "created_at": "2024-03-17T15:12:09Z",
      "updated_at": "2024-03-17T15:22:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1527532617",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1527532617"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 110,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1527533452",
      "pull_request_review_id": 1941500013,
      "id": 1527533452,
      "node_id": "PRRC_kwDOABII585bDE-M",
      "diff_hunk": "@@ -108,10 +108,15 @@ void CCoinsViewCache::AddCoin(const COutPoint &outpoint, Coin&& coin, bool possi\n \n void CCoinsViewCache::EmplaceCoinInternalDANGER(COutPoint&& outpoint, Coin&& coin) {\n     cachedCoinsUsage += coin.DynamicMemoryUsage();\n-    cacheCoins.emplace(\n+    CCoinsMap::iterator it;\n+    bool inserted;\n+    std::tie(it, inserted) = cacheCoins.emplace(",
      "path": "src/coins.cpp",
      "position": null,
      "original_position": 47,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "75a248f770fed4d8bf664bb9d5ed1f80e51c9bc8",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"coins: track dirty cache entries in doubly linked list\"\r\n\r\nUse a C++17 structured binding:\r\n\r\n```c++\r\nauto [it, inserted] = cacheCoins.emplace(\r\n```",
      "created_at": "2024-03-17T15:16:08Z",
      "updated_at": "2024-03-17T15:22:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1527533452",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1527533452"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 113,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1527534087",
      "pull_request_review_id": 1941500013,
      "id": 1527534087,
      "node_id": "PRRC_kwDOABII585bDFIH",
      "diff_hunk": "@@ -51,7 +51,7 @@ CCoinsMap::iterator CCoinsViewCache::FetchCoin(const COutPoint &outpoint) const\n     if (ret->second.coin.IsSpent()) {\n         // The parent only has an empty entry for this outpoint; we can consider our\n         // version as fresh.\n-        ret->second.flags = CCoinsCacheEntry::FRESH;\n+        ret->second.AddFlags(CCoinsCacheEntry::FRESH, *ret, m_flagged_head);",
      "path": "src/coins.cpp",
      "position": 23,
      "original_position": 23,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "75a248f770fed4d8bf664bb9d5ed1f80e51c9bc8",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"coins: track dirty cache entries in doubly linked list\"\r\n\r\nShould `FRESH`-but-not-`DIRTY` be flagged? I believe those correspond to spent but unmodified coins fetched from the parent cache.\r\n\r\nIf the rule is flagged == dirty, then perhaps it makes sense to instead of having `AddFlags` and `Clearflags` have a single `SetFlags`, which knows whether the new state is supposed to be in the list or not (moving the responsibility of flagged-or-not to that function instead of the caller). EDIT: I notice you used to have a `SetFlags`, actually, but my comments is more about where the responsibility lies for deciding whether an entry ought to be flagged or not than the actual function names.",
      "created_at": "2024-03-17T15:19:45Z",
      "updated_at": "2024-03-17T15:54:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1527534087",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1527534087"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 54,
      "original_line": 54,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532602577",
      "pull_request_review_id": 1949746270,
      "id": 1532602577,
      "node_id": "PRRC_kwDOABII585bWajR",
      "diff_hunk": "@@ -51,7 +51,7 @@ CCoinsMap::iterator CCoinsViewCache::FetchCoin(const COutPoint &outpoint) const\n     if (ret->second.coin.IsSpent()) {\n         // The parent only has an empty entry for this outpoint; we can consider our\n         // version as fresh.\n-        ret->second.flags = CCoinsCacheEntry::FRESH;\n+        ret->second.AddFlags(CCoinsCacheEntry::FRESH, *ret, m_flagged_head);",
      "path": "src/coins.cpp",
      "position": 23,
      "original_position": 23,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "75a248f770fed4d8bf664bb9d5ed1f80e51c9bc8",
      "in_reply_to_id": 1527534087,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Should `FRESH`-but-not-`DIRTY` be flagged? I believe those correspond to spent but unmodified coins fetched from the parent cache.\r\n\r\nYes, but only because in this case they are also spent. We erase all spent coins from the cache after doing a non-erasing batch write. There would be no way to track spent-but-not-`DIRTY` otherwise except by scanning the entire cache.\r\n\r\nSince the only case where we have `FRESH`-but-not-`DIRTY` is where the coin is spent, it makes sense to me to just add this to the linked list as well. Before proposing this PR I did call the linked list head `m_dirty_head`, but after not finding an efficient way to remove non-dirty spent entries, I decided to call it `m_flagged_head`.\r\n\r\nIf this makes sense to you I can add a comment here explaining this.",
      "created_at": "2024-03-20T18:32:51Z",
      "updated_at": "2024-03-20T18:32:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1532602577",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532602577"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 54,
      "original_line": 54,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532606237",
      "pull_request_review_id": 1949752247,
      "id": 1532606237,
      "node_id": "PRRC_kwDOABII585bWbcd",
      "diff_hunk": "@@ -51,7 +51,7 @@ CCoinsMap::iterator CCoinsViewCache::FetchCoin(const COutPoint &outpoint) const\n     if (ret->second.coin.IsSpent()) {\n         // The parent only has an empty entry for this outpoint; we can consider our\n         // version as fresh.\n-        ret->second.flags = CCoinsCacheEntry::FRESH;\n+        ret->second.AddFlags(CCoinsCacheEntry::FRESH, *ret, m_flagged_head);",
      "path": "src/coins.cpp",
      "position": 23,
      "original_position": 23,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "75a248f770fed4d8bf664bb9d5ed1f80e51c9bc8",
      "in_reply_to_id": 1527534087,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@andrewtoth Ah, I see, that makes sense. It would be good to add comments to explain that flagged means \"FRESH, DIRTY, or both\" and why.",
      "created_at": "2024-03-20T18:35:18Z",
      "updated_at": "2024-03-20T19:16:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1532606237",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532606237"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 54,
      "original_line": 54,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1652853326",
      "pull_request_review_id": 2138727793,
      "id": 1652853326,
      "node_id": "PRRC_kwDOABII585ihIpO",
      "diff_hunk": "@@ -108,10 +108,13 @@ void CCoinsViewCache::AddCoin(const COutPoint &outpoint, Coin&& coin, bool possi\n \n void CCoinsViewCache::EmplaceCoinInternalDANGER(COutPoint&& outpoint, Coin&& coin) {\n     cachedCoinsUsage += coin.DynamicMemoryUsage();\n-    cacheCoins.emplace(\n+    auto [it, inserted] = cacheCoins.emplace(",
      "path": "src/coins.cpp",
      "position": 45,
      "original_position": 45,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "6ed20408df85ed31cfb0ca7bc8da7b8140e1ef2f",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "would it make sense to use `cacheCoins.try_emplace` without the `forward_as_tuple` parts (similarly to what I've tried [in a related PR](https://github.com/bitcoin/bitcoin/pull/30326/files#diff-f0ed73d62dae6ca28ebd3045e5fc0d5d02eaaacadb4c2a292985a3fbd7e1c77cR44)) (in a separate commit or PR)",
      "created_at": "2024-06-25T13:44:43Z",
      "updated_at": "2024-06-28T15:07:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1652853326",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1652853326"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 111,
      "original_line": 111,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1655477509",
      "pull_request_review_id": 2142888699,
      "id": 1655477509,
      "node_id": "PRRC_kwDOABII585irJUF",
      "diff_hunk": "@@ -103,6 +106,30 @@ class Coin\n  */\n struct CCoinsCacheEntry\n {\n+private:\n+    /**\n+     * These are used to create a doubly linked list of flagged entries.\n+     * They are set in AddFlags and unset in ClearFlags.\n+     * A flagged entry is any entry that is either DIRTY, FRESH, or both.\n+     *\n+     * DIRTY entries are tracked so that only modified entries can be passed to\n+     * the parent cache to do a batch write. This is a performance optimization\n+     * compared to giving all entries in the cache to the parent and having the\n+     * parent scan for only modified entries.\n+     *\n+     * FRESH entries are tracked because a FRESH-but-not-DIRTY entry can only be\n+     * a spent coin that exists in the parent cache. When performing a batch",
      "path": "src/coins.h",
      "position": null,
      "original_position": 26,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "0a2bc92b0c642ae72a10f687e0758c59c8ffd79c",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This comment and the implementation further persists the notion of FRESH-but-not-DIRTY coin, which I think is unfortunate, because it should be impossible for them to exist:\r\nThe only place in which they could be created is [here](https://github.com/bitcoin/bitcoin/blob/b27afb7fb774809c9c075d56e44657e0b607a00c/src/coins.cpp#L54), while fetching a coin from the parent that is spent. However that is not possible because we'd only get to that point if the [GetCoin()](https://github.com/bitcoin/bitcoin/blob/b27afb7fb774809c9c075d56e44657e0b607a00c/src/coins.cpp#L48) call a few lines above returned `true` - which is impossible for spent coins because according to the abstract `CCoinsView` interface, `GetCoin` \"[Returns true only when an unspent coin was found, which is returned in coin](https://github.com/bitcoin/bitcoin/blob/b27afb7fb774809c9c075d56e44657e0b607a00c/src/coins.h#L176).\" This is followed both by `CCoinsViewCache::GetCoin`, which returns `false` if spent and `CCoinsViewDB::GetCoin` which doesn't return spent coins because they are never saved to disk.\r\n\r\nMaybe it would be good to revive #18746 which attempted to fix this but got closed.\r\n\r\nWith that, this PR could add only DIRTY coins and ignore the FRESH flag, which would be simpler.\r\n",
      "created_at": "2024-06-26T20:24:17Z",
      "updated_at": "2024-06-27T18:45:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1655477509",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1655477509"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 121,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657288151",
      "pull_request_review_id": 2142888699,
      "id": 1657288151,
      "node_id": "PRRC_kwDOABII585iyDXX",
      "diff_hunk": "@@ -124,7 +124,7 @@ bool CCoinsViewDB::BatchWrite(CCoinsMap &mapCoins, const uint256 &hashBlock, boo\n             changed++;\n         }\n         count++;\n-        it = erase ? mapCoins.erase(it) : std::next(it);\n+        it = it->second.Next(will_erase || !it->second.coin.IsSpent());",
      "path": "src/txdb.cpp",
      "position": null,
      "original_position": 25,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "a6324db9c6ae1b71b9687923a516a8adc01b7e1a",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think that it should be explained in a comment similar as it's already done in `CCoinsViewCache::BatchWrite` why we keep unspent coins because this is not obvious.",
      "created_at": "2024-06-27T14:51:20Z",
      "updated_at": "2024-06-27T18:45:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1657288151",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657288151"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 127,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657659234",
      "pull_request_review_id": 2146259536,
      "id": 1657659234,
      "node_id": "PRRC_kwDOABII585izd9i",
      "diff_hunk": "@@ -51,7 +51,7 @@ CCoinsMap::iterator CCoinsViewCache::FetchCoin(const COutPoint &outpoint) const\n     if (ret->second.coin.IsSpent()) {\n         // The parent only has an empty entry for this outpoint; we can consider our\n         // version as fresh.\n-        ret->second.flags = CCoinsCacheEntry::FRESH;\n+        ret->second.AddFlags(CCoinsCacheEntry::FRESH, *ret, m_flagged_head);",
      "path": "src/coins.cpp",
      "position": 23,
      "original_position": 23,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "75a248f770fed4d8bf664bb9d5ed1f80e51c9bc8",
      "in_reply_to_id": 1527534087,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "see https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1655477509, I think that FRESH-but-not-DIRTY coins may not exist.",
      "created_at": "2024-06-27T18:48:14Z",
      "updated_at": "2024-06-27T18:48:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1657659234",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1657659234"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 54,
      "original_line": 54,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1658060325",
      "pull_request_review_id": 2146910713,
      "id": 1658060325,
      "node_id": "PRRC_kwDOABII585i0_4l",
      "diff_hunk": "@@ -103,6 +106,30 @@ class Coin\n  */\n struct CCoinsCacheEntry\n {\n+private:\n+    /**\n+     * These are used to create a doubly linked list of flagged entries.\n+     * They are set in AddFlags and unset in ClearFlags.\n+     * A flagged entry is any entry that is either DIRTY, FRESH, or both.\n+     *\n+     * DIRTY entries are tracked so that only modified entries can be passed to\n+     * the parent cache to do a batch write. This is a performance optimization\n+     * compared to giving all entries in the cache to the parent and having the\n+     * parent scan for only modified entries.\n+     *\n+     * FRESH entries are tracked because a FRESH-but-not-DIRTY entry can only be\n+     * a spent coin that exists in the parent cache. When performing a batch",
      "path": "src/coins.h",
      "position": null,
      "original_position": 26,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "0a2bc92b0c642ae72a10f687e0758c59c8ffd79c",
      "in_reply_to_id": 1655477509,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> With that, this PR could add only DIRTY coins and ignore the FRESH flag, which would be simpler.\n\nI'm not sure how that would be simpler. The two flags are coupled and so adding one and not the other would be a more complex diff. Perhaps I don't understand what you are suggesting?\n\nI could just replace the single FRESH-but-not-DIRTY check with an assertion and remove this comment about tracking FRESH coins?",
      "created_at": "2024-06-28T02:36:04Z",
      "updated_at": "2024-06-28T02:36:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1658060325",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1658060325"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 121,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1658390684",
      "pull_request_review_id": 2138727793,
      "id": 1658390684,
      "node_id": "PRRC_kwDOABII585i2Qic",
      "diff_hunk": "@@ -103,6 +106,30 @@ class Coin\n  */\n struct CCoinsCacheEntry\n {\n+private:\n+    /**\n+     * These are used to create a doubly linked list of flagged entries.\n+     * They are set in AddFlags and unset in ClearFlags.\n+     * A flagged entry is any entry that is either DIRTY, FRESH, or both.\n+     *\n+     * DIRTY entries are tracked so that only modified entries can be passed to\n+     * the parent cache to do a batch write. This is a performance optimization\n+     * compared to giving all entries in the cache to the parent and having the\n+     * parent scan for only modified entries.\n+     *\n+     * FRESH entries are tracked because a FRESH-but-not-DIRTY entry can only be\n+     * a spent coin that exists in the parent cache. When performing a batch\n+     * write but not clearing the cache (CCoinsViewCache::Sync), we must also",
      "path": "src/coins.h",
      "position": null,
      "original_position": 27,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "0a2bc92b0c642ae72a10f687e0758c59c8ffd79c",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit:\r\n```suggestion\r\n     * write without clearing the cache (CCoinsViewCache::Sync), we must also\r\n```",
      "created_at": "2024-06-28T09:03:27Z",
      "updated_at": "2024-06-28T15:07:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1658390684",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1658390684"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 122,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1658391340",
      "pull_request_review_id": 2138727793,
      "id": 1658391340,
      "node_id": "PRRC_kwDOABII585i2Qss",
      "diff_hunk": "@@ -103,6 +106,30 @@ class Coin\n  */\n struct CCoinsCacheEntry\n {\n+private:\n+    /**\n+     * These are used to create a doubly linked list of flagged entries.\n+     * They are set in AddFlags and unset in ClearFlags.\n+     * A flagged entry is any entry that is either DIRTY, FRESH, or both.\n+     *\n+     * DIRTY entries are tracked so that only modified entries can be passed to\n+     * the parent cache to do a batch write. This is a performance optimization",
      "path": "src/coins.h",
      "position": null,
      "original_position": 21,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "0a2bc92b0c642ae72a10f687e0758c59c8ffd79c",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit:\r\n```suggestion\r\n     * the parent cache for batch writing. This is a performance optimization\r\n```",
      "created_at": "2024-06-28T09:04:01Z",
      "updated_at": "2024-06-28T15:07:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1658391340",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1658391340"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 116,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1658394351",
      "pull_request_review_id": 2138727793,
      "id": 1658394351,
      "node_id": "PRRC_kwDOABII585i2Rbv",
      "diff_hunk": "@@ -130,6 +157,56 @@ struct CCoinsCacheEntry\n     CCoinsCacheEntry() : flags(0) {}\n     explicit CCoinsCacheEntry(Coin&& coin_) : coin(std::move(coin_)), flags(0) {}\n     CCoinsCacheEntry(Coin&& coin_, unsigned char flag) : coin(std::move(coin_)), flags(flag) {}\n+    ~CCoinsCacheEntry()\n+    {\n+        // We must always clear the flags when destroying this to remove it from\n+        // the flagged linked list",
      "path": "src/coins.h",
      "position": null,
      "original_position": 48,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "0a2bc92b0c642ae72a10f687e0758c59c8ffd79c",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: redundant comment",
      "created_at": "2024-06-28T09:06:44Z",
      "updated_at": "2024-06-28T15:07:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1658394351",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1658394351"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": 162,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 163,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1658399777",
      "pull_request_review_id": 2138727793,
      "id": 1658399777,
      "node_id": "PRRC_kwDOABII585i2Swh",
      "diff_hunk": "@@ -130,6 +157,56 @@ struct CCoinsCacheEntry\n     CCoinsCacheEntry() : flags(0) {}\n     explicit CCoinsCacheEntry(Coin&& coin_) : coin(std::move(coin_)), flags(0) {}\n     CCoinsCacheEntry(Coin&& coin_, unsigned char flag) : coin(std::move(coin_)), flags(flag) {}\n+    ~CCoinsCacheEntry()\n+    {\n+        // We must always clear the flags when destroying this to remove it from\n+        // the flagged linked list\n+        ClearFlags();\n+    }\n+\n+    //! Adding a flag also requires a self reference to the pair that contains\n+    //! this entry in the CCoinsCache map and a reference to the head of the\n+    //! flagged pair linked list.\n+    inline void AddFlags(uint8_t flags, CoinsCachePair& self, CoinsCachePair& head)\n+    {\n+        if (flags == 0) return;\n+        if (m_flags != 0) {\n+            m_flags |= flags;\n+            return;\n+        }\n+        m_prev = &head;\n+        m_next = head.second.m_next;\n+        head.second.m_next = &self;\n+        if (m_next != nullptr) {\n+            m_next->second.m_prev = &self;\n+        }\n+        m_flags = flags;\n+    }\n+\n+    inline void ClearFlags()\n+    {\n+        if (m_flags == 0) return;\n+        m_prev->second.m_next = m_next;",
      "path": "src/coins.h",
      "position": null,
      "original_position": 74,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "0a2bc92b0c642ae72a10f687e0758c59c8ffd79c",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Probably not a realistic scenario (may require multithreaded access because of the `m_flags` guard, not sure) , but `m_prev` will never be `null` when we get here, right?",
      "created_at": "2024-06-28T09:11:34Z",
      "updated_at": "2024-06-28T15:07:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1658399777",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1658399777"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 189,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1658417894",
      "pull_request_review_id": 2138727793,
      "id": 1658417894,
      "node_id": "PRRC_kwDOABII585i2XLm",
      "diff_hunk": "@@ -0,0 +1,186 @@\n+// Copyright (c) 2024-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <coins.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <list>\n+\n+BOOST_AUTO_TEST_SUITE(coinscachepair_tests)\n+\n+static constexpr auto NUM_NODES{4};\n+\n+std::list<CoinsCachePair> CreatePairs(CoinsCachePair& head)\n+{\n+    std::list<CoinsCachePair> nodes;\n+    for (auto i{0}; i < NUM_NODES; ++i) {\n+        nodes.emplace_front();\n+\n+        auto node{nodes.begin()};\n+        node->second.AddFlags(CCoinsCacheEntry::DIRTY, *node, head);\n+\n+        BOOST_CHECK_EQUAL(node->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+        BOOST_CHECK_EQUAL(head.second.Next(), &(*node));\n+\n+        if (i > 0) {\n+            BOOST_CHECK_EQUAL(&(*std::next(node)), node->second.Next());\n+        } else {\n+            BOOST_CHECK_EQUAL(nullptr, node->second.Next());\n+        }\n+    }\n+    return nodes;\n+}\n+\n+BOOST_AUTO_TEST_CASE(linked_list_iteration)\n+{\n+    CoinsCachePair head;\n+    auto nodes{CreatePairs(head)};\n+\n+    // Check iterating through pairs is identical to iterating through a list\n+    auto lit{nodes.begin()};\n+    for (auto it{head.second.Next()}; it != nullptr; it = it->second.Next(/*clear_flags=*/false), ++lit) {\n+        BOOST_CHECK_EQUAL(&(*lit), it);\n+    }\n+\n+    // Check iterating through pairs is identical to iterating through a list\n+    // Clear the flags during iteration\n+    lit = nodes.begin();\n+    for (auto it{head.second.Next()}; it != nullptr; it = it->second.Next(/*clear_flags=*/true), ++lit) {\n+        BOOST_CHECK_EQUAL(&(*lit), it);\n+    }\n+    // Check that head is empty\n+    BOOST_CHECK_EQUAL(head.second.Next(), nullptr);\n+\n+    // Delete the nodes from the list to make sure there are no dangling pointers\n+    for (auto it{nodes.begin()}; it != nodes.end(); it = nodes.erase(it)) {\n+        BOOST_CHECK_EQUAL(it->second.GetFlags(), 0);\n+        BOOST_CHECK_EQUAL(it->second.Next(), nullptr);\n+    }\n+}\n+\n+BOOST_AUTO_TEST_CASE(linked_list_iterate_erase)\n+{\n+    CoinsCachePair head;\n+    auto nodes{CreatePairs(head)};\n+\n+    // Check iterating through pairs is identical to iterating through a list\n+    // Erase the nodes as we iterate through, but don't clear flags\n+    // The flags will be cleared by the CCoinsCacheEntry's destructor\n+    auto lit{nodes.begin()};\n+    for (auto it{head.second.Next()}; it != nullptr; it = it->second.Next(/*clear_flags=*/false), lit = nodes.erase(lit)) {\n+        BOOST_CHECK_EQUAL(&(*lit), it);\n+    }\n+    // Check that head is empty\n+    BOOST_CHECK_EQUAL(head.second.Next(), nullptr);\n+}\n+\n+BOOST_AUTO_TEST_CASE(linked_list_random_deletion)\n+{\n+    CoinsCachePair head;\n+    auto nodes{CreatePairs(head)};\n+\n+    // Create linked list head->n1->n2->n3->n4->nullptr\n+    auto n1{nodes.begin()};\n+    auto n2{std::next(n1)};\n+    auto n3{std::next(n2)};\n+    auto n4{std::next(n3)};\n+\n+    // Delete n2\n+    // head->n1->n3->n4->nullptr\n+    nodes.erase(n2);\n+    // Check that n1 now points to n3, and n3 still points to n4\n+    // Also check that flags were not altered\n+    BOOST_CHECK_EQUAL(n1->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+    BOOST_CHECK_EQUAL(n1->second.Next(), &(*n3));\n+    BOOST_CHECK_EQUAL(n3->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+    BOOST_CHECK_EQUAL(n3->second.Next(), &(*n4));\n+\n+    // Delete n1\n+    // head->n3->n4->nullptr\n+    nodes.erase(n1);\n+    // Check that head now points to n3, and n3 still points to n4\n+    // Also check that flags were not altered\n+    BOOST_CHECK_EQUAL(n3->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+    BOOST_CHECK_EQUAL(head.second.Next(), &(*n3));\n+    BOOST_CHECK_EQUAL(n3->second.Next(), &(*n4));\n+\n+    // Delete n4\n+    // head->n3->nullptr\n+    nodes.erase(n4);\n+    // Check that head still points to n3, and n3 points to nullptr\n+    // Also check that flags were not altered\n+    BOOST_CHECK_EQUAL(n3->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+    BOOST_CHECK_EQUAL(head.second.Next(), &(*n3));\n+    BOOST_CHECK_EQUAL(n3->second.Next(), nullptr);\n+\n+    // Delete n3\n+    // head->nullptr\n+    nodes.erase(n3);\n+    // Check that head now points to nullptr\n+    BOOST_CHECK_EQUAL(head.second.Next(), nullptr);\n+}\n+\n+BOOST_AUTO_TEST_CASE(linked_list_add_flags)\n+{\n+    CoinsCachePair head;\n+    CoinsCachePair n1;\n+    CoinsCachePair n2;\n+\n+    // Check that adding 0 flag has no effect\n+    n1.second.AddFlags(0, n1, head);\n+    BOOST_CHECK_EQUAL(n1.second.GetFlags(), 0);\n+    BOOST_CHECK_EQUAL(n1.second.Next(), nullptr);\n+    BOOST_CHECK_EQUAL(head.second.Next(), nullptr);\n+\n+    // Check that adding DIRTY flag inserts it into linked list and sets flags\n+    n1.second.AddFlags(CCoinsCacheEntry::DIRTY, n1, head);\n+    BOOST_CHECK_EQUAL(n1.second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+    BOOST_CHECK_EQUAL(n1.second.Next(), nullptr);\n+    BOOST_CHECK_EQUAL(head.second.Next(), &n1);\n+\n+    // Check that adding FRESH flag on new node inserts it after head\n+    n2.second.AddFlags(CCoinsCacheEntry::FRESH, n2, head);\n+    BOOST_CHECK_EQUAL(n2.second.GetFlags(), CCoinsCacheEntry::FRESH);\n+    BOOST_CHECK_EQUAL(n2.second.Next(), &n1);\n+    BOOST_CHECK_EQUAL(head.second.Next(), &n2);\n+\n+    // Check that adding 0 flag has no effect, and doesn't change position\n+    n1.second.AddFlags(0, n1, head);\n+    BOOST_CHECK_EQUAL(n1.second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+    BOOST_CHECK_EQUAL(n1.second.Next(), nullptr);\n+    BOOST_CHECK_EQUAL(head.second.Next(), &n2);\n+    BOOST_CHECK_EQUAL(n2.second.Next(), &n1);\n+\n+    // Check that we can add extra flags, but they don't change our position\n+    n1.second.AddFlags(CCoinsCacheEntry::FRESH, n1, head);\n+    BOOST_CHECK_EQUAL(n1.second.GetFlags(), CCoinsCacheEntry::DIRTY | CCoinsCacheEntry::FRESH);\n+    BOOST_CHECK_EQUAL(n1.second.Next(), nullptr);\n+    BOOST_CHECK_EQUAL(head.second.Next(), &n2);\n+    BOOST_CHECK_EQUAL(n2.second.Next(), &n1);\n+\n+    // Check that we can clear flags then re-add them\n+    n1.second.ClearFlags();\n+    BOOST_CHECK_EQUAL(n1.second.GetFlags(), 0);\n+    BOOST_CHECK_EQUAL(n2.second.Next(), nullptr);\n+\n+    // Check that we calling `ClearFlags` with 0 flags has no effect",
      "path": "src/test/coinscachepair_tests.cpp",
      "position": null,
      "original_position": 168,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "6508bdfe437100a10be3730cefdb26efa5b5ad37",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit:\r\n```suggestion\r\n    // Check that calling `ClearFlags` with 0 flags has no effect\r\n```",
      "created_at": "2024-06-28T09:26:33Z",
      "updated_at": "2024-06-28T15:07:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1658417894",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1658417894"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 168,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1658694832",
      "pull_request_review_id": 2138727793,
      "id": 1658694832,
      "node_id": "PRRC_kwDOABII585i3ayw",
      "diff_hunk": "@@ -130,6 +157,56 @@ struct CCoinsCacheEntry\n     CCoinsCacheEntry() : flags(0) {}\n     explicit CCoinsCacheEntry(Coin&& coin_) : coin(std::move(coin_)), flags(0) {}\n     CCoinsCacheEntry(Coin&& coin_, unsigned char flag) : coin(std::move(coin_)), flags(flag) {}\n+    ~CCoinsCacheEntry()\n+    {\n+        // We must always clear the flags when destroying this to remove it from\n+        // the flagged linked list\n+        ClearFlags();\n+    }\n+\n+    //! Adding a flag also requires a self reference to the pair that contains\n+    //! this entry in the CCoinsCache map and a reference to the head of the\n+    //! flagged pair linked list.\n+    inline void AddFlags(uint8_t flags, CoinsCachePair& self, CoinsCachePair& head)\n+    {\n+        if (flags == 0) return;\n+        if (m_flags != 0) {\n+            m_flags |= flags;\n+            return;\n+        }\n+        m_prev = &head;\n+        m_next = head.second.m_next;\n+        head.second.m_next = &self;\n+        if (m_next != nullptr) {\n+            m_next->second.m_prev = &self;\n+        }\n+        m_flags = flags;\n+    }\n+\n+    inline void ClearFlags()\n+    {\n+        if (m_flags == 0) return;\n+        m_prev->second.m_next = m_next;\n+        if (m_next != nullptr) {\n+            m_next->second.m_prev = m_prev;\n+        }\n+        m_prev = nullptr;\n+        m_next = nullptr;\n+        m_flags = 0;\n+    }\n+\n+    inline uint8_t GetFlags() const { return m_flags; }\n+\n+    //! Get the next entry in the flagged linked list, optionally removing the\n+    //! current entry and clearing the flags.\n+    inline CoinsCachePair* Next(bool clear_flags = false)",
      "path": "src/coins.h",
      "position": null,
      "original_position": 87,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "0a2bc92b0c642ae72a10f687e0758c59c8ffd79c",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not yet sure why iteration is tied to mutation here",
      "created_at": "2024-06-28T12:49:09Z",
      "updated_at": "2024-06-28T15:08:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1658694832",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1658694832"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 183,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1658743023",
      "pull_request_review_id": 2138727793,
      "id": 1658743023,
      "node_id": "PRRC_kwDOABII585i3mjv",
      "diff_hunk": "@@ -130,6 +157,56 @@ struct CCoinsCacheEntry\n     CCoinsCacheEntry() : flags(0) {}\n     explicit CCoinsCacheEntry(Coin&& coin_) : coin(std::move(coin_)), flags(0) {}\n     CCoinsCacheEntry(Coin&& coin_, unsigned char flag) : coin(std::move(coin_)), flags(flag) {}\n+    ~CCoinsCacheEntry()\n+    {\n+        // We must always clear the flags when destroying this to remove it from\n+        // the flagged linked list\n+        ClearFlags();\n+    }\n+\n+    //! Adding a flag also requires a self reference to the pair that contains\n+    //! this entry in the CCoinsCache map and a reference to the head of the\n+    //! flagged pair linked list.\n+    inline void AddFlags(uint8_t flags, CoinsCachePair& self, CoinsCachePair& head)",
      "path": "src/coins.h",
      "position": null,
      "original_position": 55,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "0a2bc92b0c642ae72a10f687e0758c59c8ffd79c",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I find it quite confusing that `AddFlags` modifies the linked list as well (vs `GetFlags` only returning the flags, of course). Could make sense to split it to multiple methods or add the side-effect to the name",
      "created_at": "2024-06-28T13:26:54Z",
      "updated_at": "2024-06-28T15:07:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1658743023",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1658743023"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 157,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1658765626",
      "pull_request_review_id": 2138727793,
      "id": 1658765626,
      "node_id": "PRRC_kwDOABII585i3sE6",
      "diff_hunk": "@@ -0,0 +1,186 @@\n+// Copyright (c) 2024-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <coins.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <list>\n+\n+BOOST_AUTO_TEST_SUITE(coinscachepair_tests)\n+\n+static constexpr auto NUM_NODES{4};\n+\n+std::list<CoinsCachePair> CreatePairs(CoinsCachePair& head)\n+{\n+    std::list<CoinsCachePair> nodes;\n+    for (auto i{0}; i < NUM_NODES; ++i) {\n+        nodes.emplace_front();\n+\n+        auto node{nodes.begin()};\n+        node->second.AddFlags(CCoinsCacheEntry::DIRTY, *node, head);\n+\n+        BOOST_CHECK_EQUAL(node->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+        BOOST_CHECK_EQUAL(head.second.Next(), &(*node));\n+\n+        if (i > 0) {\n+            BOOST_CHECK_EQUAL(&(*std::next(node)), node->second.Next());\n+        } else {\n+            BOOST_CHECK_EQUAL(nullptr, node->second.Next());\n+        }\n+    }\n+    return nodes;\n+}\n+\n+BOOST_AUTO_TEST_CASE(linked_list_iteration)\n+{\n+    CoinsCachePair head;\n+    auto nodes{CreatePairs(head)};\n+\n+    // Check iterating through pairs is identical to iterating through a list\n+    auto lit{nodes.begin()};\n+    for (auto it{head.second.Next()}; it != nullptr; it = it->second.Next(/*clear_flags=*/false), ++lit) {",
      "path": "src/test/coinscachepair_tests.cpp",
      "position": null,
      "original_position": 43,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "6508bdfe437100a10be3730cefdb26efa5b5ad37",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Since iteration could misbehave severely and this would pass (e.g. if `Next()` would return `nullptr` we wouldn't even enter the loop), it could make more sense to iterate over the target nodes instead, something like:\r\n```C++\r\n    auto node{head.second.Next()};\r\n    for (const auto& expected : nodes) {\r\n        BOOST_CHECK_EQUAL(&expected, node);\r\n        node = node->second.Next();\r\n    }\r\n    BOOST_CHECK_EQUAL(nullptr, node);\r\n```\r\nor\r\n```C++\r\n    auto node{&head};\r\n    for (const auto& expected : nodes) {\r\n        node = node->second.Next();\r\n        BOOST_CHECK_EQUAL(&expected, node);\r\n    }\r\n    BOOST_CHECK_EQUAL(node->second.Next(), nullptr);\r\n```",
      "created_at": "2024-06-28T13:38:27Z",
      "updated_at": "2024-06-28T16:01:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1658765626",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1658765626"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1658780016",
      "pull_request_review_id": 2138727793,
      "id": 1658780016,
      "node_id": "PRRC_kwDOABII585i3vlw",
      "diff_hunk": "@@ -0,0 +1,186 @@\n+// Copyright (c) 2024-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <coins.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <list>\n+\n+BOOST_AUTO_TEST_SUITE(coinscachepair_tests)\n+\n+static constexpr auto NUM_NODES{4};\n+\n+std::list<CoinsCachePair> CreatePairs(CoinsCachePair& head)",
      "path": "src/test/coinscachepair_tests.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "6508bdfe437100a10be3730cefdb26efa5b5ad37",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "shouldn't we construct this via production code somehow?\r\nOtherwise we're just testing test code...",
      "created_at": "2024-06-28T13:45:49Z",
      "updated_at": "2024-06-28T15:07:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1658780016",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1658780016"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 15,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1658810375",
      "pull_request_review_id": 2138727793,
      "id": 1658810375,
      "node_id": "PRRC_kwDOABII585i33AH",
      "diff_hunk": "@@ -0,0 +1,186 @@\n+// Copyright (c) 2024-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <coins.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <list>\n+\n+BOOST_AUTO_TEST_SUITE(coinscachepair_tests)\n+\n+static constexpr auto NUM_NODES{4};\n+\n+std::list<CoinsCachePair> CreatePairs(CoinsCachePair& head)\n+{\n+    std::list<CoinsCachePair> nodes;\n+    for (auto i{0}; i < NUM_NODES; ++i) {\n+        nodes.emplace_front();\n+\n+        auto node{nodes.begin()};\n+        node->second.AddFlags(CCoinsCacheEntry::DIRTY, *node, head);\n+\n+        BOOST_CHECK_EQUAL(node->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+        BOOST_CHECK_EQUAL(head.second.Next(), &(*node));\n+\n+        if (i > 0) {\n+            BOOST_CHECK_EQUAL(&(*std::next(node)), node->second.Next());\n+        } else {\n+            BOOST_CHECK_EQUAL(nullptr, node->second.Next());\n+        }\n+    }\n+    return nodes;\n+}\n+\n+BOOST_AUTO_TEST_CASE(linked_list_iteration)\n+{\n+    CoinsCachePair head;\n+    auto nodes{CreatePairs(head)};\n+\n+    // Check iterating through pairs is identical to iterating through a list\n+    auto lit{nodes.begin()};\n+    for (auto it{head.second.Next()}; it != nullptr; it = it->second.Next(/*clear_flags=*/false), ++lit) {\n+        BOOST_CHECK_EQUAL(&(*lit), it);\n+    }\n+\n+    // Check iterating through pairs is identical to iterating through a list\n+    // Clear the flags during iteration\n+    lit = nodes.begin();\n+    for (auto it{head.second.Next()}; it != nullptr; it = it->second.Next(/*clear_flags=*/true), ++lit) {\n+        BOOST_CHECK_EQUAL(&(*lit), it);\n+    }\n+    // Check that head is empty\n+    BOOST_CHECK_EQUAL(head.second.Next(), nullptr);\n+\n+    // Delete the nodes from the list to make sure there are no dangling pointers\n+    for (auto it{nodes.begin()}; it != nodes.end(); it = nodes.erase(it)) {\n+        BOOST_CHECK_EQUAL(it->second.GetFlags(), 0);\n+        BOOST_CHECK_EQUAL(it->second.Next(), nullptr);\n+    }\n+}\n+\n+BOOST_AUTO_TEST_CASE(linked_list_iterate_erase)",
      "path": "src/test/coinscachepair_tests.cpp",
      "position": 67,
      "original_position": 63,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "6508bdfe437100a10be3730cefdb26efa5b5ad37",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm not exactly sure what this test is checking, that the doubly linked list is unaffected by the std::list's modification?",
      "created_at": "2024-06-28T14:03:37Z",
      "updated_at": "2024-06-28T16:43:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1658810375",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1658810375"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 67,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1658824573",
      "pull_request_review_id": 2138727793,
      "id": 1658824573,
      "node_id": "PRRC_kwDOABII585i36d9",
      "diff_hunk": "@@ -0,0 +1,186 @@\n+// Copyright (c) 2024-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <coins.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <list>\n+\n+BOOST_AUTO_TEST_SUITE(coinscachepair_tests)\n+\n+static constexpr auto NUM_NODES{4};\n+\n+std::list<CoinsCachePair> CreatePairs(CoinsCachePair& head)\n+{\n+    std::list<CoinsCachePair> nodes;\n+    for (auto i{0}; i < NUM_NODES; ++i) {\n+        nodes.emplace_front();\n+\n+        auto node{nodes.begin()};\n+        node->second.AddFlags(CCoinsCacheEntry::DIRTY, *node, head);\n+\n+        BOOST_CHECK_EQUAL(node->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+        BOOST_CHECK_EQUAL(head.second.Next(), &(*node));\n+\n+        if (i > 0) {\n+            BOOST_CHECK_EQUAL(&(*std::next(node)), node->second.Next());\n+        } else {\n+            BOOST_CHECK_EQUAL(nullptr, node->second.Next());\n+        }\n+    }\n+    return nodes;\n+}\n+\n+BOOST_AUTO_TEST_CASE(linked_list_iteration)\n+{\n+    CoinsCachePair head;\n+    auto nodes{CreatePairs(head)};\n+\n+    // Check iterating through pairs is identical to iterating through a list\n+    auto lit{nodes.begin()};\n+    for (auto it{head.second.Next()}; it != nullptr; it = it->second.Next(/*clear_flags=*/false), ++lit) {\n+        BOOST_CHECK_EQUAL(&(*lit), it);\n+    }\n+\n+    // Check iterating through pairs is identical to iterating through a list\n+    // Clear the flags during iteration\n+    lit = nodes.begin();\n+    for (auto it{head.second.Next()}; it != nullptr; it = it->second.Next(/*clear_flags=*/true), ++lit) {\n+        BOOST_CHECK_EQUAL(&(*lit), it);\n+    }\n+    // Check that head is empty\n+    BOOST_CHECK_EQUAL(head.second.Next(), nullptr);\n+\n+    // Delete the nodes from the list to make sure there are no dangling pointers\n+    for (auto it{nodes.begin()}; it != nodes.end(); it = nodes.erase(it)) {\n+        BOOST_CHECK_EQUAL(it->second.GetFlags(), 0);\n+        BOOST_CHECK_EQUAL(it->second.Next(), nullptr);\n+    }\n+}\n+\n+BOOST_AUTO_TEST_CASE(linked_list_iterate_erase)\n+{\n+    CoinsCachePair head;\n+    auto nodes{CreatePairs(head)};\n+\n+    // Check iterating through pairs is identical to iterating through a list\n+    // Erase the nodes as we iterate through, but don't clear flags\n+    // The flags will be cleared by the CCoinsCacheEntry's destructor\n+    auto lit{nodes.begin()};\n+    for (auto it{head.second.Next()}; it != nullptr; it = it->second.Next(/*clear_flags=*/false), lit = nodes.erase(lit)) {\n+        BOOST_CHECK_EQUAL(&(*lit), it);\n+    }\n+    // Check that head is empty\n+    BOOST_CHECK_EQUAL(head.second.Next(), nullptr);\n+}\n+\n+BOOST_AUTO_TEST_CASE(linked_list_random_deletion)\n+{\n+    CoinsCachePair head;\n+    auto nodes{CreatePairs(head)};\n+\n+    // Create linked list head->n1->n2->n3->n4->nullptr\n+    auto n1{nodes.begin()};\n+    auto n2{std::next(n1)};\n+    auto n3{std::next(n2)};\n+    auto n4{std::next(n3)};\n+\n+    // Delete n2\n+    // head->n1->n3->n4->nullptr\n+    nodes.erase(n2);\n+    // Check that n1 now points to n3, and n3 still points to n4\n+    // Also check that flags were not altered\n+    BOOST_CHECK_EQUAL(n1->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+    BOOST_CHECK_EQUAL(n1->second.Next(), &(*n3));\n+    BOOST_CHECK_EQUAL(n3->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+    BOOST_CHECK_EQUAL(n3->second.Next(), &(*n4));\n+\n+    // Delete n1\n+    // head->n3->n4->nullptr\n+    nodes.erase(n1);\n+    // Check that head now points to n3, and n3 still points to n4\n+    // Also check that flags were not altered\n+    BOOST_CHECK_EQUAL(n3->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+    BOOST_CHECK_EQUAL(head.second.Next(), &(*n3));\n+    BOOST_CHECK_EQUAL(n3->second.Next(), &(*n4));\n+\n+    // Delete n4\n+    // head->n3->nullptr\n+    nodes.erase(n4);\n+    // Check that head still points to n3, and n3 points to nullptr\n+    // Also check that flags were not altered\n+    BOOST_CHECK_EQUAL(n3->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+    BOOST_CHECK_EQUAL(head.second.Next(), &(*n3));\n+    BOOST_CHECK_EQUAL(n3->second.Next(), nullptr);\n+\n+    // Delete n3\n+    // head->nullptr\n+    nodes.erase(n3);",
      "path": "src/test/coinscachepair_tests.cpp",
      "position": 127,
      "original_position": 120,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "6508bdfe437100a10be3730cefdb26efa5b5ad37",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "is this here just for completeness' sake? Or how would a list operation affect the head node's behavior?",
      "created_at": "2024-06-28T14:13:00Z",
      "updated_at": "2024-06-28T15:07:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1658824573",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1658824573"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 127,
      "original_line": 127,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1658828407",
      "pull_request_review_id": 2138727793,
      "id": 1658828407,
      "node_id": "PRRC_kwDOABII585i37Z3",
      "diff_hunk": "@@ -0,0 +1,186 @@\n+// Copyright (c) 2024-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <coins.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <list>\n+\n+BOOST_AUTO_TEST_SUITE(coinscachepair_tests)\n+\n+static constexpr auto NUM_NODES{4};\n+\n+std::list<CoinsCachePair> CreatePairs(CoinsCachePair& head)\n+{\n+    std::list<CoinsCachePair> nodes;\n+    for (auto i{0}; i < NUM_NODES; ++i) {\n+        nodes.emplace_front();\n+\n+        auto node{nodes.begin()};\n+        node->second.AddFlags(CCoinsCacheEntry::DIRTY, *node, head);\n+\n+        BOOST_CHECK_EQUAL(node->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+        BOOST_CHECK_EQUAL(head.second.Next(), &(*node));",
      "path": "src/test/coinscachepair_tests.cpp",
      "position": null,
      "original_position": 25,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "6508bdfe437100a10be3730cefdb26efa5b5ad37",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "we should validate the `m_prev` as well here",
      "created_at": "2024-06-28T14:15:39Z",
      "updated_at": "2024-06-28T15:07:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1658828407",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1658828407"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 25,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1658879134",
      "pull_request_review_id": 2138727793,
      "id": 1658879134,
      "node_id": "PRRC_kwDOABII585i4Hye",
      "diff_hunk": "@@ -130,6 +157,56 @@ struct CCoinsCacheEntry\n     CCoinsCacheEntry() : flags(0) {}\n     explicit CCoinsCacheEntry(Coin&& coin_) : coin(std::move(coin_)), flags(0) {}\n     CCoinsCacheEntry(Coin&& coin_, unsigned char flag) : coin(std::move(coin_)), flags(flag) {}\n+    ~CCoinsCacheEntry()\n+    {\n+        // We must always clear the flags when destroying this to remove it from\n+        // the flagged linked list\n+        ClearFlags();\n+    }\n+\n+    //! Adding a flag also requires a self reference to the pair that contains\n+    //! this entry in the CCoinsCache map and a reference to the head of the\n+    //! flagged pair linked list.\n+    inline void AddFlags(uint8_t flags, CoinsCachePair& self, CoinsCachePair& head)\n+    {\n+        if (flags == 0) return;\n+        if (m_flags != 0) {\n+            m_flags |= flags;",
      "path": "src/coins.h",
      "position": null,
      "original_position": 59,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "0a2bc92b0c642ae72a10f687e0758c59c8ffd79c",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I find it confusing that `m_flags` is set multiple times (suggestion below)",
      "created_at": "2024-06-28T14:54:19Z",
      "updated_at": "2024-06-28T15:07:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1658879134",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1658879134"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 174,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1658888841",
      "pull_request_review_id": 2138727793,
      "id": 1658888841,
      "node_id": "PRRC_kwDOABII585i4KKJ",
      "diff_hunk": "@@ -130,6 +157,56 @@ struct CCoinsCacheEntry\n     CCoinsCacheEntry() : flags(0) {}\n     explicit CCoinsCacheEntry(Coin&& coin_) : coin(std::move(coin_)), flags(0) {}\n     CCoinsCacheEntry(Coin&& coin_, unsigned char flag) : coin(std::move(coin_)), flags(flag) {}\n+    ~CCoinsCacheEntry()\n+    {\n+        // We must always clear the flags when destroying this to remove it from\n+        // the flagged linked list\n+        ClearFlags();\n+    }\n+\n+    //! Adding a flag also requires a self reference to the pair that contains\n+    //! this entry in the CCoinsCache map and a reference to the head of the\n+    //! flagged pair linked list.\n+    inline void AddFlags(uint8_t flags, CoinsCachePair& self, CoinsCachePair& head)\n+    {\n+        if (flags == 0) return;\n+        if (m_flags != 0) {\n+            m_flags |= flags;\n+            return;\n+        }\n+        m_prev = &head;\n+        m_next = head.second.m_next;\n+        head.second.m_next = &self;\n+        if (m_next != nullptr) {",
      "path": "src/coins.h",
      "position": null,
      "original_position": 65,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "0a2bc92b0c642ae72a10f687e0758c59c8ffd79c",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "we could move the `m_next` setter closer to the check, something like:\r\n```C++\r\n    inline void AddFlags(uint8_t flags, CoinsCachePair& self, CoinsCachePair& head)\r\n    {\r\n        if (!m_flags && flags) {\r\n            m_prev = &head;\r\n            m_next = head.second.m_next;\r\n            if (m_next) m_next->second.m_prev = &self;\r\n            head.second.m_next = &self;\r\n        }\r\n        m_flags |= flags;\r\n    }\r\n```",
      "created_at": "2024-06-28T15:02:00Z",
      "updated_at": "2024-06-28T15:45:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1658888841",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1658888841"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 180,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1658892949",
      "pull_request_review_id": 2138727793,
      "id": 1658892949,
      "node_id": "PRRC_kwDOABII585i4LKV",
      "diff_hunk": "@@ -130,6 +157,56 @@ struct CCoinsCacheEntry\n     CCoinsCacheEntry() : flags(0) {}\n     explicit CCoinsCacheEntry(Coin&& coin_) : coin(std::move(coin_)), flags(0) {}\n     CCoinsCacheEntry(Coin&& coin_, unsigned char flag) : coin(std::move(coin_)), flags(flag) {}\n+    ~CCoinsCacheEntry()\n+    {\n+        // We must always clear the flags when destroying this to remove it from\n+        // the flagged linked list\n+        ClearFlags();\n+    }\n+\n+    //! Adding a flag also requires a self reference to the pair that contains\n+    //! this entry in the CCoinsCache map and a reference to the head of the\n+    //! flagged pair linked list.\n+    inline void AddFlags(uint8_t flags, CoinsCachePair& self, CoinsCachePair& head)\n+    {\n+        if (flags == 0) return;\n+        if (m_flags != 0) {\n+            m_flags |= flags;\n+            return;\n+        }\n+        m_prev = &head;\n+        m_next = head.second.m_next;\n+        head.second.m_next = &self;\n+        if (m_next != nullptr) {\n+            m_next->second.m_prev = &self;\n+        }\n+        m_flags = flags;\n+    }\n+\n+    inline void ClearFlags()\n+    {\n+        if (m_flags == 0) return;\n+        m_prev->second.m_next = m_next;\n+        if (m_next != nullptr) {\n+            m_next->second.m_prev = m_prev;\n+        }\n+        m_prev = nullptr;\n+        m_next = nullptr;\n+        m_flags = 0;",
      "path": "src/coins.h",
      "position": 75,
      "original_position": 80,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "0a2bc92b0c642ae72a10f687e0758c59c8ffd79c",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "we could apply the same concept here to separate the constants from the condition (i.e. flags are always 0 after this call):\r\n```C++\r\n    inline void ClearFlags()\r\n    {\r\n        if (m_flags) {\r\n            if (m_next) m_next->second.m_prev = m_prev;\r\n            m_prev->second.m_next = m_next;\r\n            m_prev = m_next = nullptr;\r\n        }\r\n        m_flags = 0;\r\n    }\r\n```",
      "created_at": "2024-06-28T15:05:34Z",
      "updated_at": "2024-06-28T15:07:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1658892949",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1658892949"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 181,
      "original_line": 181,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1658924696",
      "pull_request_review_id": 2148325051,
      "id": 1658924696,
      "node_id": "PRRC_kwDOABII585i4S6Y",
      "diff_hunk": "@@ -103,6 +106,30 @@ class Coin\n  */\n struct CCoinsCacheEntry\n {\n+private:\n+    /**\n+     * These are used to create a doubly linked list of flagged entries.\n+     * They are set in AddFlags and unset in ClearFlags.\n+     * A flagged entry is any entry that is either DIRTY, FRESH, or both.\n+     *\n+     * DIRTY entries are tracked so that only modified entries can be passed to\n+     * the parent cache to do a batch write. This is a performance optimization\n+     * compared to giving all entries in the cache to the parent and having the\n+     * parent scan for only modified entries.\n+     *\n+     * FRESH entries are tracked because a FRESH-but-not-DIRTY entry can only be\n+     * a spent coin that exists in the parent cache. When performing a batch",
      "path": "src/coins.h",
      "position": null,
      "original_position": 26,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "0a2bc92b0c642ae72a10f687e0758c59c8ffd79c",
      "in_reply_to_id": 1655477509,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes, I thought some more and don't find a great way to simplify the logic. I think it would be enough to remove / amend the comment, maybe mentioning instead that FRESH-but-not-DIRTY coins are not expected to occur but would be handled well if they did.\r\n\r\n> replace the single FRESH-but-not-DIRTY check \r\n\r\nNot sure if that's the \"check\" you mean, but replacing [this](https://github.com/bitcoin/bitcoin/blob/b27afb7fb774809c9c075d56e44657e0b607a00c/src/coins.cpp#L51-L55) with an assertion was essentially what #18746 did in its latest version. Since that PR was mildly controversial (I think mostly because it originally had the spin of \"These coins may be unnecessarily added today; don't add them anymore\" instead of \"We already don't add them. Remove unreachable code\") I think the question of adding an assert should be separated from this PR.",
      "created_at": "2024-06-28T15:31:57Z",
      "updated_at": "2024-06-28T15:31:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1658924696",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1658924696"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 121,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1658985403",
      "pull_request_review_id": 2148425344,
      "id": 1658985403,
      "node_id": "PRRC_kwDOABII585i4hu7",
      "diff_hunk": "@@ -12,7 +12,7 @@\n bool CCoinsView::GetCoin(const COutPoint &outpoint, Coin &coin) const { return false; }\n uint256 CCoinsView::GetBestBlock() const { return uint256(); }\n std::vector<uint256> CCoinsView::GetHeadBlocks() const { return std::vector<uint256>(); }\n-bool CCoinsView::BatchWrite(CCoinsMap &mapCoins, const uint256 &hashBlock, bool erase) { return false; }\n+bool CCoinsView::BatchWrite(CoinsCachePair *pairs, const uint256 &hashBlock, bool will_erase) { return false; }",
      "path": "src/coins.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "a6324db9c6ae1b71b9687923a516a8adc01b7e1a",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "doing refactoring and logic changes in the same commit makes reviewing slightly harder - could you extract all non-critical changes in a separate commit so that we can concentrate on high-risk code more than on stylistic changes (which are important, but shouldn't distract us)",
      "created_at": "2024-06-28T16:21:57Z",
      "updated_at": "2024-06-28T16:37:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1658985403",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1658985403"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 15,
      "original_line": 15,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659000088",
      "pull_request_review_id": 2148425344,
      "id": 1659000088,
      "node_id": "PRRC_kwDOABII585i4lUY",
      "diff_hunk": "@@ -326,8 +328,8 @@ void CCoinsViewCache::SanityCheck() const\n     size_t recomputed_usage = 0;\n     for (const auto& [_, entry] : cacheCoins) {\n         unsigned attr = 0;\n-        if (entry.flags & CCoinsCacheEntry::DIRTY) attr |= 1;\n-        if (entry.flags & CCoinsCacheEntry::FRESH) attr |= 2;\n+        if (entry.GetFlags() & CCoinsCacheEntry::DIRTY) attr |= 1;\n+        if (entry.GetFlags() & CCoinsCacheEntry::FRESH) attr |= 2;",
      "path": "src/coins.cpp",
      "position": null,
      "original_position": 226,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "a6324db9c6ae1b71b9687923a516a8adc01b7e1a",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n        auto attr = entry.GetFlags();\r\n```\r\n\r\n(or just remove the assert, doesn't make a lot of sense to me)",
      "created_at": "2024-06-28T16:30:39Z",
      "updated_at": "2024-06-28T16:37:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1659000088",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659000088"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": 330,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 332,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659005029",
      "pull_request_review_id": 2148425344,
      "id": 1659005029,
      "node_id": "PRRC_kwDOABII585i4mhl",
      "diff_hunk": "@@ -55,10 +55,10 @@ class CCoinsViewTest : public CCoinsView\n \n     uint256 GetBestBlock() const override { return hashBestBlock_; }\n \n-    bool BatchWrite(CCoinsMap& mapCoins, const uint256& hashBlock, bool erase = true) override\n+    bool BatchWrite(CoinsCachePair* pairs, const uint256& hashBlock, bool will_erase = true) override\n     {\n-        for (CCoinsMap::iterator it = mapCoins.begin(); it != mapCoins.end(); it = erase ? mapCoins.erase(it) : std::next(it)) {\n-            if (it->second.flags & CCoinsCacheEntry::DIRTY) {\n+        for (auto it{pairs}; it != nullptr; it = it->second.Next(will_erase || !it->second.coin.IsSpent())) {\n+            if (it->second.GetFlags() & CCoinsCacheEntry::DIRTY) {",
      "path": "src/test/coins_tests.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "a6324db9c6ae1b71b9687923a516a8adc01b7e1a",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "this `it->second.GetFlags() & CCoinsCacheEntry::DIRTY` appears quite often, maybe it would make sense to extract it to `it->second.IsDirty()` (and `it->second.IsFresh()`, of course)",
      "created_at": "2024-06-28T16:34:21Z",
      "updated_at": "2024-06-28T16:37:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1659005029",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659005029"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 61,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659006186",
      "pull_request_review_id": 2148425344,
      "id": 1659006186,
      "node_id": "PRRC_kwDOABII585i4mzq",
      "diff_hunk": "@@ -124,7 +124,7 @@ bool CCoinsViewDB::BatchWrite(CCoinsMap &mapCoins, const uint256 &hashBlock, boo\n             changed++;\n         }\n         count++;\n-        it = erase ? mapCoins.erase(it) : std::next(it);\n+        it = it->second.Next(will_erase || !it->second.coin.IsSpent());",
      "path": "src/txdb.cpp",
      "position": null,
      "original_position": 25,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "a6324db9c6ae1b71b9687923a516a8adc01b7e1a",
      "in_reply_to_id": 1657288151,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah, too many changes in one commit",
      "created_at": "2024-06-28T16:35:37Z",
      "updated_at": "2024-06-28T16:37:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1659006186",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659006186"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 127,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659023545",
      "pull_request_review_id": 2148488069,
      "id": 1659023545,
      "node_id": "PRRC_kwDOABII585i4rC5",
      "diff_hunk": "@@ -103,8 +106,31 @@ class Coin\n  */\n struct CCoinsCacheEntry\n {\n+private:\n+    /**\n+     * These are used to create a doubly linked list of flagged entries.\n+     * They are set in AddFlags and unset in ClearFlags.\n+     * A flagged entry is any entry that is either DIRTY, FRESH, or both.\n+     *\n+     * DIRTY entries are tracked so that only modified entries can be passed to\n+     * the parent cache to do a batch write. This is a performance optimization\n+     * compared to giving all entries in the cache to the parent and having the\n+     * parent scan for only modified entries.\n+     *\n+     * FRESH entries are tracked because a FRESH-but-not-DIRTY entry can only be\n+     * a spent coin that exists in the parent cache. When performing a batch\n+     * write but not clearing the cache (CCoinsViewCache::Sync), we must also\n+     * erase all spent entries. Since only DIRTY or FRESH entries can be spent,\n+     * we can track them in the linked list to erase them. This is a performance\n+     * optimization compared to scanning all cache entries to find any that are\n+     * spent-but-not-DIRTY.\n+     */\n+    CoinsCachePair* m_prev{nullptr};",
      "path": "src/coins.h",
      "position": null,
      "original_position": 33,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "6ed20408df85ed31cfb0ca7bc8da7b8140e1ef2f",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't fully understand why we need `m_prev` here, but have you investigated whether it's possible to get rid of it and rely on `m_next` only?\r\nSometimes we still have a reference to both (current and next, so we wouldn't need the next's prev), but I assume that wasn't always the case, right?",
      "created_at": "2024-06-28T16:50:53Z",
      "updated_at": "2024-06-28T16:55:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1659023545",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659023545"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 126,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659178102",
      "pull_request_review_id": 2148737002,
      "id": 1659178102,
      "node_id": "PRRC_kwDOABII585i5Qx2",
      "diff_hunk": "@@ -103,8 +106,31 @@ class Coin\n  */\n struct CCoinsCacheEntry\n {\n+private:\n+    /**\n+     * These are used to create a doubly linked list of flagged entries.\n+     * They are set in AddFlags and unset in ClearFlags.\n+     * A flagged entry is any entry that is either DIRTY, FRESH, or both.\n+     *\n+     * DIRTY entries are tracked so that only modified entries can be passed to\n+     * the parent cache to do a batch write. This is a performance optimization\n+     * compared to giving all entries in the cache to the parent and having the\n+     * parent scan for only modified entries.\n+     *\n+     * FRESH entries are tracked because a FRESH-but-not-DIRTY entry can only be\n+     * a spent coin that exists in the parent cache. When performing a batch\n+     * write but not clearing the cache (CCoinsViewCache::Sync), we must also\n+     * erase all spent entries. Since only DIRTY or FRESH entries can be spent,\n+     * we can track them in the linked list to erase them. This is a performance\n+     * optimization compared to scanning all cache entries to find any that are\n+     * spent-but-not-DIRTY.\n+     */\n+    CoinsCachePair* m_prev{nullptr};",
      "path": "src/coins.h",
      "position": null,
      "original_position": 33,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "6ed20408df85ed31cfb0ca7bc8da7b8140e1ef2f",
      "in_reply_to_id": 1659023545,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "With `m_next` we have constant time insertion at the head, which would be fine if we only added flagged entries and cleared them as we traverse them.\r\n\r\nHowever, we also need to delete entries in constant time if they are both `FRESH` and `DIRTY` and get spent. For this we need a doubly linked list.",
      "created_at": "2024-06-28T18:49:15Z",
      "updated_at": "2024-06-28T18:49:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1659178102",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659178102"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 126,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659182104",
      "pull_request_review_id": 2148743861,
      "id": 1659182104,
      "node_id": "PRRC_kwDOABII585i5RwY",
      "diff_hunk": "@@ -55,10 +55,10 @@ class CCoinsViewTest : public CCoinsView\n \n     uint256 GetBestBlock() const override { return hashBestBlock_; }\n \n-    bool BatchWrite(CCoinsMap& mapCoins, const uint256& hashBlock, bool erase = true) override\n+    bool BatchWrite(CoinsCachePair* pairs, const uint256& hashBlock, bool will_erase = true) override\n     {\n-        for (CCoinsMap::iterator it = mapCoins.begin(); it != mapCoins.end(); it = erase ? mapCoins.erase(it) : std::next(it)) {\n-            if (it->second.flags & CCoinsCacheEntry::DIRTY) {\n+        for (auto it{pairs}; it != nullptr; it = it->second.Next(will_erase || !it->second.coin.IsSpent())) {\n+            if (it->second.GetFlags() & CCoinsCacheEntry::DIRTY) {",
      "path": "src/test/coins_tests.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "a6324db9c6ae1b71b9687923a516a8adc01b7e1a",
      "in_reply_to_id": 1659005029,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think this makes the diff easier to follow, since in git it highlights only the `flags` and `GetFlags()` in the line.",
      "created_at": "2024-06-28T18:53:32Z",
      "updated_at": "2024-06-28T18:53:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1659182104",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659182104"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 61,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659186375",
      "pull_request_review_id": 2148750685,
      "id": 1659186375,
      "node_id": "PRRC_kwDOABII585i5SzH",
      "diff_hunk": "@@ -130,6 +157,56 @@ struct CCoinsCacheEntry\n     CCoinsCacheEntry() : flags(0) {}\n     explicit CCoinsCacheEntry(Coin&& coin_) : coin(std::move(coin_)), flags(0) {}\n     CCoinsCacheEntry(Coin&& coin_, unsigned char flag) : coin(std::move(coin_)), flags(flag) {}\n+    ~CCoinsCacheEntry()\n+    {\n+        // We must always clear the flags when destroying this to remove it from\n+        // the flagged linked list\n+        ClearFlags();\n+    }\n+\n+    //! Adding a flag also requires a self reference to the pair that contains\n+    //! this entry in the CCoinsCache map and a reference to the head of the\n+    //! flagged pair linked list.\n+    inline void AddFlags(uint8_t flags, CoinsCachePair& self, CoinsCachePair& head)\n+    {\n+        if (flags == 0) return;\n+        if (m_flags != 0) {\n+            m_flags |= flags;\n+            return;\n+        }\n+        m_prev = &head;\n+        m_next = head.second.m_next;\n+        head.second.m_next = &self;\n+        if (m_next != nullptr) {\n+            m_next->second.m_prev = &self;\n+        }\n+        m_flags = flags;\n+    }\n+\n+    inline void ClearFlags()\n+    {\n+        if (m_flags == 0) return;\n+        m_prev->second.m_next = m_next;\n+        if (m_next != nullptr) {\n+            m_next->second.m_prev = m_prev;\n+        }\n+        m_prev = nullptr;\n+        m_next = nullptr;\n+        m_flags = 0;\n+    }\n+\n+    inline uint8_t GetFlags() const { return m_flags; }\n+\n+    //! Get the next entry in the flagged linked list, optionally removing the\n+    //! current entry and clearing the flags.\n+    inline CoinsCachePair* Next(bool clear_flags = false)",
      "path": "src/coins.h",
      "position": null,
      "original_position": 87,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "0a2bc92b0c642ae72a10f687e0758c59c8ffd79c",
      "in_reply_to_id": 1658694832,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It's mostly convenience. Otherwise to clear flags while iterating we would have to bind `m_next` to another variable first, then call `ClearFlags` on the current pair, and then bind the the other variable holding the old `m_next` to the current pair variable.",
      "created_at": "2024-06-28T18:57:24Z",
      "updated_at": "2024-06-28T18:57:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1659186375",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659186375"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 183,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659190841",
      "pull_request_review_id": 2148757621,
      "id": 1659190841,
      "node_id": "PRRC_kwDOABII585i5T45",
      "diff_hunk": "@@ -130,6 +157,56 @@ struct CCoinsCacheEntry\n     CCoinsCacheEntry() : flags(0) {}\n     explicit CCoinsCacheEntry(Coin&& coin_) : coin(std::move(coin_)), flags(0) {}\n     CCoinsCacheEntry(Coin&& coin_, unsigned char flag) : coin(std::move(coin_)), flags(flag) {}\n+    ~CCoinsCacheEntry()\n+    {\n+        // We must always clear the flags when destroying this to remove it from\n+        // the flagged linked list\n+        ClearFlags();\n+    }\n+\n+    //! Adding a flag also requires a self reference to the pair that contains\n+    //! this entry in the CCoinsCache map and a reference to the head of the\n+    //! flagged pair linked list.\n+    inline void AddFlags(uint8_t flags, CoinsCachePair& self, CoinsCachePair& head)\n+    {\n+        if (flags == 0) return;\n+        if (m_flags != 0) {\n+            m_flags |= flags;\n+            return;\n+        }\n+        m_prev = &head;\n+        m_next = head.second.m_next;\n+        head.second.m_next = &self;\n+        if (m_next != nullptr) {\n+            m_next->second.m_prev = &self;\n+        }\n+        m_flags = flags;\n+    }\n+\n+    inline void ClearFlags()\n+    {\n+        if (m_flags == 0) return;\n+        m_prev->second.m_next = m_next;",
      "path": "src/coins.h",
      "position": null,
      "original_position": 74,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "0a2bc92b0c642ae72a10f687e0758c59c8ffd79c",
      "in_reply_to_id": 1658399777,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes, this code is single threaded so not possible to get past the previous line if `m_prev` is `null`.\r\nIt is possible for `m_prev` to point to a pair that has been freed if the linked list head is destroyed, which is why `cacheCoins` must always be destroyed before the linked list head.",
      "created_at": "2024-06-28T19:00:35Z",
      "updated_at": "2024-06-28T19:00:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1659190841",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659190841"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 189,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659205863",
      "pull_request_review_id": 2148780756,
      "id": 1659205863,
      "node_id": "PRRC_kwDOABII585i5Xjn",
      "diff_hunk": "@@ -55,10 +55,10 @@ class CCoinsViewTest : public CCoinsView\n \n     uint256 GetBestBlock() const override { return hashBestBlock_; }\n \n-    bool BatchWrite(CCoinsMap& mapCoins, const uint256& hashBlock, bool erase = true) override\n+    bool BatchWrite(CoinsCachePair* pairs, const uint256& hashBlock, bool will_erase = true) override\n     {\n-        for (CCoinsMap::iterator it = mapCoins.begin(); it != mapCoins.end(); it = erase ? mapCoins.erase(it) : std::next(it)) {\n-            if (it->second.flags & CCoinsCacheEntry::DIRTY) {\n+        for (auto it{pairs}; it != nullptr; it = it->second.Next(will_erase || !it->second.coin.IsSpent())) {\n+            if (it->second.GetFlags() & CCoinsCacheEntry::DIRTY) {",
      "path": "src/test/coins_tests.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "a6324db9c6ae1b71b9687923a516a8adc01b7e1a",
      "in_reply_to_id": 1659005029,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "if there was a separate commit doing only this, it would simplify the other important commits a lot",
      "created_at": "2024-06-28T19:12:32Z",
      "updated_at": "2024-06-28T19:12:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1659205863",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659205863"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 61,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659223824",
      "pull_request_review_id": 2148810822,
      "id": 1659223824,
      "node_id": "PRRC_kwDOABII585i5b8Q",
      "diff_hunk": "@@ -103,8 +106,31 @@ class Coin\n  */\n struct CCoinsCacheEntry\n {\n+private:\n+    /**\n+     * These are used to create a doubly linked list of flagged entries.\n+     * They are set in AddFlags and unset in ClearFlags.\n+     * A flagged entry is any entry that is either DIRTY, FRESH, or both.\n+     *\n+     * DIRTY entries are tracked so that only modified entries can be passed to\n+     * the parent cache to do a batch write. This is a performance optimization\n+     * compared to giving all entries in the cache to the parent and having the\n+     * parent scan for only modified entries.\n+     *\n+     * FRESH entries are tracked because a FRESH-but-not-DIRTY entry can only be\n+     * a spent coin that exists in the parent cache. When performing a batch\n+     * write but not clearing the cache (CCoinsViewCache::Sync), we must also\n+     * erase all spent entries. Since only DIRTY or FRESH entries can be spent,\n+     * we can track them in the linked list to erase them. This is a performance\n+     * optimization compared to scanning all cache entries to find any that are\n+     * spent-but-not-DIRTY.\n+     */\n+    CoinsCachePair* m_prev{nullptr};",
      "path": "src/coins.h",
      "position": null,
      "original_position": 33,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "6ed20408df85ed31cfb0ca7bc8da7b8140e1ef2f",
      "in_reply_to_id": 1659023545,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What prohibits us from accessing the previous ones in constant time during iteration (I haven't had the energy to delve into it properly yet)?",
      "created_at": "2024-06-28T19:25:58Z",
      "updated_at": "2024-06-28T19:25:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1659223824",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659223824"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 126,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659225286",
      "pull_request_review_id": 2148812718,
      "id": 1659225286,
      "node_id": "PRRC_kwDOABII585i5cTG",
      "diff_hunk": "@@ -130,6 +157,56 @@ struct CCoinsCacheEntry\n     CCoinsCacheEntry() : flags(0) {}\n     explicit CCoinsCacheEntry(Coin&& coin_) : coin(std::move(coin_)), flags(0) {}\n     CCoinsCacheEntry(Coin&& coin_, unsigned char flag) : coin(std::move(coin_)), flags(flag) {}\n+    ~CCoinsCacheEntry()\n+    {\n+        // We must always clear the flags when destroying this to remove it from\n+        // the flagged linked list\n+        ClearFlags();\n+    }\n+\n+    //! Adding a flag also requires a self reference to the pair that contains\n+    //! this entry in the CCoinsCache map and a reference to the head of the\n+    //! flagged pair linked list.\n+    inline void AddFlags(uint8_t flags, CoinsCachePair& self, CoinsCachePair& head)\n+    {\n+        if (flags == 0) return;\n+        if (m_flags != 0) {\n+            m_flags |= flags;\n+            return;\n+        }\n+        m_prev = &head;\n+        m_next = head.second.m_next;\n+        head.second.m_next = &self;\n+        if (m_next != nullptr) {\n+            m_next->second.m_prev = &self;\n+        }\n+        m_flags = flags;\n+    }\n+\n+    inline void ClearFlags()\n+    {\n+        if (m_flags == 0) return;\n+        m_prev->second.m_next = m_next;\n+        if (m_next != nullptr) {\n+            m_next->second.m_prev = m_prev;\n+        }\n+        m_prev = nullptr;\n+        m_next = nullptr;\n+        m_flags = 0;\n+    }\n+\n+    inline uint8_t GetFlags() const { return m_flags; }\n+\n+    //! Get the next entry in the flagged linked list, optionally removing the\n+    //! current entry and clearing the flags.\n+    inline CoinsCachePair* Next(bool clear_flags = false)",
      "path": "src/coins.h",
      "position": null,
      "original_position": 87,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "0a2bc92b0c642ae72a10f687e0758c59c8ffd79c",
      "in_reply_to_id": 1658694832,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can you find a way to separate the side-effects? I find this very confusing.",
      "created_at": "2024-06-28T19:27:13Z",
      "updated_at": "2024-06-28T19:27:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1659225286",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659225286"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 183,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659225694",
      "pull_request_review_id": 2148813234,
      "id": 1659225694,
      "node_id": "PRRC_kwDOABII585i5cZe",
      "diff_hunk": "@@ -130,6 +157,56 @@ struct CCoinsCacheEntry\n     CCoinsCacheEntry() : flags(0) {}\n     explicit CCoinsCacheEntry(Coin&& coin_) : coin(std::move(coin_)), flags(0) {}\n     CCoinsCacheEntry(Coin&& coin_, unsigned char flag) : coin(std::move(coin_)), flags(flag) {}\n+    ~CCoinsCacheEntry()\n+    {\n+        // We must always clear the flags when destroying this to remove it from\n+        // the flagged linked list\n+        ClearFlags();\n+    }\n+\n+    //! Adding a flag also requires a self reference to the pair that contains\n+    //! this entry in the CCoinsCache map and a reference to the head of the\n+    //! flagged pair linked list.\n+    inline void AddFlags(uint8_t flags, CoinsCachePair& self, CoinsCachePair& head)\n+    {\n+        if (flags == 0) return;\n+        if (m_flags != 0) {\n+            m_flags |= flags;\n+            return;\n+        }\n+        m_prev = &head;\n+        m_next = head.second.m_next;\n+        head.second.m_next = &self;\n+        if (m_next != nullptr) {\n+            m_next->second.m_prev = &self;\n+        }\n+        m_flags = flags;\n+    }\n+\n+    inline void ClearFlags()\n+    {\n+        if (m_flags == 0) return;\n+        m_prev->second.m_next = m_next;",
      "path": "src/coins.h",
      "position": null,
      "original_position": 74,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "0a2bc92b0c642ae72a10f687e0758c59c8ffd79c",
      "in_reply_to_id": 1658399777,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Got it, thanks",
      "created_at": "2024-06-28T19:27:32Z",
      "updated_at": "2024-06-28T19:27:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1659225694",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659225694"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 189,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659275459",
      "pull_request_review_id": 2148897653,
      "id": 1659275459,
      "node_id": "PRRC_kwDOABII585i5ojD",
      "diff_hunk": "@@ -103,8 +106,31 @@ class Coin\n  */\n struct CCoinsCacheEntry\n {\n+private:\n+    /**\n+     * These are used to create a doubly linked list of flagged entries.\n+     * They are set in AddFlags and unset in ClearFlags.\n+     * A flagged entry is any entry that is either DIRTY, FRESH, or both.\n+     *\n+     * DIRTY entries are tracked so that only modified entries can be passed to\n+     * the parent cache to do a batch write. This is a performance optimization\n+     * compared to giving all entries in the cache to the parent and having the\n+     * parent scan for only modified entries.\n+     *\n+     * FRESH entries are tracked because a FRESH-but-not-DIRTY entry can only be\n+     * a spent coin that exists in the parent cache. When performing a batch\n+     * write but not clearing the cache (CCoinsViewCache::Sync), we must also\n+     * erase all spent entries. Since only DIRTY or FRESH entries can be spent,\n+     * we can track them in the linked list to erase them. This is a performance\n+     * optimization compared to scanning all cache entries to find any that are\n+     * spent-but-not-DIRTY.\n+     */\n+    CoinsCachePair* m_prev{nullptr};",
      "path": "src/coins.h",
      "position": null,
      "original_position": 33,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "6ed20408df85ed31cfb0ca7bc8da7b8140e1ef2f",
      "in_reply_to_id": 1659023545,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> What prohibits us from accessing the previous ones in constant time during iteration\r\n\r\nNothing during iteration. But we need to delete entries randomly when a FRESH coin is spent, which is not during any iteration.",
      "created_at": "2024-06-28T20:16:21Z",
      "updated_at": "2024-06-28T20:16:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1659275459",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659275459"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 126,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659299969",
      "pull_request_review_id": 2148940116,
      "id": 1659299969,
      "node_id": "PRRC_kwDOABII585i5uiB",
      "diff_hunk": "@@ -130,6 +157,56 @@ struct CCoinsCacheEntry\n     CCoinsCacheEntry() : flags(0) {}\n     explicit CCoinsCacheEntry(Coin&& coin_) : coin(std::move(coin_)), flags(0) {}\n     CCoinsCacheEntry(Coin&& coin_, unsigned char flag) : coin(std::move(coin_)), flags(flag) {}\n+    ~CCoinsCacheEntry()\n+    {\n+        // We must always clear the flags when destroying this to remove it from\n+        // the flagged linked list",
      "path": "src/coins.h",
      "position": null,
      "original_position": 48,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "0a2bc92b0c642ae72a10f687e0758c59c8ffd79c",
      "in_reply_to_id": 1658394351,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is this really obvious though that we need to clear flags before destruction? Normally flags wouldn't affect destroying an object, but in this case they also tie the object to a linked list.",
      "created_at": "2024-06-28T20:39:47Z",
      "updated_at": "2024-06-28T20:39:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1659299969",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659299969"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": 162,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 163,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659304288",
      "pull_request_review_id": 2148947454,
      "id": 1659304288,
      "node_id": "PRRC_kwDOABII585i5vlg",
      "diff_hunk": "@@ -130,6 +157,56 @@ struct CCoinsCacheEntry\n     CCoinsCacheEntry() : flags(0) {}\n     explicit CCoinsCacheEntry(Coin&& coin_) : coin(std::move(coin_)), flags(0) {}\n     CCoinsCacheEntry(Coin&& coin_, unsigned char flag) : coin(std::move(coin_)), flags(flag) {}\n+    ~CCoinsCacheEntry()\n+    {\n+        // We must always clear the flags when destroying this to remove it from\n+        // the flagged linked list",
      "path": "src/coins.h",
      "position": null,
      "original_position": 48,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "0a2bc92b0c642ae72a10f687e0758c59c8ffd79c",
      "in_reply_to_id": 1658394351,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "No, but it's in a destructor, calling the `ClearFlags` method - I didn't seen what the comment added beyond what the code already explained well.\r\nIt could explain why you chose this style, or what alternatives you've considered, or something else that the code cannot, but this just seemed redundant to me.",
      "created_at": "2024-06-28T20:44:25Z",
      "updated_at": "2024-06-28T20:45:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1659304288",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659304288"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": 162,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 163,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659308223",
      "pull_request_review_id": 2148954909,
      "id": 1659308223,
      "node_id": "PRRC_kwDOABII585i5wi_",
      "diff_hunk": "@@ -108,10 +108,13 @@ void CCoinsViewCache::AddCoin(const COutPoint &outpoint, Coin&& coin, bool possi\n \n void CCoinsViewCache::EmplaceCoinInternalDANGER(COutPoint&& outpoint, Coin&& coin) {\n     cachedCoinsUsage += coin.DynamicMemoryUsage();\n-    cacheCoins.emplace(\n+    auto [it, inserted] = cacheCoins.emplace(",
      "path": "src/coins.cpp",
      "position": 45,
      "original_position": 45,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "6ed20408df85ed31cfb0ca7bc8da7b8140e1ef2f",
      "in_reply_to_id": 1652853326,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Sorry, can you elaborate on what benefit that would have here, and any possible downsides? I'm not 100% sure what all the differences are between the two methods, so preferred to stick to status quo.",
      "created_at": "2024-06-28T20:48:40Z",
      "updated_at": "2024-06-28T20:48:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1659308223",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659308223"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 111,
      "original_line": 111,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659322903",
      "pull_request_review_id": 2148980544,
      "id": 1659322903,
      "node_id": "PRRC_kwDOABII585i50IX",
      "diff_hunk": "@@ -108,10 +108,13 @@ void CCoinsViewCache::AddCoin(const COutPoint &outpoint, Coin&& coin, bool possi\n \n void CCoinsViewCache::EmplaceCoinInternalDANGER(COutPoint&& outpoint, Coin&& coin) {\n     cachedCoinsUsage += coin.DynamicMemoryUsage();\n-    cacheCoins.emplace(\n+    auto [it, inserted] = cacheCoins.emplace(",
      "path": "src/coins.cpp",
      "position": 45,
      "original_position": 45,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "6ed20408df85ed31cfb0ca7bc8da7b8140e1ef2f",
      "in_reply_to_id": 1652853326,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In that case stick to it and I'll add it in a separate PR once this is merged!",
      "created_at": "2024-06-28T21:01:26Z",
      "updated_at": "2024-06-28T21:01:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1659322903",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659322903"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 111,
      "original_line": 111,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659831027",
      "pull_request_review_id": 2149631400,
      "id": 1659831027,
      "node_id": "PRRC_kwDOABII585i7wLz",
      "diff_hunk": "@@ -0,0 +1,186 @@\n+// Copyright (c) 2024-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <coins.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <list>\n+\n+BOOST_AUTO_TEST_SUITE(coinscachepair_tests)\n+\n+static constexpr auto NUM_NODES{4};\n+\n+std::list<CoinsCachePair> CreatePairs(CoinsCachePair& head)\n+{\n+    std::list<CoinsCachePair> nodes;\n+    for (auto i{0}; i < NUM_NODES; ++i) {\n+        nodes.emplace_front();\n+\n+        auto node{nodes.begin()};\n+        node->second.AddFlags(CCoinsCacheEntry::DIRTY, *node, head);\n+\n+        BOOST_CHECK_EQUAL(node->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+        BOOST_CHECK_EQUAL(head.second.Next(), &(*node));",
      "path": "src/test/coinscachepair_tests.cpp",
      "position": null,
      "original_position": 25,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "6508bdfe437100a10be3730cefdb26efa5b5ad37",
      "in_reply_to_id": 1658828407,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "There's no accessor to `m_prev` though. This is checked below in the random deletion test.",
      "created_at": "2024-06-29T13:57:27Z",
      "updated_at": "2024-06-29T13:57:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1659831027",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659831027"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 25,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659831168",
      "pull_request_review_id": 2149633735,
      "id": 1659831168,
      "node_id": "PRRC_kwDOABII585i7wOA",
      "diff_hunk": "@@ -0,0 +1,186 @@\n+// Copyright (c) 2024-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <coins.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <list>\n+\n+BOOST_AUTO_TEST_SUITE(coinscachepair_tests)\n+\n+static constexpr auto NUM_NODES{4};\n+\n+std::list<CoinsCachePair> CreatePairs(CoinsCachePair& head)",
      "path": "src/test/coinscachepair_tests.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "6508bdfe437100a10be3730cefdb26efa5b5ad37",
      "in_reply_to_id": 1658780016,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hmm well the `AddFlags` function is in production code, so this is constructing the linked list via production code. The `std::list` we create is a test harness helper that we use to check that our linked list behaves the same.",
      "created_at": "2024-06-29T13:58:44Z",
      "updated_at": "2024-06-29T13:58:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1659831168",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659831168"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 15,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659835029",
      "pull_request_review_id": 2149637261,
      "id": 1659835029,
      "node_id": "PRRC_kwDOABII585i7xKV",
      "diff_hunk": "@@ -0,0 +1,186 @@\n+// Copyright (c) 2024-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <coins.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <list>\n+\n+BOOST_AUTO_TEST_SUITE(coinscachepair_tests)\n+\n+static constexpr auto NUM_NODES{4};\n+\n+std::list<CoinsCachePair> CreatePairs(CoinsCachePair& head)\n+{\n+    std::list<CoinsCachePair> nodes;\n+    for (auto i{0}; i < NUM_NODES; ++i) {\n+        nodes.emplace_front();\n+\n+        auto node{nodes.begin()};\n+        node->second.AddFlags(CCoinsCacheEntry::DIRTY, *node, head);\n+\n+        BOOST_CHECK_EQUAL(node->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+        BOOST_CHECK_EQUAL(head.second.Next(), &(*node));\n+\n+        if (i > 0) {\n+            BOOST_CHECK_EQUAL(&(*std::next(node)), node->second.Next());\n+        } else {\n+            BOOST_CHECK_EQUAL(nullptr, node->second.Next());\n+        }\n+    }\n+    return nodes;\n+}\n+\n+BOOST_AUTO_TEST_CASE(linked_list_iteration)\n+{\n+    CoinsCachePair head;\n+    auto nodes{CreatePairs(head)};\n+\n+    // Check iterating through pairs is identical to iterating through a list\n+    auto lit{nodes.begin()};\n+    for (auto it{head.second.Next()}; it != nullptr; it = it->second.Next(/*clear_flags=*/false), ++lit) {\n+        BOOST_CHECK_EQUAL(&(*lit), it);\n+    }\n+\n+    // Check iterating through pairs is identical to iterating through a list\n+    // Clear the flags during iteration\n+    lit = nodes.begin();\n+    for (auto it{head.second.Next()}; it != nullptr; it = it->second.Next(/*clear_flags=*/true), ++lit) {\n+        BOOST_CHECK_EQUAL(&(*lit), it);\n+    }\n+    // Check that head is empty\n+    BOOST_CHECK_EQUAL(head.second.Next(), nullptr);\n+\n+    // Delete the nodes from the list to make sure there are no dangling pointers\n+    for (auto it{nodes.begin()}; it != nodes.end(); it = nodes.erase(it)) {\n+        BOOST_CHECK_EQUAL(it->second.GetFlags(), 0);\n+        BOOST_CHECK_EQUAL(it->second.Next(), nullptr);\n+    }\n+}\n+\n+BOOST_AUTO_TEST_CASE(linked_list_iterate_erase)\n+{\n+    CoinsCachePair head;\n+    auto nodes{CreatePairs(head)};\n+\n+    // Check iterating through pairs is identical to iterating through a list\n+    // Erase the nodes as we iterate through, but don't clear flags\n+    // The flags will be cleared by the CCoinsCacheEntry's destructor\n+    auto lit{nodes.begin()};\n+    for (auto it{head.second.Next()}; it != nullptr; it = it->second.Next(/*clear_flags=*/false), lit = nodes.erase(lit)) {\n+        BOOST_CHECK_EQUAL(&(*lit), it);\n+    }\n+    // Check that head is empty\n+    BOOST_CHECK_EQUAL(head.second.Next(), nullptr);\n+}\n+\n+BOOST_AUTO_TEST_CASE(linked_list_random_deletion)\n+{\n+    CoinsCachePair head;\n+    auto nodes{CreatePairs(head)};\n+\n+    // Create linked list head->n1->n2->n3->n4->nullptr\n+    auto n1{nodes.begin()};\n+    auto n2{std::next(n1)};\n+    auto n3{std::next(n2)};\n+    auto n4{std::next(n3)};\n+\n+    // Delete n2\n+    // head->n1->n3->n4->nullptr\n+    nodes.erase(n2);\n+    // Check that n1 now points to n3, and n3 still points to n4\n+    // Also check that flags were not altered\n+    BOOST_CHECK_EQUAL(n1->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+    BOOST_CHECK_EQUAL(n1->second.Next(), &(*n3));\n+    BOOST_CHECK_EQUAL(n3->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+    BOOST_CHECK_EQUAL(n3->second.Next(), &(*n4));\n+\n+    // Delete n1\n+    // head->n3->n4->nullptr\n+    nodes.erase(n1);\n+    // Check that head now points to n3, and n3 still points to n4\n+    // Also check that flags were not altered\n+    BOOST_CHECK_EQUAL(n3->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+    BOOST_CHECK_EQUAL(head.second.Next(), &(*n3));\n+    BOOST_CHECK_EQUAL(n3->second.Next(), &(*n4));\n+\n+    // Delete n4\n+    // head->n3->nullptr\n+    nodes.erase(n4);\n+    // Check that head still points to n3, and n3 points to nullptr\n+    // Also check that flags were not altered\n+    BOOST_CHECK_EQUAL(n3->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+    BOOST_CHECK_EQUAL(head.second.Next(), &(*n3));\n+    BOOST_CHECK_EQUAL(n3->second.Next(), nullptr);\n+\n+    // Delete n3\n+    // head->nullptr\n+    nodes.erase(n3);",
      "path": "src/test/coinscachepair_tests.cpp",
      "position": 127,
      "original_position": 120,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "6508bdfe437100a10be3730cefdb26efa5b5ad37",
      "in_reply_to_id": 1658824573,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It just checks that removing the last element sets head to `nullptr`. I suppose just for completeness, since this case is the same as when we delete `n4` above.",
      "created_at": "2024-06-29T14:04:14Z",
      "updated_at": "2024-06-29T14:04:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1659835029",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659835029"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 127,
      "original_line": 127,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659847033",
      "pull_request_review_id": 2149648909,
      "id": 1659847033,
      "node_id": "PRRC_kwDOABII585i70F5",
      "diff_hunk": "@@ -0,0 +1,186 @@\n+// Copyright (c) 2024-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <coins.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <list>\n+\n+BOOST_AUTO_TEST_SUITE(coinscachepair_tests)\n+\n+static constexpr auto NUM_NODES{4};\n+\n+std::list<CoinsCachePair> CreatePairs(CoinsCachePair& head)\n+{\n+    std::list<CoinsCachePair> nodes;\n+    for (auto i{0}; i < NUM_NODES; ++i) {\n+        nodes.emplace_front();\n+\n+        auto node{nodes.begin()};\n+        node->second.AddFlags(CCoinsCacheEntry::DIRTY, *node, head);\n+\n+        BOOST_CHECK_EQUAL(node->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+        BOOST_CHECK_EQUAL(head.second.Next(), &(*node));\n+\n+        if (i > 0) {\n+            BOOST_CHECK_EQUAL(&(*std::next(node)), node->second.Next());\n+        } else {\n+            BOOST_CHECK_EQUAL(nullptr, node->second.Next());\n+        }\n+    }\n+    return nodes;\n+}\n+\n+BOOST_AUTO_TEST_CASE(linked_list_iteration)\n+{\n+    CoinsCachePair head;\n+    auto nodes{CreatePairs(head)};\n+\n+    // Check iterating through pairs is identical to iterating through a list\n+    auto lit{nodes.begin()};\n+    for (auto it{head.second.Next()}; it != nullptr; it = it->second.Next(/*clear_flags=*/false), ++lit) {\n+        BOOST_CHECK_EQUAL(&(*lit), it);\n+    }\n+\n+    // Check iterating through pairs is identical to iterating through a list\n+    // Clear the flags during iteration\n+    lit = nodes.begin();\n+    for (auto it{head.second.Next()}; it != nullptr; it = it->second.Next(/*clear_flags=*/true), ++lit) {\n+        BOOST_CHECK_EQUAL(&(*lit), it);\n+    }\n+    // Check that head is empty\n+    BOOST_CHECK_EQUAL(head.second.Next(), nullptr);\n+\n+    // Delete the nodes from the list to make sure there are no dangling pointers\n+    for (auto it{nodes.begin()}; it != nodes.end(); it = nodes.erase(it)) {\n+        BOOST_CHECK_EQUAL(it->second.GetFlags(), 0);\n+        BOOST_CHECK_EQUAL(it->second.Next(), nullptr);\n+    }\n+}\n+\n+BOOST_AUTO_TEST_CASE(linked_list_iterate_erase)",
      "path": "src/test/coinscachepair_tests.cpp",
      "position": 67,
      "original_position": 63,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "6508bdfe437100a10be3730cefdb26efa5b5ad37",
      "in_reply_to_id": 1658810375,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This checks that the linked list nodes get removed from the linked list due to the list iterator deleting them, not due to clearing the flags in `Next`.",
      "created_at": "2024-06-29T14:31:07Z",
      "updated_at": "2024-06-29T14:31:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1659847033",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659847033"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 67,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659852814",
      "pull_request_review_id": 2149656965,
      "id": 1659852814,
      "node_id": "PRRC_kwDOABII585i71gO",
      "diff_hunk": "@@ -12,7 +12,7 @@\n bool CCoinsView::GetCoin(const COutPoint &outpoint, Coin &coin) const { return false; }\n uint256 CCoinsView::GetBestBlock() const { return uint256(); }\n std::vector<uint256> CCoinsView::GetHeadBlocks() const { return std::vector<uint256>(); }\n-bool CCoinsView::BatchWrite(CCoinsMap &mapCoins, const uint256 &hashBlock, bool erase) { return false; }\n+bool CCoinsView::BatchWrite(CoinsCachePair *pairs, const uint256 &hashBlock, bool will_erase) { return false; }",
      "path": "src/coins.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "a6324db9c6ae1b71b9687923a516a8adc01b7e1a",
      "in_reply_to_id": 1658985403,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2024-06-29T14:56:45Z",
      "updated_at": "2024-06-29T14:56:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1659852814",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659852814"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 15,
      "original_line": 15,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659852854",
      "pull_request_review_id": 2149657246,
      "id": 1659852854,
      "node_id": "PRRC_kwDOABII585i71g2",
      "diff_hunk": "@@ -130,6 +157,56 @@ struct CCoinsCacheEntry\n     CCoinsCacheEntry() : flags(0) {}\n     explicit CCoinsCacheEntry(Coin&& coin_) : coin(std::move(coin_)), flags(0) {}\n     CCoinsCacheEntry(Coin&& coin_, unsigned char flag) : coin(std::move(coin_)), flags(flag) {}\n+    ~CCoinsCacheEntry()\n+    {\n+        // We must always clear the flags when destroying this to remove it from\n+        // the flagged linked list\n+        ClearFlags();\n+    }\n+\n+    //! Adding a flag also requires a self reference to the pair that contains\n+    //! this entry in the CCoinsCache map and a reference to the head of the\n+    //! flagged pair linked list.\n+    inline void AddFlags(uint8_t flags, CoinsCachePair& self, CoinsCachePair& head)\n+    {\n+        if (flags == 0) return;\n+        if (m_flags != 0) {\n+            m_flags |= flags;\n+            return;\n+        }\n+        m_prev = &head;\n+        m_next = head.second.m_next;\n+        head.second.m_next = &self;\n+        if (m_next != nullptr) {\n+            m_next->second.m_prev = &self;\n+        }\n+        m_flags = flags;\n+    }\n+\n+    inline void ClearFlags()\n+    {\n+        if (m_flags == 0) return;\n+        m_prev->second.m_next = m_next;\n+        if (m_next != nullptr) {\n+            m_next->second.m_prev = m_prev;\n+        }\n+        m_prev = nullptr;\n+        m_next = nullptr;\n+        m_flags = 0;",
      "path": "src/coins.h",
      "position": 75,
      "original_position": 80,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "0a2bc92b0c642ae72a10f687e0758c59c8ffd79c",
      "in_reply_to_id": 1658892949,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2024-06-29T14:57:16Z",
      "updated_at": "2024-06-29T14:57:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1659852854",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659852854"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 181,
      "original_line": 181,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659853094",
      "pull_request_review_id": 2149657733,
      "id": 1659853094,
      "node_id": "PRRC_kwDOABII585i71km",
      "diff_hunk": "@@ -124,7 +124,7 @@ bool CCoinsViewDB::BatchWrite(CCoinsMap &mapCoins, const uint256 &hashBlock, boo\n             changed++;\n         }\n         count++;\n-        it = erase ? mapCoins.erase(it) : std::next(it);\n+        it = it->second.Next(will_erase || !it->second.coin.IsSpent());",
      "path": "src/txdb.cpp",
      "position": null,
      "original_position": 25,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "a6324db9c6ae1b71b9687923a516a8adc01b7e1a",
      "in_reply_to_id": 1657288151,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2024-06-29T14:58:26Z",
      "updated_at": "2024-06-29T14:58:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1659853094",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659853094"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 127,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659853149",
      "pull_request_review_id": 2149657849,
      "id": 1659853149,
      "node_id": "PRRC_kwDOABII585i71ld",
      "diff_hunk": "@@ -103,6 +106,30 @@ class Coin\n  */\n struct CCoinsCacheEntry\n {\n+private:\n+    /**\n+     * These are used to create a doubly linked list of flagged entries.\n+     * They are set in AddFlags and unset in ClearFlags.\n+     * A flagged entry is any entry that is either DIRTY, FRESH, or both.\n+     *\n+     * DIRTY entries are tracked so that only modified entries can be passed to\n+     * the parent cache to do a batch write. This is a performance optimization\n+     * compared to giving all entries in the cache to the parent and having the\n+     * parent scan for only modified entries.\n+     *\n+     * FRESH entries are tracked because a FRESH-but-not-DIRTY entry can only be\n+     * a spent coin that exists in the parent cache. When performing a batch",
      "path": "src/coins.h",
      "position": null,
      "original_position": 26,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "0a2bc92b0c642ae72a10f687e0758c59c8ffd79c",
      "in_reply_to_id": 1655477509,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Updated the comment.",
      "created_at": "2024-06-29T14:58:35Z",
      "updated_at": "2024-06-29T14:58:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1659853149",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659853149"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 121,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659853210",
      "pull_request_review_id": 2149657991,
      "id": 1659853210,
      "node_id": "PRRC_kwDOABII585i71ma",
      "diff_hunk": "@@ -103,6 +106,30 @@ class Coin\n  */\n struct CCoinsCacheEntry\n {\n+private:\n+    /**\n+     * These are used to create a doubly linked list of flagged entries.\n+     * They are set in AddFlags and unset in ClearFlags.\n+     * A flagged entry is any entry that is either DIRTY, FRESH, or both.\n+     *\n+     * DIRTY entries are tracked so that only modified entries can be passed to\n+     * the parent cache to do a batch write. This is a performance optimization\n+     * compared to giving all entries in the cache to the parent and having the\n+     * parent scan for only modified entries.\n+     *\n+     * FRESH entries are tracked because a FRESH-but-not-DIRTY entry can only be\n+     * a spent coin that exists in the parent cache. When performing a batch\n+     * write but not clearing the cache (CCoinsViewCache::Sync), we must also",
      "path": "src/coins.h",
      "position": null,
      "original_position": 27,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "0a2bc92b0c642ae72a10f687e0758c59c8ffd79c",
      "in_reply_to_id": 1658390684,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2024-06-29T14:58:47Z",
      "updated_at": "2024-06-29T14:58:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1659853210",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659853210"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 122,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659853307",
      "pull_request_review_id": 2149658103,
      "id": 1659853307,
      "node_id": "PRRC_kwDOABII585i71n7",
      "diff_hunk": "@@ -103,6 +106,30 @@ class Coin\n  */\n struct CCoinsCacheEntry\n {\n+private:\n+    /**\n+     * These are used to create a doubly linked list of flagged entries.\n+     * They are set in AddFlags and unset in ClearFlags.\n+     * A flagged entry is any entry that is either DIRTY, FRESH, or both.\n+     *\n+     * DIRTY entries are tracked so that only modified entries can be passed to\n+     * the parent cache to do a batch write. This is a performance optimization",
      "path": "src/coins.h",
      "position": null,
      "original_position": 21,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "0a2bc92b0c642ae72a10f687e0758c59c8ffd79c",
      "in_reply_to_id": 1658391340,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2024-06-29T14:58:58Z",
      "updated_at": "2024-06-29T14:58:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1659853307",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659853307"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 116,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659853462",
      "pull_request_review_id": 2149658271,
      "id": 1659853462,
      "node_id": "PRRC_kwDOABII585i71qW",
      "diff_hunk": "@@ -0,0 +1,186 @@\n+// Copyright (c) 2024-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <coins.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <list>\n+\n+BOOST_AUTO_TEST_SUITE(coinscachepair_tests)\n+\n+static constexpr auto NUM_NODES{4};\n+\n+std::list<CoinsCachePair> CreatePairs(CoinsCachePair& head)\n+{\n+    std::list<CoinsCachePair> nodes;\n+    for (auto i{0}; i < NUM_NODES; ++i) {\n+        nodes.emplace_front();\n+\n+        auto node{nodes.begin()};\n+        node->second.AddFlags(CCoinsCacheEntry::DIRTY, *node, head);\n+\n+        BOOST_CHECK_EQUAL(node->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+        BOOST_CHECK_EQUAL(head.second.Next(), &(*node));\n+\n+        if (i > 0) {\n+            BOOST_CHECK_EQUAL(&(*std::next(node)), node->second.Next());\n+        } else {\n+            BOOST_CHECK_EQUAL(nullptr, node->second.Next());\n+        }\n+    }\n+    return nodes;\n+}\n+\n+BOOST_AUTO_TEST_CASE(linked_list_iteration)\n+{\n+    CoinsCachePair head;\n+    auto nodes{CreatePairs(head)};\n+\n+    // Check iterating through pairs is identical to iterating through a list\n+    auto lit{nodes.begin()};\n+    for (auto it{head.second.Next()}; it != nullptr; it = it->second.Next(/*clear_flags=*/false), ++lit) {\n+        BOOST_CHECK_EQUAL(&(*lit), it);\n+    }\n+\n+    // Check iterating through pairs is identical to iterating through a list\n+    // Clear the flags during iteration\n+    lit = nodes.begin();\n+    for (auto it{head.second.Next()}; it != nullptr; it = it->second.Next(/*clear_flags=*/true), ++lit) {\n+        BOOST_CHECK_EQUAL(&(*lit), it);\n+    }\n+    // Check that head is empty\n+    BOOST_CHECK_EQUAL(head.second.Next(), nullptr);\n+\n+    // Delete the nodes from the list to make sure there are no dangling pointers\n+    for (auto it{nodes.begin()}; it != nodes.end(); it = nodes.erase(it)) {\n+        BOOST_CHECK_EQUAL(it->second.GetFlags(), 0);\n+        BOOST_CHECK_EQUAL(it->second.Next(), nullptr);\n+    }\n+}\n+\n+BOOST_AUTO_TEST_CASE(linked_list_iterate_erase)\n+{\n+    CoinsCachePair head;\n+    auto nodes{CreatePairs(head)};\n+\n+    // Check iterating through pairs is identical to iterating through a list\n+    // Erase the nodes as we iterate through, but don't clear flags\n+    // The flags will be cleared by the CCoinsCacheEntry's destructor\n+    auto lit{nodes.begin()};\n+    for (auto it{head.second.Next()}; it != nullptr; it = it->second.Next(/*clear_flags=*/false), lit = nodes.erase(lit)) {\n+        BOOST_CHECK_EQUAL(&(*lit), it);\n+    }\n+    // Check that head is empty\n+    BOOST_CHECK_EQUAL(head.second.Next(), nullptr);\n+}\n+\n+BOOST_AUTO_TEST_CASE(linked_list_random_deletion)\n+{\n+    CoinsCachePair head;\n+    auto nodes{CreatePairs(head)};\n+\n+    // Create linked list head->n1->n2->n3->n4->nullptr\n+    auto n1{nodes.begin()};\n+    auto n2{std::next(n1)};\n+    auto n3{std::next(n2)};\n+    auto n4{std::next(n3)};\n+\n+    // Delete n2\n+    // head->n1->n3->n4->nullptr\n+    nodes.erase(n2);\n+    // Check that n1 now points to n3, and n3 still points to n4\n+    // Also check that flags were not altered\n+    BOOST_CHECK_EQUAL(n1->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+    BOOST_CHECK_EQUAL(n1->second.Next(), &(*n3));\n+    BOOST_CHECK_EQUAL(n3->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+    BOOST_CHECK_EQUAL(n3->second.Next(), &(*n4));\n+\n+    // Delete n1\n+    // head->n3->n4->nullptr\n+    nodes.erase(n1);\n+    // Check that head now points to n3, and n3 still points to n4\n+    // Also check that flags were not altered\n+    BOOST_CHECK_EQUAL(n3->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+    BOOST_CHECK_EQUAL(head.second.Next(), &(*n3));\n+    BOOST_CHECK_EQUAL(n3->second.Next(), &(*n4));\n+\n+    // Delete n4\n+    // head->n3->nullptr\n+    nodes.erase(n4);\n+    // Check that head still points to n3, and n3 points to nullptr\n+    // Also check that flags were not altered\n+    BOOST_CHECK_EQUAL(n3->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+    BOOST_CHECK_EQUAL(head.second.Next(), &(*n3));\n+    BOOST_CHECK_EQUAL(n3->second.Next(), nullptr);\n+\n+    // Delete n3\n+    // head->nullptr\n+    nodes.erase(n3);\n+    // Check that head now points to nullptr\n+    BOOST_CHECK_EQUAL(head.second.Next(), nullptr);\n+}\n+\n+BOOST_AUTO_TEST_CASE(linked_list_add_flags)\n+{\n+    CoinsCachePair head;\n+    CoinsCachePair n1;\n+    CoinsCachePair n2;\n+\n+    // Check that adding 0 flag has no effect\n+    n1.second.AddFlags(0, n1, head);\n+    BOOST_CHECK_EQUAL(n1.second.GetFlags(), 0);\n+    BOOST_CHECK_EQUAL(n1.second.Next(), nullptr);\n+    BOOST_CHECK_EQUAL(head.second.Next(), nullptr);\n+\n+    // Check that adding DIRTY flag inserts it into linked list and sets flags\n+    n1.second.AddFlags(CCoinsCacheEntry::DIRTY, n1, head);\n+    BOOST_CHECK_EQUAL(n1.second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+    BOOST_CHECK_EQUAL(n1.second.Next(), nullptr);\n+    BOOST_CHECK_EQUAL(head.second.Next(), &n1);\n+\n+    // Check that adding FRESH flag on new node inserts it after head\n+    n2.second.AddFlags(CCoinsCacheEntry::FRESH, n2, head);\n+    BOOST_CHECK_EQUAL(n2.second.GetFlags(), CCoinsCacheEntry::FRESH);\n+    BOOST_CHECK_EQUAL(n2.second.Next(), &n1);\n+    BOOST_CHECK_EQUAL(head.second.Next(), &n2);\n+\n+    // Check that adding 0 flag has no effect, and doesn't change position\n+    n1.second.AddFlags(0, n1, head);\n+    BOOST_CHECK_EQUAL(n1.second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+    BOOST_CHECK_EQUAL(n1.second.Next(), nullptr);\n+    BOOST_CHECK_EQUAL(head.second.Next(), &n2);\n+    BOOST_CHECK_EQUAL(n2.second.Next(), &n1);\n+\n+    // Check that we can add extra flags, but they don't change our position\n+    n1.second.AddFlags(CCoinsCacheEntry::FRESH, n1, head);\n+    BOOST_CHECK_EQUAL(n1.second.GetFlags(), CCoinsCacheEntry::DIRTY | CCoinsCacheEntry::FRESH);\n+    BOOST_CHECK_EQUAL(n1.second.Next(), nullptr);\n+    BOOST_CHECK_EQUAL(head.second.Next(), &n2);\n+    BOOST_CHECK_EQUAL(n2.second.Next(), &n1);\n+\n+    // Check that we can clear flags then re-add them\n+    n1.second.ClearFlags();\n+    BOOST_CHECK_EQUAL(n1.second.GetFlags(), 0);\n+    BOOST_CHECK_EQUAL(n2.second.Next(), nullptr);\n+\n+    // Check that we calling `ClearFlags` with 0 flags has no effect",
      "path": "src/test/coinscachepair_tests.cpp",
      "position": null,
      "original_position": 168,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "6508bdfe437100a10be3730cefdb26efa5b5ad37",
      "in_reply_to_id": 1658417894,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2024-06-29T14:59:16Z",
      "updated_at": "2024-06-29T14:59:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1659853462",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659853462"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 168,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659853526",
      "pull_request_review_id": 2149658305,
      "id": 1659853526,
      "node_id": "PRRC_kwDOABII585i71rW",
      "diff_hunk": "@@ -0,0 +1,186 @@\n+// Copyright (c) 2024-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <coins.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <list>\n+\n+BOOST_AUTO_TEST_SUITE(coinscachepair_tests)\n+\n+static constexpr auto NUM_NODES{4};\n+\n+std::list<CoinsCachePair> CreatePairs(CoinsCachePair& head)\n+{\n+    std::list<CoinsCachePair> nodes;\n+    for (auto i{0}; i < NUM_NODES; ++i) {\n+        nodes.emplace_front();\n+\n+        auto node{nodes.begin()};\n+        node->second.AddFlags(CCoinsCacheEntry::DIRTY, *node, head);\n+\n+        BOOST_CHECK_EQUAL(node->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+        BOOST_CHECK_EQUAL(head.second.Next(), &(*node));\n+\n+        if (i > 0) {\n+            BOOST_CHECK_EQUAL(&(*std::next(node)), node->second.Next());\n+        } else {\n+            BOOST_CHECK_EQUAL(nullptr, node->second.Next());\n+        }\n+    }\n+    return nodes;\n+}\n+\n+BOOST_AUTO_TEST_CASE(linked_list_iteration)\n+{\n+    CoinsCachePair head;\n+    auto nodes{CreatePairs(head)};\n+\n+    // Check iterating through pairs is identical to iterating through a list\n+    auto lit{nodes.begin()};\n+    for (auto it{head.second.Next()}; it != nullptr; it = it->second.Next(/*clear_flags=*/false), ++lit) {",
      "path": "src/test/coinscachepair_tests.cpp",
      "position": null,
      "original_position": 43,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "6508bdfe437100a10be3730cefdb26efa5b5ad37",
      "in_reply_to_id": 1658765626,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2024-06-29T14:59:28Z",
      "updated_at": "2024-06-29T14:59:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1659853526",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659853526"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659853566",
      "pull_request_review_id": 2149658341,
      "id": 1659853566,
      "node_id": "PRRC_kwDOABII585i71r-",
      "diff_hunk": "@@ -130,6 +157,56 @@ struct CCoinsCacheEntry\n     CCoinsCacheEntry() : flags(0) {}\n     explicit CCoinsCacheEntry(Coin&& coin_) : coin(std::move(coin_)), flags(0) {}\n     CCoinsCacheEntry(Coin&& coin_, unsigned char flag) : coin(std::move(coin_)), flags(flag) {}\n+    ~CCoinsCacheEntry()\n+    {\n+        // We must always clear the flags when destroying this to remove it from\n+        // the flagged linked list\n+        ClearFlags();\n+    }\n+\n+    //! Adding a flag also requires a self reference to the pair that contains\n+    //! this entry in the CCoinsCache map and a reference to the head of the\n+    //! flagged pair linked list.\n+    inline void AddFlags(uint8_t flags, CoinsCachePair& self, CoinsCachePair& head)\n+    {\n+        if (flags == 0) return;\n+        if (m_flags != 0) {\n+            m_flags |= flags;",
      "path": "src/coins.h",
      "position": null,
      "original_position": 59,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "0a2bc92b0c642ae72a10f687e0758c59c8ffd79c",
      "in_reply_to_id": 1658879134,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2024-06-29T14:59:43Z",
      "updated_at": "2024-06-29T14:59:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1659853566",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659853566"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 174,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659853579",
      "pull_request_review_id": 2149658357,
      "id": 1659853579,
      "node_id": "PRRC_kwDOABII585i71sL",
      "diff_hunk": "@@ -130,6 +157,56 @@ struct CCoinsCacheEntry\n     CCoinsCacheEntry() : flags(0) {}\n     explicit CCoinsCacheEntry(Coin&& coin_) : coin(std::move(coin_)), flags(0) {}\n     CCoinsCacheEntry(Coin&& coin_, unsigned char flag) : coin(std::move(coin_)), flags(flag) {}\n+    ~CCoinsCacheEntry()\n+    {\n+        // We must always clear the flags when destroying this to remove it from\n+        // the flagged linked list\n+        ClearFlags();\n+    }\n+\n+    //! Adding a flag also requires a self reference to the pair that contains\n+    //! this entry in the CCoinsCache map and a reference to the head of the\n+    //! flagged pair linked list.\n+    inline void AddFlags(uint8_t flags, CoinsCachePair& self, CoinsCachePair& head)\n+    {\n+        if (flags == 0) return;\n+        if (m_flags != 0) {\n+            m_flags |= flags;\n+            return;\n+        }\n+        m_prev = &head;\n+        m_next = head.second.m_next;\n+        head.second.m_next = &self;\n+        if (m_next != nullptr) {",
      "path": "src/coins.h",
      "position": null,
      "original_position": 65,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "0a2bc92b0c642ae72a10f687e0758c59c8ffd79c",
      "in_reply_to_id": 1658888841,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2024-06-29T14:59:54Z",
      "updated_at": "2024-06-29T14:59:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1659853579",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659853579"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 180,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659854749",
      "pull_request_review_id": 2149659008,
      "id": 1659854749,
      "node_id": "PRRC_kwDOABII585i71-d",
      "diff_hunk": "@@ -326,8 +328,8 @@ void CCoinsViewCache::SanityCheck() const\n     size_t recomputed_usage = 0;\n     for (const auto& [_, entry] : cacheCoins) {\n         unsigned attr = 0;\n-        if (entry.flags & CCoinsCacheEntry::DIRTY) attr |= 1;\n-        if (entry.flags & CCoinsCacheEntry::FRESH) attr |= 2;\n+        if (entry.GetFlags() & CCoinsCacheEntry::DIRTY) attr |= 1;\n+        if (entry.GetFlags() & CCoinsCacheEntry::FRESH) attr |= 2;",
      "path": "src/coins.cpp",
      "position": null,
      "original_position": 226,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "a6324db9c6ae1b71b9687923a516a8adc01b7e1a",
      "in_reply_to_id": 1659000088,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not sure I want to touch this right now.",
      "created_at": "2024-06-29T15:00:34Z",
      "updated_at": "2024-06-29T15:00:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1659854749",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659854749"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": 330,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 332,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659855329",
      "pull_request_review_id": 2149659357,
      "id": 1659855329,
      "node_id": "PRRC_kwDOABII585i72Hh",
      "diff_hunk": "@@ -55,10 +55,10 @@ class CCoinsViewTest : public CCoinsView\n \n     uint256 GetBestBlock() const override { return hashBestBlock_; }\n \n-    bool BatchWrite(CCoinsMap& mapCoins, const uint256& hashBlock, bool erase = true) override\n+    bool BatchWrite(CoinsCachePair* pairs, const uint256& hashBlock, bool will_erase = true) override\n     {\n-        for (CCoinsMap::iterator it = mapCoins.begin(); it != mapCoins.end(); it = erase ? mapCoins.erase(it) : std::next(it)) {\n-            if (it->second.flags & CCoinsCacheEntry::DIRTY) {\n+        for (auto it{pairs}; it != nullptr; it = it->second.Next(will_erase || !it->second.coin.IsSpent())) {\n+            if (it->second.GetFlags() & CCoinsCacheEntry::DIRTY) {",
      "path": "src/test/coins_tests.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "a6324db9c6ae1b71b9687923a516a8adc01b7e1a",
      "in_reply_to_id": 1659005029,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2024-06-29T15:00:50Z",
      "updated_at": "2024-06-29T15:00:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1659855329",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659855329"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 61,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659918531",
      "pull_request_review_id": 2149753588,
      "id": 1659918531,
      "node_id": "PRRC_kwDOABII585i8FjD",
      "diff_hunk": "@@ -130,6 +157,56 @@ struct CCoinsCacheEntry\n     CCoinsCacheEntry() : flags(0) {}\n     explicit CCoinsCacheEntry(Coin&& coin_) : coin(std::move(coin_)), flags(0) {}\n     CCoinsCacheEntry(Coin&& coin_, unsigned char flag) : coin(std::move(coin_)), flags(flag) {}\n+    ~CCoinsCacheEntry()\n+    {\n+        // We must always clear the flags when destroying this to remove it from\n+        // the flagged linked list\n+        ClearFlags();\n+    }\n+\n+    //! Adding a flag also requires a self reference to the pair that contains\n+    //! this entry in the CCoinsCache map and a reference to the head of the\n+    //! flagged pair linked list.\n+    inline void AddFlags(uint8_t flags, CoinsCachePair& self, CoinsCachePair& head)\n+    {\n+        if (flags == 0) return;\n+        if (m_flags != 0) {\n+            m_flags |= flags;\n+            return;\n+        }\n+        m_prev = &head;\n+        m_next = head.second.m_next;\n+        head.second.m_next = &self;\n+        if (m_next != nullptr) {\n+            m_next->second.m_prev = &self;\n+        }\n+        m_flags = flags;\n+    }\n+\n+    inline void ClearFlags()\n+    {\n+        if (m_flags == 0) return;\n+        m_prev->second.m_next = m_next;\n+        if (m_next != nullptr) {\n+            m_next->second.m_prev = m_prev;\n+        }\n+        m_prev = nullptr;\n+        m_next = nullptr;\n+        m_flags = 0;\n+    }\n+\n+    inline uint8_t GetFlags() const { return m_flags; }\n+\n+    //! Get the next entry in the flagged linked list, optionally removing the\n+    //! current entry and clearing the flags.\n+    inline CoinsCachePair* Next(bool clear_flags = false)",
      "path": "src/coins.h",
      "position": null,
      "original_position": 87,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "0a2bc92b0c642ae72a10f687e0758c59c8ffd79c",
      "in_reply_to_id": 1658694832,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Before this patch, the iteration is `it = erase ? mapCoins.erase(it) : std::next(it);`. So this is basically the same behavior, is it not?",
      "created_at": "2024-06-29T17:49:18Z",
      "updated_at": "2024-06-29T17:49:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1659918531",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659918531"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 183,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659919946",
      "pull_request_review_id": 2149755147,
      "id": 1659919946,
      "node_id": "PRRC_kwDOABII585i8F5K",
      "diff_hunk": "@@ -130,6 +157,56 @@ struct CCoinsCacheEntry\n     CCoinsCacheEntry() : flags(0) {}\n     explicit CCoinsCacheEntry(Coin&& coin_) : coin(std::move(coin_)), flags(0) {}\n     CCoinsCacheEntry(Coin&& coin_, unsigned char flag) : coin(std::move(coin_)), flags(flag) {}\n+    ~CCoinsCacheEntry()\n+    {\n+        // We must always clear the flags when destroying this to remove it from\n+        // the flagged linked list\n+        ClearFlags();\n+    }\n+\n+    //! Adding a flag also requires a self reference to the pair that contains\n+    //! this entry in the CCoinsCache map and a reference to the head of the\n+    //! flagged pair linked list.\n+    inline void AddFlags(uint8_t flags, CoinsCachePair& self, CoinsCachePair& head)",
      "path": "src/coins.h",
      "position": null,
      "original_position": 55,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "0a2bc92b0c642ae72a10f687e0758c59c8ffd79c",
      "in_reply_to_id": 1658743023,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "We want to tie adding a flag to adding the entry to the linked list. We don't want to have an interface that lets something add a flag without adding it to the linked list. I think splitting that functionality into multiple methods would be dangerous.\r\n\r\n`ClearFlags` is similar. Does it matter to external callers how these methods modify the linked list? That should be transparent to callers. They just know that calling `Next()` from the head gets all flagged entries. The how should not be exposed IMO.",
      "created_at": "2024-06-29T17:53:22Z",
      "updated_at": "2024-06-29T17:53:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1659919946",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659919946"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 157,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659947871",
      "pull_request_review_id": 2149795551,
      "id": 1659947871,
      "node_id": "PRRC_kwDOABII585i8Mtf",
      "diff_hunk": "@@ -0,0 +1,186 @@\n+// Copyright (c) 2024-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <coins.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <list>\n+\n+BOOST_AUTO_TEST_SUITE(coinscachepair_tests)\n+\n+static constexpr auto NUM_NODES{4};\n+\n+std::list<CoinsCachePair> CreatePairs(CoinsCachePair& head)\n+{\n+    std::list<CoinsCachePair> nodes;\n+    for (auto i{0}; i < NUM_NODES; ++i) {\n+        nodes.emplace_front();\n+\n+        auto node{nodes.begin()};\n+        node->second.AddFlags(CCoinsCacheEntry::DIRTY, *node, head);\n+\n+        BOOST_CHECK_EQUAL(node->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+        BOOST_CHECK_EQUAL(head.second.Next(), &(*node));\n+\n+        if (i > 0) {\n+            BOOST_CHECK_EQUAL(&(*std::next(node)), node->second.Next());\n+        } else {\n+            BOOST_CHECK_EQUAL(nullptr, node->second.Next());\n+        }\n+    }\n+    return nodes;\n+}\n+\n+BOOST_AUTO_TEST_CASE(linked_list_iteration)\n+{\n+    CoinsCachePair head;\n+    auto nodes{CreatePairs(head)};\n+\n+    // Check iterating through pairs is identical to iterating through a list\n+    auto lit{nodes.begin()};\n+    for (auto it{head.second.Next()}; it != nullptr; it = it->second.Next(/*clear_flags=*/false), ++lit) {\n+        BOOST_CHECK_EQUAL(&(*lit), it);\n+    }\n+\n+    // Check iterating through pairs is identical to iterating through a list\n+    // Clear the flags during iteration\n+    lit = nodes.begin();\n+    for (auto it{head.second.Next()}; it != nullptr; it = it->second.Next(/*clear_flags=*/true), ++lit) {\n+        BOOST_CHECK_EQUAL(&(*lit), it);\n+    }\n+    // Check that head is empty\n+    BOOST_CHECK_EQUAL(head.second.Next(), nullptr);\n+\n+    // Delete the nodes from the list to make sure there are no dangling pointers\n+    for (auto it{nodes.begin()}; it != nodes.end(); it = nodes.erase(it)) {\n+        BOOST_CHECK_EQUAL(it->second.GetFlags(), 0);\n+        BOOST_CHECK_EQUAL(it->second.Next(), nullptr);\n+    }\n+}\n+\n+BOOST_AUTO_TEST_CASE(linked_list_iterate_erase)",
      "path": "src/test/coinscachepair_tests.cpp",
      "position": 67,
      "original_position": 63,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "6508bdfe437100a10be3730cefdb26efa5b5ad37",
      "in_reply_to_id": 1658810375,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Got it, thanks!",
      "created_at": "2024-06-29T18:46:34Z",
      "updated_at": "2024-06-29T18:46:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1659947871",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659947871"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 67,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659952944",
      "pull_request_review_id": 2149804075,
      "id": 1659952944,
      "node_id": "PRRC_kwDOABII585i8N8w",
      "diff_hunk": "@@ -283,7 +283,7 @@ bool CCoinsViewCache::Sync()\n void CCoinsViewCache::Uncache(const COutPoint& hash)\n {\n     CCoinsMap::iterator it = cacheCoins.find(hash);\n-    if (it != cacheCoins.end() && it->second.flags == 0) {\n+    if (it != cacheCoins.end() && it->second.GetFlags() == 0) {",
      "path": "src/coins.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "7f66953d5b72abdd8e5ea3b992d7b4cf02c03e0a",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't mind the current one either, but now that you have helper method, maybe we don't even need to expose the internals:\r\n```suggestion\r\n    if (it != cacheCoins.end() && !it->second.IsDirty() && !it->second.IsFresh()) {\r\n```",
      "created_at": "2024-06-29T18:54:51Z",
      "updated_at": "2024-06-29T21:02:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1659952944",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659952944"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 286,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659956441",
      "pull_request_review_id": 2149804075,
      "id": 1659956441,
      "node_id": "PRRC_kwDOABII585i8OzZ",
      "diff_hunk": "@@ -127,6 +127,8 @@ struct CCoinsCacheEntry\n         FRESH = (1 << 1),\n     };\n \n+    inline void AddFlags(unsigned int flags) { flags |= flags; }",
      "path": "src/coins.h",
      "position": null,
      "original_position": 4,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "d92dc3e21c2561e61b164a318d9c412d7fd88f2a",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "hmmm, shouldn't this be `this->flags |= flags;`? I wonder how the tests passed...",
      "created_at": "2024-06-29T18:59:21Z",
      "updated_at": "2024-06-29T21:02:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1659956441",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659956441"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 130,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659956700",
      "pull_request_review_id": 2149804075,
      "id": 1659956700,
      "node_id": "PRRC_kwDOABII585i8O3c",
      "diff_hunk": "@@ -587,7 +587,7 @@ static size_t InsertCoinsMapEntry(CCoinsMap& map, CAmount value, char flags)\n     }\n     assert(flags != NO_ENTRY);\n     CCoinsCacheEntry entry;\n-    entry.flags = flags;",
      "path": "src/test/coins_tests.cpp",
      "position": 35,
      "original_position": 4,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "d92dc3e21c2561e61b164a318d9c412d7fd88f2a",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "this seems like a change in behavior (`=` to `|=`)",
      "created_at": "2024-06-29T18:59:43Z",
      "updated_at": "2024-06-29T21:02:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1659956700",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659956700"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 590,
      "original_line": 590,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659957585",
      "pull_request_review_id": 2149804075,
      "id": 1659957585,
      "node_id": "PRRC_kwDOABII585i8PFR",
      "diff_hunk": "@@ -108,10 +108,13 @@ void CCoinsViewCache::AddCoin(const COutPoint &outpoint, Coin&& coin, bool possi\n \n void CCoinsViewCache::EmplaceCoinInternalDANGER(COutPoint&& outpoint, Coin&& coin) {\n     cachedCoinsUsage += coin.DynamicMemoryUsage();\n-    cacheCoins.emplace(\n+    auto [it, inserted] = cacheCoins.emplace(\n         std::piecewise_construct,\n         std::forward_as_tuple(std::move(outpoint)),\n-        std::forward_as_tuple(std::move(coin), CCoinsCacheEntry::DIRTY));\n+        std::forward_as_tuple(std::move(coin)));\n+    if (inserted) {",
      "path": "src/coins.cpp",
      "position": 50,
      "original_position": 10,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "8ca27c7bb60f1d0042806010e60478e5190ddc52",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "can you please explain why this isn't a change in behavior? (in the commit it was introduced in)",
      "created_at": "2024-06-29T19:00:45Z",
      "updated_at": "2024-06-29T21:02:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1659957585",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659957585"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 115,
      "original_line": 115,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659961465",
      "pull_request_review_id": 2149804075,
      "id": 1659961465,
      "node_id": "PRRC_kwDOABII585i8QB5",
      "diff_hunk": "@@ -103,8 +103,11 @@ class Coin\n  */\n struct CCoinsCacheEntry\n {\n+private:\n+    uint8_t m_flags{0};",
      "path": "src/coins.h",
      "position": 33,
      "original_position": 5,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "e0f394ec9d955d543dd8e4553aa3c566f5aea9cf",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nice!",
      "created_at": "2024-06-29T19:04:35Z",
      "updated_at": "2024-06-29T21:02:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1659961465",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659961465"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 128,
      "original_line": 128,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659966077",
      "pull_request_review_id": 2149804075,
      "id": 1659966077,
      "node_id": "PRRC_kwDOABII585i8RJ9",
      "diff_hunk": "@@ -130,6 +157,56 @@ struct CCoinsCacheEntry\n     CCoinsCacheEntry() : flags(0) {}\n     explicit CCoinsCacheEntry(Coin&& coin_) : coin(std::move(coin_)), flags(0) {}\n     CCoinsCacheEntry(Coin&& coin_, unsigned char flag) : coin(std::move(coin_)), flags(flag) {}\n+    ~CCoinsCacheEntry()\n+    {\n+        // We must always clear the flags when destroying this to remove it from\n+        // the flagged linked list\n+        ClearFlags();\n+    }\n+\n+    //! Adding a flag also requires a self reference to the pair that contains\n+    //! this entry in the CCoinsCache map and a reference to the head of the\n+    //! flagged pair linked list.\n+    inline void AddFlags(uint8_t flags, CoinsCachePair& self, CoinsCachePair& head)",
      "path": "src/coins.h",
      "position": null,
      "original_position": 55,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "0a2bc92b0c642ae72a10f687e0758c59c8ffd79c",
      "in_reply_to_id": 1658743023,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Could the overall intent be better expressed here, something like `SetCacheStateAndLink`/`ResetCacheStateAndUnlink` or `Sync`/`Reset` or similar?\r\nIt's obviously doing more after this commit than what it announces...",
      "created_at": "2024-06-29T19:26:12Z",
      "updated_at": "2024-06-30T07:01:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1659966077",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659966077"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 157,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659966951",
      "pull_request_review_id": 2149804075,
      "id": 1659966951,
      "node_id": "PRRC_kwDOABII585i8RXn",
      "diff_hunk": "@@ -130,6 +157,56 @@ struct CCoinsCacheEntry\n     CCoinsCacheEntry() : flags(0) {}\n     explicit CCoinsCacheEntry(Coin&& coin_) : coin(std::move(coin_)), flags(0) {}\n     CCoinsCacheEntry(Coin&& coin_, unsigned char flag) : coin(std::move(coin_)), flags(flag) {}\n+    ~CCoinsCacheEntry()\n+    {\n+        // We must always clear the flags when destroying this to remove it from\n+        // the flagged linked list\n+        ClearFlags();\n+    }\n+\n+    //! Adding a flag also requires a self reference to the pair that contains\n+    //! this entry in the CCoinsCache map and a reference to the head of the\n+    //! flagged pair linked list.\n+    inline void AddFlags(uint8_t flags, CoinsCachePair& self, CoinsCachePair& head)\n+    {\n+        if (flags == 0) return;\n+        if (m_flags != 0) {\n+            m_flags |= flags;\n+            return;\n+        }\n+        m_prev = &head;\n+        m_next = head.second.m_next;\n+        head.second.m_next = &self;\n+        if (m_next != nullptr) {\n+            m_next->second.m_prev = &self;\n+        }\n+        m_flags = flags;\n+    }\n+\n+    inline void ClearFlags()\n+    {\n+        if (m_flags == 0) return;\n+        m_prev->second.m_next = m_next;\n+        if (m_next != nullptr) {\n+            m_next->second.m_prev = m_prev;\n+        }\n+        m_prev = nullptr;\n+        m_next = nullptr;\n+        m_flags = 0;\n+    }\n+\n+    inline uint8_t GetFlags() const { return m_flags; }\n+\n+    //! Get the next entry in the flagged linked list, optionally removing the\n+    //! current entry and clearing the flags.\n+    inline CoinsCachePair* Next(bool clear_flags = false)",
      "path": "src/coins.h",
      "position": null,
      "original_position": 87,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "0a2bc92b0c642ae72a10f687e0758c59c8ffd79c",
      "in_reply_to_id": 1658694832,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe, but now the method returns AND mutates, that's a confusing combination.\r\nI would expect it to be either void and mutate or return and not change internal state.\r\nCan we maybe move the mutation out to the call-site?",
      "created_at": "2024-06-29T19:34:16Z",
      "updated_at": "2024-06-29T21:02:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1659966951",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659966951"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 183,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659967194",
      "pull_request_review_id": 2149804075,
      "id": 1659967194,
      "node_id": "PRRC_kwDOABII585i8Rba",
      "diff_hunk": "@@ -0,0 +1,189 @@\n+// Copyright (c) 2024-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <coins.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <list>\n+\n+BOOST_AUTO_TEST_SUITE(coinscachepair_tests)\n+\n+static constexpr auto NUM_NODES{4};\n+\n+std::list<CoinsCachePair> CreatePairs(CoinsCachePair& head)\n+{\n+    std::list<CoinsCachePair> nodes;\n+    for (auto i{0}; i < NUM_NODES; ++i) {\n+        nodes.emplace_front();\n+\n+        auto node{nodes.begin()};\n+        node->second.AddFlags(CCoinsCacheEntry::DIRTY, *node, head);\n+\n+        BOOST_CHECK_EQUAL(node->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+        BOOST_CHECK_EQUAL(head.second.Next(), &(*node));\n+\n+        if (i > 0) {\n+            BOOST_CHECK_EQUAL(&(*std::next(node)), node->second.Next());\n+        } else {\n+            BOOST_CHECK_EQUAL(nullptr, node->second.Next());\n+        }\n+    }\n+    return nodes;\n+}\n+\n+BOOST_AUTO_TEST_CASE(linked_list_iteration)\n+{\n+    CoinsCachePair head;\n+    auto nodes{CreatePairs(head)};\n+\n+    // Check iterating through pairs is identical to iterating through a list\n+    auto node{head.second.Next()};\n+    for (const auto& expected : nodes) {\n+        BOOST_CHECK_EQUAL(&expected, node);\n+        node = node->second.Next();\n+    }\n+\n+    // Check iterating through pairs is identical to iterating through a list\n+    // Clear the flags during iteration\n+    node = head.second.Next();\n+    for (const auto& expected : nodes) {\n+        BOOST_CHECK_EQUAL(&expected, node);\n+        node = node->second.Next(/*clear_flags=*/true);\n+    }\n+    // Check that head is empty\n+    BOOST_CHECK_EQUAL(head.second.Next(), nullptr);\n+\n+    // Delete the nodes from the list to make sure there are no dangling pointers\n+    for (auto it{nodes.begin()}; it != nodes.end(); it = nodes.erase(it)) {\n+        BOOST_CHECK_EQUAL(it->second.GetFlags(), 0);",
      "path": "src/test/coinscachepair_tests.cpp",
      "position": 62,
      "original_position": 60,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "f5443052bf5db66c922e9239344afcb07f486070",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "As mentioned before, instead of exposing `GetFlags`, we could check that it's not fresh and not dirty",
      "created_at": "2024-06-29T19:37:52Z",
      "updated_at": "2024-06-29T21:03:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1659967194",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659967194"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 62,
      "original_line": 62,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659968052",
      "pull_request_review_id": 2149804075,
      "id": 1659968052,
      "node_id": "PRRC_kwDOABII585i8Ro0",
      "diff_hunk": "@@ -0,0 +1,189 @@\n+// Copyright (c) 2024-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <coins.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <list>\n+\n+BOOST_AUTO_TEST_SUITE(coinscachepair_tests)\n+\n+static constexpr auto NUM_NODES{4};\n+\n+std::list<CoinsCachePair> CreatePairs(CoinsCachePair& head)\n+{\n+    std::list<CoinsCachePair> nodes;\n+    for (auto i{0}; i < NUM_NODES; ++i) {\n+        nodes.emplace_front();\n+\n+        auto node{nodes.begin()};\n+        node->second.AddFlags(CCoinsCacheEntry::DIRTY, *node, head);\n+\n+        BOOST_CHECK_EQUAL(node->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+        BOOST_CHECK_EQUAL(head.second.Next(), &(*node));\n+\n+        if (i > 0) {\n+            BOOST_CHECK_EQUAL(&(*std::next(node)), node->second.Next());\n+        } else {\n+            BOOST_CHECK_EQUAL(nullptr, node->second.Next());\n+        }\n+    }\n+    return nodes;\n+}\n+\n+BOOST_AUTO_TEST_CASE(linked_list_iteration)\n+{\n+    CoinsCachePair head;\n+    auto nodes{CreatePairs(head)};\n+\n+    // Check iterating through pairs is identical to iterating through a list\n+    auto node{head.second.Next()};\n+    for (const auto& expected : nodes) {\n+        BOOST_CHECK_EQUAL(&expected, node);\n+        node = node->second.Next();\n+    }\n+\n+    // Check iterating through pairs is identical to iterating through a list\n+    // Clear the flags during iteration\n+    node = head.second.Next();\n+    for (const auto& expected : nodes) {\n+        BOOST_CHECK_EQUAL(&expected, node);\n+        node = node->second.Next(/*clear_flags=*/true);\n+    }\n+    // Check that head is empty\n+    BOOST_CHECK_EQUAL(head.second.Next(), nullptr);\n+\n+    // Delete the nodes from the list to make sure there are no dangling pointers\n+    for (auto it{nodes.begin()}; it != nodes.end(); it = nodes.erase(it)) {\n+        BOOST_CHECK_EQUAL(it->second.GetFlags(), 0);\n+        BOOST_CHECK_EQUAL(it->second.Next(), nullptr);\n+    }\n+}\n+\n+BOOST_AUTO_TEST_CASE(linked_list_iterate_erase)\n+{\n+    CoinsCachePair head;\n+    auto nodes{CreatePairs(head)};\n+\n+    // Check iterating through pairs is identical to iterating through a list\n+    // Erase the nodes as we iterate through, but don't clear flags\n+    // The flags will be cleared by the CCoinsCacheEntry's destructor\n+    auto node{head.second.Next()};\n+    for (auto expected{nodes.begin()}; expected != nodes.end(); expected = nodes.erase(expected)) {\n+        BOOST_CHECK_EQUAL(&(*expected), node);\n+        node = node->second.Next(/*clear_flags=*/false);\n+    }\n+    // Check that head is empty",
      "path": "src/test/coinscachepair_tests.cpp",
      "position": null,
      "original_position": 78,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "f5443052bf5db66c922e9239344afcb07f486070",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "hmm, but that's not what we're checking, right, but that head's next is empty",
      "created_at": "2024-06-29T19:45:49Z",
      "updated_at": "2024-06-29T21:03:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1659968052",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659968052"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 78,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659968285",
      "pull_request_review_id": 2149804075,
      "id": 1659968285,
      "node_id": "PRRC_kwDOABII585i8Rsd",
      "diff_hunk": "@@ -0,0 +1,186 @@\n+// Copyright (c) 2024-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <coins.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <list>\n+\n+BOOST_AUTO_TEST_SUITE(coinscachepair_tests)\n+\n+static constexpr auto NUM_NODES{4};\n+\n+std::list<CoinsCachePair> CreatePairs(CoinsCachePair& head)\n+{\n+    std::list<CoinsCachePair> nodes;\n+    for (auto i{0}; i < NUM_NODES; ++i) {\n+        nodes.emplace_front();\n+\n+        auto node{nodes.begin()};\n+        node->second.AddFlags(CCoinsCacheEntry::DIRTY, *node, head);\n+\n+        BOOST_CHECK_EQUAL(node->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+        BOOST_CHECK_EQUAL(head.second.Next(), &(*node));\n+\n+        if (i > 0) {\n+            BOOST_CHECK_EQUAL(&(*std::next(node)), node->second.Next());\n+        } else {\n+            BOOST_CHECK_EQUAL(nullptr, node->second.Next());\n+        }\n+    }\n+    return nodes;\n+}\n+\n+BOOST_AUTO_TEST_CASE(linked_list_iteration)\n+{\n+    CoinsCachePair head;\n+    auto nodes{CreatePairs(head)};\n+\n+    // Check iterating through pairs is identical to iterating through a list\n+    auto lit{nodes.begin()};\n+    for (auto it{head.second.Next()}; it != nullptr; it = it->second.Next(/*clear_flags=*/false), ++lit) {\n+        BOOST_CHECK_EQUAL(&(*lit), it);\n+    }\n+\n+    // Check iterating through pairs is identical to iterating through a list\n+    // Clear the flags during iteration\n+    lit = nodes.begin();\n+    for (auto it{head.second.Next()}; it != nullptr; it = it->second.Next(/*clear_flags=*/true), ++lit) {\n+        BOOST_CHECK_EQUAL(&(*lit), it);\n+    }\n+    // Check that head is empty\n+    BOOST_CHECK_EQUAL(head.second.Next(), nullptr);\n+\n+    // Delete the nodes from the list to make sure there are no dangling pointers\n+    for (auto it{nodes.begin()}; it != nodes.end(); it = nodes.erase(it)) {\n+        BOOST_CHECK_EQUAL(it->second.GetFlags(), 0);\n+        BOOST_CHECK_EQUAL(it->second.Next(), nullptr);\n+    }\n+}\n+\n+BOOST_AUTO_TEST_CASE(linked_list_iterate_erase)\n+{\n+    CoinsCachePair head;\n+    auto nodes{CreatePairs(head)};\n+\n+    // Check iterating through pairs is identical to iterating through a list\n+    // Erase the nodes as we iterate through, but don't clear flags\n+    // The flags will be cleared by the CCoinsCacheEntry's destructor\n+    auto lit{nodes.begin()};\n+    for (auto it{head.second.Next()}; it != nullptr; it = it->second.Next(/*clear_flags=*/false), lit = nodes.erase(lit)) {\n+        BOOST_CHECK_EQUAL(&(*lit), it);\n+    }\n+    // Check that head is empty\n+    BOOST_CHECK_EQUAL(head.second.Next(), nullptr);\n+}\n+\n+BOOST_AUTO_TEST_CASE(linked_list_random_deletion)\n+{\n+    CoinsCachePair head;\n+    auto nodes{CreatePairs(head)};\n+\n+    // Create linked list head->n1->n2->n3->n4->nullptr\n+    auto n1{nodes.begin()};\n+    auto n2{std::next(n1)};\n+    auto n3{std::next(n2)};\n+    auto n4{std::next(n3)};\n+\n+    // Delete n2\n+    // head->n1->n3->n4->nullptr\n+    nodes.erase(n2);\n+    // Check that n1 now points to n3, and n3 still points to n4\n+    // Also check that flags were not altered\n+    BOOST_CHECK_EQUAL(n1->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+    BOOST_CHECK_EQUAL(n1->second.Next(), &(*n3));\n+    BOOST_CHECK_EQUAL(n3->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+    BOOST_CHECK_EQUAL(n3->second.Next(), &(*n4));\n+\n+    // Delete n1\n+    // head->n3->n4->nullptr\n+    nodes.erase(n1);\n+    // Check that head now points to n3, and n3 still points to n4\n+    // Also check that flags were not altered\n+    BOOST_CHECK_EQUAL(n3->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+    BOOST_CHECK_EQUAL(head.second.Next(), &(*n3));\n+    BOOST_CHECK_EQUAL(n3->second.Next(), &(*n4));\n+\n+    // Delete n4\n+    // head->n3->nullptr\n+    nodes.erase(n4);\n+    // Check that head still points to n3, and n3 points to nullptr\n+    // Also check that flags were not altered\n+    BOOST_CHECK_EQUAL(n3->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+    BOOST_CHECK_EQUAL(head.second.Next(), &(*n3));\n+    BOOST_CHECK_EQUAL(n3->second.Next(), nullptr);\n+\n+    // Delete n3\n+    // head->nullptr\n+    nodes.erase(n3);",
      "path": "src/test/coinscachepair_tests.cpp",
      "position": 127,
      "original_position": 120,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "6508bdfe437100a10be3730cefdb26efa5b5ad37",
      "in_reply_to_id": 1658824573,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "same, it seems to me that it's not the head that's tested, but its next pointer",
      "created_at": "2024-06-29T19:47:13Z",
      "updated_at": "2024-06-29T21:02:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1659968285",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659968285"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 127,
      "original_line": 127,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659971494",
      "pull_request_review_id": 2149804075,
      "id": 1659971494,
      "node_id": "PRRC_kwDOABII585i8Sem",
      "diff_hunk": "@@ -0,0 +1,189 @@\n+// Copyright (c) 2024-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <coins.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <list>\n+\n+BOOST_AUTO_TEST_SUITE(coinscachepair_tests)\n+\n+static constexpr auto NUM_NODES{4};\n+\n+std::list<CoinsCachePair> CreatePairs(CoinsCachePair& head)\n+{\n+    std::list<CoinsCachePair> nodes;\n+    for (auto i{0}; i < NUM_NODES; ++i) {\n+        nodes.emplace_front();\n+\n+        auto node{nodes.begin()};\n+        node->second.AddFlags(CCoinsCacheEntry::DIRTY, *node, head);",
      "path": "src/test/coinscachepair_tests.cpp",
      "position": 22,
      "original_position": 22,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "f5443052bf5db66c922e9239344afcb07f486070",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "so this basically inserts \"in the middle\" of the linked list all the time, i.e. not at the beginning or the end, right?\r\nI also find that quite confusing, i.e.\r\n```\r\nhead <-> newest node <-> second newest <-> third newest <-> oldest node -> nullptr\r\n```\r\n\r\nwhat if we iterated the initialized nodes backwards so that they reflect the order of insertion, something like:\r\n```C++\r\nstd::list<CoinsCachePair> CreatePairs(CoinsCachePair& head)\r\n{\r\n    std::list<CoinsCachePair> nodes(NUM_NODES);\r\n    for (auto it = nodes.rbegin(); it != nodes.rend(); ++it) {\r\n        it->second.AddFlags(CCoinsCacheEntry::DIRTY, *it, head);\r\n\r\n        BOOST_CHECK_EQUAL(it->second.GetFlags(), CCoinsCacheEntry::DIRTY);\r\n        BOOST_CHECK_EQUAL(head.second.Next(), &(*it));\r\n        BOOST_CHECK_EQUAL(it->second.Next(), it == nodes.rbegin() ? nullptr : &(*std::prev(it)));\r\n    }\r\n    return nodes;\r\n}\r\n```",
      "created_at": "2024-06-29T20:17:33Z",
      "updated_at": "2024-06-29T21:02:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1659971494",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659971494"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 22,
      "original_line": 22,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659976243",
      "pull_request_review_id": 2149804075,
      "id": 1659976243,
      "node_id": "PRRC_kwDOABII585i8Toz",
      "diff_hunk": "@@ -127,9 +151,49 @@ struct CCoinsCacheEntry\n         FRESH = (1 << 1),\n     };\n \n-    CCoinsCacheEntry() : flags(0) {}\n-    explicit CCoinsCacheEntry(Coin&& coin_) : coin(std::move(coin_)), flags(0) {}\n-    CCoinsCacheEntry(Coin&& coin_, unsigned char flag) : coin(std::move(coin_)), flags(flag) {}\n+    //! Adding a flag also requires a self reference to the pair that contains\n+    //! this entry in the CCoinsCache map and a reference to the head of the\n+    //! flagged pair linked list.\n+    inline void AddFlags(uint8_t flags, CoinsCachePair& self, CoinsCachePair& head)\n+    {\n+        if (!m_flags && flags) {\n+            m_prev = &head;\n+            m_next = head.second.m_next;\n+            if (m_next) m_next->second.m_prev = &self;\n+            head.second.m_next = &self;",
      "path": "src/coins.h",
      "position": null,
      "original_position": 57,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "c36363f6b24c7ab2afe198d9855f507ddf096e1f",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm still thinking about this part, it's basically a static method that doesn't need `this`, which seems to indicate to me that it might be misplaced:\r\n```C++\r\n    inline void AddFlags(uint8_t flags, CoinsCachePair& self, CoinsCachePair& head)\r\n    {\r\n        if (!m_flags && flags) {\r\n            AddToList(self, head);\r\n        }\r\n        m_flags |= flags;\r\n    }\r\n    static inline void AddToList(CoinsCachePair& self, CoinsCachePair& head) {\r\n        self.second.m_prev = &head;\r\n        self.second.m_next = head.second.m_next;\r\n        if (head.second.m_next) head.second.m_next->second.m_prev = &self;\r\n        head.second.m_next = &self;\r\n    }\r\n```\r\nNo recommendation yet, just thinking out loud...",
      "created_at": "2024-06-29T21:00:26Z",
      "updated_at": "2024-06-30T07:02:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1659976243",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1659976243"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": 160,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 163,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1660017722",
      "pull_request_review_id": 2149900292,
      "id": 1660017722,
      "node_id": "PRRC_kwDOABII585i8dw6",
      "diff_hunk": "@@ -587,7 +587,7 @@ static size_t InsertCoinsMapEntry(CCoinsMap& map, CAmount value, char flags)\n     }\n     assert(flags != NO_ENTRY);\n     CCoinsCacheEntry entry;\n-    entry.flags = flags;",
      "path": "src/test/coins_tests.cpp",
      "position": 35,
      "original_position": 4,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "d92dc3e21c2561e61b164a318d9c412d7fd88f2a",
      "in_reply_to_id": 1659956700,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It isn't because entry is constructed the line above, and we know from default constructor `flags` will be initialized to `0`. So `0 | flags` is same as `flags`.",
      "created_at": "2024-06-29T21:48:22Z",
      "updated_at": "2024-06-29T21:48:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1660017722",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1660017722"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 590,
      "original_line": 590,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1660083440",
      "pull_request_review_id": 2149962405,
      "id": 1660083440,
      "node_id": "PRRC_kwDOABII585i8tzw",
      "diff_hunk": "@@ -587,7 +587,7 @@ static size_t InsertCoinsMapEntry(CCoinsMap& map, CAmount value, char flags)\n     }\n     assert(flags != NO_ENTRY);\n     CCoinsCacheEntry entry;\n-    entry.flags = flags;",
      "path": "src/test/coins_tests.cpp",
      "position": 35,
      "original_position": 4,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "d92dc3e21c2561e61b164a318d9c412d7fd88f2a",
      "in_reply_to_id": 1659956700,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Indeed, same for line 130",
      "created_at": "2024-06-30T06:40:11Z",
      "updated_at": "2024-06-30T06:40:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1660083440",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1660083440"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 590,
      "original_line": 590,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1660086532",
      "pull_request_review_id": 2149965342,
      "id": 1660086532,
      "node_id": "PRRC_kwDOABII585i8ukE",
      "diff_hunk": "@@ -103,8 +106,29 @@ class Coin\n  */\n struct CCoinsCacheEntry\n {\n+private:\n+    /**\n+     * These are used to create a doubly linked list of flagged entries.\n+     * They are set in AddFlags and unset in ClearFlags.\n+     * A flagged entry is any entry that is either DIRTY, FRESH, or both.\n+     *\n+     * DIRTY entries are tracked so that only modified entries can be passed to\n+     * the parent cache for batch writing. This is a performance optimization\n+     * compared to giving all entries in the cache to the parent and having the\n+     * parent scan for only modified entries.\n+     *\n+     * FRESH-but-not-DIRTY coins can not occur in practice, since that would\n+     * mean a spent coin exists in the parent CCoinsView and not in the child\n+     * CCoinsViewCache. Nevertheless, if a spent coin is retrieved from the\n+     * parent cache, the FRESH-but-not-DIRTY coin will be tracked by the linked\n+     * list and deleted when Sync or Flush is called on the CCoinsViewCache.\n+     */\n+    CoinsCachePair* m_prev{nullptr};",
      "path": "src/coins.h",
      "position": null,
      "original_position": 31,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "c36363f6b24c7ab2afe198d9855f507ddf096e1f",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not sure if it helps, just an observation: `m_prev` only uses `.second`, so it might as well be a `CCoinsCacheEntry*`\r\n```patch\r\ndiff --git a/src/coins.h b/src/coins.h\r\n--- a/src/coins.h\t(revision c36363f6b24c7ab2afe198d9855f507ddf096e1f)\r\n+++ b/src/coins.h\t(date 1719730674870)\r\n@@ -123,7 +123,7 @@\r\n      * parent cache, the FRESH-but-not-DIRTY coin will be tracked by the linked\r\n      * list and deleted when Sync or Flush is called on the CCoinsViewCache.\r\n      */\r\n-    CoinsCachePair* m_prev{nullptr};\r\n+    CCoinsCacheEntry* m_prev{nullptr};\r\n     CoinsCachePair* m_next{nullptr};\r\n     uint8_t m_flags{0};\r\n \r\n@@ -157,9 +157,9 @@\r\n     inline void AddFlags(uint8_t flags, CoinsCachePair& self, CoinsCachePair& head)\r\n     {\r\n         if (!m_flags && flags) {\r\n-            m_prev = &head;\r\n+            m_prev = &head.second;\r\n             m_next = head.second.m_next;\r\n-            if (m_next) m_next->second.m_prev = &self;\r\n+            if (m_next) m_next->second.m_prev = &self.second;\r\n             head.second.m_next = &self;\r\n         }\r\n         m_flags |= flags;\r\n@@ -168,8 +168,9 @@\r\n     {\r\n         if (m_flags) {\r\n             if (m_next) m_next->second.m_prev = m_prev;\r\n-            m_prev->second.m_next = m_next;\r\n-            m_prev = m_next = nullptr;\r\n+            m_prev->m_next = m_next;\r\n+            m_prev = nullptr;\r\n+            m_next = nullptr;\r\n         }\r\n         m_flags = 0;\r\n     }\r\n```",
      "created_at": "2024-06-30T07:00:57Z",
      "updated_at": "2024-06-30T07:12:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1660086532",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1660086532"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 126,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1660182664",
      "pull_request_review_id": 2150053762,
      "id": 1660182664,
      "node_id": "PRRC_kwDOABII585i9GCI",
      "diff_hunk": "@@ -127,9 +151,49 @@ struct CCoinsCacheEntry\n         FRESH = (1 << 1),\n     };\n \n-    CCoinsCacheEntry() : flags(0) {}\n-    explicit CCoinsCacheEntry(Coin&& coin_) : coin(std::move(coin_)), flags(0) {}\n-    CCoinsCacheEntry(Coin&& coin_, unsigned char flag) : coin(std::move(coin_)), flags(flag) {}\n+    //! Adding a flag also requires a self reference to the pair that contains\n+    //! this entry in the CCoinsCache map and a reference to the head of the\n+    //! flagged pair linked list.\n+    inline void AddFlags(uint8_t flags, CoinsCachePair& self, CoinsCachePair& head)\n+    {\n+        if (!m_flags && flags) {\n+            m_prev = &head;\n+            m_next = head.second.m_next;\n+            if (m_next) m_next->second.m_prev = &self;\n+            head.second.m_next = &self;\n+        }\n+        m_flags |= flags;\n+    }\n+    inline void ClearFlags()\n+    {\n+        if (m_flags) {\n+            if (m_next) m_next->second.m_prev = m_prev;\n+            m_prev->second.m_next = m_next;\n+            m_prev = m_next = nullptr;\n+        }\n+        m_flags = 0;\n+    }\n+    inline uint8_t GetFlags() const { return m_flags; }\n+    inline bool IsDirty() const { return m_flags & CCoinsCacheEntry::DIRTY; }\n+    inline bool IsFresh() const { return m_flags & CCoinsCacheEntry::FRESH; }",
      "path": "src/coins.h",
      "position": null,
      "original_position": 72,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "c36363f6b24c7ab2afe198d9855f507ddf096e1f",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "we're inside `CCoinsCacheEntry`, might as well omit the prefix:\r\n```suggestion\r\n    inline bool IsDirty() const { return m_flags & DIRTY; }\r\n    inline bool IsFresh() const { return m_flags & FRESH; }\r\n```",
      "created_at": "2024-06-30T13:35:01Z",
      "updated_at": "2024-06-30T14:18:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1660182664",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1660182664"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": 177,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 178,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1660183610",
      "pull_request_review_id": 2150053762,
      "id": 1660183610,
      "node_id": "PRRC_kwDOABII585i9GQ6",
      "diff_hunk": "@@ -178,67 +181,66 @@ void CCoinsViewCache::SetBestBlock(const uint256 &hashBlockIn) {\n     hashBlock = hashBlockIn;\n }\n \n-bool CCoinsViewCache::BatchWrite(CCoinsMap &mapCoins, const uint256 &hashBlockIn, bool erase) {\n-    for (CCoinsMap::iterator it = mapCoins.begin();\n-            it != mapCoins.end();\n-            it = erase ? mapCoins.erase(it) : std::next(it)) {\n+bool CCoinsViewCache::BatchWrite(CoinsCachePair *pairs, const uint256 &hashBlockIn, bool will_erase) {\n+    for (auto it{pairs};\n+            it != nullptr;\n+            it = it->second.Next(/*clear_flags=*/will_erase || !it->second.coin.IsSpent())) { // Keep flags for spent coins so they can be erased in Sync",
      "path": "src/coins.cpp",
      "position": 80,
      "original_position": 80,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "c36363f6b24c7ab2afe198d9855f507ddf096e1f",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: it seems to me we're really pushing it with the loop iteration + deletion here, could we do the deletion at the end of the loop instead (like in `src/txdb.cpp`) to have a cleaner separation or the responsibilities? It may make the `Next` method cleaner as well (I know it was similar before as well).",
      "created_at": "2024-06-30T13:39:52Z",
      "updated_at": "2024-07-01T08:45:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1660183610",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1660183610"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 187,
      "original_line": 187,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1660184345",
      "pull_request_review_id": 2150053762,
      "id": 1660184345,
      "node_id": "PRRC_kwDOABII585i9GcZ",
      "diff_hunk": "@@ -0,0 +1,189 @@\n+// Copyright (c) 2024-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <coins.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <list>\n+\n+BOOST_AUTO_TEST_SUITE(coinscachepair_tests)\n+\n+static constexpr auto NUM_NODES{4};\n+\n+std::list<CoinsCachePair> CreatePairs(CoinsCachePair& head)\n+{\n+    std::list<CoinsCachePair> nodes;\n+    for (auto i{0}; i < NUM_NODES; ++i) {\n+        nodes.emplace_front();\n+\n+        auto node{nodes.begin()};\n+        node->second.AddFlags(CCoinsCacheEntry::DIRTY, *node, head);\n+\n+        BOOST_CHECK_EQUAL(node->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+        BOOST_CHECK_EQUAL(head.second.Next(), &(*node));\n+\n+        if (i > 0) {\n+            BOOST_CHECK_EQUAL(&(*std::next(node)), node->second.Next());\n+        } else {\n+            BOOST_CHECK_EQUAL(nullptr, node->second.Next());\n+        }\n+    }\n+    return nodes;\n+}\n+\n+BOOST_AUTO_TEST_CASE(linked_list_iteration)\n+{\n+    CoinsCachePair head;\n+    auto nodes{CreatePairs(head)};\n+\n+    // Check iterating through pairs is identical to iterating through a list\n+    auto node{head.second.Next()};\n+    for (const auto& expected : nodes) {\n+        BOOST_CHECK_EQUAL(&expected, node);\n+        node = node->second.Next();\n+    }\n+",
      "path": "src/test/coinscachepair_tests.cpp",
      "position": 48,
      "original_position": 47,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "c36363f6b24c7ab2afe198d9855f507ddf096e1f",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "after iteration we may still have elements left in `node`, right? Can we assert that we don't?",
      "created_at": "2024-06-30T13:43:01Z",
      "updated_at": "2024-06-30T14:18:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1660184345",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1660184345"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 48,
      "original_line": 48,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1660330315",
      "pull_request_review_id": 2150218241,
      "id": 1660330315,
      "node_id": "PRRC_kwDOABII585i9qFL",
      "diff_hunk": "@@ -283,7 +283,7 @@ bool CCoinsViewCache::Sync()\n void CCoinsViewCache::Uncache(const COutPoint& hash)\n {\n     CCoinsMap::iterator it = cacheCoins.find(hash);\n-    if (it != cacheCoins.end() && it->second.flags == 0) {\n+    if (it != cacheCoins.end() && it->second.GetFlags() == 0) {",
      "path": "src/coins.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "7f66953d5b72abdd8e5ea3b992d7b4cf02c03e0a",
      "in_reply_to_id": 1659952944,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This one is problematic though https://github.com/bitcoin/bitcoin/pull/28280/files#diff-3d0856e8b7f136c588b229e0cbd3b2e2c309cd097ade0879521daba4e1bb2a33L609. That would be a big change if we couldn't get the flags.",
      "created_at": "2024-06-30T23:33:44Z",
      "updated_at": "2024-06-30T23:33:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1660330315",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1660330315"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 286,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1660341669",
      "pull_request_review_id": 2150233002,
      "id": 1660341669,
      "node_id": "PRRC_kwDOABII585i9s2l",
      "diff_hunk": "@@ -0,0 +1,189 @@\n+// Copyright (c) 2024-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <coins.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <list>\n+\n+BOOST_AUTO_TEST_SUITE(coinscachepair_tests)\n+\n+static constexpr auto NUM_NODES{4};\n+\n+std::list<CoinsCachePair> CreatePairs(CoinsCachePair& head)\n+{\n+    std::list<CoinsCachePair> nodes;\n+    for (auto i{0}; i < NUM_NODES; ++i) {\n+        nodes.emplace_front();\n+\n+        auto node{nodes.begin()};\n+        node->second.AddFlags(CCoinsCacheEntry::DIRTY, *node, head);\n+\n+        BOOST_CHECK_EQUAL(node->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+        BOOST_CHECK_EQUAL(head.second.Next(), &(*node));\n+\n+        if (i > 0) {\n+            BOOST_CHECK_EQUAL(&(*std::next(node)), node->second.Next());\n+        } else {\n+            BOOST_CHECK_EQUAL(nullptr, node->second.Next());\n+        }\n+    }\n+    return nodes;\n+}\n+\n+BOOST_AUTO_TEST_CASE(linked_list_iteration)\n+{\n+    CoinsCachePair head;\n+    auto nodes{CreatePairs(head)};\n+\n+    // Check iterating through pairs is identical to iterating through a list\n+    auto node{head.second.Next()};\n+    for (const auto& expected : nodes) {\n+        BOOST_CHECK_EQUAL(&expected, node);\n+        node = node->second.Next();\n+    }\n+",
      "path": "src/test/coinscachepair_tests.cpp",
      "position": 48,
      "original_position": 47,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "c36363f6b24c7ab2afe198d9855f507ddf096e1f",
      "in_reply_to_id": 1660184345,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2024-07-01T00:27:44Z",
      "updated_at": "2024-07-01T00:27:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1660341669",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1660341669"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 48,
      "original_line": 48,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1660341788",
      "pull_request_review_id": 2150233154,
      "id": 1660341788,
      "node_id": "PRRC_kwDOABII585i9s4c",
      "diff_hunk": "@@ -103,8 +106,29 @@ class Coin\n  */\n struct CCoinsCacheEntry\n {\n+private:\n+    /**\n+     * These are used to create a doubly linked list of flagged entries.\n+     * They are set in AddFlags and unset in ClearFlags.\n+     * A flagged entry is any entry that is either DIRTY, FRESH, or both.\n+     *\n+     * DIRTY entries are tracked so that only modified entries can be passed to\n+     * the parent cache for batch writing. This is a performance optimization\n+     * compared to giving all entries in the cache to the parent and having the\n+     * parent scan for only modified entries.\n+     *\n+     * FRESH-but-not-DIRTY coins can not occur in practice, since that would\n+     * mean a spent coin exists in the parent CCoinsView and not in the child\n+     * CCoinsViewCache. Nevertheless, if a spent coin is retrieved from the\n+     * parent cache, the FRESH-but-not-DIRTY coin will be tracked by the linked\n+     * list and deleted when Sync or Flush is called on the CCoinsViewCache.\n+     */\n+    CoinsCachePair* m_prev{nullptr};",
      "path": "src/coins.h",
      "position": null,
      "original_position": 31,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "c36363f6b24c7ab2afe198d9855f507ddf096e1f",
      "in_reply_to_id": 1660086532,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done, nice catch!",
      "created_at": "2024-07-01T00:28:10Z",
      "updated_at": "2024-07-01T00:28:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1660341788",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1660341788"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 126,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1660341870",
      "pull_request_review_id": 2150233272,
      "id": 1660341870,
      "node_id": "PRRC_kwDOABII585i9s5u",
      "diff_hunk": "@@ -0,0 +1,189 @@\n+// Copyright (c) 2024-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <coins.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <list>\n+\n+BOOST_AUTO_TEST_SUITE(coinscachepair_tests)\n+\n+static constexpr auto NUM_NODES{4};\n+\n+std::list<CoinsCachePair> CreatePairs(CoinsCachePair& head)\n+{\n+    std::list<CoinsCachePair> nodes;\n+    for (auto i{0}; i < NUM_NODES; ++i) {\n+        nodes.emplace_front();\n+\n+        auto node{nodes.begin()};\n+        node->second.AddFlags(CCoinsCacheEntry::DIRTY, *node, head);\n+\n+        BOOST_CHECK_EQUAL(node->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+        BOOST_CHECK_EQUAL(head.second.Next(), &(*node));\n+\n+        if (i > 0) {\n+            BOOST_CHECK_EQUAL(&(*std::next(node)), node->second.Next());\n+        } else {\n+            BOOST_CHECK_EQUAL(nullptr, node->second.Next());\n+        }\n+    }\n+    return nodes;\n+}\n+\n+BOOST_AUTO_TEST_CASE(linked_list_iteration)\n+{\n+    CoinsCachePair head;\n+    auto nodes{CreatePairs(head)};\n+\n+    // Check iterating through pairs is identical to iterating through a list\n+    auto node{head.second.Next()};\n+    for (const auto& expected : nodes) {\n+        BOOST_CHECK_EQUAL(&expected, node);\n+        node = node->second.Next();\n+    }\n+\n+    // Check iterating through pairs is identical to iterating through a list\n+    // Clear the flags during iteration\n+    node = head.second.Next();\n+    for (const auto& expected : nodes) {\n+        BOOST_CHECK_EQUAL(&expected, node);\n+        node = node->second.Next(/*clear_flags=*/true);\n+    }\n+    // Check that head is empty\n+    BOOST_CHECK_EQUAL(head.second.Next(), nullptr);\n+\n+    // Delete the nodes from the list to make sure there are no dangling pointers\n+    for (auto it{nodes.begin()}; it != nodes.end(); it = nodes.erase(it)) {\n+        BOOST_CHECK_EQUAL(it->second.GetFlags(), 0);\n+        BOOST_CHECK_EQUAL(it->second.Next(), nullptr);\n+    }\n+}\n+\n+BOOST_AUTO_TEST_CASE(linked_list_iterate_erase)\n+{\n+    CoinsCachePair head;\n+    auto nodes{CreatePairs(head)};\n+\n+    // Check iterating through pairs is identical to iterating through a list\n+    // Erase the nodes as we iterate through, but don't clear flags\n+    // The flags will be cleared by the CCoinsCacheEntry's destructor\n+    auto node{head.second.Next()};\n+    for (auto expected{nodes.begin()}; expected != nodes.end(); expected = nodes.erase(expected)) {\n+        BOOST_CHECK_EQUAL(&(*expected), node);\n+        node = node->second.Next(/*clear_flags=*/false);\n+    }\n+    // Check that head is empty",
      "path": "src/test/coinscachepair_tests.cpp",
      "position": null,
      "original_position": 78,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "f5443052bf5db66c922e9239344afcb07f486070",
      "in_reply_to_id": 1659968052,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Updated comment.",
      "created_at": "2024-07-01T00:28:31Z",
      "updated_at": "2024-07-01T00:28:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1660341870",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1660341870"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 78,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1660342034",
      "pull_request_review_id": 2150233554,
      "id": 1660342034,
      "node_id": "PRRC_kwDOABII585i9s8S",
      "diff_hunk": "@@ -0,0 +1,189 @@\n+// Copyright (c) 2024-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <coins.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <list>\n+\n+BOOST_AUTO_TEST_SUITE(coinscachepair_tests)\n+\n+static constexpr auto NUM_NODES{4};\n+\n+std::list<CoinsCachePair> CreatePairs(CoinsCachePair& head)\n+{\n+    std::list<CoinsCachePair> nodes;\n+    for (auto i{0}; i < NUM_NODES; ++i) {\n+        nodes.emplace_front();\n+\n+        auto node{nodes.begin()};\n+        node->second.AddFlags(CCoinsCacheEntry::DIRTY, *node, head);\n+\n+        BOOST_CHECK_EQUAL(node->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+        BOOST_CHECK_EQUAL(head.second.Next(), &(*node));\n+\n+        if (i > 0) {\n+            BOOST_CHECK_EQUAL(&(*std::next(node)), node->second.Next());\n+        } else {\n+            BOOST_CHECK_EQUAL(nullptr, node->second.Next());\n+        }\n+    }\n+    return nodes;\n+}\n+\n+BOOST_AUTO_TEST_CASE(linked_list_iteration)\n+{\n+    CoinsCachePair head;\n+    auto nodes{CreatePairs(head)};\n+\n+    // Check iterating through pairs is identical to iterating through a list\n+    auto node{head.second.Next()};\n+    for (const auto& expected : nodes) {\n+        BOOST_CHECK_EQUAL(&expected, node);\n+        node = node->second.Next();\n+    }\n+\n+    // Check iterating through pairs is identical to iterating through a list\n+    // Clear the flags during iteration\n+    node = head.second.Next();\n+    for (const auto& expected : nodes) {\n+        BOOST_CHECK_EQUAL(&expected, node);\n+        node = node->second.Next(/*clear_flags=*/true);\n+    }\n+    // Check that head is empty\n+    BOOST_CHECK_EQUAL(head.second.Next(), nullptr);\n+\n+    // Delete the nodes from the list to make sure there are no dangling pointers\n+    for (auto it{nodes.begin()}; it != nodes.end(); it = nodes.erase(it)) {\n+        BOOST_CHECK_EQUAL(it->second.GetFlags(), 0);",
      "path": "src/test/coinscachepair_tests.cpp",
      "position": 62,
      "original_position": 60,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "f5443052bf5db66c922e9239344afcb07f486070",
      "in_reply_to_id": 1659967194,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Mentioned in another comment, we need GetFlags or we will have to change a lot of test code in `coins_tests.cpp`.",
      "created_at": "2024-07-01T00:29:20Z",
      "updated_at": "2024-07-01T00:29:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1660342034",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1660342034"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 62,
      "original_line": 62,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1660342135",
      "pull_request_review_id": 2150233713,
      "id": 1660342135,
      "node_id": "PRRC_kwDOABII585i9s93",
      "diff_hunk": "@@ -108,10 +108,13 @@ void CCoinsViewCache::AddCoin(const COutPoint &outpoint, Coin&& coin, bool possi\n \n void CCoinsViewCache::EmplaceCoinInternalDANGER(COutPoint&& outpoint, Coin&& coin) {\n     cachedCoinsUsage += coin.DynamicMemoryUsage();\n-    cacheCoins.emplace(\n+    auto [it, inserted] = cacheCoins.emplace(\n         std::piecewise_construct,\n         std::forward_as_tuple(std::move(outpoint)),\n-        std::forward_as_tuple(std::move(coin), CCoinsCacheEntry::DIRTY));\n+        std::forward_as_tuple(std::move(coin)));\n+    if (inserted) {",
      "path": "src/coins.cpp",
      "position": 50,
      "original_position": 10,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "8ca27c7bb60f1d0042806010e60478e5190ddc52",
      "in_reply_to_id": 1659957585,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Added a comment in the commit message.",
      "created_at": "2024-07-01T00:29:47Z",
      "updated_at": "2024-07-01T00:29:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1660342135",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1660342135"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 115,
      "original_line": 115,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1660342186",
      "pull_request_review_id": 2150233792,
      "id": 1660342186,
      "node_id": "PRRC_kwDOABII585i9s-q",
      "diff_hunk": "@@ -127,6 +127,8 @@ struct CCoinsCacheEntry\n         FRESH = (1 << 1),\n     };\n \n+    inline void AddFlags(unsigned int flags) { flags |= flags; }",
      "path": "src/coins.h",
      "position": null,
      "original_position": 4,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "d92dc3e21c2561e61b164a318d9c412d7fd88f2a",
      "in_reply_to_id": 1659956441,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2024-07-01T00:29:59Z",
      "updated_at": "2024-07-01T00:30:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1660342186",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1660342186"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 130,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1660342456",
      "pull_request_review_id": 2150234201,
      "id": 1660342456,
      "node_id": "PRRC_kwDOABII585i9tC4",
      "diff_hunk": "@@ -130,6 +157,56 @@ struct CCoinsCacheEntry\n     CCoinsCacheEntry() : flags(0) {}\n     explicit CCoinsCacheEntry(Coin&& coin_) : coin(std::move(coin_)), flags(0) {}\n     CCoinsCacheEntry(Coin&& coin_, unsigned char flag) : coin(std::move(coin_)), flags(flag) {}\n+    ~CCoinsCacheEntry()\n+    {\n+        // We must always clear the flags when destroying this to remove it from\n+        // the flagged linked list\n+        ClearFlags();\n+    }\n+\n+    //! Adding a flag also requires a self reference to the pair that contains\n+    //! this entry in the CCoinsCache map and a reference to the head of the\n+    //! flagged pair linked list.\n+    inline void AddFlags(uint8_t flags, CoinsCachePair& self, CoinsCachePair& head)\n+    {\n+        if (flags == 0) return;\n+        if (m_flags != 0) {\n+            m_flags |= flags;\n+            return;\n+        }\n+        m_prev = &head;\n+        m_next = head.second.m_next;\n+        head.second.m_next = &self;\n+        if (m_next != nullptr) {\n+            m_next->second.m_prev = &self;\n+        }\n+        m_flags = flags;\n+    }\n+\n+    inline void ClearFlags()\n+    {\n+        if (m_flags == 0) return;\n+        m_prev->second.m_next = m_next;\n+        if (m_next != nullptr) {\n+            m_next->second.m_prev = m_prev;\n+        }\n+        m_prev = nullptr;\n+        m_next = nullptr;\n+        m_flags = 0;\n+    }\n+\n+    inline uint8_t GetFlags() const { return m_flags; }\n+\n+    //! Get the next entry in the flagged linked list, optionally removing the\n+    //! current entry and clearing the flags.\n+    inline CoinsCachePair* Next(bool clear_flags = false)",
      "path": "src/coins.h",
      "position": null,
      "original_position": 87,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "0a2bc92b0c642ae72a10f687e0758c59c8ffd79c",
      "in_reply_to_id": 1658694832,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The std lib uses this pattern though, with `std::unordered_map::erase`. It mutates and returns next. Surely we should be following std lib conventions, no?",
      "created_at": "2024-07-01T00:31:11Z",
      "updated_at": "2024-07-01T00:31:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1660342456",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1660342456"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 183,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1660342534",
      "pull_request_review_id": 2150234326,
      "id": 1660342534,
      "node_id": "PRRC_kwDOABII585i9tEG",
      "diff_hunk": "@@ -0,0 +1,186 @@\n+// Copyright (c) 2024-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <coins.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <list>\n+\n+BOOST_AUTO_TEST_SUITE(coinscachepair_tests)\n+\n+static constexpr auto NUM_NODES{4};\n+\n+std::list<CoinsCachePair> CreatePairs(CoinsCachePair& head)\n+{\n+    std::list<CoinsCachePair> nodes;\n+    for (auto i{0}; i < NUM_NODES; ++i) {\n+        nodes.emplace_front();\n+\n+        auto node{nodes.begin()};\n+        node->second.AddFlags(CCoinsCacheEntry::DIRTY, *node, head);\n+\n+        BOOST_CHECK_EQUAL(node->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+        BOOST_CHECK_EQUAL(head.second.Next(), &(*node));\n+\n+        if (i > 0) {\n+            BOOST_CHECK_EQUAL(&(*std::next(node)), node->second.Next());\n+        } else {\n+            BOOST_CHECK_EQUAL(nullptr, node->second.Next());\n+        }\n+    }\n+    return nodes;\n+}\n+\n+BOOST_AUTO_TEST_CASE(linked_list_iteration)\n+{\n+    CoinsCachePair head;\n+    auto nodes{CreatePairs(head)};\n+\n+    // Check iterating through pairs is identical to iterating through a list\n+    auto lit{nodes.begin()};\n+    for (auto it{head.second.Next()}; it != nullptr; it = it->second.Next(/*clear_flags=*/false), ++lit) {\n+        BOOST_CHECK_EQUAL(&(*lit), it);\n+    }\n+\n+    // Check iterating through pairs is identical to iterating through a list\n+    // Clear the flags during iteration\n+    lit = nodes.begin();\n+    for (auto it{head.second.Next()}; it != nullptr; it = it->second.Next(/*clear_flags=*/true), ++lit) {\n+        BOOST_CHECK_EQUAL(&(*lit), it);\n+    }\n+    // Check that head is empty\n+    BOOST_CHECK_EQUAL(head.second.Next(), nullptr);\n+\n+    // Delete the nodes from the list to make sure there are no dangling pointers\n+    for (auto it{nodes.begin()}; it != nodes.end(); it = nodes.erase(it)) {\n+        BOOST_CHECK_EQUAL(it->second.GetFlags(), 0);\n+        BOOST_CHECK_EQUAL(it->second.Next(), nullptr);\n+    }\n+}\n+\n+BOOST_AUTO_TEST_CASE(linked_list_iterate_erase)\n+{\n+    CoinsCachePair head;\n+    auto nodes{CreatePairs(head)};\n+\n+    // Check iterating through pairs is identical to iterating through a list\n+    // Erase the nodes as we iterate through, but don't clear flags\n+    // The flags will be cleared by the CCoinsCacheEntry's destructor\n+    auto lit{nodes.begin()};\n+    for (auto it{head.second.Next()}; it != nullptr; it = it->second.Next(/*clear_flags=*/false), lit = nodes.erase(lit)) {\n+        BOOST_CHECK_EQUAL(&(*lit), it);\n+    }\n+    // Check that head is empty\n+    BOOST_CHECK_EQUAL(head.second.Next(), nullptr);\n+}\n+\n+BOOST_AUTO_TEST_CASE(linked_list_random_deletion)\n+{\n+    CoinsCachePair head;\n+    auto nodes{CreatePairs(head)};\n+\n+    // Create linked list head->n1->n2->n3->n4->nullptr\n+    auto n1{nodes.begin()};\n+    auto n2{std::next(n1)};\n+    auto n3{std::next(n2)};\n+    auto n4{std::next(n3)};\n+\n+    // Delete n2\n+    // head->n1->n3->n4->nullptr\n+    nodes.erase(n2);\n+    // Check that n1 now points to n3, and n3 still points to n4\n+    // Also check that flags were not altered\n+    BOOST_CHECK_EQUAL(n1->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+    BOOST_CHECK_EQUAL(n1->second.Next(), &(*n3));\n+    BOOST_CHECK_EQUAL(n3->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+    BOOST_CHECK_EQUAL(n3->second.Next(), &(*n4));\n+\n+    // Delete n1\n+    // head->n3->n4->nullptr\n+    nodes.erase(n1);\n+    // Check that head now points to n3, and n3 still points to n4\n+    // Also check that flags were not altered\n+    BOOST_CHECK_EQUAL(n3->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+    BOOST_CHECK_EQUAL(head.second.Next(), &(*n3));\n+    BOOST_CHECK_EQUAL(n3->second.Next(), &(*n4));\n+\n+    // Delete n4\n+    // head->n3->nullptr\n+    nodes.erase(n4);\n+    // Check that head still points to n3, and n3 points to nullptr\n+    // Also check that flags were not altered\n+    BOOST_CHECK_EQUAL(n3->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+    BOOST_CHECK_EQUAL(head.second.Next(), &(*n3));\n+    BOOST_CHECK_EQUAL(n3->second.Next(), nullptr);\n+\n+    // Delete n3\n+    // head->nullptr\n+    nodes.erase(n3);",
      "path": "src/test/coinscachepair_tests.cpp",
      "position": 127,
      "original_position": 120,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "6508bdfe437100a10be3730cefdb26efa5b5ad37",
      "in_reply_to_id": 1658824573,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Updated comment.",
      "created_at": "2024-07-01T00:31:34Z",
      "updated_at": "2024-07-01T00:31:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1660342534",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1660342534"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 127,
      "original_line": 127,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1660680256",
      "pull_request_review_id": 2150771190,
      "id": 1660680256,
      "node_id": "PRRC_kwDOABII585i-_hA",
      "diff_hunk": "@@ -283,7 +283,7 @@ bool CCoinsViewCache::Sync()\n void CCoinsViewCache::Uncache(const COutPoint& hash)\n {\n     CCoinsMap::iterator it = cacheCoins.find(hash);\n-    if (it != cacheCoins.end() && it->second.flags == 0) {\n+    if (it != cacheCoins.end() && it->second.GetFlags() == 0) {",
      "path": "src/coins.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "7f66953d5b72abdd8e5ea3b992d7b4cf02c03e0a",
      "in_reply_to_id": 1659952944,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The flags seem like an implementation detail to me which we might not want to expose (we could have stored it in two booleans as well and the outside behavior shouldn't change), so usages such as:\r\n```C++\r\nflags = it->second.GetFlags();\r\n```\r\ncould become something like:\r\n```C++\r\nsetDirty(it->second.IsDirty());\r\nsetFresh(it->second.IsFresh());\r\n```",
      "created_at": "2024-07-01T08:36:49Z",
      "updated_at": "2024-07-02T13:27:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1660680256",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1660680256"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 286,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1660684697",
      "pull_request_review_id": 2150778532,
      "id": 1660684697,
      "node_id": "PRRC_kwDOABII585i_AmZ",
      "diff_hunk": "@@ -0,0 +1,189 @@\n+// Copyright (c) 2024-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <coins.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <list>\n+\n+BOOST_AUTO_TEST_SUITE(coinscachepair_tests)\n+\n+static constexpr auto NUM_NODES{4};\n+\n+std::list<CoinsCachePair> CreatePairs(CoinsCachePair& head)\n+{\n+    std::list<CoinsCachePair> nodes;\n+    for (auto i{0}; i < NUM_NODES; ++i) {\n+        nodes.emplace_front();\n+\n+        auto node{nodes.begin()};\n+        node->second.AddFlags(CCoinsCacheEntry::DIRTY, *node, head);\n+\n+        BOOST_CHECK_EQUAL(node->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+        BOOST_CHECK_EQUAL(head.second.Next(), &(*node));\n+\n+        if (i > 0) {\n+            BOOST_CHECK_EQUAL(&(*std::next(node)), node->second.Next());\n+        } else {\n+            BOOST_CHECK_EQUAL(nullptr, node->second.Next());\n+        }\n+    }\n+    return nodes;\n+}\n+\n+BOOST_AUTO_TEST_CASE(linked_list_iteration)\n+{\n+    CoinsCachePair head;\n+    auto nodes{CreatePairs(head)};\n+\n+    // Check iterating through pairs is identical to iterating through a list\n+    auto node{head.second.Next()};\n+    for (const auto& expected : nodes) {\n+        BOOST_CHECK_EQUAL(&expected, node);\n+        node = node->second.Next();\n+    }\n+\n+    // Check iterating through pairs is identical to iterating through a list\n+    // Clear the flags during iteration\n+    node = head.second.Next();\n+    for (const auto& expected : nodes) {\n+        BOOST_CHECK_EQUAL(&expected, node);\n+        node = node->second.Next(/*clear_flags=*/true);\n+    }\n+    // Check that head is empty\n+    BOOST_CHECK_EQUAL(head.second.Next(), nullptr);\n+\n+    // Delete the nodes from the list to make sure there are no dangling pointers\n+    for (auto it{nodes.begin()}; it != nodes.end(); it = nodes.erase(it)) {\n+        BOOST_CHECK_EQUAL(it->second.GetFlags(), 0);",
      "path": "src/test/coinscachepair_tests.cpp",
      "position": 62,
      "original_position": 60,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "f5443052bf5db66c922e9239344afcb07f486070",
      "in_reply_to_id": 1659967194,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'll leave it up to you of course, but the instances I found would be simpler as well:\r\n```C++\r\nBOOST_CHECK_EQUAL(n1.second.GetFlags(), CCoinsCacheEntry::DIRTY);\r\n```\r\nwould become\r\n```C++\r\nBOOST_CHECK(n1.second.IsDirty());\r\n```",
      "created_at": "2024-07-01T08:40:16Z",
      "updated_at": "2024-07-01T08:40:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1660684697",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1660684697"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 62,
      "original_line": 62,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1660694276",
      "pull_request_review_id": 2150794273,
      "id": 1660694276,
      "node_id": "PRRC_kwDOABII585i_C8E",
      "diff_hunk": "@@ -130,6 +157,56 @@ struct CCoinsCacheEntry\n     CCoinsCacheEntry() : flags(0) {}\n     explicit CCoinsCacheEntry(Coin&& coin_) : coin(std::move(coin_)), flags(0) {}\n     CCoinsCacheEntry(Coin&& coin_, unsigned char flag) : coin(std::move(coin_)), flags(flag) {}\n+    ~CCoinsCacheEntry()\n+    {\n+        // We must always clear the flags when destroying this to remove it from\n+        // the flagged linked list\n+        ClearFlags();\n+    }\n+\n+    //! Adding a flag also requires a self reference to the pair that contains\n+    //! this entry in the CCoinsCache map and a reference to the head of the\n+    //! flagged pair linked list.\n+    inline void AddFlags(uint8_t flags, CoinsCachePair& self, CoinsCachePair& head)\n+    {\n+        if (flags == 0) return;\n+        if (m_flags != 0) {\n+            m_flags |= flags;\n+            return;\n+        }\n+        m_prev = &head;\n+        m_next = head.second.m_next;\n+        head.second.m_next = &self;\n+        if (m_next != nullptr) {\n+            m_next->second.m_prev = &self;\n+        }\n+        m_flags = flags;\n+    }\n+\n+    inline void ClearFlags()\n+    {\n+        if (m_flags == 0) return;\n+        m_prev->second.m_next = m_next;\n+        if (m_next != nullptr) {\n+            m_next->second.m_prev = m_prev;\n+        }\n+        m_prev = nullptr;\n+        m_next = nullptr;\n+        m_flags = 0;\n+    }\n+\n+    inline uint8_t GetFlags() const { return m_flags; }\n+\n+    //! Get the next entry in the flagged linked list, optionally removing the\n+    //! current entry and clearing the flags.\n+    inline CoinsCachePair* Next(bool clear_flags = false)",
      "path": "src/coins.h",
      "position": null,
      "original_position": 87,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "0a2bc92b0c642ae72a10f687e0758c59c8ffd79c",
      "in_reply_to_id": 1658694832,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "ok, thanks for checking",
      "created_at": "2024-07-01T08:47:26Z",
      "updated_at": "2024-07-01T08:47:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1660694276",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1660694276"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 183,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1660700180",
      "pull_request_review_id": 2150803719,
      "id": 1660700180,
      "node_id": "PRRC_kwDOABII585i_EYU",
      "diff_hunk": "@@ -0,0 +1,193 @@\n+// Copyright (c) 2024-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <coins.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <list>\n+\n+BOOST_AUTO_TEST_SUITE(coinscachepair_tests)\n+\n+static constexpr auto NUM_NODES{4};\n+\n+std::list<CoinsCachePair> CreatePairs(CCoinsCacheEntry& head)\n+{\n+    std::list<CoinsCachePair> nodes;\n+    for (auto i{0}; i < NUM_NODES; ++i) {\n+        nodes.emplace_front();\n+\n+        auto node{nodes.begin()};\n+        node->second.AddFlags(CCoinsCacheEntry::DIRTY, *node, head);\n+\n+        BOOST_CHECK_EQUAL(node->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+        BOOST_CHECK_EQUAL(head.Next(), &(*node));\n+\n+        if (i > 0) {\n+            BOOST_CHECK_EQUAL(&(*std::next(node)), node->second.Next());\n+        } else {\n+            BOOST_CHECK_EQUAL(nullptr, node->second.Next());\n+        }\n+    }\n+    return nodes;\n+}\n+\n+BOOST_AUTO_TEST_CASE(linked_list_iteration)\n+{\n+    CCoinsCacheEntry head;\n+    auto nodes{CreatePairs(head)};\n+\n+    // Check iterating through pairs is identical to iterating through a list\n+    auto node{head.Next()};\n+    for (const auto& expected : nodes) {\n+        BOOST_CHECK_EQUAL(&expected, node);\n+        node = node->second.Next();\n+    }\n+    BOOST_CHECK_EQUAL(node, nullptr);\n+\n+    // Check iterating through pairs is identical to iterating through a list\n+    // Clear the flags during iteration\n+    node = head.Next();\n+    for (const auto& expected : nodes) {\n+        BOOST_CHECK_EQUAL(&expected, node);\n+        node = node->second.Next(/*clear_flags=*/true);\n+    }\n+    BOOST_CHECK_EQUAL(node, nullptr);\n+    // Check that head's next is empty\n+    BOOST_CHECK_EQUAL(head.Next(), nullptr);\n+\n+    // Delete the nodes from the list to make sure there are no dangling pointers\n+    for (auto it{nodes.begin()}; it != nodes.end(); it = nodes.erase(it)) {\n+        BOOST_CHECK_EQUAL(it->second.GetFlags(), 0);\n+        BOOST_CHECK_EQUAL(it->second.Next(), nullptr);\n+    }\n+}\n+\n+BOOST_AUTO_TEST_CASE(linked_list_iterate_erase)\n+{\n+    CCoinsCacheEntry head;\n+    auto nodes{CreatePairs(head)};\n+\n+    // Check iterating through pairs is identical to iterating through a list\n+    // Erase the nodes as we iterate through, but don't clear flags\n+    // The flags will be cleared by the CCoinsCacheEntry's destructor\n+    auto node{head.Next()};\n+    for (auto expected{nodes.begin()}; expected != nodes.end(); expected = nodes.erase(expected)) {\n+        BOOST_CHECK_EQUAL(&(*expected), node);\n+        node = node->second.Next(/*clear_flags=*/false);\n+    }\n+    BOOST_CHECK_EQUAL(node, nullptr);\n+\n+    // Check that head's next is empty\n+    BOOST_CHECK_EQUAL(head.Next(), nullptr);\n+}\n+\n+BOOST_AUTO_TEST_CASE(linked_list_random_deletion)\n+{\n+    CCoinsCacheEntry head;\n+    auto nodes{CreatePairs(head)};\n+\n+    // Create linked list head->n1->n2->n3->n4->nullptr\n+    auto n1{nodes.begin()};\n+    auto n2{std::next(n1)};\n+    auto n3{std::next(n2)};\n+    auto n4{std::next(n3)};\n+\n+    // Delete n2\n+    // head->n1->n3->n4->nullptr\n+    nodes.erase(n2);\n+    // Check that n1 now points to n3, and n3 still points to n4\n+    // Also check that flags were not altered\n+    BOOST_CHECK_EQUAL(n1->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+    BOOST_CHECK_EQUAL(n1->second.Next(), &(*n3));\n+    BOOST_CHECK_EQUAL(n3->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+    BOOST_CHECK_EQUAL(n3->second.Next(), &(*n4));\n+\n+    // Delete n1\n+    // head->n3->n4->nullptr\n+    nodes.erase(n1);\n+    // Check that head now points to n3, and n3 still points to n4\n+    // Also check that flags were not altered\n+    BOOST_CHECK_EQUAL(n3->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+    BOOST_CHECK_EQUAL(head.Next(), &(*n3));\n+    BOOST_CHECK_EQUAL(n3->second.Next(), &(*n4));\n+\n+    // Delete n4\n+    // head->n3->nullptr\n+    nodes.erase(n4);\n+    // Check that head still points to n3, and n3 points to nullptr\n+    // Also check that flags were not altered\n+    BOOST_CHECK_EQUAL(n3->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+    BOOST_CHECK_EQUAL(head.Next(), &(*n3));\n+    BOOST_CHECK_EQUAL(n3->second.Next(), nullptr);\n+\n+    // Delete n3\n+    // head->nullptr\n+    nodes.erase(n3);\n+    // Check that head's next now points to nullptr\n+    BOOST_CHECK_EQUAL(head.Next(), nullptr);\n+}\n+\n+BOOST_AUTO_TEST_CASE(linked_list_add_flags)\n+{\n+    CCoinsCacheEntry head;\n+    CoinsCachePair n1;\n+    CoinsCachePair n2;\n+\n+    // Check that adding 0 flag has no effect\n+    n1.second.AddFlags(0, n1, head);\n+    BOOST_CHECK_EQUAL(n1.second.GetFlags(), 0);\n+    BOOST_CHECK_EQUAL(n1.second.Next(), nullptr);\n+    BOOST_CHECK_EQUAL(head.Next(), nullptr);\n+\n+    // Check that adding DIRTY flag inserts it into linked list and sets flags\n+    n1.second.AddFlags(CCoinsCacheEntry::DIRTY, n1, head);\n+    BOOST_CHECK_EQUAL(n1.second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+    BOOST_CHECK_EQUAL(n1.second.Next(), nullptr);\n+    BOOST_CHECK_EQUAL(head.Next(), &n1);\n+\n+    // Check that adding FRESH flag on new node inserts it after head\n+    n2.second.AddFlags(CCoinsCacheEntry::FRESH, n2, head);\n+    BOOST_CHECK_EQUAL(n2.second.GetFlags(), CCoinsCacheEntry::FRESH);",
      "path": "src/test/coinscachepair_tests.cpp",
      "position": 152,
      "original_position": 152,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "5f753defe55b12afa950e5f98a6fe689232fde92",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "as mentioned before, after https://github.com/bitcoin/bitcoin/pull/28280/commits/cf5bfda650bd57636c7dd13f0ca03910d2aebe2e we can simplify these asserts\r\n```C++\r\nBOOST_CHECK(n2.second.IsFresh());\r\n```",
      "created_at": "2024-07-01T08:51:45Z",
      "updated_at": "2024-07-01T08:51:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1660700180",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1660700180"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 152,
      "original_line": 152,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1660708747",
      "pull_request_review_id": 2150817746,
      "id": 1660708747,
      "node_id": "PRRC_kwDOABII585i_GeL",
      "diff_hunk": "@@ -265,25 +267,27 @@ bool CCoinsViewCache::Flush() {\n \n bool CCoinsViewCache::Sync()\n {\n-    bool fOk = base->BatchWrite(cacheCoins, hashBlock, /*erase=*/false);\n-    // Instead of clearing `cacheCoins` as we would in Flush(), just clear the\n-    // FRESH/DIRTY flags of any coin that isn't spent.\n-    for (auto it = cacheCoins.begin(); it != cacheCoins.end(); ) {\n+    bool fOk = base->BatchWrite(m_flagged_head.Next(), hashBlock, /*will_erase=*/false);\n+    // Instead of clearing `cacheCoins` as we would in Flush(), just erase the\n+    // spent coins. All coins left in the linked list after BatchWrite should be spent.\n+    for (auto it{m_flagged_head.Next()}; it != nullptr; ) {\n+        const auto next_entry{it->second.Next(/*clear_flags=*/true)};\n         if (it->second.coin.IsSpent()) {\n             cachedCoinsUsage -= it->second.coin.DynamicMemoryUsage();\n-            it = cacheCoins.erase(it);\n-        } else {\n-            it->second.flags = 0;\n-            ++it;\n+            cacheCoins.erase(it->first);\n+        } else if (fOk) {\n+            /* BatchWrite must unset all unspent entries when will_erase=false. */\n+            throw std::logic_error(\"Not all unspent flagged entries were unset\");\n         }",
      "path": "src/coins.cpp",
      "position": 196,
      "original_position": 196,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "670084adc53e3d661ea5b4a19743659609a42d5e",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit:\r\n```suggestion\r\n        if (!it->second.coin.IsSpent()) {\r\n            /* BatchWrite must unset all unspent entries when will_erase=false. */\r\n            throw std::logic_error(\"Not all unspent flagged entries were unset\");\r\n        }\r\n        const auto next_entry{it->second.Next(/*clear_flags=*/true)};\r\n        cachedCoinsUsage -= it->second.coin.DynamicMemoryUsage();\r\n        cacheCoins.erase(it->first);\r\n```",
      "created_at": "2024-07-01T08:58:02Z",
      "updated_at": "2024-07-01T09:22:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1660708747",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1660708747"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": 274,
      "original_start_line": 274,
      "start_side": "RIGHT",
      "line": 281,
      "original_line": 281,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1660730018",
      "pull_request_review_id": 2150817746,
      "id": 1660730018,
      "node_id": "PRRC_kwDOABII585i_Lqi",
      "diff_hunk": "@@ -127,6 +127,9 @@ struct CCoinsCacheEntry\n         FRESH = (1 << 1),\n     };\n \n+    inline bool IsDirty() const { return flags & DIRTY; }\n+    inline bool IsFresh() const { return flags & FRESH; }",
      "path": "src/coins.h",
      "position": null,
      "original_position": 5,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "cf5bfda650bd57636c7dd13f0ca03910d2aebe2e",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit:\r\nmodern compilers will likely [decide the need for inlining themselves\r\n](https://en.cppreference.com/w/cpp/language/inline#:~:text=Since%20inline%20substitution)\r\n> Since inline substitution is unobservable in the standard semantics, compilers are free to use inline substitution for any function that's not marked inline, and are free to generate function calls to any function \r\nmarked inline. \r\n\r\nhttps://godbolt.org/z/ePYnhnYGM indicates with & without inline the same asm is produced",
      "created_at": "2024-07-01T09:13:34Z",
      "updated_at": "2024-07-01T09:36:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1660730018",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1660730018"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": 130,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 131,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1660943290",
      "pull_request_review_id": 2151200104,
      "id": 1660943290,
      "node_id": "PRRC_kwDOABII585i__u6",
      "diff_hunk": "@@ -127,6 +127,9 @@ struct CCoinsCacheEntry\n         FRESH = (1 << 1),\n     };\n \n+    inline bool IsDirty() const { return flags & DIRTY; }\n+    inline bool IsFresh() const { return flags & FRESH; }",
      "path": "src/coins.h",
      "position": null,
      "original_position": 5,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "cf5bfda650bd57636c7dd13f0ca03910d2aebe2e",
      "in_reply_to_id": 1660730018,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes and no. Compilers do decide for themselves what to inline, but the `inline` keyword does increase compilers' eagerness to inline.",
      "created_at": "2024-07-01T12:01:31Z",
      "updated_at": "2024-07-01T12:01:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1660943290",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1660943290"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": 130,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 131,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1661038246",
      "pull_request_review_id": 2151367020,
      "id": 1661038246,
      "node_id": "PRRC_kwDOABII585jAW6m",
      "diff_hunk": "@@ -265,25 +267,27 @@ bool CCoinsViewCache::Flush() {\n \n bool CCoinsViewCache::Sync()\n {\n-    bool fOk = base->BatchWrite(cacheCoins, hashBlock, /*erase=*/false);\n-    // Instead of clearing `cacheCoins` as we would in Flush(), just clear the\n-    // FRESH/DIRTY flags of any coin that isn't spent.\n-    for (auto it = cacheCoins.begin(); it != cacheCoins.end(); ) {\n+    bool fOk = base->BatchWrite(m_flagged_head.Next(), hashBlock, /*will_erase=*/false);\n+    // Instead of clearing `cacheCoins` as we would in Flush(), just erase the\n+    // spent coins. All coins left in the linked list after BatchWrite should be spent.\n+    for (auto it{m_flagged_head.Next()}; it != nullptr; ) {\n+        const auto next_entry{it->second.Next(/*clear_flags=*/true)};\n         if (it->second.coin.IsSpent()) {\n             cachedCoinsUsage -= it->second.coin.DynamicMemoryUsage();\n-            it = cacheCoins.erase(it);\n-        } else {\n-            it->second.flags = 0;\n-            ++it;\n+            cacheCoins.erase(it->first);\n+        } else if (fOk) {\n+            /* BatchWrite must unset all unspent entries when will_erase=false. */\n+            throw std::logic_error(\"Not all unspent flagged entries were unset\");\n         }",
      "path": "src/coins.cpp",
      "position": 196,
      "original_position": 196,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "670084adc53e3d661ea5b4a19743659609a42d5e",
      "in_reply_to_id": 1660708747,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "We don't want to throw an error if `fOk` is false. This happens in tests when using mock parent caches that just return `false` and don't unset any flags.",
      "created_at": "2024-07-01T13:15:26Z",
      "updated_at": "2024-07-01T13:15:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1661038246",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1661038246"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": 274,
      "original_start_line": 274,
      "start_side": "RIGHT",
      "line": 281,
      "original_line": 281,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1661061816",
      "pull_request_review_id": 2151407634,
      "id": 1661061816,
      "node_id": "PRRC_kwDOABII585jAcq4",
      "diff_hunk": "@@ -265,25 +267,27 @@ bool CCoinsViewCache::Flush() {\n \n bool CCoinsViewCache::Sync()\n {\n-    bool fOk = base->BatchWrite(cacheCoins, hashBlock, /*erase=*/false);\n-    // Instead of clearing `cacheCoins` as we would in Flush(), just clear the\n-    // FRESH/DIRTY flags of any coin that isn't spent.\n-    for (auto it = cacheCoins.begin(); it != cacheCoins.end(); ) {\n+    bool fOk = base->BatchWrite(m_flagged_head.Next(), hashBlock, /*will_erase=*/false);\n+    // Instead of clearing `cacheCoins` as we would in Flush(), just erase the\n+    // spent coins. All coins left in the linked list after BatchWrite should be spent.\n+    for (auto it{m_flagged_head.Next()}; it != nullptr; ) {\n+        const auto next_entry{it->second.Next(/*clear_flags=*/true)};\n         if (it->second.coin.IsSpent()) {\n             cachedCoinsUsage -= it->second.coin.DynamicMemoryUsage();\n-            it = cacheCoins.erase(it);\n-        } else {\n-            it->second.flags = 0;\n-            ++it;\n+            cacheCoins.erase(it->first);\n+        } else if (fOk) {\n+            /* BatchWrite must unset all unspent entries when will_erase=false. */\n+            throw std::logic_error(\"Not all unspent flagged entries were unset\");\n         }",
      "path": "src/coins.cpp",
      "position": 196,
      "original_position": 196,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "670084adc53e3d661ea5b4a19743659609a42d5e",
      "in_reply_to_id": 1660708747,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah, my suggestion was completely off here, thanks for checking.",
      "created_at": "2024-07-01T13:30:50Z",
      "updated_at": "2024-07-01T13:30:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1661061816",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1661061816"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": 274,
      "original_start_line": 274,
      "start_side": "RIGHT",
      "line": 281,
      "original_line": 281,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1661067593",
      "pull_request_review_id": 2151417846,
      "id": 1661067593,
      "node_id": "PRRC_kwDOABII585jAeFJ",
      "diff_hunk": "@@ -127,6 +127,9 @@ struct CCoinsCacheEntry\n         FRESH = (1 << 1),\n     };\n \n+    inline bool IsDirty() const { return flags & DIRTY; }\n+    inline bool IsFresh() const { return flags & FRESH; }",
      "path": "src/coins.h",
      "position": null,
      "original_position": 5,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "cf5bfda650bd57636c7dd13f0ca03910d2aebe2e",
      "in_reply_to_id": 1660730018,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Does it make sense to check what the main compilers do in this case (the ones I checked via godbolt automatically inline), or was that just a waste of time, since seemingly unrelated changes could change the outcome (but if that's the case, shouldn't we let the compiler decide)?",
      "created_at": "2024-07-01T13:34:20Z",
      "updated_at": "2024-07-01T13:34:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1661067593",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1661067593"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": 130,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 131,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1661090068",
      "pull_request_review_id": 2151457361,
      "id": 1661090068,
      "node_id": "PRRC_kwDOABII585jAjkU",
      "diff_hunk": "@@ -127,6 +127,9 @@ struct CCoinsCacheEntry\n         FRESH = (1 << 1),\n     };\n \n+    inline bool IsDirty() const { return flags & DIRTY; }\n+    inline bool IsFresh() const { return flags & FRESH; }",
      "path": "src/coins.h",
      "position": null,
      "original_position": 5,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "cf5bfda650bd57636c7dd13f0ca03910d2aebe2e",
      "in_reply_to_id": 1660730018,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think not inlining would mean I would also have to add these methods to the implementation file instead of the header.\n\nSince you're checking assembly, is there any difference if I add `noexcept` to these methods? I can't find a definitive answer on if that will make any difference.",
      "created_at": "2024-07-01T13:49:57Z",
      "updated_at": "2024-07-01T13:49:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1661090068",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1661090068"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": 130,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 131,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1661103537",
      "pull_request_review_id": 2151480066,
      "id": 1661103537,
      "node_id": "PRRC_kwDOABII585jAm2x",
      "diff_hunk": "@@ -127,6 +127,9 @@ struct CCoinsCacheEntry\n         FRESH = (1 << 1),\n     };\n \n+    inline bool IsDirty() const { return flags & DIRTY; }\n+    inline bool IsFresh() const { return flags & FRESH; }",
      "path": "src/coins.h",
      "position": null,
      "original_position": 5,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "cf5bfda650bd57636c7dd13f0ca03910d2aebe2e",
      "in_reply_to_id": 1660730018,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "So `inline` has two different effects in compilers:\r\n* 1. It allows the function to appear in multiple compilation units (which makes it mandatory here). Templated entities automatically have this behavior (with or without explicit `inline`).\r\n* 2. It suggests to the compiler that its implementation should be inlined in call sites. Because this inlining has no observable effect on compiler behavior, compilers can do this (or not do this) with or without `inline`. It has become less important as compilers are smart enough to make this decision themselves, but not entirely gone.\r\n",
      "created_at": "2024-07-01T13:59:30Z",
      "updated_at": "2024-07-01T13:59:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1661103537",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1661103537"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": 130,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 131,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1661115104",
      "pull_request_review_id": 2151499936,
      "id": 1661115104,
      "node_id": "PRRC_kwDOABII585jAprg",
      "diff_hunk": "@@ -127,6 +127,9 @@ struct CCoinsCacheEntry\n         FRESH = (1 << 1),\n     };\n \n+    inline bool IsDirty() const { return flags & DIRTY; }\n+    inline bool IsFresh() const { return flags & FRESH; }",
      "path": "src/coins.h",
      "position": null,
      "original_position": 5,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "cf5bfda650bd57636c7dd13f0ca03910d2aebe2e",
      "in_reply_to_id": 1660730018,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@andrewtoth The [C++ Core Guidelines](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Re-noexcept) suggest adding `noexcept` whenever you know a function won't throw. Bitcoin Core treats failure to allocate memory as an unrecoverable condition, so having dynamic memory allocations in a function is not a reason not to add it.\r\n\r\nIt may or may not have a performance benefit (especially when it's a function called from a different compilation unit - and we're not compiling with LTO enabled, or in default/move constructors of types used inside STL containers which may pick more efficient algorithm variants in that case), but even if it doesn't, it's useful as human documentation that a function isn't expected to throw.\r\n\r\nThat also holds for `inline` in my opinion, actually: it documents that the author intends for a function to be inlined,  whether or not the compiler actually does that (at -O0 it won't ever inline, at -O2 all tiny functions probably will).",
      "created_at": "2024-07-01T14:08:11Z",
      "updated_at": "2024-07-01T14:08:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1661115104",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1661115104"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": 130,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 131,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1661123105",
      "pull_request_review_id": 2151513563,
      "id": 1661123105,
      "node_id": "PRRC_kwDOABII585jAroh",
      "diff_hunk": "@@ -127,6 +127,9 @@ struct CCoinsCacheEntry\n         FRESH = (1 << 1),\n     };\n \n+    inline bool IsDirty() const { return flags & DIRTY; }\n+    inline bool IsFresh() const { return flags & FRESH; }",
      "path": "src/coins.h",
      "position": null,
      "original_position": 5,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "cf5bfda650bd57636c7dd13f0ca03910d2aebe2e",
      "in_reply_to_id": 1660730018,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@andrewtoth are you asking because of the hasher involved in caching, i.e. https://github.com/bitcoin/bitcoin/blob/master/src/util/hasher.h#L41-L50?",
      "created_at": "2024-07-01T14:14:04Z",
      "updated_at": "2024-07-01T14:14:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1661123105",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1661123105"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": 130,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 131,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1661133862",
      "pull_request_review_id": 2151531954,
      "id": 1661133862,
      "node_id": "PRRC_kwDOABII585jAuQm",
      "diff_hunk": "@@ -127,6 +127,9 @@ struct CCoinsCacheEntry\n         FRESH = (1 << 1),\n     };\n \n+    inline bool IsDirty() const { return flags & DIRTY; }\n+    inline bool IsFresh() const { return flags & FRESH; }",
      "path": "src/coins.h",
      "position": null,
      "original_position": 5,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "cf5bfda650bd57636c7dd13f0ca03910d2aebe2e",
      "in_reply_to_id": 1660730018,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@sipa thank you for the explanation.\r\n@paplorinc that was an example where it made a difference to performance that came to my mind, yes. I was just curious whether there would be any performance benefit of adding `noexcept` on these methods. If the asm generated with or without is the same then the answer is no. But the advice for adding them for human documentation makes sense.",
      "created_at": "2024-07-01T14:21:46Z",
      "updated_at": "2024-07-01T14:21:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1661133862",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1661133862"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": 130,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 131,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1664435059",
      "pull_request_review_id": 2156852912,
      "id": 1664435059,
      "node_id": "PRRC_kwDOABII585jNUNz",
      "diff_hunk": "@@ -0,0 +1,193 @@\n+// Copyright (c) 2024-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <coins.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <list>\n+\n+BOOST_AUTO_TEST_SUITE(coinscachepair_tests)\n+\n+static constexpr auto NUM_NODES{4};\n+\n+std::list<CoinsCachePair> CreatePairs(CCoinsCacheEntry& head)\n+{\n+    std::list<CoinsCachePair> nodes;\n+    for (auto i{0}; i < NUM_NODES; ++i) {\n+        nodes.emplace_front();\n+\n+        auto node{nodes.begin()};\n+        node->second.AddFlags(CCoinsCacheEntry::DIRTY, *node, head);\n+\n+        BOOST_CHECK_EQUAL(node->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+        BOOST_CHECK_EQUAL(head.Next(), &(*node));\n+\n+        if (i > 0) {\n+            BOOST_CHECK_EQUAL(&(*std::next(node)), node->second.Next());\n+        } else {\n+            BOOST_CHECK_EQUAL(nullptr, node->second.Next());\n+        }\n+    }\n+    return nodes;\n+}\n+\n+BOOST_AUTO_TEST_CASE(linked_list_iteration)\n+{\n+    CCoinsCacheEntry head;\n+    auto nodes{CreatePairs(head)};\n+\n+    // Check iterating through pairs is identical to iterating through a list\n+    auto node{head.Next()};\n+    for (const auto& expected : nodes) {\n+        BOOST_CHECK_EQUAL(&expected, node);\n+        node = node->second.Next();\n+    }\n+    BOOST_CHECK_EQUAL(node, nullptr);\n+\n+    // Check iterating through pairs is identical to iterating through a list\n+    // Clear the flags during iteration\n+    node = head.Next();\n+    for (const auto& expected : nodes) {\n+        BOOST_CHECK_EQUAL(&expected, node);\n+        node = node->second.Next(/*clear_flags=*/true);\n+    }\n+    BOOST_CHECK_EQUAL(node, nullptr);\n+    // Check that head's next is empty\n+    BOOST_CHECK_EQUAL(head.Next(), nullptr);\n+\n+    // Delete the nodes from the list to make sure there are no dangling pointers\n+    for (auto it{nodes.begin()}; it != nodes.end(); it = nodes.erase(it)) {\n+        BOOST_CHECK_EQUAL(it->second.GetFlags(), 0);\n+        BOOST_CHECK_EQUAL(it->second.Next(), nullptr);\n+    }\n+}\n+\n+BOOST_AUTO_TEST_CASE(linked_list_iterate_erase)\n+{\n+    CCoinsCacheEntry head;\n+    auto nodes{CreatePairs(head)};\n+\n+    // Check iterating through pairs is identical to iterating through a list\n+    // Erase the nodes as we iterate through, but don't clear flags\n+    // The flags will be cleared by the CCoinsCacheEntry's destructor\n+    auto node{head.Next()};\n+    for (auto expected{nodes.begin()}; expected != nodes.end(); expected = nodes.erase(expected)) {\n+        BOOST_CHECK_EQUAL(&(*expected), node);\n+        node = node->second.Next(/*clear_flags=*/false);\n+    }\n+    BOOST_CHECK_EQUAL(node, nullptr);\n+\n+    // Check that head's next is empty\n+    BOOST_CHECK_EQUAL(head.Next(), nullptr);\n+}\n+\n+BOOST_AUTO_TEST_CASE(linked_list_random_deletion)\n+{\n+    CCoinsCacheEntry head;\n+    auto nodes{CreatePairs(head)};\n+\n+    // Create linked list head->n1->n2->n3->n4->nullptr\n+    auto n1{nodes.begin()};\n+    auto n2{std::next(n1)};\n+    auto n3{std::next(n2)};\n+    auto n4{std::next(n3)};\n+\n+    // Delete n2\n+    // head->n1->n3->n4->nullptr\n+    nodes.erase(n2);\n+    // Check that n1 now points to n3, and n3 still points to n4\n+    // Also check that flags were not altered\n+    BOOST_CHECK_EQUAL(n1->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+    BOOST_CHECK_EQUAL(n1->second.Next(), &(*n3));\n+    BOOST_CHECK_EQUAL(n3->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+    BOOST_CHECK_EQUAL(n3->second.Next(), &(*n4));\n+\n+    // Delete n1\n+    // head->n3->n4->nullptr\n+    nodes.erase(n1);\n+    // Check that head now points to n3, and n3 still points to n4\n+    // Also check that flags were not altered\n+    BOOST_CHECK_EQUAL(n3->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+    BOOST_CHECK_EQUAL(head.Next(), &(*n3));\n+    BOOST_CHECK_EQUAL(n3->second.Next(), &(*n4));\n+\n+    // Delete n4\n+    // head->n3->nullptr\n+    nodes.erase(n4);\n+    // Check that head still points to n3, and n3 points to nullptr\n+    // Also check that flags were not altered\n+    BOOST_CHECK_EQUAL(n3->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+    BOOST_CHECK_EQUAL(head.Next(), &(*n3));\n+    BOOST_CHECK_EQUAL(n3->second.Next(), nullptr);\n+\n+    // Delete n3\n+    // head->nullptr\n+    nodes.erase(n3);\n+    // Check that head's next now points to nullptr\n+    BOOST_CHECK_EQUAL(head.Next(), nullptr);\n+}\n+\n+BOOST_AUTO_TEST_CASE(linked_list_add_flags)\n+{\n+    CCoinsCacheEntry head;\n+    CoinsCachePair n1;\n+    CoinsCachePair n2;\n+\n+    // Check that adding 0 flag has no effect\n+    n1.second.AddFlags(0, n1, head);\n+    BOOST_CHECK_EQUAL(n1.second.GetFlags(), 0);\n+    BOOST_CHECK_EQUAL(n1.second.Next(), nullptr);\n+    BOOST_CHECK_EQUAL(head.Next(), nullptr);\n+\n+    // Check that adding DIRTY flag inserts it into linked list and sets flags\n+    n1.second.AddFlags(CCoinsCacheEntry::DIRTY, n1, head);\n+    BOOST_CHECK_EQUAL(n1.second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+    BOOST_CHECK_EQUAL(n1.second.Next(), nullptr);\n+    BOOST_CHECK_EQUAL(head.Next(), &n1);\n+\n+    // Check that adding FRESH flag on new node inserts it after head\n+    n2.second.AddFlags(CCoinsCacheEntry::FRESH, n2, head);\n+    BOOST_CHECK_EQUAL(n2.second.GetFlags(), CCoinsCacheEntry::FRESH);",
      "path": "src/test/coinscachepair_tests.cpp",
      "position": 152,
      "original_position": 152,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "5f753defe55b12afa950e5f98a6fe689232fde92",
      "in_reply_to_id": 1660700180,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think the equivalent assert would be\r\n```\r\nBOOST_CHECK(n2.second.IsFresh() && !n2.second.IsDirty());\r\n```",
      "created_at": "2024-07-03T16:03:12Z",
      "updated_at": "2024-07-03T16:03:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1664435059",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1664435059"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 152,
      "original_line": 152,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1664508903",
      "pull_request_review_id": 2156970462,
      "id": 1664508903,
      "node_id": "PRRC_kwDOABII585jNmPn",
      "diff_hunk": "@@ -0,0 +1,189 @@\n+// Copyright (c) 2024-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <coins.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <list>\n+\n+BOOST_AUTO_TEST_SUITE(coinscachepair_tests)\n+\n+static constexpr auto NUM_NODES{4};\n+\n+std::list<CoinsCachePair> CreatePairs(CoinsCachePair& head)\n+{\n+    std::list<CoinsCachePair> nodes;\n+    for (auto i{0}; i < NUM_NODES; ++i) {\n+        nodes.emplace_front();\n+\n+        auto node{nodes.begin()};\n+        node->second.AddFlags(CCoinsCacheEntry::DIRTY, *node, head);",
      "path": "src/test/coinscachepair_tests.cpp",
      "position": 22,
      "original_position": 22,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "f5443052bf5db66c922e9239344afcb07f486070",
      "in_reply_to_id": 1659971494,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I guess `head` could be though of as a sentinel, which always points to the head of the linked list? I suppose I misnamed that then.",
      "created_at": "2024-07-03T17:09:25Z",
      "updated_at": "2024-07-03T17:09:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1664508903",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1664508903"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 22,
      "original_line": 22,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1664539266",
      "pull_request_review_id": 2157019371,
      "id": 1664539266,
      "node_id": "PRRC_kwDOABII585jNtqC",
      "diff_hunk": "@@ -0,0 +1,193 @@\n+// Copyright (c) 2024-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <coins.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <list>\n+\n+BOOST_AUTO_TEST_SUITE(coinscachepair_tests)\n+\n+static constexpr auto NUM_NODES{4};\n+\n+std::list<CoinsCachePair> CreatePairs(CCoinsCacheEntry& head)\n+{\n+    std::list<CoinsCachePair> nodes;\n+    for (auto i{0}; i < NUM_NODES; ++i) {\n+        nodes.emplace_front();\n+\n+        auto node{nodes.begin()};\n+        node->second.AddFlags(CCoinsCacheEntry::DIRTY, *node, head);\n+\n+        BOOST_CHECK_EQUAL(node->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+        BOOST_CHECK_EQUAL(head.Next(), &(*node));\n+\n+        if (i > 0) {\n+            BOOST_CHECK_EQUAL(&(*std::next(node)), node->second.Next());\n+        } else {\n+            BOOST_CHECK_EQUAL(nullptr, node->second.Next());\n+        }\n+    }\n+    return nodes;\n+}\n+\n+BOOST_AUTO_TEST_CASE(linked_list_iteration)\n+{\n+    CCoinsCacheEntry head;\n+    auto nodes{CreatePairs(head)};\n+\n+    // Check iterating through pairs is identical to iterating through a list\n+    auto node{head.Next()};\n+    for (const auto& expected : nodes) {\n+        BOOST_CHECK_EQUAL(&expected, node);\n+        node = node->second.Next();\n+    }\n+    BOOST_CHECK_EQUAL(node, nullptr);\n+\n+    // Check iterating through pairs is identical to iterating through a list\n+    // Clear the flags during iteration\n+    node = head.Next();\n+    for (const auto& expected : nodes) {\n+        BOOST_CHECK_EQUAL(&expected, node);\n+        node = node->second.Next(/*clear_flags=*/true);\n+    }\n+    BOOST_CHECK_EQUAL(node, nullptr);\n+    // Check that head's next is empty\n+    BOOST_CHECK_EQUAL(head.Next(), nullptr);\n+\n+    // Delete the nodes from the list to make sure there are no dangling pointers\n+    for (auto it{nodes.begin()}; it != nodes.end(); it = nodes.erase(it)) {\n+        BOOST_CHECK_EQUAL(it->second.GetFlags(), 0);\n+        BOOST_CHECK_EQUAL(it->second.Next(), nullptr);\n+    }\n+}\n+\n+BOOST_AUTO_TEST_CASE(linked_list_iterate_erase)\n+{\n+    CCoinsCacheEntry head;\n+    auto nodes{CreatePairs(head)};\n+\n+    // Check iterating through pairs is identical to iterating through a list\n+    // Erase the nodes as we iterate through, but don't clear flags\n+    // The flags will be cleared by the CCoinsCacheEntry's destructor\n+    auto node{head.Next()};\n+    for (auto expected{nodes.begin()}; expected != nodes.end(); expected = nodes.erase(expected)) {\n+        BOOST_CHECK_EQUAL(&(*expected), node);\n+        node = node->second.Next(/*clear_flags=*/false);\n+    }\n+    BOOST_CHECK_EQUAL(node, nullptr);\n+\n+    // Check that head's next is empty\n+    BOOST_CHECK_EQUAL(head.Next(), nullptr);\n+}\n+\n+BOOST_AUTO_TEST_CASE(linked_list_random_deletion)\n+{\n+    CCoinsCacheEntry head;\n+    auto nodes{CreatePairs(head)};\n+\n+    // Create linked list head->n1->n2->n3->n4->nullptr\n+    auto n1{nodes.begin()};\n+    auto n2{std::next(n1)};\n+    auto n3{std::next(n2)};\n+    auto n4{std::next(n3)};\n+\n+    // Delete n2\n+    // head->n1->n3->n4->nullptr\n+    nodes.erase(n2);\n+    // Check that n1 now points to n3, and n3 still points to n4\n+    // Also check that flags were not altered\n+    BOOST_CHECK_EQUAL(n1->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+    BOOST_CHECK_EQUAL(n1->second.Next(), &(*n3));\n+    BOOST_CHECK_EQUAL(n3->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+    BOOST_CHECK_EQUAL(n3->second.Next(), &(*n4));\n+\n+    // Delete n1\n+    // head->n3->n4->nullptr\n+    nodes.erase(n1);\n+    // Check that head now points to n3, and n3 still points to n4\n+    // Also check that flags were not altered\n+    BOOST_CHECK_EQUAL(n3->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+    BOOST_CHECK_EQUAL(head.Next(), &(*n3));\n+    BOOST_CHECK_EQUAL(n3->second.Next(), &(*n4));\n+\n+    // Delete n4\n+    // head->n3->nullptr\n+    nodes.erase(n4);\n+    // Check that head still points to n3, and n3 points to nullptr\n+    // Also check that flags were not altered\n+    BOOST_CHECK_EQUAL(n3->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+    BOOST_CHECK_EQUAL(head.Next(), &(*n3));\n+    BOOST_CHECK_EQUAL(n3->second.Next(), nullptr);\n+\n+    // Delete n3\n+    // head->nullptr\n+    nodes.erase(n3);\n+    // Check that head's next now points to nullptr\n+    BOOST_CHECK_EQUAL(head.Next(), nullptr);\n+}\n+\n+BOOST_AUTO_TEST_CASE(linked_list_add_flags)\n+{\n+    CCoinsCacheEntry head;\n+    CoinsCachePair n1;\n+    CoinsCachePair n2;\n+\n+    // Check that adding 0 flag has no effect\n+    n1.second.AddFlags(0, n1, head);\n+    BOOST_CHECK_EQUAL(n1.second.GetFlags(), 0);\n+    BOOST_CHECK_EQUAL(n1.second.Next(), nullptr);\n+    BOOST_CHECK_EQUAL(head.Next(), nullptr);\n+\n+    // Check that adding DIRTY flag inserts it into linked list and sets flags\n+    n1.second.AddFlags(CCoinsCacheEntry::DIRTY, n1, head);\n+    BOOST_CHECK_EQUAL(n1.second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+    BOOST_CHECK_EQUAL(n1.second.Next(), nullptr);\n+    BOOST_CHECK_EQUAL(head.Next(), &n1);\n+\n+    // Check that adding FRESH flag on new node inserts it after head\n+    n2.second.AddFlags(CCoinsCacheEntry::FRESH, n2, head);\n+    BOOST_CHECK_EQUAL(n2.second.GetFlags(), CCoinsCacheEntry::FRESH);",
      "path": "src/test/coinscachepair_tests.cpp",
      "position": 152,
      "original_position": 152,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "5f753defe55b12afa950e5f98a6fe689232fde92",
      "in_reply_to_id": 1660700180,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "the exact equivalent, yes, but you might not want to test the dirtiness part here - up to you, I don't mind either way.",
      "created_at": "2024-07-03T17:32:40Z",
      "updated_at": "2024-07-03T17:32:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1664539266",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1664539266"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 152,
      "original_line": 152,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1664542828",
      "pull_request_review_id": 2157025488,
      "id": 1664542828,
      "node_id": "PRRC_kwDOABII585jNuhs",
      "diff_hunk": "@@ -136,7 +136,10 @@ struct CCoinsCacheEntry\n     CCoinsCacheEntry() noexcept = default;\n     explicit CCoinsCacheEntry(Coin&& coin_) noexcept : coin(std::move(coin_)) {}\n \n-    inline void AddFlags(uint8_t flags) noexcept { m_flags |= flags; }\n+    //! Adding a flag also requires a self reference to the pair that contains\n+    //! this entry in the CCoinsCache map and a reference to the head of the\n+    //! flagged pair linked list.\n+    inline void AddFlags(uint8_t flags, CoinsCachePair& self, CCoinsCacheEntry& head) noexcept { m_flags = flags; }",
      "path": "src/coins.h",
      "position": null,
      "original_position": 8,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "9d539b74516c7ee1bdc775e80d1a54882ffc3683",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "hmmm, why did this become `=` instead of `|=`?",
      "created_at": "2024-07-03T17:36:19Z",
      "updated_at": "2024-07-03T17:36:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1664542828",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1664542828"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 142,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1664545575",
      "pull_request_review_id": 2157030164,
      "id": 1664545575,
      "node_id": "PRRC_kwDOABII585jNvMn",
      "diff_hunk": "@@ -143,11 +161,39 @@ struct CCoinsCacheEntry\n     //! Adding a flag also requires a self reference to the pair that contains\n     //! this entry in the CCoinsCache map and a reference to the head of the\n     //! flagged pair linked list.\n-    inline void AddFlags(uint8_t flags, CoinsCachePair& self, CCoinsCacheEntry& head) noexcept { m_flags = flags; }\n-    inline void ClearFlags() noexcept { m_flags = 0; }\n+    inline void AddFlags(uint8_t flags, CoinsCachePair& self, CCoinsCacheEntry& head) noexcept\n+    {\n+        assert(&self.second == this);\n+        if (!m_flags && flags) {\n+            m_prev = &head;\n+            m_next = head.m_next;\n+            if (m_next) m_next->second.m_prev = this;\n+            head.m_next = &self;\n+        }\n+        m_flags |= flags;\n+    }\n+    inline void ClearFlags() noexcept\n+    {\n+        if (!m_flags) return;\n+        if (m_next) m_next->second.m_prev = m_prev;\n+        m_prev->m_next = m_next;\n+        m_next = nullptr;\n+        m_flags = 0;\n+    }\n     inline uint8_t GetFlags() const noexcept { return m_flags; }\n     inline bool IsDirty() const noexcept { return m_flags & DIRTY; }\n     inline bool IsFresh() const noexcept { return m_flags & FRESH; }\n+\n+    //! Get the next entry in the flagged linked list, optionally removing the\n+    //! current entry and clearing the flags.\n+    inline CoinsCachePair* Next(bool clear_flags = false) noexcept",
      "path": "src/coins.h",
      "position": 83,
      "original_position": 56,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "efe0f1fb7d98f12ee1901863050e32c8b68744ff",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "what happens if this ends up throwing, it's not a trivial function (e.g. `m_prev` could become nullable in the future and cause havoc)?",
      "created_at": "2024-07-03T17:39:16Z",
      "updated_at": "2024-07-03T18:19:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1664545575",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1664545575"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 189,
      "original_line": 189,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1664547028",
      "pull_request_review_id": 2157030164,
      "id": 1664547028,
      "node_id": "PRRC_kwDOABII585jNvjU",
      "diff_hunk": "@@ -253,11 +253,11 @@ bool CCoinsViewCache::BatchWrite(CCoinsMap &mapCoins, const uint256 &hashBlockIn\n }\n \n bool CCoinsViewCache::Flush() {\n-    bool fOk = base->BatchWrite(cacheCoins, hashBlock, /*will_erase=*/true);\n+    bool fOk = base->BatchWrite(m_flagged_head.Next(), hashBlock, /*will_erase=*/true);",
      "path": "src/coins.cpp",
      "position": 162,
      "original_position": 38,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "f7de284f82ee69fee54a4b99b793392b8d114278",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "does the naming inconsistency apply here as well - given that we ignore the first element with instant `.Next()` as a first step?",
      "created_at": "2024-07-03T17:40:40Z",
      "updated_at": "2024-07-03T18:19:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1664547028",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1664547028"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 256,
      "original_line": 256,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1664555939",
      "pull_request_review_id": 2157048209,
      "id": 1664555939,
      "node_id": "PRRC_kwDOABII585jNxuj",
      "diff_hunk": "@@ -136,7 +136,10 @@ struct CCoinsCacheEntry\n     CCoinsCacheEntry() noexcept = default;\n     explicit CCoinsCacheEntry(Coin&& coin_) noexcept : coin(std::move(coin_)) {}\n \n-    inline void AddFlags(uint8_t flags) noexcept { m_flags |= flags; }\n+    //! Adding a flag also requires a self reference to the pair that contains\n+    //! this entry in the CCoinsCache map and a reference to the head of the\n+    //! flagged pair linked list.\n+    inline void AddFlags(uint8_t flags, CoinsCachePair& self, CCoinsCacheEntry& head) noexcept { m_flags = flags; }",
      "path": "src/coins.h",
      "position": null,
      "original_position": 8,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "9d539b74516c7ee1bdc775e80d1a54882ffc3683",
      "in_reply_to_id": 1664542828,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Whoops bad rebase, thanks for catching!",
      "created_at": "2024-07-03T17:49:37Z",
      "updated_at": "2024-07-03T17:49:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1664555939",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1664555939"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 142,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1664558253",
      "pull_request_review_id": 2157051827,
      "id": 1664558253,
      "node_id": "PRRC_kwDOABII585jNySt",
      "diff_hunk": "@@ -0,0 +1,193 @@\n+// Copyright (c) 2024-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <coins.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <list>\n+\n+BOOST_AUTO_TEST_SUITE(coinscachepair_tests)\n+\n+static constexpr auto NUM_NODES{4};\n+\n+std::list<CoinsCachePair> CreatePairs(CCoinsCacheEntry& head)\n+{\n+    std::list<CoinsCachePair> nodes;\n+    for (auto i{0}; i < NUM_NODES; ++i) {\n+        nodes.emplace_front();\n+\n+        auto node{nodes.begin()};\n+        node->second.AddFlags(CCoinsCacheEntry::DIRTY, *node, head);\n+\n+        BOOST_CHECK_EQUAL(node->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+        BOOST_CHECK_EQUAL(head.Next(), &(*node));\n+\n+        if (i > 0) {\n+            BOOST_CHECK_EQUAL(&(*std::next(node)), node->second.Next());\n+        } else {\n+            BOOST_CHECK_EQUAL(nullptr, node->second.Next());\n+        }\n+    }\n+    return nodes;\n+}\n+\n+BOOST_AUTO_TEST_CASE(linked_list_iteration)\n+{\n+    CCoinsCacheEntry head;\n+    auto nodes{CreatePairs(head)};\n+\n+    // Check iterating through pairs is identical to iterating through a list\n+    auto node{head.Next()};\n+    for (const auto& expected : nodes) {\n+        BOOST_CHECK_EQUAL(&expected, node);\n+        node = node->second.Next();\n+    }\n+    BOOST_CHECK_EQUAL(node, nullptr);\n+\n+    // Check iterating through pairs is identical to iterating through a list\n+    // Clear the flags during iteration\n+    node = head.Next();\n+    for (const auto& expected : nodes) {\n+        BOOST_CHECK_EQUAL(&expected, node);\n+        node = node->second.Next(/*clear_flags=*/true);\n+    }\n+    BOOST_CHECK_EQUAL(node, nullptr);\n+    // Check that head's next is empty\n+    BOOST_CHECK_EQUAL(head.Next(), nullptr);\n+\n+    // Delete the nodes from the list to make sure there are no dangling pointers\n+    for (auto it{nodes.begin()}; it != nodes.end(); it = nodes.erase(it)) {\n+        BOOST_CHECK_EQUAL(it->second.GetFlags(), 0);\n+        BOOST_CHECK_EQUAL(it->second.Next(), nullptr);\n+    }\n+}\n+\n+BOOST_AUTO_TEST_CASE(linked_list_iterate_erase)\n+{\n+    CCoinsCacheEntry head;\n+    auto nodes{CreatePairs(head)};\n+\n+    // Check iterating through pairs is identical to iterating through a list\n+    // Erase the nodes as we iterate through, but don't clear flags\n+    // The flags will be cleared by the CCoinsCacheEntry's destructor\n+    auto node{head.Next()};\n+    for (auto expected{nodes.begin()}; expected != nodes.end(); expected = nodes.erase(expected)) {\n+        BOOST_CHECK_EQUAL(&(*expected), node);\n+        node = node->second.Next(/*clear_flags=*/false);\n+    }\n+    BOOST_CHECK_EQUAL(node, nullptr);\n+\n+    // Check that head's next is empty\n+    BOOST_CHECK_EQUAL(head.Next(), nullptr);\n+}\n+\n+BOOST_AUTO_TEST_CASE(linked_list_random_deletion)\n+{\n+    CCoinsCacheEntry head;\n+    auto nodes{CreatePairs(head)};\n+\n+    // Create linked list head->n1->n2->n3->n4->nullptr\n+    auto n1{nodes.begin()};\n+    auto n2{std::next(n1)};\n+    auto n3{std::next(n2)};\n+    auto n4{std::next(n3)};\n+\n+    // Delete n2\n+    // head->n1->n3->n4->nullptr\n+    nodes.erase(n2);\n+    // Check that n1 now points to n3, and n3 still points to n4\n+    // Also check that flags were not altered\n+    BOOST_CHECK_EQUAL(n1->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+    BOOST_CHECK_EQUAL(n1->second.Next(), &(*n3));\n+    BOOST_CHECK_EQUAL(n3->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+    BOOST_CHECK_EQUAL(n3->second.Next(), &(*n4));\n+\n+    // Delete n1\n+    // head->n3->n4->nullptr\n+    nodes.erase(n1);\n+    // Check that head now points to n3, and n3 still points to n4\n+    // Also check that flags were not altered\n+    BOOST_CHECK_EQUAL(n3->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+    BOOST_CHECK_EQUAL(head.Next(), &(*n3));\n+    BOOST_CHECK_EQUAL(n3->second.Next(), &(*n4));\n+\n+    // Delete n4\n+    // head->n3->nullptr\n+    nodes.erase(n4);\n+    // Check that head still points to n3, and n3 points to nullptr\n+    // Also check that flags were not altered\n+    BOOST_CHECK_EQUAL(n3->second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+    BOOST_CHECK_EQUAL(head.Next(), &(*n3));\n+    BOOST_CHECK_EQUAL(n3->second.Next(), nullptr);\n+\n+    // Delete n3\n+    // head->nullptr\n+    nodes.erase(n3);\n+    // Check that head's next now points to nullptr\n+    BOOST_CHECK_EQUAL(head.Next(), nullptr);\n+}\n+\n+BOOST_AUTO_TEST_CASE(linked_list_add_flags)\n+{\n+    CCoinsCacheEntry head;\n+    CoinsCachePair n1;\n+    CoinsCachePair n2;\n+\n+    // Check that adding 0 flag has no effect\n+    n1.second.AddFlags(0, n1, head);\n+    BOOST_CHECK_EQUAL(n1.second.GetFlags(), 0);\n+    BOOST_CHECK_EQUAL(n1.second.Next(), nullptr);\n+    BOOST_CHECK_EQUAL(head.Next(), nullptr);\n+\n+    // Check that adding DIRTY flag inserts it into linked list and sets flags\n+    n1.second.AddFlags(CCoinsCacheEntry::DIRTY, n1, head);\n+    BOOST_CHECK_EQUAL(n1.second.GetFlags(), CCoinsCacheEntry::DIRTY);\n+    BOOST_CHECK_EQUAL(n1.second.Next(), nullptr);\n+    BOOST_CHECK_EQUAL(head.Next(), &n1);\n+\n+    // Check that adding FRESH flag on new node inserts it after head\n+    n2.second.AddFlags(CCoinsCacheEntry::FRESH, n2, head);\n+    BOOST_CHECK_EQUAL(n2.second.GetFlags(), CCoinsCacheEntry::FRESH);",
      "path": "src/test/coinscachepair_tests.cpp",
      "position": 152,
      "original_position": 152,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "5f753defe55b12afa950e5f98a6fe689232fde92",
      "in_reply_to_id": 1660700180,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "But since these are unit tests we are kind of testing the internals, so it would be good to catch if any other flags sneak in. With `IsFresh` it just checks that the FRESH flag is set, but any other flag could be set as well.",
      "created_at": "2024-07-03T17:51:52Z",
      "updated_at": "2024-07-03T17:51:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1664558253",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1664558253"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 152,
      "original_line": 152,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1664558577",
      "pull_request_review_id": 2157052387,
      "id": 1664558577,
      "node_id": "PRRC_kwDOABII585jNyXx",
      "diff_hunk": "@@ -127,6 +127,9 @@ struct CCoinsCacheEntry\n         FRESH = (1 << 1),\n     };\n \n+    inline bool IsDirty() const { return flags & DIRTY; }\n+    inline bool IsFresh() const { return flags & FRESH; }",
      "path": "src/coins.h",
      "position": null,
      "original_position": 5,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "cf5bfda650bd57636c7dd13f0ca03910d2aebe2e",
      "in_reply_to_id": 1660730018,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Added `noexcept` everywhere.",
      "created_at": "2024-07-03T17:52:14Z",
      "updated_at": "2024-07-03T17:52:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1664558577",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1664558577"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": 130,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 131,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1664560161",
      "pull_request_review_id": 2157030164,
      "id": 1664560161,
      "node_id": "PRRC_kwDOABII585jNywh",
      "diff_hunk": "@@ -267,17 +267,19 @@ bool CCoinsViewCache::Flush() {\n \n bool CCoinsViewCache::Sync()\n {\n-    bool fOk = base->BatchWrite(cacheCoins, hashBlock, /*will_erase=*/false);\n-    // Instead of clearing `cacheCoins` as we would in Flush(), just clear the\n-    // FRESH/DIRTY flags of any coin that isn't spent.\n-    for (auto it = cacheCoins.begin(); it != cacheCoins.end(); ) {\n+    bool fOk = base->BatchWrite(m_flagged_head.Next(), hashBlock, /*will_erase=*/false);\n+    // Instead of clearing `cacheCoins` as we would in Flush(), just erase the\n+    // spent coins. All coins left in the linked list after BatchWrite should be spent.\n+    for (auto it{m_flagged_head.Next()}; it != nullptr; ) {\n+        const auto next_entry{it->second.Next(/*clear_flags=*/true)};\n         if (it->second.coin.IsSpent()) {\n             cachedCoinsUsage -= it->second.coin.DynamicMemoryUsage();\n-            it = cacheCoins.erase(it);\n-        } else {\n-            it->second.ClearFlags();\n-            ++it;\n+            cacheCoins.erase(it->first);\n+        } else if (fOk) {",
      "path": "src/coins.cpp",
      "position": 193,
      "original_position": 69,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "230e0d747a60699668529c9f4da7d836651bd8dd",
      "in_reply_to_id": null,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "maybe it could make sense to document these rare conditions with something like `} else if ([[unlikely]] fOk) {`",
      "created_at": "2024-07-03T17:53:53Z",
      "updated_at": "2024-07-03T18:19:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1664560161",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1664560161"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 278,
      "original_line": 278,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1664597181",
      "pull_request_review_id": 2157115317,
      "id": 1664597181,
      "node_id": "PRRC_kwDOABII585jN7y9",
      "diff_hunk": "@@ -253,11 +253,11 @@ bool CCoinsViewCache::BatchWrite(CCoinsMap &mapCoins, const uint256 &hashBlockIn\n }\n \n bool CCoinsViewCache::Flush() {\n-    bool fOk = base->BatchWrite(cacheCoins, hashBlock, /*will_erase=*/true);\n+    bool fOk = base->BatchWrite(m_flagged_head.Next(), hashBlock, /*will_erase=*/true);",
      "path": "src/coins.cpp",
      "position": 162,
      "original_position": 38,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "f7de284f82ee69fee54a4b99b793392b8d114278",
      "in_reply_to_id": 1664547028,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah I suppose we can rename it `m_flagged_sentinel` or something? Do you have a suggestion that would have made this clearer if that was the name originally?",
      "created_at": "2024-07-03T18:31:30Z",
      "updated_at": "2024-07-03T18:31:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1664597181",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1664597181"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 256,
      "original_line": 256,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1664601643",
      "pull_request_review_id": 2157122442,
      "id": 1664601643,
      "node_id": "PRRC_kwDOABII585jN84r",
      "diff_hunk": "@@ -253,11 +253,11 @@ bool CCoinsViewCache::BatchWrite(CCoinsMap &mapCoins, const uint256 &hashBlockIn\n }\n \n bool CCoinsViewCache::Flush() {\n-    bool fOk = base->BatchWrite(cacheCoins, hashBlock, /*will_erase=*/true);\n+    bool fOk = base->BatchWrite(m_flagged_head.Next(), hashBlock, /*will_erase=*/true);",
      "path": "src/coins.cpp",
      "position": 162,
      "original_position": 38,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "f7de284f82ee69fee54a4b99b793392b8d114278",
      "in_reply_to_id": 1664547028,
      "user": {
        "login": "paplorinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paplorinc",
        "html_url": "https://github.com/paplorinc",
        "followers_url": "https://api.github.com/users/paplorinc/followers",
        "following_url": "https://api.github.com/users/paplorinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paplorinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paplorinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paplorinc/subscriptions",
        "organizations_url": "https://api.github.com/users/paplorinc/orgs",
        "repos_url": "https://api.github.com/users/paplorinc/repos",
        "events_url": "https://api.github.com/users/paplorinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paplorinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "we have \"sentinels\" on both ends now, right? A dummy at the beginning and a `nullptr` on the end. This is what I found confusing in the test, why not store the actual head and have a `nullptr` or `sentinel` at the end only? I haven't investigated this, maybe I'm completely off again...",
      "created_at": "2024-07-03T18:36:24Z",
      "updated_at": "2024-07-03T18:36:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1664601643",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1664601643"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 256,
      "original_line": 256,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1664604753",
      "pull_request_review_id": 2157127694,
      "id": 1664604753,
      "node_id": "PRRC_kwDOABII585jN9pR",
      "diff_hunk": "@@ -267,17 +267,19 @@ bool CCoinsViewCache::Flush() {\n \n bool CCoinsViewCache::Sync()\n {\n-    bool fOk = base->BatchWrite(cacheCoins, hashBlock, /*will_erase=*/false);\n-    // Instead of clearing `cacheCoins` as we would in Flush(), just clear the\n-    // FRESH/DIRTY flags of any coin that isn't spent.\n-    for (auto it = cacheCoins.begin(); it != cacheCoins.end(); ) {\n+    bool fOk = base->BatchWrite(m_flagged_head.Next(), hashBlock, /*will_erase=*/false);\n+    // Instead of clearing `cacheCoins` as we would in Flush(), just erase the\n+    // spent coins. All coins left in the linked list after BatchWrite should be spent.\n+    for (auto it{m_flagged_head.Next()}; it != nullptr; ) {\n+        const auto next_entry{it->second.Next(/*clear_flags=*/true)};\n         if (it->second.coin.IsSpent()) {\n             cachedCoinsUsage -= it->second.coin.DynamicMemoryUsage();\n-            it = cacheCoins.erase(it);\n-        } else {\n-            it->second.ClearFlags();\n-            ++it;\n+            cacheCoins.erase(it->first);\n+        } else if (fOk) {",
      "path": "src/coins.cpp",
      "position": 193,
      "original_position": 69,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "230e0d747a60699668529c9f4da7d836651bd8dd",
      "in_reply_to_id": 1664560161,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Neat! Could also add `[[unlikely]]` here https://github.com/bitcoin/bitcoin/pull/28280/files#diff-f0ed73d62dae6ca28ebd3045e5fc0d5d02eaaacadb4c2a292985a3fbd7e1c77cR189",
      "created_at": "2024-07-03T18:39:56Z",
      "updated_at": "2024-07-03T18:39:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1664604753",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1664604753"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 278,
      "original_line": 278,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1664606357",
      "pull_request_review_id": 2157130254,
      "id": 1664606357,
      "node_id": "PRRC_kwDOABII585jN-CV",
      "diff_hunk": "@@ -143,11 +161,39 @@ struct CCoinsCacheEntry\n     //! Adding a flag also requires a self reference to the pair that contains\n     //! this entry in the CCoinsCache map and a reference to the head of the\n     //! flagged pair linked list.\n-    inline void AddFlags(uint8_t flags, CoinsCachePair& self, CCoinsCacheEntry& head) noexcept { m_flags = flags; }\n-    inline void ClearFlags() noexcept { m_flags = 0; }\n+    inline void AddFlags(uint8_t flags, CoinsCachePair& self, CCoinsCacheEntry& head) noexcept\n+    {\n+        assert(&self.second == this);\n+        if (!m_flags && flags) {\n+            m_prev = &head;\n+            m_next = head.m_next;\n+            if (m_next) m_next->second.m_prev = this;\n+            head.m_next = &self;\n+        }\n+        m_flags |= flags;\n+    }\n+    inline void ClearFlags() noexcept\n+    {\n+        if (!m_flags) return;\n+        if (m_next) m_next->second.m_prev = m_prev;\n+        m_prev->m_next = m_next;\n+        m_next = nullptr;\n+        m_flags = 0;\n+    }\n     inline uint8_t GetFlags() const noexcept { return m_flags; }\n     inline bool IsDirty() const noexcept { return m_flags & DIRTY; }\n     inline bool IsFresh() const noexcept { return m_flags & FRESH; }\n+\n+    //! Get the next entry in the flagged linked list, optionally removing the\n+    //! current entry and clearing the flags.\n+    inline CoinsCachePair* Next(bool clear_flags = false) noexcept",
      "path": "src/coins.h",
      "position": 83,
      "original_position": 56,
      "commit_id": "91560a6f23a0e0f3021b63facb4ad3a84cebb0a0",
      "original_commit_id": "efe0f1fb7d98f12ee1901863050e32c8b68744ff",
      "in_reply_to_id": 1664545575,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hmm but accessing a null pointer would be a segfault and not an exception right? Sorry I don't follow how do you think this method could throw?",
      "created_at": "2024-07-03T18:41:28Z",
      "updated_at": "2024-07-03T18:41:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28280#discussion_r1664606357",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1664606357"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28280"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 189,
      "original_line": 189,
      "side": "RIGHT"
    }
  ]
}