{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858",
    "id": 477336687,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDc3MzM2Njg3",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19858",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/19858.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/19858.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19858",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19858/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/b3a515c0bec97633a76bec101af47c3c90c0b749",
    "number": 19858,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "Periodically make block-relay connections and sync headers",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "To make eclipse attacks more difficult, regularly initiate outbound connections\r\nand stay connected long enough to sync headers and potentially learn of new\r\nblocks. If we learn a new block, rotate out an existing block-relay peer in\r\nfavor of the new peer.\r\n\r\nThis augments the existing outbound peer rotation that exists -- currently we\r\nmake new full-relay connections when our tip is stale, which we disconnect\r\nafter waiting a small time to see if we learn a new block.  As block-relay\r\nconnections use minimal bandwidth, we can make these connections regularly and\r\nnot just when our tip is stale.\r\n\r\nLike feeler connections, these connections are not aggressive; whenever our\r\ntimer fires (once every 5 minutes on average), we'll try to initiate a new\r\nblock-relay connection as described, but if we fail to connect we just wait for\r\nour timer to fire again before repeating with a new peer.",
    "labels": [
      {
        "id": 98298007,
        "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
        "name": "P2P",
        "color": "006b75",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2020-09-01T21:09:00Z",
    "updated_at": "2022-08-16T17:01:41Z",
    "closed_at": "2020-12-11T09:24:03Z",
    "mergeable_state": "unknown",
    "merged_at": "2020-12-11T09:24:03Z",
    "merge_commit_sha": "6a48063671770e77266f8e441cc15487d1fff5ed",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "sdaftuar:2020-08-blocks-only-rotation",
      "ref": "2020-08-blocks-only-rotation",
      "sha": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 28761781,
        "node_id": "MDEwOlJlcG9zaXRvcnkyODc2MTc4MQ==",
        "name": "bitcoin",
        "full_name": "sdaftuar/bitcoin",
        "owner": {
          "login": "sdaftuar",
          "id": 7463573,
          "node_id": "MDQ6VXNlcjc0NjM1NzM=",
          "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sdaftuar",
          "html_url": "https://github.com/sdaftuar",
          "followers_url": "https://api.github.com/users/sdaftuar/followers",
          "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
          "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
          "repos_url": "https://api.github.com/users/sdaftuar/repos",
          "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/sdaftuar/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/sdaftuar/bitcoin",
        "archive_url": "https://api.github.com/repos/sdaftuar/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/sdaftuar/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/sdaftuar/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/sdaftuar/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/sdaftuar/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/sdaftuar/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/sdaftuar/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/sdaftuar/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/sdaftuar/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/sdaftuar/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/sdaftuar/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/sdaftuar/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/sdaftuar/bitcoin/events",
        "forks_url": "https://api.github.com/repos/sdaftuar/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/sdaftuar/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/sdaftuar/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/sdaftuar/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/sdaftuar/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/sdaftuar/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/sdaftuar/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/sdaftuar/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/sdaftuar/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/sdaftuar/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/sdaftuar/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/sdaftuar/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/sdaftuar/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/sdaftuar/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/sdaftuar/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/sdaftuar/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:sdaftuar/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/sdaftuar/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/sdaftuar/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/sdaftuar/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/sdaftuar/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/sdaftuar/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/sdaftuar/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/sdaftuar/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/sdaftuar/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/sdaftuar/bitcoin/hooks",
        "svn_url": "https://github.com/sdaftuar/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 2,
        "stargazers_count": 4,
        "watchers_count": 4,
        "size": 247679,
        "default_branch": "master",
        "open_issues_count": 1,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-07-24T20:27:09Z",
        "created_at": "2015-01-04T02:52:13Z",
        "updated_at": "2023-08-01T03:17:33Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "b76abae387b9ac2526c315c95b0f2da8c78e16fc",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35476,
        "stargazers_count": 70608,
        "watchers_count": 70608,
        "size": 236222,
        "default_branch": "master",
        "open_issues_count": 672,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-02T20:20:41Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-08-02T18:21:18Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 126,
    "deletions": 20,
    "changed_files": 6,
    "commits": 4,
    "review_comments": 87,
    "comments": 39
  },
  "events": [
    {
      "event": "commented",
      "id": 685134274,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY4NTEzNDI3NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/685134274",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-01T21:10:22Z",
      "updated_at": "2020-09-01T21:10:22Z",
      "author_association": "MEMBER",
      "body": "This implements something similar to what is discussed in #16859.\r\n\r\nMarking this as draft for now, as it builds on top of #19724.",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-685134274",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19858"
    },
    {
      "event": "labeled",
      "id": 3716957231,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM3MTY5NTcyMzE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3716957231",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-01T21:44:19Z",
      "label": {
        "name": "P2P",
        "color": "006b75"
      }
    },
    {
      "event": "commented",
      "id": 685192705,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY4NTE5MjcwNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/685192705",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-01T23:51:08Z",
      "updated_at": "2020-12-10T15:24:20Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19884 (p2p: No delay in adding fixed seeds if -dnsseed=0 and peers.dat is empty by dhruv)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-685192705",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19858"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-01T23:59:52Z",
      "updated_at": "2020-09-01T23:59:52Z",
      "source": {
        "issue": {
          "id": 689128761,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDc2MjMzMTY0",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19843",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19843/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19843/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19843/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19843",
          "number": 19843,
          "state": "closed",
          "state_reason": null,
          "title": "Refactoring and minor improvement for self-advertisements",
          "body": "We have (almost) the same code chunk used twice. Improve that by slight refactoring.\r\n\r\nThe only behavior change is that the following will be also applied to the first (pre-VERACK) self-announcement:\r\n```   \r\n// If discovery is enabled, sometimes give our peer the address it\r\n// tells us that it sees us as in case it has a better idea of our\r\n// address than we do.\r\n```\r\nAnd I think it's a good change anyway.\r\n\r\nThe last commit is just to consider the first self-announcement as regular and reset the timer, so that we don't send the second self-announcement too soon.\r\nNote that since the first self-announcement is made at the end of processing VERSION, at that point addrLocal would be already filled with what the peers tells us we are, so this self-announcement would be no worse than any further one.",
          "user": {
            "login": "naumenkogs",
            "id": 7975071,
            "node_id": "MDQ6VXNlcjc5NzUwNzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/naumenkogs",
            "html_url": "https://github.com/naumenkogs",
            "followers_url": "https://api.github.com/users/naumenkogs/followers",
            "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
            "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
            "repos_url": "https://api.github.com/users/naumenkogs/repos",
            "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 19,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19843",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19843",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19843.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19843.patch"
          },
          "closed_at": "2021-04-16T09:28:08Z",
          "created_at": "2020-08-31T11:20:53Z",
          "updated_at": "2022-09-29T04:12:08Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-02T00:05:26Z",
      "updated_at": "2020-09-02T00:05:26Z",
      "source": {
        "issue": {
          "id": 688332211,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDc1NjIyMjEw",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19829",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19829/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19829/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19829/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19829",
          "number": 19829,
          "state": "closed",
          "state_reason": null,
          "title": "net processing: Move block inventory state to net_processing",
          "body": "This continues the work of moving application layer data into net_processing, by moving all block inventory state into the new Peer object added in #19607.\r\n\r\nFor motivation, see #19398.",
          "user": {
            "login": "jnewbery",
            "id": 1063656,
            "node_id": "MDQ6VXNlcjEwNjM2NTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jnewbery",
            "html_url": "https://github.com/jnewbery",
            "followers_url": "https://api.github.com/users/jnewbery/followers",
            "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
            "organizations_url": "https://api.github.com/users/jnewbery/orgs",
            "repos_url": "https://api.github.com/users/jnewbery/repos",
            "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jnewbery/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 32,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19829",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19829",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19829.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19829.patch"
          },
          "closed_at": "2020-12-22T11:45:53Z",
          "created_at": "2020-08-28T20:14:50Z",
          "updated_at": "2022-08-16T17:01:39Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-02T00:14:51Z",
      "updated_at": "2020-09-02T00:14:51Z",
      "source": {
        "issue": {
          "id": 684977455,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDcyNzc1NjA5",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19794",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19794/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19794/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19794/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19794",
          "number": 19794,
          "state": "closed",
          "state_reason": null,
          "title": "p2p: Remove fGetAddr flag",
          "body": "`fGetAddr` is an old flag that indicates an ongoing GETADDR/ADDR interaction. Introduced in https://github.com/bitcoin/bitcoin/commit/dd519206a684c772a4a06ceecc87c665ad09d8be, it prevents further relay of received ADDR answers to other peers via the `RelayAddress()` gossip mechanism while set - probably to prevent ADDR traffic from being dominated by large GETADDR answers. \r\n\r\nIt also used to be possible to receive a large GETADDR answer spread over multiple ADDR messages (each bounded to max 1000 addresses), so the condition `if (vAddr.size() < 1000) pfrom.fGetAddr = false;` was meant to ensure that `fGetAddr` would only get cleared once the last ADDR of the package was received (typically with < 1000 addresses).\r\n\r\nHowever, `fGetAddr` currently does not work as originally intended and is no longer useful:\r\n- typically, the first ADDR we receive from a peer after sending the GETADDR is not the GETADDR response but the self-announcement of our peer. If this is the case, `fGetAddr` acts on it (preventing its relay) and is already inactivated once the GETADDR response is received.\r\n-  https://github.com/bitcoin/bitcoin/commit/5cbf75324d1509a1262b65c5073314a4da3f6d77 introduced the condition `vAddr.size() <= 10`, so messages with more than 10 elements won't be relayed further regardless.\r\n- since #5419, we do not get more than one ADDR message in response to GETADDR because `vAddrToSend` cannot have more than 1000 elements. \r\n\r\nRemoving the flag will cause initial self-announcement from outbound peers to be gossip-relayed.\r\n\r\nThanks to jnewbery for help with reconstructing the history of `fGetAddr`!\r\n\r\n**[Outdated, but left in for context]**\r\nRemoving the flag will change behaviour in two special cases:\r\n1.) If the GETADDR response is exactly of size 1000, `fGetAddr` will not not be cleared on current master, so that the next \"regular\" ADDR message by this peer won't be relayed - this does not seem intentional, changing it arguably fixes a bug.\r\n2.) If the response to GETADDR is small  (<=10 addresses), it will be relayed to peers just as any other ADDR message of that size.",
          "user": {
            "login": "mzumsande",
            "id": 48763452,
            "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
            "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mzumsande",
            "html_url": "https://github.com/mzumsande",
            "followers_url": "https://api.github.com/users/mzumsande/followers",
            "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
            "organizations_url": "https://api.github.com/users/mzumsande/orgs",
            "repos_url": "https://api.github.com/users/mzumsande/repos",
            "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/mzumsande/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 29,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19794",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19794",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19794.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19794.patch"
          },
          "closed_at": "2020-09-15T19:02:51Z",
          "created_at": "2020-08-24T21:27:50Z",
          "updated_at": "2022-02-15T10:47:35Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-02T00:17:09Z",
      "updated_at": "2020-09-02T00:17:09Z",
      "source": {
        "issue": {
          "id": 684833181,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDcyNjU2MjM0",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19791",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19791/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19791/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19791/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19791",
          "number": 19791,
          "state": "closed",
          "state_reason": null,
          "title": "[net processing] Move Misbehaving() to PeerManager",
          "body": "Continues the work of moving net_processing logic into PeerLogicValidation. See https://github.com/bitcoin/bitcoin/pull/19704 and https://github.com/bitcoin/bitcoin/pull/19607#discussion_r462032894 for motivation.\r\n\r\nThis PR also renames `PeerLogicValidation` to `PeerManager` as suggested in https://github.com/bitcoin/bitcoin/pull/10756#pullrequestreview-53892618.",
          "user": {
            "login": "jnewbery",
            "id": 1063656,
            "node_id": "MDQ6VXNlcjEwNjM2NTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jnewbery",
            "html_url": "https://github.com/jnewbery",
            "followers_url": "https://api.github.com/users/jnewbery/followers",
            "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
            "organizations_url": "https://api.github.com/users/jnewbery/orgs",
            "repos_url": "https://api.github.com/users/jnewbery/repos",
            "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jnewbery/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 24,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19791",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19791",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19791.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19791.patch"
          },
          "closed_at": "2020-09-07T16:12:31Z",
          "created_at": "2020-08-24T17:15:39Z",
          "updated_at": "2022-02-15T10:35:46Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-02T00:30:34Z",
      "updated_at": "2020-09-02T00:30:34Z",
      "source": {
        "issue": {
          "id": 679483105,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDY4MjQ3OTky",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19725",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19725/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19725/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19725/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19725",
          "number": 19725,
          "state": "closed",
          "state_reason": null,
          "title": "[RPC] Add connection type to getpeerinfo, improve logs",
          "body": "After #19316, we can more directly expose information about the connection type on the `getpeerinfo` RPC. Doing so also makes the existing addnode field redundant, so this PR begins the process of deprecating this field.\r\n\r\nThis PR also includes one commit that improves a log message, as both use a shared function to return the connection type as a string.  \r\n\r\nSuggested by sdaftuar- https://github.com/bitcoin/bitcoin/pull/19316#discussion_r468001604 & https://github.com/bitcoin/bitcoin/pull/19316#discussion_r468018093",
          "user": {
            "login": "amitiuttarwar",
            "id": 1500952,
            "node_id": "MDQ6VXNlcjE1MDA5NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amitiuttarwar",
            "html_url": "https://github.com/amitiuttarwar",
            "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
            "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
            "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
            "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
            "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 39,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19725",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19725",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19725.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19725.patch"
          },
          "closed_at": "2020-09-26T15:26:22Z",
          "created_at": "2020-08-15T02:26:17Z",
          "updated_at": "2022-02-15T10:49:48Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-02T02:36:59Z",
      "updated_at": "2020-09-02T02:36:59Z",
      "source": {
        "issue": {
          "id": 541144232,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MzU1ODU1OTc2",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17785",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17785/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17785/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17785/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/17785",
          "number": 17785,
          "state": "closed",
          "state_reason": null,
          "title": "p2p: Unify Send and Receive protocol versions",
          "body": "On master (6fef85bfa3cd7f76e83b8b57f9e4acd63eb664ec) `CNode` has two members to keep protocol version:\r\n- `nRecvVersion` for received messages\r\n- `nSendVersion` for messages to send\r\n\r\nAfter exchanging with `VERSION` and `VERACK` messages via protocol version `INIT_PROTO_VERSION`, both nodes set `nRecvVersion` _and_ `nSendVersion` to _the same_ value which is the greatest common protocol version.\r\n\r\nThis PR:\r\n- replaces two `CNode` members, `nRecvVersion` `nSendVersion`, with `m_greatest_common_version`\r\n- removes duplicated getter and setter\r\n\r\nThere is no change in behavior on the P2P network.",
          "user": {
            "login": "hebasto",
            "id": 32963518,
            "node_id": "MDQ6VXNlcjMyOTYzNTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hebasto",
            "html_url": "https://github.com/hebasto",
            "followers_url": "https://api.github.com/users/hebasto/followers",
            "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
            "organizations_url": "https://api.github.com/users/hebasto/orgs",
            "repos_url": "https://api.github.com/users/hebasto/repos",
            "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/hebasto/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 31,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17785",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/17785",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/17785.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/17785.patch"
          },
          "closed_at": "2020-09-21T22:16:18Z",
          "created_at": "2019-12-20T18:43:48Z",
          "updated_at": "2022-02-15T10:36:54Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-02T02:43:08Z",
      "updated_at": "2020-09-02T02:43:08Z",
      "source": {
        "issue": {
          "id": 520524049,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MzM5MDk2MDg0",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17428",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17428/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17428/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17428/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/17428",
          "number": 17428,
          "state": "closed",
          "state_reason": null,
          "title": "p2p: Try to preserve outbound block-relay-only connections during restart",
          "body": "This is an implementation of #17326: \r\n- all (currently 2) outbound block-relay-only connections (#15759) are dumped to `anchors.dat` file\r\n- on restart a node tries to connect to the addresses from `anchors.dat`\r\n\r\nThis PR prevents a type of eclipse attack when an attacker exploits a victim node restart to force it to connect to new, probably adversarial, peers.",
          "user": {
            "login": "hebasto",
            "id": 32963518,
            "node_id": "MDQ6VXNlcjMyOTYzNTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hebasto",
            "html_url": "https://github.com/hebasto",
            "followers_url": "https://api.github.com/users/hebasto/followers",
            "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
            "organizations_url": "https://api.github.com/users/hebasto/orgs",
            "repos_url": "https://api.github.com/users/hebasto/repos",
            "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/hebasto/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/45",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/45",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/45/labels",
            "id": 4914019,
            "node_id": "MDk6TWlsZXN0b25lNDkxNDAxOQ==",
            "number": 45,
            "state": "closed",
            "title": "0.21.0",
            "description": "",
            "creator": {
              "login": "laanwj",
              "id": 126646,
              "node_id": "MDQ6VXNlcjEyNjY0Ng==",
              "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/laanwj",
              "html_url": "https://github.com/laanwj",
              "followers_url": "https://api.github.com/users/laanwj/followers",
              "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
              "organizations_url": "https://api.github.com/users/laanwj/orgs",
              "repos_url": "https://api.github.com/users/laanwj/repos",
              "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/laanwj/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 132,
            "created_at": "2019-12-09T08:39:58Z",
            "updated_at": "2021-01-15T19:50:53Z",
            "closed_at": "2021-01-15T19:50:53Z"
          },
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 66,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17428",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/17428",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/17428.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/17428.patch"
          },
          "closed_at": "2020-10-15T18:21:56Z",
          "created_at": "2019-11-09T22:46:25Z",
          "updated_at": "2022-08-16T17:02:21Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-02T02:48:27Z",
      "updated_at": "2020-09-02T02:48:27Z",
      "source": {
        "issue": {
          "id": 509289288,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MzI5OTA3NDI5",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17194",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17194/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17194/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17194/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/17194",
          "number": 17194,
          "state": "closed",
          "state_reason": null,
          "title": "p2p: Avoid forwarding ADDR messages to SPV nodes ",
          "body": "### Background\r\n\r\nThe primary method of relaying node addresses across the network is daily self-announcement and forwarding self-announcements of other nodes.\r\nTo rate-limit those, we relay them only to 1 or 2 peers (depending on whether the address is reachable for us).\r\nUnfortunately, in current implementation there is a chance of choosing SPV nodes, which, to the best of my knowledge, currently do not forward those announcements.\r\n\r\n### Discussion\r\n\r\nDuring the [meeting](http://www.erisian.com.au/bitcoin-core-dev/log-2019-10-17.html) we reached a soft consensus that address relay participation should not be coupled to SPV/full node definition, but rather have an explicit flag (e.g. service flag).\r\nUntil that’s getting resolved, I’m suggesting a tiny patch that prevent forwarding (they still can request and learn) these announcements to SPV nodes.\r\n\r\n### Analysis\r\n\r\nTo justify the change, I decided to measure how does this relay perform in different conditions (see my [script](https://github.com/naumenkogs/bitcoin_network_analysis/blob/master/addr_relay/forward_to_spv.py)).\r\nI measured how many nodes know about the new address relayed through this protocol (omitting batching <10 rule) within 120 “waves” of relay, each happening every 30 seconds (which is roughly 1 hour).\r\n\r\nLet’s see what if the address is reachable to 5% of the network (I guess pretty fair assumption for Onion addresses, for example). Let's call those \"exotic\".\r\nLet's also simulate having 10% of black holes, which are indistinguishable from real nodes, but don't forward anything.\r\n\r\n|  non-forwarding SPV nodes                                   | 5%  | 10%  | 20%  | 30% |\r\n|--|--|--|--|--|\r\n| All nodes knowing addr (before the change) | 56% | 48% | 30% | 22% |\r\n| All nodes knowing addr (after the change)  | 55% | 54% | 58%  | 40% |\r\n|  |\r\n| Exotic nodes knowing addr (before the change) | 80% | 75% | 55% | 50% |\r\n| Exotic nodes knowing addr (after the change)  | 76% | 77% | 75%  | 75% |\r\n\r\nIf you don't believe it's that bad, please make your own simulation to validate mine :)\r\n\r\nIt will become worse and worse with the growth of SPV.\r\n\r\nThese numbers can also be used to motivate the high-level change (see [discussion](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-October/017428.html)).\r\n\r\n### Questions\r\n1. Would we make SPVs more vulnerable to addrman injections? Like, would it be easier for an attacker to fill their addrmans with malicious sybil nodes? (I guess we are already vulnerable it assuming some capabilities of an attacker, but would it be noticeably worse? EthanHeilman)\r\n2. Does the same apply to the old pruned nodes? (achow101 I think you mentioned that older nodes would also be excluded here). Should we forward these announcements to them, if this makes them noticeably more vulnerable?\r\n\r\nWe can forward it to these two groups IN ADDITION to forwarding to (1 or 2) peers, if there is a belief that this is might affect their security. The bandwidth overhead would be obviously very low.\r\n\r\n\r\n#### P.S.\r\n~~This experiment also means that we're very vulnerable to just black holes when relaying exotic addresses, but I will write about it in a separate issue.~~\r\nImrpoved the script to consider black holes.\r\n\r\n#### P.P.S.\r\n~~I guess the biggest inaccuracy in my little experiment is that in practice, those exotic semi-reachable nodes are well-interconnected, so once the address makes it to one of those — it should be relayed a bit better. Maybe, I will try to measure.\r\nAnyway, this does not disregard the problem.~~\r\nImproved the script to take exotic inter-connectivity into account and updated the measurements.",
          "user": {
            "login": "naumenkogs",
            "id": 7975071,
            "node_id": "MDQ6VXNlcjc5NzUwNzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/naumenkogs",
            "html_url": "https://github.com/naumenkogs",
            "followers_url": "https://api.github.com/users/naumenkogs/followers",
            "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
            "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
            "repos_url": "https://api.github.com/users/naumenkogs/repos",
            "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "comments": 23,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17194",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/17194",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/17194.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/17194.patch"
          },
          "closed_at": "2021-09-15T13:00:26Z",
          "created_at": "2019-10-18T20:15:17Z",
          "updated_at": "2022-10-30T19:10:34Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 480571773,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwNTcxNzcz",
      "url": null,
      "actor": null,
      "commit_id": "720f1125992022ae71dbfd3cf47f4d8761aab99c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#pullrequestreview-480571773",
      "submitted_at": "2020-09-02T07:55:25Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
    },
    {
      "event": "reviewed",
      "id": 480581377,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwNTgxMzc3",
      "url": null,
      "actor": null,
      "commit_id": "d3612a1fd0e61ee131feab9585bc199440547680",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#pullrequestreview-480581377",
      "submitted_at": "2020-09-02T08:08:21Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
    },
    {
      "event": "commented",
      "id": 685431218,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY4NTQzMTIxOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/685431218",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-02T08:09:29Z",
      "updated_at": "2020-09-02T08:09:29Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-685431218",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19858"
    },
    {
      "event": "reviewed",
      "id": 480586630,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwNTg2NjMw",
      "url": null,
      "actor": null,
      "commit_id": "f0975e75646e5b28699694ccf89d081d687ad090",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#pullrequestreview-480586630",
      "submitted_at": "2020-09-02T08:15:20Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
    },
    {
      "event": "commented",
      "id": 685440307,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY4NTQ0MDMwNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/685440307",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-02T08:25:41Z",
      "updated_at": "2020-09-02T08:25:41Z",
      "author_association": "MEMBER",
      "body": "Concept ACK\r\n\r\nThe most interesting question seems to be the eviction criteria after this new block-relay peer gave us a new block, and we want to evict someone.\r\n\r\nI think the \"evict the youngest\" approach is reasonable: it would be very hard for an attacker to control our block-relay-only connections by just serving blocks faster when we connect to them periodically. They'd have to also maintain very long-lived connections to evict honest peers rather than their own Sybils.\r\n\r\n--------\r\n\r\nWe still have a couple places with `m_tx_relay == nullptr`, and in some of them we mention `block-relay-only` in a related comment. Should we converge at least those to `IsBlockOnlyConn()` check?\r\n\r\n",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-685440307",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19858"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-02T11:05:35Z",
      "updated_at": "2020-09-02T11:05:35Z",
      "source": {
        "issue": {
          "id": 681292148,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDY5NzA0NDcw",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19763",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19763/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19763/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19763/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19763",
          "number": 19763,
          "state": "closed",
          "state_reason": null,
          "title": "net: don't try to relay to the address' originator",
          "body": "For each address to be relayed we \"randomly\" pick 2 nodes to send the \r\naddress to (in `RelayAddress()`). However we do not take into\r\nconsideration that it does not make sense to relay the address back to\r\nits originator (`CNode::PushAddress()` will do nothing in that case).\r\n\r\nThis means that if the originator is among the \"randomly\" picked nodes,\r\nthen we will relay to one node less than intended.\r\n\r\nFix this by skipping the originating node when choosing candidates to\r\nrelay to. ",
          "user": {
            "login": "vasild",
            "id": 266751,
            "node_id": "MDQ6VXNlcjI2Njc1MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vasild",
            "html_url": "https://github.com/vasild",
            "followers_url": "https://api.github.com/users/vasild/followers",
            "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
            "organizations_url": "https://api.github.com/users/vasild/orgs",
            "repos_url": "https://api.github.com/users/vasild/repos",
            "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/vasild/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 42,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19763",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19763",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19763.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19763.patch"
          },
          "closed_at": "2020-12-14T12:40:01Z",
          "created_at": "2020-08-18T19:48:03Z",
          "updated_at": "2022-02-15T10:39:43Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-02T13:13:14Z",
      "updated_at": "2020-09-02T13:13:14Z",
      "source": {
        "issue": {
          "id": 679431236,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDY4MjA3MTky",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19724",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19724/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19724/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19724/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19724",
          "number": 19724,
          "state": "closed",
          "state_reason": null,
          "title": "[net] Cleanup connection types- followups ",
          "body": "This PR addresses outstanding review comments from #19316. It further simplifies `net.cpp` complexity and adds documentation about design goals about different connection types. ",
          "user": {
            "login": "amitiuttarwar",
            "id": 1500952,
            "node_id": "MDQ6VXNlcjE1MDA5NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amitiuttarwar",
            "html_url": "https://github.com/amitiuttarwar",
            "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
            "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
            "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
            "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
            "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 17,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19724",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19724",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19724.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19724.patch"
          },
          "closed_at": "2020-09-03T11:29:33Z",
          "created_at": "2020-08-14T22:23:05Z",
          "updated_at": "2022-02-15T11:00:20Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-02T14:12:38Z",
      "updated_at": "2020-09-02T14:12:38Z",
      "source": {
        "issue": {
          "id": 691052547,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDc3ODQ1ODk3",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19860",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19860/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19860/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19860/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19860",
          "number": 19860,
          "state": "closed",
          "state_reason": null,
          "title": "p2p: Improve diversification of new connections",
          "body": "This PR improves the logic around netgroup diversity of new connections. More specifically, it improves privacy and fixes a couple things I consider buggy. It also adds a bunch of documentation. \r\n\r\nThis PR changes the following:\r\n1. prevents short-lived ADDR_FETCH and FEELER connections from affecting our further peer selection, because they are short-lived and should not matter\r\n2. ~~ADDR_FETCH and FEELER conns are now not included in `count_failure` consideration (see new documentation). Even though it *makes sense* to consider them if they are present at the moment of the call, we should not rely on that luck. Instead, we should be explicit.~~\r\n3. ~Prevents BLOCK_RELAY connections from affecting our further full-relay peer selection, because otherwise, an attacker with sufficient ADDR-related capabilities may infer to which netgroups those (supposedly more private) connections belong.~ Abandoning this feature for now because the trade-offs are unclear, see P2P meeting at #bitcoin-core-dev from Sept. 8.\r\n4. Look at the existing MANUAL peers when enforcing diversity of new outbound conns.\r\n\r\n~I’m also not sure whether *new* BLOCK_RELAY connections should be distinct w.r.t *existent* full outbound connections. Seems like another influence vector for an attacker with AddrMan poisoning capabilities, but this threat is probably too advanced. And having a good diversity of BLOCK_RELAY conns is very beneficial.~",
          "user": {
            "login": "naumenkogs",
            "id": 7975071,
            "node_id": "MDQ6VXNlcjc5NzUwNzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/naumenkogs",
            "html_url": "https://github.com/naumenkogs",
            "followers_url": "https://api.github.com/users/naumenkogs/followers",
            "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
            "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
            "repos_url": "https://api.github.com/users/naumenkogs/repos",
            "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 18,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19860",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19860",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19860.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19860.patch"
          },
          "closed_at": "2022-12-05T11:43:24Z",
          "created_at": "2020-09-02T14:06:09Z",
          "updated_at": "2023-03-15T16:12:24Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3725010641,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzcyNTAxMDY0MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3725010641",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-03T14:24:30Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3725096941,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzcyNTA5Njk0MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3725096941",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-03T14:41:59Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3725103988,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzcyNTEwMzk4OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3725103988",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-03T14:43:29Z"
    },
    {
      "event": "ready_for_review",
      "id": 3725116808,
      "node_id": "MDE5OlJlYWR5Rm9yUmV2aWV3RXZlbnQzNzI1MTE2ODA4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3725116808",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-03T14:46:03Z"
    },
    {
      "event": "commented",
      "id": 686542959,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY4NjU0Mjk1OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/686542959",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-03T14:46:22Z",
      "updated_at": "2020-09-03T14:46:22Z",
      "author_association": "MEMBER",
      "body": "Now that #19724 has been merged, this is ready for review.",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-686542959",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19858"
    },
    {
      "event": "commented",
      "id": 686556494,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY4NjU1NjQ5NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/686556494",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-03T15:06:31Z",
      "updated_at": "2020-09-03T15:06:31Z",
      "author_association": "MEMBER",
      "body": "> We still have a couple places with m_tx_relay == nullptr, and in some of them we mention block-relay-only in a related comment. Should we converge at least those to IsBlockOnlyConn() check?\r\n\r\nI actually didn't mean to necessarily include that `m_tx_relay == nullptr` in the `LogPrintf()` that I did; the clarification of changing to using the `IsBlockOnlyConn()` check was leftover from a previous version of this work where I was going to introduce a new connection type altogether, and the `m_tx_relay == nullptr` check would have been incorrect for identifying the peer type.\r\n\r\nIn this PR that change is unnecessary (though an improvement), but I guess I don't want to do a wholesale review of all the `m_tx_relay==nullptr` checks still in the code -- many of them are places where we check for `nullptr` before dereferencing, which I think would make sense to leave as-is.  Places in the code where we use that check to determine how to do something logical with that peer are different, and should be switched at some point.  If there are places like that which make this new code harder to understand, please flag and I can include fixes here, but I think since I'm not adding new peer-types I hope that wouldn't be necessary.",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-686556494",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19858"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3725653842,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzcyNTY1Mzg0Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3725653842",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-03T16:45:22Z"
    },
    {
      "event": "reviewed",
      "id": 482291423,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyMjkxNDIz",
      "url": null,
      "actor": null,
      "commit_id": "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "I'm leaning towards Concept ACK but have you considered impact with #17428 ? I fear it may reduce its usefulness.",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#pullrequestreview-482291423",
      "submitted_at": "2020-09-04T01:48:46Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
    },
    {
      "event": "reviewed",
      "id": 482425041,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyNDI1MDQx",
      "url": null,
      "actor": null,
      "commit_id": "013b41fc27110a288d93dde73325602526a692f5",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#pullrequestreview-482425041",
      "submitted_at": "2020-09-04T07:34:30Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
    },
    {
      "event": "reviewed",
      "id": 482429291,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyNDI5Mjkx",
      "url": null,
      "actor": null,
      "commit_id": "013b41fc27110a288d93dde73325602526a692f5",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#pullrequestreview-482429291",
      "submitted_at": "2020-09-04T07:41:33Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
    },
    {
      "event": "reviewed",
      "id": 482488691,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyNDg4Njkx",
      "url": null,
      "actor": null,
      "commit_id": "013b41fc27110a288d93dde73325602526a692f5",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#pullrequestreview-482488691",
      "submitted_at": "2020-09-04T09:07:59Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
    },
    {
      "event": "reviewed",
      "id": 482495238,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyNDk1MjM4",
      "url": null,
      "actor": null,
      "commit_id": "013b41fc27110a288d93dde73325602526a692f5",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#pullrequestreview-482495238",
      "submitted_at": "2020-09-04T09:17:26Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-04T12:17:23Z",
      "updated_at": "2020-09-04T12:17:23Z",
      "source": {
        "issue": {
          "id": 693047581,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDc5NTc4NzY4",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19869",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19869/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19869/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19869/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19869",
          "number": 19869,
          "state": "closed",
          "state_reason": null,
          "title": "Better intervals between feelers",
          "body": "~_Draft pending on #19958_~\r\n\r\n1. If an attempt to connect to a feeler wasn't actually made (an entry from AddrMan we considered was invalid, or we made too many tries, or it didn't have the right flag) — wait less until we try the next feeler.\r\n2. Make those intervals mockable\r\n3. Remove unnecessary extra random noise between feelers\r\n\r\n(1) would make transitioning from \"new\" to \"tried\" better in the presence of those events. An adversary here fills our \"new\" table with garbage to prevent us from trying honest peers from \"new\". This probably won't help much against a very powerful adversary but will help against a moderate adversary. It also may help in natural non-malicious cases.\r\n\r\nMoving from \"new\" to \"tried\" table is important for p2p security.",
          "user": {
            "login": "naumenkogs",
            "id": 7975071,
            "node_id": "MDQ6VXNlcjc5NzUwNzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/naumenkogs",
            "html_url": "https://github.com/naumenkogs",
            "followers_url": "https://api.github.com/users/naumenkogs/followers",
            "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
            "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
            "repos_url": "https://api.github.com/users/naumenkogs/repos",
            "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "comments": 5,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19869",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19869",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19869.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19869.patch"
          },
          "closed_at": "2021-09-15T11:28:44Z",
          "created_at": "2020-09-04T11:02:08Z",
          "updated_at": "2022-10-30T19:10:21Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 687220322,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY4NzIyMDMyMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/687220322",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-04T15:28:40Z",
      "updated_at": "2020-09-04T15:28:40Z",
      "author_association": "MEMBER",
      "body": "> I'm leaning towards Concept ACK but have you considered impact with #17428 ? I fear it may reduce its usefulness.\r\n\r\nI don't think #17428 has any meaningful interaction with this.  These connections are short-lived, and generally speaking under normal circumstances rotation doesn't actually occur, because we're unlikely to get a new block from one of these connections rather than from one of our high-bandwidth compact block peers.  Even if rotation were to occur, I don't think #17428 has any meaningful negative consequences here -- keeping track of helpful block-relay peers seems an independently good idea.",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-687220322",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19858"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3730785181,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzczMDc4NTE4MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3730785181",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-04T17:17:58Z"
    },
    {
      "event": "reviewed",
      "id": 482754298,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyNzU0Mjk4",
      "url": null,
      "actor": null,
      "commit_id": "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Responded to feedback so far, mostly doc/comment/variable naming changes.\r\n\r\nI did make a change to the eviction algorithm, to now check that the newest peer served us a block more recently than the second youngest peer before deciding to evict the second-youngest peer instead. However, I haven't yet been able to test the eviction logic (so far in a few weeks of running various versions of this code, I haven't yet seen it evict an older block-relay-only peer yet), so this is something to be looked at carefully. ",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#pullrequestreview-482754298",
      "submitted_at": "2020-09-04T17:19:48Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
    },
    {
      "event": "commented",
      "id": 688183643,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY4ODE4MzY0Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/688183643",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-07T09:06:53Z",
      "updated_at": "2020-09-07T09:06:53Z",
      "author_association": "MEMBER",
      "body": "utACK 02cf9c7c649c6e3a425b486ad2a64c4f1a0c3fe7\r\n\r\n----------\r\n\r\nIf we want to make a strong statement that this is *by all means* an improvement over the existing approach, we might want to increase block-relay-only conns limit (`m_max_outbound_block_relay`) by 1. Otherwise, an attacker may make (currently) 1 out of 2 our block-relay-only conns more vulnerable for eviction by feeding us blocks faster.\r\n\r\nOf course, to be a successful eclipse attack, they would have to do much more...",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-688183643",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19858"
    },
    {
      "event": "labeled",
      "id": 3738049523,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM3MzgwNDk1MjM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3738049523",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-07T17:39:39Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 688903823,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY4ODkwMzgyMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/688903823",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-08T14:12:27Z",
      "updated_at": "2020-09-08T14:14:14Z",
      "author_association": "CONTRIBUTOR",
      "body": "@naumenkogs \r\n\r\n> If we want to make a strong statement that this is _by all means_ an improvement over the existing approach, we might want to increase block-relay-only conns limit (`m_max_outbound_block_relay`) by 1. Otherwise, an attacker may make (currently) 1 out of 2 our block-relay-only conns more vulnerable for eviction by feeding us blocks faster.\r\n\r\nWhat would be the best arguments _against_ bumping `m_max_outbound_block_relay` by 1?\r\n\r\n(Personally I think (tentatively) that increasing `m_max_outbound_block_relay` is a good idea, but it would be nice to have the best arguments against too :))",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-688903823",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19858"
    },
    {
      "event": "mentioned",
      "id": 3741169185,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mzc0MTE2OTE4NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3741169185",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-08T14:12:27Z"
    },
    {
      "event": "subscribed",
      "id": 3741169192,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM3NDExNjkxOTI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3741169192",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-08T14:12:27Z"
    },
    {
      "event": "reviewed",
      "id": 484168129,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0MTY4MTI5",
      "url": null,
      "actor": null,
      "commit_id": "411056e3ce2c39c929917547f22b7ca62e594882",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code Review ACK-pending-on-rebase. I took the opportunity to add few more code/comments improvements, feel free to take them.\r\n\r\n> Even if rotation were to occur, I don't think #17428 has any meaningful negative consequences here -- keeping track of helpful block-relay peers seems an independently good idea.\r\n\r\nI was thinking the reverse ! More #19858 having negative consequences on #17428. An attacker's sybil if selected as extra-block-relay might be able to outrun a high-bandwidth compact blocks peers such that evicting this peer from its anchor slot. Breaking the best-effort connection stability of anchors peers ? After this current work, I would lean to introduce these anchors as a complete new type of peers to ease reasoning on them.\r\n\r\nWith regards to functional test coverage we are limited by #19315 and mocking addresses of P2P connections I guess ? ",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#pullrequestreview-484168129",
      "submitted_at": "2020-09-08T14:26:05Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
    },
    {
      "event": "commented",
      "id": 688918364,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY4ODkxODM2NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/688918364",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-08T14:33:29Z",
      "updated_at": "2020-09-08T14:33:29Z",
      "author_association": "MEMBER",
      "body": "> What would be the best arguments against bumping m_max_outbound_block_relay by 1?\r\n\r\nThe best argument I'm aware of: we use up more connection slots on listening nodes, which is a limited resource.  So if we start increasing the number of outbound connections we make, we should think hard about also increasing the default number of connections we expect a listening node to be able to handle.\r\n\r\nI think that these connections should be lightweight enough that we ought to be able to allocate more inbound connection slots to low-resource peers like these; however that is not easy for us to do until we have a way to communicate to our outbound peer when we connect that we're a block-relay-only peer and not planning to re-enable transaction relay later on in the connection's lifetime.\r\n\r\nMy plan to increase this number is to: (1) first propose a p2p protocol upgrade that would inform our peer that we're block-relay only, then (2) add support for reducing resources that we allocate to such inbound peers, and then (3) propose that we increase the number of inbound connections by accounting for block-relay inbounds differently from the rest, and finally (4) then increase the default number of outbound block-relay-only peers.\r\n\r\nBut if there are other concerns about increasing this number, I'd like to hear them!  I'm currently working on steps 1 and 2 in the above.\r\n\r\nAt any rate, I'm not inclined to propose increasing the number of connections in this PR, because I didn't want to use further permanent block-relay-only connections until we made more progress reducing the resource impact.",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-688918364",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19858"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3746486108,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mzc0NjQ4NjEwOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3746486108",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-09T15:33:42Z"
    },
    {
      "event": "unlabeled",
      "id": 3746509859,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50Mzc0NjUwOTg1OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3746509859",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-09T15:38:46Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3746571750,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mzc0NjU3MTc1MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3746571750",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-09T15:52:23Z"
    },
    {
      "event": "commented",
      "id": 689657614,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY4OTY1NzYxNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/689657614",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-09T15:59:49Z",
      "updated_at": "2020-09-09T15:59:49Z",
      "author_association": "MEMBER",
      "body": "Rebased and updated to fix some documentation issues pointed out by @ariard.\r\n\r\n> I was thinking the reverse ! More #19858 having negative consequences on #17428. An attacker's sybil if selected as extra-block-relay might be able to outrun a high-bandwidth compact blocks peers such that evicting this peer from its anchor slot.\r\n\r\nI don't think that is a big concern -- by construction, only 1 out of our current 2 block-relay-only peers will be able to be rotated this way, and to maintain this attack an adversary has to continually give us the best block faster than anyone else, which makes them not much of an attacker until they stop.  And once they stop, this logic continues to protect us because it's always connecting to new peers to sync tips.\r\n\r\n> With regards to functional test coverage we are limited by #19315 and mocking addresses of P2P connections I guess ?\r\n\r\nYeah, I'm not aware of any way to test this code in our current testing framework.  I believe that even after #19315, we still will not have a way to exercise the logic in `ThreadOpenConnections`, so I think manual testing is best for this PR.",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-689657614",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19858"
    },
    {
      "event": "mentioned",
      "id": 3746606837,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mzc0NjYwNjgzNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3746606837",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-09T15:59:50Z"
    },
    {
      "event": "subscribed",
      "id": 3746606842,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM3NDY2MDY4NDI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3746606842",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-09T15:59:50Z"
    },
    {
      "event": "commented",
      "id": 690023179,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY5MDAyMzE3OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/690023179",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-10T06:39:15Z",
      "updated_at": "2020-09-10T06:39:15Z",
      "author_association": "MEMBER",
      "body": "ACK 8ea760b10221eb01b057363693ab74cdc810fd4a",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-690023179",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19858"
    },
    {
      "event": "commented",
      "id": 690286990,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY5MDI4Njk5MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/690286990",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-10T13:25:22Z",
      "updated_at": "2020-09-10T13:25:22Z",
      "author_association": "MEMBER",
      "body": "If anyone is curious, I tried to exercise the eviction logic a bit with this patch added on top of this PR:\r\n\r\n```diff\r\ndiff --git a/src/net.cpp b/src/net.cpp\r\nindex c7b64f9d505..5a47d9d8c8d 100644\r\n--- a/src/net.cpp\r\n+++ b/src/net.cpp\r\n@@ -2863,6 +2863,11 @@ CNode::CNode(NodeId idIn, ServiceFlags nLocalServicesIn, int nMyStartingHeightIn\r\n \r\n     m_deserializer = MakeUnique<V1TransportDeserializer>(V1TransportDeserializer(Params().MessageStart(), SER_NETWORK, INIT_PROTO_VERSION));\r\n     m_serializer = MakeUnique<V1TransportSerializer>(V1TransportSerializer());\r\n+\r\n+    // 10% chance of initializing nLastBlockTime to current time\r\n+    if (GetRandInt(100) <= 10) {\r\n+        nLastBlockTime = GetTime();\r\n+    }\r\n }\r\n \r\n CNode::~CNode()\r\ndiff --git a/src/net_processing.cpp b/src/net_processing.cpp\r\nindex 2f98663e7cf..05dd1f38a6c 100644\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -4006,6 +4006,9 @@ void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\r\n             if (node_state == nullptr ||\r\n                 (time_in_seconds - pnode->nTimeConnected >= MINIMUM_CONNECT_TIME && node_state->nBlocksInFlight == 0)) {\r\n                 pnode->fDisconnect = true;\r\n+                if (to_disconnect != youngest_peer.first) {\r\n+                    LogPrint(BCLog::NET, \"Block-relay peer rotation: keeping new peer=%d, disconnecting old peer=%d\\n\", youngest_peer.first, to_disconnect);\r\n+                }\r\n                 LogPrint(BCLog::NET, \"disconnecting extra block-relay-only peer=%d (last block received at time %d)\\n\", pnode->GetId(), pnode->nLastBlockTime);\r\n                 return true;\r\n             } else {\r\n```\r\n\r\nPerhaps other reviewers will find additional ways to fully exercise this code.",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-690286990",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19858"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-11T16:38:50Z",
      "updated_at": "2020-09-11T16:38:50Z",
      "source": {
        "issue": {
          "id": 694969308,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDgxMjc1MDUw",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19906",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19906/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19906/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19906/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19906",
          "number": 19906,
          "state": "closed",
          "state_reason": null,
          "title": "Bugfix: don't make collision from \"tried\" a feeler ",
          "body": "The purpose of feelers is to move addrs from \"new\" to \"tried.\"\r\nWe should not select a node evicted from collisions, as they are already \"tried\".",
          "user": {
            "login": "naumenkogs",
            "id": 7975071,
            "node_id": "MDQ6VXNlcjc5NzUwNzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/naumenkogs",
            "html_url": "https://github.com/naumenkogs",
            "followers_url": "https://api.github.com/users/naumenkogs/followers",
            "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
            "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
            "repos_url": "https://api.github.com/users/naumenkogs/repos",
            "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19906",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19906",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19906.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19906.patch"
          },
          "closed_at": "2020-09-15T08:05:58Z",
          "created_at": "2020-09-07T10:41:54Z",
          "updated_at": "2022-02-15T11:00:34Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 692826368,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY5MjgyNjM2OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/692826368",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-15T16:24:32Z",
      "updated_at": "2020-09-15T16:24:48Z",
      "author_association": "MEMBER",
      "body": "Tested/Code Review ACK 8ea760b under following caveats.\r\n\r\nI observed that the new eviction logic is working as expected and extra block-relay-only peers are rotated based on their last block received time.\r\n\r\nNote for the other reviewers, I took the proposed patch with further modifications:\r\n* scale down EXTRA_PEER_CHECK_INTERVAL/EXTRA_BLOCK_RELAY_ONLY_PEER_INTERVAL to 5s and 15s\r\n* activate extra block relay peers opening independently of IBD\r\n* disable block-sync\r\n* 50% chance to initialize nLastBlockTime to current time\r\n\r\nThis interferes with protecting peers for in-flight blocks but at least underscores well the working opening and rotation.",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-692826368",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19858"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-15T17:06:37Z",
      "updated_at": "2020-09-15T17:06:37Z",
      "source": {
        "issue": {
          "id": 640752006,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDM2MTA0MjAz",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19315",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19315/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19315/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19315/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19315",
          "number": 19315,
          "state": "closed",
          "state_reason": null,
          "title": "[tests] Allow outbound & block-relay-only connections in functional tests. ",
          "body": "The existing functional test framework uses the `addnode` RPC to spin up manual connections between bitcoind nodes. This limits our ability to add integration tests for our networking code, which often executes different code paths for different connection types. \r\n\r\n**This PR enables creating `outbound` & `block-relay-only` P2P connections in the functional tests.** This allows us to increase our p2p test coverage, since we can now verify expectations around these connection types.\r\n\r\nThis builds out the [prototype](https://github.com/bitcoin/bitcoin/issues/14210#issuecomment-527421978) proposed by ajtowns in #14210. 🙌🏽\r\n\r\nAn overview of this branch:\r\n- introduces a new test-only RPC function `addconnection` which initiates opening an `outbound` or `block-relay-only` connection. (conceptually similar to `addnode` but for different connection types & restricted to regtest)\r\n- adds `test_framework` support so a mininode can open an `outbound`/`block-relay-only` connection to a `P2PInterface`/`P2PConnection`.\r\n- updates `p2p_blocksonly` tests to create a `block-relay-only` connection & verify expectations around transaction relay. \r\n- introduces `p2p_add_connections` test that checks the behaviors of the newly introduced `add_outbound_p2p_connection` test framework function. \r\n\r\nWith these changes, there are many more behaviors that we can add integration tests for. The blocksonly updates is just one example. \r\n\r\nHuge props to ajtowns for conceiving the approach & providing me feedback as I've built out this branch. Also thank you to jnewbery for lots of thoughtful input along the way. ",
          "user": {
            "login": "amitiuttarwar",
            "id": 1500952,
            "node_id": "MDQ6VXNlcjE1MDA5NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amitiuttarwar",
            "html_url": "https://github.com/amitiuttarwar",
            "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
            "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
            "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
            "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
            "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 1648013533,
              "node_id": "MDU6TGFiZWwxNjQ4MDEzNTMz",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Review%20club",
              "name": "Review club",
              "description": "",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 34,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19315",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19315",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19315.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19315.patch"
          },
          "closed_at": "2021-01-11T20:08:15Z",
          "created_at": "2020-06-17T21:25:12Z",
          "updated_at": "2022-08-16T17:11:32Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-19T13:22:42Z",
      "updated_at": "2020-09-19T13:22:42Z",
      "source": {
        "issue": {
          "id": 704846936,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDg5NzAwOTU2",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19979",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19979/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19979/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19979/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19979",
          "number": 19979,
          "state": "closed",
          "state_reason": null,
          "title": "Replace LockAssertion with AssertLockHeld, remove LockAssertion",
          "body": "This PR replaces `LockAssertion` with `AssertLockHeld`, and removes `LockAssertion`.\r\n\r\nThis PR is compared with alternatives in https://github.com/bitcoin-core/bitcoin-devwiki/wiki/AssertLockHeld-PRs",
          "user": {
            "login": "hebasto",
            "id": 32963518,
            "node_id": "MDQ6VXNlcjMyOTYzNTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hebasto",
            "html_url": "https://github.com/hebasto",
            "followers_url": "https://api.github.com/users/hebasto/followers",
            "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
            "organizations_url": "https://api.github.com/users/hebasto/orgs",
            "repos_url": "https://api.github.com/users/hebasto/repos",
            "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/hebasto/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 12,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19979",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19979",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19979.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19979.patch"
          },
          "closed_at": "2020-09-23T14:38:13Z",
          "created_at": "2020-09-19T09:20:16Z",
          "updated_at": "2022-02-15T10:36:19Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-19T13:31:10Z",
      "updated_at": "2020-09-19T13:31:10Z",
      "source": {
        "issue": {
          "id": 701708931,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDg3MTE2MDA0",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19958",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19958/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19958/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19958/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19958",
          "number": 19958,
          "state": "closed",
          "state_reason": null,
          "title": "doc: Better document features of feelers",
          "body": "\"feeler\" and \"test-before-evict\" are two different strategies suggest in [Eclipse Attacks on Bitcoin’s Peer-to-Peer Network](https://www.usenix.org/system/files/conference/usenixsecurity15/sec15-paper-heilman.pdf). In our codebase, we use `ConnType::FEELER` to implement both.\r\n\r\nIt is confusing, up to the point that our documentation was just incorrect.\r\n\r\nThis PR:\r\n- ~clarifies this aspect by renaming \"ConnType::FEELER\" to \"ConnType::PROBE\", meaning that this connections only probes that the node is operational, and then disconnects.~\r\n- fixes the documentation",
          "user": {
            "login": "naumenkogs",
            "id": 7975071,
            "node_id": "MDQ6VXNlcjc5NzUwNzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/naumenkogs",
            "html_url": "https://github.com/naumenkogs",
            "followers_url": "https://api.github.com/users/naumenkogs/followers",
            "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
            "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
            "repos_url": "https://api.github.com/users/naumenkogs/repos",
            "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 16,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19958",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19958",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19958.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19958.patch"
          },
          "closed_at": "2020-09-30T04:42:14Z",
          "created_at": "2020-09-15T08:04:57Z",
          "updated_at": "2022-02-15T10:47:50Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-19T13:46:28Z",
      "updated_at": "2020-09-19T13:46:28Z",
      "source": {
        "issue": {
          "id": 695294930,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDgxNTU5ODgy",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19910",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19910/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19910/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19910/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19910",
          "number": 19910,
          "state": "closed",
          "state_reason": null,
          "title": "net processing: Move peer_map to PeerManager",
          "body": "This moves `g_peer_map` from a global in net_processing.cpp's unnamed namespace to being a member `m_peer_map` of `PeerManager`.",
          "user": {
            "login": "jnewbery",
            "id": 1063656,
            "node_id": "MDQ6VXNlcjEwNjM2NTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jnewbery",
            "html_url": "https://github.com/jnewbery",
            "followers_url": "https://api.github.com/users/jnewbery/followers",
            "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
            "organizations_url": "https://api.github.com/users/jnewbery/orgs",
            "repos_url": "https://api.github.com/users/jnewbery/repos",
            "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jnewbery/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "comments": 14,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19910",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19910",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19910.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19910.patch"
          },
          "closed_at": "2020-12-09T13:56:46Z",
          "created_at": "2020-09-07T17:17:27Z",
          "updated_at": "2021-09-15T23:53:25Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-19T13:53:11Z",
      "updated_at": "2020-09-19T13:53:11Z",
      "source": {
        "issue": {
          "id": 694123169,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDgwNTQ4MDA4",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19884",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19884/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19884/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19884/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19884",
          "number": 19884,
          "state": "closed",
          "state_reason": null,
          "title": "p2p: No delay in adding fixed seeds if -dnsseed=0 and peers.dat is empty",
          "body": "Closes #19795 \r\n\r\nBefore PR: If `peers.dat` is empty and `-dnsseed=0`, bitcoind will fallback on to fixed seeds but only after a 60 seconds delay.\r\nAfter PR: There's no 60 second delay.\r\n\r\nTo reproduce:\r\n`rm ~/.bitcoin/peers.dat && src/bitcoind -dnsseed=0` without and with patch code\r\n\r\nOther changes in the PR:\r\n- `-fixedseeds` command line argument added: `-dnsseed=0 -fixedseeds=0 -addnode=X` provides a trusted peer only setup. `-dnsseed=0 -fixedseeds=0` allows for a `addnode` RPC to add a trusted peer without falling back to hardcoded seeds.\r\n",
          "user": {
            "login": "dhruv",
            "id": 856960,
            "node_id": "MDQ6VXNlcjg1Njk2MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dhruv",
            "html_url": "https://github.com/dhruv",
            "followers_url": "https://api.github.com/users/dhruv/followers",
            "following_url": "https://api.github.com/users/dhruv/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/dhruv/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/dhruv/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
            "organizations_url": "https://api.github.com/users/dhruv/orgs",
            "repos_url": "https://api.github.com/users/dhruv/repos",
            "events_url": "https://api.github.com/users/dhruv/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/dhruv/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 29,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19884",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19884",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19884.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19884.patch"
          },
          "closed_at": "2021-02-12T10:49:55Z",
          "created_at": "2020-09-05T16:46:06Z",
          "updated_at": "2022-08-16T17:04:19Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-30T09:27:05Z",
      "updated_at": "2020-09-30T09:27:05Z",
      "source": {
        "issue": {
          "id": 711749648,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDk1MzQ2NTIx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20044",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20044/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20044/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20044/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/20044",
          "number": 20044,
          "state": "closed",
          "state_reason": null,
          "title": "Make all of net_processing (and some of net) use std::chrono types",
          "body": "This changes various uses of integers to represent timestamps and durations to `std::chrono` duration types with type-safe conversions, getting rid of various `.count()`, constructors, and conversion factors.\r\n\r\nBuilds on #20027.",
          "user": {
            "login": "sipa",
            "id": 548488,
            "node_id": "MDQ6VXNlcjU0ODQ4OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sipa",
            "html_url": "https://github.com/sipa",
            "followers_url": "https://api.github.com/users/sipa/followers",
            "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
            "organizations_url": "https://api.github.com/users/sipa/orgs",
            "repos_url": "https://api.github.com/users/sipa/repos",
            "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sipa/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 16,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20044",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/20044",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/20044.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/20044.patch"
          },
          "closed_at": "2021-01-26T16:31:33Z",
          "created_at": "2020-09-30T08:36:39Z",
          "updated_at": "2022-08-16T17:03:23Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 501633440,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNjMzNDQw",
      "url": null,
      "actor": null,
      "commit_id": "8ea760b10221eb01b057363693ab74cdc810fd4a",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#pullrequestreview-501633440",
      "submitted_at": "2020-10-04T15:25:00Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
    },
    {
      "event": "reviewed",
      "id": 501847787,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxODQ3Nzg3",
      "url": null,
      "actor": null,
      "commit_id": "8ea760b10221eb01b057363693ab74cdc810fd4a",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Ran this overnight with the following variant of @sdaftuar's patch https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-690286990 with some additional logging.\r\n\r\n<details><summary>patch</summary><p>\r\n\r\n```diff\r\n\r\n--- a/src/net.cpp\r\n+++ b/src/net.cpp\r\n@@ -1831,6 +1831,7 @@ int CConnman::GetExtraFullOutboundCount()\r\n+    LogPrintf(\"GetExtraFullOutboundCount() %d\\n\", std::max(full_outbound_peers - m_max_outbound_full_relay, 0));\r\n     return std::max(full_outbound_peers - m_max_outbound_full_relay, 0);\r\n }\r\n@@ -1845,6 +1846,7 @@ int CConnman::GetExtraBlockRelayCount()\r\n+    LogPrintf(\"GetExtraBlockRelayCount() %d\\n\", std::max(block_relay_peers - m_max_outbound_block_relay, 0));\r\n     return std::max(block_relay_peers - m_max_outbound_block_relay, 0);\r\n }\r\n@@ -1877,6 +1879,7 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\r\n     // Minimum time before next feeler connection (in microseconds).\r\n     int64_t nNextFeeler = PoissonNextSend(nStart*1000*1000, FEELER_INTERVAL);\r\n     int64_t nNextExtraBlockRelay = PoissonNextSend(nStart*1000*1000, EXTRA_BLOCK_RELAY_ONLY_PEER_INTERVAL);\r\n+    LogPrintf(\"nNextExtraBlockRelay %d\\n\", nNextExtraBlockRelay);\r\n     while (!interruptNet)\r\n@@ -1980,6 +1983,7 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\r\n             // connections, they do not get their own ConnectionType enum\r\n             // (similar to how we deal with extra outbound peers).\r\n             nNextExtraBlockRelay = PoissonNextSend(nTime, EXTRA_BLOCK_RELAY_ONLY_PEER_INTERVAL);\r\n+            LogPrintf(\"nNextExtraBlockRelay %d\\n\", nNextExtraBlockRelay);\r\n             conn_type = ConnectionType::BLOCK_RELAY;\r\n@@ -2936,6 +2940,11 @@ CNode::CNode(NodeId idIn, ServiceFlags nLocalServicesIn, int nMyStartingHeightIn\r\n \r\n     m_deserializer = MakeUnique<V1TransportDeserializer>(V1TransportDeserializer(Params(), GetId(), SER_NETWORK, INIT_PROTO_VERSION));\r\n     m_serializer = MakeUnique<V1TransportSerializer>(V1TransportSerializer());\r\n+    // 10% chance of initializing nLastBlockTime to current time\r\n+    if (GetRandInt(100) <= 10) {\r\n+        nLastBlockTime = GetTime();\r\n+    }\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -3990,6 +3988,9 @@ void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\r\n             if (node_state == nullptr ||\r\n                 (time_in_seconds - pnode->nTimeConnected >= MINIMUM_CONNECT_TIME && node_state->nBlocksInFlight == 0)) {\r\n                 pnode->fDisconnect = true;\r\n+                if (to_disconnect != youngest_peer.first) {\r\n+                    LogPrint(BCLog::NET, \"Block-relay peer rotation: keeping new peer=%d, disconnecting old peer=%d\\n\", youngest_peer.first, to_disconnect);\r\n+                }\r\n```\r\n</p></details>\r\n\r\nHere was the result: [pr19858-custom-logging-debug-log-grep.txt](https://github.com/bitcoin/bitcoin/files/5326536/pr19858-custom-logging-debug-log-grep.txt)\r\n",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#pullrequestreview-501847787",
      "submitted_at": "2020-10-05T09:43:23Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3841703944,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mzg0MTcwMzk0NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3841703944",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-05T17:49:01Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3841817316,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mzg0MTgxNzMxNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3841817316",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-05T18:17:52Z"
    },
    {
      "event": "commented",
      "id": 703809158,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcwMzgwOTE1OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/703809158",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-05T18:28:24Z",
      "updated_at": "2020-10-05T18:28:24Z",
      "author_association": "MEMBER",
      "body": "@jonatack Thanks for the review and testing; I've rebased to fix the silent merge conflict with the `LockAssertion` stuff and addressed your comments.",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-703809158",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19858"
    },
    {
      "event": "mentioned",
      "id": 3841859116,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mzg0MTg1OTExNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3841859116",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-05T18:28:25Z"
    },
    {
      "event": "subscribed",
      "id": 3841859118,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM4NDE4NTkxMTg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3841859118",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-05T18:28:25Z"
    },
    {
      "event": "commented",
      "id": 704304140,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcwNDMwNDE0MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/704304140",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-06T14:23:11Z",
      "updated_at": "2020-10-06T14:23:11Z",
      "author_association": "CONTRIBUTOR",
      "body": "Diff per `git range-diff 875e1cc 8ea760b 93a0ec1` looks good, will circle back shortly.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-704304140",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19858"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-15T21:03:03Z",
      "updated_at": "2020-10-15T21:03:03Z",
      "source": {
        "issue": {
          "id": 722569048,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NTA0Mjk2MzUx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20158",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20158/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20158/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20158/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/20158",
          "number": 20158,
          "state": "closed",
          "state_reason": null,
          "title": "tree-wide: De-globalize ChainstateManager",
          "body": "## Prelude\r\n\r\n**Note to reviewers**: Currently looking Code Review on Sub-PRs (see below)\r\n\r\nOriginally: #20049\r\n\r\n### Sub-PRs\r\n\r\n_Last updated May 9th, 2020_\r\n\r\n- [x] #20323 | tests: Create or use existing properly initialized NodeContexts\r\n- [x] #20946 | fuzz: Consolidate fuzzing TestingSetup initialization\r\n- [x] #20972 | locks: Annotate CTxMemPool::check to require cs_main\r\n- [x] #20749 | [Bundle 1/n] Prune g_chainman usage related to ::LookupBlockIndex\r\n- [x] #20750 | [Bundle 2/n] Prune g_chainman usage in mempool-related validation functions\r\n- [x] #21055 | [Bundle 3/n] Prune remaining g_chainman usage in validation functions\r\n- [x] #21270 | [Bundle 4/n] Prune g_chainman usage in validation-adjacent modules\r\n- [x] #21391 | [Bundle 5/n] Prune g_chainman usage in RPC modules\r\n- [x] #21767 | [Bundle 6/n] Prune g_chainman usage in auxiliary modules\r\n- [x] #21866 | [Bundle 7/n] Farewell, global Chainstate!\r\n\r\n### Todo List\r\n\r\n_Last updated Feb 1st, 2020_\r\n\r\n- [x] Address ryanofsky's comments\r\n\t- [x] https://github.com/bitcoin/bitcoin/pull/20158#discussion_r520639845\r\n\r\n## Motivation\r\n\r\n###  Modularizing our consensus engine\r\n\r\nExcerpt from #20049\r\n> From my reading of past conversations and from a few offline chats, it seems that modularizing our consensus engine is a worthwhile first step towards a more complete isolation of said engine from non-consensus code.\r\n> \r\n> Modularizing our consensus engine means that:\r\n> \r\n> 1. We get clearer visibility into what currently lies in consensus codepaths **and** what depends on our consensus engine\r\n> 1. We can coalesce duplicate consensus initialization codepaths, mitigating against bugs that arise out of test/non-test initialization inconsistencies\r\n\r\n### De-globalizing `g_chainman`\r\n\r\nExcerpt from #20049\r\n> In order to modularize our consensus engine, we need to first de-globalize the global `ChainstateManager` -- namely `g_chainman` -- as it and its dependencies are what makes up the bulk of our consensus engine. A few direct references to `g_chainman` have already been removed in #19927, however, its indirect uses (mainly via `::Chain(state|)Active()`) are numerous in our codebase and often used to ~~cheat~~ avoid obtaining a `ChainstateManager` reference.\r\n\r\n## Description\r\n\r\nThis changeset moves the global `ChainstateManger` to `NodeContext` and removes `::Chain{state,}Active()` as a first step towards better modularization of our consensus engine. \r\n\r\nThe commits are ordered as such:\r\n1. Fixes to our existing codebase crucial to subsequent changes in this changeset\r\nhttps://github.com/bitcoin/bitcoin/compare/master...dongcarl:2020-10-chainman-fixes\r\n1. Remove all references to `g_chainman`, `::Chain{state,}Active()`\r\n\t1. In `src/validation.{cpp,h}`\r\n\t\t1. In a bundle of functions related to `::LookupBlockIndex` in the call graph\r\n\t\thttps://github.com/dongcarl/bitcoin/compare/2020-10-chainman-fixes...dongcarl:2020-09-libbitcoinruntime-v4\r\n\t\t1. In a bundle of functions that are mempool-related\r\n\t\thttps://github.com/dongcarl/bitcoin/compare/dongcarl:2020-09-libbitcoinruntime-v4...2020-09-reduce-validation-mempool-ccsactiveglobal-usage\r\n\t\t1. In a bundle of functions which do not belong in previous bundles\r\n\t\thttps://github.com/dongcarl/bitcoin/compare/2020-09-reduce-validation-mempool-ccsactiveglobal-usage...dongcarl:2020-09-reduce-validation-ccsactiveglobal-usage\r\n\t1. In \"validation-adjacent\" modules of the codebase\r\n\thttps://github.com/dongcarl/bitcoin/compare/dongcarl:2020-09-reduce-validation-ccsactiveglobal-usage...2020-09-libbitcoinruntime-v6\r\n\t\t1. In `src/txmempool.cpp`\r\n\t\t1. In `src/miner.cpp`\r\n\t\t1. In `src/node`\r\n\t\t1. In `src/net_processing.cpp`\r\n\t1. In RPC modules of the codebase\r\n\thttps://github.com/dongcarl/bitcoin/compare/2020-09-libbitcoinruntime-v6...dongcarl:2020-10-libbitcoinruntime-v7\r\n\t\t1. In `src/rpc`\r\n\t\t1. In `src/rest.cpp`\r\n\t1. In auxiliary modules of the codebase\r\n\thttps://github.com/dongcarl/bitcoin/compare/dongcarl:2020-10-libbitcoinruntime-v7...2020-10-libbitcoinruntime-v8\r\n\t\t1. In `src/bench`\r\n\t\t1. In `src/index`\r\n\t1. In initialization codepaths and tests\r\n\thttps://github.com/dongcarl/bitcoin/compare/2020-10-libbitcoinruntime-v8...dongcarl:2020-06-libbitcoinruntime\r\n\t\t1. In `src/init.cpp`\r\n\t\t1. In `src/test`\r\n\t\t1. In `src/wallet/test`\r\n\t\t1. In `src/qt/test`\r\n\r\nA few things to note:\r\n- The above ordering is constructed according to the overall call graph of our codebase such that we avoid touching the same function/module twice. \r\n- Due to the length of this overall change, each commit aims to be trivially-reviewable and only requires the reviewer to reason about the correctness of one function/module at a time.\r\n- There are a lot of review-only assertions which can be used to check for correctness. They are removed in 2236237070a45fe570cd0113f0025b0a46ac89be.\r\n",
          "user": {
            "login": "dongcarl",
            "id": 3445290,
            "node_id": "MDQ6VXNlcjM0NDUyOTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dongcarl",
            "html_url": "https://github.com/dongcarl",
            "followers_url": "https://api.github.com/users/dongcarl/followers",
            "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
            "organizations_url": "https://api.github.com/users/dongcarl/orgs",
            "repos_url": "https://api.github.com/users/dongcarl/repos",
            "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/dongcarl/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135946,
              "node_id": "MDU6TGFiZWwxMzU5NDY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/GUI",
              "name": "GUI",
              "color": "02d7e1",
              "default": false
            },
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 97470796,
              "node_id": "MDU6TGFiZWw5NzQ3MDc5Ng==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/UTXO%20Db%20and%20Indexes",
              "name": "UTXO Db and Indexes",
              "color": "fbca04",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 118378960,
              "node_id": "MDU6TGFiZWwxMTgzNzg5NjA=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Mining",
              "name": "Mining",
              "color": "c7def8",
              "default": false
            },
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            },
            {
              "id": 164208572,
              "node_id": "MDU6TGFiZWwxNjQyMDg1NzI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Mempool",
              "name": "Mempool",
              "color": "fef2c0",
              "default": false
            },
            {
              "id": 192202000,
              "node_id": "MDU6TGFiZWwxOTIyMDIwMDA=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Consensus",
              "name": "Consensus",
              "color": "009800",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "comments": 17,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/20158",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/20158.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/20158.patch"
          },
          "closed_at": "2021-06-16T16:19:42Z",
          "created_at": "2020-10-15T18:28:35Z",
          "updated_at": "2022-11-27T09:59:55Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 712955870,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcxMjk1NTg3MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/712955870",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-20T15:58:29Z",
      "updated_at": "2020-10-20T15:58:29Z",
      "author_association": "MEMBER",
      "body": "Should this wait until it's verified the new chain is valid?",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-712955870",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19858"
    },
    {
      "event": "commented",
      "id": 712981368,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcxMjk4MTM2OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/712981368",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-20T16:25:01Z",
      "updated_at": "2020-10-20T16:25:01Z",
      "author_association": "MEMBER",
      "body": ">Should this wait until it's verified the new chain is valid?\r\n\r\n@luke-jr I'm interpreting your question as asking: \"Should we wait to decide which peer to keep and which to evict, until after any new chain received from the new peer has been validated?\"  If that question is not what you meant, please clarify.\r\n\r\nI think a good question is exactly what we want to happen if we connect to a peer that is on another (equal-work) fork.  (There's no real need to stay connected to a peer on a less-work chain, while a peer on a more-work chain will have its blocks downloaded and validated and we'll either stay connected because they gave us new blocks, or disconnect if the chain is invalid.)\r\n\r\nWith this PR, it's very likely we'd stay connected to a peer on an equal-work and evict an older peer, because our download logic is designed to download blocks on all chains with work equal to or greater than our current tip.  And then the eviction criteria would cause the old peer to be disconnected.  I think this is okay behavior; in the event that the new fork gets extended and is valid, it's probably better for us to have been connected to the part of the network graph that was working on that tip as well as the part of the graph working on the one we had.\r\n\r\nIf the alternate chain proves to be invalid, then we can disconnect, but arguably we've done some harm by losing our previous (potentially honest) block-relay-peer.  However, I think this is a negligible problem, for two reasons: we only ever rotate 1 of our 2 block-relay-peers this way, so there's no way to use this to disconnect us from all our peers.  Also, practically speaking, mining a block in order to have a chain at equal work as our current tip is an extremely expensive attack to pull off, and so while someone could do so in order to take over 1 of our peer slots, it's not sustainable to repeat block after block.  In practice, if this were to occur I'd expect it to happen at the time of a consensus fork (like segwit2x or bcash), in which case this would resolve shortly after the forking point, as the competing chain extends an invalid block, and we'd either eventually detect that (if that chain has more work) or ignore it (if it has less work).",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-712981368",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19858"
    },
    {
      "event": "mentioned",
      "id": 3899667656,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mzg5OTY2NzY1Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3899667656",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-20T16:25:01Z"
    },
    {
      "event": "subscribed",
      "id": 3899667661,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM4OTk2Njc2NjE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3899667661",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-20T16:25:01Z"
    },
    {
      "event": "commented",
      "id": 714481343,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcxNDQ4MTM0Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/714481343",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-22T13:07:25Z",
      "updated_at": "2020-10-22T13:07:25Z",
      "author_association": "MEMBER",
      "body": "ACK 93a0ec1a629af533bb21418a3e134c268bc57395",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-714481343",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19858"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-22T22:42:26Z",
      "updated_at": "2020-10-22T22:42:26Z",
      "source": {
        "issue": {
          "id": 727295829,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NTA4MjE0NTIz",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20217",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20217/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20217/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20217/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/20217",
          "number": 20217,
          "state": "closed",
          "state_reason": null,
          "title": "net: Remove g_relay_txes",
          "body": "`g_relay_txes` is only required inside net_processing and is set only once at startup. Instead of having a global, move it to be a const member of PeerManager.\r\n\r\nThis requires moving `PushNodeVersion()` into `PeerManager`, which also allows us to remove the `connman` argument.",
          "user": {
            "login": "jnewbery",
            "id": 1063656,
            "node_id": "MDQ6VXNlcjEwNjM2NTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jnewbery",
            "html_url": "https://github.com/jnewbery",
            "followers_url": "https://api.github.com/users/jnewbery/followers",
            "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
            "organizations_url": "https://api.github.com/users/jnewbery/orgs",
            "repos_url": "https://api.github.com/users/jnewbery/repos",
            "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jnewbery/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 23,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20217",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/20217",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/20217.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/20217.patch"
          },
          "closed_at": "2020-12-10T06:31:49Z",
          "created_at": "2020-10-22T11:19:38Z",
          "updated_at": "2022-02-15T10:49:28Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 722041343,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcyMjA0MTM0Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/722041343",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-05T00:06:23Z",
      "updated_at": "2020-11-05T00:06:23Z",
      "author_association": "MEMBER",
      "body": "Code Review ACK 93a0ec1. Changes since last ACK : new lock assertions around node iteration in `EvictExtraOutboundPeers`, more compact conditional in same function, new comments.",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-722041343",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19858"
    },
    {
      "event": "reviewed",
      "id": 523838338,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzODM4MzM4",
      "url": null,
      "actor": null,
      "commit_id": "daf74979d741c9ccca68145f65f4ba6e0ee899b0",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "utACK 93a0ec1a629af533bb21418a3e134c268bc57395",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#pullrequestreview-523838338",
      "submitted_at": "2020-11-05T01:39:53Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
    },
    {
      "event": "reviewed",
      "id": 525015009,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1MDE1MDA5",
      "url": null,
      "actor": null,
      "commit_id": "93a0ec1a629af533bb21418a3e134c268bc57395",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK 93a0ec1a629af533bb21418a3e134c268bc57395 code review, running a node with this patch rebased to master since  <strike>24 hours</strike> 3 days, also previously with custom logging per https://github.com/bitcoin/bitcoin/pull/19858#pullrequestreview-501847787, with the caveat that I am still thinking about the possible ramifications of this change.\r\n\r\nIf you retouch, perhaps (per the language used in `EvictExtraOutboundPeers`):\r\n```diff\r\n+++ b/src/net_processing.h\r\n@@ -81,7 +81,7 @@ public:\r\n-    /** If we have extra outbound peers, try to disconnect the one with the oldest block announcement */\r\n+    /** If we have extra outbound or block-relay-only peers, try to disconnect the one with the oldest block announcement */\r\n     void EvictExtraOutboundPeers(int64_t time_in_seconds) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\r\n```",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#pullrequestreview-525015009",
      "submitted_at": "2020-11-06T10:25:34Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-16T21:52:21Z",
      "updated_at": "2020-11-16T21:52:21Z",
      "source": {
        "issue": {
          "id": 575726877,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MzgzODM3MDY2",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18261",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18261/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18261/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18261/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/18261",
          "number": 18261,
          "state": "closed",
          "state_reason": null,
          "title": "Erlay: bandwidth-efficient transaction relay protocol",
          "body": "This is an implementation of [Erlay](https://arxiv.org/abs/1905.10518), using primitives in the BIP-330 (see the updated spec [here](https://github.com/naumenkogs/bips/blob/bip_0330_updates/bip-0330.mediawiki)). Please refer to these two to understand the design. My talk on the topic is [here](https://youtu.be/YxsjdIl0034?t=670).\r\n\r\nErlay uses both flooding (announcing using INV messages to all peers) and reconciliation to announce transactions. Flooding is expensive, so Erlay seeks to use it sparingly and in strategic locations - only well-connected publicly reachable nodes flood transactions to other publicly reachable nodes via outbound connections. Since every unreachable node is directly connected to several reachable nodes, this policy ensures that a transaction is quickly propagated to be within one hop from most of the nodes in the network.\r\n\r\nAll transactions not propagated through flooding are propagated through efficient set reconciliation. To do this, every node keeps a reconciliation set for each peer, in which transactions are placed which would have been announced using INV messages absent this protocol. Every 2 seconds every node chooses a peer from its outbound connections in a predetermined order to reconcile with, resulting in both sides learning the transactions known to the other side. After every reconciliation round, the corresponding reconciliation set is cleared.\r\n\r\nI think both paper and the BIP motives the changes, but I'll mention them briefly once again here:\r\n- save 40% of the bandwidth consumed by a node\r\n- increase network connectivity for almost no bandwidth or latency cost\r\n- improves privacy as a side-effect\r\n\r\nObviously looking for review, let's try to start with a high-level concerns, and keep nits for later.\r\n\r\nP.S.\r\nPlease don't be scared of 8,000 LOC added. 7,000 of them is minisketch added as a subtree.\r\n\r\nP.P.S.\r\nMy experiments of running this code live (slightly outdated) with a script to replicate the experiment: [here1](https://github.com/bitcoin/bitcoin/pull/18261#issuecomment-599241490) and [here2](https://github.com/bitcoin/bitcoin/pull/18261#issuecomment-600388543).\r\n",
          "user": {
            "login": "naumenkogs",
            "id": 7975071,
            "node_id": "MDQ6VXNlcjc5NzUwNzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/naumenkogs",
            "html_url": "https://github.com/naumenkogs",
            "followers_url": "https://api.github.com/users/naumenkogs/followers",
            "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
            "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
            "repos_url": "https://api.github.com/users/naumenkogs/repos",
            "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 38,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18261",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/18261",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/18261.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/18261.patch"
          },
          "closed_at": "2021-03-23T22:51:05Z",
          "created_at": "2020-03-04T20:01:31Z",
          "updated_at": "2022-08-16T17:22:24Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 536052508,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2MDUyNTA4",
      "url": null,
      "actor": null,
      "commit_id": "93a0ec1a629af533bb21418a3e134c268bc57395",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#pullrequestreview-536052508",
      "submitted_at": "2020-11-22T14:12:06Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
    },
    {
      "event": "commented",
      "id": 734740321,
      "node_id": "MDEyOklzc3VlQ29tbWVudDczNDc0MDMyMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/734740321",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-27T09:34:25Z",
      "updated_at": "2020-11-27T09:34:25Z",
      "author_association": "MEMBER",
      "body": "I'm curious how the timings for this mechanism were chosen:\r\n\r\n- we'll connect to an additional block-relay-only peer every 300 seconds on average\r\n- we'll consider eviction of the additional block-relay-peer every 45 seconds\r\n- if the youngest block-relay-connection is less than 30 seconds old, then we won't disconnect it.\r\n\r\nThat means that the additional block-relay-only connection has a lifetime of 30-75 seconds (52.5 on average), and we make one every 300 seconds. We therefore have an additional block-relay-only connection for 52.5/300 = 17.5% of the time. Put differently, this PR increases the average number of block-relay-only connections we have from 2 to 2.175.\r\n\r\nWould it be simpler to simply increase the number of block-relay-only connections to 3, and then periodically evict the worst/youngest? That empty slot would then be filled using the normal mechanism in `ThreadOpenConnections()`. That seems like it'd give just as much protection as this approach (a new connection is tried every 300 seconds), but without adding yet another complex timing interaction between net and net_processing which is difficult to reason about and test. The downsides would be potentially a bit more churn in connections (since 100% of blocks can now cause the second-oldest block-relay-only peer to be evicted instead of 17.5% of blocks), a bit more resource usage on the node (which should be fine - if it can handle an additional connection 17.5% of the time, it can handle it 100% of the time), and a bit more usage of listening sockets (which again should be fine, it's much less of an impact than when we added block-relay-only connections in the first place).",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-734740321",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19858"
    },
    {
      "event": "commented",
      "id": 734874989,
      "node_id": "MDEyOklzc3VlQ29tbWVudDczNDg3NDk4OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/734874989",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-27T15:00:32Z",
      "updated_at": "2020-11-27T15:00:32Z",
      "author_association": "MEMBER",
      "body": "@jnewbery I think the biggest difference between what is implemented here and what you seem to be suggesting is that your proposed approach would be much more aggressive about making outbound connections. When we increase the target number of connections we want to make, `ThreadOpenConnections` will constantly be trying to achieve that target, making connection attempts whenever we are below our target.  In this PR, we use a feeler-like approach to making these additional connections, which should be lower load on the network, as we just make one connection *attempt* every 5 minutes.\r\n\r\nAs for your question about how the times were chosen - the only new parameter here is the frequency of these block-relay-only connections (the existing 30 second and 45 second timers were re-used from the existing outbound peer eviction logic, and those were based on making sure we checked frequently enough that we didn't persist connections for a long time, while trying to give reasonably enough time for headers sync and block download to occur).  I figured adding about 2 connections every 10 minutes was not such a big increase in outbound connection initiation amount, though if reviewers are concerned about the frequency we could reduce it.  \r\n\r\nThe trade-off here is that the more frequently we make connections (and therefore add edges to the network graph of nodes), the more security we have against partitioning attacks, but also the more network load we sustain. I don't think we have a great framework for evaluating the load, so I'd just eyeball it and observe after we deploy it, and we can always tune it if we think it's excessive or insufficient.  From watching the logs on my own node to verify how frequently connections are made and how much bandwidth is used by these connections, these numbers seemed fine to me, fwiw.\r\n\r\nAlso, I don't think that we gain all that much in complexity reduction by going that route, as we still need to have intelligent eviction logic, which I think is where the meat of the complexity lies.  I took a quick look right now, and I believe the additional changes to `net.cpp` to support feeler-like connection behavior (versus just having a target of 3 peers, of which we'd always try to evict 1) seems to be about 4 lines of code (not including comments), and is patterned off the existing feeler logic. Not too bad?",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-734874989",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19858"
    },
    {
      "event": "mentioned",
      "id": 4046470474,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDA0NjQ3MDQ3NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4046470474",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-27T15:00:32Z"
    },
    {
      "event": "subscribed",
      "id": 4046470480,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQwNDY0NzA0ODA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4046470480",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-27T15:00:32Z"
    },
    {
      "event": "commented",
      "id": 734895473,
      "node_id": "MDEyOklzc3VlQ29tbWVudDczNDg5NTQ3Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/734895473",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-27T15:54:53Z",
      "updated_at": "2020-11-27T16:01:44Z",
      "author_association": "MEMBER",
      "body": "(Oops, prematurely hit submit on this comment before I finished writing.)\r\n\r\n@jnewbery I fixed the unnecessary lock assertion in the latest commit.  My strong preference for now is to merge this PR as-is, as no problems seem to have emerged in review and testing thus far, it has several ACKs, this PR represents a substantial improvement in our peering behavior, and frankly this work has gotten stale for me, having been several months since I last worked on this extensively.  So if we can save minor improvements or tweaks for future work that would make progress much easier -- I'm not inclined to do minor rewrites at this point (and if there are major problems remaining I should just close this PR!).\r\n\r\nI think for some of the changes (like the `m_tx_relay==nullptr` thing), we could easily do that in a followup refactoring-only PR.  For some of the initialization sequence points that came up, I believe the code here is reasonable and correct, but there is room for further improvement too -- I think it's worth careful consideration of behavior changes that might be introduced in doing so, and since those seem non-essential to the behavior introduced here, I think this PR shouldn't be held up for such minor optimizations.\r\n\r\nI'd like to focus any further discussion on this PR on the actual behavior introduced (such as concerns about the timing of connections, maintenance or cognitive complexities introduced, or behaviors I've glossed over as unimportant such as the initialization sequence, if I'm mistaken and there are indeed significant concerns around how that will work).",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-734895473",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19858"
    },
    {
      "event": "mentioned",
      "id": 4046664245,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDA0NjY2NDI0NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4046664245",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-27T16:01:45Z"
    },
    {
      "event": "subscribed",
      "id": 4046664249,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQwNDY2NjQyNDk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4046664249",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-27T16:01:45Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4049523658,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDA0OTUyMzY1OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4049523658",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-29T22:59:25Z"
    },
    {
      "event": "commented",
      "id": 735471517,
      "node_id": "MDEyOklzc3VlQ29tbWVudDczNTQ3MTUxNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/735471517",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-29T23:00:08Z",
      "updated_at": "2020-11-29T23:00:08Z",
      "author_association": "MEMBER",
      "body": "Rebasing for the silent merge conflict with #20188, so squashed the lock annotation fix in while I was at it.",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-735471517",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19858"
    },
    {
      "event": "commented",
      "id": 736572336,
      "node_id": "MDEyOklzc3VlQ29tbWVudDczNjU3MjMzNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/736572336",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-01T14:04:56Z",
      "updated_at": "2020-12-01T14:04:56Z",
      "author_association": "MEMBER",
      "body": "@naumenkogs @sipa @jonatack @ariard Care to re-review?",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-736572336",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19858"
    },
    {
      "event": "mentioned",
      "id": 4057362319,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDA1NzM2MjMxOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4057362319",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-01T14:04:56Z"
    },
    {
      "event": "subscribed",
      "id": 4057362330,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQwNTczNjIzMzA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4057362330",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-01T14:04:56Z"
    },
    {
      "event": "mentioned",
      "id": 4057362340,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDA1NzM2MjM0MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4057362340",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-01T14:04:56Z"
    },
    {
      "event": "subscribed",
      "id": 4057362347,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQwNTczNjIzNDc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4057362347",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-01T14:04:56Z"
    },
    {
      "event": "mentioned",
      "id": 4057362354,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDA1NzM2MjM1NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4057362354",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-01T14:04:56Z"
    },
    {
      "event": "subscribed",
      "id": 4057362360,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQwNTczNjIzNjA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4057362360",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-01T14:04:56Z"
    },
    {
      "event": "mentioned",
      "id": 4057362368,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDA1NzM2MjM2OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4057362368",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-01T14:04:57Z"
    },
    {
      "event": "subscribed",
      "id": 4057362373,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQwNTczNjIzNzM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4057362373",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-01T14:04:57Z"
    },
    {
      "event": "commented",
      "id": 737387735,
      "node_id": "MDEyOklzc3VlQ29tbWVudDczNzM4NzczNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/737387735",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-02T17:43:19Z",
      "updated_at": "2020-12-08T14:03:01Z",
      "author_association": "CONTRIBUTOR",
      "body": "Am re-testing with added logging on a node, re-review soon.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-737387735",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19858"
    },
    {
      "event": "labeled",
      "id": 4090511548,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQwOTA1MTE1NDg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4090511548",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-09T15:25:03Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 741880853,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc0MTg4MDg1Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/741880853",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-09T16:18:52Z",
      "updated_at": "2020-12-09T16:18:52Z",
      "author_association": "CONTRIBUTOR",
      "body": "Reviewers may be interested in the article in today's Bitcoin Optech about this PR: https://bitcoinops.org/en/newsletters/2020/12/09/#bitcoin-core-pr-review-club",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-741880853",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19858"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4091770583,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDA5MTc3MDU4Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4091770583",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-09T20:09:02Z"
    },
    {
      "event": "unlabeled",
      "id": 4092108337,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50NDA5MjEwODMzNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4092108337",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-09T21:42:42Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 4093769134,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQwOTM3NjkxMzQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4093769134",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-10T08:20:20Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 548972778,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4OTcyNzc4",
      "url": null,
      "actor": null,
      "commit_id": "efa0e0df05620bf1ac74de3ec8d752990b00d32a",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#pullrequestreview-548972778",
      "submitted_at": "2020-12-10T08:55:15Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
    },
    {
      "event": "commented",
      "id": 742400827,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc0MjQwMDgyNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/742400827",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-10T09:33:55Z",
      "updated_at": "2020-12-10T09:34:28Z",
      "author_association": "MEMBER",
      "body": "ACK 7dc24baf7c88f3b03fa2aa59fc4cba332d7e7a69\r\n\r\n--------\r\n\r\nI find it slightly confusing that `IsBlockOnlyConn`really means *outbound* block-only conn. It makes the code-review harder for me, and I assume even more for new developers.\r\nNot sure what we could do here though.\r\n\r\n-------\r\n\r\nShoot, another \"needs rebase\"",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-742400827",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19858"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MWQ2MTk1MmE4MmFmM2U4ODg3ZThhZTUzMmVjYzE5ZDg3ZmU5MDcz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/91d61952a82af3e8887e8ae532ecc19d87fe9073",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/91d61952a82af3e8887e8ae532ecc19d87fe9073",
      "tree": {
        "sha": "7595a09515d4ec79e518b6536106967552fa6f29",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7595a09515d4ec79e518b6536106967552fa6f29"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/86f20071931b803b5f26ed8f685d98d4919fb7a7",
          "sha": "86f20071931b803b5f26ed8f685d98d4919fb7a7",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/86f20071931b803b5f26ed8f685d98d4919fb7a7"
        }
      ],
      "message": "Simplify and clarify extra outbound peer counting",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2020-12-10T13:41:57Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2020-09-01T20:32:09Z"
      },
      "sha": "91d61952a82af3e8887e8ae532ecc19d87fe9073"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzozY2M4YTdhMGY1ZmExODNjZDdmMGNmNWU1NmYxNmY5YTlkMWYyNDQx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3cc8a7a0f5fa183cd7f0cf5e56f16f9a9d1f2441",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3cc8a7a0f5fa183cd7f0cf5e56f16f9a9d1f2441",
      "tree": {
        "sha": "34d30352ed590be09d0a8a785a9fd75a04ceb31a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/34d30352ed590be09d0a8a785a9fd75a04ceb31a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/91d61952a82af3e8887e8ae532ecc19d87fe9073",
          "sha": "91d61952a82af3e8887e8ae532ecc19d87fe9073",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/91d61952a82af3e8887e8ae532ecc19d87fe9073"
        }
      ],
      "message": "Use conn_type to identify block-relay peers, rather than m_tx_relay == nullptr",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2020-12-10T13:41:57Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2020-09-01T20:49:40Z"
      },
      "sha": "3cc8a7a0f5fa183cd7f0cf5e56f16f9a9d1f2441"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkYWZmYWYwM2ZiZWRlNmMwMTI4Nzc3OWU0NjQzNzllZTNhY2IwMDVh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/daffaf03fbede6c01287779e464379ee3acb005a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/daffaf03fbede6c01287779e464379ee3acb005a",
      "tree": {
        "sha": "106fddb539d273bed1168ccde48340f0071057d2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/106fddb539d273bed1168ccde48340f0071057d2"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3cc8a7a0f5fa183cd7f0cf5e56f16f9a9d1f2441",
          "sha": "3cc8a7a0f5fa183cd7f0cf5e56f16f9a9d1f2441",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3cc8a7a0f5fa183cd7f0cf5e56f16f9a9d1f2441"
        }
      ],
      "message": "Periodically make block-relay connections and sync headers\n\nTo make eclipse attacks more difficult, regularly initiate outbound connections\nand stay connected long enough to sync headers and potentially learn of new\nblocks. If we learn a new block, rotate out an existing block-relay peer in\nfavor of the new peer.\n\nThis augments the existing outbound peer rotation that exists -- currently we\nmake new full-relay connections when our tip is stale, which we disconnect\nafter waiting a small time to see if we learn a new block.  As block-relay\nconnections use minimal bandwidth, we can make these connections regularly and\nnot just when our tip is stale.\n\nLike feeler connections, these connections are not aggressive; whenever our\ntimer fires (once every 5 minutes on average), we'll try to initiate a new\nblock-relay connection as described, but if we fail to connect we just wait for\nour timer to fire again before repeating with a new peer.",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2020-12-10T13:46:39Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2020-09-01T21:05:47Z"
      },
      "sha": "daffaf03fbede6c01287779e464379ee3acb005a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiM2E1MTVjMGJlYzk3NjMzYTc2YmVjMTAxYWY0N2MzYzkwYzBiNzQ5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b3a515c0bec97633a76bec101af47c3c90c0b749",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b3a515c0bec97633a76bec101af47c3c90c0b749",
      "tree": {
        "sha": "086c9262fb0edaeb24d6033c72c7487d11b58f47",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/086c9262fb0edaeb24d6033c72c7487d11b58f47"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/daffaf03fbede6c01287779e464379ee3acb005a",
          "sha": "daffaf03fbede6c01287779e464379ee3acb005a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/daffaf03fbede6c01287779e464379ee3acb005a"
        }
      ],
      "message": "Clarify comments around outbound peer eviction",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2020-12-10T13:46:51Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2020-09-03T14:41:02Z"
      },
      "sha": "b3a515c0bec97633a76bec101af47c3c90c0b749"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4095218171,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDA5NTIxODE3MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4095218171",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-10T13:52:38Z"
    },
    {
      "event": "commented",
      "id": 742535428,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc0MjUzNTQyOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/742535428",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-10T13:55:20Z",
      "updated_at": "2020-12-10T13:55:20Z",
      "author_association": "MEMBER",
      "body": "@naumenkogs Thanks for the re-review -- I just rebased again to deal with the merge conflict, another trivial change.\r\n\r\n> I find it slightly confusing that `IsBlockOnlyConn` really means outbound block-only conn. It makes the code-review harder for me, and I assume even more for new developers.\r\n\r\nI do as well!  On my to-do list is to propose and implement support for negotiating block-relay only behavior at connection time; I think at that point we can add better understanding to our code for inbound versus outbound block-relay-only peers (as right now we have no way of knowing that an inbound peer is a block-relay-only peer).  ",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-742535428",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19858"
    },
    {
      "event": "mentioned",
      "id": 4095230907,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDA5NTIzMDkwNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4095230907",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-10T13:55:20Z"
    },
    {
      "event": "subscribed",
      "id": 4095230914,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQwOTUyMzA5MTQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4095230914",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-10T13:55:20Z"
    },
    {
      "event": "commented",
      "id": 742535758,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc0MjUzNTc1OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/742535758",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-10T13:55:58Z",
      "updated_at": "2020-12-10T13:55:58Z",
      "author_association": "MEMBER",
      "body": "@naumenkogs @sipa @jonatack @ariard you previously reviewed this, but there have been a few (silent) merge conflicts, so a re-ACK would be appreciated.\r\n\r\nIn the meantime it would be good if other maintainers refrained from merging conflicting pulls, see the list by DrahtBot: https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-685192705",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-742535758",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19858"
    },
    {
      "event": "mentioned",
      "id": 4095233820,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDA5NTIzMzgyMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4095233820",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-10T13:55:58Z"
    },
    {
      "event": "subscribed",
      "id": 4095233828,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQwOTUyMzM4Mjg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4095233828",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-10T13:55:58Z"
    },
    {
      "event": "mentioned",
      "id": 4095233831,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDA5NTIzMzgzMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4095233831",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-10T13:55:58Z"
    },
    {
      "event": "subscribed",
      "id": 4095233835,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQwOTUyMzM4MzU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4095233835",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-10T13:55:58Z"
    },
    {
      "event": "mentioned",
      "id": 4095233843,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDA5NTIzMzg0Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4095233843",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-10T13:55:58Z"
    },
    {
      "event": "subscribed",
      "id": 4095233845,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQwOTUyMzM4NDU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4095233845",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-10T13:55:58Z"
    },
    {
      "event": "mentioned",
      "id": 4095233851,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDA5NTIzMzg1MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4095233851",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-10T13:55:59Z"
    },
    {
      "event": "subscribed",
      "id": 4095233854,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQwOTUyMzM4NTQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4095233854",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-10T13:55:59Z"
    },
    {
      "event": "unlabeled",
      "id": 4095470734,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50NDA5NTQ3MDczNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4095470734",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-10T14:43:58Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 549324407,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5MzI0NDA3",
      "url": null,
      "actor": null,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Tested ACK b3a515c0bec97633a76bec101af47c3c90c0b749 over several weeks, though this change and behavior could benefit from test coverage and other follow-ups (refactoring, etc.) described in the review feedback. I did not verify the behavior of `m_start_extra_block_relay_peers` only being enabled after initial chain sync. Since my last review, one unneeded `cs_main` lock was removed.\r\n\r\nA few empirical observations from running this code over time on a tor v3 node with mostly only 18 outbounds (~half very good manual ones) and 0, sometimes 1, inbounds:\r\n\r\n- The timing happens as expected\r\n- GetExtraFullOutboundCount() and GetExtraBlockRelayCount() mostly return 0 (97%+ of the time); when not, they return 1\r\n- Most of the time (97%+), the newly added block-relay-only peer is disconnected within ~50 seconds (and the log says \"(last block received at time 0)\")\r\n- Actual peer rotation is rare\r\n- Without the patch to induce a 10% chance of initializing nLastBlockTime to current time, I no longer saw any keeping/evicting events\r\n\r\nMy main wishlist would be that the code be designed from the start to be testable and have regression coverage. I'm not as confident in reviewing or changing code without coverage.\r\n",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#pullrequestreview-549324407",
      "submitted_at": "2020-12-10T15:38:21Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
    },
    {
      "event": "commented",
      "id": 742602943,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc0MjYwMjk0Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/742602943",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-10T15:44:46Z",
      "updated_at": "2020-12-10T15:45:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "Logging used for my testing: https://github.com/jonatack/bitcoin/commit/8986db429738cb1f8e0057e4ac41af1a89bc714e (a variant of Suhas' patch above).",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-742602943",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19858"
    },
    {
      "event": "commented",
      "id": 742616282,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc0MjYxNjI4Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/742616282",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-10T16:06:23Z",
      "updated_at": "2020-12-10T18:04:41Z",
      "author_association": "MEMBER",
      "body": "Code Review ACK b3a515c, only change since last time is dropping a useless `cs_main` taking. I manually tested a previous version of the PR, and not substantial change has been introduced since then which would alter behavior IMO.\r\n\r\n__________\r\n\r\n> The trade-off here is that the more frequently we make connections (and therefore add edges to the network graph of nodes), the more security we have against partitioning attacks, but also the more network load we sustain. I don't think we have a great framework for evaluating the load, so I'd just eyeball it and observe after we deploy it, and we can always tune it if we think it's excessive or insufficient.\r\n\r\nAFAIU this PR, I'm not worried about the network load introduced by this PR, whatever the metric we're picking (connection slots/application bandwidth/IP/TCP bandwidth). Let's assume a really worst-case scenario, where the victim node is always fallen-behind from a better-work chain by ~5 headers and has to download them every 5 min (EXTRA_BLOCK_RELAY_ONLY_PEER_INTERVAL). 80 * 5 * 12 * 24 * 30 = 3_456_000, this node will consume 3.45 MB by month from the network ? If I get the math right, I think that's fairly acceptable.\r\n\r\nThat said, I would be glad if we start to develop and sustain frameworks to evaluate question like network load which rightfully spawn up in this kind of work. Beyond agreeing on security model efficiency, having sound quantitative model would ease reaching Concept ACK/NACK.\r\n\r\n> I thought I did document this innet.h, but I think it would make sense to put a writeup of how all this works on our wiki, which I'd be happy to do after this is merged.                                       \r\n\r\nI know I'm a minority opinion, but I still feel we should have a sound discussion before dissociating further rationale from code by writing more documentation in the wiki instead of in-tree.                    \r\n\r\nContra:\r\n* splitting code rationale from code paths increase the risk of documentation being airy, hard to link back and easy outdated                                                                                      \r\n* rationale should be submitted to the same review process, wiki is free to edit for project members,, IMO code rationale is a much important than code correctness, because ultimately rationale is leading how code\r\nshould be\r\n* increase project reliance on centralized GH infrastructure of duplicated git copies\r\n\r\nI'm a big fan of the code documentation approach which has been done for #19988, and I hope to stick more to this kind of code documentation standard in the future.",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-742616282",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19858"
    },
    {
      "event": "added_to_project",
      "id": 4096042211,
      "node_id": "MDE5OkFkZGVkVG9Qcm9qZWN0RXZlbnQ0MDk2MDQyMjEx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4096042211",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-10T16:35:29Z",
      "project_card": {
        "id": 51015317,
        "url": "https://api.github.com/projects/columns/cards/51015317",
        "project_id": 481835,
        "project_url": "https://api.github.com/projects/481835",
        "column_name": "Blockers"
      }
    },
    {
      "event": "merged",
      "id": 4099384195,
      "node_id": "MDExOk1lcmdlZEV2ZW50NDA5OTM4NDE5NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4099384195",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "6a48063671770e77266f8e441cc15487d1fff5ed",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6a48063671770e77266f8e441cc15487d1fff5ed",
      "created_at": "2020-12-11T09:24:03Z"
    },
    {
      "event": "closed",
      "id": 4099384215,
      "node_id": "MDExOkNsb3NlZEV2ZW50NDA5OTM4NDIxNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4099384215",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-11T09:24:03Z"
    },
    {
      "event": "reviewed",
      "id": 549912405,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5OTEyNDA1",
      "url": null,
      "actor": null,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Post merge ACK b3a515c0bec97633a76bec101af47c3c90c0b749\r\n\r\nTesting this, I'm seeing some cases where the extra block-relay peer is being evicted for sending a tx, eg:\r\n\r\n```\r\n2020-12-11T10:12:05Z Added connection peer=38\r\n2020-12-11T10:12:06Z receive version message: /Satoshi:0.20.1/: version 70015, blocks=660884, us=xxx:8333, peer=38\r\n2020-12-11T10:12:06Z New outbound peer connected: version: 70015, blocks=660884, peer=38 (block-relay)\r\n2020-12-11T10:12:17Z received: inv (1261 bytes) peer=38\r\n2020-12-11T10:12:17Z got inv: tx 565fed8bc9ff5fa333a8130ec399f23d24d4bcdd435778b1fd2a67278a980ee6  have peer=38\r\n2020-12-11T10:12:17Z transaction (565fed8bc9ff5fa333a8130ec399f23d24d4bcdd435778b1fd2a67278a980ee6) inv sent in violation of protocol, disconnecting peer=38\r\n2020-12-11T10:12:17Z disconnecting peer=38\r\n2020-12-11T10:12:17Z Cleared nodestate for peer=38\r\n```\r\n\r\nwhich might be worth looking into further just in case those peers are actually running core like they say and we have a bug.",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#pullrequestreview-549912405",
      "submitted_at": "2020-12-11T10:21:20Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
    },
    {
      "event": "referenced",
      "id": 4101542181,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQxMDE1NDIxODE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4101542181",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "47cbc7d34d8518068d8ab37ef050e837a51a03f8",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/47cbc7d34d8518068d8ab37ef050e837a51a03f8",
      "created_at": "2020-12-11T17:38:26Z"
    },
    {
      "event": "commented",
      "id": 746160585,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc0NjE2MDU4NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/746160585",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-16T11:44:28Z",
      "updated_at": "2020-12-16T11:44:28Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Testing this, I'm seeing some cases where the extra block-relay peer is being evicted for sending a tx, [...]\r\n\r\nLooking into this a bit further: I'm only seeing this coming from nodes advertising themselves as 0.20.1, and the timing seems like it's consistent with a 5s poisson delay since the connection is established. Not all 0.20.1 nodes are failing this way. I've just added some additional logging, and it looks like the txs they're advertising aren't particularly strange, but all the violating nodes seem to be running on cloud hosting (digital ocean, amazon, google cloud). So seems plausible that they're just buggy and lying about their version details?\r\n\r\nOne thing that might be worth considering: our sybil mitigation only works for concurrent connections -- our 10 regular outbounds all have to be in different netgroups because they're simultaneously connected, but 10 sequential extra block-relay-only could all end up to the same netgroup. Could fix this by keeping track of the last 10 extra connections we've tried, and trying to choose the next one from a different netgroup. ",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-746160585",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19858"
    },
    {
      "event": "commented",
      "id": 746247194,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc0NjI0NzE5NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/746247194",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-16T12:55:17Z",
      "updated_at": "2020-12-16T12:55:17Z",
      "author_association": "MEMBER",
      "body": "> Testing this, I'm seeing some cases where the extra block-relay peer is being evicted for sending a tx ...\r\n\r\nI'm surprised that your log isn't showing the \"send version message\" line. You obviously have NET logging enabled since you're seeing the \"receive version message\" line. These are outbound connections, so I'd expect to see \"send version message\" (in `InitializeNode()`) between \"Added connection peer\" (in `ConnectNode()`) and \"receive version message\" (in `ProcessMessage()`). Very odd.\r\n\r\nEven if we did have that logging in `PushNodeVersion()`, it doesn't include what the fRelay was set to. That'd be evidence that the peer is misbehaving and we don't have a bug.\r\n\r\nPerhaps peer message capture would help here (#19509)",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-746247194",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19858"
    },
    {
      "event": "commented",
      "id": 746312882,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc0NjMxMjg4Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/746312882",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-16T13:49:36Z",
      "updated_at": "2020-12-16T15:27:47Z",
      "author_association": "CONTRIBUTOR",
      "body": "Oh, with logips enabled, I see those nodes also don't appear to be telling me my IP address, instead reporting their own IP in both `us=` and `peeraddr=`. Might just be a proxy that's munging the version message both ways, and losing the relay bit as well as address info.\r\n\r\nEdited to add:\r\n\r\nI think about 12%  of the extra block-relay-only connections my peer is opening get disconnected for this reason\r\n\r\nExample:\r\n\r\n```\r\n2020-12-16T13:12:01Z Added connection to [their_ip]:8333 peer=157\r\n2020-12-16T13:12:01Z sending version (103 bytes) peer=157\r\n2020-12-16T13:12:01Z ABCD, sent version message peer=157 block-relay-only m_ignore_incoming_txs==0, pnode.m_tx_relay == nullptr, relaytxes=0\r\n```\r\n\r\nNote: we are signalling no tx relay in the version message we send\r\n\r\n```\r\n2020-12-16T13:12:01Z send version message: version 70016, blocks=661619, us=[::]:0, them=[their_ip]:8333, peer=157\r\n2020-12-16T13:12:01Z received: version (102 bytes) peer=157\r\n2020-12-16T13:12:01Z sending verack (0 bytes) peer=157\r\n2020-12-16T13:12:01Z receive version message: /Satoshi:0.20.1/: version 70015, blocks=661619, us=[their_ip]:8333, peer=157, peeraddr=[their_ip]:8333\r\n```\r\n\r\nNote: they are claiming to be 0.20.1, and are telling us our ip is the same as their ip.\r\n\r\n```\r\n2020-12-16T13:12:01Z received: verack (0 bytes) peer=157\r\n2020-12-16T13:12:01Z New outbound peer connected: version: 70015, blocks=661619, peer=157, peeraddr=[their_ip]:8333 (block-relay)\r\n2020-12-16T13:12:01Z sending sendheaders (0 bytes) peer=157\r\n2020-12-16T13:12:01Z sending sendcmpct (9 bytes) peer=157\r\n2020-12-16T13:12:01Z sending sendcmpct (9 bytes) peer=157\r\n2020-12-16T13:12:01Z sending ping (8 bytes) peer=157\r\n2020-12-16T13:12:01Z initial getheaders (661618) to peer=157 (startheight:661619)\r\n2020-12-16T13:12:01Z sending getheaders (1029 bytes) peer=157\r\n2020-12-16T13:12:02Z received: sendheaders (0 bytes) peer=157\r\n2020-12-16T13:12:02Z received: sendcmpct (9 bytes) peer=157\r\n2020-12-16T13:12:02Z received: sendcmpct (9 bytes) peer=157\r\n2020-12-16T13:12:02Z received: ping (8 bytes) peer=157\r\n2020-12-16T13:12:02Z sending pong (8 bytes) peer=157\r\n2020-12-16T13:12:02Z received: getheaders (1029 bytes) peer=157\r\n2020-12-16T13:12:02Z getheaders 661619 to end from peer=157\r\n2020-12-16T13:12:02Z sending headers (82 bytes) peer=157\r\n2020-12-16T13:12:02Z received: feefilter (8 bytes) peer=157\r\n2020-12-16T13:12:02Z received: feefilter of 0.00001000 BTC/kvB from peer=157\r\n2020-12-16T13:12:02Z received: pong (8 bytes) peer=157\r\n2020-12-16T13:12:02Z received: headers (82 bytes) peer=157\r\n```\r\n\r\nEverthing looks fine so far. Except 8s later we get sent some txids, despite saying we don't want them. The txids themselves don't seem particularly suspicious.\r\n\r\n```\r\n2020-12-16T13:12:10Z received: inv (1261 bytes) peer=157\r\n2020-12-16T13:12:10Z got inv: tx 75bd60faafd08519ef2e792df0545c9392df41bf291d1134e7a5db9710ced23b  have peer=157\r\n2020-12-16T13:12:10Z transaction (75bd60faafd08519ef2e792df0545c9392df41bf291d1134e7a5db9710ced23b) inv sent in violation of protocol, disconnecting peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx 75bd60faafd08519ef2e792df0545c9392df41bf291d1134e7a5db9710ced23b have peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx 7b449d756f6dda691f992987e17bf3f7dc34e0ea0ce65d43622401bc8f60dd88 have peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx bcb93b03d029cb3ec2d778b7d52dd3ec6dd281c5a3a0a5db9fb2acda71638c44 new peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx 5b5a2b221caa73ed6b703add97c72f826ac70148b973cf375e7a53db0a1fb379 have peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx 81921bce2a40d6a461996feec5a47b1a4121d0da247d837e6e4dea899230b659 have peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx 7a34e32d7077960769e5c0cbacad4a12dda84418204a2652c491a570058fcb0a have peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx af263f51587ff049cc64222d6660c63abb13458c92902d639882e2d3ab7287d6 have peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx 3d4b1ecae99adc8c8077ae091d88ca269c71c76c18de7a871b3218d6ba08356d have peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx 390071b455d1ed37f6c16863e08fcc97a53331a1f0ecd5d8f397658c8524afac have peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx d21e808b5d6dd2ed4e6e462b8beef3a4dcc3e791324bd7c8f7cc4c9f29dfba5d have peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx 9a7d584b6cd86fb404f9cd4f64278f00111db009ccbcf1c7838cc32990149e4e new peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx 79c47859b388197e2f54e84b8e4127c774cd411a1d7e212a9260f69616bed798 new peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx 43ee2d62b43292aa5f93456afeea622201f8617041d41b3a5270b8d069074787 have peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx f6ec29d439fe01ff4253086aa31ac82e03304fe1b8bb335b1afcf9be24140787 new peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx d81d8167089003070e65d909c51365f5906b30b0b9d41a842b0e87bdaa4b3f95 have peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx f6e90b5f427eba175ef3b464556b2deb2a6b6239f8ea45f82c6c3f99702ab740 new peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx e3f89991c70433914ca25c371a3ede00f3909bc72fc4c6debabe996f459fe095 have peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx 4af670a50a53b3949528a375cd958818c436efafbf8cf2d9476ba251e0624d03 new peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx 99c9200154e040337c4d853897930c6fb6ba5e052f2a9b801aa9a85d08cd4563 have peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx a2706abb0f8470c0e84aa07801fef1a56b1d2184b316bd13f1a18716a27da43e new peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx 5d41a07d349067fadc2ca165c32c2a1f369756006b512590fee88db0d3b05538 have peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx 0e25bc1d72e1d6585e8e0b5a6e30e228136d8f25e8af15600c5b23d16d99dce0 have peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx 9c7d8fa67e81da350ae834bbefb9dc2955a18067512129fee672cc28c1118629 have peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx 9d4bc391dc0f4ee61e39f0ed65ef3f611a461a2bd54b216aa0263265fa50cca4 new peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx 9d9a74778fbaa7605f3386142f3ac5169a333ca5a846863394ff3c9e9ae69778 have peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx bf464249cf02bc4caac19c04d6a0cb76ea1628531e6d52b0d8dc9e3d2f1a5477 new peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx 457df7291de77b3b5ca0871ad87621c819efab6fb1471842e88fb7959ab1e2ca new peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx 3f644cb1a138d6dd1bfd461470172b7dab8e161f5b6b056cc477eda781414aee have peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx 9e6dd4d37cc7a56fd188ffe99cc1dc523901e18f8b6ec02e8b99c5ed6f3f608a new peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx e64861304f5f7d829c82d559c0c1c7c57c5cb5e51bdfd96f10fcf04abb858408 have peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx 13bc931cd0a09e546b9d1b16c66964b33cb872e5eec65d21c2344dec1b317baa have peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx 038ee30078d52b1af945b16578ff4c302040248be273809aa285f7667a8f7edc have peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx 36a363550c4c8a5fbb38b69cfde0a938faa06fa300836d769cb085da963174a3 new peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx b09beb484f21adcec10665aa526132331f117e748997a41d9330370c8ce580f5 new peer=157\r\n2020-12-16T13:12:10Z   ABCD, inv tx 12b3adb1fc1ccfbeec6d0700b1fce0b8e6a2dbe85e227745dca4f388b8b2d926 have peer=157\r\n2020-12-16T13:12:10Z disconnecting peer=157\r\n2020-12-16T13:12:10Z Cleared nodestate for peer=157\r\n```",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-746312882",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19858"
    },
    {
      "event": "commented",
      "id": 746385941,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc0NjM4NTk0MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/746385941",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-16T14:33:37Z",
      "updated_at": "2020-12-16T14:33:37Z",
      "author_association": "MEMBER",
      "body": "> One thing that might be worth considering: our sybil mitigation only works for concurrent connections -- our 10 regular outbounds all have to be in different netgroups because they're simultaneously connected, but 10 sequential extra block-relay-only could all end up to the same netgroup. Could fix this by keeping track of the last 10 extra connections we've tried, and trying to choose the next one from a different netgroup.\r\n\r\n@ajtowns I think this is an interesting idea -- seems like it would be a strict improvement in security (in a mathematical sense, ie I can't imagine how our security could be any worse off with that approach); but I'm not sure if the additional complexity is worth the potential gain?  Not intrinsically opposed, but maybe this isn't low-hanging fruit either.",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-746385941",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19858"
    },
    {
      "event": "mentioned",
      "id": 4119994685,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDExOTk5NDY4NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4119994685",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-16T14:33:37Z"
    },
    {
      "event": "subscribed",
      "id": 4119994689,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQxMTk5OTQ2ODk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4119994689",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-16T14:33:37Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-16T19:12:31Z",
      "updated_at": "2020-12-16T19:12:31Z",
      "source": {
        "issue": {
          "id": 769198674,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NTQxMzc5MzY3",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20676",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20676/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20676/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20676/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/20676",
          "number": 20676,
          "state": "closed",
          "state_reason": null,
          "title": "Replace m_tx_relay/nullptr checks in net_processing.cpp",
          "body": "Semantically, whether m_tx_relay is a nullptr can mean that either the\r\nconnection is a block-relay-only connection, or that we're relaying\r\ntransactions on this connection. While there's currently a 1-1 mapping between\r\nthose ideas right now, separate the two concepts more clearly so that in the\r\nfuture it'll be easier to reason about changes, particularly if we add more\r\nconnection types which do not relay transactions.\r\n\r\n<!--\r\n*** Please remove the following help text before submitting: ***\r\n\r\nPull requests without a rationale and clear improvement may be closed\r\nimmediately.\r\n\r\nGUI-related pull requests should be opened against\r\nhttps://github.com/bitcoin-core/gui\r\nfirst. See CONTRIBUTING.md\r\n-->\r\n\r\n<!--\r\nPlease provide clear motivation for your patch and explain how it improves\r\nBitcoin Core user experience or Bitcoin Core developer experience\r\nsignificantly:\r\n\r\n* Any test improvements or new tests that improve coverage are always welcome.\r\n* All other changes should have accompanying unit tests (see `src/test/`) or\r\n  functional tests (see `test/`). Contributors should note which tests cover\r\n  modified code. If no tests exist for a region of modified code, new tests\r\n  should accompany the change.\r\n* Bug fixes are most welcome when they come with steps to reproduce or an\r\n  explanation of the potential issue as well as reasoning for the way the bug\r\n  was fixed.\r\n* Features are welcome, but might be rejected due to design or scope issues.\r\n  If a feature is based on a lot of dependencies, contributors should first\r\n  consider building the system outside of Bitcoin Core, if possible.\r\n* Refactoring changes are only accepted if they are required for a feature or\r\n  bug fix or otherwise improve developer experience significantly. For example,\r\n  most \"code style\" refactoring changes require a thorough explanation why they\r\n  are useful, what downsides they have and why they *significantly* improve\r\n  developer experience or avoid serious programming bugs. Note that code style\r\n  is often a subjective matter. Unless they are explicitly mentioned to be\r\n  preferred in the [developer notes](/doc/developer-notes.md), stylistic code\r\n  changes are usually rejected.\r\n-->\r\n\r\n<!--\r\nBitcoin Core has a thorough review process and even the most trivial change\r\nneeds to pass a lot of eyes and requires non-zero or even substantial time\r\neffort to review. There is a huge lack of active reviewers on the project, so\r\npatches often sit for a long time.\r\n-->\r\n",
          "user": {
            "login": "sdaftuar",
            "id": 7463573,
            "node_id": "MDQ6VXNlcjc0NjM1NzM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sdaftuar",
            "html_url": "https://github.com/sdaftuar",
            "followers_url": "https://api.github.com/users/sdaftuar/followers",
            "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
            "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
            "repos_url": "https://api.github.com/users/sdaftuar/repos",
            "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 12,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20676",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/20676",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/20676.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/20676.patch"
          },
          "closed_at": "2020-12-17T17:59:52Z",
          "created_at": "2020-12-16T19:08:51Z",
          "updated_at": "2022-02-15T10:49:38Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-16T22:14:13Z",
      "updated_at": "2020-12-16T22:14:13Z",
      "source": {
        "issue": {
          "id": 769309304,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NTQxNDcwNDYx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20677",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20677/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20677/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20677/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/20677",
          "number": 20677,
          "state": "closed",
          "state_reason": null,
          "title": "doc: Remove shouty enums in net_processing comments",
          "body": "This uses the `CNode::ConnectionTypeAsString()` strings in place of the all-caps enums in a couple of comments in `net_processing`, as suggested by ajtowns in https://github.com/bitcoin/bitcoin/pull/19858#discussion_r540821050.",
          "user": {
            "login": "sdaftuar",
            "id": 7463573,
            "node_id": "MDQ6VXNlcjc0NjM1NzM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sdaftuar",
            "html_url": "https://github.com/sdaftuar",
            "followers_url": "https://api.github.com/users/sdaftuar/followers",
            "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
            "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
            "repos_url": "https://api.github.com/users/sdaftuar/repos",
            "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 148216,
              "node_id": "MDU6TGFiZWwxNDgyMTY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Docs",
              "name": "Docs",
              "color": "02d7e1",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20677",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/20677",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/20677.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/20677.patch"
          },
          "closed_at": "2020-12-17T11:00:13Z",
          "created_at": "2020-12-16T22:14:13Z",
          "updated_at": "2022-02-15T11:09:12Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 4124518514,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQxMjQ1MTg1MTQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4124518514",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "f0913f2f950c7a3e0a14d32216bd6ce4e19d85df",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f0913f2f950c7a3e0a14d32216bd6ce4e19d85df",
      "created_at": "2020-12-17T11:00:12Z"
    },
    {
      "event": "removed_from_project",
      "id": 4126597069,
      "node_id": "MDIzOlJlbW92ZWRGcm9tUHJvamVjdEV2ZW50NDEyNjU5NzA2OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4126597069",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-17T19:02:39Z",
      "project_card": {
        "id": 51015317,
        "url": "https://api.github.com/projects/columns/cards/51015317",
        "project_id": 481835,
        "project_url": "https://api.github.com/projects/481835",
        "column_name": "Blockers"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-17T19:26:39Z",
      "updated_at": "2020-12-17T19:26:39Z",
      "source": {
        "issue": {
          "id": 770307973,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NTQyMDc2NDY5",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20690",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20690/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20690/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20690/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/20690",
          "number": 20690,
          "state": "closed",
          "state_reason": null,
          "title": "Clean up logging of outbound connection type",
          "body": "We have a function that converts `ConnectionType` enums to strings, so use it.\r\n\r\nSuggested by ajtowns in https://github.com/bitcoin/bitcoin/pull/19858#discussion_r540791588",
          "user": {
            "login": "sdaftuar",
            "id": 7463573,
            "node_id": "MDQ6VXNlcjc0NjM1NzM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sdaftuar",
            "html_url": "https://github.com/sdaftuar",
            "followers_url": "https://api.github.com/users/sdaftuar/followers",
            "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
            "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
            "repos_url": "https://api.github.com/users/sdaftuar/repos",
            "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 2,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20690",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/20690",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/20690.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/20690.patch"
          },
          "closed_at": "2020-12-18T09:03:59Z",
          "created_at": "2020-12-17T19:26:39Z",
          "updated_at": "2022-02-15T10:49:42Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 4128793194,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQxMjg3OTMxOTQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4128793194",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "83e4670fd7cde3f9624d91208885e868fda6658f",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/83e4670fd7cde3f9624d91208885e868fda6658f",
      "created_at": "2020-12-18T09:03:58Z"
    },
    {
      "event": "referenced",
      "id": 4130161284,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQxMzAxNjEyODQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4130161284",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "38768e95098999cd3c35670151e0bdf8c3c507f1",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/38768e95098999cd3c35670151e0bdf8c3c507f1",
      "created_at": "2020-12-18T15:01:21Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-19T14:54:53Z",
      "updated_at": "2020-12-19T14:54:53Z",
      "source": {
        "issue": {
          "id": 771395129,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NTQyOTM2ODI0",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20723",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20723/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20723/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20723/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/20723",
          "number": 20723,
          "state": "closed",
          "state_reason": null,
          "title": "p2p: improve logging in EvictExtraOutboundPeers()",
          "body": "following up on https://github.com/bitcoin/bitcoin/pull/19858#discussion_r545824316.\r\n",
          "user": {
            "login": "jonatack",
            "id": 2415484,
            "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonatack",
            "html_url": "https://github.com/jonatack",
            "followers_url": "https://api.github.com/users/jonatack/followers",
            "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
            "organizations_url": "https://api.github.com/users/jonatack/orgs",
            "repos_url": "https://api.github.com/users/jonatack/repos",
            "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jonatack/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 2,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20723",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/20723",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/20723.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/20723.patch"
          },
          "closed_at": "2021-01-03T16:00:40Z",
          "created_at": "2020-12-19T14:54:53Z",
          "updated_at": "2022-08-16T17:11:04Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-21T17:25:47Z",
      "updated_at": "2020-12-21T17:25:47Z",
      "source": {
        "issue": {
          "id": 771452944,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NTQyOTc3MTM4",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20726",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20726/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20726/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20726/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/20726",
          "number": 20726,
          "state": "closed",
          "state_reason": null,
          "title": "p2p: Add DISABLETX message for negotiating block-relay-only connections",
          "body": "Implement BIP 338.\r\n\r\nWhen we initiate a block-relay-only connection today, our peer doesn't know that we won't send transactions ourselves, or even that we won't try to turn on transaction relay at some later point during the connection's lifetime.\r\n\r\nThis PR adds a new p2p message, DISABLETX, to be sent between VERSION and VERACK so that peers can signal to each other that they only want blocks/compactblocks/headers to be sent on the link, and not transaction-relay traffic (or addr messages, unless otherwise indicated).",
          "user": {
            "login": "sdaftuar",
            "id": 7463573,
            "node_id": "MDQ6VXNlcjc0NjM1NzM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sdaftuar",
            "html_url": "https://github.com/sdaftuar",
            "followers_url": "https://api.github.com/users/sdaftuar/followers",
            "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
            "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
            "repos_url": "https://api.github.com/users/sdaftuar/repos",
            "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "comments": 55,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20726",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/20726",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/20726.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/20726.patch"
          },
          "closed_at": "2022-05-19T12:47:00Z",
          "created_at": "2020-12-19T20:55:36Z",
          "updated_at": "2023-05-19T10:02:28Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-26T11:48:55Z",
      "updated_at": "2020-12-26T11:48:55Z",
      "source": {
        "issue": {
          "id": 774544768,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NTQ1NDUxNzk0",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20764",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20764/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20764/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20764/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/20764",
          "number": 20764,
          "state": "closed",
          "state_reason": null,
          "title": "cli -netinfo peer connections dashboard updates 🎄 ✨",
          "body": "Merry Bitcoin Christmas! Ho ho ho 🎄 ✨\r\n\r\nThis PR updates `-netinfo` to:\r\n- use the getpeerinfo `connection_type` field (and no longer use getpeerinfo `relaytxes` for block-relay detection)\r\n- display manual peers count, if any, in the outbound row\r\n- display the block relay counts in the outbound row only\r\n- display high-bandwidth BIP152 compact block relay peers (`hb` column, to `.` and from `*`)\r\n- add support for displaying I2P network peers, if any are present\r\n\r\nTesting and review welcome! How to test:\r\n\r\n- to run the full live dashboard (on Linux): `$ watch --interval 1 --no-title ./src/bitcoin-cli -netinfo 4`\r\n- to run the full dashboard: ``$ ./src/bitcoin-cli -netinfo 4``\r\n- to see the help: `$ ./src/bitcoin-cli -netinfo help`\r\n- to see the help summary: `$ ./src/bitcoin-cli -help | grep -A4 netinfo`\r\n",
          "user": {
            "login": "jonatack",
            "id": 2415484,
            "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonatack",
            "html_url": "https://github.com/jonatack",
            "followers_url": "https://api.github.com/users/jonatack/followers",
            "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
            "organizations_url": "https://api.github.com/users/jonatack/orgs",
            "repos_url": "https://api.github.com/users/jonatack/repos",
            "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jonatack/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 22,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20764",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/20764",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/20764.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/20764.patch"
          },
          "closed_at": "2021-02-05T13:43:24Z",
          "created_at": "2020-12-24T19:35:30Z",
          "updated_at": "2022-08-16T17:03:54Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 753242410,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc1MzI0MjQxMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/753242410",
      "actor": {
        "login": "dhruv",
        "id": 856960,
        "node_id": "MDQ6VXNlcjg1Njk2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dhruv",
        "html_url": "https://github.com/dhruv",
        "followers_url": "https://api.github.com/users/dhruv/followers",
        "following_url": "https://api.github.com/users/dhruv/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dhruv/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dhruv/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
        "organizations_url": "https://api.github.com/users/dhruv/orgs",
        "repos_url": "https://api.github.com/users/dhruv/repos",
        "events_url": "https://api.github.com/users/dhruv/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dhruv/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-01T02:22:30Z",
      "updated_at": "2021-01-01T02:22:30Z",
      "author_association": "CONTRIBUTOR",
      "body": "IIUC, since this merge, an extra outbound-full-relay connection is made upon a stale tip(3 block intervals), and an extra outbound-block-relay connection is now made every 5 minutes. Is there still value in the former?",
      "user": {
        "login": "dhruv",
        "id": 856960,
        "node_id": "MDQ6VXNlcjg1Njk2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dhruv",
        "html_url": "https://github.com/dhruv",
        "followers_url": "https://api.github.com/users/dhruv/followers",
        "following_url": "https://api.github.com/users/dhruv/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dhruv/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dhruv/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
        "organizations_url": "https://api.github.com/users/dhruv/orgs",
        "repos_url": "https://api.github.com/users/dhruv/repos",
        "events_url": "https://api.github.com/users/dhruv/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dhruv/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-753242410",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19858"
    },
    {
      "event": "commented",
      "id": 753243816,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc1MzI0MzgxNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/753243816",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-01T02:38:16Z",
      "updated_at": "2021-01-01T02:38:16Z",
      "author_association": "MEMBER",
      "body": "> IIUC, since this merge, an extra outbound-full-relay connection is made upon a stale tip(3 block intervals), and an extra outbound-block-relay connection is now made every 5 minutes. Is there still value in the former?\r\n\r\nYes I think there is. The stale tip logic more aggressively seeks out a new peer to connect to (staying in that state until a new connection is actually made) while this logic fires once on a selection from addrman and gives up even if no connection is made. Moreover the stale tip logic is an eviction algorithm for full relay peers, while this logic is only for block relay peers. I think having rotation logic for both makes sense, though there is probably room to improve the interaction between these two behaviors in all the various cases we can think of. \r\n",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-753243816",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19858"
    },
    {
      "event": "commented",
      "id": 753432802,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc1MzQzMjgwMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/753432802",
      "actor": {
        "login": "dhruv",
        "id": 856960,
        "node_id": "MDQ6VXNlcjg1Njk2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dhruv",
        "html_url": "https://github.com/dhruv",
        "followers_url": "https://api.github.com/users/dhruv/followers",
        "following_url": "https://api.github.com/users/dhruv/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dhruv/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dhruv/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
        "organizations_url": "https://api.github.com/users/dhruv/orgs",
        "repos_url": "https://api.github.com/users/dhruv/repos",
        "events_url": "https://api.github.com/users/dhruv/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dhruv/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-02T05:09:51Z",
      "updated_at": "2021-01-02T05:09:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "@sdaftuar Thanks for explaining. Could this be a way to improve the interaction between the two behaviors?:\r\n\r\n1. Upon stale tip, seek extra outbound-block-relay more aggressively rather than a 5 minute interval (stay in that state until the tip is no longer stale). \r\n2. Novel block discovery by the extra outbound-block-relay triggers outbound-full-relay eviction.\r\n3. Eliminate extra outbound-full-relay connections.\r\n\r\nPerhaps the simpler starting point is just to implement (2)? Are there any downsides/known attacks if we do that?",
      "user": {
        "login": "dhruv",
        "id": 856960,
        "node_id": "MDQ6VXNlcjg1Njk2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dhruv",
        "html_url": "https://github.com/dhruv",
        "followers_url": "https://api.github.com/users/dhruv/followers",
        "following_url": "https://api.github.com/users/dhruv/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dhruv/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dhruv/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
        "organizations_url": "https://api.github.com/users/dhruv/orgs",
        "repos_url": "https://api.github.com/users/dhruv/repos",
        "events_url": "https://api.github.com/users/dhruv/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dhruv/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-753432802",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19858"
    },
    {
      "event": "mentioned",
      "id": 4161474547,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDE2MTQ3NDU0Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4161474547",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-02T05:09:51Z"
    },
    {
      "event": "subscribed",
      "id": 4161474549,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQxNjE0NzQ1NDk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4161474549",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-02T05:09:51Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-12T18:26:16Z",
      "updated_at": "2021-01-12T18:26:16Z",
      "source": {
        "issue": {
          "id": 783053378,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NTUyNDcyOTk2",
          "url": "https://api.github.com/repos/bitcoinops/bitcoinops.github.io/issues/503",
          "repository_url": "https://api.github.com/repos/bitcoinops/bitcoinops.github.io",
          "labels_url": "https://api.github.com/repos/bitcoinops/bitcoinops.github.io/issues/503/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoinops/bitcoinops.github.io/issues/503/comments",
          "events_url": "https://api.github.com/repos/bitcoinops/bitcoinops.github.io/issues/503/events",
          "html_url": "https://github.com/bitcoinops/bitcoinops.github.io/pull/503",
          "number": 503,
          "state": "closed",
          "state_reason": null,
          "title": "Newsletters: add 131 (2020-01-13)",
          "body": "- [x] Update releases/RCs on Tuesday @harding\r\n- [x] Update topic entries after all content added @harding \r\n- [x] Bitcoin Core PR Review Club section @jonatack \r\n- [x] `Bitcoin Core #18077` @Xekyo \r\n- [x] `Bitcoin Core #19055` @adamjonas \r\n- [x] `C-Lightning #4320` @dongcarl \r\n\r\nNote: this PR adds an old topic entry to eclipse attacks, which were described in an entry but didn't explicitly say \"eclipse\" so I didn't notice it when creating the Eclipse Attack topic.  Relevant this week because we're linking to it.",
          "user": {
            "login": "harding",
            "id": 61096,
            "node_id": "MDQ6VXNlcjYxMDk2",
            "avatar_url": "https://avatars.githubusercontent.com/u/61096?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/harding",
            "html_url": "https://github.com/harding",
            "followers_url": "https://api.github.com/users/harding/followers",
            "following_url": "https://api.github.com/users/harding/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/harding/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/harding/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/harding/subscriptions",
            "organizations_url": "https://api.github.com/users/harding/orgs",
            "repos_url": "https://api.github.com/users/harding/repos",
            "events_url": "https://api.github.com/users/harding/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/harding/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 5,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoinops/bitcoinops.github.io/pulls/503",
            "html_url": "https://github.com/bitcoinops/bitcoinops.github.io/pull/503",
            "diff_url": "https://github.com/bitcoinops/bitcoinops.github.io/pull/503.diff",
            "patch_url": "https://github.com/bitcoinops/bitcoinops.github.io/pull/503.patch"
          },
          "closed_at": "2021-01-13T13:34:33Z",
          "created_at": "2021-01-11T04:24:12Z",
          "updated_at": "2021-01-13T13:34:33Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-30T07:22:16Z",
      "updated_at": "2021-04-30T07:22:16Z",
      "source": {
        "issue": {
          "id": 866133665,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NjIyMDg3MDE2",
          "url": "https://api.github.com/repos/bitcoin-core/gui/issues/289",
          "repository_url": "https://api.github.com/repos/bitcoin-core/gui",
          "labels_url": "https://api.github.com/repos/bitcoin-core/gui/issues/289/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-core/gui/issues/289/comments",
          "events_url": "https://api.github.com/repos/bitcoin-core/gui/issues/289/events",
          "html_url": "https://github.com/bitcoin-core/gui/pull/289",
          "number": 289,
          "state": "closed",
          "state_reason": null,
          "title": "Add \"Direction\" column to peers tab",
          "body": "![Screenshot from 2021-04-24 13-15-54](https://user-images.githubusercontent.com/2415484/115995575-4df86280-a5cb-11eb-84a6-7f2d3143b980.png)\r\n\r\nThis was initially proposed in #179 and saw an enthusiastic reception with several ACKs. One contributor was a weak NACK due to the horizontal space and so this was temporarily dropped, but since then #202 (and soon #256 and #293) resolve the issue. Moreover, the current state of displaying only a connection `Type` column without a connection `Direction` column is confusing (e.g. https://github.com/bitcoin/bitcoin/issues/21747#issuecomment-825072559), particularly as both the direction and the type are displayed in the peer details area with the `Direction/Type` row.\r\n\r\nThis patch fixes it and completes the initial proposal in #179 by adding a `Direction` column, making the peers tab the same as the `Direction/Type` row in the peer details and the direction and type columns in our other user-facing peer connections table in `-netinfo`.\r\n\r\nUsers can now sort the peers table by direction. The default sort is set to inbound, then outbound.\r\n\r\nThis patch also makes the direction and type translations the same for the 3 places where they are used (the peers column, the peer details row, and its tooltip), adds translator comments to link them together, and adds QStringBuilder fast QString concatenation with the `%` operator.",
          "user": {
            "login": "jonatack",
            "id": 2415484,
            "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonatack",
            "html_url": "https://github.com/jonatack",
            "followers_url": "https://api.github.com/users/jonatack/followers",
            "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
            "organizations_url": "https://api.github.com/users/jonatack/orgs",
            "repos_url": "https://api.github.com/users/jonatack/repos",
            "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jonatack/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 2964264316,
              "node_id": "MDU6TGFiZWwyOTY0MjY0MzE2",
              "url": "https://api.github.com/repos/bitcoin-core/gui/labels/UX",
              "name": "UX",
              "description": "All about \"how to get things done\"",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 16,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/289",
            "html_url": "https://github.com/bitcoin-core/gui/pull/289",
            "diff_url": "https://github.com/bitcoin-core/gui/pull/289.diff",
            "patch_url": "https://github.com/bitcoin-core/gui/pull/289.patch"
          },
          "closed_at": "2021-04-30T20:34:41Z",
          "created_at": "2021-04-23T13:51:53Z",
          "updated_at": "2022-08-16T16:58:56Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-27T17:24:22Z",
      "updated_at": "2021-11-27T17:24:22Z",
      "source": {
        "issue": {
          "id": 1065091473,
          "node_id": "PR_kwDOABII584vFe5F",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23614",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23614/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23614/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23614/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/23614",
          "number": 23614,
          "state": "closed",
          "state_reason": null,
          "title": "test: add unit test for block-relay-only eviction",
          "body": "Adds a unit test for block-relay-only eviction logic added in #19858, which was not covered by any tests before. The added test is very similar to the existing `stale_tip_peer_management` unit test, which tests the analogous logic for regular outbound peers.",
          "user": {
            "login": "mzumsande",
            "id": 48763452,
            "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
            "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mzumsande",
            "html_url": "https://github.com/mzumsande",
            "followers_url": "https://api.github.com/users/mzumsande/followers",
            "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
            "organizations_url": "https://api.github.com/users/mzumsande/orgs",
            "repos_url": "https://api.github.com/users/mzumsande/repos",
            "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/mzumsande/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23614",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/23614",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/23614.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/23614.patch"
          },
          "closed_at": "2021-12-06T12:27:38Z",
          "created_at": "2021-11-27T17:24:22Z",
          "updated_at": "2022-12-08T10:01:53Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 5720246412,
      "node_id": "REFE_lADOABII584pJ20yzwAAAAFU9AiM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5720246412",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "8b2c0df83eabd03d6bfa652897f022890d474b8b",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b2c0df83eabd03d6bfa652897f022890d474b8b",
      "created_at": "2021-12-06T12:27:37Z"
    },
    {
      "event": "referenced",
      "id": 5728940167,
      "node_id": "REFE_lADOABII584pJ20yzwAAAAFVeLCH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5728940167",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "f021c044621f356c90d37773aeaa820ae06de8ad",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/f021c044621f356c90d37773aeaa820ae06de8ad",
      "created_at": "2021-12-07T17:09:16Z"
    },
    {
      "event": "referenced",
      "id": 5959051450,
      "node_id": "REFE_lADOABII584pJ20yzwAAAAFjL-i6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5959051450",
      "actor": {
        "login": "Fabcien",
        "id": 44533924,
        "node_id": "MDQ6VXNlcjQ0NTMzOTI0",
        "avatar_url": "https://avatars.githubusercontent.com/u/44533924?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fabcien",
        "html_url": "https://github.com/Fabcien",
        "followers_url": "https://api.github.com/users/Fabcien/followers",
        "following_url": "https://api.github.com/users/Fabcien/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Fabcien/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Fabcien/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Fabcien/subscriptions",
        "organizations_url": "https://api.github.com/users/Fabcien/orgs",
        "repos_url": "https://api.github.com/users/Fabcien/repos",
        "events_url": "https://api.github.com/users/Fabcien/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Fabcien/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "9c0ffc9f4d3476b8105db35c3521e90d5e81d993",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/9c0ffc9f4d3476b8105db35c3521e90d5e81d993",
      "created_at": "2022-01-26T19:36:29Z"
    },
    {
      "event": "locked",
      "id": 7199000040,
      "node_id": "LOE_lADOABII584pJ20yzwAAAAGtGAXo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7199000040",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-16T17:01:41Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/481853670",
      "pull_request_review_id": 480571773,
      "id": 481853670,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTg1MzY3MA==",
      "diff_hunk": "@@ -1760,12 +1760,12 @@ int CConnman::GetExtraOutboundCount()\n     {\n         LOCK(cs_vNodes);\n         for (const CNode* pnode : vNodes) {\n-            if (pnode->fSuccessfullyConnected && !pnode->fDisconnect && pnode->IsOutboundOrBlockRelayConn()) {\n+            if (pnode->fSuccessfullyConnected && !pnode->fDisconnect && pnode->IsFullOutboundConn()) {\n                 ++nOutbound;\n             }\n         }\n     }\n-    return std::max(nOutbound - m_max_outbound_full_relay - m_max_outbound_block_relay, 0);\n+    return std::max(nOutbound - m_max_outbound_full_relay, 0);",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 11,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "720f1125992022ae71dbfd3cf47f4d8761aab99c",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Perhaps it's a good opportunity to refactor this function:\r\n- rename `GetExtraOutboundCount` -> `GetExtraFullOutboundCount`\r\n- rename `int nOutbound` -> `uint32_t full_outbound_peers`",
      "created_at": "2020-09-02T07:55:25Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r481853670",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/481853670"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1768,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/481864952",
      "pull_request_review_id": 480581377,
      "id": 481864952,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTg2NDk1Mg==",
      "diff_hunk": "@@ -3961,13 +3961,11 @@ void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n             AssertLockHeld(cs_main);\n \n             // Ignore non-outbound peers, or nodes marked for disconnect already",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "d3612a1fd0e61ee131feab9585bc199440547680",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Should be along the following \"ignore non-outbound-full-relay peers\"?\r\nOr probably even better: \"Consider only outbound full-relay peers not already marked for disconnection\"?",
      "created_at": "2020-09-02T08:08:21Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r481864952",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/481864952"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4049,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/481871155",
      "pull_request_review_id": 480586630,
      "id": 481871155,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTg3MTE1NQ==",
      "diff_hunk": "@@ -1768,6 +1768,20 @@ int CConnman::GetExtraOutboundCount()\n     return std::max(nOutbound - m_max_outbound_full_relay, 0);\n }\n \n+int CConnman::GetExtraBlockRelayCount()\n+{\n+    int nBlockRelay = 0;",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "f0975e75646e5b28699694ccf89d081d687ad090",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`nBlockRelay` doesn't seem to follow the code conventions we have for vars",
      "created_at": "2020-09-02T08:15:20Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r481871155",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/481871155"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1773,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483034922",
      "pull_request_review_id": 481914330,
      "id": 483034922,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzAzNDkyMg==",
      "diff_hunk": "@@ -1760,12 +1760,12 @@ int CConnman::GetExtraOutboundCount()\n     {\n         LOCK(cs_vNodes);\n         for (const CNode* pnode : vNodes) {\n-            if (pnode->fSuccessfullyConnected && !pnode->fDisconnect && pnode->IsOutboundOrBlockRelayConn()) {\n+            if (pnode->fSuccessfullyConnected && !pnode->fDisconnect && pnode->IsFullOutboundConn()) {\n                 ++nOutbound;\n             }\n         }\n     }\n-    return std::max(nOutbound - m_max_outbound_full_relay - m_max_outbound_block_relay, 0);\n+    return std::max(nOutbound - m_max_outbound_full_relay, 0);",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 11,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "720f1125992022ae71dbfd3cf47f4d8761aab99c",
      "in_reply_to_id": 481853670,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2020-09-03T14:45:23Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483034922",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483034922"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1768,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483035233",
      "pull_request_review_id": 481914748,
      "id": 483035233,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzAzNTIzMw==",
      "diff_hunk": "@@ -3961,13 +3961,11 @@ void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n             AssertLockHeld(cs_main);\n \n             // Ignore non-outbound peers, or nodes marked for disconnect already",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "d3612a1fd0e61ee131feab9585bc199440547680",
      "in_reply_to_id": 481864952,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2020-09-03T14:45:48Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483035233",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483035233"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4049,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483035358",
      "pull_request_review_id": 481914913,
      "id": 483035358,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzAzNTM1OA==",
      "diff_hunk": "@@ -1768,6 +1768,20 @@ int CConnman::GetExtraOutboundCount()\n     return std::max(nOutbound - m_max_outbound_full_relay, 0);\n }\n \n+int CConnman::GetExtraBlockRelayCount()\n+{\n+    int nBlockRelay = 0;",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "f0975e75646e5b28699694ccf89d081d687ad090",
      "in_reply_to_id": 481871155,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2020-09-03T14:45:58Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483035358",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483035358"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1773,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483328318",
      "pull_request_review_id": 482291423,
      "id": 483328318,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzMyODMxOA==",
      "diff_hunk": "@@ -1866,15 +1881,39 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         // until we hit our block-relay-only peer limit.\n         // GetTryNewOutboundPeer() gets set when a stale tip is detected, so we\n         // try opening an additional OUTBOUND_FULL_RELAY connection. If none of\n-        // these conditions are met, check the nNextFeeler timer to decide if\n-        // we should open a FEELER.\n+        // these conditions are met, check to see if it's time to try an extra\n+        // block-relay peer (to confirm our tip is current, see below) or the nNextFeeler",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 53,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think it would be better to converge naming for BLOCK_RELAY and thus ease reviewing. They're commented as either block-relay or block-relay-only peers through the codebase but actually designate the same type. I'm even on which one we pick as long as we're consistent.",
      "created_at": "2020-09-04T00:56:58Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483328318",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483328318"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1885,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483329786",
      "pull_request_review_id": 482291423,
      "id": 483329786,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzMyOTc4Ng==",
      "diff_hunk": "@@ -3988,11 +3988,56 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n+    // If we have any extra block-relay peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, disconnect the second youngest\n+    // instead (so we rotate our youngest block-relay peer).\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        // Pick the block-relay peer that we just connected, unless it gave us\n+        // a block -- in which case disconnect the next-youngest block-relay\n+        // peer.\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+        std::pair<NodeId, int64_t> second_youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {",
      "path": "src/net_processing.cpp",
      "position": 29,
      "original_position": 29,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This is making an assumption on `GetNewNodeId()` being a monotonic counter function of connections order. It may silently break id we modify ids selection to something else (like random nonces). Can we use `nTimeConnected` instead ?",
      "created_at": "2020-09-04T01:02:41Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483329786",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483329786"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3923,
      "original_line": 3923,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483332808",
      "pull_request_review_id": 482291423,
      "id": 483332808,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzMzMjgwOA==",
      "diff_hunk": "@@ -1866,15 +1881,39 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         // until we hit our block-relay-only peer limit.\n         // GetTryNewOutboundPeer() gets set when a stale tip is detected, so we\n         // try opening an additional OUTBOUND_FULL_RELAY connection. If none of\n-        // these conditions are met, check the nNextFeeler timer to decide if\n-        // we should open a FEELER.\n+        // these conditions are met, check to see if it's time to try an extra\n+        // block-relay peer (to confirm our tip is current, see below) or the nNextFeeler\n+        // timer to decide if we should open a FEELER.\n \n         if (nOutboundFullRelay < m_max_outbound_full_relay) {\n             // OUTBOUND_FULL_RELAY\n         } else if (nOutboundBlockRelay < m_max_outbound_block_relay) {\n             conn_type = ConnectionType::BLOCK_RELAY;\n         } else if (GetTryNewOutboundPeer()) {\n             // OUTBOUND_FULL_RELAY\n+        } else if (nTime > nNextExtraBlockRelay && m_start_extra_block_relay_peers) {\n+            // Periodically connect to a peer (using regular outbound selection\n+            // methodology from addrman) and stay connected long enough to sync\n+            // headers, but not much else.\n+            //\n+            // Then disconnect the peer, if we haven't learned anything new.\n+            //\n+            // The idea is to make eclipse attacks very difficult to pull off,",
      "path": "src/net.cpp",
      "position": 69,
      "original_position": 69,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I would be more conservative in allegation of this new eclipse counter-measure effectiveness.\r\n\r\nI believe we should have a hierarchy of eclipse attacks classified with regards to resources they require from the attacker to successfully perform them. And thus serves as a ground to evaluate a counter-measure with regards to a scenario. The fact that a stronger attack A can easily bypass counter-measure for attack B doesn't invalidate worthiness of counter-measure B.\r\n\r\nFor this new periodic-chain-sync counter-measure, I do agree it improves against eviction logic takeover or partial addrman poisoning. However I guess it doesn't score well against total addrman poisoning or infrastructure-based eclipse.\r\n\r\nAs a suggestion, maybe we can add a prefix to any mention of eclipse attacks hinting scenario considered like `addrman-poisoning` or `eviction-gaming` ?",
      "created_at": "2020-09-04T01:15:17Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483332808",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483332808"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1979,
      "original_line": 1979,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483334138",
      "pull_request_review_id": 482291423,
      "id": 483334138,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzMzNDEzOA==",
      "diff_hunk": "@@ -4064,6 +4108,11 @@ void PeerLogicValidation::CheckForStaleTipAndEvictPeers(const Consensus::Params\n         }\n         m_stale_tip_check_time = time_in_seconds + STALE_CHECK_INTERVAL;\n     }\n+\n+    if (!m_initial_sync_finished && CanDirectFetch(consensusParams)) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 93,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I suppose this doesn't protect against initial-network-connection eclipse attack like DNS cache poisoning. Maybe after some timer based on an optimistic headers-chain sync delay and observing that our tip isn't near to local clock trigger this logic anyway ?\r\n\r\nThat said, if you're effectively eclipsed since the beginning and don't have any good peers available in your addrman I don't think it would change anything.",
      "created_at": "2020-09-04T01:20:40Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483334138",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483334138"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4116,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483336732",
      "pull_request_review_id": 482291423,
      "id": 483336732,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzMzNjczMg==",
      "diff_hunk": "@@ -3988,11 +3988,56 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n+    // If we have any extra block-relay peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, disconnect the second youngest\n+    // instead (so we rotate our youngest block-relay peer).\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        // Pick the block-relay peer that we just connected, unless it gave us\n+        // a block -- in which case disconnect the next-youngest block-relay\n+        // peer.\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+        std::pair<NodeId, int64_t> second_youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {\n+                second_youngest_peer = youngest_peer;\n+                youngest_peer.first = pnode->GetId();\n+                youngest_peer.second = pnode->nLastBlockTime;",
      "path": "src/net_processing.cpp",
      "position": 32,
      "original_position": 32,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This is a bit of a name collusion, maybe `second_youngest_peer` -> `next_youngest_peer`",
      "created_at": "2020-09-04T01:31:11Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483336732",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483336732"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3926,
      "original_line": 3926,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483340353",
      "pull_request_review_id": 482291423,
      "id": 483340353,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM0MDM1Mw==",
      "diff_hunk": "@@ -1866,15 +1881,39 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         // until we hit our block-relay-only peer limit.\n         // GetTryNewOutboundPeer() gets set when a stale tip is detected, so we\n         // try opening an additional OUTBOUND_FULL_RELAY connection. If none of\n-        // these conditions are met, check the nNextFeeler timer to decide if\n-        // we should open a FEELER.\n+        // these conditions are met, check to see if it's time to try an extra\n+        // block-relay peer (to confirm our tip is current, see below) or the nNextFeeler\n+        // timer to decide if we should open a FEELER.\n \n         if (nOutboundFullRelay < m_max_outbound_full_relay) {\n             // OUTBOUND_FULL_RELAY\n         } else if (nOutboundBlockRelay < m_max_outbound_block_relay) {\n             conn_type = ConnectionType::BLOCK_RELAY;\n         } else if (GetTryNewOutboundPeer()) {\n             // OUTBOUND_FULL_RELAY\n+        } else if (nTime > nNextExtraBlockRelay && m_start_extra_block_relay_peers) {\n+            // Periodically connect to a peer (using regular outbound selection\n+            // methodology from addrman) and stay connected long enough to sync\n+            // headers, but not much else.\n+            //\n+            // Then disconnect the peer, if we haven't learned anything new.\n+            //\n+            // The idea is to make eclipse attacks very difficult to pull off,\n+            // because every few minutes we're finding a new peer to learn headers\n+            // from.\n+            //\n+            // This is similar to the logic for trying extra outbound (full-relay)\n+            // peers, except:\n+            // - we do this all the time on a poisson timer, rather than just when\n+            //   our tip is stale\n+            // - we potentially disconnect our next-youngest block-relay peer, if we",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 77,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think this is pproper even if it's biasing a bit towards attackers. I assume they run modified clients and thus always win new block announcement races and have public sybils well-spread through /16s.\r\n\r\nWe start with Alice, Malicia as 2 block-relay connections:\r\n* Alice connection gets dropped due an external event from our node viewpoint (like network issue or Alice inbound eviction logic)\r\n* Malicia becomes the oldest connection\r\n* We open a new block-relay connection to Bob\r\n* We open a new chain-sync connection to Malicia_2\r\n* Malicia_2 announce a new best block updating her `nLastBlockTime`\r\n* We drop Bob\r\n* We have Malicia and Malicia_2 as stable block-only peers\r\n\r\nNow to conserve its advantage an attacker must ensure to update our chain tip faster than learning any headers through the new spawn chain-sync peer otherwise Malicia_2 would be evicted by Caroll, first such peer sending a better block. An attacker has to perfom useful work to keep its bias and that way breaking attack purpose ?",
      "created_at": "2020-09-04T01:46:05Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483340353",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483340353"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1909,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483441294",
      "pull_request_review_id": 482425041,
      "id": 483441294,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ0MTI5NA==",
      "diff_hunk": "@@ -51,6 +51,8 @@ static const bool DEFAULT_WHITELISTFORCERELAY = false;\n static const int TIMEOUT_INTERVAL = 20 * 60;\n /** Run the feeler connection loop once every 2 minutes or 120 seconds. **/\n static const int FEELER_INTERVAL = 120;\n+/** Run the chain-sync connection loop once every 5 minutes. **/\n+static const int CHAIN_SYNC_INTERVAL = 300;",
      "path": "src/net.h",
      "position": null,
      "original_position": 5,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "013b41fc27110a288d93dde73325602526a692f5",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "can we make this mockable from the beginning? (std::chrono)",
      "created_at": "2020-09-04T07:34:30Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483441294",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483441294"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483443580",
      "pull_request_review_id": 482428021,
      "id": 483443580,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ0MzU4MA==",
      "diff_hunk": "@@ -3988,11 +3988,56 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n+    // If we have any extra block-relay peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, disconnect the second youngest\n+    // instead (so we rotate our youngest block-relay peer).\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        // Pick the block-relay peer that we just connected, unless it gave us\n+        // a block -- in which case disconnect the next-youngest block-relay\n+        // peer.\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+        std::pair<NodeId, int64_t> second_youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {",
      "path": "src/net_processing.cpp",
      "position": 29,
      "original_position": 29,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "in_reply_to_id": 483329786,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'd also prefer to not having this assumption, and it seems to be easy to avoid.",
      "created_at": "2020-09-04T07:39:25Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483443580",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483443580"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3923,
      "original_line": 3923,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483444542",
      "pull_request_review_id": 482429291,
      "id": 483444542,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ0NDU0Mg==",
      "diff_hunk": "@@ -94,6 +94,9 @@ class PeerLogicValidation final : public CValidationInterface, public NetEventsI\n private:\n     int64_t m_stale_tip_check_time; //!< Next time to check for stale tip\n \n+    /** Whether we've completed initial sync yet, for determining when to turn\n+      * on extra block-relay peers. */\n+    bool m_initial_sync_finished{false};",
      "path": "src/net_processing.h",
      "position": 6,
      "original_position": 6,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "013b41fc27110a288d93dde73325602526a692f5",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Should this ever be set back to false? For example, if we were offline for a week and we know we're catching up.",
      "created_at": "2020-09-04T07:41:32Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483444542",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483444542"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 211,
      "original_line": 211,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483487568",
      "pull_request_review_id": 482484588,
      "id": 483487568,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ4NzU2OA==",
      "diff_hunk": "@@ -3988,11 +3988,56 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n+    // If we have any extra block-relay peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, disconnect the second youngest\n+    // instead (so we rotate our youngest block-relay peer).\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        // Pick the block-relay peer that we just connected, unless it gave us\n+        // a block -- in which case disconnect the next-youngest block-relay\n+        // peer.\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+        std::pair<NodeId, int64_t> second_youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {",
      "path": "src/net_processing.cpp",
      "position": 29,
      "original_position": 29,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "in_reply_to_id": 483329786,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If `m_connman.ForEachNode` is not ordered, this algorithm may mistakenly select `second_youngest`.",
      "created_at": "2020-09-04T09:01:48Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483487568",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483487568"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3923,
      "original_line": 3923,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483490780",
      "pull_request_review_id": 482488691,
      "id": 483490780,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ5MDc4MA==",
      "diff_hunk": "@@ -3988,6 +3988,51 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n+    // If we have any extra block-relay peers, disconnect the youngest unless",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "013b41fc27110a288d93dde73325602526a692f5",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: it's a little less clear that the youngest peer is the _temporary_ connection created just couple minutes ago, would be cool to explain it more explicitly.",
      "created_at": "2020-09-04T09:07:59Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483490780",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483490780"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3991,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483496118",
      "pull_request_review_id": 482495238,
      "id": 483496118,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ5NjExOA==",
      "diff_hunk": "@@ -3988,6 +3988,51 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n+    // If we have any extra block-relay peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, disconnect the second youngest\n+    // instead (so we rotate our youngest block-relay peer).\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        // Pick the block-relay peer that we just connected, unless it gave us\n+        // a block -- in which case disconnect the next-youngest block-relay\n+        // peer.\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+        std::pair<NodeId, int64_t> second_youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {\n+                second_youngest_peer = youngest_peer;\n+                youngest_peer.first = pnode->GetId();\n+                youngest_peer.second = pnode->nLastBlockTime;\n+            }\n+        });\n+        NodeId to_disconnect = youngest_peer.first;\n+        if (youngest_peer.second > 0) {\n+            // Our newest block-relay peer gave us a block; disconnect our\n+            // second youngest.\n+            to_disconnect = second_youngest_peer.first;\n+        }\n+        m_connman.ForNode(to_disconnect, [&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            // Make sure we're not getting a block right now, and that",
      "path": "src/net_processing.cpp",
      "position": 43,
      "original_position": 32,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "013b41fc27110a288d93dde73325602526a692f5",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: I had to double-check that `nBlocksInFlight` can't be tricked with fake blocks. If you gonna update it, maybe just say \"block with a valid header\"?",
      "created_at": "2020-09-04T09:17:26Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483496118",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483496118"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3937,
      "original_line": 3937,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483691169",
      "pull_request_review_id": 482753530,
      "id": 483691169,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzY5MTE2OQ==",
      "diff_hunk": "@@ -3988,11 +3988,56 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n+    // If we have any extra block-relay peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, disconnect the second youngest\n+    // instead (so we rotate our youngest block-relay peer).\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        // Pick the block-relay peer that we just connected, unless it gave us\n+        // a block -- in which case disconnect the next-youngest block-relay\n+        // peer.\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+        std::pair<NodeId, int64_t> second_youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {",
      "path": "src/net_processing.cpp",
      "position": 29,
      "original_position": 29,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "in_reply_to_id": 483329786,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Sure I can change this, but keep in mind this logic is used a little further down already, in the existing outbound full-relay peer eviction algorithm.\r\n\r\nEDIT: Actually, I think while this has some logical appeal it makes the code read strictly worse -- CNode::nTimeConnected is tracked in seconds, so it's perfectly plausible that you might have two nodes that tie, and you'd presumably break the tie using nodeid anyway!  I'm just going to add a comment that we're using nodeid to make the determination of which peer is younger (ie higher NodeId).",
      "created_at": "2020-09-04T15:29:37Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483691169",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483691169"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3923,
      "original_line": 3923,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483692149",
      "pull_request_review_id": 482754298,
      "id": 483692149,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzY5MjE0OQ==",
      "diff_hunk": "@@ -3988,6 +3988,51 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n+    // If we have any extra block-relay peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, disconnect the second youngest\n+    // instead (so we rotate our youngest block-relay peer).\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        // Pick the block-relay peer that we just connected, unless it gave us\n+        // a block -- in which case disconnect the next-youngest block-relay\n+        // peer.\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+        std::pair<NodeId, int64_t> second_youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {\n+                second_youngest_peer = youngest_peer;\n+                youngest_peer.first = pnode->GetId();\n+                youngest_peer.second = pnode->nLastBlockTime;\n+            }\n+        });\n+        NodeId to_disconnect = youngest_peer.first;\n+        if (youngest_peer.second > 0) {\n+            // Our newest block-relay peer gave us a block; disconnect our\n+            // second youngest.\n+            to_disconnect = second_youngest_peer.first;\n+        }\n+        m_connman.ForNode(to_disconnect, [&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            // Make sure we're not getting a block right now, and that",
      "path": "src/net_processing.cpp",
      "position": 43,
      "original_position": 32,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "013b41fc27110a288d93dde73325602526a692f5",
      "in_reply_to_id": 483496118,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Sure I can add a hint -- I thought it was well-understood that we only request blocks that are on a (valid) headers chain resulting in a tip that has >= work as our tip, as we use that fact in multiple places in `net_processing`, I think.",
      "created_at": "2020-09-04T15:30:41Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483692149",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483692149"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3937,
      "original_line": 3937,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483696666",
      "pull_request_review_id": 482754298,
      "id": 483696666,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzY5NjY2Ng==",
      "diff_hunk": "@@ -4064,6 +4108,11 @@ void PeerLogicValidation::CheckForStaleTipAndEvictPeers(const Consensus::Params\n         }\n         m_stale_tip_check_time = time_in_seconds + STALE_CHECK_INTERVAL;\n     }\n+\n+    if (!m_initial_sync_finished && CanDirectFetch(consensusParams)) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 93,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "in_reply_to_id": 483334138,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Wouldn't the existing stale-tip check let us get new outbound peers in the case that our tip isn't updating at all? ",
      "created_at": "2020-09-04T15:35:43Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483696666",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483696666"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4116,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483699833",
      "pull_request_review_id": 482754298,
      "id": 483699833,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzY5OTgzMw==",
      "diff_hunk": "@@ -94,6 +94,9 @@ class PeerLogicValidation final : public CValidationInterface, public NetEventsI\n private:\n     int64_t m_stale_tip_check_time; //!< Next time to check for stale tip\n \n+    /** Whether we've completed initial sync yet, for determining when to turn\n+      * on extra block-relay peers. */\n+    bool m_initial_sync_finished{false};",
      "path": "src/net_processing.h",
      "position": 6,
      "original_position": 6,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "013b41fc27110a288d93dde73325602526a692f5",
      "in_reply_to_id": 483444542,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If you go offline for a week by shutting down bitcoind there is no issue; if you close your laptop or disconnect from the network though then yes you're right that we'll use these occasional peers to help us catch up, which is not the intent.  However, we don't have a good way to distinguish that situation in our code right now...  Arguably stale-tip checking shouldn't fire either in those circumstances but we don't try to do anything to limit that?\r\n\r\nI'm inclined to leave this, and if we somehow improve our software to detect circumstances like that, then we can update this logic accordingly.",
      "created_at": "2020-09-04T15:39:05Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483699833",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483699833"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 211,
      "original_line": 211,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483704479",
      "pull_request_review_id": 482754298,
      "id": 483704479,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcwNDQ3OQ==",
      "diff_hunk": "@@ -1866,15 +1881,39 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         // until we hit our block-relay-only peer limit.\n         // GetTryNewOutboundPeer() gets set when a stale tip is detected, so we\n         // try opening an additional OUTBOUND_FULL_RELAY connection. If none of\n-        // these conditions are met, check the nNextFeeler timer to decide if\n-        // we should open a FEELER.\n+        // these conditions are met, check to see if it's time to try an extra\n+        // block-relay peer (to confirm our tip is current, see below) or the nNextFeeler\n+        // timer to decide if we should open a FEELER.\n \n         if (nOutboundFullRelay < m_max_outbound_full_relay) {\n             // OUTBOUND_FULL_RELAY\n         } else if (nOutboundBlockRelay < m_max_outbound_block_relay) {\n             conn_type = ConnectionType::BLOCK_RELAY;\n         } else if (GetTryNewOutboundPeer()) {\n             // OUTBOUND_FULL_RELAY\n+        } else if (nTime > nNextExtraBlockRelay && m_start_extra_block_relay_peers) {\n+            // Periodically connect to a peer (using regular outbound selection\n+            // methodology from addrman) and stay connected long enough to sync\n+            // headers, but not much else.\n+            //\n+            // Then disconnect the peer, if we haven't learned anything new.\n+            //\n+            // The idea is to make eclipse attacks very difficult to pull off,\n+            // because every few minutes we're finding a new peer to learn headers\n+            // from.\n+            //\n+            // This is similar to the logic for trying extra outbound (full-relay)\n+            // peers, except:\n+            // - we do this all the time on a poisson timer, rather than just when\n+            //   our tip is stale\n+            // - we potentially disconnect our next-youngest block-relay peer, if we",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 77,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "in_reply_to_id": 483340353,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yep.  Most importantly, because we're always trying a new peer and exchanging best tip information, this should create a very high cost to an attacker to actually split the network for a meaningful amount of time (even if they've taking all our initial peer slots).",
      "created_at": "2020-09-04T15:44:20Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483704479",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483704479"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1909,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483713328",
      "pull_request_review_id": 482754298,
      "id": 483713328,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcxMzMyOA==",
      "diff_hunk": "@@ -1866,15 +1881,39 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         // until we hit our block-relay-only peer limit.\n         // GetTryNewOutboundPeer() gets set when a stale tip is detected, so we\n         // try opening an additional OUTBOUND_FULL_RELAY connection. If none of\n-        // these conditions are met, check the nNextFeeler timer to decide if\n-        // we should open a FEELER.\n+        // these conditions are met, check to see if it's time to try an extra\n+        // block-relay peer (to confirm our tip is current, see below) or the nNextFeeler\n+        // timer to decide if we should open a FEELER.\n \n         if (nOutboundFullRelay < m_max_outbound_full_relay) {\n             // OUTBOUND_FULL_RELAY\n         } else if (nOutboundBlockRelay < m_max_outbound_block_relay) {\n             conn_type = ConnectionType::BLOCK_RELAY;\n         } else if (GetTryNewOutboundPeer()) {\n             // OUTBOUND_FULL_RELAY\n+        } else if (nTime > nNextExtraBlockRelay && m_start_extra_block_relay_peers) {\n+            // Periodically connect to a peer (using regular outbound selection\n+            // methodology from addrman) and stay connected long enough to sync\n+            // headers, but not much else.\n+            //\n+            // Then disconnect the peer, if we haven't learned anything new.\n+            //\n+            // The idea is to make eclipse attacks very difficult to pull off,",
      "path": "src/net.cpp",
      "position": 69,
      "original_position": 69,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "in_reply_to_id": 483332808,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I re-read my comment, and I think it's pretty accurate.  If other reviewers think that the language here is somehow too strong and implies this logic is doing something it isn't, I'll reconsider.\r\n\r\nNote, by the way, that the behavior introduced here is beneficial to not just the node doing it, but to the whole network, as a node already connected to the honest network that is periodically connecting to new peers to sync tips with others is helping bridge the entire network.",
      "created_at": "2020-09-04T16:00:07Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483713328",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483713328"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1979,
      "original_line": 1979,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483726992",
      "pull_request_review_id": 482754298,
      "id": 483726992,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcyNjk5Mg==",
      "diff_hunk": "@@ -1866,15 +1881,39 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         // until we hit our block-relay-only peer limit.\n         // GetTryNewOutboundPeer() gets set when a stale tip is detected, so we\n         // try opening an additional OUTBOUND_FULL_RELAY connection. If none of\n-        // these conditions are met, check the nNextFeeler timer to decide if\n-        // we should open a FEELER.\n+        // these conditions are met, check to see if it's time to try an extra\n+        // block-relay peer (to confirm our tip is current, see below) or the nNextFeeler",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 53,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "in_reply_to_id": 483328318,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed in latest version.",
      "created_at": "2020-09-04T16:25:50Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483726992",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483726992"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1885,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483728160",
      "pull_request_review_id": 482754298,
      "id": 483728160,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcyODE2MA==",
      "diff_hunk": "@@ -51,6 +51,8 @@ static const bool DEFAULT_WHITELISTFORCERELAY = false;\n static const int TIMEOUT_INTERVAL = 20 * 60;\n /** Run the feeler connection loop once every 2 minutes or 120 seconds. **/\n static const int FEELER_INTERVAL = 120;\n+/** Run the chain-sync connection loop once every 5 minutes. **/\n+static const int CHAIN_SYNC_INTERVAL = 300;",
      "path": "src/net.h",
      "position": null,
      "original_position": 5,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "013b41fc27110a288d93dde73325602526a692f5",
      "in_reply_to_id": 483441294,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can we punt until someone also changes the feeler logic to be the same?  Right now the logic for both is very similar, which I think helps readability.  (Also, I find `std::chrono` to be harder to work with than the tools I know, so I'm afraid I'll introduce an error if I try to make the change myself.)",
      "created_at": "2020-09-04T16:26:51Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483728160",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483728160"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483750720",
      "pull_request_review_id": 482754298,
      "id": 483750720,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzc1MDcyMA==",
      "diff_hunk": "@@ -3988,6 +3988,51 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n+    // If we have any extra block-relay peers, disconnect the youngest unless",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "013b41fc27110a288d93dde73325602526a692f5",
      "in_reply_to_id": 483490780,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed in latest version.",
      "created_at": "2020-09-04T17:05:55Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483750720",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483750720"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3991,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483750782",
      "pull_request_review_id": 482754298,
      "id": 483750782,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzc1MDc4Mg==",
      "diff_hunk": "@@ -3988,11 +3988,56 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n+    // If we have any extra block-relay peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, disconnect the second youngest\n+    // instead (so we rotate our youngest block-relay peer).\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        // Pick the block-relay peer that we just connected, unless it gave us\n+        // a block -- in which case disconnect the next-youngest block-relay\n+        // peer.\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+        std::pair<NodeId, int64_t> second_youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {\n+                second_youngest_peer = youngest_peer;\n+                youngest_peer.first = pnode->GetId();\n+                youngest_peer.second = pnode->nLastBlockTime;",
      "path": "src/net_processing.cpp",
      "position": 32,
      "original_position": 32,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "in_reply_to_id": 483336732,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Changed.",
      "created_at": "2020-09-04T17:06:04Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r483750782",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/483750782"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3926,
      "original_line": 3926,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484274913",
      "pull_request_review_id": 483356892,
      "id": 484274913,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI3NDkxMw==",
      "diff_hunk": "@@ -3988,6 +3988,51 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n+    // If we have any extra block-relay peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, disconnect the second youngest\n+    // instead (so we rotate our youngest block-relay peer).\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        // Pick the block-relay peer that we just connected, unless it gave us\n+        // a block -- in which case disconnect the next-youngest block-relay\n+        // peer.\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+        std::pair<NodeId, int64_t> second_youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {\n+                second_youngest_peer = youngest_peer;\n+                youngest_peer.first = pnode->GetId();\n+                youngest_peer.second = pnode->nLastBlockTime;\n+            }\n+        });\n+        NodeId to_disconnect = youngest_peer.first;\n+        if (youngest_peer.second > 0) {\n+            // Our newest block-relay peer gave us a block; disconnect our\n+            // second youngest.\n+            to_disconnect = second_youngest_peer.first;\n+        }\n+        m_connman.ForNode(to_disconnect, [&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            // Make sure we're not getting a block right now, and that",
      "path": "src/net_processing.cpp",
      "position": 43,
      "original_position": 32,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "013b41fc27110a288d93dde73325602526a692f5",
      "in_reply_to_id": 483496118,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "My worry was that `nBlocksInFlight` might contain just a hash for an announced block (pre-compact blocks) which we have no idea about. Then announcing any random hash would trick us.\r\n\r\nYour current comment is sufficient to clarify that this is not possible.",
      "created_at": "2020-09-07T08:30:02Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r484274913",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484274913"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3937,
      "original_line": 3937,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484285863",
      "pull_request_review_id": 483371971,
      "id": 484285863,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI4NTg2Mw==",
      "diff_hunk": "@@ -51,6 +51,8 @@ static const bool DEFAULT_WHITELISTFORCERELAY = false;\n static const int TIMEOUT_INTERVAL = 20 * 60;\n /** Run the feeler connection loop once every 2 minutes or 120 seconds. **/\n static const int FEELER_INTERVAL = 120;\n+/** Run the chain-sync connection loop once every 5 minutes. **/\n+static const int CHAIN_SYNC_INTERVAL = 300;",
      "path": "src/net.h",
      "position": null,
      "original_position": 5,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "013b41fc27110a288d93dde73325602526a692f5",
      "in_reply_to_id": 483441294,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not sure what you mean by \"feeler logic to be the same\", but I'm making feeler timings mockable as part of #19869, you're very welcome to review :)\r\n\r\nMy opinion is not very strong here, we can update it later, I just thought it's a good opportunity.",
      "created_at": "2020-09-07T08:48:37Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r484285863",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484285863"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484923353",
      "pull_request_review_id": 484143325,
      "id": 484923353,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDkyMzM1Mw==",
      "diff_hunk": "@@ -4064,6 +4108,11 @@ void PeerLogicValidation::CheckForStaleTipAndEvictPeers(const Consensus::Params\n         }\n         m_stale_tip_check_time = time_in_seconds + STALE_CHECK_INTERVAL;\n     }\n+\n+    if (!m_initial_sync_finished && CanDirectFetch(consensusParams)) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 93,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "in_reply_to_id": 483334138,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I was assuming someone feeding you _slowly_ the most-PoW valid chain thus never triggering the stale-tip check ? I think a broader definition of eclipse attack should include slow chain feeding as it's open the door for offchain exploitation.\r\n\r\nThat said, I think eclipse attacks during the bootstrap view of your network view are a special-case and we can address them latter with smarter heuristics based on this work.",
      "created_at": "2020-09-08T13:32:38Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r484923353",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484923353"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4116,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484942044",
      "pull_request_review_id": 484168129,
      "id": 484942044,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk0MjA0NA==",
      "diff_hunk": "@@ -1866,15 +1881,39 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         // until we hit our block-relay-only peer limit.\n         // GetTryNewOutboundPeer() gets set when a stale tip is detected, so we\n         // try opening an additional OUTBOUND_FULL_RELAY connection. If none of\n-        // these conditions are met, check the nNextFeeler timer to decide if\n-        // we should open a FEELER.\n+        // these conditions are met, check to see if it's time to try an extra\n+        // block-relay-only peer (to confirm our tip is current, see below) or the nNextFeeler\n+        // timer to decide if we should open a FEELER.\n \n         if (nOutboundFullRelay < m_max_outbound_full_relay) {\n             // OUTBOUND_FULL_RELAY\n         } else if (nOutboundBlockRelay < m_max_outbound_block_relay) {\n             conn_type = ConnectionType::BLOCK_RELAY;\n         } else if (GetTryNewOutboundPeer()) {\n             // OUTBOUND_FULL_RELAY\n+        } else if (nTime > nNextExtraBlockRelay && m_start_extra_block_relay_peers) {\n+            // Periodically connect to a peer (using regular outbound selection\n+            // methodology from addrman) and stay connected long enough to sync\n+            // headers, but not much else.\n+            //\n+            // Then disconnect the peer, if we haven't learned anything new.\n+            //\n+            // The idea is to make eclipse attacks very difficult to pull off,\n+            // because every few minutes we're finding a new peer to learn headers\n+            // from.\n+            //\n+            // This is similar to the logic for trying extra outbound (full-relay)\n+            // peers, except:\n+            // - we do this all the time on a poisson timer, rather than just when\n+            //   our tip is stale\n+            // - we potentially disconnect our next-youngest block-relay-only peer, if we\n+            //   download a new block from this new block-relay-only peer.",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 61,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "411056e3ce2c39c929917547f22b7ca62e594882",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Update comment to reflect latest changes  (411056e) on keeping the most recent block announcement?",
      "created_at": "2020-09-08T13:58:09Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r484942044",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484942044"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1944,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484943585",
      "pull_request_review_id": 484168129,
      "id": 484943585,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk0MzU4NQ==",
      "diff_hunk": "@@ -318,13 +320,20 @@ class CConnman\n     void SetTryNewOutboundPeer(bool flag);\n     bool GetTryNewOutboundPeer();\n \n+    void StartExtraBlockRelayPeers() {",
      "path": "src/net.h",
      "position": 13,
      "original_position": 13,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "411056e3ce2c39c929917547f22b7ca62e594882",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Have you considered a `MarkExtraBlockRelayPeers` function which a) set `m_start_extra_block_relay_peers` to true if isn't and b) return the state of `m_start_extra_block_relay_peers` ? That way you can drop new `m_initial_sync_finished` I think",
      "created_at": "2020-09-08T14:00:05Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r484943585",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484943585"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 335,
      "original_line": 335,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484945485",
      "pull_request_review_id": 484168129,
      "id": 484945485,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk0NTQ4NQ==",
      "diff_hunk": "@@ -3988,6 +3988,55 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, disconnect the second youngest",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "411056e3ce2c39c929917547f22b7ca62e594882",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Same, reflect changes, \"a more recent block than one provided by next-youngest\"?",
      "created_at": "2020-09-08T14:02:47Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r484945485",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484945485"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3973,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484949893",
      "pull_request_review_id": 484168129,
      "id": 484949893,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk0OTg5Mw==",
      "diff_hunk": "@@ -3988,11 +3988,56 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n+    // If we have any extra block-relay peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, disconnect the second youngest\n+    // instead (so we rotate our youngest block-relay peer).\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        // Pick the block-relay peer that we just connected, unless it gave us\n+        // a block -- in which case disconnect the next-youngest block-relay\n+        // peer.\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+        std::pair<NodeId, int64_t> second_youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {",
      "path": "src/net_processing.cpp",
      "position": 29,
      "original_position": 29,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "in_reply_to_id": 483329786,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "As alternative have you considered caching them ? We know both when we open such connections and when we drop them. It would avoid the risk of logic bug and iterating every other connections types not concerned by such eviction.\r\n\r\nI think it's more a future work direction.",
      "created_at": "2020-09-08T14:08:45Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r484949893",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484949893"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3923,
      "original_line": 3923,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484951554",
      "pull_request_review_id": 484168129,
      "id": 484951554,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk1MTU1NA==",
      "diff_hunk": "@@ -3988,6 +3988,55 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, disconnect the second youngest\n+    // instead (so we rotate our youngest block-relay-only peer).\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        // Pick the block-relay-only peer that we just connected, unless it gave us\n+        // a block -- in which case disconnect the next-youngest block-relay-only\n+        // peer. We use higher nodeid as a measure for more recent connection.\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, 0};\n+        std::pair<NodeId, int64_t> next_youngest_peer = {-1, 0};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {\n+                next_youngest_peer = youngest_peer;\n+                youngest_peer.first = pnode->GetId();\n+                youngest_peer.second = pnode->nLastBlockTime;\n+            }\n+        });\n+        NodeId to_disconnect = youngest_peer.first;\n+        if (youngest_peer.second > next_youngest_peer.second) {\n+            // Our newest block-relay-only peer gave us a block more recently;\n+            // disconnect our second youngest.\n+            to_disconnect = next_youngest_peer.first;\n+        }\n+        m_connman.ForNode(to_disconnect, [&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            // Make sure we're not getting a block right now, and that\n+            // we've been connected long enough for this eviction to happen\n+            // at all.\n+            // Note that we only request blocks from a peer if we learn of a\n+            // valid headers chain with at least as much work as our tip.",
      "path": "src/net_processing.cpp",
      "position": 47,
      "original_position": 38,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "411056e3ce2c39c929917547f22b7ca62e594882",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "\"so any in-flight block is a good hint that such peer will soon provide us with useful work\"",
      "created_at": "2020-09-08T14:11:03Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r484951554",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484951554"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3941,
      "original_line": 3941,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484952119",
      "pull_request_review_id": 484168129,
      "id": 484952119,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk1MjExOQ==",
      "diff_hunk": "@@ -94,6 +94,9 @@ class PeerLogicValidation final : public CValidationInterface, public NetEventsI\n private:\n     int64_t m_stale_tip_check_time; //!< Next time to check for stale tip\n \n+    /** Whether we've completed initial sync yet, for determining when to turn",
      "path": "src/net_processing.h",
      "position": 4,
      "original_position": 4,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "411056e3ce2c39c929917547f22b7ca62e594882",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You can mention `CanDirectFetch` as the completed-initial-sync-yet condition.",
      "created_at": "2020-09-08T14:11:51Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r484952119",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484952119"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 209,
      "original_line": 209,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484952915",
      "pull_request_review_id": 484168129,
      "id": 484952915,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk1MjkxNQ==",
      "diff_hunk": "@@ -3988,6 +3988,55 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, disconnect the second youngest\n+    // instead (so we rotate our youngest block-relay-only peer).\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.",
      "path": "src/net_processing.cpp",
      "position": 22,
      "original_position": 8,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "411056e3ce2c39c929917547f22b7ca62e594882",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "\"See ThreadOpenConnections\"",
      "created_at": "2020-09-08T14:12:53Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r484952915",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484952915"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3916,
      "original_line": 3916,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485676851",
      "pull_request_review_id": 485095570,
      "id": 485676851,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY3Njg1MQ==",
      "diff_hunk": "@@ -4064,6 +4108,11 @@ void PeerLogicValidation::CheckForStaleTipAndEvictPeers(const Consensus::Params\n         }\n         m_stale_tip_check_time = time_in_seconds + STALE_CHECK_INTERVAL;\n     }\n+\n+    if (!m_initial_sync_finished && CanDirectFetch(consensusParams)) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 93,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "in_reply_to_id": 483334138,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "We do require that our initial headers-sync peer provide us with a headers chain that looks reasonable within a bounded amount of time (on the order of 20 minutes if I remember correctly -- the time scales with the expected honest chain length and very conservative notions of how long it takes to download headers).  However if we're connecting blocks slowly, we can't distinguish between our own node being too slow to validate the entire blockchain (say due to local computing/memory/disk/network resources) or our peers colluding to collectively slow us down.\r\n\r\nThis seems like something that needs human intervention to determine that initial sync is in fact going too slowly.",
      "created_at": "2020-09-09T14:53:46Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r485676851",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485676851"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4116,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485677705",
      "pull_request_review_id": 485096650,
      "id": 485677705,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY3NzcwNQ==",
      "diff_hunk": "@@ -51,6 +51,8 @@ static const bool DEFAULT_WHITELISTFORCERELAY = false;\n static const int TIMEOUT_INTERVAL = 20 * 60;\n /** Run the feeler connection loop once every 2 minutes or 120 seconds. **/\n static const int FEELER_INTERVAL = 120;\n+/** Run the chain-sync connection loop once every 5 minutes. **/\n+static const int CHAIN_SYNC_INTERVAL = 300;",
      "path": "src/net.h",
      "position": null,
      "original_position": 5,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "013b41fc27110a288d93dde73325602526a692f5",
      "in_reply_to_id": 483441294,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If #19869 is merged first, then I'll update the code here as well when I rebase.",
      "created_at": "2020-09-09T14:54:47Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r485677705",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485677705"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485685042",
      "pull_request_review_id": 485106530,
      "id": 485685042,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY4NTA0Mg==",
      "diff_hunk": "@@ -3988,11 +3988,56 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n+    // If we have any extra block-relay peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, disconnect the second youngest\n+    // instead (so we rotate our youngest block-relay peer).\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        // Pick the block-relay peer that we just connected, unless it gave us\n+        // a block -- in which case disconnect the next-youngest block-relay\n+        // peer.\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+        std::pair<NodeId, int64_t> second_youngest_peer = {-1, std::numeric_limits<int64_t>::max()};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {",
      "path": "src/net_processing.cpp",
      "position": 29,
      "original_position": 29,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "be956cd4358c22977f60af1ece8b2eb938b8310e",
      "in_reply_to_id": 483329786,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I assume you mean caching at the time we open the connection?  I think that is problematic, because in order to keep that extra state up to date in the event that peers get disconnected and we make new connections after that, you have to a lot of additional error checking and introduced added complexity.  Doing all the checks in one place, at the point in time that we care about getting to a new/correct state when we're over our maximum, seems simpler to me to reason about.",
      "created_at": "2020-09-09T15:04:09Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r485685042",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485685042"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3923,
      "original_line": 3923,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485720385",
      "pull_request_review_id": 485152718,
      "id": 485720385,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcyMDM4NQ==",
      "diff_hunk": "@@ -1866,15 +1881,39 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         // until we hit our block-relay-only peer limit.\n         // GetTryNewOutboundPeer() gets set when a stale tip is detected, so we\n         // try opening an additional OUTBOUND_FULL_RELAY connection. If none of\n-        // these conditions are met, check the nNextFeeler timer to decide if\n-        // we should open a FEELER.\n+        // these conditions are met, check to see if it's time to try an extra\n+        // block-relay-only peer (to confirm our tip is current, see below) or the nNextFeeler\n+        // timer to decide if we should open a FEELER.\n \n         if (nOutboundFullRelay < m_max_outbound_full_relay) {\n             // OUTBOUND_FULL_RELAY\n         } else if (nOutboundBlockRelay < m_max_outbound_block_relay) {\n             conn_type = ConnectionType::BLOCK_RELAY;\n         } else if (GetTryNewOutboundPeer()) {\n             // OUTBOUND_FULL_RELAY\n+        } else if (nTime > nNextExtraBlockRelay && m_start_extra_block_relay_peers) {\n+            // Periodically connect to a peer (using regular outbound selection\n+            // methodology from addrman) and stay connected long enough to sync\n+            // headers, but not much else.\n+            //\n+            // Then disconnect the peer, if we haven't learned anything new.\n+            //\n+            // The idea is to make eclipse attacks very difficult to pull off,\n+            // because every few minutes we're finding a new peer to learn headers\n+            // from.\n+            //\n+            // This is similar to the logic for trying extra outbound (full-relay)\n+            // peers, except:\n+            // - we do this all the time on a poisson timer, rather than just when\n+            //   our tip is stale\n+            // - we potentially disconnect our next-youngest block-relay-only peer, if we\n+            //   download a new block from this new block-relay-only peer.",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 61,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "411056e3ce2c39c929917547f22b7ca62e594882",
      "in_reply_to_id": 484942044,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks! Fixed.",
      "created_at": "2020-09-09T15:52:49Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r485720385",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485720385"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1944,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485720468",
      "pull_request_review_id": 485152841,
      "id": 485720468,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcyMDQ2OA==",
      "diff_hunk": "@@ -318,13 +320,20 @@ class CConnman\n     void SetTryNewOutboundPeer(bool flag);\n     bool GetTryNewOutboundPeer();\n \n+    void StartExtraBlockRelayPeers() {",
      "path": "src/net.h",
      "position": 13,
      "original_position": 13,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "411056e3ce2c39c929917547f22b7ca62e594882",
      "in_reply_to_id": 484943585,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I had a slight preference for not frequently looking at an atomic; `m_initial_sync_finished` is only used in one thread and therefore doesn't need locks.  This issue seems minor either way, so planning to leave it as-is.",
      "created_at": "2020-09-09T15:52:57Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r485720468",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485720468"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 335,
      "original_line": 335,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485720501",
      "pull_request_review_id": 485152894,
      "id": 485720501,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcyMDUwMQ==",
      "diff_hunk": "@@ -3988,6 +3988,55 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, disconnect the second youngest",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "411056e3ce2c39c929917547f22b7ca62e594882",
      "in_reply_to_id": 484945485,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks! Fixed.",
      "created_at": "2020-09-09T15:53:01Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r485720501",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485720501"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3973,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485721066",
      "pull_request_review_id": 485153614,
      "id": 485721066,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcyMTA2Ng==",
      "diff_hunk": "@@ -3988,6 +3988,55 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, disconnect the second youngest\n+    // instead (so we rotate our youngest block-relay-only peer).\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        // Pick the block-relay-only peer that we just connected, unless it gave us\n+        // a block -- in which case disconnect the next-youngest block-relay-only\n+        // peer. We use higher nodeid as a measure for more recent connection.\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, 0};\n+        std::pair<NodeId, int64_t> next_youngest_peer = {-1, 0};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {\n+                next_youngest_peer = youngest_peer;\n+                youngest_peer.first = pnode->GetId();\n+                youngest_peer.second = pnode->nLastBlockTime;\n+            }\n+        });\n+        NodeId to_disconnect = youngest_peer.first;\n+        if (youngest_peer.second > next_youngest_peer.second) {\n+            // Our newest block-relay-only peer gave us a block more recently;\n+            // disconnect our second youngest.\n+            to_disconnect = next_youngest_peer.first;\n+        }\n+        m_connman.ForNode(to_disconnect, [&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            // Make sure we're not getting a block right now, and that\n+            // we've been connected long enough for this eviction to happen\n+            // at all.\n+            // Note that we only request blocks from a peer if we learn of a\n+            // valid headers chain with at least as much work as our tip.",
      "path": "src/net_processing.cpp",
      "position": 47,
      "original_position": 38,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "411056e3ce2c39c929917547f22b7ca62e594882",
      "in_reply_to_id": 484951554,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This seems self-evident!  Leaving as-is.",
      "created_at": "2020-09-09T15:53:51Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r485721066",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485721066"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3941,
      "original_line": 3941,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485721653",
      "pull_request_review_id": 485154610,
      "id": 485721653,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcyMTY1Mw==",
      "diff_hunk": "@@ -94,6 +94,9 @@ class PeerLogicValidation final : public CValidationInterface, public NetEventsI\n private:\n     int64_t m_stale_tip_check_time; //!< Next time to check for stale tip\n \n+    /** Whether we've completed initial sync yet, for determining when to turn",
      "path": "src/net_processing.h",
      "position": 4,
      "original_position": 4,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "411056e3ce2c39c929917547f22b7ca62e594882",
      "in_reply_to_id": 484952119,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't think that's necessary here.",
      "created_at": "2020-09-09T15:54:39Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r485721653",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485721653"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 209,
      "original_line": 209,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485721742",
      "pull_request_review_id": 485155007,
      "id": 485721742,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTcyMTc0Mg==",
      "diff_hunk": "@@ -3988,6 +3988,55 @@ void PeerLogicValidation::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerLogicValidation::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, disconnect the second youngest\n+    // instead (so we rotate our youngest block-relay-only peer).\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.",
      "path": "src/net_processing.cpp",
      "position": 22,
      "original_position": 8,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "411056e3ce2c39c929917547f22b7ca62e594882",
      "in_reply_to_id": 484952915,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think this is fine as-is.",
      "created_at": "2020-09-09T15:54:48Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r485721742",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485721742"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3916,
      "original_line": 3916,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499257992",
      "pull_request_review_id": 501633440,
      "id": 499257992,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI1Nzk5Mg==",
      "diff_hunk": "@@ -3969,11 +3969,58 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.\n+    // Note that we use higher nodeid as a measure for most recent connection.\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, 0};\n+        std::pair<NodeId, int64_t> next_youngest_peer = {-1, 0};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "8ea760b10221eb01b057363693ab74cdc810fd4a",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The two lock assertions added in this function need to be updated to build on current master:\r\n```diff\r\n@@ -3964,8 +3964,8 @@ void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\r\n         std::pair<NodeId, int64_t> youngest_peer = {-1, 0};\r\n         std::pair<NodeId, int64_t> next_youngest_peer = {-1, 0};\r\n \r\n-        m_connman.ForEachNode([&](CNode* pnode) {\r\n-            LockAssertion lock(::cs_main);\r\n+        m_connman.ForEachNode([&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\r\n+            AssertLockHeld(::cs_main);\r\n             if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\r\n@@ -3979,8 +3979,8 @@ void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\r\n             // disconnect our second youngest.\r\n             to_disconnect = next_youngest_peer.first;\r\n         }\r\n-        m_connman.ForNode(to_disconnect, [&](CNode* pnode) {\r\n-            LockAssertion lock(::cs_main);\r\n+        m_connman.ForNode(to_disconnect, [&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\r\n+            AssertLockHeld(::cs_main);\r\n             // Make sure we're not getting a ```",
      "created_at": "2020-10-04T15:23:25Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r499257992",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499257992"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3984,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499258411",
      "pull_request_review_id": 501633780,
      "id": 499258411,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTI1ODQxMQ==",
      "diff_hunk": "@@ -3969,11 +3969,58 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.\n+    // Note that we use higher nodeid as a measure for most recent connection.\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, 0};\n+        std::pair<NodeId, int64_t> next_youngest_peer = {-1, 0};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "8ea760b10221eb01b057363693ab74cdc810fd4a",
      "in_reply_to_id": 499257992,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "(see #19979)",
      "created_at": "2020-10-04T15:27:33Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r499258411",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499258411"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3984,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499441781",
      "pull_request_review_id": 501847787,
      "id": 499441781,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ0MTc4MQ==",
      "diff_hunk": "@@ -3969,11 +3969,58 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.\n+    // Note that we use higher nodeid as a measure for most recent connection.\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, 0};\n+        std::pair<NodeId, int64_t> next_youngest_peer = {-1, 0};",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "8ea760b10221eb01b057363693ab74cdc810fd4a",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "perhaps\r\n```diff\r\n     // Note that we use higher nodeid as a measure for most recent connection.\r\n-    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\r\n-    if (extra_block_relay_peers > 0) {\r\n-        std::pair<NodeId, int64_t> youngest_peer = {-1, 0};\r\n-        std::pair<NodeId, int64_t> next_youngest_peer = {-1, 0};\r\n+    if (m_connman.GetExtraBlockRelayCount() > 0) {\r\n+        std::pair<NodeId, int64_t> youngest_peer{-1, 0}, next_youngest_peer{-1, 0};\r\n```\r\n",
      "created_at": "2020-10-05T08:54:49Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r499441781",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499441781"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3964,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499443704",
      "pull_request_review_id": 501847787,
      "id": 499443704,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ0MzcwNA==",
      "diff_hunk": "@@ -3969,11 +3969,58 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.\n+    // Note that we use higher nodeid as a measure for most recent connection.\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, 0};\n+        std::pair<NodeId, int64_t> next_youngest_peer = {-1, 0};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {\n+                next_youngest_peer = youngest_peer;\n+                youngest_peer.first = pnode->GetId();\n+                youngest_peer.second = pnode->nLastBlockTime;\n+            }\n+        });\n+        NodeId to_disconnect = youngest_peer.first;\n+        if (youngest_peer.second > next_youngest_peer.second) {\n+            // Our newest block-relay-only peer gave us a block more recently;\n+            // disconnect our second youngest.\n+            to_disconnect = next_youngest_peer.first;\n+        }\n+        m_connman.ForNode(to_disconnect, [&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            // Make sure we're not getting a block right now, and that\n+            // we've been connected long enough for this eviction to happen\n+            // at all.\n+            // Note that we only request blocks from a peer if we learn of a\n+            // valid headers chain with at least as much work as our tip.\n+            CNodeState *node_state = State(pnode->GetId());\n+            if (node_state == nullptr ||\n+                (time_in_seconds - pnode->nTimeConnected >= MINIMUM_CONNECT_TIME && node_state->nBlocksInFlight == 0)) {\n+                pnode->fDisconnect = true;\n+                LogPrint(BCLog::NET, \"disconnecting extra block-relay-only peer=%d (last block received at time %d)\\n\", pnode->GetId(), pnode->nLastBlockTime);\n+                return true;\n+            } else {\n+                LogPrint(BCLog::NET, \"keeping block-relay-only peer=%d chosen for eviction (connect time: %d, blocks_in_flight: %d)\\n\",\n+                    pnode->GetId(), pnode->nTimeConnected, node_state->nBlocksInFlight);\n+            }\n+            return false;\n+        });\n+    }\n+\n+    // Check whether we have too many OUTBOUND_FULL_RELAY peers\n+    int extra_peers = m_connman.GetExtraFullOutboundCount();\n     if (extra_peers > 0) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 64,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "8ea760b10221eb01b057363693ab74cdc810fd4a",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "perhaps, as `extra_peers` isn't reused\r\n```diff\r\n-    int extra_peers = m_connman.GetExtraFullOutboundCount();\r\n-    if (extra_peers > 0) {\r\n+    if (m_connman.GetExtraFullOutboundCount() > 0) {\r\n```\r\n",
      "created_at": "2020-10-05T08:57:46Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r499443704",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499443704"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4021,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499445435",
      "pull_request_review_id": 501847787,
      "id": 499445435,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ0NTQzNQ==",
      "diff_hunk": "@@ -3969,11 +3969,58 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)",
      "path": "src/net_processing.cpp",
      "position": 11,
      "original_position": 11,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "8ea760b10221eb01b057363693ab74cdc810fd4a",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`EvictExtraOutboundPeers()` seems like a natural candidate to be separated into two functions,`EvictExtraOutboundBlockRelayPeers()` and `EvictExtraOutboundFullRelayPeers()`. This might enable better unit testing of the logic. If you agree, it may be easier to do this now than later.",
      "created_at": "2020-10-05T09:00:41Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r499445435",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499445435"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3910,
      "original_line": 3910,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499769823",
      "pull_request_review_id": 502285383,
      "id": 499769823,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc2OTgyMw==",
      "diff_hunk": "@@ -3969,11 +3969,58 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.\n+    // Note that we use higher nodeid as a measure for most recent connection.\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, 0};\n+        std::pair<NodeId, int64_t> next_youngest_peer = {-1, 0};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "8ea760b10221eb01b057363693ab74cdc810fd4a",
      "in_reply_to_id": 499257992,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, updated.",
      "created_at": "2020-10-05T17:49:27Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r499769823",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499769823"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3984,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499785328",
      "pull_request_review_id": 502306322,
      "id": 499785328,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc4NTMyOA==",
      "diff_hunk": "@@ -3969,11 +3969,58 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.\n+    // Note that we use higher nodeid as a measure for most recent connection.\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, 0};\n+        std::pair<NodeId, int64_t> next_youngest_peer = {-1, 0};",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "8ea760b10221eb01b057363693ab74cdc810fd4a",
      "in_reply_to_id": 499441781,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2020-10-05T18:18:14Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r499785328",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499785328"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3964,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499785441",
      "pull_request_review_id": 502306462,
      "id": 499785441,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc4NTQ0MQ==",
      "diff_hunk": "@@ -3969,11 +3969,58 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.\n+    // Note that we use higher nodeid as a measure for most recent connection.\n+    int extra_block_relay_peers = m_connman.GetExtraBlockRelayCount();\n+    if (extra_block_relay_peers > 0) {\n+        std::pair<NodeId, int64_t> youngest_peer = {-1, 0};\n+        std::pair<NodeId, int64_t> next_youngest_peer = {-1, 0};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {\n+                next_youngest_peer = youngest_peer;\n+                youngest_peer.first = pnode->GetId();\n+                youngest_peer.second = pnode->nLastBlockTime;\n+            }\n+        });\n+        NodeId to_disconnect = youngest_peer.first;\n+        if (youngest_peer.second > next_youngest_peer.second) {\n+            // Our newest block-relay-only peer gave us a block more recently;\n+            // disconnect our second youngest.\n+            to_disconnect = next_youngest_peer.first;\n+        }\n+        m_connman.ForNode(to_disconnect, [&](CNode* pnode) {\n+            LockAssertion lock(::cs_main);\n+            // Make sure we're not getting a block right now, and that\n+            // we've been connected long enough for this eviction to happen\n+            // at all.\n+            // Note that we only request blocks from a peer if we learn of a\n+            // valid headers chain with at least as much work as our tip.\n+            CNodeState *node_state = State(pnode->GetId());\n+            if (node_state == nullptr ||\n+                (time_in_seconds - pnode->nTimeConnected >= MINIMUM_CONNECT_TIME && node_state->nBlocksInFlight == 0)) {\n+                pnode->fDisconnect = true;\n+                LogPrint(BCLog::NET, \"disconnecting extra block-relay-only peer=%d (last block received at time %d)\\n\", pnode->GetId(), pnode->nLastBlockTime);\n+                return true;\n+            } else {\n+                LogPrint(BCLog::NET, \"keeping block-relay-only peer=%d chosen for eviction (connect time: %d, blocks_in_flight: %d)\\n\",\n+                    pnode->GetId(), pnode->nTimeConnected, node_state->nBlocksInFlight);\n+            }\n+            return false;\n+        });\n+    }\n+\n+    // Check whether we have too many OUTBOUND_FULL_RELAY peers\n+    int extra_peers = m_connman.GetExtraFullOutboundCount();\n     if (extra_peers > 0) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 64,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "8ea760b10221eb01b057363693ab74cdc810fd4a",
      "in_reply_to_id": 499443704,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2020-10-05T18:18:27Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r499785441",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499785441"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4021,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499788853",
      "pull_request_review_id": 502310951,
      "id": 499788853,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc4ODg1Mw==",
      "diff_hunk": "@@ -3969,11 +3969,58 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)",
      "path": "src/net_processing.cpp",
      "position": 11,
      "original_position": 11,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "8ea760b10221eb01b057363693ab74cdc810fd4a",
      "in_reply_to_id": 499445435,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Well, there's also an argument to be made that it's simpler to have all of the outbound peer eviction logic in one place/one callback.\r\n\r\nIf there is a reason (like testing) to do so, I think splitting this up in the future could make sense, but for now I'd like to keep the changes here to be more straightforward.  So assuming this implementation is correct I'd prefer to leave it as-is.",
      "created_at": "2020-10-05T18:24:54Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r499788853",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499788853"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3910,
      "original_line": 3910,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/517715632",
      "pull_request_review_id": 523838338,
      "id": 517715632,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzcxNTYzMg==",
      "diff_hunk": "@@ -3953,9 +3953,53 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.\n+    // Note that we use higher nodeid as a measure for most recent connection.\n+    if (m_connman.GetExtraBlockRelayCount() > 0) {\n+        std::pair<NodeId, int64_t> youngest_peer{-1, 0}, next_youngest_peer{-1, 0};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+            AssertLockHeld(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {\n+                next_youngest_peer = youngest_peer;\n+                youngest_peer.first = pnode->GetId();\n+                youngest_peer.second = pnode->nLastBlockTime;\n+            }\n+        });\n+        NodeId to_disconnect = youngest_peer.first;\n+        if (youngest_peer.second > next_youngest_peer.second) {\n+            // Our newest block-relay-only peer gave us a block more recently;\n+            // disconnect our second youngest.\n+            to_disconnect = next_youngest_peer.first;\n+        }\n+        m_connman.ForNode(to_disconnect, [&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+            AssertLockHeld(::cs_main);\n+            // Make sure we're not getting a block right now, and that\n+            // we've been connected long enough for this eviction to happen\n+            // at all.\n+            // Note that we only request blocks from a peer if we learn of a\n+            // valid headers chain with at least as much work as our tip.\n+            CNodeState *node_state = State(pnode->GetId());\n+            if (node_state == nullptr ||",
      "path": "src/net_processing.cpp",
      "position": 49,
      "original_position": 36,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "daf74979d741c9ccca68145f65f4ba6e0ee899b0",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is it possible to hit `node_state == nullptr` here? If not, I'd rather assert it.",
      "created_at": "2020-11-05T00:45:01Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r517715632",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/517715632"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3943,
      "original_line": 3943,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/518648674",
      "pull_request_review_id": 525015009,
      "id": 518648674,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY0ODY3NA==",
      "diff_hunk": "@@ -3953,11 +3953,55 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n-    if (extra_peers > 0) {\n-        // If we have more outbound peers than we target, disconnect one.\n-        // Pick the outbound peer that least recently announced\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.\n+    // Note that we use higher nodeid as a measure for most recent connection.\n+    if (m_connman.GetExtraBlockRelayCount() > 0) {\n+        std::pair<NodeId, int64_t> youngest_peer{-1, 0}, next_youngest_peer{-1, 0};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+            AssertLockHeld(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {\n+                next_youngest_peer = youngest_peer;\n+                youngest_peer.first = pnode->GetId();\n+                youngest_peer.second = pnode->nLastBlockTime;\n+            }\n+        });\n+        NodeId to_disconnect = youngest_peer.first;\n+        if (youngest_peer.second > next_youngest_peer.second) {\n+            // Our newest block-relay-only peer gave us a block more recently;\n+            // disconnect our second youngest.\n+            to_disconnect = next_youngest_peer.first;\n+        }\n+        m_connman.ForNode(to_disconnect, [&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+            AssertLockHeld(::cs_main);\n+            // Make sure we're not getting a block right now, and that\n+            // we've been connected long enough for this eviction to happen\n+            // at all.\n+            // Note that we only request blocks from a peer if we learn of a\n+            // valid headers chain with at least as much work as our tip.\n+            CNodeState *node_state = State(pnode->GetId());\n+            if (node_state == nullptr ||\n+                (time_in_seconds - pnode->nTimeConnected >= MINIMUM_CONNECT_TIME && node_state->nBlocksInFlight == 0)) {\n+                pnode->fDisconnect = true;\n+                LogPrint(BCLog::NET, \"disconnecting extra block-relay-only peer=%d (last block received at time %d)\\n\", pnode->GetId(), pnode->nLastBlockTime);\n+                return true;\n+            } else {\n+                LogPrint(BCLog::NET, \"keeping block-relay-only peer=%d chosen for eviction (connect time: %d, blocks_in_flight: %d)\\n\",\n+                    pnode->GetId(), pnode->nTimeConnected, node_state->nBlocksInFlight);\n+            }\n+            return false;",
      "path": "src/net_processing.cpp",
      "position": 58,
      "original_position": 59,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "93a0ec1a629af533bb21418a3e134c268bc57395",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "daf74979 nit suggestion (or the inverse change), for symmetry with the extra full outbound code in the same function\r\n```diff\r\n             } else {\r\n                 LogPrint(BCLog::NET, \"keeping block-relay-only peer=%d chosen for eviction (connect time: %d, blocks_in_flight: %d)\\n\",\r\n                     pnode->GetId(), pnode->nTimeConnected, node_state->nBlocksInFlight);\r\n+                return false;\r\n             }\r\n-            return false;\r\n         });\r\n```\r\n",
      "created_at": "2020-11-06T10:08:09Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r518648674",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/518648674"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3952,
      "original_line": 3952,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/518656458",
      "pull_request_review_id": 525015009,
      "id": 518656458,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY1NjQ1OA==",
      "diff_hunk": "@@ -3953,11 +3953,55 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n-    if (extra_peers > 0) {\n-        // If we have more outbound peers than we target, disconnect one.\n-        // Pick the outbound peer that least recently announced\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.\n+    // Note that we use higher nodeid as a measure for most recent connection.\n+    if (m_connman.GetExtraBlockRelayCount() > 0) {\n+        std::pair<NodeId, int64_t> youngest_peer{-1, 0}, next_youngest_peer{-1, 0};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+            AssertLockHeld(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {\n+                next_youngest_peer = youngest_peer;\n+                youngest_peer.first = pnode->GetId();\n+                youngest_peer.second = pnode->nLastBlockTime;\n+            }\n+        });\n+        NodeId to_disconnect = youngest_peer.first;\n+        if (youngest_peer.second > next_youngest_peer.second) {\n+            // Our newest block-relay-only peer gave us a block more recently;\n+            // disconnect our second youngest.\n+            to_disconnect = next_youngest_peer.first;\n+        }\n+        m_connman.ForNode(to_disconnect, [&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+            AssertLockHeld(::cs_main);\n+            // Make sure we're not getting a block right now, and that\n+            // we've been connected long enough for this eviction to happen\n+            // at all.\n+            // Note that we only request blocks from a peer if we learn of a\n+            // valid headers chain with at least as much work as our tip.\n+            CNodeState *node_state = State(pnode->GetId());\n+            if (node_state == nullptr ||\n+                (time_in_seconds - pnode->nTimeConnected >= MINIMUM_CONNECT_TIME && node_state->nBlocksInFlight == 0)) {\n+                pnode->fDisconnect = true;\n+                LogPrint(BCLog::NET, \"disconnecting extra block-relay-only peer=%d (last block received at time %d)\\n\", pnode->GetId(), pnode->nLastBlockTime);",
      "path": "src/net_processing.cpp",
      "position": 52,
      "original_position": 53,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "93a0ec1a629af533bb21418a3e134c268bc57395",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "daf74979 In my testing, this logging nearly always returned \"(last block received at time 0)\"; perhaps for this common case the logging could return \"(no block received)\" or similar.",
      "created_at": "2020-11-06T10:22:41Z",
      "updated_at": "2020-12-10T15:20:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r518656458",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/518656458"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3946,
      "original_line": 3946,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520596989",
      "pull_request_review_id": 527248010,
      "id": 520596989,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDU5Njk4OQ==",
      "diff_hunk": "@@ -3953,9 +3953,53 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.\n+    // Note that we use higher nodeid as a measure for most recent connection.\n+    if (m_connman.GetExtraBlockRelayCount() > 0) {\n+        std::pair<NodeId, int64_t> youngest_peer{-1, 0}, next_youngest_peer{-1, 0};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+            AssertLockHeld(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {\n+                next_youngest_peer = youngest_peer;\n+                youngest_peer.first = pnode->GetId();\n+                youngest_peer.second = pnode->nLastBlockTime;\n+            }\n+        });\n+        NodeId to_disconnect = youngest_peer.first;\n+        if (youngest_peer.second > next_youngest_peer.second) {\n+            // Our newest block-relay-only peer gave us a block more recently;\n+            // disconnect our second youngest.\n+            to_disconnect = next_youngest_peer.first;\n+        }\n+        m_connman.ForNode(to_disconnect, [&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+            AssertLockHeld(::cs_main);\n+            // Make sure we're not getting a block right now, and that\n+            // we've been connected long enough for this eviction to happen\n+            // at all.\n+            // Note that we only request blocks from a peer if we learn of a\n+            // valid headers chain with at least as much work as our tip.\n+            CNodeState *node_state = State(pnode->GetId());\n+            if (node_state == nullptr ||",
      "path": "src/net_processing.cpp",
      "position": 49,
      "original_position": 36,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "daf74979d741c9ccca68145f65f4ba6e0ee899b0",
      "in_reply_to_id": 517715632,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It shouldn't be possible (as far as I understand), but this pattern of checking for nullptr seems to be present throughout the code (and we seem to have merged recent commits that add nullptr checks in analogous places, eg fc66d0a65cdc52a3b259effe0c29b5eafb1b5ff5). \r\n\r\nIn this particular place in our code, nullptr should be handled just fine if it were to somehow occur (all we'd do is mark the CNode for disconnection, which seems safe and correct), so I don't think crashing is required in this situation.  (Though likely there are other places in our code where we do assert(), so probably we'd crash anyway somewhere else...)",
      "created_at": "2020-11-10T14:19:37Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r520596989",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520596989"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3943,
      "original_line": 3943,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528321515",
      "pull_request_review_id": 536052508,
      "id": 528321515,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODMyMTUxNQ==",
      "diff_hunk": "@@ -1820,18 +1820,32 @@ void CConnman::SetTryNewOutboundPeer(bool flag)\n // Also exclude peers that haven't finished initial connection handshake yet\n // (so that we don't decide we're over our desired connection limit, and then\n // evict some peer that has finished the handshake)\n-int CConnman::GetExtraOutboundCount()\n+int CConnman::GetExtraFullOutboundCount()",
      "path": "src/net.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "93a0ec1a629af533bb21418a3e134c268bc57395",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Since you're cleaning this up and adding another very similar function below, consider factoring out those loops and using a more functional style:\r\n\r\n```diff\r\ndiff --git a/src/net.cpp b/src/net.cpp\r\nindex 48977aeadf..8456af01c5 100644\r\n--- a/src/net.cpp\r\n+++ b/src/net.cpp\r\n@@ -1822,30 +1822,14 @@ void CConnman::SetTryNewOutboundPeer(bool flag)\r\n // evict some peer that has finished the handshake)\r\n int CConnman::GetExtraFullOutboundCount()\r\n {\r\n-    int full_outbound_peers = 0;\r\n-    {\r\n-        LOCK(cs_vNodes);\r\n-        for (const CNode* pnode : vNodes) {\r\n-            if (pnode->fSuccessfullyConnected && !pnode->fDisconnect && pnode->IsFullOutboundConn()) {\r\n-                ++full_outbound_peers;\r\n-            }\r\n-        }\r\n-    }\r\n-    return std::max(full_outbound_peers - m_max_outbound_full_relay, 0);\r\n+    int count{CountNodesIf([](CNode* node) {return node->IsFullOutboundConn();})};\r\n+    return std::max(count - m_max_outbound_full_relay, 0);\r\n }\r\n \r\n int CConnman::GetExtraBlockRelayCount()\r\n {\r\n-    int block_relay_peers = 0;\r\n-    {\r\n-        LOCK(cs_vNodes);\r\n-        for (const CNode* pnode : vNodes) {\r\n-            if (pnode->fSuccessfullyConnected && !pnode->fDisconnect && pnode->IsBlockOnlyConn()) {\r\n-                ++block_relay_peers;\r\n-            }\r\n-        }\r\n-    }\r\n-    return std::max(block_relay_peers - m_max_outbound_block_relay, 0);\r\n+    int count{CountNodesIf([](CNode* node) {return node->IsBlockOnlyConn();})};\r\n+    return std::max(count - m_max_outbound_block_relay, 0);\r\n }\r\n \r\n void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\r\ndiff --git a/src/net.h b/src/net.h\r\nindex 58a5b36918..5c8014ace5 100644\r\n--- a/src/net.h\r\n+++ b/src/net.h\r\n@@ -299,6 +299,15 @@ public:\r\n         }\r\n     };\r\n \r\n+    using NodePred = std::function<bool(CNode*)>;\r\n+    /** Returns a count of how many fully connected peers satisfy a given predicate. */\r\n+    int CountNodesIf(const NodePred& pred) const\r\n+    {\r\n+        int count{0};\r\n+        ForEachNode([&count, &pred](CNode* node) {if (pred(node)) ++count;});\r\n+        return count;\r\n+    };\r\n+\r\n     template<typename Callable, typename CallableAfter>\r\n     void ForEachNodeThen(Callable&& pre, CallableAfter&& post)\r\n     {\r\n```\r\n\r\nI think that style is more compact, expressive, and less bug-prone than hand writing for loops.",
      "created_at": "2020-11-22T11:29:35Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r528321515",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528321515"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1830,
      "original_line": 1830,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528322920",
      "pull_request_review_id": 536052508,
      "id": 528322920,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODMyMjkyMA==",
      "diff_hunk": "@@ -2557,7 +2557,7 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n             LogPrintf(\"New outbound peer connected: version: %d, blocks=%d, peer=%d%s (%s)\\n\",\n                       pfrom.nVersion.load(), pfrom.nStartingHeight,\n                       pfrom.GetId(), (fLogIPs ? strprintf(\", peeraddr=%s\", pfrom.addr.ToString()) : \"\"),\n-                      pfrom.m_tx_relay == nullptr ? \"block-relay\" : \"full-relay\");\n+                      pfrom.IsBlockOnlyConn() ? \"block-relay\" : \"full-relay\");",
      "path": "src/net_processing.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "93a0ec1a629af533bb21418a3e134c268bc57395",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I agree with @naumenkogs review comment https://github.com/bitcoin/bitcoin/pull/19858#issuecomment-685440307 about changing the remaining places where `m_tx_relay == nullptr` is used as a proxy for `IsBlockOnlyConn()` to use `IsBlockOnlyConn()`. There's already a commit in this branch for _Use conn_type to identify block-relay peers, rather than m_tx_relay == nullptr_, so I don't see why we wouldn't fix them all up at the same time.\r\n\r\nUsing `m_tx_relay == nullptr` is more indirect and confusing for reviewers. See for example https://github.com/bitcoin/bitcoin/pull/20217#issuecomment-728275457:\r\n\r\n> I think I'm confused because the check for block-relay-only connections in the code is sometimes to see if m_tx_relay exists, which is non-intuitive because block-relay-only also implies that addrs are not gossiped with this peer either, not just transactions, and sometimes to call IsBlockOnlyConn().",
      "created_at": "2020-11-22T11:41:36Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r528322920",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528322920"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2469,
      "original_line": 2469,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528325663",
      "pull_request_review_id": 536052508,
      "id": 528325663,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODMyNTY2Mw==",
      "diff_hunk": "@@ -135,6 +135,10 @@ class PeerManager final : public CValidationInterface, public NetEventsInterface\n     CTxMemPool& m_mempool;\n \n     int64_t m_stale_tip_check_time; //!< Next time to check for stale tip\n+\n+    /** Whether we've completed initial sync yet, for determining when to turn\n+      * on extra block-relay-only peers. */\n+    bool m_initial_sync_finished{false};",
      "path": "src/net_processing.h",
      "position": 6,
      "original_position": 7,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "93a0ec1a629af533bb21418a3e134c268bc57395",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This variable name is very confusing. It's a different concept from `IsInitialBlockDownload()` but very similarly named. `IsInitialBlockDownload()` returns whether we've ever had a block at our tip that is within 24 hours of current time. This returns whether we've ever had a block at our tip that is within 200 minutes of current time.\r\n\r\nThe variable also isn't needed. We can just make `StartExtraBlockRelayPeers()` idempotent and always call it:\r\n\r\n```diff\r\ndiff --git a/src/net.h b/src/net.h\r\nindex 58a5b36918..2c6221391c 100644\r\n--- a/src/net.h\r\n+++ b/src/net.h\r\n@@ -340,8 +340,9 @@ public:\r\n     bool GetTryNewOutboundPeer();\r\n \r\n     void StartExtraBlockRelayPeers() {\r\n+        if (m_start_extra_block_relay_peers.load()) return;\r\n         LogPrint(BCLog::NET, \"net: enabling extra block-relay-only peers\\n\");\r\n-        m_start_extra_block_relay_peers = true;\r\n+        m_start_extra_block_relay_peers.store(true);\r\n     }\r\n \r\n     // Return the number of outbound peers we have in excess of our target (eg,\r\n```",
      "created_at": "2020-11-22T12:05:01Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r528325663",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528325663"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 211,
      "original_line": 211,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528330907",
      "pull_request_review_id": 536052508,
      "id": 528330907,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODMzMDkwNw==",
      "diff_hunk": "@@ -94,6 +94,9 @@ class PeerLogicValidation final : public CValidationInterface, public NetEventsI\n private:\n     int64_t m_stale_tip_check_time; //!< Next time to check for stale tip\n \n+    /** Whether we've completed initial sync yet, for determining when to turn\n+      * on extra block-relay peers. */\n+    bool m_initial_sync_finished{false};",
      "path": "src/net_processing.h",
      "position": 6,
      "original_position": 6,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "013b41fc27110a288d93dde73325602526a692f5",
      "in_reply_to_id": 483444542,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> if you close your laptop or disconnect from the network though then yes you're right that we'll use these occasional peers to help us catch up, which is not the intent.\r\n\r\nIf this is the intent (to stop making these short-lived connections if we've fallen behind the tip), then I think we can achieve that fairly easily by removing this caching variable, making `CanDirectFetch()` a public method on `PeerManager` and calling that function whenever we need to test if we should make an additional block-relay-only connection:\r\n\r\n```diff\r\ndiff --git a/src/net.cpp b/src/net.cpp\r\nindex 48977aeadf..1de1bda9a8 100644\r\n--- a/src/net.cpp\r\n+++ b/src/net.cpp\r\n@@ -1957,7 +1957,7 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\r\n             conn_type = ConnectionType::BLOCK_RELAY;\r\n         } else if (GetTryNewOutboundPeer()) {\r\n             // OUTBOUND_FULL_RELAY\r\n-        } else if (nTime > nNextExtraBlockRelay && m_start_extra_block_relay_peers) {\r\n+        } else if (nTime > nNextExtraBlockRelay && m_msgproc->CanDirectFetch()) {\r\n             // Periodically connect to a peer (using regular outbound selection\r\n             // methodology from addrman) and stay connected long enough to sync\r\n             // headers, but not much else.\r\ndiff --git a/src/net.h b/src/net.h\r\nindex 58a5b36918..c836161f83 100644\r\n--- a/src/net.h\r\n+++ b/src/net.h\r\n@@ -635,6 +635,7 @@ public:\r\n     virtual bool SendMessages(CNode* pnode) = 0;\r\n     virtual void InitializeNode(CNode* pnode) = 0;\r\n     virtual void FinalizeNode(NodeId id, bool& update_connection_time) = 0;\r\n+    virtual bool CanDirectFetch() const = 0;\r\n \r\n protected:\r\n     /**\r\ndiff --git a/src/net_processing.cpp b/src/net_processing.cpp\r\nindex ad40d67a97..ef47d00e73 100644\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -883,6 +883,11 @@ void RequestTx(CNodeState* state, const GenTxid& gtxid, std::chrono::microsecond\r\n \r\n } // namespace\r\n \r\n+bool PeerManager::CanDirectFetch() const\r\n+{\r\n+    return ::CanDirectFetch(m_chainparams.GetConsensus());\r\n+}\r\n+\r\n // This function is used for testing the stale tip eviction logic, see\r\n // denialofservice_tests.cpp\r\n void UpdateLastBlockAnnounceTime(NodeId node, int64_t time_in_seconds)\r\n@@ -1956,7 +1961,7 @@ void PeerManager::ProcessHeadersMessage(CNode& pfrom, const std::vector<CBlockHe\r\n             m_connman.PushMessage(&pfrom, msgMaker.Make(NetMsgType::GETHEADERS, ::ChainActive().GetLocator(pindexLast), uint256()));\r\n         }\r\n \r\n-        bool fCanDirectFetch = CanDirectFetch(m_chainparams.GetConsensus());\r\n+        bool fCanDirectFetch = CanDirectFetch();\r\n         // If this set of headers is valid and ends in a block with at least as\r\n         // much work as our tip, download as much as possible.\r\n         if (fCanDirectFetch && pindexLast->IsValid(BLOCK_VALID_TREE) && ::ChainActive().Tip()->nChainWork <= pindexLast->nChainWork) {\r\n@@ -3261,7 +3266,7 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\r\n         }\r\n \r\n         // If we're not close to tip yet, give up and let parallel block fetch work its magic\r\n-        if (!fAlreadyInFlight && !CanDirectFetch(m_chainparams.GetConsensus()))\r\n+        if (!fAlreadyInFlight && !CanDirectFetch())\r\n             return;\r\n \r\n         if (IsWitnessEnabled(pindex->pprev, m_chainparams.GetConsensus()) && !nodestate->fSupportsDesiredCmpctVersion) {\r\n@@ -4073,7 +4078,7 @@ void PeerManager::CheckForStaleTipAndEvictPeers()\r\n         m_stale_tip_check_time = time_in_seconds + STALE_CHECK_INTERVAL;\r\n     }\r\n \r\n-    if (!m_initial_sync_finished && CanDirectFetch(m_chainparams.GetConsensus())) {\r\n+    if (!m_initial_sync_finished && CanDirectFetch()) {\r\n         m_connman.StartExtraBlockRelayPeers();\r\n         m_initial_sync_finished = true;\r\n     }\r\ndiff --git a/src/net_processing.h b/src/net_processing.h\r\nindex 6e3e032831..88bf7ff2a6 100644\r\n--- a/src/net_processing.h\r\n+++ b/src/net_processing.h\r\n@@ -93,6 +93,11 @@ public:\r\n      */\r\n     void Misbehaving(const NodeId pnode, const int howmuch, const std::string& message);\r\n \r\n+    /**\r\n+     * Return whether our tip block's time is close enough to current time that we can directly fetch.\r\n+     */\r\n+    bool CanDirectFetch() const;\r\n+\r\n private:\r\n     /**\r\n      * Potentially mark a node discouraged based on the contents of a BlockValidationState object\r\n```\r\n\r\nThat approach may be preferable for a couple of reasons:\r\n\r\n- Placing the logic that checks/sets the condition under which we'll make additional block-relay-only peers in the same place that it makes those connections makes it much easier to reason about those state transitions. Currently `m_start_extra_block_relay_peers` is set based on a loop in net_processing and then read on a timer in net.\r\n- Caching the state internally makes it more difficult to test all the code paths. If the start_extra_block_relay_peers condition is set by a call into PeerManager, then that interface can be mocked and code paths can be hit more easily in unit/fuzz testing.",
      "created_at": "2020-11-22T12:48:11Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r528330907",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528330907"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 211,
      "original_line": 211,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528331824",
      "pull_request_review_id": 536052508,
      "id": 528331824,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODMzMTgyNA==",
      "diff_hunk": "@@ -3953,11 +3953,55 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n-    if (extra_peers > 0) {\n-        // If we have more outbound peers than we target, disconnect one.\n-        // Pick the outbound peer that least recently announced\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.\n+    // Note that we use higher nodeid as a measure for most recent connection.\n+    if (m_connman.GetExtraBlockRelayCount() > 0) {\n+        std::pair<NodeId, int64_t> youngest_peer{-1, 0}, next_youngest_peer{-1, 0};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+            AssertLockHeld(::cs_main);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 28,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "93a0ec1a629af533bb21418a3e134c268bc57395",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't think `cs_main` is needed for this lambda. Unless I've missed something, we're not accessing anything in here that is guarded by cs_main.",
      "created_at": "2020-11-22T12:55:50Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r528331824",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528331824"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": 3965,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 3966,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528334380",
      "pull_request_review_id": 536052508,
      "id": 528334380,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODMzNDM4MA==",
      "diff_hunk": "@@ -3953,9 +3953,53 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.\n+    // Note that we use higher nodeid as a measure for most recent connection.\n+    if (m_connman.GetExtraBlockRelayCount() > 0) {\n+        std::pair<NodeId, int64_t> youngest_peer{-1, 0}, next_youngest_peer{-1, 0};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+            AssertLockHeld(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {\n+                next_youngest_peer = youngest_peer;\n+                youngest_peer.first = pnode->GetId();\n+                youngest_peer.second = pnode->nLastBlockTime;\n+            }\n+        });\n+        NodeId to_disconnect = youngest_peer.first;\n+        if (youngest_peer.second > next_youngest_peer.second) {\n+            // Our newest block-relay-only peer gave us a block more recently;\n+            // disconnect our second youngest.\n+            to_disconnect = next_youngest_peer.first;\n+        }\n+        m_connman.ForNode(to_disconnect, [&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+            AssertLockHeld(::cs_main);\n+            // Make sure we're not getting a block right now, and that\n+            // we've been connected long enough for this eviction to happen\n+            // at all.\n+            // Note that we only request blocks from a peer if we learn of a\n+            // valid headers chain with at least as much work as our tip.\n+            CNodeState *node_state = State(pnode->GetId());\n+            if (node_state == nullptr ||",
      "path": "src/net_processing.cpp",
      "position": 49,
      "original_position": 36,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "daf74979d741c9ccca68145f65f4ba6e0ee899b0",
      "in_reply_to_id": 517715632,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think it's better/more defensive not to add asserts in the p2p stack if we can gracefully handle the condition. Here we can just set `fDisconnect` and hopefully `FinalizeNode()` will handle cleaning up the state.\r\n\r\nAt most, we should use `Assume()` (https://github.com/bitcoin/bitcoin/pull/20255) which will crash in tests and continue in production.",
      "created_at": "2020-11-22T13:17:05Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r528334380",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528334380"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3943,
      "original_line": 3943,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528334554",
      "pull_request_review_id": 536052508,
      "id": 528334554,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODMzNDU1NA==",
      "diff_hunk": "@@ -3953,11 +3953,55 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n-    if (extra_peers > 0) {\n-        // If we have more outbound peers than we target, disconnect one.\n-        // Pick the outbound peer that least recently announced\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.\n+    // Note that we use higher nodeid as a measure for most recent connection.\n+    if (m_connman.GetExtraBlockRelayCount() > 0) {\n+        std::pair<NodeId, int64_t> youngest_peer{-1, 0}, next_youngest_peer{-1, 0};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+            AssertLockHeld(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {\n+                next_youngest_peer = youngest_peer;\n+                youngest_peer.first = pnode->GetId();\n+                youngest_peer.second = pnode->nLastBlockTime;\n+            }\n+        });\n+        NodeId to_disconnect = youngest_peer.first;\n+        if (youngest_peer.second > next_youngest_peer.second) {\n+            // Our newest block-relay-only peer gave us a block more recently;\n+            // disconnect our second youngest.\n+            to_disconnect = next_youngest_peer.first;\n+        }\n+        m_connman.ForNode(to_disconnect, [&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+            AssertLockHeld(::cs_main);\n+            // Make sure we're not getting a block right now, and that\n+            // we've been connected long enough for this eviction to happen\n+            // at all.\n+            // Note that we only request blocks from a peer if we learn of a\n+            // valid headers chain with at least as much work as our tip.\n+            CNodeState *node_state = State(pnode->GetId());\n+            if (node_state == nullptr ||\n+                (time_in_seconds - pnode->nTimeConnected >= MINIMUM_CONNECT_TIME && node_state->nBlocksInFlight == 0)) {\n+                pnode->fDisconnect = true;\n+                LogPrint(BCLog::NET, \"disconnecting extra block-relay-only peer=%d (last block received at time %d)\\n\", pnode->GetId(), pnode->nLastBlockTime);\n+                return true;",
      "path": "src/net_processing.cpp",
      "position": 53,
      "original_position": 54,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "93a0ec1a629af533bb21418a3e134c268bc57395",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It's strange to return `true` here and `false` below, and then throw away that return value. It'd be clearer to always return the same value.",
      "created_at": "2020-11-22T13:18:42Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r528334554",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528334554"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3947,
      "original_line": 3947,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528335350",
      "pull_request_review_id": 536052508,
      "id": 528335350,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODMzNTM1MA==",
      "diff_hunk": "@@ -3953,11 +3953,55 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n-    if (extra_peers > 0) {\n-        // If we have more outbound peers than we target, disconnect one.\n-        // Pick the outbound peer that least recently announced\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.",
      "path": "src/net_processing.cpp",
      "position": 20,
      "original_position": 20,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "93a0ec1a629af533bb21418a3e134c268bc57395",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why not disconnect the worst peer (the one that has been longest without providing a block)?\r\ne.g.:\r\n\r\n- connect to block-relay-only peer 1. It never provides any blocks.\r\n- connect to block-relay-only peer 2. It provides blocks.\r\n- connect to extra block-relay-only peer 3. It provides one block in the time it's connected.\r\n\r\nWith this logic we'd disconnect peer 2, but I think it'd be strictly better to disconnect peer 1.\r\n\r\nDoing this would (I think) make the logic simpler, since you'd only need to keep track of the worst peer in the `ForEachNode()` lambda, rather than keeping track of two peers and then deciding which to disconnect.",
      "created_at": "2020-11-22T13:25:30Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r528335350",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528335350"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": 3912,
      "original_start_line": 3956,
      "start_side": "RIGHT",
      "line": 3914,
      "original_line": 3914,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528335481",
      "pull_request_review_id": 536052508,
      "id": 528335481,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODMzNTQ4MQ==",
      "diff_hunk": "@@ -3953,11 +3953,55 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n-    if (extra_peers > 0) {\n-        // If we have more outbound peers than we target, disconnect one.\n-        // Pick the outbound peer that least recently announced\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.\n+    // Note that we use higher nodeid as a measure for most recent connection.\n+    if (m_connman.GetExtraBlockRelayCount() > 0) {\n+        std::pair<NodeId, int64_t> youngest_peer{-1, 0}, next_youngest_peer{-1, 0};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+            AssertLockHeld(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {\n+                next_youngest_peer = youngest_peer;\n+                youngest_peer.first = pnode->GetId();\n+                youngest_peer.second = pnode->nLastBlockTime;\n+            }\n+        });\n+        NodeId to_disconnect = youngest_peer.first;\n+        if (youngest_peer.second > next_youngest_peer.second) {\n+            // Our newest block-relay-only peer gave us a block more recently;\n+            // disconnect our second youngest.\n+            to_disconnect = next_youngest_peer.first;\n+        }\n+        m_connman.ForNode(to_disconnect, [&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+            AssertLockHeld(::cs_main);\n+            // Make sure we're not getting a block right now, and that\n+            // we've been connected long enough for this eviction to happen\n+            // at all.\n+            // Note that we only request blocks from a peer if we learn of a\n+            // valid headers chain with at least as much work as our tip.\n+            CNodeState *node_state = State(pnode->GetId());",
      "path": "src/net_processing.cpp",
      "position": 48,
      "original_position": 49,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "93a0ec1a629af533bb21418a3e134c268bc57395",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n            CNodeState* node_state = State(pnode->GetId());\r\n```\r\n\r\n(`*` and `&` should bind to the left in new code)",
      "created_at": "2020-11-22T13:26:29Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r528335481",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528335481"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3942,
      "original_line": 3942,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528338603",
      "pull_request_review_id": 536052508,
      "id": 528338603,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODMzODYwMw==",
      "diff_hunk": "@@ -3969,11 +3969,58 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)",
      "path": "src/net_processing.cpp",
      "position": 11,
      "original_position": 11,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "8ea760b10221eb01b057363693ab74cdc810fd4a",
      "in_reply_to_id": 499445435,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I agree that splitting this function would be a better structure. There's no shared state between the top and bottom half of the function, and splitting logic into smaller pieces makes it easier to follow. It also allows guard clauses and early exits, which reduces deep nesting and is a very clear way of expressing the intent of the function.",
      "created_at": "2020-11-22T13:51:18Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r528338603",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528338603"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3910,
      "original_line": 3910,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528339390",
      "pull_request_review_id": 536052508,
      "id": 528339390,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODMzOTM5MA==",
      "diff_hunk": "@@ -3953,11 +3953,55 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n-    if (extra_peers > 0) {\n-        // If we have more outbound peers than we target, disconnect one.\n-        // Pick the outbound peer that least recently announced\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.\n+    // Note that we use higher nodeid as a measure for most recent connection.\n+    if (m_connman.GetExtraBlockRelayCount() > 0) {\n+        std::pair<NodeId, int64_t> youngest_peer{-1, 0}, next_youngest_peer{-1, 0};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "93a0ec1a629af533bb21418a3e134c268bc57395",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In general, it's better to avoid default capture in lambdas, since if that lambda is used outside the scope that it's defined, it can lead to dangling references. That can't happen here, but I think it's just best practice to explicitly state what you'll need.\r\n\r\n```suggestion\r\n        m_connman.ForEachNode([&youngest_peer, &next_youngest_peer](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\r\n```",
      "created_at": "2020-11-22T13:57:26Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r528339390",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528339390"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3965,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528339455",
      "pull_request_review_id": 536052508,
      "id": 528339455,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODMzOTQ1NQ==",
      "diff_hunk": "@@ -3953,11 +3953,55 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n-    if (extra_peers > 0) {\n-        // If we have more outbound peers than we target, disconnect one.\n-        // Pick the outbound peer that least recently announced\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.\n+    // Note that we use higher nodeid as a measure for most recent connection.\n+    if (m_connman.GetExtraBlockRelayCount() > 0) {\n+        std::pair<NodeId, int64_t> youngest_peer{-1, 0}, next_youngest_peer{-1, 0};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+            AssertLockHeld(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {\n+                next_youngest_peer = youngest_peer;\n+                youngest_peer.first = pnode->GetId();\n+                youngest_peer.second = pnode->nLastBlockTime;\n+            }\n+        });\n+        NodeId to_disconnect = youngest_peer.first;\n+        if (youngest_peer.second > next_youngest_peer.second) {\n+            // Our newest block-relay-only peer gave us a block more recently;\n+            // disconnect our second youngest.\n+            to_disconnect = next_youngest_peer.first;\n+        }\n+        m_connman.ForNode(to_disconnect, [&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {",
      "path": "src/net_processing.cpp",
      "position": 41,
      "original_position": 42,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "93a0ec1a629af533bb21418a3e134c268bc57395",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It's best to capture simple types by value (and again, explicitly rather than by default):\r\n\r\n```suggestion\r\n        m_connman.ForNode(to_disconnect, [time_in_seconds](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\r\n```",
      "created_at": "2020-11-22T13:58:00Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r528339455",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/528339455"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3935,
      "original_line": 3935,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/531432433",
      "pull_request_review_id": 539766657,
      "id": 531432433,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTQzMjQzMw==",
      "diff_hunk": "@@ -3953,11 +3953,55 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n-    if (extra_peers > 0) {\n-        // If we have more outbound peers than we target, disconnect one.\n-        // Pick the outbound peer that least recently announced\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.",
      "path": "src/net_processing.cpp",
      "position": 20,
      "original_position": 20,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "93a0ec1a629af533bb21418a3e134c268bc57395",
      "in_reply_to_id": 528335350,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "A peer would never provide us a block if we provided them a block earlier.\r\n\r\nSo, an attacker can try being veeeery fast at sending blocks to a victim (I assume it's possible) so that other peers are worst, and slowly evict them one by one.\r\nThis of course assumes an attacker has eviction capabilities.\r\n\r\nCurrent approach of this PR is more conservative and wouldn't allow this.",
      "created_at": "2020-11-27T07:53:30Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r531432433",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/531432433"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": 3912,
      "original_start_line": 3956,
      "start_side": "RIGHT",
      "line": 3914,
      "original_line": 3914,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/531475462",
      "pull_request_review_id": 539820527,
      "id": 531475462,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTQ3NTQ2Mg==",
      "diff_hunk": "@@ -3953,11 +3953,55 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n-    if (extra_peers > 0) {\n-        // If we have more outbound peers than we target, disconnect one.\n-        // Pick the outbound peer that least recently announced\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.",
      "path": "src/net_processing.cpp",
      "position": 20,
      "original_position": 20,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "93a0ec1a629af533bb21418a3e134c268bc57395",
      "in_reply_to_id": 528335350,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Essentially this means that we have one 'fixed' block-relay-only peer (even across restarts due to anchor connections) and one evictable block-relay-only peer.\r\n\r\nYou may be right that this makes it more difficult for an adversary to take over both block-relay-only connections, although it seems like it'd be very difficult to pull off - the adversary would need to take over a large part of the victim's addrman, be lucky with timings of blocks and additional block-relay-only connections, and be sufficiently well connected to the network that they can always win a block race against *all* of the victim's other connections.\r\n\r\nIn any case, if this is the model (one fixed and one evictable block-relay-only peer), then it'd be much better to explicitly document that rather than it be a consequence of the logic here.",
      "created_at": "2020-11-27T09:20:17Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r531475462",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/531475462"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": 3912,
      "original_start_line": 3956,
      "start_side": "RIGHT",
      "line": 3914,
      "original_line": 3914,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/531657452",
      "pull_request_review_id": 540051203,
      "id": 531657452,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY1NzQ1Mg==",
      "diff_hunk": "@@ -2557,7 +2557,7 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n             LogPrintf(\"New outbound peer connected: version: %d, blocks=%d, peer=%d%s (%s)\\n\",\n                       pfrom.nVersion.load(), pfrom.nStartingHeight,\n                       pfrom.GetId(), (fLogIPs ? strprintf(\", peeraddr=%s\", pfrom.addr.ToString()) : \"\"),\n-                      pfrom.m_tx_relay == nullptr ? \"block-relay\" : \"full-relay\");\n+                      pfrom.IsBlockOnlyConn() ? \"block-relay\" : \"full-relay\");",
      "path": "src/net_processing.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "93a0ec1a629af533bb21418a3e134c268bc57395",
      "in_reply_to_id": 528322920,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Happy to pick this up in a followup PR. I don't think we need to clutter this one further with style cleanups now that this has some review and ACKs.",
      "created_at": "2020-11-27T15:18:39Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r531657452",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/531657452"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2469,
      "original_line": 2469,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/531659645",
      "pull_request_review_id": 540053944,
      "id": 531659645,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY1OTY0NQ==",
      "diff_hunk": "@@ -3953,11 +3953,55 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n-    if (extra_peers > 0) {\n-        // If we have more outbound peers than we target, disconnect one.\n-        // Pick the outbound peer that least recently announced\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.",
      "path": "src/net_processing.cpp",
      "position": 20,
      "original_position": 20,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "93a0ec1a629af533bb21418a3e134c268bc57395",
      "in_reply_to_id": 528335350,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I thought I did document this in`net.h`, but I think it would make sense to put a writeup of how all this works on our wiki, which I'd be happy to do after this is merged.",
      "created_at": "2020-11-27T15:23:26Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r531659645",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/531659645"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": 3912,
      "original_start_line": 3956,
      "start_side": "RIGHT",
      "line": 3914,
      "original_line": 3914,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/531660586",
      "pull_request_review_id": 540055066,
      "id": 531660586,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY2MDU4Ng==",
      "diff_hunk": "@@ -3969,11 +3969,58 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)",
      "path": "src/net_processing.cpp",
      "position": 11,
      "original_position": 11,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "8ea760b10221eb01b057363693ab74cdc810fd4a",
      "in_reply_to_id": 499445435,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Feel free to pick this up in a future PR if you like; I'm leaving this as-is for now as I think this is easier to review and understand if this all happens in the same scheduler callback.",
      "created_at": "2020-11-27T15:25:24Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r531660586",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/531660586"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3910,
      "original_line": 3910,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/531669010",
      "pull_request_review_id": 540065426,
      "id": 531669010,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY2OTAxMA==",
      "diff_hunk": "@@ -94,6 +94,9 @@ class PeerLogicValidation final : public CValidationInterface, public NetEventsI\n private:\n     int64_t m_stale_tip_check_time; //!< Next time to check for stale tip\n \n+    /** Whether we've completed initial sync yet, for determining when to turn\n+      * on extra block-relay peers. */\n+    bool m_initial_sync_finished{false};",
      "path": "src/net_processing.h",
      "position": 6,
      "original_position": 6,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "013b41fc27110a288d93dde73325602526a692f5",
      "in_reply_to_id": 483444542,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think this would mean that we stop using block-relay-only peer rotation when our tip is stale, which might be when we want these connections happening the most?  It becomes arguable whether we should just rely on stale-tip-checking + full outbound peer rotation at that point, but I think we would want to carefully reason about our protections in that scenario.",
      "created_at": "2020-11-27T15:42:57Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r531669010",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/531669010"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 211,
      "original_line": 211,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/531673223",
      "pull_request_review_id": 540070536,
      "id": 531673223,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY3MzIyMw==",
      "diff_hunk": "@@ -3953,11 +3953,55 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n-    if (extra_peers > 0) {\n-        // If we have more outbound peers than we target, disconnect one.\n-        // Pick the outbound peer that least recently announced\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.\n+    // Note that we use higher nodeid as a measure for most recent connection.\n+    if (m_connman.GetExtraBlockRelayCount() > 0) {\n+        std::pair<NodeId, int64_t> youngest_peer{-1, 0}, next_youngest_peer{-1, 0};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+            AssertLockHeld(::cs_main);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 28,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "93a0ec1a629af533bb21418a3e134c268bc57395",
      "in_reply_to_id": 528331824,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oops, that seems correct.  I'll add a commit that removes this.",
      "created_at": "2020-11-27T15:51:56Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r531673223",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/531673223"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": 3965,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 3966,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/539986106",
      "pull_request_review_id": 548972778,
      "id": 539986106,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTk4NjEwNg==",
      "diff_hunk": "@@ -3913,13 +3913,11 @@ void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n             AssertLockHeld(::cs_main);\n \n             // Ignore non-outbound peers, or nodes marked for disconnect already\n-            if (!pnode->IsOutboundOrBlockRelayConn() || pnode->fDisconnect) return;\n+            if (!pnode->IsFullOutboundConn() || pnode->fDisconnect) return;",
      "path": "src/net_processing.cpp",
      "position": 77,
      "original_position": 14,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "efa0e0df05620bf1ac74de3ec8d752990b00d32a",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "To be clear, there was a bug here (no critical behavior, just meaningless code).\r\nIt was already useless to check for \"BlockRelayConn\", because they were filtered out later in \"if (pnode->m_tx_relay == nullptr)\". All good after this change.",
      "created_at": "2020-12-10T08:55:15Z",
      "updated_at": "2020-12-10T13:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r539986106",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/539986106"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3970,
      "original_line": 3970,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/540791588",
      "pull_request_review_id": 549912405,
      "id": 540791588,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDc5MTU4OA==",
      "diff_hunk": "@@ -2557,7 +2557,7 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n             LogPrintf(\"New outbound peer connected: version: %d, blocks=%d, peer=%d%s (%s)\\n\",\n                       pfrom.nVersion.load(), pfrom.nStartingHeight,\n                       pfrom.GetId(), (fLogIPs ? strprintf(\", peeraddr=%s\", pfrom.addr.ToString()) : \"\"),\n-                      pfrom.m_tx_relay == nullptr ? \"block-relay\" : \"full-relay\");\n+                      pfrom.IsBlockOnlyConn() ? \"block-relay\" : \"full-relay\");",
      "path": "src/net_processing.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "93a0ec1a629af533bb21418a3e134c268bc57395",
      "in_reply_to_id": 528322920,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Isn't this suggestion (changing `m_tx_relay == nullptr` to `IsBlockOnlyConn()` when logging a new outbound peer) already done? I think github is confusing me...\r\n\r\nAnyway, changing that entire `x ? \"y\" : \"z\"` to just be `pfrom.ConnectionTypeAsString()` seems like it might be better.",
      "created_at": "2020-12-11T09:01:42Z",
      "updated_at": "2020-12-11T10:21:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r540791588",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/540791588"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2469,
      "original_line": 2469,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/540799536",
      "pull_request_review_id": 549912405,
      "id": 540799536,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDc5OTUzNg==",
      "diff_hunk": "@@ -1820,18 +1820,32 @@ void CConnman::SetTryNewOutboundPeer(bool flag)\n // Also exclude peers that haven't finished initial connection handshake yet\n // (so that we don't decide we're over our desired connection limit, and then\n // evict some peer that has finished the handshake)\n-int CConnman::GetExtraOutboundCount()\n+int CConnman::GetExtraFullOutboundCount()",
      "path": "src/net.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "93a0ec1a629af533bb21418a3e134c268bc57395",
      "in_reply_to_id": 528321515,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If this does get refactored further, making it `bool HasExtraBlockRelay()` and `bool HasExtraFullOutbound` and returning `count > m_max_x` instead of `max(0, count - m_max_x)` would be an idea too.",
      "created_at": "2020-12-11T09:15:04Z",
      "updated_at": "2020-12-11T10:21:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r540799536",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/540799536"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1830,
      "original_line": 1830,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/540817510",
      "pull_request_review_id": 549912405,
      "id": 540817510,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDgxNzUxMA==",
      "diff_hunk": "@@ -3953,9 +3953,53 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.\n+    // Note that we use higher nodeid as a measure for most recent connection.\n+    if (m_connman.GetExtraBlockRelayCount() > 0) {\n+        std::pair<NodeId, int64_t> youngest_peer{-1, 0}, next_youngest_peer{-1, 0};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+            AssertLockHeld(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {\n+                next_youngest_peer = youngest_peer;\n+                youngest_peer.first = pnode->GetId();\n+                youngest_peer.second = pnode->nLastBlockTime;\n+            }\n+        });\n+        NodeId to_disconnect = youngest_peer.first;\n+        if (youngest_peer.second > next_youngest_peer.second) {\n+            // Our newest block-relay-only peer gave us a block more recently;\n+            // disconnect our second youngest.\n+            to_disconnect = next_youngest_peer.first;\n+        }\n+        m_connman.ForNode(to_disconnect, [&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+            AssertLockHeld(::cs_main);\n+            // Make sure we're not getting a block right now, and that\n+            // we've been connected long enough for this eviction to happen\n+            // at all.\n+            // Note that we only request blocks from a peer if we learn of a\n+            // valid headers chain with at least as much work as our tip.\n+            CNodeState *node_state = State(pnode->GetId());\n+            if (node_state == nullptr ||",
      "path": "src/net_processing.cpp",
      "position": 49,
      "original_position": 36,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "daf74979d741c9ccca68145f65f4ba6e0ee899b0",
      "in_reply_to_id": 517715632,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Might have been better to have made it:\r\n\r\n```c++\r\n        CNodeState* state = State(pnode->GetId());\r\n        int blocks_in_flight = (state == nullptr ? 0 : state->nBlocksInFlight);\r\n```\r\n\r\nAs it is, it looks like `node_state == nullptr` is something that could happen and requires special casing to ensure we do disconnect it immediately, whereas in reality it's never reachable (we ensure we have `CNodeState` prior to adding it to `vNodes`, and remove it only after removing from `vNodes`).\r\n\r\nThere are plenty of other places in the code where we `assert` if `State()` returns a `nullptr`, so I think an `assert` here would also be fine.",
      "created_at": "2020-12-11T09:42:39Z",
      "updated_at": "2020-12-11T10:21:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r540817510",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/540817510"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3943,
      "original_line": 3943,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/540821050",
      "pull_request_review_id": 549912405,
      "id": 540821050,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDgyMTA1MA==",
      "diff_hunk": "@@ -3909,11 +3909,54 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n-    if (extra_peers > 0) {\n-        // If we have more outbound peers than we target, disconnect one.\n-        // Pick the outbound peer that least recently announced\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.\n+    // Note that we use higher nodeid as a measure for most recent connection.\n+    if (m_connman.GetExtraBlockRelayCount() > 0) {\n+        std::pair<NodeId, int64_t> youngest_peer{-1, 0}, next_youngest_peer{-1, 0};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) {\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {\n+                next_youngest_peer = youngest_peer;\n+                youngest_peer.first = pnode->GetId();\n+                youngest_peer.second = pnode->nLastBlockTime;\n+            }\n+        });\n+        NodeId to_disconnect = youngest_peer.first;\n+        if (youngest_peer.second > next_youngest_peer.second) {\n+            // Our newest block-relay-only peer gave us a block more recently;\n+            // disconnect our second youngest.\n+            to_disconnect = next_youngest_peer.first;\n+        }\n+        m_connman.ForNode(to_disconnect, [&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+            AssertLockHeld(::cs_main);\n+            // Make sure we're not getting a block right now, and that\n+            // we've been connected long enough for this eviction to happen\n+            // at all.\n+            // Note that we only request blocks from a peer if we learn of a\n+            // valid headers chain with at least as much work as our tip.\n+            CNodeState *node_state = State(pnode->GetId());\n+            if (node_state == nullptr ||\n+                (time_in_seconds - pnode->nTimeConnected >= MINIMUM_CONNECT_TIME && node_state->nBlocksInFlight == 0)) {\n+                pnode->fDisconnect = true;\n+                LogPrint(BCLog::NET, \"disconnecting extra block-relay-only peer=%d (last block received at time %d)\\n\", pnode->GetId(), pnode->nLastBlockTime);\n+                return true;\n+            } else {\n+                LogPrint(BCLog::NET, \"keeping block-relay-only peer=%d chosen for eviction (connect time: %d, blocks_in_flight: %d)\\n\",\n+                    pnode->GetId(), pnode->nTimeConnected, node_state->nBlocksInFlight);\n+            }\n+            return false;\n+        });\n+    }\n+\n+    // Check whether we have too many OUTBOUND_FULL_RELAY peers\n+    if (m_connman.GetExtraFullOutboundCount() > 0) {\n+        // If we have more OUTBOUND_FULL_RELAY peers than we target, disconnect one.",
      "path": "src/net_processing.cpp",
      "position": 64,
      "original_position": 64,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Seems better to use the names from `ConnectionTypeAsString` in comments than the shouty enums (ie `outbound-full-relay`) here).",
      "created_at": "2020-12-11T09:48:10Z",
      "updated_at": "2020-12-11T10:21:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r540821050",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/540821050"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3958,
      "original_line": 3958,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/544365851",
      "pull_request_review_id": 553768939,
      "id": 544365851,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDM2NTg1MQ==",
      "diff_hunk": "@@ -3953,11 +3953,55 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n-    if (extra_peers > 0) {\n-        // If we have more outbound peers than we target, disconnect one.\n-        // Pick the outbound peer that least recently announced\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.",
      "path": "src/net_processing.cpp",
      "position": 20,
      "original_position": 20,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "93a0ec1a629af533bb21418a3e134c268bc57395",
      "in_reply_to_id": 528335350,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've updated the documentation on the wiki:\r\nhttps://github.com/bitcoin-core/bitcoin-devwiki/wiki/P2P-Design-Philosophy/_compare/452d8a0c96503ac7158a975acf7d55cd674a3735\r\n\r\nPlease let me know if you think anything is missing and I'd be happy to clarify further.",
      "created_at": "2020-12-16T14:57:27Z",
      "updated_at": "2020-12-16T14:57:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r544365851",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/544365851"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": 3912,
      "original_start_line": 3956,
      "start_side": "RIGHT",
      "line": 3914,
      "original_line": 3914,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/545824316",
      "pull_request_review_id": 555475907,
      "id": 545824316,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTgyNDMxNg==",
      "diff_hunk": "@@ -3953,11 +3953,55 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n-    if (extra_peers > 0) {\n-        // If we have more outbound peers than we target, disconnect one.\n-        // Pick the outbound peer that least recently announced\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.\n+    // Note that we use higher nodeid as a measure for most recent connection.\n+    if (m_connman.GetExtraBlockRelayCount() > 0) {\n+        std::pair<NodeId, int64_t> youngest_peer{-1, 0}, next_youngest_peer{-1, 0};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+            AssertLockHeld(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {\n+                next_youngest_peer = youngest_peer;\n+                youngest_peer.first = pnode->GetId();\n+                youngest_peer.second = pnode->nLastBlockTime;\n+            }\n+        });\n+        NodeId to_disconnect = youngest_peer.first;\n+        if (youngest_peer.second > next_youngest_peer.second) {\n+            // Our newest block-relay-only peer gave us a block more recently;\n+            // disconnect our second youngest.\n+            to_disconnect = next_youngest_peer.first;\n+        }\n+        m_connman.ForNode(to_disconnect, [&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+            AssertLockHeld(::cs_main);\n+            // Make sure we're not getting a block right now, and that\n+            // we've been connected long enough for this eviction to happen\n+            // at all.\n+            // Note that we only request blocks from a peer if we learn of a\n+            // valid headers chain with at least as much work as our tip.\n+            CNodeState *node_state = State(pnode->GetId());\n+            if (node_state == nullptr ||\n+                (time_in_seconds - pnode->nTimeConnected >= MINIMUM_CONNECT_TIME && node_state->nBlocksInFlight == 0)) {\n+                pnode->fDisconnect = true;\n+                LogPrint(BCLog::NET, \"disconnecting extra block-relay-only peer=%d (last block received at time %d)\\n\", pnode->GetId(), pnode->nLastBlockTime);",
      "path": "src/net_processing.cpp",
      "position": 52,
      "original_position": 53,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "93a0ec1a629af533bb21418a3e134c268bc57395",
      "in_reply_to_id": 518656458,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@jonatack If you have a patch to do this, please feel free to open a PR (I agree that this is mildly annoying).",
      "created_at": "2020-12-18T13:16:42Z",
      "updated_at": "2020-12-18T13:16:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r545824316",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/545824316"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3946,
      "original_line": 3946,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546246953",
      "pull_request_review_id": 555946666,
      "id": 546246953,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjI0Njk1Mw==",
      "diff_hunk": "@@ -3953,11 +3953,55 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n \n void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n {\n-    // Check whether we have too many outbound peers\n-    int extra_peers = m_connman.GetExtraOutboundCount();\n-    if (extra_peers > 0) {\n-        // If we have more outbound peers than we target, disconnect one.\n-        // Pick the outbound peer that least recently announced\n+    // If we have any extra block-relay-only peers, disconnect the youngest unless\n+    // it's given us a block -- in which case, compare with the second-youngest, and\n+    // out of those two, disconnect the peer who least recently gave us a block.\n+    // The youngest block-relay-only peer would be the extra peer we connected\n+    // to temporarily in order to sync our tip; see net.cpp.\n+    // Note that we use higher nodeid as a measure for most recent connection.\n+    if (m_connman.GetExtraBlockRelayCount() > 0) {\n+        std::pair<NodeId, int64_t> youngest_peer{-1, 0}, next_youngest_peer{-1, 0};\n+\n+        m_connman.ForEachNode([&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+            AssertLockHeld(::cs_main);\n+            if (!pnode->IsBlockOnlyConn() || pnode->fDisconnect) return;\n+            if (pnode->GetId() > youngest_peer.first) {\n+                next_youngest_peer = youngest_peer;\n+                youngest_peer.first = pnode->GetId();\n+                youngest_peer.second = pnode->nLastBlockTime;\n+            }\n+        });\n+        NodeId to_disconnect = youngest_peer.first;\n+        if (youngest_peer.second > next_youngest_peer.second) {\n+            // Our newest block-relay-only peer gave us a block more recently;\n+            // disconnect our second youngest.\n+            to_disconnect = next_youngest_peer.first;\n+        }\n+        m_connman.ForNode(to_disconnect, [&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+            AssertLockHeld(::cs_main);\n+            // Make sure we're not getting a block right now, and that\n+            // we've been connected long enough for this eviction to happen\n+            // at all.\n+            // Note that we only request blocks from a peer if we learn of a\n+            // valid headers chain with at least as much work as our tip.\n+            CNodeState *node_state = State(pnode->GetId());\n+            if (node_state == nullptr ||\n+                (time_in_seconds - pnode->nTimeConnected >= MINIMUM_CONNECT_TIME && node_state->nBlocksInFlight == 0)) {\n+                pnode->fDisconnect = true;\n+                LogPrint(BCLog::NET, \"disconnecting extra block-relay-only peer=%d (last block received at time %d)\\n\", pnode->GetId(), pnode->nLastBlockTime);",
      "path": "src/net_processing.cpp",
      "position": 52,
      "original_position": 53,
      "commit_id": "b3a515c0bec97633a76bec101af47c3c90c0b749",
      "original_commit_id": "93a0ec1a629af533bb21418a3e134c268bc57395",
      "in_reply_to_id": 518656458,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "thanks @sdaftuar, done in #20723",
      "created_at": "2020-12-19T14:55:55Z",
      "updated_at": "2020-12-19T14:55:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19858#discussion_r546246953",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546246953"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19858"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3946,
      "original_line": 3946,
      "side": "RIGHT"
    }
  ]
}