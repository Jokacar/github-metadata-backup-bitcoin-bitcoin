{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29242",
    "id": 1676984426,
    "node_id": "PR_kwDOABII585j9MBq",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/29242",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/29242.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/29242.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29242",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29242/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29242/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29242/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/5da41e6f851b53d5639dc12aa3d6c308a8a8b403",
    "number": 29242,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "Mempool util: Add RBF diagram checks for single chunks against clusters of size 2",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is a smaller piece of https://github.com/bitcoin/bitcoin/pull/28984 broken off for easier review.\r\n\r\nUp to date explanation of diagram checks are here: https://delvingbitcoin.org/t/an-overview-of-the-cluster-mempool-proposal/393\r\n\r\nThis infrastructure has two near term applications prior to cluster mempool:\r\n1) Limited Package RBF(https://github.com/bitcoin/bitcoin/pull/28984): We want to allow package RBF only when we know it improves the mempool. This narrowly scoped functionality allows use with v3-like topologies, and will be expanded at some point post-cluster mempool when diagram checks can be done efficiently against bounded cluster sizes.\r\n2) Replacement for single tx RBF(in a cluster size of up to two) against conflicts of up to cluster size two. `ImprovesFeerateDiagram` interface will have to change for this use-case, which is a future direction to solve certain pins and improve mempool incentive compatibility: https://delvingbitcoin.org/t/ephemeral-anchors-and-mev/383#diagram-checks-fix-this-3\r\n\r\nAnd longer-term, this would be the proposed way we would compute incentive compatibility for all conflicts, post-cluster mempool.\r\n\r\n",
    "labels": [],
    "created_at": "2024-01-12T18:07:44Z",
    "updated_at": "2024-01-16T20:01:11Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "895db47b50f444dcd5466ea3dbda942bc8ed348a",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "instagibbs:2024-01-diagram-checks",
      "ref": "2024-01-diagram-checks",
      "sha": "5da41e6f851b53d5639dc12aa3d6c308a8a8b403",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 13910191,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMzkxMDE5MQ==",
        "name": "bitcoin",
        "full_name": "instagibbs/bitcoin",
        "owner": {
          "login": "instagibbs",
          "id": 5767891,
          "node_id": "MDQ6VXNlcjU3Njc4OTE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/instagibbs",
          "html_url": "https://github.com/instagibbs",
          "followers_url": "https://api.github.com/users/instagibbs/followers",
          "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
          "organizations_url": "https://api.github.com/users/instagibbs/orgs",
          "repos_url": "https://api.github.com/users/instagibbs/repos",
          "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/instagibbs/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/instagibbs/bitcoin",
        "description": "Bitcoin integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/instagibbs/bitcoin",
        "archive_url": "https://api.github.com/repos/instagibbs/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/instagibbs/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/instagibbs/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/instagibbs/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/instagibbs/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/instagibbs/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/instagibbs/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/instagibbs/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/instagibbs/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/instagibbs/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/instagibbs/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/instagibbs/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/instagibbs/bitcoin/events",
        "forks_url": "https://api.github.com/repos/instagibbs/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/instagibbs/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/instagibbs/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/instagibbs/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/instagibbs/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/instagibbs/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/instagibbs/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/instagibbs/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/instagibbs/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/instagibbs/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/instagibbs/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/instagibbs/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/instagibbs/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/instagibbs/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/instagibbs/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/instagibbs/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:instagibbs/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/instagibbs/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/instagibbs/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/instagibbs/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/instagibbs/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/instagibbs/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/instagibbs/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/instagibbs/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/instagibbs/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/instagibbs/bitcoin/hooks",
        "svn_url": "https://github.com/instagibbs/bitcoin",
        "homepage": "http://www.bitcoin.org",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 2,
        "watchers_count": 2,
        "size": 226614,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-01-12T20:25:34Z",
        "created_at": "2013-10-27T20:56:53Z",
        "updated_at": "2022-12-28T23:57:23Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "3ba8de1b704d590fa4e1975620bd21d830d11666",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 36523,
        "stargazers_count": 73370,
        "watchers_count": 73370,
        "size": 247669,
        "default_branch": "master",
        "open_issues_count": 686,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-01-16T20:19:22Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-01-16T20:10:29Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29242"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 979,
    "deletions": 41,
    "changed_files": 13,
    "commits": 6,
    "review_comments": 10,
    "comments": 3
  },
  "events": [
    {
      "event": "commented",
      "id": 1889741023,
      "node_id": "IC_kwDOABII585woyjf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1889741023",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-12T18:07:47Z",
      "updated_at": "2024-01-13T00:25:42Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/29242).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\nA summary of reviews will appear here.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#29015](https://github.com/bitcoin/bitcoin/pull/29015) (kernel: Streamline util library by ryanofsky)\n* [#28984](https://github.com/bitcoin/bitcoin/pull/28984) (Cluster size 2 package rbf by instagibbs)\n* [#28960](https://github.com/bitcoin/bitcoin/pull/28960) (kernel: Remove dependency on CScheduler by TheCharlatan)\n* [#28948](https://github.com/bitcoin/bitcoin/pull/28948) (v3 transaction policy for anti-pinning by glozow)\n* [#28886](https://github.com/bitcoin/bitcoin/pull/28886) (refactor: Replace sets of txiter with CTxMemPoolEntryRefs by TheCharlatan)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29242#issuecomment-1889741023",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29242"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-12T18:08:49Z",
      "updated_at": "2024-01-12T18:08:49Z",
      "source": {
        "issue": {
          "id": 2021654832,
          "node_id": "PR_kwDOABII585g8KkU",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28984",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28984/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28984/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28984/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28984",
          "number": 28984,
          "state": "open",
          "state_reason": null,
          "title": "Cluster size 2 package rbf",
          "body": "Allows any 2 transaction package with no in-mempool ancestors to do package RBF when directly conflicting with other mempool clusters of size two or less.\r\n\r\n\r\nProposed validation steps:\r\n1) If the transaction package is of size 1, legacy rbf rules apply.\r\n2) Otherwise the transaction package consists of a (parent, child) pair with no other in-mempool ancestors (or descendants, obviously), so it is also going to create a cluster of size 2). If larger, fail.\r\n3) The package rbf may not evict more than 100 transactions from the mempool(bip125 rule 5)\r\n4) The package's child tx has greater feerate than the parent tx (otherwise the parent should have RBF'd on its own at step 0)\r\n5) Every directly conflicted mempool transaction is connected to at most 1 other in-mempool transaction (ie the cluster size of the conflict is at most 2).\r\n6) Diagram check: We ensure that the replacement is strictly superior at all points, improving the mempool (which includes bip125 rule 3)\r\n7) The total fee of the package, minus the total fee of what is being evicted, is at least the minrelayfee * size of the package (equivalent to bip125 rule 3 and 4)\r\n\r\nPost-cluster mempool this will likely be expanded to general package rbf, but this is what we can safely support today.\r\n",
          "user": {
            "login": "instagibbs",
            "id": 5767891,
            "node_id": "MDQ6VXNlcjU3Njc4OTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/instagibbs",
            "html_url": "https://github.com/instagibbs",
            "followers_url": "https://api.github.com/users/instagibbs/followers",
            "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
            "organizations_url": "https://api.github.com/users/instagibbs/orgs",
            "repos_url": "https://api.github.com/users/instagibbs/repos",
            "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/instagibbs/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 82428251,
              "node_id": "MDU6TGFiZWw4MjQyODI1MQ==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/TX%20fees%20and%20policy",
              "name": "TX fees and policy",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 14,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28984",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28984",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28984.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28984.patch"
          },
          "created_at": "2023-12-01T22:12:06Z",
          "updated_at": "2024-01-16T07:40:05Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11472514498,
      "node_id": "HRFPE_lADOABII58578V6EzwAAAAKr0K3C",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11472514498",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-12T18:29:22Z"
    },
    {
      "event": "commented",
      "id": 1889768276,
      "node_id": "IC_kwDOABII585wo5NU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1889768276",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-12T18:29:27Z",
      "updated_at": "2024-01-12T18:29:27Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n\n🚧 At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/20435922692</sub>",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29242#issuecomment-1889768276",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29242"
    },
    {
      "event": "labeled",
      "id": 11472515246,
      "node_id": "LE_lADOABII58578V6EzwAAAAKr0LCu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11472515246",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-12T18:29:27Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGVjM2NmNjIzNjE5MTJhODVjY2Q4ZDkzYWJjMzYwNmRmNjk1YzY5ZWY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ec3cf62361912a85ccd8d93abc3606df695c69ef",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ec3cf62361912a85ccd8d93abc3606df695c69ef",
      "tree": {
        "sha": "1b4df742a0fee9d183ec29686968349987c0808e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1b4df742a0fee9d183ec29686968349987c0808e"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3ba8de1b704d590fa4e1975620bd21d830d11666",
          "sha": "3ba8de1b704d590fa4e1975620bd21d830d11666",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3ba8de1b704d590fa4e1975620bd21d830d11666"
        }
      ],
      "message": "Add FeeFrac utils\n\nCo-authored-by: Suhas Daftuar <sdaftuar@chaincode.com>\nCo-authored-by: Pieter Wuille <pieter.wuille@gmail.com>",
      "committer": {
        "name": "Greg Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2024-01-12T19:30:23Z"
      },
      "author": {
        "name": "Greg Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2024-01-12T15:40:41Z"
      },
      "sha": "ec3cf62361912a85ccd8d93abc3606df695c69ef"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDhkNzRhMjhhNjIwODNiYmJlZTFmZDZhMmRlZTU2OTk0ZjI5M2E2MWE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8d74a28a62083bbbee1fd6a2dee56994f293a61a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8d74a28a62083bbbee1fd6a2dee56994f293a61a",
      "tree": {
        "sha": "d96cd58533c5c166c0dbbe539cfad8f2631a1a4c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d96cd58533c5c166c0dbbe539cfad8f2631a1a4c"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ec3cf62361912a85ccd8d93abc3606df695c69ef",
          "sha": "ec3cf62361912a85ccd8d93abc3606df695c69ef",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ec3cf62361912a85ccd8d93abc3606df695c69ef"
        }
      ],
      "message": "Add FeeFrace unit tests\n\nCo-authored-by: Suhas Daftuar <sdaftuar@chaincode.com>",
      "committer": {
        "name": "Greg Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2024-01-12T19:33:45Z"
      },
      "author": {
        "name": "Greg Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2024-01-12T15:44:39Z"
      },
      "sha": "8d74a28a62083bbbee1fd6a2dee56994f293a61a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGFiOWE5NTJiZGQxNDA2YTRmYzlmYTcxYzYzZTZmYmVjYjc4ZDBhNGI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ab9a952bdd1406a4fc9fa71c63e6fbecb78d0a4b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ab9a952bdd1406a4fc9fa71c63e6fbecb78d0a4b",
      "tree": {
        "sha": "5c0348b3229978235e75fced6bd9c1e53a515541",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5c0348b3229978235e75fced6bd9c1e53a515541"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8d74a28a62083bbbee1fd6a2dee56994f293a61a",
          "sha": "8d74a28a62083bbbee1fd6a2dee56994f293a61a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8d74a28a62083bbbee1fd6a2dee56994f293a61a"
        }
      ],
      "message": "Implement ImprovesFeerateDiagram\n\nThis new function takes the populated sets of\ndirect and all conflicts computed in the current\nmempool, assuming the replacements are a single\nchunk, and computes a diagram check.\n\nThe diagram check only works against cluster\nsizes of 2 or less, and fails if it encounters\na different topology.\n\nCo-authored-by: Suhas Daftuar <sdaftuar@chaincode.com>",
      "committer": {
        "name": "Greg Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2024-01-12T19:36:02Z"
      },
      "author": {
        "name": "Greg Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2024-01-12T15:54:38Z"
      },
      "sha": "ab9a952bdd1406a4fc9fa71c63e6fbecb78d0a4b"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11473103553,
      "node_id": "HRFPE_lADOABII58578V6EzwAAAAKr2arB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11473103553",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-12T19:36:12Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDA3MjU2MmM1NTU5MWE3M2Y4MTI4Yjc3OGU1ZWJhZGM2MGM0ZDk0NzI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/072562c55591a73f8128b778e5ebadc60c4d9472",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/072562c55591a73f8128b778e5ebadc60c4d9472",
      "tree": {
        "sha": "0f78f7c2780e92512fdbcd335ca8b895708e6d29",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0f78f7c2780e92512fdbcd335ca8b895708e6d29"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ab9a952bdd1406a4fc9fa71c63e6fbecb78d0a4b",
          "sha": "ab9a952bdd1406a4fc9fa71c63e6fbecb78d0a4b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ab9a952bdd1406a4fc9fa71c63e6fbecb78d0a4b"
        }
      ],
      "message": "fuzz: Add fuzz target for ImprovesFeerateDiagram\n\nCo-authored-by: Suhas Daftuar <sdaftuar@chaincode.com>",
      "committer": {
        "name": "Greg Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2024-01-12T20:25:20Z"
      },
      "author": {
        "name": "Greg Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2024-01-12T16:05:05Z"
      },
      "sha": "072562c55591a73f8128b778e5ebadc60c4d9472"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGRiODY5YTJlMmIyMDFjNzJiNGQ1NDdmZDk0MTAwYWUyMTZkNjg2Yjc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/db869a2e2b201c72b4d547fd94100ae216d686b7",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/db869a2e2b201c72b4d547fd94100ae216d686b7",
      "tree": {
        "sha": "f2fec6bc78875b56322dec707d31fa1dd1457ab0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f2fec6bc78875b56322dec707d31fa1dd1457ab0"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/072562c55591a73f8128b778e5ebadc60c4d9472",
          "sha": "072562c55591a73f8128b778e5ebadc60c4d9472",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/072562c55591a73f8128b778e5ebadc60c4d9472"
        }
      ],
      "message": "test: Add tests for CompareFeerateDiagram and CheckConflictTopology",
      "committer": {
        "name": "Greg Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2024-01-12T20:25:20Z"
      },
      "author": {
        "name": "Greg Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2024-01-12T16:08:06Z"
      },
      "sha": "db869a2e2b201c72b4d547fd94100ae216d686b7"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDVkYTQxZTZmODUxYjUzZDU2MzlkYzEyYWEzZDZjMzA4YThhOGI0MDM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5da41e6f851b53d5639dc12aa3d6c308a8a8b403",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5da41e6f851b53d5639dc12aa3d6c308a8a8b403",
      "tree": {
        "sha": "4d7c2c1d3da13cad56fb7b0a01ebfd3f82f29f78",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4d7c2c1d3da13cad56fb7b0a01ebfd3f82f29f78"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/db869a2e2b201c72b4d547fd94100ae216d686b7",
          "sha": "db869a2e2b201c72b4d547fd94100ae216d686b7",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/db869a2e2b201c72b4d547fd94100ae216d686b7"
        }
      ],
      "message": "fuzz: fuzz diagram creation and comparison\n\nCo-authored-by: Suhas Daftuar <sdaftuar@chaincode.com>\nCo-authored-by: Pieter Wuille <pieter.wuille@gmail.com>",
      "committer": {
        "name": "Greg Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2024-01-12T20:25:20Z"
      },
      "author": {
        "name": "Greg Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2024-01-12T16:17:47Z"
      },
      "sha": "5da41e6f851b53d5639dc12aa3d6c308a8a8b403"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11473548624,
      "node_id": "HRFPE_lADOABII58578V6EzwAAAAKr4HVQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11473548624",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-12T20:25:35Z"
    },
    {
      "event": "unlabeled",
      "id": 11473957318,
      "node_id": "UNLE_lADOABII58578V6EzwAAAAKr5rHG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11473957318",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-12T21:15:23Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1889982713,
      "node_id": "IC_kwDOABII585wptj5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1889982713",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-12T21:38:22Z",
      "updated_at": "2024-01-12T21:38:22Z",
      "author_association": "MEMBER",
      "body": "ready for review\r\n\r\ncc @glozow @ismaelsadeeq @achow101 ",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29242#issuecomment-1889982713",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29242"
    },
    {
      "event": "mentioned",
      "id": 11474139968,
      "node_id": "MEE_lADOABII58578V6EzwAAAAKr6XtA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11474139968",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-12T21:38:22Z"
    },
    {
      "event": "subscribed",
      "id": 11474139984,
      "node_id": "SE_lADOABII58578V6EzwAAAAKr6XtQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11474139984",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-12T21:38:22Z"
    },
    {
      "event": "mentioned",
      "id": 11474139994,
      "node_id": "MEE_lADOABII58578V6EzwAAAAKr6Xta",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11474139994",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-12T21:38:22Z"
    },
    {
      "event": "subscribed",
      "id": 11474140002,
      "node_id": "SE_lADOABII58578V6EzwAAAAKr6Xti",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11474140002",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-12T21:38:22Z"
    },
    {
      "event": "mentioned",
      "id": 11474140016,
      "node_id": "MEE_lADOABII58578V6EzwAAAAKr6Xtw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11474140016",
      "actor": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-12T21:38:22Z"
    },
    {
      "event": "subscribed",
      "id": 11474140030,
      "node_id": "SE_lADOABII58578V6EzwAAAAKr6Xt-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11474140030",
      "actor": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-12T21:38:22Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-13T02:10:21Z",
      "updated_at": "2024-01-13T02:10:21Z",
      "source": {
        "issue": {
          "id": 2029493410,
          "node_id": "PR_kwDOABII585hWvMx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29015",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29015/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29015/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29015/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29015",
          "number": 29015,
          "state": "open",
          "state_reason": null,
          "title": "kernel: Streamline util library",
          "body": "Remove `fees.h`, `errors.h`, and `spanparsing.h` from the util library. Specifically:\r\n\r\n- Move `Split` functions from `util/spanparsing.h` to `util/string.h`, using `util` namespace for clarity.\r\n- Move remaining spanparsing functions to `script/parsing.h` since they are used for descriptor and miniscript parsing.\r\n- Combine `util/fees.h` and `util/errors.h` into `common/messages.h` so there is a place for simple functions that generate user messages to live, and these functions are not part of the util library.\r\n\r\nMotivation for this change is that the util library is a dependency of the kernel, and we should remove functionality from util that shouldn't be called by kernel code or kernel applications. These changes should also improve code organization and make functions easier to discover. Some of these same moves are (or were) part of #28690, but did not help with code organization, or made it worse, so it is better to move them and clean them up in the same PR so code only has to change one time.\r\n",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 16,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29015",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29015",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29015.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29015.patch"
          },
          "created_at": "2023-12-06T22:26:39Z",
          "updated_at": "2024-01-16T05:09:52Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-13T02:29:29Z",
      "updated_at": "2024-01-13T02:29:29Z",
      "source": {
        "issue": {
          "id": 2014832404,
          "node_id": "PR_kwDOABII585gk1DX",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28960",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28960/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28960/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28960/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28960",
          "number": 28960,
          "state": "open",
          "state_reason": null,
          "title": "kernel: Remove dependency on CScheduler",
          "body": "By defining a virtual interface class for the scheduler client, users of the kernel can now define their own event consuming infrastructure, without having to spawn threads or rely on the scheduler design.\r\n\r\nRemoving `CScheduler` also allows removing the thread and exception modules from the kernel library. \r\n\r\nTo make the `CMainSignals` class easier to use from a kernel library perspective, remove its global instantiation and adopt RAII practices.\r\n\r\n---\r\n\r\nThis PR is part of the [libbitcoinkernel project](https://github.com/bitcoin/bitcoin/issues/27587). It improves the kernel API and removes two modules from the kernel library.",
          "user": {
            "login": "TheCharlatan",
            "id": 8421793,
            "node_id": "MDQ6VXNlcjg0MjE3OTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TheCharlatan",
            "html_url": "https://github.com/TheCharlatan",
            "followers_url": "https://api.github.com/users/TheCharlatan/followers",
            "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
            "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
            "repos_url": "https://api.github.com/users/TheCharlatan/repos",
            "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 9,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28960",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28960",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28960.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28960.patch"
          },
          "created_at": "2023-11-28T16:27:42Z",
          "updated_at": "2024-01-16T14:42:43Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-13T02:34:30Z",
      "updated_at": "2024-01-13T02:34:30Z",
      "source": {
        "issue": {
          "id": 2012508541,
          "node_id": "PR_kwDOABII585gc3y_",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28948",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28948/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28948/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28948/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28948",
          "number": 28948,
          "state": "open",
          "state_reason": null,
          "title": "v3 transaction policy for anti-pinning",
          "body": "See #27463 for overall package relay tracking.\r\n\r\nDelving Bitcoin discussion thread: https://delvingbitcoin.org/t/v3-transaction-policy-for-anti-pinning/340\r\n\r\nRationale:\r\n- There are various pinning problems with RBF and our general ancestor/descendant limits. These policies help mitigate many pinning attacks and make package RBF feasible (see #28984 which implements package RBF on top of this). I would focus the most here on Rule 3 pinning. [1][2]\r\n- Switching to a cluster-based mempool (see #27677 and #28676) requires the removal of CPFP carve out, which applications depend on. V3 + package RBF + ephemeral anchors + 1-parent-1-child package relay provides an intermediate solution.\r\n\r\nV3 policy is for \"Priority Transactions.\" [3][4] It allows users to opt in to more restrictive topological limits for shared transactions, in exchange for the more robust fee-bumping abilities that offers. Even though we don't have cluster limits, we are able to treat these transactions as having as having a maximum cluster size of 2.\r\n\r\nImmediate benefits:\r\n\r\n- You can presign a transaction with 0 fees (not just 1sat/vB!) and add a fee-bump later.\r\n- Rule 3 pinning is reduced by a significant amount, since the attacker can only attach a maximum of 1000vB to your shared transaction.\r\n \r\nThis also enables some other cool things (again see #27463 for overall roadmap):\r\n- Ephemeral Anchors\r\n- Package RBF for these 1-parent-1-child packages. That means e.g. a commitment tx + child can replace another commitment tx using the child's fees.\r\n- We can transition to a \"single anchor\" universe without worrying about package limit pinning. So current users of CPFP carve out would have something else to use.\r\n- We can switch to a cluster-based mempool [5] (#27677 #28676), which removes CPFP carve out [6].\r\n\r\n[1]: Original mailing list post and discussion about RBF pinning problems https://gist.github.com/glozow/25d9662c52453bd08b4b4b1d3783b9ff, https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-January/019817.html\r\n[2]: A FAQ is \"we need this for cluster mempool, but is this still necessary afterwards?\" There are some pinning issues that are fixed here and not fully fixed in cluster mempool, so we will still want this or something similar afterward.\r\n[3]: Mailing list post for v3 https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-September/020937.html\r\n[4]: Original PR #25038 also contains a lot of the discussion\r\n[5]: https://delvingbitcoin.org/t/an-overview-of-the-cluster-mempool-proposal/393/7\r\n[6]: https://delvingbitcoin.org/t/an-overview-of-the-cluster-mempool-proposal/393#the-cpfp-carveout-rule-can-no-longer-be-supported-12",
          "user": {
            "login": "glozow",
            "id": 25183001,
            "node_id": "MDQ6VXNlcjI1MTgzMDAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/glozow",
            "html_url": "https://github.com/glozow",
            "followers_url": "https://api.github.com/users/glozow/followers",
            "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
            "organizations_url": "https://api.github.com/users/glozow/orgs",
            "repos_url": "https://api.github.com/users/glozow/repos",
            "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/glozow/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 82428251,
              "node_id": "MDU6TGFiZWw4MjQyODI1MQ==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/TX%20fees%20and%20policy",
              "name": "TX fees and policy",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 164208572,
              "node_id": "MDU6TGFiZWwxNjQyMDg1NzI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Mempool",
              "name": "Mempool",
              "color": "fef2c0",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 52,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28948",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28948.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28948.patch"
          },
          "created_at": "2023-11-27T15:17:11Z",
          "updated_at": "2024-01-16T16:28:23Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-13T02:49:26Z",
      "updated_at": "2024-01-13T02:49:26Z",
      "source": {
        "issue": {
          "id": 1995651017,
          "node_id": "PR_kwDOABII585fkNjm",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28886",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28886/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28886/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28886/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28886",
          "number": 28886,
          "state": "open",
          "state_reason": null,
          "title": "refactor: Replace sets of txiter with CTxMemPoolEntryRefs",
          "body": "Currently the mempool returns and consumes sets of multiindex iterators in its public API. A likely motivation for this over working with references to the actual values is that the multi index interface works with these iterators and not with pointers or references to the actual values.\r\n\r\nHowever, using the iterator type in the `setEntries` set provides little benefit in practice as applied currently. Its purpose, ownership, and safety semantics often remain ambiguous, and it is hardly used for actually iterating through the data structures. So replace it where possible with `CTxMemPoolEntryRef`s.\r\n\r\nSince `CTxMemPoolEntry` itself refers to its Parents and Children by `CTxMemPoolEntryRef` and not `txiter`, this allowed for an overall reduction of calls to `iterator_to`. See the [docs](https://www.boost.org/doc/libs/1_83_0/libs/multi_index/doc/tutorial/indices.html#iterator_to) on `iterator_to` for more guidance.\r\n\r\nNo change in the performance of the mempool code was observed in my benchmarks.\r\n\r\nThis also makes the goal of eliminating boost types from the headers as done in https://github.com/bitcoin/bitcoin/pull/28335 more feasible.\r\n",
          "user": {
            "login": "TheCharlatan",
            "id": 8421793,
            "node_id": "MDQ6VXNlcjg0MjE3OTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TheCharlatan",
            "html_url": "https://github.com/TheCharlatan",
            "followers_url": "https://api.github.com/users/TheCharlatan/followers",
            "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
            "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
            "repos_url": "https://api.github.com/users/TheCharlatan/repos",
            "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 13,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28886",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28886",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28886.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28886.patch"
          },
          "created_at": "2023-11-15T22:07:32Z",
          "updated_at": "2024-01-16T18:07:21Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1823506588,
      "node_id": "PRR_kwDOABII585ssICc",
      "url": null,
      "actor": null,
      "commit_id": "5da41e6f851b53d5639dc12aa3d6c308a8a8b403",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29242#pullrequestreview-1823506588",
      "submitted_at": "2024-01-16T20:00:31Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29242"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1453480372",
      "pull_request_review_id": 1823506588,
      "id": 1453480372,
      "node_id": "PRRC_kwDOABII585Wolm0",
      "diff_hunk": "@@ -0,0 +1,158 @@\n+// Copyright (c) The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_UTIL_FEEFRAC_H\n+#define BITCOIN_UTIL_FEEFRAC_H\n+\n+#include <assert.h>\n+#include <stdint.h>\n+#include <algorithm>\n+#include <compare>\n+#include <vector>\n+\n+namespace {\n+\n+inline std::pair<int64_t, uint64_t> Mul128(int64_t a, int64_t b)\n+{\n+#ifdef __SIZEOF_INT128__\n+    __int128 ret = (__int128)a * b;\n+    return {ret >> 64, ret};\n+#else\n+    uint64_t ll = (uint64_t)(uint32_t)a * (uint32_t)b;\n+    int64_t lh = (uint32_t)a * (b >> 32);\n+    int64_t hl = (a >> 32) * (uint32_t)b;\n+    int64_t hh = (a >> 32) * (b >> 32);\n+    uint64_t mid34 = (ll >> 32) + (uint32_t)lh + (uint32_t)hl;\n+    int64_t hi = hh + (lh >> 32) + (hl >> 32) + (mid34 >> 32);\n+    uint64_t lo = (mid34 << 32) + (uint32_t)ll;\n+    return {hi, lo};\n+#endif\n+}\n+\n+} // namespace\n+\n+/** Data structure storing a fee and size, ordered by increasing fee/size.\n+ *\n+ * The size of a FeeFrac cannot be zero unless the fee is also zero.\n+ *\n+ * FeeFracs have a total ordering, first by increasing feerate (ratio of fee over size), and then\n+ * by decreasing size. The empty FeeFrac (fee and size both 0) sorts last. So for example, the\n+ * following FeeFracs are in sorted order:\n+ *\n+ * - fee=0 size=1 (feerate 0)\n+ * - fee=1 size=2 (feerate 0.5)\n+ * - fee=2 size=3 (feerate 0.667...)\n+ * - fee=2 size=2 (feerate 1)\n+ * - fee=1 size=1 (feerate 1)\n+ * - fee=3 size=2 (feerate 1.5)\n+ * - fee=2 size=1 (feerate 2)\n+ * - fee=0 size=0 (undefined feerate)\n+ *\n+ * A FeeFrac is considered \"better\" if it sorts after another, by this ordering. All standard\n+ * comparison operators (==, !=, >, <, >=, <=, <=>) respect this ordering.\n+ *\n+ * The >> and << operators only compare feerate and treat equal feerate but different size as\n+ * equivalent. The empty FeeFrac is neither lower or higher in feerate than any other.\n+ * The FeeRateCompare function returns the three-way comparison for this order.\n+ */\n+struct FeeFrac\n+{\n+    /** Fee. */\n+    int64_t fee;\n+    /** Size. */\n+    int32_t size;\n+\n+    /** Construct an IsEmpty() FeeFrac. */\n+    inline FeeFrac() noexcept : fee{0}, size{0} {}\n+\n+    /** Construct a FeeFrac with specified fee and size. */\n+    inline FeeFrac(int64_t s, int32_t b) noexcept : fee{s}, size{b}\n+    {\n+        // If size==0, fee must be 0 as well.\n+        assert(size != 0 || fee == 0);\n+    }\n+\n+    inline FeeFrac(const FeeFrac&) noexcept = default;\n+    inline FeeFrac& operator=(const FeeFrac&) noexcept = default;\n+\n+    /** Check if this is empty (size and fee are 0). */\n+    bool inline IsEmpty() const noexcept {\n+        return size == 0;\n+    }\n+\n+    /** Add size and size of another FeeFrac to this one. */\n+    void inline operator+=(const FeeFrac& other) noexcept\n+    {\n+        fee += other.fee;\n+        size += other.size;\n+    }\n+\n+    /** Subtrack size and size of another FeeFrac from this one. */",
      "path": "src/util/feefrac.h",
      "position": 91,
      "original_position": 91,
      "commit_id": "5da41e6f851b53d5639dc12aa3d6c308a8a8b403",
      "original_commit_id": "ec3cf62361912a85ccd8d93abc3606df695c69ef",
      "in_reply_to_id": null,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n    /** Add fee and size of another FeeFrac to this one. */\r\n    void inline operator+=(const FeeFrac& other) noexcept\r\n    {\r\n        fee += other.fee;\r\n        size += other.size;\r\n    }\r\n\r\n    /** Subtrack fee and size of another FeeFrac from this one. */\r\n```",
      "created_at": "2024-01-16T14:09:34Z",
      "updated_at": "2024-01-16T20:00:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29242#discussion_r1453480372",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1453480372"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29242"
        }
      },
      "start_line": 84,
      "original_start_line": 84,
      "start_side": "RIGHT",
      "line": 91,
      "original_line": 91,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1453480679",
      "pull_request_review_id": 1823506588,
      "id": 1453480679,
      "node_id": "PRRC_kwDOABII585Wolrn",
      "diff_hunk": "@@ -0,0 +1,21 @@\n+// Copyright (c) The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <util/feefrac.h>\n+\n+void BuildDiagramFromUnsortedChunks(std::vector<FeeFrac>& chunks, std::vector<FeeFrac>& diagram)\n+{\n+    diagram.clear();",
      "path": "src/util/feefrac.cpp",
      "position": 9,
      "original_position": 9,
      "commit_id": "5da41e6f851b53d5639dc12aa3d6c308a8a8b403",
      "original_commit_id": "ec3cf62361912a85ccd8d93abc3606df695c69ef",
      "in_reply_to_id": null,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Reserve here?\r\n```suggestion\r\n    diagram.clear();\r\n    diagram.reserve(chunks.size() + 1);\r\n```",
      "created_at": "2024-01-16T14:09:41Z",
      "updated_at": "2024-01-16T20:00:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29242#discussion_r1453480679",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1453480679"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29242"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 9,
      "original_line": 9,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1453482107",
      "pull_request_review_id": 1823506588,
      "id": 1453482107,
      "node_id": "PRRC_kwDOABII585WomB7",
      "diff_hunk": "@@ -0,0 +1,21 @@\n+// Copyright (c) The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <util/feefrac.h>\n+\n+void BuildDiagramFromUnsortedChunks(std::vector<FeeFrac>& chunks, std::vector<FeeFrac>& diagram)\n+{\n+    diagram.clear();\n+    // Finish by sorting the chunks we calculated, and then accumulating them.\n+    std::sort(chunks.begin(), chunks.end(), [](const FeeFrac& a, const FeeFrac& b) { return a > b; });\n+\n+    // And now build the diagram for these chunks.\n+    diagram.emplace_back(0, 0);\n+    for (auto& chunk : chunks) {\n+        FeeFrac& last = diagram.back();\n+        diagram.emplace_back(last.fee+chunk.fee, last.size+chunk.size);\n+    }\n+    return;\n+}",
      "path": "src/util/feefrac.cpp",
      "position": 20,
      "original_position": 20,
      "commit_id": "5da41e6f851b53d5639dc12aa3d6c308a8a8b403",
      "original_commit_id": "ec3cf62361912a85ccd8d93abc3606df695c69ef",
      "in_reply_to_id": null,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "No need for this return here\r\n```suggestion\r\n}\r\n```",
      "created_at": "2024-01-16T14:10:20Z",
      "updated_at": "2024-01-16T20:00:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29242#discussion_r1453482107",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1453482107"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29242"
        }
      },
      "start_line": 19,
      "original_start_line": 19,
      "start_side": "RIGHT",
      "line": 20,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1453487633",
      "pull_request_review_id": 1823506588,
      "id": 1453487633,
      "node_id": "PRRC_kwDOABII585WonYR",
      "diff_hunk": "@@ -0,0 +1,158 @@\n+// Copyright (c) The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_UTIL_FEEFRAC_H\n+#define BITCOIN_UTIL_FEEFRAC_H\n+\n+#include <assert.h>\n+#include <stdint.h>\n+#include <algorithm>\n+#include <compare>\n+#include <vector>\n+\n+namespace {\n+\n+inline std::pair<int64_t, uint64_t> Mul128(int64_t a, int64_t b)\n+{\n+#ifdef __SIZEOF_INT128__\n+    __int128 ret = (__int128)a * b;\n+    return {ret >> 64, ret};\n+#else\n+    uint64_t ll = (uint64_t)(uint32_t)a * (uint32_t)b;\n+    int64_t lh = (uint32_t)a * (b >> 32);\n+    int64_t hl = (a >> 32) * (uint32_t)b;\n+    int64_t hh = (a >> 32) * (b >> 32);\n+    uint64_t mid34 = (ll >> 32) + (uint32_t)lh + (uint32_t)hl;\n+    int64_t hi = hh + (lh >> 32) + (hl >> 32) + (mid34 >> 32);\n+    uint64_t lo = (mid34 << 32) + (uint32_t)ll;\n+    return {hi, lo};\n+#endif\n+}\n+\n+} // namespace\n+\n+/** Data structure storing a fee and size, ordered by increasing fee/size.\n+ *\n+ * The size of a FeeFrac cannot be zero unless the fee is also zero.\n+ *\n+ * FeeFracs have a total ordering, first by increasing feerate (ratio of fee over size), and then\n+ * by decreasing size. The empty FeeFrac (fee and size both 0) sorts last. So for example, the\n+ * following FeeFracs are in sorted order:\n+ *\n+ * - fee=0 size=1 (feerate 0)\n+ * - fee=1 size=2 (feerate 0.5)\n+ * - fee=2 size=3 (feerate 0.667...)\n+ * - fee=2 size=2 (feerate 1)\n+ * - fee=1 size=1 (feerate 1)\n+ * - fee=3 size=2 (feerate 1.5)\n+ * - fee=2 size=1 (feerate 2)\n+ * - fee=0 size=0 (undefined feerate)\n+ *\n+ * A FeeFrac is considered \"better\" if it sorts after another, by this ordering. All standard\n+ * comparison operators (==, !=, >, <, >=, <=, <=>) respect this ordering.\n+ *\n+ * The >> and << operators only compare feerate and treat equal feerate but different size as\n+ * equivalent. The empty FeeFrac is neither lower or higher in feerate than any other.\n+ * The FeeRateCompare function returns the three-way comparison for this order.\n+ */\n+struct FeeFrac\n+{\n+    /** Fee. */\n+    int64_t fee;\n+    /** Size. */\n+    int32_t size;\n+\n+    /** Construct an IsEmpty() FeeFrac. */\n+    inline FeeFrac() noexcept : fee{0}, size{0} {}\n+\n+    /** Construct a FeeFrac with specified fee and size. */\n+    inline FeeFrac(int64_t s, int32_t b) noexcept : fee{s}, size{b}\n+    {\n+        // If size==0, fee must be 0 as well.\n+        assert(size != 0 || fee == 0);\n+    }\n+\n+    inline FeeFrac(const FeeFrac&) noexcept = default;\n+    inline FeeFrac& operator=(const FeeFrac&) noexcept = default;\n+\n+    /** Check if this is empty (size and fee are 0). */\n+    bool inline IsEmpty() const noexcept {\n+        return size == 0;\n+    }\n+\n+    /** Add size and size of another FeeFrac to this one. */\n+    void inline operator+=(const FeeFrac& other) noexcept\n+    {\n+        fee += other.fee;\n+        size += other.size;\n+    }\n+\n+    /** Subtrack size and size of another FeeFrac from this one. */\n+    void inline operator-=(const FeeFrac& other) noexcept\n+    {\n+        fee -= other.fee;\n+        size -= other.size;\n+        assert(size != 0 || fee == 0);\n+    }\n+\n+    /** Sum fee and size. */\n+    friend inline FeeFrac operator+(const FeeFrac& a, const FeeFrac& b) noexcept\n+    {\n+        return {a.fee + b.fee, a.size + b.size};\n+    }\n+\n+    /** Subtract both fee and size. */\n+    friend inline FeeFrac operator-(const FeeFrac& a, const FeeFrac& b) noexcept\n+    {\n+        return {a.fee - b.fee, a.size - b.size};\n+    }\n+\n+    /** Check if two FeeFrac objects are equal (both same fee and same size). */\n+    friend inline bool operator==(const FeeFrac& a, const FeeFrac& b) noexcept\n+    {\n+        return a.fee == b.fee && a.size == b.size;\n+    }\n+\n+    friend inline std::strong_ordering FeeRateCompare(const FeeFrac& a, const FeeFrac& b) noexcept\n+    {\n+        if (a.fee > INT32_MAX || a.fee < INT32_MIN || b.fee > INT32_MAX || b.fee < INT32_MIN) {\n+            auto a_cross = Mul128(a.fee, b.size);\n+            auto b_cross = Mul128(b.fee, a.size);\n+            return a_cross <=> b_cross;\n+        } else {\n+            auto a_cross = a.fee * b.size;\n+            auto b_cross = b.fee * a.size;\n+            return a_cross <=> b_cross;\n+        }\n+    }\n+\n+    friend inline std::strong_ordering operator<=>(const FeeFrac& a, const FeeFrac& b) noexcept\n+    {\n+        auto feerate_cmp = FeeRateCompare(a, b);\n+        if (feerate_cmp != 0) return feerate_cmp; // NOLINT(modernize-use-nullptr)\n+        return b.size <=> a.size;\n+    }\n+\n+    /** Check if a FeeFrac object has strictly lower feerate than another. */\n+    friend inline bool operator<<(const FeeFrac& a, const FeeFrac& b) noexcept\n+    {\n+        return FeeRateCompare(a, b) < 0; // NOLINT(modernize-use-nullptr)\n+    }\n+\n+    /** Check if a FeeFrac object has strictly higher feerate than another. */\n+    friend inline bool operator>>(const FeeFrac& a, const FeeFrac& b) noexcept\n+    {\n+        return FeeRateCompare(a, b) > 0; // NOLINT(modernize-use-nullptr)\n+    }\n+\n+    friend inline void swap(FeeFrac& a, FeeFrac& b) noexcept\n+    {\n+        std::swap(a.fee, b.fee);\n+        std::swap(a.size, b.size);\n+    }\n+};\n+\n+void BuildDiagramFromUnsortedChunks(std::vector<FeeFrac>& chunks, std::vector<FeeFrac>& diagram);",
      "path": "src/util/feefrac.h",
      "position": 156,
      "original_position": 156,
      "commit_id": "5da41e6f851b53d5639dc12aa3d6c308a8a8b403",
      "original_commit_id": "ec3cf62361912a85ccd8d93abc3606df695c69ef",
      "in_reply_to_id": null,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe add a docstring on what `BuildDiagramFromUnsortedChunks` does in and out params description that are doxygen compatible?",
      "created_at": "2024-01-16T14:14:22Z",
      "updated_at": "2024-01-16T20:00:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29242#discussion_r1453487633",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1453487633"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29242"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 156,
      "original_line": 156,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1453501485",
      "pull_request_review_id": 1823506588,
      "id": 1453501485,
      "node_id": "PRRC_kwDOABII585Woqwt",
      "diff_hunk": "@@ -0,0 +1,126 @@\n+// Copyright (c) 2016-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <util/feefrac.h>\n+#include <random.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_AUTO_TEST_SUITE(feefrac_tests)\n+\n+BOOST_AUTO_TEST_CASE(feefrac_operators)\n+{\n+    FeeFrac p1{1000, 100}, p2{500, 300};\n+    FeeFrac sum{1500, 400};\n+    FeeFrac diff{500, -200};\n+    FeeFrac empty{0, 0};",
      "path": "src/test/feefrac_tests.cpp",
      "position": 17,
      "original_position": 17,
      "commit_id": "5da41e6f851b53d5639dc12aa3d6c308a8a8b403",
      "original_commit_id": "8d74a28a62083bbbee1fd6a2dee56994f293a61a",
      "in_reply_to_id": null,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: we can just use the empty constructor\r\n```suggestion\r\n    FeeFrac empty{};\r\n```",
      "created_at": "2024-01-16T14:24:35Z",
      "updated_at": "2024-01-16T20:00:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29242#discussion_r1453501485",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1453501485"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29242"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 17,
      "original_line": 17,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1453502118",
      "pull_request_review_id": 1823506588,
      "id": 1453502118,
      "node_id": "PRRC_kwDOABII585Woq6m",
      "diff_hunk": "@@ -0,0 +1,126 @@\n+// Copyright (c) 2016-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <util/feefrac.h>\n+#include <random.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_AUTO_TEST_SUITE(feefrac_tests)\n+\n+BOOST_AUTO_TEST_CASE(feefrac_operators)\n+{\n+    FeeFrac p1{1000, 100}, p2{500, 300};\n+    FeeFrac sum{1500, 400};\n+    FeeFrac diff{500, -200};",
      "path": "src/test/feefrac_tests.cpp",
      "position": 16,
      "original_position": 16,
      "commit_id": "5da41e6f851b53d5639dc12aa3d6c308a8a8b403",
      "original_commit_id": "8d74a28a62083bbbee1fd6a2dee56994f293a61a",
      "in_reply_to_id": null,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "why can we have negative size ?",
      "created_at": "2024-01-16T14:25:01Z",
      "updated_at": "2024-01-16T20:00:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29242#discussion_r1453502118",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1453502118"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29242"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 16,
      "original_line": 16,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1453604924",
      "pull_request_review_id": 1823506588,
      "id": 1453604924,
      "node_id": "PRRC_kwDOABII585WpEA8",
      "diff_hunk": "@@ -1248,3 +1249,121 @@ std::vector<CTxMemPool::txiter> CTxMemPool::GatherClusters(const std::vector<uin\n     }\n     return clustered_txs;\n }\n+\n+std::optional<std::string> CTxMemPool::CheckConflictTopology(const setEntries& direct_conflicts)\n+{\n+    for (const auto& direct_conflict : direct_conflicts) {\n+        // Ancestor and descendant counts are inclusive of the tx itself.\n+        const auto ancestor_count{direct_conflict->GetCountWithAncestors()};\n+        const auto descendant_count{direct_conflict->GetCountWithDescendants()};\n+        const bool has_ancestor{ancestor_count > 1};\n+        const bool has_descendant{descendant_count > 1};\n+        const auto& txid_string{direct_conflict->GetSharedTx()->GetHash().ToString()};\n+        // The only allowed configurations are:\n+        // 1 ancestor and 0 descendant\n+        // 0 ancestor and 1 descendant\n+        // 0 ancestor and 0 descendant\n+        if (ancestor_count > 2) {\n+            return strprintf(\"%s has %u ancestors, max 1 allowed\", ancestor_count, txid_string);\n+        } else if (descendant_count > 2) {\n+            return strprintf(\"%s has %u descendants, max 1 allowed\", ancestor_count, txid_string);\n+        } else if (has_ancestor && has_descendant) {\n+            return strprintf(\"%s has both ancestor and descendant\", txid_string);\n+        }\n+        // Additionally enforce that:\n+        // If we have a parent, we are its only child.\n+        // If we have a child,  we are its only parent.\n+        if (has_descendant) {\n+            const auto& our_child = direct_conflict->GetMemPoolChildrenConst().begin();\n+            if (our_child->get().GetCountWithAncestors() > 2) {\n+                return strprintf(\"%s is not the only parent of child %s\",\n+                                 txid_string, our_child->get().GetSharedTx()->GetHash().ToString());\n+            }\n+        } else if (has_ancestor) {\n+            const auto& our_parent = direct_conflict->GetMemPoolParentsConst().begin();\n+            if (our_parent->get().GetCountWithDescendants() > 2) {\n+                return strprintf(\"%s is not the only child of parent %s\",\n+                                 txid_string, our_parent->get().GetSharedTx()->GetHash().ToString());\n+            }\n+        }\n+    }\n+    return std::nullopt;\n+}\n+\n+std::optional<std::string> CTxMemPool::CalculateFeerateDiagramsForRBF(CAmount replacement_fees, int64_t replacement_vsize, const setEntries& direct_conflicts, const setEntries& all_conflicts, std::vector<FeeFrac>& old_diagram, std::vector<FeeFrac>& new_diagram)\n+{\n+    auto err_string{CheckConflictTopology(direct_conflicts)};\n+    if (err_string.has_value()) {\n+        // Unsupported topology for calculating a feerate diagram\n+        return err_string;\n+    }\n+\n+    // new_diagram will have chunks that consist of each ancestor of\n+    // direct_conflicts that is at its own fee/size, along with the replacement\n+    // tx/package at its own fee/size\n+\n+    // old diagram will consist of each element of direct_conflicts either at",
      "path": "src/txmempool.cpp",
      "position": 65,
      "original_position": 65,
      "commit_id": "5da41e6f851b53d5639dc12aa3d6c308a8a8b403",
      "original_commit_id": "ab9a952bdd1406a4fc9fa71c63e6fbecb78d0a4b",
      "in_reply_to_id": null,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think you mean `all_conflicts` here\r\n```suggestion\r\n    // old diagram will consist of each element of all_conflicts either at\r\n```",
      "created_at": "2024-01-16T15:36:53Z",
      "updated_at": "2024-01-16T20:00:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29242#discussion_r1453604924",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1453604924"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29242"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1305,
      "original_line": 1305,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1453612523",
      "pull_request_review_id": 1823506588,
      "id": 1453612523,
      "node_id": "PRRC_kwDOABII585WpF3r",
      "diff_hunk": "@@ -1248,3 +1249,121 @@ std::vector<CTxMemPool::txiter> CTxMemPool::GatherClusters(const std::vector<uin\n     }\n     return clustered_txs;\n }\n+\n+std::optional<std::string> CTxMemPool::CheckConflictTopology(const setEntries& direct_conflicts)\n+{\n+    for (const auto& direct_conflict : direct_conflicts) {\n+        // Ancestor and descendant counts are inclusive of the tx itself.\n+        const auto ancestor_count{direct_conflict->GetCountWithAncestors()};\n+        const auto descendant_count{direct_conflict->GetCountWithDescendants()};\n+        const bool has_ancestor{ancestor_count > 1};\n+        const bool has_descendant{descendant_count > 1};\n+        const auto& txid_string{direct_conflict->GetSharedTx()->GetHash().ToString()};\n+        // The only allowed configurations are:\n+        // 1 ancestor and 0 descendant\n+        // 0 ancestor and 1 descendant\n+        // 0 ancestor and 0 descendant\n+        if (ancestor_count > 2) {\n+            return strprintf(\"%s has %u ancestors, max 1 allowed\", ancestor_count, txid_string);\n+        } else if (descendant_count > 2) {\n+            return strprintf(\"%s has %u descendants, max 1 allowed\", ancestor_count, txid_string);\n+        } else if (has_ancestor && has_descendant) {\n+            return strprintf(\"%s has both ancestor and descendant\", txid_string);\n+        }\n+        // Additionally enforce that:\n+        // If we have a parent, we are its only child.\n+        // If we have a child,  we are its only parent.\n+        if (has_descendant) {\n+            const auto& our_child = direct_conflict->GetMemPoolChildrenConst().begin();\n+            if (our_child->get().GetCountWithAncestors() > 2) {\n+                return strprintf(\"%s is not the only parent of child %s\",\n+                                 txid_string, our_child->get().GetSharedTx()->GetHash().ToString());\n+            }\n+        } else if (has_ancestor) {\n+            const auto& our_parent = direct_conflict->GetMemPoolParentsConst().begin();\n+            if (our_parent->get().GetCountWithDescendants() > 2) {\n+                return strprintf(\"%s is not the only child of parent %s\",\n+                                 txid_string, our_parent->get().GetSharedTx()->GetHash().ToString());\n+            }\n+        }\n+    }\n+    return std::nullopt;\n+}\n+\n+std::optional<std::string> CTxMemPool::CalculateFeerateDiagramsForRBF(CAmount replacement_fees, int64_t replacement_vsize, const setEntries& direct_conflicts, const setEntries& all_conflicts, std::vector<FeeFrac>& old_diagram, std::vector<FeeFrac>& new_diagram)\n+{\n+    auto err_string{CheckConflictTopology(direct_conflicts)};\n+    if (err_string.has_value()) {\n+        // Unsupported topology for calculating a feerate diagram\n+        return err_string;\n+    }\n+\n+    // new_diagram will have chunks that consist of each ancestor of\n+    // direct_conflicts that is at its own fee/size, along with the replacement\n+    // tx/package at its own fee/size\n+\n+    // old diagram will consist of each element of direct_conflicts either at\n+    // its own feerate (followed by any descendant at its own feerate) or as a\n+    // single chunk at its descendant's ancestor feerate.\n+\n+    std::vector<FeeFrac> old_chunks;\n+    // Step 1: build the old diagram.\n+\n+    // The above clusters are all trivially linearized;\n+    // they have a strict topology of 1 or two connected transactions.\n+\n+    // Compute OLD chunks for all clusters\n+    for (auto txiter : all_conflicts) {\n+        // Does this transaction have descendants?\n+        if (txiter->GetCountWithDescendants() > 1) {\n+            // Consider this tx when we consider the descendant.\n+            continue;\n+        }\n+        // Does this transaction have ancestors?\n+        FeeFrac individual{txiter->GetModifiedFee(), txiter->GetTxSize()};\n+        if (txiter->GetCountWithAncestors() > 1) {\n+            // We'll add chunks for either the ancestor by itself and this tx\n+            // by itself, or for a combined package.\n+            FeeFrac package{txiter->GetModFeesWithAncestors(), int32_t(txiter->GetSizeWithAncestors())};",
      "path": "src/txmempool.cpp",
      "position": 87,
      "original_position": 87,
      "commit_id": "5da41e6f851b53d5639dc12aa3d6c308a8a8b403",
      "original_commit_id": "ab9a952bdd1406a4fc9fa71c63e6fbecb78d0a4b",
      "in_reply_to_id": null,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "use static cast?\r\n```suggestion\r\n            FeeFrac package{txiter->GetModFeesWithAncestors(), static_cast<int32_t>(txiter->GetSizeWithAncestors())};\r\n```",
      "created_at": "2024-01-16T15:42:19Z",
      "updated_at": "2024-01-16T20:00:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29242#discussion_r1453612523",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1453612523"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29242"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1327,
      "original_line": 1327,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1453626393",
      "pull_request_review_id": 1823506588,
      "id": 1453626393,
      "node_id": "PRRC_kwDOABII585WpJQZ",
      "diff_hunk": "@@ -1248,3 +1249,121 @@ std::vector<CTxMemPool::txiter> CTxMemPool::GatherClusters(const std::vector<uin\n     }\n     return clustered_txs;\n }\n+\n+std::optional<std::string> CTxMemPool::CheckConflictTopology(const setEntries& direct_conflicts)\n+{\n+    for (const auto& direct_conflict : direct_conflicts) {\n+        // Ancestor and descendant counts are inclusive of the tx itself.\n+        const auto ancestor_count{direct_conflict->GetCountWithAncestors()};\n+        const auto descendant_count{direct_conflict->GetCountWithDescendants()};\n+        const bool has_ancestor{ancestor_count > 1};\n+        const bool has_descendant{descendant_count > 1};\n+        const auto& txid_string{direct_conflict->GetSharedTx()->GetHash().ToString()};\n+        // The only allowed configurations are:\n+        // 1 ancestor and 0 descendant\n+        // 0 ancestor and 1 descendant\n+        // 0 ancestor and 0 descendant\n+        if (ancestor_count > 2) {\n+            return strprintf(\"%s has %u ancestors, max 1 allowed\", ancestor_count, txid_string);\n+        } else if (descendant_count > 2) {\n+            return strprintf(\"%s has %u descendants, max 1 allowed\", ancestor_count, txid_string);\n+        } else if (has_ancestor && has_descendant) {\n+            return strprintf(\"%s has both ancestor and descendant\", txid_string);\n+        }\n+        // Additionally enforce that:\n+        // If we have a parent, we are its only child.\n+        // If we have a child,  we are its only parent.\n+        if (has_descendant) {\n+            const auto& our_child = direct_conflict->GetMemPoolChildrenConst().begin();\n+            if (our_child->get().GetCountWithAncestors() > 2) {\n+                return strprintf(\"%s is not the only parent of child %s\",\n+                                 txid_string, our_child->get().GetSharedTx()->GetHash().ToString());\n+            }\n+        } else if (has_ancestor) {\n+            const auto& our_parent = direct_conflict->GetMemPoolParentsConst().begin();\n+            if (our_parent->get().GetCountWithDescendants() > 2) {\n+                return strprintf(\"%s is not the only child of parent %s\",\n+                                 txid_string, our_parent->get().GetSharedTx()->GetHash().ToString());\n+            }\n+        }\n+    }\n+    return std::nullopt;\n+}\n+\n+std::optional<std::string> CTxMemPool::CalculateFeerateDiagramsForRBF(CAmount replacement_fees, int64_t replacement_vsize, const setEntries& direct_conflicts, const setEntries& all_conflicts, std::vector<FeeFrac>& old_diagram, std::vector<FeeFrac>& new_diagram)\n+{\n+    auto err_string{CheckConflictTopology(direct_conflicts)};\n+    if (err_string.has_value()) {\n+        // Unsupported topology for calculating a feerate diagram\n+        return err_string;\n+    }\n+\n+    // new_diagram will have chunks that consist of each ancestor of\n+    // direct_conflicts that is at its own fee/size, along with the replacement\n+    // tx/package at its own fee/size\n+\n+    // old diagram will consist of each element of direct_conflicts either at\n+    // its own feerate (followed by any descendant at its own feerate) or as a\n+    // single chunk at its descendant's ancestor feerate.\n+\n+    std::vector<FeeFrac> old_chunks;\n+    // Step 1: build the old diagram.\n+\n+    // The above clusters are all trivially linearized;\n+    // they have a strict topology of 1 or two connected transactions.\n+\n+    // Compute OLD chunks for all clusters\n+    for (auto txiter : all_conflicts) {\n+        // Does this transaction have descendants?\n+        if (txiter->GetCountWithDescendants() > 1) {\n+            // Consider this tx when we consider the descendant.\n+            continue;\n+        }\n+        // Does this transaction have ancestors?\n+        FeeFrac individual{txiter->GetModifiedFee(), txiter->GetTxSize()};\n+        if (txiter->GetCountWithAncestors() > 1) {\n+            // We'll add chunks for either the ancestor by itself and this tx\n+            // by itself, or for a combined package.\n+            FeeFrac package{txiter->GetModFeesWithAncestors(), int32_t(txiter->GetSizeWithAncestors())};\n+            if (individual > package) {\n+                // The individual feerate is higher than the package, and\n+                // therefore higher than the parent's fee. Chunk these\n+                // together.\n+                old_chunks.emplace_back(package);\n+            } else {\n+                // Add two points, one for the parent and one for this child.\n+                old_chunks.emplace_back(package-individual);\n+                old_chunks.emplace_back(individual);\n+            }\n+        } else {\n+            old_chunks.emplace_back(individual);\n+        }\n+    }\n+\n+    // No topology restrictions post-chunking; sort\n+    BuildDiagramFromUnsortedChunks(old_chunks, old_diagram);\n+\n+    std::vector<FeeFrac> new_chunks;\n+\n+    // Step 2: build the NEW = OLD - CON + CNK diagram\n+\n+    // OLD - CON: Any parents of direct conflicts that are not conflicted themselves\n+    for (auto direct_conflict : direct_conflicts) {\n+        // If a direct conflict has an ancestor that is not in all_conflicts,\n+        // it can be affected by the replacement of the child.\n+        if (direct_conflict->GetMemPoolParentsConst().size() > 0) {\n+            // Grab the parent.\n+            const CTxMemPoolEntry& parent = direct_conflict->GetMemPoolParentsConst().begin()->get();\n+            if (!all_conflicts.count(mapTx.iterator_to(parent))) {\n+                // This transaction would be left over, so add to the new\n+                // diagram.\n+                new_chunks.emplace_back(parent.GetModifiedFee(), parent.GetTxSize());\n+            }\n+        }\n+    }\n+    // + CNK\n+    new_chunks.emplace_back(replacement_fees, int32_t(replacement_vsize));",
      "path": "src/txmempool.cpp",
      "position": 125,
      "original_position": 125,
      "commit_id": "5da41e6f851b53d5639dc12aa3d6c308a8a8b403",
      "original_commit_id": "ab9a952bdd1406a4fc9fa71c63e6fbecb78d0a4b",
      "in_reply_to_id": null,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I understand what happens here but its a bit confusing to me the short forms `CON`, `CNK` `DIAGRAM`\r\nWill prefer something like the compute in computing the `OLD` chunk\r\n\r\n```suggestion\r\n    // Step 2: build the new diagram\r\n\r\n    // Add any parents of direct conflicts that are not conflicted themselves into the NEW chunk\r\n    for (auto direct_conflict : direct_conflicts) {\r\n        // If a direct conflict has an ancestor that is not in all_conflicts,\r\n        // it can be affected by the replacement of the child.\r\n        if (direct_conflict->GetMemPoolParentsConst().size() > 0) {\r\n            // Grab the parent.\r\n            const CTxMemPoolEntry& parent = direct_conflict->GetMemPoolParentsConst().begin()->get();\r\n            if (!all_conflicts.count(mapTx.iterator_to(parent))) {\r\n                // This transaction would be left over, so add to the NEW\r\n                // chunk.\r\n                new_chunks.emplace_back(parent.GetModifiedFee(), parent.GetTxSize());\r\n            }\r\n        }\r\n    }\r\n    // Add the replacement package to NEW\r\n    new_chunks.emplace_back(replacement_fees, int32_t(replacement_vsize));\r\n```",
      "created_at": "2024-01-16T15:52:23Z",
      "updated_at": "2024-01-16T20:00:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29242#discussion_r1453626393",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1453626393"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29242"
        }
      },
      "start_line": 1348,
      "original_start_line": 1348,
      "start_side": "RIGHT",
      "line": 1365,
      "original_line": 1365,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1453667765",
      "pull_request_review_id": 1823506588,
      "id": 1453667765,
      "node_id": "PRRC_kwDOABII585WpTW1",
      "diff_hunk": "@@ -181,3 +201,108 @@ std::optional<std::string> PaysForRBF(CAmount original_fees,\n     }\n     return std::nullopt;\n }\n+\n+// Compare two feerate points, where one of the points is interpolated from\n+// existing points in a feerate diagram.\n+// Return 1 if the interpolated point is greater than fee_compare; 0 if they\n+// are equal; -1 otherwise.\n+int InterpolateValueAndCompare(int64_t eval_size, const FeeFrac& p1, const FeeFrac& p2, CAmount fee_compare)\n+{\n+    // Interpolate between two points using the formula:\n+    // y = y1 + (x - x1) * (y2 - y1) / (x2 - x1)\n+    // i.e.\n+    // y = p1.fee + (eval_size - p1.size) * (p2.fee - p1.fee) / (p2.size - p2.size)\n+    // fee_compare = fee value we want to compare against the interpolated y\n+    //\n+    // Then evaluating y > fee_compare is equivalent to checking if y*(x2-x1) > fee_compare*(x2-x1),\n+    // or y1*(x2-x1) + (x - x1) * (y2 - y1) > fee_compare*(x2-x1).\n+    const auto fee_compare_scaled = Mul128(fee_compare, p2.size - p1.size);\n+    const auto y_scaled = Add128(Mul128(p1.fee, p2.size - p1.size), Mul128(eval_size - p1.size , p2.fee - p1.fee));\n+\n+    if (y_scaled > fee_compare_scaled) {\n+        return 1;\n+    } else if (y_scaled == fee_compare_scaled) {\n+        return 0;\n+    } else {\n+        return -1;\n+    }\n+}\n+\n+// returns true if the new_diagram is strictly better than the old one; false\n+// otherwise.\n+bool CompareFeerateDiagram(std::vector<FeeFrac>& old_diagram, std::vector<FeeFrac>& new_diagram)\n+{\n+    size_t old_index=0;\n+    size_t new_index=0;\n+\n+    // whether the new diagram has at least one point better than old_diagram\n+    bool new_better = false;\n+\n+    // whether the old diagram has at least one point better than new_diagram\n+    bool old_better = false;\n+\n+    // Diagrams should be non-empty, and first elements zero in size and fee\n+    Assert(!old_diagram.empty() && !new_diagram.empty());\n+    Assert(old_diagram[0].fee == 0 && old_diagram[0].size == 0);\n+    Assert(new_diagram[0].fee == 0 && new_diagram[0].size == 0);\n+\n+    // Start by padding the smaller diagram with a transaction that pays the\n+    // tail feerate up to the size of the larger diagram.\n+    // For now, use an implicit tail feerate of 0, but we can change this if\n+    // there's an argument to be made that the true tail feerate is higher.\n+    // Also, if we end up needing to transform the feerates (eg to avoid\n+    // negative numbers or overflow in the calculations?), then the tail\n+    // feerate would need to be transformed as well.\n+    if (old_diagram.back().size < new_diagram.back().size) {\n+        old_diagram.emplace_back(old_diagram.back().fee, new_diagram.back().size);\n+    } else if (old_diagram.back().size > new_diagram.back().size) {\n+        new_diagram.emplace_back(new_diagram.back().fee, old_diagram.back().size);\n+    }\n+\n+    while (old_index < old_diagram.size() && new_index < new_diagram.size()) {\n+        int cmp = 0;\n+        if (old_diagram[old_index].size < new_diagram[new_index].size) {\n+            cmp = InterpolateValueAndCompare(old_diagram[old_index].size, new_diagram[new_index-1], new_diagram[new_index], old_diagram[old_index].fee);\n+            old_better |= (cmp == -1);\n+            new_better |= (cmp == 1);\n+            old_index++;\n+        } else if (old_diagram[old_index].size > new_diagram[new_index].size) {\n+            cmp = InterpolateValueAndCompare(new_diagram[new_index].size, old_diagram[old_index-1], old_diagram[old_index], new_diagram[new_index].fee);\n+            old_better |= (cmp == 1);\n+            new_better |= (cmp == -1);\n+            new_index++;\n+        } else {\n+            if (old_diagram[old_index].fee > new_diagram[new_index].fee) {\n+                old_better = true;\n+            } else if (old_diagram[old_index].fee < new_diagram[new_index].fee) {\n+                new_better = true;\n+            }\n+            old_index++;\n+            new_index++;\n+        }\n+    }\n+\n+    // New is better at least one point, and at least as good on all points; we'll take it\n+    return new_better && !old_better;\n+}\n+\n+std::optional<std::string> ImprovesFeerateDiagram(CTxMemPool& pool,\n+                                                const CTxMemPool::setEntries& direct_conflicts,\n+                                                const CTxMemPool::setEntries& all_conflicts,\n+                                                int64_t replacement_vsize,\n+                                                CAmount replacement_fees)\n+{\n+    // Require that the replacement strictly improve the mempool's fee vs. size diagram.\n+    std::vector<FeeFrac> old_diagram, new_diagram;\n+\n+    const auto err_string{pool.CalculateFeerateDiagramsForRBF(replacement_fees, replacement_vsize, direct_conflicts, all_conflicts, old_diagram, new_diagram)};\n+\n+    if (err_string.has_value()) {\n+        return strprintf(\"unable to compute mining score\");\n+    }\n+\n+    if (!CompareFeerateDiagram(old_diagram, new_diagram)) {\n+        return strprintf(\"insufficient feerate\");\n+    }",
      "path": "src/policy/rbf.cpp",
      "position": 133,
      "original_position": 133,
      "commit_id": "5da41e6f851b53d5639dc12aa3d6c308a8a8b403",
      "original_commit_id": "ab9a952bdd1406a4fc9fa71c63e6fbecb78d0a4b",
      "in_reply_to_id": null,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Should forward the detailed error message also?",
      "created_at": "2024-01-16T16:23:36Z",
      "updated_at": "2024-01-16T20:00:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29242#discussion_r1453667765",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1453667765"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29242"
        }
      },
      "start_line": 300,
      "original_start_line": 300,
      "start_side": "RIGHT",
      "line": 306,
      "original_line": 306,
      "side": "RIGHT"
    }
  ]
}