{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973",
    "id": 133584560,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTMzNTg0NTYw",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10973",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/10973.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/10973.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10973",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10973/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/d358466de15ef29c1d2bccb9aebab360d574d1d0",
    "number": 10973,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "Refactor: separate wallet from node",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This PR is the last in a chain of PRs (#14437, #14711, and #15288) that make the wallet code access node state through an abstract [`Chain`](https://github.com/ryanofsky/bitcoin/blob/pr/wipc-sep/src/interfaces/chain.h) class in [`src/interfaces/`](https://github.com/ryanofsky/bitcoin/tree/pr/wipc-sep/src/interfaces) instead of using global variables like `cs_main`, `chainActive`, and `g_connman`. After this PR, wallet code no longer accesses global variables declared outside the wallet directory, and no longer calls functions accessing those globals (as verified by the `hide-globals` script in #10244).\r\n\r\nThis PR and the previous PRs have been refactoring changes that do not affect behavior. Previous PRs have consisted of lots of mechanical changes like:\r\n\r\n```diff\r\n-    wtx.nTimeReceived = GetAdjustedTime();\r\n+    wtx.nTimeReceived = m_chain->getAdjustedTime();\r\n```\r\n\r\nThis PR is smaller, but less mechanical. It replaces last few bits of wallet code that access node state directly (through `CValidationInterface`, `CRPCTable`, and `CCoinsViewMemPool` interfaces) with code that uses the `Chain` interface.\r\n\r\nThese changes allow followup PR #10102 (multiprocess gui & wallet PR) to work without any significant updates to wallet code. Additionally they:\r\n\r\n* Provide a single place to describe the interface between wallet and node code.\r\n* Can make better wallet testing possible, because the `Chain` object consists of virtual methods that can be overloaded for mocking. (This could be used to test edge cases in the rescan code, for example).",
    "labels": [
      {
        "id": 135961,
        "node_id": "MDU6TGFiZWwxMzU5NjE=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
        "name": "Refactoring",
        "color": "E6F6D6",
        "default": false
      },
      {
        "id": 149424,
        "node_id": "MDU6TGFiZWwxNDk0MjQ=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
        "name": "Wallet",
        "color": "08a781",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2017-08-01T22:17:26Z",
    "updated_at": "2021-12-16T14:06:43Z",
    "closed_at": "2019-03-21T07:59:20Z",
    "mergeable_state": "unknown",
    "merged_at": "2019-03-21T07:59:20Z",
    "merge_commit_sha": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "ryanofsky:pr/wipc-sep",
      "ref": "pr/wipc-sep",
      "sha": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 69901633,
        "node_id": "MDEwOlJlcG9zaXRvcnk2OTkwMTYzMw==",
        "name": "bitcoin",
        "full_name": "ryanofsky/bitcoin",
        "owner": {
          "login": "ryanofsky",
          "id": 7133040,
          "node_id": "MDQ6VXNlcjcxMzMwNDA=",
          "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/ryanofsky",
          "html_url": "https://github.com/ryanofsky",
          "followers_url": "https://api.github.com/users/ryanofsky/followers",
          "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
          "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
          "repos_url": "https://api.github.com/users/ryanofsky/repos",
          "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/ryanofsky/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/ryanofsky/bitcoin",
        "archive_url": "https://api.github.com/repos/ryanofsky/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/ryanofsky/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/ryanofsky/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/ryanofsky/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/ryanofsky/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/ryanofsky/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/ryanofsky/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/ryanofsky/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/ryanofsky/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/ryanofsky/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/ryanofsky/bitcoin/events",
        "forks_url": "https://api.github.com/repos/ryanofsky/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/ryanofsky/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/ryanofsky/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/ryanofsky/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/ryanofsky/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/ryanofsky/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/ryanofsky/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/ryanofsky/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/ryanofsky/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/ryanofsky/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/ryanofsky/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/ryanofsky/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/ryanofsky/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:ryanofsky/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/ryanofsky/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/ryanofsky/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/ryanofsky/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/ryanofsky/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/ryanofsky/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/ryanofsky/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/ryanofsky/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/ryanofsky/bitcoin/hooks",
        "svn_url": "https://github.com/ryanofsky/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 8,
        "stargazers_count": 9,
        "watchers_count": 9,
        "size": 231874,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-02T12:07:52Z",
        "created_at": "2016-10-03T19:05:43Z",
        "updated_at": "2023-07-28T06:57:01Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "81f732bcaa30edcc16a0d85e3d56e7a1d4845ae1",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35475,
        "stargazers_count": 70607,
        "watchers_count": 70607,
        "size": 236222,
        "default_branch": "master",
        "open_issues_count": 669,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-02T16:28:18Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-08-02T16:22:48Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 373,
    "deletions": 137,
    "changed_files": 22,
    "commits": 4,
    "review_comments": 136,
    "comments": 35
  },
  "events": [
    {
      "event": "head_ref_force_pushed",
      "id": 1189271208,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTE4OTI3MTIwOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1189271208",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-08-02T10:22:36Z"
    },
    {
      "event": "referenced",
      "id": 1189403546,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDExODk0MDM1NDY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1189403546",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "dd4896e35b12425f41a5755c7c446641818c8da2",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/dd4896e35b12425f41a5755c7c446641818c8da2",
      "created_at": "2017-08-02T12:03:26Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-08-02T12:06:22Z",
      "updated_at": "2017-08-02T12:06:22Z",
      "source": {
        "issue": {
          "id": 247366222,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MTMzNjkxMDY4",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10976",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10976/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10976/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10976/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/10976",
          "number": 10976,
          "state": "closed",
          "state_reason": null,
          "title": "[MOVEONLY] Move some static functions out of wallet.h/cpp",
          "body": "This just moves some static wallet fee and init functions out of `wallet/wallet.cpp` and into new `wallet/fees.cpp` and `wallet/init.cpp` source files. There is one commit updating declarations and callers, followed by two MOVEONLY commits actually moving the function bodies.\r\n\r\nThis change is desirable because wallet.h/cpp are monolithic and hard to navigate, so pulling things out and grouping together pieces of related functionality should improve the organization.\r\n\r\nAnother motivation is the wallet process separation work in https://github.com/bitcoin/bitcoin/pull/10973, where (at least initially) parameter parsing and fee estimation are still done in the main process rather than the wallet process, and having functions that run in different processes scrambled up throughout wallet.cpp is unnecessarily confusing.",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 14,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10976",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/10976",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/10976.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/10976.patch"
          },
          "closed_at": "2017-08-25T19:31:47Z",
          "created_at": "2017-08-02T12:06:22Z",
          "updated_at": "2022-02-15T10:25:45Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 319920836,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTkyMDgzNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/319920836",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-08-03T09:41:03Z",
      "updated_at": "2017-08-03T09:41:03Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#issuecomment-319920836",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10973"
    },
    {
      "event": "labeled",
      "id": 1191073427,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDExOTEwNzM0Mjc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1191073427",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-08-03T09:41:09Z",
      "label": {
        "name": "Wallet",
        "color": "02d7e1"
      }
    },
    {
      "event": "labeled",
      "id": 1191073558,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDExOTEwNzM1NTg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1191073558",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-08-03T09:41:15Z",
      "label": {
        "name": "Refactoring",
        "color": "E6F6D6"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-08-08T08:18:21Z",
      "updated_at": "2017-08-08T08:18:21Z",
      "source": {
        "issue": {
          "id": 248172912,
          "node_id": "MDU6SXNzdWUyNDgxNzI5MTI=",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10992",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10992/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10992/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10992/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/10992",
          "number": 10992,
          "state": "closed",
          "state_reason": "completed",
          "title": "[Qt] import* rescans are not abortable and can confuse users",
          "body": "When importing something with any of the `import*` commands from the qt debug window console, a progress bar appears which is uncancelable and unminimizable. Furthermore, trying to close the progress bar window simply makes it disappear, and then shortly appear again. This behavior is clearly seen in the gif below.\r\n\r\n![peek 2017-08-05 01-39](https://user-images.githubusercontent.com/3782274/28994277-09a101c2-797f-11e7-8b3c-2ed7d27a66c5.gif)\r\n\r\nRescanning also completely locks up the GUI and nothing else can be done.\r\n\r\nSince there is an `abortrescan` RPC command, there should be some way to abort a rescan now through the progress bar dialog that appears, either with an additional button, or by clicking the X to close it.",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135946,
              "node_id": "MDU6TGFiZWwxMzU5NDY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/GUI",
              "name": "GUI",
              "color": "02d7e1",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 3,
          "closed_at": "2018-06-29T19:02:33Z",
          "created_at": "2017-08-05T08:45:54Z",
          "updated_at": "2021-09-08T12:30:05Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1205336555,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTIwNTMzNjU1NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1205336555",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-08-14T18:59:18Z"
    },
    {
      "event": "renamed",
      "id": 1205336950,
      "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50MTIwNTMzNjk1MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1205336950",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-08-14T18:59:33Z",
      "rename": {
        "from": "WIP: Add IPC layer between node and wallet",
        "to": "Add IPC layer between node and wallet"
      }
    },
    {
      "event": "referenced",
      "id": 1205472499,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDEyMDU0NzI0OTk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1205472499",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "d97fe2016cc7739929aac5c44de5037163b17ad0",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/d97fe2016cc7739929aac5c44de5037163b17ad0",
      "created_at": "2017-08-14T20:28:38Z"
    },
    {
      "event": "referenced",
      "id": 1205922560,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDEyMDU5MjI1NjA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1205922560",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "eedffefa63e072bc64a11ac67e9a85b8bf03e8bf",
      "commit_url": "https://api.github.com/repos/practicalswift/bitcoin/commits/eedffefa63e072bc64a11ac67e9a85b8bf03e8bf",
      "created_at": "2017-08-15T05:00:54Z"
    },
    {
      "event": "referenced",
      "id": 1206072449,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDEyMDYwNzI0NDk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1206072449",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "9c5bca3091ae2f3d9e1de034ecbce6a14931650b",
      "commit_url": "https://api.github.com/repos/practicalswift/bitcoin/commits/9c5bca3091ae2f3d9e1de034ecbce6a14931650b",
      "created_at": "2017-08-15T08:07:49Z"
    },
    {
      "event": "referenced",
      "id": 1206080777,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDEyMDYwODA3Nzc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1206080777",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "e03c9b0c3d95c75fff3e512b160a08cd096aa91a",
      "commit_url": "https://api.github.com/repos/practicalswift/bitcoin/commits/e03c9b0c3d95c75fff3e512b160a08cd096aa91a",
      "created_at": "2017-08-15T08:15:03Z"
    },
    {
      "event": "referenced",
      "id": 1207543368,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDEyMDc1NDMzNjg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1207543368",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "bc60c2c228f7e549f6df3eb382e7eba8192eab22",
      "commit_url": "https://api.github.com/repos/practicalswift/bitcoin/commits/bc60c2c228f7e549f6df3eb382e7eba8192eab22",
      "created_at": "2017-08-16T03:22:45Z"
    },
    {
      "event": "referenced",
      "id": 1208379172,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDEyMDgzNzkxNzI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1208379172",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "d1010e6ab37aad8ba0a3d093fb9e2f9c90bb99b8",
      "commit_url": "https://api.github.com/repos/practicalswift/bitcoin/commits/d1010e6ab37aad8ba0a3d093fb9e2f9c90bb99b8",
      "created_at": "2017-08-16T14:20:54Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1208780418,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTIwODc4MDQxOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1208780418",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-08-16T18:00:56Z"
    },
    {
      "event": "referenced",
      "id": 1215414558,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDEyMTU0MTQ1NTg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1215414558",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "b664be4ba8b434a9d8621f04fb09fb382bfacee7",
      "commit_url": "https://api.github.com/repos/practicalswift/bitcoin/commits/b664be4ba8b434a9d8621f04fb09fb382bfacee7",
      "created_at": "2017-08-22T08:04:37Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1221729418,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTIyMTcyOTQxOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1221729418",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-08-25T15:58:11Z"
    },
    {
      "event": "referenced",
      "id": 1222031273,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDEyMjIwMzEyNzM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1222031273",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "07c92b98e2a0a29d19b5ccdbbfa9addc1e80b306",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/07c92b98e2a0a29d19b5ccdbbfa9addc1e80b306",
      "created_at": "2017-08-25T19:31:54Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1222274742,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTIyMjI3NDc0Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1222274742",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-08-25T23:20:51Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1225306011,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTIyNTMwNjAxMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1225306011",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-08-29T09:54:03Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-08-29T10:00:53Z",
      "updated_at": "2017-08-29T10:00:53Z",
      "source": {
        "issue": {
          "id": 236219112,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MTI1ODQxMjgz",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10600",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10600/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10600/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10600/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/10600",
          "number": 10600,
          "state": "closed",
          "state_reason": null,
          "title": "Make feebumper class stateless",
          "body": "Make feebumper methods static and remove stored state in the class.\r\n\r\nHaving the results of feebumper calls persist in an object makes process\r\nseparation between Qt and wallet awkward, because it means the feebumper object\r\neither has to be serialized back and forth between Qt and wallet processes\r\nbetween fee bump calls, or that the feebumper object needs to stay alive in the\r\nwallet process with an object reference passed back to Qt. It's simpler just to\r\nhave fee bumper calls return their results immediately instead of storing them\r\nin an object with an extended lifetime.\r\n\r\nIn addition to making feebumper methods static, also:\r\n\r\n- Move LOCK calls from Qt code to feebumper\r\n- Move TransactionCanBeBumped implementation from Qt code to feebumper\r\n- Rename CFeeBumper class to FeeBumper (every CFeeBumper reference had to be\r\n  updated in this PR anyway so this doesn't increase the size of the diff)\r\n\r\nThis change was originally part of https://github.com/bitcoin/bitcoin/pull/10244",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 13,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10600",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/10600",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/10600.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/10600.patch"
          },
          "closed_at": "2017-11-15T17:52:46Z",
          "created_at": "2017-06-15T14:55:50Z",
          "updated_at": "2021-09-08T12:04:32Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 326633872,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjYzMzg3Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/326633872",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-09-01T17:05:20Z",
      "updated_at": "2017-12-14T22:16:29Z",
      "author_association": "CONTRIBUTOR",
      "body": "@jnewbery, the change to stop deduping link arguments is in Makefile.am [here](https://github.com/bitcoin/bitcoin/commit/7bfb409ad9e27df07108c17d63c3efc5f4bfb6a6)\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#issuecomment-326633872",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10973"
    },
    {
      "event": "mentioned",
      "id": 1231712836,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTIzMTcxMjgzNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1231712836",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-09-01T17:05:20Z"
    },
    {
      "event": "subscribed",
      "id": 1231712838,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDEyMzE3MTI4Mzg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1231712838",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-09-01T17:05:20Z"
    },
    {
      "event": "reviewed",
      "id": 60747312,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA3NDczMTI=",
      "url": null,
      "actor": null,
      "commit_id": "c1194635c663536a5140beb4b59f634e4ca09110",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "I did a superficial review of the code & the approach seems reasonable to me!\r\n\r\nutACKs from me for the commits checked below...\r\n\r\n- [X]    40afc26350 Add skeleton chain and client classes\r\n- [X]    5269b56ec4 Pass chain and client variables where needed\r\n- [X]    7bfb409ad9 Remove uses of wallet functions in init.cpp\r\n- [X]    e26e00bd3f Remove uses of cs_main in wallet code\r\n- [X]    0a3464bce7 Pass chain locked variables where needed\r\n- [X]    c1194635c6 Remove uses of chainActive and mapBlockIndex in wallet code\r\n- [X]    2dd492b580 Remove uses of CheckFinalTx in wallet code\r\n- [X]   ebb23cbe04 Remove use of IsWitnessEnabled in wallet code\r\n- [X]    dd180da24b Remove use of AcceptToMemoryPool in wallet code\r\n- [X]    83be2e6552 Remove uses of GetVirtualTransactionSize in wallet code\r\n- [X]    8931629480 Remove use of IsRBFOptIn in wallet code\r\n- [ ]    684e807240 Remove use of GetCountWithDescendants in wallet code\r\n- [ ]    f3f36e8b5f Remove use of g_connman / PushInventory in wallet code\r\n- [ ]   c9d049c7e4 Remove use of TransactionWithinChainLimit in wallet code\r\n- [ ]    04f6a9ecc1 Remove use of CalculateMemPoolAncestors in wallet code\r\n- [ ]    c510dde004 Remove uses of fee globals in wallet code\r\n- [ ]    9849c4d441 Remove uses of fPruneMode in wallet code\r\n- [ ]    ab488c8229 Remove uses of g_connman in wallet code\r\n- [ ]    090411ad7c Remove uses of GetAdjustedTime in wallet code\r\n- [ ]    64ad91dbf5 Remove uses of InitMessage/Warning/Error in wallet code\r\n- [ ]    3ab3335d38 Remove use CValidationInterface in wallet code\r\n- [ ]    8756810d58 Remove use of CRPCTable::appendCommand in wallet code\r\n- [ ]    35bfb7f189 Remove use of generateBlocks in wallet code\r\n- [ ]    8fb011e3fb Remove uses of ParseConfirmTarget in wallet code\r\n",
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-60747312",
      "submitted_at": "2017-09-05T23:27:32Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1259909064,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTI1OTkwOTA2NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1259909064",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-09-21T18:02:02Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1260130456,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTI2MDEzMDQ1Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1260130456",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-09-21T20:20:23Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1260348844,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTI2MDM0ODg0NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1260348844",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-09-21T23:04:54Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1262022301,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTI2MjAyMjMwMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1262022301",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-09-22T21:45:16Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1262025632,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTI2MjAyNTYzMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1262025632",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-09-22T21:48:09Z"
    },
    {
      "event": "referenced",
      "id": 1262025637,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDEyNjIwMjU2Mzc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1262025637",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "201512331040105bb3fcd9e2ee3282936403eac3",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/201512331040105bb3fcd9e2ee3282936403eac3",
      "created_at": "2017-09-22T21:48:09Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1268795123,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTI2ODc5NTEyMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1268795123",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-09-27T23:14:55Z"
    },
    {
      "event": "referenced",
      "id": 1268795126,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDEyNjg3OTUxMjY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1268795126",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "4b2ae4761c9e75e2d39ce46671d4562b28e54e6f",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/4b2ae4761c9e75e2d39ce46671d4562b28e54e6f",
      "created_at": "2017-09-27T23:14:56Z"
    },
    {
      "event": "referenced",
      "id": 1270408901,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDEyNzA0MDg5MDE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1270408901",
      "actor": {
        "login": "mempko",
        "id": 3760639,
        "node_id": "MDQ6VXNlcjM3NjA2Mzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3760639?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mempko",
        "html_url": "https://github.com/mempko",
        "followers_url": "https://api.github.com/users/mempko/followers",
        "following_url": "https://api.github.com/users/mempko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mempko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mempko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mempko/subscriptions",
        "organizations_url": "https://api.github.com/users/mempko/orgs",
        "repos_url": "https://api.github.com/users/mempko/repos",
        "events_url": "https://api.github.com/users/mempko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mempko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "7454f784fae9d02f20084892e9a4719f38a80ed5",
      "commit_url": "https://api.github.com/repos/meritlabs/merit/commits/7454f784fae9d02f20084892e9a4719f38a80ed5",
      "created_at": "2017-09-28T18:58:03Z"
    },
    {
      "event": "referenced",
      "id": 1270408940,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDEyNzA0MDg5NDA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1270408940",
      "actor": {
        "login": "mempko",
        "id": 3760639,
        "node_id": "MDQ6VXNlcjM3NjA2Mzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3760639?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mempko",
        "html_url": "https://github.com/mempko",
        "followers_url": "https://api.github.com/users/mempko/followers",
        "following_url": "https://api.github.com/users/mempko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mempko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mempko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mempko/subscriptions",
        "organizations_url": "https://api.github.com/users/mempko/orgs",
        "repos_url": "https://api.github.com/users/mempko/repos",
        "events_url": "https://api.github.com/users/mempko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mempko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "bdbd3fff3725363e83d8c1ce2c26d4f392f573e2",
      "commit_url": "https://api.github.com/repos/meritlabs/merit/commits/bdbd3fff3725363e83d8c1ce2c26d4f392f573e2",
      "created_at": "2017-09-28T18:58:04Z"
    },
    {
      "event": "referenced",
      "id": 1274135195,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDEyNzQxMzUxOTU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1274135195",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "27a54eacc07325e9a10cbea71ab03d87a96679b7",
      "commit_url": "https://api.github.com/repos/practicalswift/bitcoin/commits/27a54eacc07325e9a10cbea71ab03d87a96679b7",
      "created_at": "2017-10-02T14:28:03Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-02T21:30:59Z",
      "updated_at": "2017-10-02T21:30:59Z",
      "source": {
        "issue": {
          "id": 262235018,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MTQ0Mjg4NTgy",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11439",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11439/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11439/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11439/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/11439",
          "number": 11439,
          "state": "closed",
          "state_reason": null,
          "title": "[test] Refactor ZMQ test to use one address per notification type",
          "body": "With this change it is possible to test the notifications independently, regardless of the publishing order, since each notification type is published to a different address.\r\n\r\nTook the opportunity to do some cleanup with the help of:\r\n - `Subscriber` class to keep the subscriber metadata and sequence state;\r\n - `ZMQTest.subscribe` which creates and registers the new subscriber and setups the socket;\r\n - `ZMQTest.receive` which does the normal asserts upon reading from the socket;\r\n\r\nAlso changed 10 to 5 blocks to speed up the test.",
          "user": {
            "login": "promag",
            "id": 3534524,
            "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/promag",
            "html_url": "https://github.com/promag",
            "followers_url": "https://api.github.com/users/promag/followers",
            "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
            "organizations_url": "https://api.github.com/users/promag/orgs",
            "repos_url": "https://api.github.com/users/promag/repos",
            "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/promag/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignee": {
            "login": "MarcoFalke",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarcoFalke",
            "html_url": "https://github.com/MarcoFalke",
            "followers_url": "https://api.github.com/users/MarcoFalke/followers",
            "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
            "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
            "repos_url": "https://api.github.com/users/MarcoFalke/repos",
            "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
            "type": "User",
            "site_admin": false
          },
          "assignees": [
            {
              "login": "MarcoFalke",
              "id": 6399679,
              "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
              "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/MarcoFalke",
              "html_url": "https://github.com/MarcoFalke",
              "followers_url": "https://api.github.com/users/MarcoFalke/followers",
              "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
              "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
              "repos_url": "https://api.github.com/users/MarcoFalke/repos",
              "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
              "type": "User",
              "site_admin": false
            }
          ],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 7,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11439",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/11439",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/11439.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/11439.patch"
          },
          "closed_at": "2017-10-04T14:50:38Z",
          "created_at": "2017-10-02T21:29:56Z",
          "updated_at": "2021-09-08T11:45:10Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 1297185556,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDEyOTcxODU1NTY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1297185556",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "da4b7a5c4cbbebb5b305818bbcecc5b581553b12",
      "commit_url": "https://api.github.com/repos/practicalswift/bitcoin/commits/da4b7a5c4cbbebb5b305818bbcecc5b581553b12",
      "created_at": "2017-10-17T15:47:55Z"
    },
    {
      "event": "referenced",
      "id": 1299294201,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDEyOTkyOTQyMDE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1299294201",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "ad6d73b34210cc53498aae61da2c9656117f6c50",
      "commit_url": "https://api.github.com/repos/practicalswift/bitcoin/commits/ad6d73b34210cc53498aae61da2c9656117f6c50",
      "created_at": "2017-10-18T15:13:10Z"
    },
    {
      "event": "referenced",
      "id": 1334246538,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDEzMzQyNDY1Mzg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1334246538",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "86179897e230d8e5244fa7690ae1bc84b7958b9b",
      "commit_url": "https://api.github.com/repos/practicalswift/bitcoin/commits/86179897e230d8e5244fa7690ae1bc84b7958b9b",
      "created_at": "2017-11-09T15:54:06Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1362516032,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTM2MjUxNjAzMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1362516032",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-11-28T23:40:21Z"
    },
    {
      "event": "renamed",
      "id": 1368445897,
      "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50MTM2ODQ0NTg5Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1368445897",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-12-01T21:17:16Z",
      "rename": {
        "from": "Add IPC layer between node and wallet",
        "to": "Refactor: separate wallet from node"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1368488766,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTM2ODQ4ODc2Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1368488766",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-12-01T21:46:08Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1384516162,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTM4NDUxNjE2Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1384516162",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-12-12T21:58:01Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1388250251,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTM4ODI1MDI1MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1388250251",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-12-14T18:24:14Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1405403067,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTQwNTQwMzA2Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1405403067",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-12-31T19:53:46Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1420331750,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTQyMDMzMTc1MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1420331750",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-01-11T18:25:15Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1420354768,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTQyMDM1NDc2OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1420354768",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-01-11T18:38:21Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1453946248,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTQ1Mzk0NjI0OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1453946248",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-02-01T21:43:09Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1467466101,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTQ2NzQ2NjEwMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1467466101",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-02-09T20:35:22Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1470202746,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTQ3MDIwMjc0Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1470202746",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-02-12T19:32:10Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1473579538,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTQ3MzU3OTUzOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1473579538",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-02-14T11:23:16Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-02-14T12:37:50Z",
      "updated_at": "2018-02-14T12:37:50Z",
      "source": {
        "issue": {
          "id": 217385623,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MTEyODQ2NDMx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10102",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10102/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10102/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10102/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/10102",
          "number": 10102,
          "state": "open",
          "state_reason": null,
          "title": "Multiprocess bitcoin",
          "body": "This PR is part of the [process separation project](https://github.com/bitcoin/bitcoin/projects/10).\r\n\r\n---\r\n\r\nThis PR adds an `--enable-multiprocess` configure option which builds new `bitcoin-node`, `bitcoin-wallet`, and `bitcoin-gui` executables with relevant functionality isolated into different processes. See [doc/design/multiprocess.md](https://github.com/ryanofsky/bitcoin/tree/pr/ipc/doc/design/multiprocess.md) for usage details and future plans.\r\n\r\nThe change is implemented by adding a new [`Init`](https://github.com/ryanofsky/bitcoin/blob/pr/ipc/src/interfaces/init.h) interface that spawns new wallet and node subprocesses that can be controlled over a [socketpair](http://man7.org/linux/man-pages/man2/socketpair.2.html) by calling [`Node`](https://github.com/ryanofsky/bitcoin/blob/pr/ipc/src/interfaces/node.h), [`Wallet`](https://github.com/ryanofsky/bitcoin/blob/pr/ipc/src/interfaces/wallet.h), and [`ChainClient`](https://github.com/ryanofsky/bitcoin/blob/pr/ipc/src/interfaces/chain.h) methods. When running with split processes, you can see the IPC messages going back and forth in `-debug=1` output. Followup PR's #19460 and #19461 add `-ipcbind` and `-ipcconnect` options that allow more flexibility in how processes are connected.\r\n\r\nThe IPC protocol used is Cap'n Proto, but this could be swapped out for another protocol. Cap'n Proto types and libraries are only accessed in the [src/ipc/capnp/](https://github.com/ryanofsky/bitcoin/tree/pr/ipc/src/ipc/capnp) directory, and not in any public headers or other parts of bitcoin code.\r\n\r\n---\r\n\r\nSlides from a presentation describing this change are available on [google drive](https://docs.google.com/presentation/d/1AeJ-7gD-dItUgs5yH-HoEzLvXaEWe_2ZiGUUxYIXcws/edit). Demo code used in the presentation was from an older version this PR (tag [ipc.21](https://github.com/ryanofsky/bitcoin/releases/tag/pr%2Fipc.21), [commits](https://github.com/ryanofsky/bitcoin/compare/master...pr/ipc.21)).\r\n",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135946,
              "node_id": "MDU6TGFiZWwxMzU5NDY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/GUI",
              "name": "GUI",
              "color": "02d7e1",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 78,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10102",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/10102",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/10102.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/10102.patch"
          },
          "created_at": "2017-03-27T21:48:26Z",
          "updated_at": "2023-06-21T07:40:44Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1474366641,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTQ3NDM2NjY0MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1474366641",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-02-14T18:02:53Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-02-22T22:23:09Z",
      "updated_at": "2018-02-22T22:23:09Z",
      "source": {
        "issue": {
          "id": 241217893,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MTI5MzcxMjQx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10762",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10762/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10762/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10762/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/10762",
          "number": 10762,
          "state": "closed",
          "state_reason": null,
          "title": "[wallet] Remove Wallet dependencies from init.cpp",
          "body": "This continues the work of #7965. This PR, along with several others, would remove the remaining dependencies from libbitcoin_server.a on libbitcoin_wallet.a.\r\n\r\nTo create the interface, I've just translated all the old init.cpp wallet function calls into an interface class. I've not done any thinking about whether it makes sense to change that interface by combining/splitting those calls. This is a purely internal interface, so there's no problem in changing it later.",
          "user": {
            "login": "jnewbery",
            "id": 1063656,
            "node_id": "MDQ6VXNlcjEwNjM2NTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jnewbery",
            "html_url": "https://github.com/jnewbery",
            "followers_url": "https://api.github.com/users/jnewbery/followers",
            "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
            "organizations_url": "https://api.github.com/users/jnewbery/orgs",
            "repos_url": "https://api.github.com/users/jnewbery/repos",
            "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jnewbery/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 32,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10762",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/10762",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/10762.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/10762.patch"
          },
          "closed_at": "2018-03-29T15:03:49Z",
          "created_at": "2017-07-07T10:04:01Z",
          "updated_at": "2021-09-08T11:52:38Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1489466888,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTQ4OTQ2Njg4OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1489466888",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-02-23T16:42:38Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1492057203,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTQ5MjA1NzIwMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1492057203",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-02-26T13:56:44Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1501751860,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTUwMTc1MTg2MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1501751860",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-02T18:42:04Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1508934964,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTUwODkzNDk2NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1508934964",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-07T14:06:01Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1509762729,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTUwOTc2MjcyOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1509762729",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-07T20:21:41Z"
    },
    {
      "event": "referenced",
      "id": 1513283699,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE1MTMyODM2OTk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1513283699",
      "actor": {
        "login": "HashUnlimited",
        "id": 26601261,
        "node_id": "MDQ6VXNlcjI2NjAxMjYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/26601261?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/HashUnlimited",
        "html_url": "https://github.com/HashUnlimited",
        "followers_url": "https://api.github.com/users/HashUnlimited/followers",
        "following_url": "https://api.github.com/users/HashUnlimited/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/HashUnlimited/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/HashUnlimited/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/HashUnlimited/subscriptions",
        "organizations_url": "https://api.github.com/users/HashUnlimited/orgs",
        "repos_url": "https://api.github.com/users/HashUnlimited/repos",
        "events_url": "https://api.github.com/users/HashUnlimited/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/HashUnlimited/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "c42321bc7981ba9c494e91d77e2c7b0e318f28be",
      "commit_url": "https://api.github.com/repos/chaincoin/chaincoin/commits/c42321bc7981ba9c494e91d77e2c7b0e318f28be",
      "created_at": "2018-03-09T13:33:36Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1516985893,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTUxNjk4NTg5Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1516985893",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-12T18:44:01Z"
    },
    {
      "event": "referenced",
      "id": 1518793079,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE1MTg3OTMwNzk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1518793079",
      "actor": {
        "login": "HashUnlimited",
        "id": 26601261,
        "node_id": "MDQ6VXNlcjI2NjAxMjYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/26601261?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/HashUnlimited",
        "html_url": "https://github.com/HashUnlimited",
        "followers_url": "https://api.github.com/users/HashUnlimited/followers",
        "following_url": "https://api.github.com/users/HashUnlimited/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/HashUnlimited/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/HashUnlimited/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/HashUnlimited/subscriptions",
        "organizations_url": "https://api.github.com/users/HashUnlimited/orgs",
        "repos_url": "https://api.github.com/users/HashUnlimited/repos",
        "events_url": "https://api.github.com/users/HashUnlimited/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/HashUnlimited/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "f767ebe62286147f512e7ea817f018dbc7716e7b",
      "commit_url": "https://api.github.com/repos/chaincoin/chaincoin/commits/f767ebe62286147f512e7ea817f018dbc7716e7b",
      "created_at": "2018-03-13T14:57:44Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-13T18:42:08Z",
      "updated_at": "2018-03-13T18:42:08Z",
      "source": {
        "issue": {
          "id": 223176076,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MTE2ODQ4Mjc2",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10244",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10244/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10244/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10244/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/10244",
          "number": 10244,
          "state": "closed",
          "state_reason": null,
          "title": "Refactor: separate gui from wallet and node",
          "body": "This is a refactoring PR that does not change behavior in any way. This change:\r\n\r\n1. Creates abstract [`Node`](https://github.com/ryanofsky/bitcoin/blob/pr/ipc-local/src/interface/node.h) and [`Wallet`](https://github.com/ryanofsky/bitcoin/blob/pr/ipc-local/src/interface/wallet.h) interfaces in [`src/interface/`](https://github.com/ryanofsky/bitcoin/tree/pr/ipc-local/src/interface)\r\n1. Updates Qt code to call the new interfaces. This largely consists of diffs of the form:\r\n\r\n```diff\r\n-    InitLogging();\r\n-    InitParameterInteraction();\r\n+    node.initLogging();\r\n+    node.initParameterInteraction();\r\n```\r\n\r\nThis change allows followup PR #10102 (makes `bitcoin-qt` control `bitcoind` over an IPC socket) to work without any significant updates to Qt code. Additionally:\r\n\r\n* It provides a single place to describe the interface between GUI and daemon code.\r\n* It can make better GUI testing possible, because Node and Wallet objects have virtual methods that can be overloaded for mocking.\r\n* It can be used to help make the GUI more responsive (see https://github.com/bitcoin/bitcoin/issues/10504)\r\n\r\nOther notes:\r\n\r\n* I used python scripts [hide-globals.py](https://github.com/ryanofsky/home/blob/master/src/2017/hide-globals/hide-globals.py) and [replace-syms.py](https://github.com/ryanofsky/home/blob/master/src/2017/hide-globals/replace-syms.py) to identify all the places where Qt code was accessing libbitcoin global variables and calling functions accessing those global variables.\r\n* These changes were originally part of #10102. Thanks to @JeremyRubin for the suggestion of splitting them out.\r\n\r\nCommits:\r\n\r\n- [`ea73b84d2d` Add src/interface/README.md](https://github.com/bitcoin/bitcoin/pull/10244/commits/ea73b84d2ddde22487dee0f71d7a619051e067f2)\r\n- [`71e0d90876` Remove direct bitcoin calls from qt/bitcoin.cpp](https://github.com/bitcoin/bitcoin/pull/10244/commits/71e0d90876efd11e2a4aeb8f3f806c5a1fd54b42)\r\n- [`c0f2756be5` Remove direct bitcoin calls from qt/optionsmodel.cpp](https://github.com/bitcoin/bitcoin/pull/10244/commits/c0f2756be517feddacd7c6b89b9faa888b3fef8e)\r\n- [`3d619e9d36` Remove direct bitcoin calls from qt/bitcoingui.cpp](https://github.com/bitcoin/bitcoin/pull/10244/commits/3d619e9d3658e36cba4a19a5bed33e5538317b27)\r\n- [`c2f672fb19` Remove direct bitcoin calls from qt/utilitydialog.cpp](https://github.com/bitcoin/bitcoin/pull/10244/commits/c2f672fb1960399389dea9cdd8f76d7156c2c88b)\r\n- [`5fba3af21e` Remove direct bitcoin calls from qt/splashscreen.cpp](https://github.com/bitcoin/bitcoin/pull/10244/commits/5fba3af21e44ab7552c57782de430c1f4cfd6697)\r\n- [`fe6f27e6ea` Remove direct bitcoin calls from qt/clientmodel.cpp](https://github.com/bitcoin/bitcoin/pull/10244/commits/fe6f27e6ea68a139d3a98b30a53706008ef8b132)\r\n- [`d7c2c95948` Remove direct bitcoin calls from qt/intro.cpp](https://github.com/bitcoin/bitcoin/pull/10244/commits/d7c2c9594897c39df6739b92610dfb5a7a1cb3ec)\r\n- [`e0b66a3b7c` Remove direct bitcoin calls from qt/peertablemodel.cpp](https://github.com/bitcoin/bitcoin/pull/10244/commits/e0b66a3b7c5d3a079636d61fcf611bb6b36c7bc1)\r\n- [`3034a462a5` Remove direct bitcoin calls from qt/bantablemodel.cpp](https://github.com/bitcoin/bitcoin/pull/10244/commits/3034a462a5d30144cf0ec801d07f0c8c36d560f3)\r\n- [`582daf6d22` Remove direct bitcoin calls from qt/rpcconsole.cpp](https://github.com/bitcoin/bitcoin/pull/10244/commits/582daf6d22da5394d02a12003b9542d9f5865ae2)\r\n- [`90d4640b7e` Remove direct bitcoin calls from qt/optionsdialog.cpp](https://github.com/bitcoin/bitcoin/pull/10244/commits/90d4640b7eff3154a0750c5acb52d39bd41e0bbb)\r\n- [`a0704a8996` Remove most direct bitcoin calls from qt/walletmodel.cpp](https://github.com/bitcoin/bitcoin/pull/10244/commits/a0704a8996bb950ae3c4d5b5a30e9dfe34cde1d3)\r\n- [`827de038ab` Remove direct bitcoin calls from qt/coincontroldialog.cpp](https://github.com/bitcoin/bitcoin/pull/10244/commits/827de038ab6fa58aa3d46151eb2f8dc6add7743e)\r\n- [`3ec2ebcd9b` Remove direct bitcoin calls from qt/addresstablemodel.cpp](https://github.com/bitcoin/bitcoin/pull/10244/commits/3ec2ebcd9b4beb4277f1f4791c6acbc538784f70)\r\n- [`3cab2ce5f9` Remove direct bitcoin calls from qt/paymentserver.cpp](https://github.com/bitcoin/bitcoin/pull/10244/commits/3cab2ce5f9e159ad5a2e9ed682f28121b5248580)\r\n- [`58845587e1` Remove direct bitcoin calls from qt transaction table files](https://github.com/bitcoin/bitcoin/pull/10244/commits/58845587e11140e81f087a74c3db76a4d1fc3a1a)\r\n- [`e872c93ee8` Remove direct bitcoin access from qt/guiutil.cpp](https://github.com/bitcoin/bitcoin/pull/10244/commits/e872c93ee87477130fb877da1a536b4c693bbab9)\r\n- [`56f33ca349` Remove direct bitcoin calls from qt/sendcoinsdialog.cpp](https://github.com/bitcoin/bitcoin/pull/10244/commits/56f33ca349b3721a15fce3bf0b6d4fd7fd788970)\r\n- [`9a61eed1fc` Use WalletBalances struct in Qt](https://github.com/bitcoin/bitcoin/pull/10244/commits/9a61eed1fcc16ddcedc315045f470e1958b0760b)\r\n- [`9960137697` Add developer notes about blocking GUI code](https://github.com/bitcoin/bitcoin/pull/10244/commits/996013769711bd507cdcd6dde88cbd59fcd4fbad)",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135946,
              "node_id": "MDU6TGFiZWwxMzU5NDY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/GUI",
              "name": "GUI",
              "color": "02d7e1",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 34,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10244",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/10244",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/10244.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/10244.patch"
          },
          "closed_at": "2018-04-05T16:19:56Z",
          "created_at": "2017-04-20T19:37:38Z",
          "updated_at": "2022-02-15T10:32:10Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1520507984,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTUyMDUwNzk4NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1520507984",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-14T09:46:04Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1521099432,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTUyMTA5OTQzMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1521099432",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-14T14:38:01Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1521680865,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTUyMTY4MDg2NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1521680865",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-14T18:35:13Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1538821544,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTUzODgyMTU0NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1538821544",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-23T21:50:01Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1550546518,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTU1MDU0NjUxOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1550546518",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-31T00:54:41Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-06T15:17:03Z",
      "updated_at": "2018-04-06T15:17:03Z",
      "source": {
        "issue": {
          "id": 303525563,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MTczNzcwMTQ4",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12647",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12647/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12647/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12647/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/12647",
          "number": 12647,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: Fix possible memory leak in CreateWalletFromFile.",
          "body": "If there was an error loading the wallet after creating the instance, the instance would leak. This uses RAII to ensure the instance is cleaned up in that case. Issue found during review of #11687.",
          "user": {
            "login": "jimpo",
            "id": 881253,
            "node_id": "MDQ6VXNlcjg4MTI1Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jimpo",
            "html_url": "https://github.com/jimpo",
            "followers_url": "https://api.github.com/users/jimpo/followers",
            "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
            "organizations_url": "https://api.github.com/users/jimpo/orgs",
            "repos_url": "https://api.github.com/users/jimpo/repos",
            "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jimpo/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 8,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12647",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/12647",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/12647.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/12647.patch"
          },
          "closed_at": "2018-04-24T17:53:07Z",
          "created_at": "2018-03-08T15:41:33Z",
          "updated_at": "2021-09-08T12:29:14Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1561196265,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTU2MTE5NjI2NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1561196265",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-06T15:44:17Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1562263750,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTU2MjI2Mzc1MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1562263750",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-07T17:04:46Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1564008942,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTU2NDAwODk0Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1564008942",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-09T14:45:01Z"
    },
    {
      "event": "reviewed",
      "id": 110512280,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTEwNTEyMjgw",
      "url": null,
      "actor": null,
      "commit_id": "419308f3c8cf1b7fff0bd02de8522280ad91a93b",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-110512280",
      "submitted_at": "2018-04-09T15:54:33Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1565843378,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTU2NTg0MzM3OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1565843378",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-10T10:36:06Z"
    },
    {
      "event": "mentioned",
      "id": 1566121575,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTU2NjEyMTU3NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1566121575",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-10T13:07:17Z"
    },
    {
      "event": "subscribed",
      "id": 1566121576,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE1NjYxMjE1NzY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1566121576",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-10T13:07:17Z"
    },
    {
      "event": "commented",
      "id": 380101269,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDEwMTI2OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/380101269",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-10T13:38:56Z",
      "updated_at": "2018-04-10T13:38:56Z",
      "author_association": "CONTRIBUTOR",
      "body": "@skeees, this PR might be relevant to the `GetDepthInMainChain` discussion from https://github.com/bitcoin/bitcoin/pull/12801#issuecomment-379930111. This PR replaces direct accesses to `chainActive` and `cs_main`  global variables in the wallet with calls to a `Chain::Lock` interface:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/6efd1524caf008641c4ffc15e8a2b2c2586c6d0f/src/interfaces/chain.h#L42-L111\r\n\r\nIf you look at [wallet.cpp](https://github.com/ryanofsky/bitcoin/blob/pr/wipc-sep/src/wallet/wallet.cpp) and search for `locked_chain`,  you can see all the things the wallet is currently doing while assuming the chain is locked.\r\n\r\nIdeally we would like to eliminate these `locked_chain` objects, or make them very rarely used. I think the single change that would eliminate most uses of `locked_chain` would be to add an `m_last_block_processed_height` member to CWallet and an `m_block_height` member to `CMerkleTx`. These variables could get updated in `BlockConnected`, so methods like `GetDepthInMainChain`, `IsInMainChain`, and `GetBlocksToMaturity` could be implemented without external locking.\r\n\r\nThis is a change which I think could be implemented right now in a new PR that doesn't depend on anything. And there are probably other similar changes which could eliminate more locking and which your #12801 notifier might come in handy for.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#issuecomment-380101269",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10973"
    },
    {
      "event": "mentioned",
      "id": 1566194275,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTU2NjE5NDI3NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1566194275",
      "actor": {
        "login": "skeees",
        "id": 195769,
        "node_id": "MDQ6VXNlcjE5NTc2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/skeees",
        "html_url": "https://github.com/skeees",
        "followers_url": "https://api.github.com/users/skeees/followers",
        "following_url": "https://api.github.com/users/skeees/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/skeees/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/skeees/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
        "organizations_url": "https://api.github.com/users/skeees/orgs",
        "repos_url": "https://api.github.com/users/skeees/repos",
        "events_url": "https://api.github.com/users/skeees/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/skeees/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-10T13:38:56Z"
    },
    {
      "event": "subscribed",
      "id": 1566194276,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE1NjYxOTQyNzY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1566194276",
      "actor": {
        "login": "skeees",
        "id": 195769,
        "node_id": "MDQ6VXNlcjE5NTc2OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/skeees",
        "html_url": "https://github.com/skeees",
        "followers_url": "https://api.github.com/users/skeees/followers",
        "following_url": "https://api.github.com/users/skeees/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/skeees/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/skeees/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
        "organizations_url": "https://api.github.com/users/skeees/orgs",
        "repos_url": "https://api.github.com/users/skeees/repos",
        "events_url": "https://api.github.com/users/skeees/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/skeees/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-10T13:38:56Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-10T14:03:46Z",
      "updated_at": "2018-04-10T14:03:46Z",
      "source": {
        "issue": {
          "id": 309100373,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MTc3ODM5ODY4",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12801",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12801/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12801/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12801/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/12801",
          "number": 12801,
          "state": "closed",
          "state_reason": null,
          "title": "Add option to only notify after wallet transactions are confirmed",
          "body": "Optionally only call -walletnotify command when a certain number of confirmations have been seen\r\n\r\nThis addresses issue #10021",
          "user": {
            "login": "skeees",
            "id": 195769,
            "node_id": "MDQ6VXNlcjE5NTc2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/195769?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skeees",
            "html_url": "https://github.com/skeees",
            "followers_url": "https://api.github.com/users/skeees/followers",
            "following_url": "https://api.github.com/users/skeees/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/skeees/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/skeees/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/skeees/subscriptions",
            "organizations_url": "https://api.github.com/users/skeees/orgs",
            "repos_url": "https://api.github.com/users/skeees/repos",
            "events_url": "https://api.github.com/users/skeees/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/skeees/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 18,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12801",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/12801",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/12801.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/12801.patch"
          },
          "closed_at": "2018-06-19T18:45:54Z",
          "created_at": "2018-03-27T19:22:01Z",
          "updated_at": "2021-12-16T14:11:34Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 380200698,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDIwMDY5OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/380200698",
      "actor": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-10T18:24:42Z",
      "updated_at": "2018-04-10T18:24:42Z",
      "author_association": "CONTRIBUTOR",
      "body": "It might also be decent to use a RW-lock -- I'd imagine *all* of the wallet code is only in read mode, and a good chunk of other code can run in read mode as well.",
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#issuecomment-380200698",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10973"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-10T18:44:00Z",
      "updated_at": "2018-04-10T18:44:00Z",
      "source": {
        "issue": {
          "id": 313044280,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MTgwNjkzMzIz",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12933",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12933/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12933/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12933/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/12933",
          "number": 12933,
          "state": "closed",
          "state_reason": null,
          "title": "doc: Refine header include policy",
          "body": "Since there is no harm in having \"duplicate\" includes and it makes it obvious what are the dependencies of each file, without having to do static analysis or jumping between files, I'd suggest to revert the travis check for duplicate includes.\r\n\r\nGenerally, I think that enforcing minor style preferences should not be done via travis. The cost of maintaining and the burden on other developers is too high. C.f discussion in https://github.com/bitcoin/bitcoin/pull/10973#discussion_r180142594",
          "user": {
            "login": "MarcoFalke",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarcoFalke",
            "html_url": "https://github.com/MarcoFalke",
            "followers_url": "https://api.github.com/users/MarcoFalke/followers",
            "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
            "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
            "repos_url": "https://api.github.com/users/MarcoFalke/repos",
            "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 148216,
              "node_id": "MDU6TGFiZWwxNDgyMTY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Docs",
              "name": "Docs",
              "color": "02d7e1",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 27,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12933",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/12933",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/12933.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/12933.patch"
          },
          "closed_at": "2018-04-11T14:47:54Z",
          "created_at": "2018-04-10T18:44:00Z",
          "updated_at": "2021-09-08T12:44:22Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 1568779001,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE1Njg3NzkwMDE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1568779001",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "3cf76c23fbfc8500fa494f8cef8068a67a1388c3",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3cf76c23fbfc8500fa494f8cef8068a67a1388c3",
      "created_at": "2018-04-11T14:47:55Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1568866033,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTU2ODg2NjAzMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1568866033",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-11T15:20:40Z"
    },
    {
      "event": "commented",
      "id": 380492056,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDQ5MjA1Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/380492056",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-11T15:22:37Z",
      "updated_at": "2018-05-02T14:08:41Z",
      "author_association": "CONTRIBUTOR",
      "body": "> It might also be decent to use a RW-lock -- I'd imagine all of the wallet code is only in read mode,\r\n\r\nThis is a really interesting suggestion and observation. The benefit of using a RW lock would be that multiple wallets could hold the lock at same time, though I think we'd also need to prevent the wallets from blocking the `SingleThreadedSchedulerClient` notification thread to really take advantage of this.\r\n\r\nAnother way to take advantage of the read-only nature of the wallet client might be to change the `Chain::Lock` class to not even hold onto `cs_main` at all, but just present a locked view of the chain while still allowing updates to happen, [mvcc-like](https://en.wikipedia.org/wiki/Multiversion_concurrency_control). This would actually be pretty easy to implement by just saving the current chain tip in the constructor, and using it in all the other methods. But I imagine this could create subtle bugs and make generally things harder to reason about, so I'm still inclined to think getting rid of `Chain::Lock` is the best outcome, even though it will involve storing more state in the wallet. Getting rid of `Chain::Lock` could also be a nice way to avoid IPC overhead in addition to lock contention.\r\n\r\n---\r\n\r\nRebased 6efd1524caf008641c4ffc15e8a2b2c2586c6d0f -> 085519d9893a928c6bf60596305d6c257bf58725 ([pr/wipc-sep.41](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.41) -> [pr/wipc-sep.42](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.42)) due to conflicts with #12749, #12920, #12925\r\nRebased 085519d9893a928c6bf60596305d6c257bf58725 -> 22e6aad5b62545bf254df97f885635eb42f5abdd ([pr/wipc-sep.42](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.42) -> [pr/wipc-sep.43](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.43)) due to conflicts with #12977\r\nRebased 22e6aad5b62545bf254df97f885635eb42f5abdd -> daa337627f2181c360d775761a8d6829803ab915 ([pr/wipc-sep.43](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.43) -> [pr/wipc-sep.44](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.44)) due to conflicts with #12949\r\nUpdated daa337627f2181c360d775761a8d6829803ab915 -> 337d4535fe7a319f9628379378704e407dffa254 ([pr/wipc-sep.44](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.44) -> [pr/wipc-sep.45](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.45)) to remove orphaned wallet/init.h header file from previous rebase.\r\nRebased 337d4535fe7a319f9628379378704e407dffa254 -> d061f3511060996421bec36bc83b701fbd47bb64 ([pr/wipc-sep.45](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.45) -> [pr/wipc-sep.46](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.46)) due to conflict with #13017\r\nRebased d061f3511060996421bec36bc83b701fbd47bb64 -> 16f0e2fa5530848e48ad4d9359430f5156966da9 ([pr/wipc-sep.46](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.46) -> [pr/wipc-sep.47](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.47)) due to conflicts with #12909, #12953, #12830\r\nRebased 16f0e2fa5530848e48ad4d9359430f5156966da9 -> 60c7f5eb5af9390e16307796e05c13a24a63fdee ([pr/wipc-sep.47](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.47) -> [pr/wipc-sep.48](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.48)) due to conflict with #13033\r\nRebased 60c7f5eb5af9390e16307796e05c13a24a63fdee -> b4245a5697ed2006c3bc92a2183563264e0632ed ([pr/wipc-sep.48](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.48) -> [pr/wipc-sep.49](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.49)) due to conflict with #13090\r\nRebased b4245a5697ed2006c3bc92a2183563264e0632ed -> ce6af5dd9e70db2dfcd5d5f1ae10494b5129ff88 ([pr/wipc-sep.49](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.49) -> [pr/wipc-sep.50](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.50)) due to conflict with #13106\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#issuecomment-380492056",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10973"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1579031969,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTU3OTAzMTk2OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1579031969",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-17T14:44:35Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1579692502,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTU3OTY5MjUwMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1579692502",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-17T19:23:28Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-20T10:48:15Z",
      "updated_at": "2018-04-20T10:48:15Z",
      "source": {
        "issue": {
          "id": 316098420,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MTgyOTQxMDA5",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13034",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13034/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13034/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13034/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/13034",
          "number": 13034,
          "state": "closed",
          "state_reason": null,
          "title": "Introduce WalletManager",
          "body": "This PR (re)introduces `WalletManager` but follows a different approach than #12587 by @jonasschnelli. It builds on top of #13028 and #13017.\r\n\r\nA global `g_wallet_manager` instance is also added which is only available in builds with `ENABLE_WALLET`.\r\n\r\nThe goal here is to have a better place for all code that manages wallet instances, which will be useful for: \r\n - wallet lifecycle;\r\n - wallet background tasks coordination (flush for instance);\r\n - src/interface/walletmanager.h for UI and process separation (@ryanofsky sgty?);\r\n - RPC wallet load/unload calls.",
          "user": {
            "login": "promag",
            "id": 3534524,
            "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/promag",
            "html_url": "https://github.com/promag",
            "followers_url": "https://api.github.com/users/promag/followers",
            "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
            "organizations_url": "https://api.github.com/users/promag/orgs",
            "repos_url": "https://api.github.com/users/promag/repos",
            "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/promag/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 749416508,
              "node_id": "MDU6TGFiZWw3NDk0MTY1MDg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Up%20for%20grabs",
              "name": "Up for grabs",
              "color": "99a810",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 11,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13034",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/13034",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/13034.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/13034.patch"
          },
          "closed_at": "2018-09-21T17:12:10Z",
          "created_at": "2018-04-20T01:53:23Z",
          "updated_at": "2021-12-16T14:11:40Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1585950084,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTU4NTk1MDA4NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1585950084",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-20T11:28:54Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1588942634,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTU4ODk0MjYzNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1588942634",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-23T11:53:50Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1594784866,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTU5NDc4NDg2Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1594784866",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-25T18:24:21Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1594809516,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTU5NDgwOTUxNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1594809516",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-25T18:36:11Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1595450003,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTU5NTQ1MDAwMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1595450003",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-26T01:55:15Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1599775211,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTU5OTc3NTIxMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1599775211",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-27T22:49:51Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1605550945,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTYwNTU1MDk0NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1605550945",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-02T14:07:39Z"
    },
    {
      "event": "commented",
      "id": 386321291,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjMyMTI5MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/386321291",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-03T14:47:21Z",
      "updated_at": "2018-05-03T14:47:21Z",
      "author_association": "MEMBER",
      "body": "Needs rebase.",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#issuecomment-386321291",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10973"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1607928972,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTYwNzkyODk3Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1607928972",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-03T15:08:15Z"
    },
    {
      "event": "commented",
      "id": 386330307,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjMzMDMwNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/386330307",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-03T15:13:14Z",
      "updated_at": "2018-05-03T15:13:14Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Needs rebase.\r\n\r\nRebased ce6af5dd9e70db2dfcd5d5f1ae10494b5129ff88 -> af8f8087699c30ec83995c54112955253bcaba84 ([pr/wipc-sep.50](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.50) -> [pr/wipc-sep.51](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.51)) due to conflicts with #12639 and #12507.\r\n\r\n(Reminders to rebase this are welcome, but not needed. Since this conflicts with most wallet prs, I tend to check this frequently and rebase it a few times per week).\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#issuecomment-386330307",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10973"
    },
    {
      "event": "reviewed",
      "id": 116397255,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTE2Mzk3MjU1",
      "url": null,
      "actor": null,
      "commit_id": "a0279e40745dfb8692e92c5cac0848a25b37f930",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "utACK https://github.com/bitcoin/bitcoin/pull/10973/commits/af8f8087699c30ec83995c54112955253bcaba84\r\n\r\nI completed a commit-by-commit readthrough of the code and don't have any substantial feedback aside from a few typos.\r\n\r\nReviewers will notice that dealing in the more primitive datatypes returned by `chain` methods (block heights and hashes as opposed to, say, full `CBlockIndex` values) results in more fiddling at callsites (null checks, arithmetic, subsequent lookups, etc.). This is an obvious drawback, but if we imagine that these calls are happening over a process boundary - as, god willing, they someday will - then the simpler the datatype the better. The stripped-down return types also more tightly accommodate the data requirements of the callers. For these two reasons, this changeset is a big step towards system decomposition IMO.\r\n\r\nSmall additional notes:\r\n- there are some lingering references to `chainActive` in `wallet/test/wallet_tests.cpp`; not sure if we want to remove those or not.\r\n- there's a forward declaration of `CBlockIndex` in `wallet/wallet.h` that doesn't look necessary anymore.\r\n\r\nI'll be doing a manual test of this branch in the next few days.",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-116397255",
      "submitted_at": "2018-05-03T21:15:35Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
    },
    {
      "event": "reviewed",
      "id": 117658720,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTE3NjU4NzIw",
      "url": null,
      "actor": null,
      "commit_id": "af8f8087699c30ec83995c54112955253bcaba84",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "I've reviewed the first 5 commits, and everything in *Remove uses of chainActive and mapBlockIndex in wallet code* except for wallet.cpp. Will continue on Monday.\r\n\r\nA few questions/comments inline.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-117658720",
      "submitted_at": "2018-05-04T21:39:37Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
    },
    {
      "event": "reviewed",
      "id": 118022524,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTE4MDIyNTI0",
      "url": null,
      "actor": null,
      "commit_id": "af8f8087699c30ec83995c54112955253bcaba84",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Finished reviewing _Remove uses of chainActive and mapBlockIndex in wallet code_. A few more comments inline.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-118022524",
      "submitted_at": "2018-05-07T18:13:20Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
    },
    {
      "event": "reviewed",
      "id": 118137361,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTE4MTM3MzYx",
      "url": null,
      "actor": null,
      "commit_id": "af8f8087699c30ec83995c54112955253bcaba84",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Finished initial review of all commits. One more comment inline that I think the RPC forwarding code would be a lot easier to review if it was limited to a single client. Future PRs could add support for multiple clients.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-118137361",
      "submitted_at": "2018-05-07T20:30:14Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
    },
    {
      "event": "commented",
      "id": 387196649,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzE5NjY0OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/387196649",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-07T20:33:54Z",
      "updated_at": "2018-05-07T20:33:54Z",
      "author_association": "MEMBER",
      "body": "Overall, I think this is a huge improvement. It gives us a well-defined interface between the wallet and node and is a huge step towards separating out the different subsystems. Whether or not we decide to go ahead with process separation, this is very useful work.\r\n\r\nThe wallet<->node interface could certainly be tidied up in future PRs. Since this is an internal interface, that shouldn't stop this PR from being merged as the first step.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#issuecomment-387196649",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10973"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1616423613,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTYxNjQyMzYxMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1616423613",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-08T22:33:43Z"
    },
    {
      "event": "reviewed",
      "id": 117825376,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTE3ODI1Mzc2",
      "url": null,
      "actor": null,
      "commit_id": "af8f8087699c30ec83995c54112955253bcaba84",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for the reviews!\r\n\r\nRebased af8f8087699c30ec83995c54112955253bcaba84 -> 1c597aab8749c95f6ceef24d6795781c913f74a3 ([pr/wipc-sep.51](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.51) -> [pr/wipc-sep.52](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.52)) due to conflicts with #13163 and #13079\r\nAdded 15 commits 1c597aab8749c95f6ceef24d6795781c913f74a3 -> 46593b55552f40dfbb72868c822aafd9834e45ee ([pr/wipc-sep.52](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.52) -> [pr/wipc-sep.53](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.53), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/wipc-sep.52...pr/wipc-sep.53))\r\nSquashed 46593b55552f40dfbb72868c822aafd9834e45ee -> 1bf534a9f53e5ba6f12f05f5e18739715c821576 ([pr/wipc-sep.53](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.53) -> [pr/wipc-sep.54](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.54))\r\nRebased 1bf534a9f53e5ba6f12f05f5e18739715c821576 -> b13720a225f50f9fa96b7e10fda181b1d2770cb8 ([pr/wipc-sep.54](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.54) -> [pr/wipc-sep.55](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.55)) due to conflicts with #13081 and #12560",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-117825376",
      "submitted_at": "2018-05-08T22:35:27Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1625423669,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTYyNTQyMzY2OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1625423669",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-14T17:50:32Z"
    },
    {
      "event": "commented",
      "id": 389985196,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTk4NTE5Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/389985196",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-17T19:40:55Z",
      "updated_at": "2018-05-17T19:40:55Z",
      "author_association": "MEMBER",
      "body": "Concept ACK on a better defined interface between wallet and node.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#issuecomment-389985196",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10973"
    },
    {
      "event": "commented",
      "id": 389986573,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTk4NjU3Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/389986573",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-17T19:45:24Z",
      "updated_at": "2018-05-17T19:45:24Z",
      "author_association": "MEMBER",
      "body": "Concept ACK, makes sense!",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#issuecomment-389986573",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10973"
    },
    {
      "event": "commented",
      "id": 389987377,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTk4NzM3Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/389987377",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-17T19:48:26Z",
      "updated_at": "2018-05-17T19:48:26Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#issuecomment-389987377",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10973"
    },
    {
      "event": "commented",
      "id": 389991468,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTk5MTQ2OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/389991468",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-17T20:02:28Z",
      "updated_at": "2018-05-17T20:02:28Z",
      "author_association": "MEMBER",
      "body": "In case there is agreement to do this change, there should be a plan on how to review and merge without wasting a lot of (re)review and rebase resources. Even though the commits make little sense on their own without the large picture, I assume it would help to split out the mechanical-diff part from the actual code-review part?\r\nAlso, it should probably wait for the current conflicting high-priority pulls to go in.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#issuecomment-389991468",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10973"
    },
    {
      "event": "commented",
      "id": 389991584,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTk5MTU4NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/389991584",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-17T20:02:48Z",
      "updated_at": "2018-05-17T20:02:48Z",
      "author_association": "MEMBER",
      "body": "Great. 3 concept ACKs!\r\n\r\nSplitting first 6 commits into their own PR could make this easier to review: https://botbot.me/freenode/bitcoin-core-dev/2018-05-17/?msg=100176268&page=4\r\n\r\n@ryanofsky - let me know if I can help with that.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#issuecomment-389991584",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10973"
    },
    {
      "event": "mentioned",
      "id": 1632839514,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTYzMjgzOTUxNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1632839514",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-17T20:02:48Z"
    },
    {
      "event": "subscribed",
      "id": 1632839515,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE2MzI4Mzk1MTU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1632839515",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-17T20:02:48Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1635046980,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTYzNTA0Njk4MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1635046980",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-18T20:01:28Z"
    },
    {
      "event": "commented",
      "id": 390318779,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDMxODc3OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/390318779",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-18T20:10:00Z",
      "updated_at": "2018-05-18T20:10:00Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased b13720a225f50f9fa96b7e10fda181b1d2770cb8 -> a71c5b8e73d991f28945280c8812fa0c2898a710 ([pr/wipc-sep.55](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.55) -> [pr/wipc-sep.56](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.56)) due to conflict with #10740",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#issuecomment-390318779",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10973"
    },
    {
      "event": "reviewed",
      "id": 121575825,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTIxNTc1ODI1",
      "url": null,
      "actor": null,
      "commit_id": "a71c5b8e73d991f28945280c8812fa0c2898a710",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-121575825",
      "submitted_at": "2018-05-18T21:19:06Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
    },
    {
      "event": "commented",
      "id": 390335988,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDMzNTk4OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/390335988",
      "actor": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-18T21:22:45Z",
      "updated_at": "2018-05-18T21:22:45Z",
      "author_association": "CONTRIBUTOR",
      "body": "Wow, this is heroic. Big Concept ACK. But I would like to see it split into multiple PRs.\r\n\r\nAlso, I'll note that the lowercasing of method names on the interfaces conflicts with the [Coding Style](https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#coding-style).",
      "user": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#issuecomment-390335988",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10973"
    },
    {
      "event": "commented",
      "id": 391118517,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTExODUxNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/391118517",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-22T19:50:34Z",
      "updated_at": "2018-05-22T20:14:41Z",
      "author_association": "MEMBER",
      "body": "utACK f06a3cc9190bcac4f6109bf9a9f03f92edf1d1fd (not the head commit)\r\n\r\nWill leave <strike>two</strike> one questions for clarification.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#issuecomment-391118517",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10973"
    },
    {
      "event": "reviewed",
      "id": 122326231,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTIyMzI2MjMx",
      "url": null,
      "actor": null,
      "commit_id": "a71c5b8e73d991f28945280c8812fa0c2898a710",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-122326231",
      "submitted_at": "2018-05-22T19:51:52Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1645416371,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTY0NTQxNjM3MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1645416371",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-24T21:59:14Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1662103760,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTY2MjEwMzc2MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1662103760",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-06-04T19:30:03Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-06-08T17:18:48Z",
      "updated_at": "2018-06-08T17:18:48Z",
      "source": {
        "issue": {
          "id": 330593254,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MTkzNTYzNjIy",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13420",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13420/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13420/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13420/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/13420",
          "number": 13420,
          "state": "closed",
          "state_reason": null,
          "title": "Consolidate hash parsing into core_io.h",
          "body": "This consolidates separate hash parsing functions from\r\nrpc/server.cpp, rest.cpp, and core_read.cpp into a low-level\r\nparser `ParseHashStr` in core_read.cpp, and an rpc-level `ParseHash` in rpc/server.cpp.\r\n\r\nNote the rpc parser calls through to the core_io parser.\r\n\r\nBehavior changes are:\r\n* Hashes are consistently validated to 64 characters, the expected\r\n  length for 256 bits hexidecimal. Because all newly-tested calls\r\n  were against txids or blockhashes, this is safe.\r\n* `prioritisetransaction` now throws an `RPC_INVALID_PARAMETER` rather\r\n  than std::runtime_error on bad hash. This is in the context of rpc,\r\n  so seems more appropriate.\r\n* A bunch of calls that did not error meaningfully on bad hashes now do.",
          "user": {
            "login": "Empact",
            "id": 5470,
            "node_id": "MDQ6VXNlcjU0NzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Empact",
            "html_url": "https://github.com/Empact",
            "followers_url": "https://api.github.com/users/Empact/followers",
            "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
            "organizations_url": "https://api.github.com/users/Empact/orgs",
            "repos_url": "https://api.github.com/users/Empact/repos",
            "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Empact/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13420",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/13420",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/13420.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/13420.patch"
          },
          "closed_at": "2018-06-08T17:49:52Z",
          "created_at": "2018-06-08T09:51:09Z",
          "updated_at": "2021-09-08T12:30:07Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 1674125080,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE2NzQxMjUwODA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1674125080",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-06-11T15:04:26Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1681808905,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTY4MTgwODkwNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1681808905",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-06-14T18:04:56Z"
    },
    {
      "event": "unlabeled",
      "id": 1681958093,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MTY4MTk1ODA5Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1681958093",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-06-14T19:19:34Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-06-14T20:20:47Z",
      "updated_at": "2018-06-14T20:20:47Z",
      "source": {
        "issue": {
          "id": 331293488,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MTk0MDYwMTI0",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13437",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13437/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13437/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13437/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/13437",
          "number": 13437,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: Erase wtxOrderd wtx pointer on removeprunedfunds",
          "body": "This prevents segfaults, when reading from the freed memory.",
          "user": {
            "login": "MarcoFalke",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarcoFalke",
            "html_url": "https://github.com/MarcoFalke",
            "followers_url": "https://api.github.com/users/MarcoFalke/followers",
            "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
            "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
            "repos_url": "https://api.github.com/users/MarcoFalke/repos",
            "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/36",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/36",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/36/labels",
            "id": 3355555,
            "node_id": "MDk6TWlsZXN0b25lMzM1NTU1NQ==",
            "number": 36,
            "state": "closed",
            "title": "0.16.2",
            "description": "",
            "creator": {
              "login": "laanwj",
              "id": 126646,
              "node_id": "MDQ6VXNlcjEyNjY0Ng==",
              "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/laanwj",
              "html_url": "https://github.com/laanwj",
              "followers_url": "https://api.github.com/users/laanwj/followers",
              "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
              "organizations_url": "https://api.github.com/users/laanwj/orgs",
              "repos_url": "https://api.github.com/users/laanwj/repos",
              "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/laanwj/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 13,
            "created_at": "2018-05-17T19:18:47Z",
            "updated_at": "2018-07-30T00:55:24Z",
            "closed_at": "2018-07-30T00:55:24Z"
          },
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 9,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13437",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/13437",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/13437.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/13437.patch"
          },
          "closed_at": "2018-06-18T15:35:24Z",
          "created_at": "2018-06-11T18:09:49Z",
          "updated_at": "2021-09-08T12:30:22Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-06-14T20:22:54Z",
      "updated_at": "2018-06-14T20:22:54Z",
      "source": {
        "issue": {
          "id": 331067560,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MTkzODkwMjcy",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13430",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13430/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13430/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13430/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/13430",
          "number": 13430,
          "state": "closed",
          "state_reason": null,
          "title": "use IsBlockPruned() where appropriate",
          "body": "There are cases where a \"full\" check for block pruning is not done (`fHavePruned` and `nTx > 0` checks), but where the context indicates that pruning is always the reason. This makes the checks more explicit and straightforward, and separates them more from the cases where we are simply checking whether we have a block or not vs whether we had it at one point and it was pruned.\r\n\r\nNote that `nTx > 0` is supposed to always be equivalent to `(pindex->nStatus & BLOCK_HAVE_DATA)`. (Edit: got this backwards; this is true for the true case, but for pruned nodes, `nTx > 0` while `(pindex->nStatus & BLOCK_HAVE_DATA) is 0`.)",
          "user": {
            "login": "kallewoof",
            "id": 250224,
            "node_id": "MDQ6VXNlcjI1MDIyNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kallewoof",
            "html_url": "https://github.com/kallewoof",
            "followers_url": "https://api.github.com/users/kallewoof/followers",
            "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
            "organizations_url": "https://api.github.com/users/kallewoof/orgs",
            "repos_url": "https://api.github.com/users/kallewoof/repos",
            "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/kallewoof/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 10,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13430",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/13430",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/13430.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/13430.patch"
          },
          "closed_at": "2018-12-14T08:37:33Z",
          "created_at": "2018-06-11T07:05:21Z",
          "updated_at": "2021-12-16T14:07:20Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-06-14T20:25:08Z",
      "updated_at": "2018-06-14T20:25:08Z",
      "source": {
        "issue": {
          "id": 330982079,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MTkzODM0MzE2",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13426",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13426/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13426/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13426/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/13426",
          "number": 13426,
          "state": "closed",
          "state_reason": null,
          "title": "[bugfix] Fix encoding issue for Windows",
          "body": "Fix #13103 \r\nFix #13754\r\n\r\nFrom https://github.com/bitcoin/bitcoin/pull/13107#issuecomment-385141831, @laanwj suggested that we should keep our internal strings to be always utf-8 encoded.\r\n\r\nThis PR adds two C++17 compatible macros: `u8string` and `u8path`. The reason that I use macros is that developers might not want to pass second parameter `utf8` everytime when they call `string` or create `path` objects.\r\n\r\nI tried to find all `string` methods and convert them to `u8string` except for external api calls. Also tried to convert explicit or implicit `path` to `u8path`. Tell me if you find something that I missed.\r\n\r\nRequired: bitcoin-core/leveldb#18\r\n\r\nSee #13787 for travis run result\r\n\r\n\r\nCaution: The user must change their config file to be utf-8 encoded if the file contains any non-ascii characters in it. Before 0.18, they are read as ansi-encoded characters on Windows.\r\n--",
          "user": {
            "login": "ken2812221",
            "id": 11154118,
            "node_id": "MDQ6VXNlcjExMTU0MTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ken2812221",
            "html_url": "https://github.com/ken2812221",
            "followers_url": "https://api.github.com/users/ken2812221/followers",
            "following_url": "https://api.github.com/users/ken2812221/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ken2812221/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ken2812221/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
            "organizations_url": "https://api.github.com/users/ken2812221/orgs",
            "repos_url": "https://api.github.com/users/ken2812221/repos",
            "events_url": "https://api.github.com/users/ken2812221/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ken2812221/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64585,
              "node_id": "MDU6TGFiZWw2NDU4NQ==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
              "name": "Bug",
              "color": "FBBAAB",
              "default": false
            },
            {
              "id": 234877,
              "node_id": "MDU6TGFiZWwyMzQ4Nzc=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Windows",
              "name": "Windows",
              "color": "884400",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/35",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/35",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/35/labels",
            "id": 3318051,
            "node_id": "MDk6TWlsZXN0b25lMzMxODA1MQ==",
            "number": 35,
            "state": "closed",
            "title": "0.18.0",
            "description": "",
            "creator": {
              "login": "MarcoFalke",
              "id": 6399679,
              "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
              "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/MarcoFalke",
              "html_url": "https://github.com/MarcoFalke",
              "followers_url": "https://api.github.com/users/MarcoFalke/followers",
              "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
              "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
              "repos_url": "https://api.github.com/users/MarcoFalke/repos",
              "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 186,
            "created_at": "2018-05-03T15:34:54Z",
            "updated_at": "2020-03-17T18:30:07Z",
            "closed_at": "2019-05-03T02:51:38Z"
          },
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 21,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13426",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/13426",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/13426.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/13426.patch"
          },
          "closed_at": "2018-08-05T15:27:31Z",
          "created_at": "2018-06-10T16:23:56Z",
          "updated_at": "2021-09-08T12:44:49Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-06-14T20:27:05Z",
      "updated_at": "2018-06-14T20:27:05Z",
      "source": {
        "issue": {
          "id": 330765305,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MTkzNjk0ODM5",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13424",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13424/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13424/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13424/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/13424",
          "number": 13424,
          "state": "closed",
          "state_reason": null,
          "title": "Consistently validate txid / blockhash length and encoding in rpc calls",
          "body": "ParseHashV validates the length and encoding of the string and throws\r\nan informative RPC error on failure, which is as good or better than\r\nthese alternative calls.\r\n\r\nNote I switched ParseHashV to check string length first, because\r\nIsHex tests that the length is even, and an error like:\r\n\"must be of length 64 (not 63, for X)\" is much more informative than\r\n\"must be hexadecimal string (not X)\" in that case.\r\n\r\nSplit from #13420",
          "user": {
            "login": "Empact",
            "id": 5470,
            "node_id": "MDQ6VXNlcjU0NzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Empact",
            "html_url": "https://github.com/Empact",
            "followers_url": "https://api.github.com/users/Empact/followers",
            "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
            "organizations_url": "https://api.github.com/users/Empact/orgs",
            "repos_url": "https://api.github.com/users/Empact/repos",
            "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Empact/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 7,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13424",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/13424",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/13424.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/13424.patch"
          },
          "closed_at": "2018-09-24T19:10:58Z",
          "created_at": "2018-06-08T18:49:06Z",
          "updated_at": "2021-09-08T11:58:04Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1689711036,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTY4OTcxMTAzNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1689711036",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-06-19T21:14:46Z"
    },
    {
      "event": "reviewed",
      "id": 130515100,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTMwNTE1MTAw",
      "url": null,
      "actor": null,
      "commit_id": "4a1c901c7e4bd9e2e5545d1a1ab155e86d72faea",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "ken2812221",
        "id": 11154118,
        "node_id": "MDQ6VXNlcjExMTU0MTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ken2812221",
        "html_url": "https://github.com/ken2812221",
        "followers_url": "https://api.github.com/users/ken2812221/followers",
        "following_url": "https://api.github.com/users/ken2812221/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ken2812221/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ken2812221/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
        "organizations_url": "https://api.github.com/users/ken2812221/orgs",
        "repos_url": "https://api.github.com/users/ken2812221/repos",
        "events_url": "https://api.github.com/users/ken2812221/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ken2812221/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-130515100",
      "submitted_at": "2018-06-20T17:39:35Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
    },
    {
      "event": "commented",
      "id": 398847006,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODg0NzAwNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/398847006",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-06-20T18:16:40Z",
      "updated_at": "2018-06-20T18:16:40Z",
      "author_association": "MEMBER",
      "body": "@ryanofsky - are you still maintaining this? What are your thoughts about splitting the first 6 commits into a separate PR (https://github.com/bitcoin/bitcoin/pull/10973#issuecomment-389991584)?",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#issuecomment-398847006",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10973"
    },
    {
      "event": "mentioned",
      "id": 1691888778,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTY5MTg4ODc3OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1691888778",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-06-20T18:16:40Z"
    },
    {
      "event": "subscribed",
      "id": 1691888780,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE2OTE4ODg3ODA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1691888780",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-06-20T18:16:40Z"
    },
    {
      "event": "labeled",
      "id": 1697617242,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE2OTc2MTcyNDI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1697617242",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-06-24T14:22:58Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1702027844,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTcwMjAyNzg0NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1702027844",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-06-26T17:20:08Z"
    },
    {
      "event": "commented",
      "id": 400396804,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDM5NjgwNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/400396804",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-06-26T17:24:52Z",
      "updated_at": "2019-03-05T14:48:05Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased a71c5b8e73d991f28945280c8812fa0c2898a710 -> 7e906d547788bddb9a7993d98e310c65cf6b6604 ([pr/wipc-sep.56](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.56\r\n) -> [pr/wipc-sep.57](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.57)) due to conflict with #13063\r\nRebased 7e906d547788bddb9a7993d98e310c65cf6b6604 -> f8bdedf99707d9317cb600a99ccdece63bea33f8 ([pr/wipc-sep.57](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.57\r\n) -> [pr/wipc-sep.58](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.58)) due to conflict with #13112\r\nRebased f8bdedf99707d9317cb600a99ccdece63bea33f8 -> 79b723888a0ea349fb25ffdeb2ca015f85120e96 ([pr/wipc-sep.58](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.58\r\n) -> [pr/wipc-sep.59](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.59)) due to conflicts with #12634 and #13120\r\nRebased 79b723888a0ea349fb25ffdeb2ca015f85120e96 -> 4a1c901c7e4bd9e2e5545d1a1ab155e86d72faea ([pr/wipc-sep.59](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.59\r\n) -> [pr/wipc-sep.60](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.60)) due to conflict with #13437\r\nRebased 4a1c901c7e4bd9e2e5545d1a1ab155e86d72faea -> 6ee6221aa5adaf643c0d856e9b8a0480f5d6e150 ([pr/wipc-sep.60](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.60) -> [pr/wipc-sep.61](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.61)) due to conflict with #13111\r\n Updated 6ee6221aa5adaf643c0d856e9b8a0480f5d6e150 -> 7e59fa372968009d8b4df29ce9893b4038f9c2cd ([pr/wipc-sep.61](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.61) -> [pr/wipc-sep.62](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.62)) to fix lint errors\r\nRebased 7e59fa372968009d8b4df29ce9893b4038f9c2cd -> 7f9fabce8fa33aae220f9cdeb40c540ef0ef849d ([pr/wipc-sep.62](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.62) -> [pr/wipc-sep.63](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.63)) due to conflict with #13235\r\nRebased 7f9fabce8fa33aae220f9cdeb40c540ef0ef849d -> 56e391398edc617042d910a2433ccd08c6a05d44 ([pr/wipc-sep.63](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.63) -> [pr/wipc-sep.64](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.64)) due to conflict with #13570\r\nRebased 56e391398edc617042d910a2433ccd08c6a05d44 -> d8abd3c2a9378968d258b8beb33b6516eb2257fa ([pr/wipc-sep.64](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.64) -> [pr/wipc-sep.65](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.65)) due to conflict with #13622\r\nRebased d8abd3c2a9378968d258b8beb33b6516eb2257fa -> 635bc2d32ea2a5e67bef8669cc4b4466489d72d1 ([pr/wipc-sep.65](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.65) -> [pr/wipc-sep.66](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.66)) due to conflicts with #13630, #13566, #13651, #13072, and #12944. Also added `g_interfaces` global variable to be able to access chain and chain interface pointers from RPC handlers like `setmocktime` and `loadwallet` that need access to the interfaces but don't have any other way of getting access to bitcoin state.\r\nRebased 635bc2d32ea2a5e67bef8669cc4b4466489d72d1 -> 3344aa65fc6179dabc6fa736fe6c81043466f221 ([pr/wipc-sep.66](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.66) -> [pr/wipc-sep.67](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.67)) due to conflicts with #13822, #9662, #13786. Also replaced ` g_interfaces` with `g_rpc_interfaces`.\r\nUpdated 3344aa65fc6179dabc6fa736fe6c81043466f221 -> fb60d4fbbe5f5e588618a41b858e376f938a02a5 ([pr/wipc-sep.67](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.67) -> [pr/wipc-sep.68](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.68)) to work around circular dependency lint error\r\nRebased fb60d4fbbe5f5e588618a41b858e376f938a02a5 -> 1528b74cdc7425d84911b748e32daaf1d9ce3be6 ([pr/wipc-sep.68](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.68) -> [pr/wipc-sep.69](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.69)) due to conflict with #12992\r\nRebased 1528b74cdc7425d84911b748e32daaf1d9ce3be6 -> 78250d158075f0a71dfef64cfdecc6ef042caf03 ([pr/wipc-sep.69](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.69) -> [pr/wipc-sep.70](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.70)) due to conflict with #13657\r\nRebased 78250d158075f0a71dfef64cfdecc6ef042caf03 -> abe06d8140ec74e3ad0736a3721a97b4a08f6919 ([pr/wipc-sep.70](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.70) -> [pr/wipc-sep.71](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.71)) due to conflict with #13911\r\nRebased abe06d8140ec74e3ad0736a3721a97b4a08f6919 -> 2789833b2114af13881e3949e9c0211ff80a0ec1 ([pr/wipc-sep.71](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.71) -> [pr/wipc-sep.72](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.72)) due to conflict with #13634 \r\nRebased 2789833b2114af13881e3949e9c0211ff80a0ec1 -> 4910f87ee994741004a50e9394dd321771fbbff2 ([pr/wipc-sep.72](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.72) -> [pr/wipc-sep.73](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.73)) due to conflict with #12559\r\nUpdated 4910f87ee994741004a50e9394dd321771fbbff2 -> 49214aa0a0a20676fa1d9ff0324912374058adfc ([pr/wipc-sep.73](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.73) -> [pr/wipc-sep.74](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.74)) to fix msvc / appveyor link errors\r\nUpdated 49214aa0a0a20676fa1d9ff0324912374058adfc -> 3ce12080c3a7413f03df2212f1d58f405489e894 ([pr/wipc-sep.74](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.74) -> [pr/wipc-sep.75](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.75)) to fix msvc / appveyor compile error\r\nRebased 3ce12080c3a7413f03df2212f1d58f405489e894 -> 2f6bf5cd2b6dd4c8a148887afd0aa51237f79a4c ([pr/wipc-sep.75](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.75) -> [pr/wipc-sep.76](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.76)) due to conflicts with #13631, #13083, #14062, and #14023\r\nUpdated 2f6bf5cd2b6dd4c8a148887afd0aa51237f79a4c -> b344a2e3d1b16f08c97edb96fc64b6b6b65c310e ([pr/wipc-sep.76](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.76) -> [pr/wipc-sep.77](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.77)) to fix appveyor error\r\nRebased b344a2e3d1b16f08c97edb96fc64b6b6b65c310e -> bea29712919f5216ffc6096ef715db4d82594032 ([pr/wipc-sep.77](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.77) -> [pr/wipc-sep.78](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.78)) due to conflict with #13825\r\nRebased bea29712919f5216ffc6096ef715db4d82594032 -> 249bf5006184f81d77d40ee0ede0924c628bf33e ([pr/wipc-sep.78](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.78) -> [pr/wipc-sep.79](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.79)) due to conflicts with #10605 and #11599\r\nRebased 249bf5006184f81d77d40ee0ede0924c628bf33e -> 0219d88970afa3dd39501fe5fb9eb1266a0a4830 ([pr/wipc-sep.79](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.79) -> [pr/wipc-sep.80](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.80)) due to conflicts with #14204 and #14168 Rebased 0219d88970afa3dd39501fe5fb9eb1266a0a4830 -> 2da040ee454e1393050607921d625a9d60a0f960 ([pr/wipc-sep.80](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.80) -> [pr/wipc-sep.81](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.81)) due to conflict with #14208 \r\nRebased 2da040ee454e1393050607921d625a9d60a0f960 -> e44e639558b1084f14a97847592616c3df9fff38 ([pr/wipc-sep.81](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.81) -> [pr/wipc-sep.82](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.82)) due to conflict with #12493\r\nRebased e44e639558b1084f14a97847592616c3df9fff38 -> 18c5bba238abc5dbca900eb792b8239bc40f505f ([pr/wipc-sep.82](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.82) -> [pr/wipc-sep.83](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.83)) due to conflicts with #13424 and #14310\r\nRebased 18c5bba238abc5dbca900eb792b8239bc40f505f -> 45b23efaada081a7be9e255df59670f4704c45d1 ([pr/wipc-sep.83](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.83) -> [pr/wipc-sep.84](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.84)) due to conflict with #14282\r\nRebased 45b23efaada081a7be9e255df59670f4704c45d1 -> 1461fcacbc441f1abb782406bd6dcd48edf36aa6 ([pr/wipc-sep.84](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.84) -> [pr/wipc-sep.85](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.85)) with various updates, and due to conflicts with #11634 and #14146\r\nRebased 1461fcacbc441f1abb782406bd6dcd48edf36aa6 -> 158ec814077c80bcc29e019f51af566504df1395 ([pr/wipc-sep.85](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.85) -> [pr/wipc-sep.86](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.86)) due to conflicts with #14350 and #14555\r\nRebased 158ec814077c80bcc29e019f51af566504df1395 -> 3a2668b7bb63f26ee17873a83eaf5b4e97820f56 ([pr/wipc-sep.86](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.86) -> [pr/wipc-sep.87](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.87)) due to base PR #14437 being merged, on top of new base PR #14711, tag [pr/wchain2.1](https://github.com/ryanofsky/bitcoin/commits/pr/wchain2.1)\r\nRebased 3a2668b7bb63f26ee17873a83eaf5b4e97820f56 -> 30fe0bbc3c4ad370567b2072338a2f54f3b4b7dd ([pr/wipc-sep.87](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.87) -> [pr/wipc-sep.88](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.88)) due to conflict with #14530\r\nRebased 30fe0bbc3c4ad370567b2072338a2f54f3b4b7dd -> 7e498129c701b5daf4cd55be70131a8852c7c70b ([pr/wipc-sep.88](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.88) -> [pr/wipc-sep.89](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.89)) on top of base PR #14711 tag [pr/wchain2.2](https://github.com/ryanofsky/bitcoin/commits/pr/wchain2.2)\r\nRebased 7e498129c701b5daf4cd55be70131a8852c7c70b -> 9e096b9b014ab571476e4da8d8f289b38455725d ([pr/wipc-sep.89](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.89) -> [pr/wipc-sep.90](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.90)) on top of base PR #14711 tag [pr/wchain2.3](https://github.com/ryanofsky/bitcoin/commits/pr/wchain2.3)\r\nRebased 9e096b9b014ab571476e4da8d8f289b38455725d -> bbd4ec6a7e5a23f83b79b9cecfd26c96b4c37c88 ([pr/wipc-sep.90](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.90) -> [pr/wipc-sep.91](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.91)) on top of base PR #14711 tag [pr/wchain2.4](https://github.com/ryanofsky/bitcoin/commits/pr/wchain2.4)\r\nRebased bbd4ec6a7e5a23f83b79b9cecfd26c96b4c37c88 -> 108a56aa073921250a4742524d7493e9233e0f5a ([pr/wipc-sep.91](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.91) -> [pr/wipc-sep.92](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.92)) on top of base PR #14711 tag [pr/wchain2.6](https://github.com/ryanofsky/bitcoin/commits/pr/wchain2.6)\r\nRebased 108a56aa073921250a4742524d7493e9233e0f5a -> 732552ae1eac358cabe21d4dceee19d7aced984c ([pr/wipc-sep.92](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.92) -> [pr/wipc-sep.93](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.93)) due to conflicts with #14556 and #14906\r\nRebased 732552ae1eac358cabe21d4dceee19d7aced984c -> 8d434a2edd61fd55f07d6d778c11e59b27bdad03 ([pr/wipc-sep.93](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.93) -> [pr/wipc-sep.94](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.94)) on top of base PR #15288 tag [pr/wchain3.1](https://github.com/ryanofsky/bitcoin/commits/pr/wchain3.1)\r\nRebased 8d434a2edd61fd55f07d6d778c11e59b27bdad03 -> 91ef0101b38dc530d92c6cd19be62095a0c8dea9 ([pr/wipc-sep.94](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.94) -> [pr/wipc-sep.95](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.95)) on top of base PR #15288 tag [pr/wchain3.5](https://github.com/ryanofsky/bitcoin/commits/pr/wchain3.5)\r\nRebased 91ef0101b38dc530d92c6cd19be62095a0c8dea9 -> 016b121b447d5383614ef77d6a050bd66994170b ([pr/wipc-sep.95](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.95) -> [pr/wipc-sep.96](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.96)) after base PR #15288 merged\r\nRebased 016b121b447d5383614ef77d6a050bd66994170b -> 6898f5376071dcd84ce4aea980e170b4953c18bb ([pr/wipc-sep.96](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.96) -> [pr/wipc-sep.97](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.97)) due to conflict with #15531\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#issuecomment-400396804",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10973"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-06-26T17:50:14Z",
      "updated_at": "2018-06-26T17:50:14Z",
      "source": {
        "issue": {
          "id": 318670817,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MTg0ODA2Nzg2",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13111",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13111/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13111/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13111/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/13111",
          "number": 13111,
          "state": "closed",
          "state_reason": null,
          "title": "Add unloadwallet RPC",
          "body": "This patch adds wallet unload feature via RPC. It also adds UI support for unloaded wallets.",
          "user": {
            "login": "promag",
            "id": 3534524,
            "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/promag",
            "html_url": "https://github.com/promag",
            "followers_url": "https://api.github.com/users/promag/followers",
            "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
            "organizations_url": "https://api.github.com/users/promag/orgs",
            "repos_url": "https://api.github.com/users/promag/repos",
            "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/promag/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 25,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13111",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/13111",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/13111.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/13111.patch"
          },
          "closed_at": "2018-06-21T14:25:36Z",
          "created_at": "2018-04-28T21:43:11Z",
          "updated_at": "2021-09-08T11:55:14Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1702766648,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTcwMjc2NjY0OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1702766648",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-06-27T00:50:07Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-06-27T10:47:54Z",
      "updated_at": "2018-06-27T10:47:54Z",
      "source": {
        "issue": {
          "id": 332152214,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MTk0NzA2MTU3",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13461",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13461/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13461/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13461/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/13461",
          "number": 13461,
          "state": "closed",
          "state_reason": null,
          "title": "Wallet: correctly deprecate accounts in getbalance, re-add minconf / include-watch-only",
          "body": "It looks like that #9614 accidentally(?) dropped support for `min-conf` and `watch_only` in `getbalance()`.\r\n\r\nThis PR tries to correctly deprecate accounts in `getbalance()` following the dummy-argument approach. ",
          "user": {
            "login": "jonasschnelli",
            "id": 178464,
            "node_id": "MDQ6VXNlcjE3ODQ2NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonasschnelli",
            "html_url": "https://github.com/jonasschnelli",
            "followers_url": "https://api.github.com/users/jonasschnelli/followers",
            "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
            "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
            "repos_url": "https://api.github.com/users/jonasschnelli/repos",
            "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/33",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/33",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/33/labels",
            "id": 2931889,
            "node_id": "MDk6TWlsZXN0b25lMjkzMTg4OQ==",
            "number": 33,
            "state": "closed",
            "title": "0.17.0",
            "description": "",
            "creator": {
              "login": "MarcoFalke",
              "id": 6399679,
              "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
              "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/MarcoFalke",
              "html_url": "https://github.com/MarcoFalke",
              "followers_url": "https://api.github.com/users/MarcoFalke/followers",
              "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
              "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
              "repos_url": "https://api.github.com/users/MarcoFalke/repos",
              "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 122,
            "created_at": "2017-11-22T18:54:09Z",
            "updated_at": "2018-11-28T21:03:57Z",
            "closed_at": "2018-10-14T23:21:13Z"
          },
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 16,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13461",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/13461",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/13461.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/13461.patch"
          },
          "closed_at": "2018-06-28T18:40:29Z",
          "created_at": "2018-06-13T20:30:40Z",
          "updated_at": "2021-09-08T11:55:17Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "unlabeled",
      "id": 1703605730,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MTcwMzYwNTczMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1703605730",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-06-27T11:01:55Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 132628309,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTMyNjI4MzA5",
      "url": null,
      "actor": null,
      "commit_id": "7e59fa372968009d8b4df29ce9893b4038f9c2cd",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-132628309",
      "submitted_at": "2018-06-27T22:13:00Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-06-30T11:35:59Z",
      "updated_at": "2018-06-30T11:35:59Z",
      "source": {
        "issue": {
          "id": 337016308,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MTk4MzMwOTgy",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13570",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13570/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13570/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13570/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/13570",
          "number": 13570,
          "state": "closed",
          "state_reason": null,
          "title": "RPC: Add new \"getzmqnotifications\" method",
          "body": "This adds a new RPC method `getzmqnotifications`, which returns information about all active ZMQ notification endpoints.  This is useful for software that layers on top of bitcoind, so it can verify that ZeroMQ is enabled and also figure out where it should listen.\r\n    \r\nSee #13526.",
          "user": {
            "login": "domob1812",
            "id": 4943644,
            "node_id": "MDQ6VXNlcjQ5NDM2NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4943644?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/domob1812",
            "html_url": "https://github.com/domob1812",
            "followers_url": "https://api.github.com/users/domob1812/followers",
            "following_url": "https://api.github.com/users/domob1812/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/domob1812/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/domob1812/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/domob1812/subscriptions",
            "organizations_url": "https://api.github.com/users/domob1812/orgs",
            "repos_url": "https://api.github.com/users/domob1812/repos",
            "events_url": "https://api.github.com/users/domob1812/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/domob1812/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13570",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/13570",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/13570.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/13570.patch"
          },
          "closed_at": "2018-07-09T15:22:12Z",
          "created_at": "2018-06-29T14:17:00Z",
          "updated_at": "2021-09-08T11:55:45Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-06-30T11:36:36Z",
      "updated_at": "2018-06-30T11:36:36Z",
      "source": {
        "issue": {
          "id": 336742852,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MTk4MTIzODc4",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13566",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13566/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13566/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13566/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/13566",
          "number": 13566,
          "state": "closed",
          "state_reason": null,
          "title": "Fix get balance",
          "body": " #12953 inadvertently removed the functionality to call `getbalance \"*\" <int> <bool>` to get the wallet's balance with either minconfs or include_watchonly.\r\n\r\nThis restores that functionality (when `-deprecatedrpc=accounts`), and also makes it possible to call ``getbalance minconf=<int> include_watchonly=<bool>` when accounts are not being used.",
          "user": {
            "login": "jnewbery",
            "id": 1063656,
            "node_id": "MDQ6VXNlcjEwNjM2NTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jnewbery",
            "html_url": "https://github.com/jnewbery",
            "followers_url": "https://api.github.com/users/jnewbery/followers",
            "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
            "organizations_url": "https://api.github.com/users/jnewbery/orgs",
            "repos_url": "https://api.github.com/users/jnewbery/repos",
            "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jnewbery/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/33",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/33",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/33/labels",
            "id": 2931889,
            "node_id": "MDk6TWlsZXN0b25lMjkzMTg4OQ==",
            "number": 33,
            "state": "closed",
            "title": "0.17.0",
            "description": "",
            "creator": {
              "login": "MarcoFalke",
              "id": 6399679,
              "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
              "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/MarcoFalke",
              "html_url": "https://github.com/MarcoFalke",
              "followers_url": "https://api.github.com/users/MarcoFalke/followers",
              "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
              "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
              "repos_url": "https://api.github.com/users/MarcoFalke/repos",
              "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 122,
            "created_at": "2017-11-22T18:54:09Z",
            "updated_at": "2018-11-28T21:03:57Z",
            "closed_at": "2018-10-14T23:21:13Z"
          },
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 17,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13566",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/13566",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/13566.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/13566.patch"
          },
          "closed_at": "2018-07-14T02:47:45Z",
          "created_at": "2018-06-28T19:05:11Z",
          "updated_at": "2021-09-08T12:49:42Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 1721412072,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE3MjE0MTIwNzI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1721412072",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-07-07T09:00:49Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1726247840,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTcyNjI0Nzg0MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1726247840",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-07-10T18:29:57Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1726297321,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTcyNjI5NzMyMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1726297321",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-07-10T18:54:29Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-07-11T12:05:25Z",
      "updated_at": "2018-07-11T12:05:25Z",
      "source": {
        "issue": {
          "id": 340095590,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjAwNTg5Mzkz",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13631",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13631/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13631/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13631/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/13631",
          "number": 13631,
          "state": "closed",
          "state_reason": null,
          "title": "Add CMerkleTx::IsImmatureCoinBase method",
          "body": "All but one call to `GetBlocksToMaturity` is testing it relative to 0\r\nfor the purposes of determining whether the coinbase tx is immature.\r\nIn such case, the value greater than 0 implies that the tx is coinbase,\r\nso there is no need to separately test that status.\r\n\r\nThis names the concept for easy singular use.",
          "user": {
            "login": "Empact",
            "id": 5470,
            "node_id": "MDQ6VXNlcjU0NzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Empact",
            "html_url": "https://github.com/Empact",
            "followers_url": "https://api.github.com/users/Empact/followers",
            "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
            "organizations_url": "https://api.github.com/users/Empact/orgs",
            "repos_url": "https://api.github.com/users/Empact/repos",
            "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Empact/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 15,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13631",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/13631",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/13631.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/13631.patch"
          },
          "closed_at": "2018-08-25T14:54:39Z",
          "created_at": "2018-07-11T05:20:43Z",
          "updated_at": "2021-09-08T11:57:10Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-07-11T12:05:43Z",
      "updated_at": "2018-07-11T12:05:43Z",
      "source": {
        "issue": {
          "id": 340088279,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjAwNTg0MzE0",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13630",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13630/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13630/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13630/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/13630",
          "number": 13630,
          "state": "closed",
          "state_reason": null,
          "title": "Drop unused pindexRet arg to CMerkleTx::GetDepthInMainChain",
          "body": "",
          "user": {
            "login": "Empact",
            "id": 5470,
            "node_id": "MDQ6VXNlcjU0NzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Empact",
            "html_url": "https://github.com/Empact",
            "followers_url": "https://api.github.com/users/Empact/followers",
            "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
            "organizations_url": "https://api.github.com/users/Empact/orgs",
            "repos_url": "https://api.github.com/users/Empact/repos",
            "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Empact/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 5,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13630",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/13630",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/13630.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/13630.patch"
          },
          "closed_at": "2018-07-14T02:34:40Z",
          "created_at": "2018-07-11T04:31:34Z",
          "updated_at": "2021-09-08T12:38:03Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-07-11T12:07:35Z",
      "updated_at": "2018-07-11T12:07:35Z",
      "source": {
        "issue": {
          "id": 339718624,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjAwMzAxNDc0",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13622",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13622/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13622/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13622/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/13622",
          "number": 13622,
          "state": "closed",
          "state_reason": null,
          "title": "Remove mapRequest tracking that just effects Qt display.",
          "body": "I thought we had removed this a long time ago, TBH, its really\r\nconfusing feedback to users that we display whether a tx was\r\nbroadcast to immediate neighbor nodes, given that has little\r\nindication of whether the tx propagated very far.",
          "user": {
            "login": "TheBlueMatt",
            "id": 649246,
            "node_id": "MDQ6VXNlcjY0OTI0Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TheBlueMatt",
            "html_url": "https://github.com/TheBlueMatt",
            "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
            "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
            "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
            "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
            "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135946,
              "node_id": "MDU6TGFiZWwxMzU5NDY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/GUI",
              "name": "GUI",
              "color": "02d7e1",
              "default": false
            },
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 10,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13622",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/13622",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/13622.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/13622.patch"
          },
          "closed_at": "2018-07-11T14:37:36Z",
          "created_at": "2018-07-10T07:06:36Z",
          "updated_at": "2021-09-08T11:56:08Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-07-11T12:09:01Z",
      "updated_at": "2018-07-11T12:09:01Z",
      "source": {
        "issue": {
          "id": 339167313,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MTk5OTA5NDcz",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13612",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13612/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13612/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13612/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/13612",
          "number": 13612,
          "state": "closed",
          "state_reason": null,
          "title": "Qt: Only call tryGetBalances in pollBalanceChanged if the result will be used.",
          "body": "getBalances takes significant processing if the wallet has many transactions.",
          "user": {
            "login": "tecnovert",
            "id": 8041488,
            "node_id": "MDQ6VXNlcjgwNDE0ODg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8041488?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tecnovert",
            "html_url": "https://github.com/tecnovert",
            "followers_url": "https://api.github.com/users/tecnovert/followers",
            "following_url": "https://api.github.com/users/tecnovert/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/tecnovert/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/tecnovert/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/tecnovert/subscriptions",
            "organizations_url": "https://api.github.com/users/tecnovert/orgs",
            "repos_url": "https://api.github.com/users/tecnovert/repos",
            "events_url": "https://api.github.com/users/tecnovert/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/tecnovert/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135946,
              "node_id": "MDU6TGFiZWwxMzU5NDY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/GUI",
              "name": "GUI",
              "color": "02d7e1",
              "default": false
            },
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 10,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13612",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/13612",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/13612.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/13612.patch"
          },
          "closed_at": "2019-08-04T06:13:00Z",
          "created_at": "2018-07-07T18:57:59Z",
          "updated_at": "2022-08-16T17:14:02Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-07-11T12:09:36Z",
      "updated_at": "2018-07-11T12:09:36Z",
      "source": {
        "issue": {
          "id": 337319197,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MTk4NTQwODk3",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13582",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13582/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13582/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13582/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/13582",
          "number": 13582,
          "state": "closed",
          "state_reason": null,
          "title": "Extract AppInitLoadBlockIndex from AppInitMain",
          "body": "AppInitMain goes from ~650 lines to ~500. This also replaces constructs like\r\n`while(false)` and using `break` vs `return` with a simple bool result for more\r\nexplicit operation.\r\n\r\nPrompted by looking into #13577 \r\n\r\nSuggest: `git diff --color-moved=dimmed_zebra --color-moved-ws=allow-indentation-change head^` to aid review.",
          "user": {
            "login": "Empact",
            "id": 5470,
            "node_id": "MDQ6VXNlcjU0NzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Empact",
            "html_url": "https://github.com/Empact",
            "followers_url": "https://api.github.com/users/Empact/followers",
            "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
            "organizations_url": "https://api.github.com/users/Empact/orgs",
            "repos_url": "https://api.github.com/users/Empact/repos",
            "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Empact/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 23,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13582",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/13582",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/13582.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/13582.patch"
          },
          "closed_at": "2019-05-28T21:12:34Z",
          "created_at": "2018-07-01T20:23:07Z",
          "updated_at": "2021-12-16T14:11:28Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "unlabeled",
      "id": 1727787708,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MTcyNzc4NzcwOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1727787708",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-07-11T12:23:02Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-07-11T13:40:54Z",
      "updated_at": "2018-07-11T13:40:54Z",
      "source": {
        "issue": {
          "id": 340245277,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjAwNzAyNTIy",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13634",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13634/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13634/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13634/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/13634",
          "number": 13634,
          "state": "closed",
          "state_reason": null,
          "title": "ui: Compile boost::signals2 only once",
          "body": "ui is one of the modules that poison other modules with `boost/signals2` headers. This moves the include to the cpp file and uses a forward declaration in the header.\r\n\r\nLocally this speeds up the incremental build (building everything that uses the ui module) with gcc by ~5% for me. Gcc uses ~5% less memory.\r\n\r\nWould be nice if someone could verify the numbers roughly.\r\n\r\nI presume the improvements will be more pronounced if the other models would stop exposing the boost header as well.",
          "user": {
            "login": "MarcoFalke",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarcoFalke",
            "html_url": "https://github.com/MarcoFalke",
            "followers_url": "https://api.github.com/users/MarcoFalke/followers",
            "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
            "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
            "repos_url": "https://api.github.com/users/MarcoFalke/repos",
            "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 5,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13634",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/13634",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/13634.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/13634.patch"
          },
          "closed_at": "2018-08-13T19:04:10Z",
          "created_at": "2018-07-11T13:36:18Z",
          "updated_at": "2021-09-08T11:56:49Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 1728194005,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE3MjgxOTQwMDU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1728194005",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-07-11T15:07:50Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1730507398,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTczMDUwNzM5OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1730507398",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-07-12T14:47:21Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-07-12T16:12:39Z",
      "updated_at": "2018-07-12T16:12:39Z",
      "source": {
        "issue": {
          "id": 340498118,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjAwODk0NDU0",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13639",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13639/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13639/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13639/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/13639",
          "number": 13639,
          "state": "closed",
          "state_reason": null,
          "title": "[refactor] Fix the chainparamsbase -> util circular dependency",
          "body": "By moving gArgs references out of chainparamsbase.cpp.\r\n\r\nNote both chainparams.cpp, bitcoin-cli.cpp, and all callers of\r\nSetupChainParamsBaseOptions include util.h",
          "user": {
            "login": "Empact",
            "id": 5470,
            "node_id": "MDQ6VXNlcjU0NzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Empact",
            "html_url": "https://github.com/Empact",
            "followers_url": "https://api.github.com/users/Empact/followers",
            "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
            "organizations_url": "https://api.github.com/users/Empact/orgs",
            "repos_url": "https://api.github.com/users/Empact/repos",
            "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Empact/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 13,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13639",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/13639",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/13639.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/13639.patch"
          },
          "closed_at": "2018-08-24T08:41:02Z",
          "created_at": "2018-07-12T05:53:00Z",
          "updated_at": "2021-09-08T11:57:08Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-07-12T16:13:11Z",
      "updated_at": "2018-07-12T16:13:11Z",
      "source": {
        "issue": {
          "id": 340276565,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjAwNzI2NzE5",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13637",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13637/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13637/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13637/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/13637",
          "number": 13637,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: Add GetBalances to calculate all balances",
          "body": "The new method `CWallet::GetBalances` computes all balances in one iteration.\r\nIt also avoids repetitive lock/unlock for each wallet transaction.",
          "user": {
            "login": "promag",
            "id": 3534524,
            "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/promag",
            "html_url": "https://github.com/promag",
            "followers_url": "https://api.github.com/users/promag/followers",
            "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
            "organizations_url": "https://api.github.com/users/promag/orgs",
            "repos_url": "https://api.github.com/users/promag/repos",
            "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/promag/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13637",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/13637",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/13637.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/13637.patch"
          },
          "closed_at": "2018-10-24T16:02:56Z",
          "created_at": "2018-07-11T14:48:22Z",
          "updated_at": "2021-12-16T14:11:29Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "unlabeled",
      "id": 1730759140,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MTczMDc1OTE0MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1730759140",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-07-12T16:30:50Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-07-13T19:20:19Z",
      "updated_at": "2018-07-13T19:20:19Z",
      "source": {
        "issue": {
          "id": 341087932,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjAxMzQ0NTMw",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13658",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13658/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13658/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13658/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/13658",
          "number": 13658,
          "state": "closed",
          "state_reason": null,
          "title": "[moveonly] Extract RescanWallet to handle a simple rescan",
          "body": "Where the outcome does not depend on the result, apart from a simple\r\nsuccess check.",
          "user": {
            "login": "Empact",
            "id": 5470,
            "node_id": "MDQ6VXNlcjU0NzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Empact",
            "html_url": "https://github.com/Empact",
            "followers_url": "https://api.github.com/users/Empact/followers",
            "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
            "organizations_url": "https://api.github.com/users/Empact/orgs",
            "repos_url": "https://api.github.com/users/Empact/repos",
            "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Empact/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 13,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13658",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/13658",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/13658.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/13658.patch"
          },
          "closed_at": "2018-07-25T13:40:09Z",
          "created_at": "2018-07-13T16:47:10Z",
          "updated_at": "2021-09-08T12:38:13Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-07-13T19:20:35Z",
      "updated_at": "2018-07-13T19:20:35Z",
      "source": {
        "issue": {
          "id": 341087284,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjAxMzQ0MDM2",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13657",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13657/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13657/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13657/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/13657",
          "number": 13657,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: assert to ensure accuracy of CMerkleTx::GetBlocksToMaturity",
          "body": "According to my understanding, it should not be possible for coinbase\r\ntransactions to be conflicting, thus it should not be possible for\r\nGetDepthInMainChain to return a negative result. If it did, this would\r\nalso result in innacurate results for GetBlocksToMaturity due to the\r\nmath therein. asserting ensures accuracy.",
          "user": {
            "login": "Empact",
            "id": 5470,
            "node_id": "MDQ6VXNlcjU0NzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Empact",
            "html_url": "https://github.com/Empact",
            "followers_url": "https://api.github.com/users/Empact/followers",
            "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
            "organizations_url": "https://api.github.com/users/Empact/orgs",
            "repos_url": "https://api.github.com/users/Empact/repos",
            "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Empact/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 5,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13657",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/13657",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/13657.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/13657.patch"
          },
          "closed_at": "2018-08-07T12:20:50Z",
          "created_at": "2018-07-13T16:45:03Z",
          "updated_at": "2021-09-08T12:38:23Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-07-13T19:22:00Z",
      "updated_at": "2018-07-13T19:22:00Z",
      "source": {
        "issue": {
          "id": 340785638,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjAxMTE1OTk5",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13651",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13651/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13651/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13651/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/13651",
          "number": 13651,
          "state": "closed",
          "state_reason": null,
          "title": "[moveonly] Extract CWallet::MarkInputsDirty, and privatize AddToWalletIfInvolvingMe",
          "body": "Thus reducing code and surface area of CWallet.",
          "user": {
            "login": "Empact",
            "id": 5470,
            "node_id": "MDQ6VXNlcjU0NzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Empact",
            "html_url": "https://github.com/Empact",
            "followers_url": "https://api.github.com/users/Empact/followers",
            "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
            "organizations_url": "https://api.github.com/users/Empact/orgs",
            "repos_url": "https://api.github.com/users/Empact/repos",
            "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Empact/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13651",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/13651",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/13651.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/13651.patch"
          },
          "closed_at": "2018-07-14T03:25:28Z",
          "created_at": "2018-07-12T20:26:33Z",
          "updated_at": "2021-12-16T14:11:24Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 1733323800,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE3MzMzMjM4MDA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1733323800",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-07-13T19:44:24Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1740723659,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTc0MDcyMzY1OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1740723659",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-07-18T17:34:22Z"
    },
    {
      "event": "unlabeled",
      "id": 1741257255,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MTc0MTI1NzI1NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1741257255",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-07-18T22:08:47Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 1745797187,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE3NDU3OTcxODc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1745797187",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-07-20T22:40:15Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1770485307,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTc3MDQ4NTMwNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1770485307",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-03T17:36:44Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1770541276,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTc3MDU0MTI3Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1770541276",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-03T18:05:19Z"
    },
    {
      "event": "unlabeled",
      "id": 1770641005,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MTc3MDY0MTAwNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1770641005",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-03T19:00:54Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-03T19:47:31Z",
      "updated_at": "2018-08-03T19:47:31Z",
      "source": {
        "issue": {
          "id": 346372525,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjA1MjUzNTA1",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13825",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13825/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13825/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13825/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/13825",
          "number": 13825,
          "state": "closed",
          "state_reason": null,
          "title": "[wallet] Kill accounts",
          "body": "To make space for new words, it's time to eliminate a word that has fallen into disuse: accounts. We make it fade into the night of time.\r\n\r\nRIP accounts.\r\n\r\nCompletes #12952 ",
          "user": {
            "login": "jnewbery",
            "id": 1063656,
            "node_id": "MDQ6VXNlcjEwNjM2NTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jnewbery",
            "html_url": "https://github.com/jnewbery",
            "followers_url": "https://api.github.com/users/jnewbery/followers",
            "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
            "organizations_url": "https://api.github.com/users/jnewbery/orgs",
            "repos_url": "https://api.github.com/users/jnewbery/repos",
            "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jnewbery/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/35",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/35",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/35/labels",
            "id": 3318051,
            "node_id": "MDk6TWlsZXN0b25lMzMxODA1MQ==",
            "number": 35,
            "state": "closed",
            "title": "0.18.0",
            "description": "",
            "creator": {
              "login": "MarcoFalke",
              "id": 6399679,
              "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
              "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/MarcoFalke",
              "html_url": "https://github.com/MarcoFalke",
              "followers_url": "https://api.github.com/users/MarcoFalke/followers",
              "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
              "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
              "repos_url": "https://api.github.com/users/MarcoFalke/repos",
              "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 186,
            "created_at": "2018-05-03T15:34:54Z",
            "updated_at": "2020-03-17T18:30:07Z",
            "closed_at": "2019-05-03T02:51:38Z"
          },
          "locked": true,
          "active_lock_reason": "too heated",
          "comments": 24,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13825",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/13825",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/13825.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/13825.patch"
          },
          "closed_at": "2018-08-30T14:21:17Z",
          "created_at": "2018-07-31T21:53:56Z",
          "updated_at": "2020-05-07T02:51:09Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-03T19:48:29Z",
      "updated_at": "2018-08-03T19:48:29Z",
      "source": {
        "issue": {
          "id": 346044179,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjA1MDAyNTEx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13815",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13815/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13815/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13815/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/13815",
          "number": 13815,
          "state": "closed",
          "state_reason": null,
          "title": "util: Add [[nodiscard]] to all {Decode,Parse}[...](...) functions returning bool",
          "body": "Changes in this PR:\r\n* ~~Add linter to make sure the return value of `Parse[...](...)` is checked~~\r\n* Add `__attribute__((warn_unused_result))` to all `{Decode,Parse}[...](...)` functions returning `bool`\r\n* Fix violations\r\n\r\nContext:\r\n* #13712: `wallet: Fix non-determinism in ParseHDKeypath(...). Avoid using an uninitialized variable in path calculation.` would have been prevented by this\r\n",
          "user": {
            "login": "practicalswift",
            "id": 7826565,
            "node_id": "MDQ6VXNlcjc4MjY1NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/practicalswift",
            "html_url": "https://github.com/practicalswift",
            "followers_url": "https://api.github.com/users/practicalswift/followers",
            "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
            "organizations_url": "https://api.github.com/users/practicalswift/orgs",
            "repos_url": "https://api.github.com/users/practicalswift/repos",
            "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/practicalswift/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 231994551,
              "node_id": "MDU6TGFiZWwyMzE5OTQ1NTE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Scripts%20and%20tools",
              "name": "Scripts and tools",
              "color": "ffffee",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 32,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13815",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/13815",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/13815.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/13815.patch"
          },
          "closed_at": "2018-11-15T19:40:51Z",
          "created_at": "2018-07-31T05:50:03Z",
          "updated_at": "2022-08-16T17:17:36Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-03T19:49:53Z",
      "updated_at": "2018-08-03T19:49:53Z",
      "source": {
        "issue": {
          "id": 345791085,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjA0ODI5NzM4",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13804",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13804/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13804/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13804/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/13804",
          "number": 13804,
          "state": "closed",
          "state_reason": null,
          "title": "WIP: Transaction Pool Layer",
          "body": "This implements a layer around an immutable tx pool. The layer can be seen as a temporary throw-away shell that provides the same interface as `CTxMemPool`. Its primary purpose right now is to be passed into ATMP while testing acceptance of several (potentially depending) transaction and then to be discarded.\r\n\r\nOne use case could be to determine if smart contracts that are set up with multiple txs would be accepted by current consensus and policy rules.\r\n\r\nIn the future it could be extended to support recursive wrapping of layers or a way to commit changes that happened in the layer to the underlying pool or layer. Furthermore, it could be extended to be revivable after changes to the underlying layer happened. (As opposed to be single-use)",
          "user": {
            "login": "MarcoFalke",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarcoFalke",
            "html_url": "https://github.com/MarcoFalke",
            "followers_url": "https://api.github.com/users/MarcoFalke/followers",
            "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
            "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
            "repos_url": "https://api.github.com/users/MarcoFalke/repos",
            "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13804",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/13804",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/13804.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/13804.patch"
          },
          "closed_at": "2019-07-16T15:02:09Z",
          "created_at": "2018-07-30T14:48:48Z",
          "updated_at": "2021-12-16T13:59:48Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-03T19:52:15Z",
      "updated_at": "2018-08-03T19:52:15Z",
      "source": {
        "issue": {
          "id": 345467748,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjA0NjA0MzA1",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13787",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13787/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13787/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13787/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/13787",
          "number": 13787,
          "state": "closed",
          "state_reason": null,
          "title": "Test for Windows encoding issue",
          "body": "This PR removes unused Windows compatible path. Encoding issues has been solved.\r\n",
          "user": {
            "login": "ken2812221",
            "id": 11154118,
            "node_id": "MDQ6VXNlcjExMTU0MTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ken2812221",
            "html_url": "https://github.com/ken2812221",
            "followers_url": "https://api.github.com/users/ken2812221/followers",
            "following_url": "https://api.github.com/users/ken2812221/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ken2812221/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ken2812221/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
            "organizations_url": "https://api.github.com/users/ken2812221/orgs",
            "repos_url": "https://api.github.com/users/ken2812221/repos",
            "events_url": "https://api.github.com/users/ken2812221/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ken2812221/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 234877,
              "node_id": "MDU6TGFiZWwyMzQ4Nzc=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Windows",
              "name": "Windows",
              "color": "884400",
              "default": false
            },
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/35",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/35",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/35/labels",
            "id": 3318051,
            "node_id": "MDk6TWlsZXN0b25lMzMxODA1MQ==",
            "number": 35,
            "state": "closed",
            "title": "0.18.0",
            "description": "",
            "creator": {
              "login": "MarcoFalke",
              "id": 6399679,
              "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
              "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/MarcoFalke",
              "html_url": "https://github.com/MarcoFalke",
              "followers_url": "https://api.github.com/users/MarcoFalke/followers",
              "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
              "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
              "repos_url": "https://api.github.com/users/MarcoFalke/repos",
              "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 186,
            "created_at": "2018-05-03T15:34:54Z",
            "updated_at": "2020-03-17T18:30:07Z",
            "closed_at": "2019-05-03T02:51:38Z"
          },
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 12,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13787",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/13787",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/13787.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/13787.patch"
          },
          "closed_at": "2019-02-12T16:18:30Z",
          "created_at": "2018-07-28T18:05:38Z",
          "updated_at": "2021-12-16T14:50:43Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-03T19:56:30Z",
      "updated_at": "2018-08-03T19:56:30Z",
      "source": {
        "issue": {
          "id": 344326592,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjAzNzQ2NDky",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13756/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/13756",
          "number": 13756,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: \"avoid_reuse\" wallet flag for improved privacy",
          "body": "Add a new wallet flag called `avoid_reuse` which, when enabled, will keep track of when a specific destination has been spent from, and will actively \"blacklist\" any new UTXOs which send to an already-spent-from destination.\r\n\r\nThis improves privacy, as a payer could otherwise begin tracking a payee's wallet by regularly peppering a known UTXO with dust outputs, which would then be scooped up and used in payments by the payee, allowing the payer to map out (1) the inputs owned by the payee and (2) the destinations to which the payee is making payments.\r\n\r\nThis replaces #10386 and together with the (now merged) #12257 it addresses #10065 in full. The concerns raised in https://github.com/bitcoin/bitcoin/pull/10386#issuecomment-302361381 are also addressed due to #12257.\r\n\r\n~~Note: this builds on top of #15780.~~ (merged)",
          "user": {
            "login": "kallewoof",
            "id": 250224,
            "node_id": "MDQ6VXNlcjI1MDIyNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kallewoof",
            "html_url": "https://github.com/kallewoof",
            "followers_url": "https://api.github.com/users/kallewoof/followers",
            "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
            "organizations_url": "https://api.github.com/users/kallewoof/orgs",
            "repos_url": "https://api.github.com/users/kallewoof/repos",
            "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/kallewoof/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64583,
              "node_id": "MDU6TGFiZWw2NDU4Mw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Feature",
              "name": "Feature",
              "color": "7cf575",
              "default": false
            },
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 59,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13756",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/13756",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/13756.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/13756.patch"
          },
          "closed_at": "2019-06-18T23:33:44Z",
          "created_at": "2018-07-25T07:34:14Z",
          "updated_at": "2021-12-16T14:57:30Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-03T20:01:06Z",
      "updated_at": "2018-08-03T20:01:06Z",
      "source": {
        "issue": {
          "id": 342998310,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjAyNzY1MzI3",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13723",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13723/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13723/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13723/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/13723",
          "number": 13723,
          "state": "closed",
          "state_reason": null,
          "title": "PSBT key path cleanups",
          "body": "This PR adds \"key origin\" (master fingeprint + key path) information to what is exposed from `SigningProvider`s, allowing this information to be used by the generic PSBT code instead of having the RPC pull it directly from the wallet.\r\n\r\nThis is also a preparation to having PSBT interact with output descriptors, which can then directly expose key origin information for the scripts they generate.",
          "user": {
            "login": "sipa",
            "id": 548488,
            "node_id": "MDQ6VXNlcjU0ODQ4OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sipa",
            "html_url": "https://github.com/sipa",
            "followers_url": "https://api.github.com/users/sipa/followers",
            "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
            "organizations_url": "https://api.github.com/users/sipa/orgs",
            "repos_url": "https://api.github.com/users/sipa/repos",
            "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sipa/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 9,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13723",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/13723",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/13723.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/13723.patch"
          },
          "closed_at": "2018-08-28T14:30:15Z",
          "created_at": "2018-07-20T07:15:14Z",
          "updated_at": "2021-09-08T11:57:35Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 1773289625,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE3NzMyODk2MjU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1773289625",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-06T16:10:49Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1773834975,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTc3MzgzNDk3NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1773834975",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-06T20:49:19Z"
    },
    {
      "event": "unlabeled",
      "id": 1773975102,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MTc3Mzk3NTEwMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1773975102",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-06T22:17:23Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 1775156555,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE3NzUxNTY1NTU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1775156555",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-07T12:34:55Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1775901388,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTc3NTkwMTM4OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1775901388",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-07T17:43:59Z"
    },
    {
      "event": "unlabeled",
      "id": 1776027237,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MTc3NjAyNzIzNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1776027237",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-07T18:43:20Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-08T15:56:44Z",
      "updated_at": "2018-08-08T15:56:44Z",
      "source": {
        "issue": {
          "id": 348767201,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjA3MDM5ODk0",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13911",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13911/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13911/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13911/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/13911",
          "number": 13911,
          "state": "closed",
          "state_reason": null,
          "title": "doc: Revert translated string change, clarify wallet log messages",
          "body": "Fixes https://github.com/bitcoin/bitcoin/pull/12992 post-merge nits from @jnewbery ",
          "user": {
            "login": "PierreRochard",
            "id": 6299681,
            "node_id": "MDQ6VXNlcjYyOTk2ODE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6299681?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PierreRochard",
            "html_url": "https://github.com/PierreRochard",
            "followers_url": "https://api.github.com/users/PierreRochard/followers",
            "following_url": "https://api.github.com/users/PierreRochard/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/PierreRochard/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/PierreRochard/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/PierreRochard/subscriptions",
            "organizations_url": "https://api.github.com/users/PierreRochard/orgs",
            "repos_url": "https://api.github.com/users/PierreRochard/repos",
            "events_url": "https://api.github.com/users/PierreRochard/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/PierreRochard/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 148216,
              "node_id": "MDU6TGFiZWwxNDgyMTY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Docs",
              "name": "Docs",
              "color": "02d7e1",
              "default": false
            },
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/33",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/33",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/33/labels",
            "id": 2931889,
            "node_id": "MDk6TWlsZXN0b25lMjkzMTg4OQ==",
            "number": 33,
            "state": "closed",
            "title": "0.17.0",
            "description": "",
            "creator": {
              "login": "MarcoFalke",
              "id": 6399679,
              "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
              "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/MarcoFalke",
              "html_url": "https://github.com/MarcoFalke",
              "followers_url": "https://api.github.com/users/MarcoFalke/followers",
              "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
              "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
              "repos_url": "https://api.github.com/users/MarcoFalke/repos",
              "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 122,
            "created_at": "2017-11-22T18:54:09Z",
            "updated_at": "2018-11-28T21:03:57Z",
            "closed_at": "2018-10-14T23:21:13Z"
          },
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13911",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/13911",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/13911.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/13911.patch"
          },
          "closed_at": "2018-08-09T12:14:11Z",
          "created_at": "2018-08-08T15:04:55Z",
          "updated_at": "2021-09-08T12:38:31Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 1780208322,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE3ODAyMDgzMjI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1780208322",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-09T13:33:27Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1780858730,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTc4MDg1ODczMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1780858730",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-09T18:14:48Z"
    },
    {
      "event": "unlabeled",
      "id": 1781026781,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MTc4MTAyNjc4MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1781026781",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-09T19:39:06Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-12T01:19:59Z",
      "updated_at": "2018-08-12T01:19:59Z",
      "source": {
        "issue": {
          "id": 349770915,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjA3Nzk2OTE4",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13945",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13945/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13945/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13945/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/13945",
          "number": 13945,
          "state": "closed",
          "state_reason": null,
          "title": "Refactoring CRPCCommand with enum category",
          "body": "refactoring `CRPCCommand` changing the  type of its member `category` from `std::string` to a `typedef enum ERPCCategory`.\r\nThe behaviour should be exactly the same with a very very small, in any way irrelevant, speed dump.\r\n\r\nI am doing this, in preparation to add attributes, likes `visibility` and `state` to `CRPCCommand ` structure, to avoid using category names, for overridden informations like visibility or deprecation.\r\n\r\nFor example, from v0.16.0 the command `getinfo` switched its category from `control` to `hidden`, while I think the idea was to let it to `control` category, with attributes similar to `visibility = false` and `state = deprecated`\r\n\r\nThanks,\r\nIsidoro Ghezzi\r\n\r\np.s:\r\n* Take care on the fact, that I had no warning assigning the enum to a std::string :-(\r\nAlso take care I'm never testing on QT. (I simply never configure nor compile on QT); anyway I was able to catch the QT command `rpcNestedTest`.\r\n* I tested only on `regtest` and `macOS`\r\n\r\nEDITs: \r\n 1. Using `enum class` it's giving right error trying to assign by mistake to a std::string :-) https://github.com/bitcoin/bitcoin/pull/13945/commits/cf190f57a078df1d37bd1822e3fa69ba0d9c90e6\r\n2. I tested on `regtest` on `ubuntu` and `macOS`\r\n3. I never tested nor compiled on windows.",
          "user": {
            "login": "isghe",
            "id": 1006078,
            "node_id": "MDQ6VXNlcjEwMDYwNzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1006078?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/isghe",
            "html_url": "https://github.com/isghe",
            "followers_url": "https://api.github.com/users/isghe/followers",
            "following_url": "https://api.github.com/users/isghe/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/isghe/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/isghe/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/isghe/subscriptions",
            "organizations_url": "https://api.github.com/users/isghe/orgs",
            "repos_url": "https://api.github.com/users/isghe/repos",
            "events_url": "https://api.github.com/users/isghe/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/isghe/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 27,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13945",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/13945",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/13945.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/13945.patch"
          },
          "closed_at": "2018-09-01T08:31:58Z",
          "created_at": "2018-08-11T23:21:07Z",
          "updated_at": "2022-02-15T10:48:34Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 1786219385,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE3ODYyMTkzODU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1786219385",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-13T19:37:48Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1787908982,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTc4NzkwODk4Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1787908982",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-14T14:19:18Z"
    },
    {
      "event": "unlabeled",
      "id": 1788175809,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MTc4ODE3NTgwOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1788175809",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-14T15:59:41Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-14T21:32:07Z",
      "updated_at": "2018-08-14T21:32:07Z",
      "source": {
        "issue": {
          "id": 350564810,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjA4Mzg0NzMx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13969",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13969/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13969/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13969/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/13969",
          "number": 13969,
          "state": "closed",
          "state_reason": null,
          "title": "Make sure all callers of LookupBlockIndex(...) check for nullptr before dereferencing (CBlockIndex*)",
          "body": "Make sure all callers of `LookupBlockIndex(...)` check for `nullptr` before dereferencing (`CBlockIndex*`).",
          "user": {
            "login": "practicalswift",
            "id": 7826565,
            "node_id": "MDQ6VXNlcjc4MjY1NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/practicalswift",
            "html_url": "https://github.com/practicalswift",
            "followers_url": "https://api.github.com/users/practicalswift/followers",
            "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
            "organizations_url": "https://api.github.com/users/practicalswift/orgs",
            "repos_url": "https://api.github.com/users/practicalswift/repos",
            "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/practicalswift/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 8,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13969",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/13969",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/13969.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/13969.patch"
          },
          "closed_at": "2018-10-19T14:36:17Z",
          "created_at": "2018-08-14T19:24:27Z",
          "updated_at": "2022-08-18T18:21:44Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-15T13:01:14Z",
      "updated_at": "2018-08-15T13:01:14Z",
      "source": {
        "issue": {
          "id": 350797334,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjA4NTUzNDYy",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13981",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13981/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13981/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13981/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/13981",
          "number": 13981,
          "state": "closed",
          "state_reason": null,
          "title": "trivial: Updates the internal interfaces list in src/interfaces/README.md",
          "body": "Updates the \"Internal c++ interfaces\" list by removing entries that are no longer in the `src/interfaces` folder.",
          "user": {
            "login": "l2a5b1",
            "id": 13120787,
            "node_id": "MDQ6VXNlcjEzMTIwNzg3",
            "avatar_url": "https://avatars.githubusercontent.com/u/13120787?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/l2a5b1",
            "html_url": "https://github.com/l2a5b1",
            "followers_url": "https://api.github.com/users/l2a5b1/followers",
            "following_url": "https://api.github.com/users/l2a5b1/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/l2a5b1/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/l2a5b1/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/l2a5b1/subscriptions",
            "organizations_url": "https://api.github.com/users/l2a5b1/orgs",
            "repos_url": "https://api.github.com/users/l2a5b1/repos",
            "events_url": "https://api.github.com/users/l2a5b1/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/l2a5b1/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 148216,
              "node_id": "MDU6TGFiZWwxNDgyMTY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Docs",
              "name": "Docs",
              "color": "02d7e1",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 2,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13981",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/13981",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/13981.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/13981.patch"
          },
          "closed_at": "2018-08-15T13:15:49Z",
          "created_at": "2018-08-15T12:49:46Z",
          "updated_at": "2021-09-08T12:49:25Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-22T14:56:52Z",
      "updated_at": "2018-08-22T14:56:52Z",
      "source": {
        "issue": {
          "id": 352944196,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjEwMTI2MTc2",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14023",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14023/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14023/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14023/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/14023",
          "number": 14023,
          "state": "closed",
          "state_reason": null,
          "title": "Remove accounts rpcs",
          "body": "This is the first part of #13825. It simply removes the RPC methods and tests.\r\n\r\n#13825 touches lots of files and will require frequent rebasing.\r\n\r\nBreaking it down for easier reviewing and fewer rebases.",
          "user": {
            "login": "jnewbery",
            "id": 1063656,
            "node_id": "MDQ6VXNlcjEwNjM2NTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jnewbery",
            "html_url": "https://github.com/jnewbery",
            "followers_url": "https://api.github.com/users/jnewbery/followers",
            "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
            "organizations_url": "https://api.github.com/users/jnewbery/orgs",
            "repos_url": "https://api.github.com/users/jnewbery/repos",
            "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jnewbery/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 10,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14023",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/14023",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/14023.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/14023.patch"
          },
          "closed_at": "2018-08-27T15:55:23Z",
          "created_at": "2018-08-22T13:02:38Z",
          "updated_at": "2021-09-08T12:38:46Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 1805919773,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE4MDU5MTk3NzM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1805919773",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-23T17:44:36Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1806434587,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTgwNjQzNDU4Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1806434587",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-23T21:50:04Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-23T22:03:15Z",
      "updated_at": "2018-08-23T22:03:15Z",
      "source": {
        "issue": {
          "id": 353522878,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjEwNTUzMTg5",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14035",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14035/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14035/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14035/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/14035",
          "number": 14035,
          "state": "closed",
          "state_reason": null,
          "title": "Utxoscriptindex",
          "body": "Yet another attempt to introduce UTxO index by script. Based on #9806 with review remarks and new index framework introduced in #13033 taken into account.",
          "user": {
            "login": "mgrychow",
            "id": 42271287,
            "node_id": "MDQ6VXNlcjQyMjcxMjg3",
            "avatar_url": "https://avatars.githubusercontent.com/u/42271287?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgrychow",
            "html_url": "https://github.com/mgrychow",
            "followers_url": "https://api.github.com/users/mgrychow/followers",
            "following_url": "https://api.github.com/users/mgrychow/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/mgrychow/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/mgrychow/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/mgrychow/subscriptions",
            "organizations_url": "https://api.github.com/users/mgrychow/orgs",
            "repos_url": "https://api.github.com/users/mgrychow/repos",
            "events_url": "https://api.github.com/users/mgrychow/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/mgrychow/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 97470796,
              "node_id": "MDU6TGFiZWw5NzQ3MDc5Ng==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/UTXO%20Db%20and%20Indexes",
              "name": "UTXO Db and Indexes",
              "color": "fbca04",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "NONE",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 8,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14035",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/14035",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/14035.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/14035.patch"
          },
          "closed_at": "2019-04-19T17:37:46Z",
          "created_at": "2018-08-23T19:34:19Z",
          "updated_at": "2022-02-15T11:04:39Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1806472817,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTgwNjQ3MjgxNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1806472817",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-23T22:13:44Z"
    },
    {
      "event": "unlabeled",
      "id": 1806596083,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MTgwNjU5NjA4Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1806596083",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-23T23:51:19Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1807824222,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTgwNzgyNDIyMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1807824222",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-24T14:39:52Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-24T18:13:51Z",
      "updated_at": "2018-08-24T18:13:51Z",
      "source": {
        "issue": {
          "id": 353615699,
          "node_id": "MDU6SXNzdWUzNTM2MTU2OTk=",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14041",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14041/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14041/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14041/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/14041",
          "number": 14041,
          "state": "closed",
          "state_reason": "completed",
          "title": "Linter fixes",
          "body": "The linters are apparently breaking left and right on local machines and need to be disabled by developers. Ping @practicalswift et al.\r\n\r\nI haven't seen any information on this except a mention in IRC, so any hints or error logs on this would be appreciated.\r\n",
          "user": {
            "login": "kallewoof",
            "id": 250224,
            "node_id": "MDQ6VXNlcjI1MDIyNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kallewoof",
            "html_url": "https://github.com/kallewoof",
            "followers_url": "https://api.github.com/users/kallewoof/followers",
            "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
            "organizations_url": "https://api.github.com/users/kallewoof/orgs",
            "repos_url": "https://api.github.com/users/kallewoof/repos",
            "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/kallewoof/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 24,
          "closed_at": "2018-08-29T11:00:29Z",
          "created_at": "2018-08-24T02:01:04Z",
          "updated_at": "2021-09-08T12:49:29Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-24T19:23:51Z",
      "updated_at": "2018-08-24T19:23:51Z",
      "source": {
        "issue": {
          "id": 353891135,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjEwODIwNjQ3",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14053",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14053/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14053/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14053/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/14053",
          "number": 14053,
          "state": "closed",
          "state_reason": null,
          "title": "Add address-based index (attempt 4?)",
          "body": "Adds index to transactions by scriptPubKey. Based off of #2802. Stores hashes of scripts (hashed using Murmurhash3, with a hash seed that is stored in the index database), along with the `COutPoint` for the output which was spent/created, and the `CDiskTxPos` for the transaction in which this happened.",
          "user": {
            "login": "marcinja",
            "id": 12243734,
            "node_id": "MDQ6VXNlcjEyMjQzNzM0",
            "avatar_url": "https://avatars.githubusercontent.com/u/12243734?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/marcinja",
            "html_url": "https://github.com/marcinja",
            "followers_url": "https://api.github.com/users/marcinja/followers",
            "following_url": "https://api.github.com/users/marcinja/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/marcinja/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/marcinja/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/marcinja/subscriptions",
            "organizations_url": "https://api.github.com/users/marcinja/orgs",
            "repos_url": "https://api.github.com/users/marcinja/repos",
            "events_url": "https://api.github.com/users/marcinja/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/marcinja/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 97470796,
              "node_id": "MDU6TGFiZWw5NzQ3MDc5Ng==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/UTXO%20Db%20and%20Indexes",
              "name": "UTXO Db and Indexes",
              "color": "fbca04",
              "default": false
            },
            {
              "id": 1392286103,
              "node_id": "MDU6TGFiZWwxMzkyMjg2MTAz",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20Conceptual%20Review",
              "name": "Needs Conceptual Review",
              "description": "",
              "color": "fef2c0",
              "default": false
            },
            {
              "id": 1648013533,
              "node_id": "MDU6TGFiZWwxNjQ4MDEzNTMz",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Review%20club",
              "name": "Review club",
              "description": "",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 50,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14053",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/14053",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/14053.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/14053.patch"
          },
          "closed_at": "2021-01-04T16:21:10Z",
          "created_at": "2018-08-24T18:51:45Z",
          "updated_at": "2022-08-16T17:11:15Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 1809056654,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE4MDkwNTY2NTQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1809056654",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-25T16:41:12Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 150318841,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTUwMzE4ODQx",
      "url": null,
      "actor": null,
      "commit_id": "2aa964dc531464c47c7236ec7b288e3b9c403a1e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-150318841",
      "submitted_at": "2018-08-28T21:10:55Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1814188523,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTgxNDE4ODUyMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1814188523",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-28T21:22:12Z"
    },
    {
      "event": "unlabeled",
      "id": 1814301687,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MTgxNDMwMTY4Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1814301687",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-28T22:30:58Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-29T12:15:25Z",
      "updated_at": "2018-08-29T12:15:25Z",
      "source": {
        "issue": {
          "id": 354675690,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjExMzgwMDM1",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14091",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14091/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14091/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14091/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/14091",
          "number": 14091,
          "state": "closed",
          "state_reason": null,
          "title": "Minor style enhancement in documentation",
          "body": "It is considered a best practice to avoid noun+verb contractions in technical documentation as it makes it easier to read, especially for non native English speakers.\r\nAs a reference: https://developers.google.com/style/contractions",
          "user": {
            "login": "fedsten",
            "id": 31323835,
            "node_id": "MDQ6VXNlcjMxMzIzODM1",
            "avatar_url": "https://avatars.githubusercontent.com/u/31323835?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fedsten",
            "html_url": "https://github.com/fedsten",
            "followers_url": "https://api.github.com/users/fedsten/followers",
            "following_url": "https://api.github.com/users/fedsten/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/fedsten/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/fedsten/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/fedsten/subscriptions",
            "organizations_url": "https://api.github.com/users/fedsten/orgs",
            "repos_url": "https://api.github.com/users/fedsten/repos",
            "events_url": "https://api.github.com/users/fedsten/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/fedsten/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 148216,
              "node_id": "MDU6TGFiZWwxNDgyMTY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Docs",
              "name": "Docs",
              "color": "02d7e1",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "NONE",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 5,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14091",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/14091",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/14091.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/14091.patch"
          },
          "closed_at": "2018-09-02T08:27:52Z",
          "created_at": "2018-08-28T10:50:17Z",
          "updated_at": "2021-09-08T11:57:27Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1815985394,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTgxNTk4NTM5NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1815985394",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-29T15:31:00Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-29T19:04:06Z",
      "updated_at": "2018-08-29T19:04:06Z",
      "source": {
        "issue": {
          "id": 354034181,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjEwOTE1NjE1",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14062",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14062/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14062/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14062/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/14062",
          "number": 14062,
          "state": "closed",
          "state_reason": null,
          "title": "build: generate MSVC project files via python script",
          "body": "The reason that I move from original `*.vcxproj` to template `*.vcxproj.in` file:\r\n- There are many developers does not know how to edit .vcxproj file\r\n- To keep consistency, don't need to edit file at two different places\r\n\r\nNow the devs do not have to update two seperate files.",
          "user": {
            "login": "ken2812221",
            "id": 11154118,
            "node_id": "MDQ6VXNlcjExMTU0MTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ken2812221",
            "html_url": "https://github.com/ken2812221",
            "followers_url": "https://api.github.com/users/ken2812221/followers",
            "following_url": "https://api.github.com/users/ken2812221/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ken2812221/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ken2812221/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
            "organizations_url": "https://api.github.com/users/ken2812221/orgs",
            "repos_url": "https://api.github.com/users/ken2812221/repos",
            "events_url": "https://api.github.com/users/ken2812221/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ken2812221/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 234877,
              "node_id": "MDU6TGFiZWwyMzQ4Nzc=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Windows",
              "name": "Windows",
              "color": "884400",
              "default": false
            },
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 10,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14062",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/14062",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/14062.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/14062.patch"
          },
          "closed_at": "2018-08-26T16:42:53Z",
          "created_at": "2018-08-25T18:35:57Z",
          "updated_at": "2021-09-08T11:57:25Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 1818534012,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE4MTg1MzQwMTI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1818534012",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-30T15:31:00Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1818798667,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTgxODc5ODY2Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1818798667",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-30T17:26:33Z"
    },
    {
      "event": "unlabeled",
      "id": 1818812659,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MTgxODgxMjY1OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1818812659",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-30T17:33:26Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 1820941477,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE4MjA5NDE0Nzc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1820941477",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-31T15:56:53Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1820980048,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTgyMDk4MDA0OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1820980048",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-31T16:15:31Z"
    },
    {
      "event": "unlabeled",
      "id": 1821175114,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MTgyMTE3NTExNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1821175114",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-31T17:58:53Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-31T22:47:52Z",
      "updated_at": "2018-08-31T22:47:52Z",
      "source": {
        "issue": {
          "id": 356128531,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjEyNDk3ODc4",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14121",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14121/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14121/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14121/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/14121",
          "number": 14121,
          "state": "closed",
          "state_reason": null,
          "title": "Index for BIP 157 block filters",
          "body": "This introduces a new BlockFilterIndex class, which is required for BIP 157 support.\r\n\r\nThe index is uses the asynchronous BaseIndex infrastructure driven by the ValidationInterface callbacks. Filters are stored sequentially in flat files and the disk location of each filter is indexed in LevelDB along with the filter hash and header. The index is designed to ensure persistence of filters reorganized out of the main chain to simplify the BIP 157 net implementation.\r\n\r\nStats (block height = 565500):\r\n- Syncing the index from scratch takes 45m\r\n- Total index size is 3.8 GiB",
          "user": {
            "login": "jimpo",
            "id": 881253,
            "node_id": "MDQ6VXNlcjg4MTI1Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jimpo",
            "html_url": "https://github.com/jimpo",
            "followers_url": "https://api.github.com/users/jimpo/followers",
            "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
            "organizations_url": "https://api.github.com/users/jimpo/orgs",
            "repos_url": "https://api.github.com/users/jimpo/repos",
            "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jimpo/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 97470796,
              "node_id": "MDU6TGFiZWw5NzQ3MDc5Ng==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/UTXO%20Db%20and%20Indexes",
              "name": "UTXO Db and Indexes",
              "color": "fbca04",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 29,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14121",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/14121",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/14121.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/14121.patch"
          },
          "closed_at": "2019-04-18T13:49:38Z",
          "created_at": "2018-08-31T21:28:20Z",
          "updated_at": "2022-02-15T10:32:40Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 418624533,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQxODYyNDUzMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/418624533",
      "actor": {
        "login": "ken2812221",
        "id": 11154118,
        "node_id": "MDQ6VXNlcjExMTU0MTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ken2812221",
        "html_url": "https://github.com/ken2812221",
        "followers_url": "https://api.github.com/users/ken2812221/followers",
        "following_url": "https://api.github.com/users/ken2812221/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ken2812221/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ken2812221/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
        "organizations_url": "https://api.github.com/users/ken2812221/orgs",
        "repos_url": "https://api.github.com/users/ken2812221/repos",
        "events_url": "https://api.github.com/users/ken2812221/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ken2812221/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-05T07:14:50Z",
      "updated_at": "2018-09-15T09:05:05Z",
      "author_association": "CONTRIBUTOR",
      "body": "- [x] [`d487d953c9` Add skeleton chain and client classes](https://github.com/bitcoin/bitcoin/pull/10973/commits/d487d953c9a10b11693ba8af62f5b54a77ec7686)\r\n- [x] [`6f47f5be74` Pass chain and client variables where needed](https://github.com/bitcoin/bitcoin/pull/10973/commits/6f47f5be74453f3e4bbf91f57d6ac1925db68e46)\r\n- [x] [`dff1e12e92` Remove direct node->wallet calls in init.cpp](https://github.com/bitcoin/bitcoin/pull/10973/commits/dff1e12e92573ba0e58644f5ea1be2126093625f)\r\n- [x] [`8ea7dd1909` Remove uses of cs_main in wallet code](https://github.com/bitcoin/bitcoin/pull/10973/commits/8ea7dd19093d9c76f4ac908034702e0de886ef6d)\r\n- [x] [`d67069bf83` Pass chain locked variables where needed](https://github.com/bitcoin/bitcoin/pull/10973/commits/d67069bf8334aa88f8272f7a217415dafbc14618)\r\n- [x] [`1b07623a61` Remove uses of chainActive and mapBlockIndex in wallet code](https://github.com/bitcoin/bitcoin/pull/10973/commits/1b07623a61286b0ae7ce3b943255c27ae9716438)\r\n- [x] [`14d21eb05a` Remove uses of CheckFinalTx in wallet code](https://github.com/bitcoin/bitcoin/pull/10973/commits/14d21eb05a1e3de3fea9f32d14814b047b052349)\r\n- [x] [`7bd157aa83` Remove use of AcceptToMemoryPool in wallet code](https://github.com/bitcoin/bitcoin/pull/10973/commits/7bd157aa83c0ebce2ef76520f26f618943b2279d)\r\n- [x] [`e810c853e0` Remove uses of GetVirtualTransactionSize in wallet code](https://github.com/bitcoin/bitcoin/pull/10973/commits/e810c853e0f7b487ad39e2d53e7b680a71d82868)\r\n- [x] [`c71e4f423b` Remove use of IsRBFOptIn in wallet code](https://github.com/bitcoin/bitcoin/pull/10973/commits/c71e4f423ba4833537b54eb5a8d74030090a5c27)\r\n- [x] [`3246d3d2f1` Remove use of GetCountWithDescendants in wallet code](https://github.com/bitcoin/bitcoin/pull/10973/commits/3246d3d2f17d2c4efb7104f78bf6f708c508e2da)\r\n- [x] [`e0854fc5ba` Remove use of g_connman / PushInventory in wallet code](https://github.com/bitcoin/bitcoin/pull/10973/commits/e0854fc5baa7f0212cd9c2ae4d1e3cec682dca08)\r\n- [x] [`e5a71a8e0f` Remove use of GetTransactionAncestry in wallet code](https://github.com/bitcoin/bitcoin/pull/10973/commits/e5a71a8e0fe9c9161b081c328a1034d8c5195336)\r\n- [x] [`473126929a` Remove use of CalculateMemPoolAncestors in wallet code](https://github.com/bitcoin/bitcoin/pull/10973/commits/473126929adb91d4ea28a19056060162cc3c6e9a)\r\n- [x] [`af57d274b1` Remove uses of fee globals in wallet code](https://github.com/bitcoin/bitcoin/pull/10973/commits/af57d274b1d2a490c8e511d5891dbbac8be88a71)\r\n- [x] [`1c50403a84` Remove uses of fPruneMode in wallet code](https://github.com/bitcoin/bitcoin/pull/10973/commits/1c50403a8438556d99be95a904dc7b65ec2e8129)\r\n- [x] [`677dc5e926` Remove uses of g_connman in wallet code](https://github.com/bitcoin/bitcoin/pull/10973/commits/677dc5e9264ff6704ddf783f47c5c20580ae72cb)\r\n- [x] [`87dda2fd14` Remove uses of GetAdjustedTime in wallet code](https://github.com/bitcoin/bitcoin/pull/10973/commits/87dda2fd142175d12f3980fd7f9296d389bcbf87)\r\n- [x] [`360ba70e0d` Remove uses of InitMessage/Warning/Error in wallet code](https://github.com/bitcoin/bitcoin/pull/10973/commits/360ba70e0d9132e673dfb5717290a4747f2eeb29)\r\n- [x] [`e5eb1bf14d` Remove use CValidationInterface in wallet code](https://github.com/bitcoin/bitcoin/pull/10973/commits/e5eb1bf14d9616bcc02852eed9c4c8ddc7d11b0f)\r\n- [x] [`11add99d5d` Remove use of CRPCTable::appendCommand in wallet code](https://github.com/bitcoin/bitcoin/pull/10973/commits/11add99d5de23ac52d1f1cf1ee7685975b685189)\r\n- [x] [`844df0d18f` Remove use of generateBlocks in wallet code](https://github.com/bitcoin/bitcoin/pull/10973/commits/844df0d18f8c0e119ea68462371c4f130d65d639)\r\n- [x] [`6fe04c2cee` Remove uses of ParseConfirmTarget in wallet code](https://github.com/bitcoin/bitcoin/pull/10973/commits/6fe04c2cee500d571d1966f136dc3915ae56a4ba)\r\n- [x] [`53bc670ee9` Remove use of uiInterface.LoadWallet in wallet code](https://github.com/bitcoin/bitcoin/pull/10973/commits/53bc670ee9c3b01fe3d37e228eeb1f2e6694575b)\r\n- [x] [`53d0d39026` Remove use of IsInitialBlockDownload in wallet code](https://github.com/bitcoin/bitcoin/pull/10973/commits/53d0d39026fafdebfb216e44973fa24470fe72e3)\r\n- [x] [`e44e639558` Remove use of CCoinsViewMemPool::GetCoin in wallet code](https://github.com/bitcoin/bitcoin/pull/10973/commits/e44e639558b1084f14a97847592616c3df9fff38)",
      "user": {
        "login": "ken2812221",
        "id": 11154118,
        "node_id": "MDQ6VXNlcjExMTU0MTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ken2812221",
        "html_url": "https://github.com/ken2812221",
        "followers_url": "https://api.github.com/users/ken2812221/followers",
        "following_url": "https://api.github.com/users/ken2812221/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ken2812221/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ken2812221/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
        "organizations_url": "https://api.github.com/users/ken2812221/orgs",
        "repos_url": "https://api.github.com/users/ken2812221/repos",
        "events_url": "https://api.github.com/users/ken2812221/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ken2812221/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#issuecomment-418624533",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10973"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-06T03:16:20Z",
      "updated_at": "2018-09-06T03:16:20Z",
      "source": {
        "issue": {
          "id": 357464142,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjEzNDcyMjU1",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14156",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14156/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14156/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14156/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/14156",
          "number": 14156,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: Make explicit CMutableTransaction -> CTransaction conversion.",
          "body": "This PR makes explicit the now implicit conversion constructor `CTransaction(const CMutableTransaction&)` in `transaction.h`. \r\nMinimal changes were made elsewhere to make the code compilable. I'll follow up with other PRs to address individually refactoring functions that should have a `CMutableTransaction` version, or where a `CTransaction` should be reused. \r\n\r\nThe rationale for this change is:\r\n\r\n - Conversion constructors should not be explicit unless there's a strong reason for it (in the opinion of, for example, https://google.github.io/styleguide/cppguide.html, and https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Ro-conversion. Let me know your take on this).\r\n - This particular conversion is very costly -- it implies a serialization plus hash of the transaction.\r\n - Even though `CTransaction` and `CMutableTransaction` represent the same data, they have very different use cases and performance properties.\r\n - Making it explicit allows for easier reasoning of performance trade-offs.\r\n - There has been previous performance issues caused by unneeded use of this implicit conversion.\r\n - This PR creates a map for places to look for possible refactoring and performance gains (this benefit still holds if the PR is not merged).",
          "user": {
            "login": "lucash-dev",
            "id": 31627588,
            "node_id": "MDQ6VXNlcjMxNjI3NTg4",
            "avatar_url": "https://avatars.githubusercontent.com/u/31627588?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lucash-dev",
            "html_url": "https://github.com/lucash-dev",
            "followers_url": "https://api.github.com/users/lucash-dev/followers",
            "following_url": "https://api.github.com/users/lucash-dev/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/lucash-dev/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/lucash-dev/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/lucash-dev/subscriptions",
            "organizations_url": "https://api.github.com/users/lucash-dev/orgs",
            "repos_url": "https://api.github.com/users/lucash-dev/repos",
            "events_url": "https://api.github.com/users/lucash-dev/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/lucash-dev/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 16,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14156",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/14156",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/14156.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/14156.patch"
          },
          "closed_at": "2018-12-10T06:06:12Z",
          "created_at": "2018-09-06T01:38:31Z",
          "updated_at": "2021-09-08T12:40:29Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-07T18:53:31Z",
      "updated_at": "2018-09-07T18:53:31Z",
      "source": {
        "issue": {
          "id": 325535607,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MTg5ODQ2NzIw",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13307",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13307/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13307/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13307/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/13307",
          "number": 13307,
          "state": "closed",
          "state_reason": null,
          "title": "Replace coin selection fallback strategy with Single Random Draw",
          "body": "When BnB selection fails to find an exact match, we fall back to the original Bitcoin Core algorithm. This PR replaces that fallback with the Single Random Draw strategy. Additionally, because SRD uses effective values, the previous fee increasing loop thing is now removed and effective value is used everywhere.\r\n\r\nSome tests may fail spuriously because they may rely on semi-deterministic behavior from the original coin selection algorithm. I have been able to fix the ones that fail the most, but others may still have issues. Please let me know if you see any tests fail for coin selection reasons (e.g. insufficient funds, missing inputs, etc.) and I will try to fix them.\r\n\r\nI will be working on doing simulations this week and will post the data once I finish them.",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 21,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13307",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/13307",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/13307.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/13307.patch"
          },
          "closed_at": "2018-12-12T19:23:22Z",
          "created_at": "2018-05-23T03:24:07Z",
          "updated_at": "2022-03-22T08:33:52Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-07T23:17:10Z",
      "updated_at": "2018-09-07T23:17:10Z",
      "source": {
        "issue": {
          "id": 358202568,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjE0MDMyNjMw",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14168",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14168/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14168/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14168/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/14168",
          "number": 14168,
          "state": "closed",
          "state_reason": null,
          "title": "Remove ENABLE_WALLET from libbitcoin_server.a",
          "body": "This removes the final instances of ENABLE_WALLET in libbitcoin_server and so completes #7965.",
          "user": {
            "login": "jnewbery",
            "id": 1063656,
            "node_id": "MDQ6VXNlcjEwNjM2NTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jnewbery",
            "html_url": "https://github.com/jnewbery",
            "followers_url": "https://api.github.com/users/jnewbery/followers",
            "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
            "organizations_url": "https://api.github.com/users/jnewbery/orgs",
            "repos_url": "https://api.github.com/users/jnewbery/repos",
            "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jnewbery/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 8,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14168",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/14168",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/14168.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/14168.patch"
          },
          "closed_at": "2018-09-11T13:48:27Z",
          "created_at": "2018-09-07T20:33:16Z",
          "updated_at": "2021-09-08T12:39:00Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-10T14:34:15Z",
      "updated_at": "2018-09-10T14:34:15Z",
      "source": {
        "issue": {
          "id": 349192795,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjA3MzY3MTk0",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13926/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/13926",
          "number": 13926,
          "state": "closed",
          "state_reason": null,
          "title": "[Tools] bitcoin-wallet - a tool for creating and managing wallets offline",
          "body": "Adds an offline tool `bitcoin-wallet-tool` for wallet creation and maintenance.\r\n\r\nCurrently this tool can create a new wallet file and display information on an existing wallet. It can later be extended to support other common wallet maintenance tasks (eg run the salvage and zapwallettxes maintenance tasks on an existing wallet).\r\n\r\nDoing wallet maintenance tasks in an offline tool makes much more sense (and is potentially safer) than having to spin up a full node.",
          "user": {
            "login": "jnewbery",
            "id": 1063656,
            "node_id": "MDQ6VXNlcjEwNjM2NTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jnewbery",
            "html_url": "https://github.com/jnewbery",
            "followers_url": "https://api.github.com/users/jnewbery/followers",
            "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
            "organizations_url": "https://api.github.com/users/jnewbery/orgs",
            "repos_url": "https://api.github.com/users/jnewbery/repos",
            "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jnewbery/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 231994551,
              "node_id": "MDU6TGFiZWwyMzE5OTQ1NTE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Scripts%20and%20tools",
              "name": "Scripts and tools",
              "color": "ffffee",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/35",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/35",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/35/labels",
            "id": 3318051,
            "node_id": "MDk6TWlsZXN0b25lMzMxODA1MQ==",
            "number": 35,
            "state": "closed",
            "title": "0.18.0",
            "description": "",
            "creator": {
              "login": "MarcoFalke",
              "id": 6399679,
              "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
              "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/MarcoFalke",
              "html_url": "https://github.com/MarcoFalke",
              "followers_url": "https://api.github.com/users/MarcoFalke/followers",
              "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
              "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
              "repos_url": "https://api.github.com/users/MarcoFalke/repos",
              "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 186,
            "created_at": "2018-05-03T15:34:54Z",
            "updated_at": "2020-03-17T18:30:07Z",
            "closed_at": "2019-05-03T02:51:38Z"
          },
          "locked": true,
          "comments": 63,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13926",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/13926",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/13926.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/13926.patch"
          },
          "closed_at": "2019-01-31T16:10:36Z",
          "created_at": "2018-08-09T16:04:47Z",
          "updated_at": "2022-10-30T19:10:39Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-11T03:55:34Z",
      "updated_at": "2018-09-11T03:55:34Z",
      "source": {
        "issue": {
          "id": 356840072,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjEyOTk5ODEw",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14146",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14146/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14146/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14146/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/14146",
          "number": 14146,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: Remove trailing separators from -walletdir arg",
          "body": "If a user passes in a path with a trailing separator as the `walletdir`, multiple BerkeleyEnvironments may be created in the same directory which can lead to data corruption.\r\n\r\nDiscovered while reviewing https://github.com/bitcoin/bitcoin/pull/12493#issuecomment-417147646\r\n",
          "user": {
            "login": "PierreRochard",
            "id": 6299681,
            "node_id": "MDQ6VXNlcjYyOTk2ODE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6299681?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PierreRochard",
            "html_url": "https://github.com/PierreRochard",
            "followers_url": "https://api.github.com/users/PierreRochard/followers",
            "following_url": "https://api.github.com/users/PierreRochard/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/PierreRochard/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/PierreRochard/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/PierreRochard/subscriptions",
            "organizations_url": "https://api.github.com/users/PierreRochard/orgs",
            "repos_url": "https://api.github.com/users/PierreRochard/repos",
            "events_url": "https://api.github.com/users/PierreRochard/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/PierreRochard/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 16,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14146",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/14146",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/14146.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/14146.patch"
          },
          "closed_at": "2018-10-18T09:00:03Z",
          "created_at": "2018-09-04T14:36:39Z",
          "updated_at": "2021-12-16T13:57:46Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 1838745703,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE4Mzg3NDU3MDM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1838745703",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-11T14:48:23Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1842291710,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTg0MjI5MTcxMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1842291710",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-12T22:00:39Z"
    },
    {
      "event": "unlabeled",
      "id": 1842397651,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MTg0MjM5NzY1MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1842397651",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-12T23:19:31Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-13T00:22:16Z",
      "updated_at": "2018-09-13T00:22:16Z",
      "source": {
        "issue": {
          "id": 359499103,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjE0OTc1Nzc0",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14208",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14208/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14208/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14208/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/14208",
          "number": 14208,
          "state": "closed",
          "state_reason": null,
          "title": "[build] Actually remove ENABLE_WALLET",
          "body": "Adds a couple of redefinitions to dummywallet.cpp.",
          "user": {
            "login": "jnewbery",
            "id": 1063656,
            "node_id": "MDQ6VXNlcjEwNjM2NTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jnewbery",
            "html_url": "https://github.com/jnewbery",
            "followers_url": "https://api.github.com/users/jnewbery/followers",
            "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
            "organizations_url": "https://api.github.com/users/jnewbery/orgs",
            "repos_url": "https://api.github.com/users/jnewbery/repos",
            "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jnewbery/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 7,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14208",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/14208",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/14208.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/14208.patch"
          },
          "closed_at": "2018-09-13T13:51:49Z",
          "created_at": "2018-09-12T14:09:46Z",
          "updated_at": "2021-09-08T11:57:44Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-13T00:25:35Z",
      "updated_at": "2018-09-13T00:25:35Z",
      "source": {
        "issue": {
          "id": 359396568,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjE0ODk3MTUz",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14205",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14205/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14205/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14205/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/14205",
          "number": 14205,
          "state": "closed",
          "state_reason": null,
          "title": "lint: Check for use of NULL instead of nullptr",
          "body": "Add linter: Check for use of `NULL` instead of `nullptr`.\r\n\r\nAs suggested by @HashUnlimited in #14203 :-)\r\n\r\nTechnical rationale:\r\n\r\n`nullptr` cannot be confused with an `int`. `nullptr` also has a well-specified (very restrictive) type, and thus works in more scenarios where type deduction might do the wrong thing on `NULL` or `0`.\r\n\r\nThus: using `nullptr` instead of `NULL` consistently will avoid a certain class of bugs.\r\n\r\n",
          "user": {
            "login": "practicalswift",
            "id": 7826565,
            "node_id": "MDQ6VXNlcjc4MjY1NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/practicalswift",
            "html_url": "https://github.com/practicalswift",
            "followers_url": "https://api.github.com/users/practicalswift/followers",
            "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
            "organizations_url": "https://api.github.com/users/practicalswift/orgs",
            "repos_url": "https://api.github.com/users/practicalswift/repos",
            "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/practicalswift/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 27,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14205",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/14205",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/14205.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/14205.patch"
          },
          "closed_at": "2018-09-20T17:07:51Z",
          "created_at": "2018-09-12T09:40:07Z",
          "updated_at": "2022-08-18T18:29:49Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-13T00:26:13Z",
      "updated_at": "2018-09-13T00:26:13Z",
      "source": {
        "issue": {
          "id": 359337113,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjE0ODUxNjgx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14203",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14203/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14203/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14203/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/14203",
          "number": 14203,
          "state": "closed",
          "state_reason": null,
          "title": "[wallet.cpp] replace NULL with nullptr",
          "body": "came with cebefba0855cee7fbcb9474b34e6779369e8e9ce\r\n\r\na linter would be nice to detect those",
          "user": {
            "login": "HashUnlimited",
            "id": 26601261,
            "node_id": "MDQ6VXNlcjI2NjAxMjYx",
            "avatar_url": "https://avatars.githubusercontent.com/u/26601261?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HashUnlimited",
            "html_url": "https://github.com/HashUnlimited",
            "followers_url": "https://api.github.com/users/HashUnlimited/followers",
            "following_url": "https://api.github.com/users/HashUnlimited/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/HashUnlimited/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/HashUnlimited/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/HashUnlimited/subscriptions",
            "organizations_url": "https://api.github.com/users/HashUnlimited/orgs",
            "repos_url": "https://api.github.com/users/HashUnlimited/repos",
            "events_url": "https://api.github.com/users/HashUnlimited/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/HashUnlimited/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 9,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14203",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/14203",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/14203.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/14203.patch"
          },
          "closed_at": "2018-09-20T17:06:25Z",
          "created_at": "2018-09-12T06:45:49Z",
          "updated_at": "2021-09-08T12:45:17Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-13T00:27:32Z",
      "updated_at": "2018-09-13T00:27:32Z",
      "source": {
        "issue": {
          "id": 359229563,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjE0NzcxMDY1",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14201",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14201/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14201/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14201/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/14201",
          "number": 14201,
          "state": "closed",
          "state_reason": null,
          "title": "Don’t condition on expressions known already at compile time to always evaluate to true (or false). Use assertions instead.",
          "body": "Don’t condition on expressions known already at compile time to always evaluate to `true` (or `false`). Use assertions instead.\r\n\r\nNote to reviewers:\r\n* Some of these redundant checks might be indications of logical bugs in the existing code. If so they should be solved separately. Let me know if you spot such cases.\r\n* Although these conditions are known to be true in some cases we might have good reasons for doing a redundant check for documentation purposes or other reasons. Let me know if you think so.\r\n* Some of the assertions might be overkill since the preceding code trivially implies what we assert. The `fMaster` is such a case.\r\n\r\nFeedback welcome :-)",
          "user": {
            "login": "practicalswift",
            "id": 7826565,
            "node_id": "MDQ6VXNlcjc4MjY1NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/practicalswift",
            "html_url": "https://github.com/practicalswift",
            "followers_url": "https://api.github.com/users/practicalswift/followers",
            "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
            "organizations_url": "https://api.github.com/users/practicalswift/orgs",
            "repos_url": "https://api.github.com/users/practicalswift/repos",
            "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/practicalswift/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 12,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14201",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/14201",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/14201.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/14201.patch"
          },
          "closed_at": "2018-09-13T18:58:58Z",
          "created_at": "2018-09-11T21:23:31Z",
          "updated_at": "2022-08-18T18:29:48Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 421051664,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTA1MTY2NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/421051664",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-13T15:37:30Z",
      "updated_at": "2018-09-13T15:37:30Z",
      "author_association": "MEMBER",
      "body": "Concept ACK",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#issuecomment-421051664",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10973"
    },
    {
      "event": "labeled",
      "id": 1843985520,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE4NDM5ODU1MjA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1843985520",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-13T15:42:38Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1844030672,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTg0NDAzMDY3Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1844030672",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-13T16:00:30Z"
    },
    {
      "event": "unlabeled",
      "id": 1844257054,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MTg0NDI1NzA1NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1844257054",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-13T17:44:47Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 1845719560,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE4NDU3MTk1NjA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1845719560",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-14T10:06:43Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1846782882,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTg0Njc4Mjg4Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1846782882",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-14T18:39:45Z"
    },
    {
      "event": "unlabeled",
      "id": 1846955873,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MTg0Njk1NTg3Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1846955873",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-14T20:17:12Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 155707668,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTU1NzA3NjY4",
      "url": null,
      "actor": null,
      "commit_id": "e0854fc5baa7f0212cd9c2ae4d1e3cec682dca08",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "utACK e44e639558b1084f14a97847592616c3df9fff38",
      "user": {
        "login": "ken2812221",
        "id": 11154118,
        "node_id": "MDQ6VXNlcjExMTU0MTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ken2812221",
        "html_url": "https://github.com/ken2812221",
        "followers_url": "https://api.github.com/users/ken2812221/followers",
        "following_url": "https://api.github.com/users/ken2812221/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ken2812221/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ken2812221/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
        "organizations_url": "https://api.github.com/users/ken2812221/orgs",
        "repos_url": "https://api.github.com/users/ken2812221/repos",
        "events_url": "https://api.github.com/users/ken2812221/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ken2812221/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-155707668",
      "submitted_at": "2018-09-15T09:09:52Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "ken2812221",
        "id": 11154118,
        "node_id": "MDQ6VXNlcjExMTU0MTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ken2812221",
        "html_url": "https://github.com/ken2812221",
        "followers_url": "https://api.github.com/users/ken2812221/followers",
        "following_url": "https://api.github.com/users/ken2812221/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ken2812221/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ken2812221/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
        "organizations_url": "https://api.github.com/users/ken2812221/orgs",
        "repos_url": "https://api.github.com/users/ken2812221/repos",
        "events_url": "https://api.github.com/users/ken2812221/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ken2812221/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-15T09:26:42Z",
      "updated_at": "2018-09-15T09:26:42Z",
      "source": {
        "issue": {
          "id": 360524038,
          "node_id": "MDU6SXNzdWUzNjA1MjQwMzg=",
          "url": "https://api.github.com/repos/PierreRochard/bitcoin-acks/issues/76",
          "repository_url": "https://api.github.com/repos/PierreRochard/bitcoin-acks",
          "labels_url": "https://api.github.com/repos/PierreRochard/bitcoin-acks/issues/76/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/PierreRochard/bitcoin-acks/issues/76/comments",
          "events_url": "https://api.github.com/repos/PierreRochard/bitcoin-acks/issues/76/events",
          "html_url": "https://github.com/PierreRochard/bitcoin-acks/issues/76",
          "number": 76,
          "state": "closed",
          "state_reason": "completed",
          "title": "Non-stale utACK shows as Stale utACK",
          "body": "In bitcoin/bitcoin#10973. I reviewed the latest commit e44e639558b1084f14a97847592616c3df9fff38 and typed it in the comment. It should show as utACK on bitcoinacks.com, however it shows stale ack.",
          "user": {
            "login": "ken2812221",
            "id": 11154118,
            "node_id": "MDQ6VXNlcjExMTU0MTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ken2812221",
            "html_url": "https://github.com/ken2812221",
            "followers_url": "https://api.github.com/users/ken2812221/followers",
            "following_url": "https://api.github.com/users/ken2812221/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ken2812221/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ken2812221/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
            "organizations_url": "https://api.github.com/users/ken2812221/orgs",
            "repos_url": "https://api.github.com/users/ken2812221/repos",
            "events_url": "https://api.github.com/users/ken2812221/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ken2812221/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 689833919,
              "node_id": "MDU6TGFiZWw2ODk4MzM5MTk=",
              "url": "https://api.github.com/repos/PierreRochard/bitcoin-acks/labels/bug",
              "name": "bug",
              "color": "ee0701",
              "default": true
            }
          ],
          "assignee": {
            "login": "PierreRochard",
            "id": 6299681,
            "node_id": "MDQ6VXNlcjYyOTk2ODE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6299681?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PierreRochard",
            "html_url": "https://github.com/PierreRochard",
            "followers_url": "https://api.github.com/users/PierreRochard/followers",
            "following_url": "https://api.github.com/users/PierreRochard/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/PierreRochard/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/PierreRochard/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/PierreRochard/subscriptions",
            "organizations_url": "https://api.github.com/users/PierreRochard/orgs",
            "repos_url": "https://api.github.com/users/PierreRochard/repos",
            "events_url": "https://api.github.com/users/PierreRochard/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/PierreRochard/received_events",
            "type": "User",
            "site_admin": false
          },
          "assignees": [
            {
              "login": "PierreRochard",
              "id": 6299681,
              "node_id": "MDQ6VXNlcjYyOTk2ODE=",
              "avatar_url": "https://avatars.githubusercontent.com/u/6299681?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/PierreRochard",
              "html_url": "https://github.com/PierreRochard",
              "followers_url": "https://api.github.com/users/PierreRochard/followers",
              "following_url": "https://api.github.com/users/PierreRochard/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/PierreRochard/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/PierreRochard/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/PierreRochard/subscriptions",
              "organizations_url": "https://api.github.com/users/PierreRochard/orgs",
              "repos_url": "https://api.github.com/users/PierreRochard/repos",
              "events_url": "https://api.github.com/users/PierreRochard/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/PierreRochard/received_events",
              "type": "User",
              "site_admin": false
            }
          ],
          "author_association": "NONE",
          "locked": false,
          "comments": 4,
          "closed_at": "2018-09-16T17:09:33Z",
          "created_at": "2018-09-15T09:26:42Z",
          "updated_at": "2018-09-16T17:10:03Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-19T09:46:39Z",
      "updated_at": "2018-09-19T09:46:39Z",
      "source": {
        "issue": {
          "id": 361615731,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjE2NTQwMzQx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14269",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14269/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14269/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14269/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/14269",
          "number": 14269,
          "state": "closed",
          "state_reason": null,
          "title": "Move urlDecode to wallet/rpcwallet.cpp, where it's used",
          "body": "Remove now-unnecessary includes of httpserver.h from bitcoind.cpp and\r\nwallet/rpcwallet.cpp.\r\n\r\nPass decode_plus arg as an int rather than bool, as documented here:\r\nhttp://www.wangafu.net/~nickm/libevent-2.0/doxygen/html/http_8h.html#ac2914389616f04199aded10444fd8e42\r\nhttps://github.com/libevent/libevent/blob/29cc8386a2f7911eaa9336692a2c5544d8b4734f/http.c#L3182",
          "user": {
            "login": "Empact",
            "id": 5470,
            "node_id": "MDQ6VXNlcjU0NzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Empact",
            "html_url": "https://github.com/Empact",
            "followers_url": "https://api.github.com/users/Empact/followers",
            "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
            "organizations_url": "https://api.github.com/users/Empact/orgs",
            "repos_url": "https://api.github.com/users/Empact/repos",
            "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Empact/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 3,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14269",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/14269",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/14269.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/14269.patch"
          },
          "closed_at": "2018-09-19T12:28:11Z",
          "created_at": "2018-09-19T07:31:54Z",
          "updated_at": "2021-09-08T12:45:10Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-20T21:35:52Z",
      "updated_at": "2018-09-20T21:35:52Z",
      "source": {
        "issue": {
          "id": 362375373,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjE3MTEyODAx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14282",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14282/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14282/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14282/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/14282",
          "number": 14282,
          "state": "closed",
          "state_reason": null,
          "title": "[wallet] Remove -usehd",
          "body": "`-usehd` is no longer used (except to tell the user that they've set it incorrectly for the wallet that they're loading). Remove it (in the same spirit as #14272)",
          "user": {
            "login": "jnewbery",
            "id": 1063656,
            "node_id": "MDQ6VXNlcjEwNjM2NTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jnewbery",
            "html_url": "https://github.com/jnewbery",
            "followers_url": "https://api.github.com/users/jnewbery/followers",
            "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
            "organizations_url": "https://api.github.com/users/jnewbery/orgs",
            "repos_url": "https://api.github.com/users/jnewbery/repos",
            "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jnewbery/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 8,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14282",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/14282",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/14282.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/14282.patch"
          },
          "closed_at": "2018-09-26T21:38:43Z",
          "created_at": "2018-09-20T21:30:31Z",
          "updated_at": "2021-09-08T11:58:14Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 423447036,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzQ0NzAzNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/423447036",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-21T07:53:26Z",
      "updated_at": "2018-09-21T07:53:26Z",
      "author_association": "CONTRIBUTOR",
      "body": "This PR does not seem to compile when rebased on `master` :-)",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#issuecomment-423447036",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10973"
    },
    {
      "event": "reviewed",
      "id": 157580590,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTU3NTgwNTkw",
      "url": null,
      "actor": null,
      "commit_id": "e44e639558b1084f14a97847592616c3df9fff38",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-157580590",
      "submitted_at": "2018-09-21T07:54:18Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
    },
    {
      "event": "reviewed",
      "id": 157581192,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTU3NTgxMTky",
      "url": null,
      "actor": null,
      "commit_id": "e44e639558b1084f14a97847592616c3df9fff38",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-157581192",
      "submitted_at": "2018-09-21T07:56:18Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
    },
    {
      "event": "reviewed",
      "id": 157581246,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTU3NTgxMjQ2",
      "url": null,
      "actor": null,
      "commit_id": "e44e639558b1084f14a97847592616c3df9fff38",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-157581246",
      "submitted_at": "2018-09-21T07:56:31Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
    },
    {
      "event": "reviewed",
      "id": 157581340,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTU3NTgxMzQw",
      "url": null,
      "actor": null,
      "commit_id": "e44e639558b1084f14a97847592616c3df9fff38",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-157581340",
      "submitted_at": "2018-09-21T07:56:49Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
    },
    {
      "event": "reviewed",
      "id": 157581455,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTU3NTgxNDU1",
      "url": null,
      "actor": null,
      "commit_id": "e44e639558b1084f14a97847592616c3df9fff38",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-157581455",
      "submitted_at": "2018-09-21T07:57:11Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
    },
    {
      "event": "reviewed",
      "id": 157581521,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTU3NTgxNTIx",
      "url": null,
      "actor": null,
      "commit_id": "e44e639558b1084f14a97847592616c3df9fff38",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-157581521",
      "submitted_at": "2018-09-21T07:57:23Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
    },
    {
      "event": "reviewed",
      "id": 157581640,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTU3NTgxNjQw",
      "url": null,
      "actor": null,
      "commit_id": "e44e639558b1084f14a97847592616c3df9fff38",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-157581640",
      "submitted_at": "2018-09-21T07:57:49Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
    },
    {
      "event": "reviewed",
      "id": 157585498,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTU3NTg1NDk4",
      "url": null,
      "actor": null,
      "commit_id": "e44e639558b1084f14a97847592616c3df9fff38",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-157585498",
      "submitted_at": "2018-09-21T08:11:03Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
    },
    {
      "event": "reviewed",
      "id": 157585601,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTU3NTg1NjAx",
      "url": null,
      "actor": null,
      "commit_id": "e44e639558b1084f14a97847592616c3df9fff38",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-157585601",
      "submitted_at": "2018-09-21T08:11:25Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
    },
    {
      "event": "reviewed",
      "id": 157585959,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTU3NTg1OTU5",
      "url": null,
      "actor": null,
      "commit_id": "e44e639558b1084f14a97847592616c3df9fff38",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-157585959",
      "submitted_at": "2018-09-21T08:12:32Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
    },
    {
      "event": "reviewed",
      "id": 157586253,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTU3NTg2MjUz",
      "url": null,
      "actor": null,
      "commit_id": "e44e639558b1084f14a97847592616c3df9fff38",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-157586253",
      "submitted_at": "2018-09-21T08:13:37Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
    },
    {
      "event": "reviewed",
      "id": 157586382,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTU3NTg2Mzgy",
      "url": null,
      "actor": null,
      "commit_id": "e44e639558b1084f14a97847592616c3df9fff38",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-157586382",
      "submitted_at": "2018-09-21T08:14:02Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
    },
    {
      "event": "reviewed",
      "id": 157586754,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTU3NTg2NzU0",
      "url": null,
      "actor": null,
      "commit_id": "e44e639558b1084f14a97847592616c3df9fff38",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-157586754",
      "submitted_at": "2018-09-21T08:15:15Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
    },
    {
      "event": "reviewed",
      "id": 157591392,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTU3NTkxMzky",
      "url": null,
      "actor": null,
      "commit_id": "e44e639558b1084f14a97847592616c3df9fff38",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-157591392",
      "submitted_at": "2018-09-21T08:29:41Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
    },
    {
      "event": "reviewed",
      "id": 157591599,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTU3NTkxNTk5",
      "url": null,
      "actor": null,
      "commit_id": "e44e639558b1084f14a97847592616c3df9fff38",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-157591599",
      "submitted_at": "2018-09-21T08:30:14Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
    },
    {
      "event": "reviewed",
      "id": 157591688,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTU3NTkxNjg4",
      "url": null,
      "actor": null,
      "commit_id": "e44e639558b1084f14a97847592616c3df9fff38",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-157591688",
      "submitted_at": "2018-09-21T08:30:27Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
    },
    {
      "event": "reviewed",
      "id": 157591801,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTU3NTkxODAx",
      "url": null,
      "actor": null,
      "commit_id": "e44e639558b1084f14a97847592616c3df9fff38",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-157591801",
      "submitted_at": "2018-09-21T08:30:43Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
    },
    {
      "event": "reviewed",
      "id": 157591941,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTU3NTkxOTQx",
      "url": null,
      "actor": null,
      "commit_id": "e44e639558b1084f14a97847592616c3df9fff38",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-157591941",
      "submitted_at": "2018-09-21T08:31:01Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-21T13:24:25Z",
      "updated_at": "2018-09-21T13:24:25Z",
      "source": {
        "issue": {
          "id": 299226378,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MTcwNjYwMDUy",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12508",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12508/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12508/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12508/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/12508",
          "number": 12508,
          "state": "closed",
          "state_reason": null,
          "title": "IsAllFromMe",
          "body": "Rebases #9167 by @morcos on master.\r\n\r\nWhy do this: this is mostly a refactor which fixes some bugs, e.g. fee in `gettransaction` for mixed owner inputs.\r\n",
          "user": {
            "login": "kallewoof",
            "id": 250224,
            "node_id": "MDQ6VXNlcjI1MDIyNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kallewoof",
            "html_url": "https://github.com/kallewoof",
            "followers_url": "https://api.github.com/users/kallewoof/followers",
            "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
            "organizations_url": "https://api.github.com/users/kallewoof/orgs",
            "repos_url": "https://api.github.com/users/kallewoof/repos",
            "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/kallewoof/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 16,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12508",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/12508",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/12508.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/12508.patch"
          },
          "closed_at": "2018-11-12T04:56:25Z",
          "created_at": "2018-02-22T05:25:29Z",
          "updated_at": "2021-12-16T14:11:32Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-21T13:29:47Z",
      "updated_at": "2018-09-21T13:29:47Z",
      "source": {
        "issue": {
          "id": 272873087,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MTUxODYyOTYx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11652",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11652/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11652/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11652/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/11652",
          "number": 11652,
          "state": "closed",
          "state_reason": null,
          "title": "Add missing locks: validation.cpp + related",
          "body": "Add missing locks required when accessing:\r\n\r\n```\r\nint32_t nBlockSequenceId GUARDED_BY(cs_nBlockSequenceId) = 1;\r\nint nLastBlockFile GUARDED_BY(cs_LastBlockFile) = 0;\r\nbool fCheckForPruning GUARDED_BY(cs_LastBlockFile) = false;\r\nCuckooCache::cache<uint256, SignatureCacheHasher> scriptExecutionCache GUARDED_BY(cs_main);\r\nBlockMap& mapBlockIndex GUARDED_BY(cs_main);\r\nstd::unique_ptr<CCoinsViewDB> pcoinsdbview GUARDED_BY(cs_main);\r\nstd::unique_ptr<CCoinsViewCache> pcoinsTip GUARDED_BY(cs_main);\r\nstd::unique_ptr<CBlockTreeDB> pblocktree GUARDED_BY(cs_main);\r\n```\r\n\r\nAlso, add the locking annotations that follow from the requirements above.",
          "user": {
            "login": "practicalswift",
            "id": 7826565,
            "node_id": "MDQ6VXNlcjc4MjY1NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/practicalswift",
            "html_url": "https://github.com/practicalswift",
            "followers_url": "https://api.github.com/users/practicalswift/followers",
            "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
            "organizations_url": "https://api.github.com/users/practicalswift/orgs",
            "repos_url": "https://api.github.com/users/practicalswift/repos",
            "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/practicalswift/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 38,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11652",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/11652",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/11652.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/11652.patch"
          },
          "closed_at": "2019-01-17T21:32:05Z",
          "created_at": "2017-11-10T09:38:15Z",
          "updated_at": "2022-08-18T18:21:58Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-21T13:30:08Z",
      "updated_at": "2018-09-21T13:30:08Z",
      "source": {
        "issue": {
          "id": 272131199,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MTUxMzMyMzQz",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11634",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11634/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11634/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11634/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/11634",
          "number": 11634,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: Add missing cs_wallet/cs_KeyStore locks to wallet",
          "body": "Add missing wallet locks:\r\n\r\n* Calling the function `GetConflicts(...)` requires holding the mutex `cs_wallet`\r\n* Calling the function `IsSpent(...)` requires holding the mutex `cs_wallet`\r\n* Accessing the variables `mapKeys` and `mapCryptedKeys` requires holding the mutex `cs_KeyStore`\r\n* Accessing the variable `nTimeFirstKey` requires holding the mutex `cs_wallet`\r\n* Accessing the variable `mapWallet` requires holding the mutex `cs_wallet`\r\n* Accessing the variable `nTimeFirstKey` requires holding the mutex `cs_wallet`",
          "user": {
            "login": "practicalswift",
            "id": 7826565,
            "node_id": "MDQ6VXNlcjc4MjY1NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/practicalswift",
            "html_url": "https://github.com/practicalswift",
            "followers_url": "https://api.github.com/users/practicalswift/followers",
            "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
            "organizations_url": "https://api.github.com/users/practicalswift/orgs",
            "repos_url": "https://api.github.com/users/practicalswift/repos",
            "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/practicalswift/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "comments": 37,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11634",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/11634",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/11634.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/11634.patch"
          },
          "closed_at": "2018-10-24T09:03:21Z",
          "created_at": "2017-11-08T09:33:55Z",
          "updated_at": "2022-11-22T09:56:53Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-21T13:31:55Z",
      "updated_at": "2018-09-21T13:31:55Z",
      "source": {
        "issue": {
          "id": 261209314,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MTQzNTY2ODkx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11413",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11413/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11413/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11413/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/11413",
          "number": 11413,
          "state": "closed",
          "state_reason": null,
          "title": "[wallet] [rpc] sendtoaddress/sendmany: Add explicit feerate option",
          "body": "This lets users pick their own fees when using `sendtoaddress`/`sendmany` if they prefer this over the estimators.",
          "user": {
            "login": "kallewoof",
            "id": 250224,
            "node_id": "MDQ6VXNlcjI1MDIyNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kallewoof",
            "html_url": "https://github.com/kallewoof",
            "followers_url": "https://api.github.com/users/kallewoof/followers",
            "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
            "organizations_url": "https://api.github.com/users/kallewoof/orgs",
            "repos_url": "https://api.github.com/users/kallewoof/repos",
            "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/kallewoof/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64583,
              "node_id": "MDU6TGFiZWw2NDU4Mw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Feature",
              "name": "Feature",
              "color": "7cf575",
              "default": false
            },
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 79,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11413",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/11413",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/11413.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/11413.patch"
          },
          "closed_at": "2020-06-25T17:56:14Z",
          "created_at": "2017-09-28T06:44:23Z",
          "updated_at": "2022-02-15T10:48:18Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-21T13:33:05Z",
      "updated_at": "2018-09-21T13:33:05Z",
      "source": {
        "issue": {
          "id": 243002402,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MTMwNTkyOTM0",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10823",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10823/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10823/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10823/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/10823",
          "number": 10823,
          "state": "closed",
          "state_reason": null,
          "title": "Allow all mempool txs to be replaced after a configurable timeout (default 6h)",
          "body": "This PR' aim is to improve user experience around stuck transactions without\r\naffecting users of zero conf transactions.\r\n\r\ntldr: Allow transaction replacement for transactions sitting in mempool for\r\nlonger than timeout (default 6h configurable) regardless of opt-in replacement\r\nflag.\r\n\r\nThis PR affects policy/relay only.\r\n\r\nStuck transactions have been a problem for users recently. While wallets\r\nare improving (opt in replacement, Child Pays For Parent, etc) there are some\r\ncases which find users with transactions stuck for days that can't be solved\r\neasily/reliably by wallet developers, especially when the user creates the\r\nstuck transaction with old software or for some reason disabled available\r\nfeatures countering stuck transactions.\r\n\r\nFor the purpose of the below I will ignore transactions created by the core\r\nwallet when talking about transaction expiration/eviction and focus on policy.\r\n\r\nBitcoin 0.12 introduced (or in a way re-introduced) opt-in transaction\r\nreplacement (BIP125), allowing people to more explicitly flag that their\r\ntransaction can be replaced (such that users of zero conf transactions can\r\nimmediately recognize them).\r\n\r\nAt the same time mempool limiting (configurable) was introduced, making the\r\nindividual mempool drop transactions at the bottom (low fee) when full.\r\n\r\nBoth before and after these changes any transaction in mempool would be\r\nautomatically evicted after 72 hours (configurable).\r\n\r\nRecently 0.14.0 increased the eviction from 72 hours to 2 weeks. These changes\r\nallows users of the system to aim for lower fees but at the same time makes it\r\nfrustrating for users that disable opt-in transaction replacement or that use\r\nsoftware that doesn't support it in first place to bump the fee at a later time\r\nor to revert the payment as they have to wait for a while or use ad-hoc\r\nsoftware.\r\n\r\nA number of miners will mine transactions regardless of opt-in flags (5-10%\r\nmaybe) and while core nodes won't propagate those transactions, a well\r\nconnected user can generally get replacement transactions mined within a\r\nreasonable amount of time without opt-in transaction replacement flags set.\r\n\r\nThis may be convenient for attackers or ad-hoc expert use but\r\nnot ideal for wallet developers, or at least until core merges full transaction\r\nreplacement because using this functionality would requires wallets to use\r\npreferential peering and/or forks of bitcoin core.\r\n\r\nUntil then a compromise solution that doesn't impact zero conf use and that\r\nimproves user experience would be to allow transactions to be replaced after\r\nsitting for a timeout in mempool (thus unconfirmed).\r\n\r\nThe timeout should be high enough that allows current use of zero conf and at\r\nthe same time allows same working day solution for users.\r\nI suggest a 6 hours timeout and to have it configurable for testing and ability\r\nfor user to change.\r\n\r\nThe changes continue to support disabling entirely transaction replacement\r\n(-mempoolreplacement) and introduces a new command line parameter\r\n(-mempoolreplacementtimeout) which allows to pass the number of seconds after\r\nwhich a transaction can be unconditionally replaced and setting this parameter\r\nto two weeks will keep the original behavior.\r\n\r\nIf you want to test the changes using @petertodd Replace-by-Fee tools build\r\ncore with this PR applied and wallet enabled and run with\r\n-mempoolreplacementtimeout=10 and use doublespend.py (with and without\r\n -b 1) from https://github.com/petertodd/replace-by-fee-tools",
          "user": {
            "login": "greenaddress",
            "id": 5269298,
            "node_id": "MDQ6VXNlcjUyNjkyOTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5269298?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/greenaddress",
            "html_url": "https://github.com/greenaddress",
            "followers_url": "https://api.github.com/users/greenaddress/followers",
            "following_url": "https://api.github.com/users/greenaddress/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/greenaddress/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/greenaddress/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/greenaddress/subscriptions",
            "organizations_url": "https://api.github.com/users/greenaddress/orgs",
            "repos_url": "https://api.github.com/users/greenaddress/repos",
            "events_url": "https://api.github.com/users/greenaddress/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/greenaddress/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 82428251,
              "node_id": "MDU6TGFiZWw4MjQyODI1MQ==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/TX%20fees%20and%20policy",
              "name": "TX fees and policy",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 43,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10823",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/10823",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/10823.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/10823.patch"
          },
          "closed_at": "2019-09-30T12:03:22Z",
          "created_at": "2017-07-14T13:46:56Z",
          "updated_at": "2021-12-16T14:11:47Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-21T13:34:09Z",
      "updated_at": "2018-09-21T13:34:09Z",
      "source": {
        "issue": {
          "id": 196542781,
          "node_id": "MDExOlB1bGxSZXF1ZXN0OTg2NTYyODg=",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9381",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9381/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9381/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9381/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/9381",
          "number": 9381,
          "state": "closed",
          "state_reason": null,
          "title": "Remove CWalletTx merging logic from AddToWallet",
          "body": "This is a pure refactoring, no behavior is changing.\r\n\r\nInstead of AddToWallet taking a temporary CWalletTx object and then potentially merging it with a pre-existing CWalletTx, have it take a callback so callers can update the pre-existing CWalletTx directly.\r\n\r\nThis makes AddToWallet simpler because now it is only has to be concerned with saving CWalletTx objects and not merging them.\r\n\r\nThis makes AddToWallet calls clearer because they can now make direct updates to CWalletTx entries without having to make temporary objects and then worry about how they will be merged.\r\n\r\nMotivation for this change came from the bumpfee PR #8456 where we wanted to be able to call AddToWallet to make a simple update to an existing transaction, but were reluctant to, because the existing CWalletTx merging logic did not apply and seemed dangerous try to update as part of that PR. After this refactoring, the bumpfee PR could call AddToWallet safely instead of implementing a duplicate AddToWallet function.\r\n\r\nThis also allows getting rid of the CWalletTx copy constructor to prevent unintentional copying.",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 30,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9381",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/9381",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/9381.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/9381.patch"
          },
          "closed_at": "2020-05-05T23:39:25Z",
          "created_at": "2016-12-19T23:00:20Z",
          "updated_at": "2022-08-18T17:14:23Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-22T07:21:22Z",
      "updated_at": "2018-09-22T07:21:22Z",
      "source": {
        "issue": {
          "id": 318225179,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MTg0NDg1NzUw",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13100",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13100/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13100/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13100/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/13100",
          "number": 13100,
          "state": "closed",
          "state_reason": null,
          "title": "gui: Add dynamic wallets support ",
          "body": "This PR adds a menu entry `Open Wallet` to support loading existing wallets in the UI.\r\n\r\nFixes #7675.",
          "user": {
            "login": "promag",
            "id": 3534524,
            "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/promag",
            "html_url": "https://github.com/promag",
            "followers_url": "https://api.github.com/users/promag/followers",
            "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
            "organizations_url": "https://api.github.com/users/promag/orgs",
            "repos_url": "https://api.github.com/users/promag/repos",
            "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/promag/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135946,
              "node_id": "MDU6TGFiZWwxMzU5NDY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/GUI",
              "name": "GUI",
              "color": "02d7e1",
              "default": false
            },
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/35",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/35",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/35/labels",
            "id": 3318051,
            "node_id": "MDk6TWlsZXN0b25lMzMxODA1MQ==",
            "number": 35,
            "state": "closed",
            "title": "0.18.0",
            "description": "",
            "creator": {
              "login": "MarcoFalke",
              "id": 6399679,
              "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
              "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/MarcoFalke",
              "html_url": "https://github.com/MarcoFalke",
              "followers_url": "https://api.github.com/users/MarcoFalke/followers",
              "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
              "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
              "repos_url": "https://api.github.com/users/MarcoFalke/repos",
              "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 186,
            "created_at": "2018-05-03T15:34:54Z",
            "updated_at": "2020-03-17T18:30:07Z",
            "closed_at": "2019-05-03T02:51:38Z"
          },
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 50,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13100",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/13100",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/13100.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/13100.patch"
          },
          "closed_at": "2019-01-18T20:39:53Z",
          "created_at": "2018-04-26T23:01:22Z",
          "updated_at": "2021-12-16T15:10:36Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 157932364,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTU3OTMyMzY0",
      "url": null,
      "actor": null,
      "commit_id": "e44e639558b1084f14a97847592616c3df9fff38",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-157932364",
      "submitted_at": "2018-09-23T08:23:05Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
    },
    {
      "event": "reviewed",
      "id": 157932369,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTU3OTMyMzY5",
      "url": null,
      "actor": null,
      "commit_id": "e44e639558b1084f14a97847592616c3df9fff38",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-157932369",
      "submitted_at": "2018-09-23T08:23:28Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
    },
    {
      "event": "reviewed",
      "id": 157932380,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTU3OTMyMzgw",
      "url": null,
      "actor": null,
      "commit_id": "e44e639558b1084f14a97847592616c3df9fff38",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-157932380",
      "submitted_at": "2018-09-23T08:24:00Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
    },
    {
      "event": "reviewed",
      "id": 157932388,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTU3OTMyMzg4",
      "url": null,
      "actor": null,
      "commit_id": "e44e639558b1084f14a97847592616c3df9fff38",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-157932388",
      "submitted_at": "2018-09-23T08:24:18Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
    },
    {
      "event": "reviewed",
      "id": 157932396,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTU3OTMyMzk2",
      "url": null,
      "actor": null,
      "commit_id": "e44e639558b1084f14a97847592616c3df9fff38",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-157932396",
      "submitted_at": "2018-09-23T08:24:36Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
    },
    {
      "event": "reviewed",
      "id": 157932405,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTU3OTMyNDA1",
      "url": null,
      "actor": null,
      "commit_id": "e44e639558b1084f14a97847592616c3df9fff38",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-157932405",
      "submitted_at": "2018-09-23T08:24:56Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-23T13:42:30Z",
      "updated_at": "2018-09-23T13:42:30Z",
      "source": {
        "issue": {
          "id": 362943651,
          "node_id": "MDU6SXNzdWUzNjI5NDM2NTE=",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14299",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14299/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14299/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14299/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/14299",
          "number": 14299,
          "state": "closed",
          "state_reason": "completed",
          "title": "Deprecate wallet `generate` RPC method",
          "body": "The `generate` RPC method:\r\n- was introduced in 2010\r\n- is now only used for testing\r\n- reaches across multiple components (wallet, mining)\r\n\r\nI propose we remove the wallet `generate` RPC method and update all tests to use the `generatetoaddress` RPC method. We can do this non-invasively in the test framework by adding a `generate` method to `TestNode` so that the individual tests do not need to be updated. We could also add a `generate` alias to the `generatetoaddress` RPC method.\r\n\r\nDoing this removes a wallet->server dependency and simplifies the wallet->server interface (#10973).\r\n\r\nI'm opening this issue before implementing in case anyone has objections.",
          "user": {
            "login": "jnewbery",
            "id": 1063656,
            "node_id": "MDQ6VXNlcjEwNjM2NTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jnewbery",
            "html_url": "https://github.com/jnewbery",
            "followers_url": "https://api.github.com/users/jnewbery/followers",
            "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
            "organizations_url": "https://api.github.com/users/jnewbery/orgs",
            "repos_url": "https://api.github.com/users/jnewbery/repos",
            "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jnewbery/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/35",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/35",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/35/labels",
            "id": 3318051,
            "node_id": "MDk6TWlsZXN0b25lMzMxODA1MQ==",
            "number": 35,
            "state": "closed",
            "title": "0.18.0",
            "description": "",
            "creator": {
              "login": "MarcoFalke",
              "id": 6399679,
              "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
              "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/MarcoFalke",
              "html_url": "https://github.com/MarcoFalke",
              "followers_url": "https://api.github.com/users/MarcoFalke/followers",
              "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
              "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
              "repos_url": "https://api.github.com/users/MarcoFalke/repos",
              "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 186,
            "created_at": "2018-05-03T15:34:54Z",
            "updated_at": "2020-03-17T18:30:07Z",
            "closed_at": "2019-05-03T02:51:38Z"
          },
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 8,
          "closed_at": "2018-10-23T22:18:40Z",
          "created_at": "2018-09-23T13:42:30Z",
          "updated_at": "2021-09-08T12:39:37Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "mentioned",
      "id": 1862044701,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTg2MjA0NDcwMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1862044701",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-23T16:42:36Z"
    },
    {
      "event": "subscribed",
      "id": 1862044702,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE4NjIwNDQ3MDI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1862044702",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-23T16:42:36Z"
    },
    {
      "event": "mentioned",
      "id": 1862058450,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTg2MjA1ODQ1MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1862058450",
      "actor": {
        "login": "flack",
        "id": 425166,
        "node_id": "MDQ6VXNlcjQyNTE2Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/425166?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flack",
        "html_url": "https://github.com/flack",
        "followers_url": "https://api.github.com/users/flack/followers",
        "following_url": "https://api.github.com/users/flack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/flack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/flack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/flack/subscriptions",
        "organizations_url": "https://api.github.com/users/flack/orgs",
        "repos_url": "https://api.github.com/users/flack/repos",
        "events_url": "https://api.github.com/users/flack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/flack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-23T17:22:36Z"
    },
    {
      "event": "subscribed",
      "id": 1862058451,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE4NjIwNTg0NTE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1862058451",
      "actor": {
        "login": "flack",
        "id": 425166,
        "node_id": "MDQ6VXNlcjQyNTE2Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/425166?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flack",
        "html_url": "https://github.com/flack",
        "followers_url": "https://api.github.com/users/flack/followers",
        "following_url": "https://api.github.com/users/flack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/flack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/flack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/flack/subscriptions",
        "organizations_url": "https://api.github.com/users/flack/orgs",
        "repos_url": "https://api.github.com/users/flack/repos",
        "events_url": "https://api.github.com/users/flack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/flack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-23T17:22:36Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-24T00:09:01Z",
      "updated_at": "2018-09-24T00:09:01Z",
      "source": {
        "issue": {
          "id": 362986155,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjE3NTM2OTI2",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14302",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14302/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14302/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14302/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/14302",
          "number": 14302,
          "state": "closed",
          "state_reason": null,
          "title": "rpc: Add missing calls to EnsureWalletIsUnlocked",
          "body": "",
          "user": {
            "login": "promag",
            "id": 3534524,
            "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/promag",
            "html_url": "https://github.com/promag",
            "followers_url": "https://api.github.com/users/promag/followers",
            "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
            "organizations_url": "https://api.github.com/users/promag/orgs",
            "repos_url": "https://api.github.com/users/promag/repos",
            "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/promag/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14302",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/14302",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/14302.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/14302.patch"
          },
          "closed_at": "2018-09-24T00:35:39Z",
          "created_at": "2018-09-23T23:12:23Z",
          "updated_at": "2021-09-08T11:58:01Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 1864095265,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE4NjQwOTUyNjU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1864095265",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-24T20:22:05Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1869307815,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTg2OTMwNzgxNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1869307815",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-26T19:25:25Z"
    },
    {
      "event": "unlabeled",
      "id": 1869536396,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MTg2OTUzNjM5Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1869536396",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-26T21:12:25Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 1869728415,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE4Njk3Mjg0MTU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1869728415",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-26T23:14:22Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1871763071,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTg3MTc2MzA3MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1871763071",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-27T18:01:40Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-27T19:25:05Z",
      "updated_at": "2018-09-27T19:25:05Z",
      "source": {
        "issue": {
          "id": 363237689,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjE3NzI1MTI3",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14309",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14309/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14309/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14309/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/14309",
          "number": 14309,
          "state": "closed",
          "state_reason": null,
          "title": "Use non-throwing type-safe ChainType where possible",
          "body": "Currently we use string constants to select different chain rules (e.g \"main\" or \"test\"). The obvious downsides are that any function that accepts such a string needs to check if it is one of the known ones and return a runtime error when not found.\r\n\r\nThis check can be done at compile time by using a `switch` statement on an `enum class`.\r\n\r\nTo not refactor all the existing code, this first introduces the type-safe `enum class ChainType` and then runs a scripted diff on all instances where we can benefit from the new class. I intend to remove the throwing and now deprecated methods that pass around the string in a future patch.",
          "user": {
            "login": "MarcoFalke",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarcoFalke",
            "html_url": "https://github.com/MarcoFalke",
            "followers_url": "https://api.github.com/users/MarcoFalke/followers",
            "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
            "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
            "repos_url": "https://api.github.com/users/MarcoFalke/repos",
            "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14309",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/14309",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/14309.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/14309.patch"
          },
          "closed_at": "2018-10-21T01:50:46Z",
          "created_at": "2018-09-24T17:05:27Z",
          "updated_at": "2021-09-08T11:58:48Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "unlabeled",
      "id": 1871968409,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MTg3MTk2ODQwOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1871968409",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-27T19:39:17Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-28T17:32:11Z",
      "updated_at": "2018-09-28T17:32:11Z",
      "source": {
        "issue": {
          "id": 364949282,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjE5MDE0NTU2",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14350",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14350/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14350/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14350/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/14350",
          "number": 14350,
          "state": "closed",
          "state_reason": null,
          "title": "Add WalletLocation class",
          "body": "Advantages of this change:\r\n - avoid resolving wallet absolute path and name repetitively and in multiple places;\r\n - avoid calling `GetWalletDir` in multiple places;\r\n - extract these details from the actual wallet implementation.\r\n\r\nThe `WalletLocation` class can be a way to represent a wallet not yet loaded that exists in the wallet directory.",
          "user": {
            "login": "promag",
            "id": 3534524,
            "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/promag",
            "html_url": "https://github.com/promag",
            "followers_url": "https://api.github.com/users/promag/followers",
            "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
            "organizations_url": "https://api.github.com/users/promag/orgs",
            "repos_url": "https://api.github.com/users/promag/repos",
            "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/promag/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 14,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14350",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/14350",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/14350.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/14350.patch"
          },
          "closed_at": "2018-11-05T12:18:10Z",
          "created_at": "2018-09-28T15:59:41Z",
          "updated_at": "2021-09-08T11:59:09Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-09-30T15:38:12Z",
      "updated_at": "2018-09-30T15:38:12Z",
      "source": {
        "issue": {
          "id": 365234123,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjE5MjEwNjUz",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14358",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14358/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14358/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14358/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/14358",
          "number": 14358,
          "state": "closed",
          "state_reason": null,
          "title": "[logs] Fix a few log messages related to duration measurement",
          "body": "- Remove fixed-width formatting for the duration value (`%15d` -> `%d`), for better consistency with other [similar](https://github.com/bitcoin/bitcoin/search?q=dms&unscoped_q=dms) logging statements.\r\n- Correct the logging statement that starts with a space (`\" block index %15dms\\n\"`) to start with a verb. \r\n- Add `\" in \"` between the operation description and the millisecond duration.",
          "user": {
            "login": "romanz",
            "id": 9900,
            "node_id": "MDQ6VXNlcjk5MDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9900?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/romanz",
            "html_url": "https://github.com/romanz",
            "followers_url": "https://api.github.com/users/romanz/followers",
            "following_url": "https://api.github.com/users/romanz/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/romanz/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/romanz/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/romanz/subscriptions",
            "organizations_url": "https://api.github.com/users/romanz/orgs",
            "repos_url": "https://api.github.com/users/romanz/repos",
            "events_url": "https://api.github.com/users/romanz/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/romanz/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 12,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14358",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/14358",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/14358.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/14358.patch"
          },
          "closed_at": "2019-01-12T20:57:27Z",
          "created_at": "2018-09-30T15:33:14Z",
          "updated_at": "2021-12-16T14:05:02Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-03T22:11:49Z",
      "updated_at": "2018-10-03T22:11:49Z",
      "source": {
        "issue": {
          "id": 366519961,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjIwMTczNzE5",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14384",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14384/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14384/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14384/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/14384",
          "number": 14384,
          "state": "closed",
          "state_reason": null,
          "title": "Fire TransactionRemovedFromMempool callbacks from mempool",
          "body": "This pull request fires TransactionRemovedFromMempool callbacks from the mempool and cleans up a bunch of code.\r\n\r\nIt also resolves the `txmempool -> validation -> validationinterface -> txmempool` circular dependency.\r\n\r\nIdeally, `validationinterface` is a dumb component that doesn't have any knowledge of the sub-systems it sends its notifications to. The commit that aims to resolve this circular dependency by moving `txmempool` specific code out of `validationinterface` to `txmempool` where it belongs.\r\n",
          "user": {
            "login": "l2a5b1",
            "id": 13120787,
            "node_id": "MDQ6VXNlcjEzMTIwNzg3",
            "avatar_url": "https://avatars.githubusercontent.com/u/13120787?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/l2a5b1",
            "html_url": "https://github.com/l2a5b1",
            "followers_url": "https://api.github.com/users/l2a5b1/followers",
            "following_url": "https://api.github.com/users/l2a5b1/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/l2a5b1/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/l2a5b1/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/l2a5b1/subscriptions",
            "organizations_url": "https://api.github.com/users/l2a5b1/orgs",
            "repos_url": "https://api.github.com/users/l2a5b1/repos",
            "events_url": "https://api.github.com/users/l2a5b1/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/l2a5b1/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 28,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14384",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/14384",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/14384.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/14384.patch"
          },
          "closed_at": "2019-11-22T15:36:17Z",
          "created_at": "2018-10-03T20:43:23Z",
          "updated_at": "2021-12-16T14:13:00Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-06T08:46:00Z",
      "updated_at": "2018-10-06T08:46:00Z",
      "source": {
        "issue": {
          "id": 367426825,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjIwODY3MDMw",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14411",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14411/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14411/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14411/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/14411",
          "number": 14411,
          "state": "closed",
          "state_reason": null,
          "title": "[wallet] Restore ability to list incoming transactions by label",
          "body": "This change partially reverts #13075 and #14023.\r\n\r\nFixes #14382",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/35",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/35",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/35/labels",
            "id": 3318051,
            "node_id": "MDk6TWlsZXN0b25lMzMxODA1MQ==",
            "number": 35,
            "state": "closed",
            "title": "0.18.0",
            "description": "",
            "creator": {
              "login": "MarcoFalke",
              "id": 6399679,
              "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
              "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/MarcoFalke",
              "html_url": "https://github.com/MarcoFalke",
              "followers_url": "https://api.github.com/users/MarcoFalke/followers",
              "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
              "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
              "repos_url": "https://api.github.com/users/MarcoFalke/repos",
              "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 186,
            "created_at": "2018-05-03T15:34:54Z",
            "updated_at": "2020-03-17T18:30:07Z",
            "closed_at": "2019-05-03T02:51:38Z"
          },
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 19,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14411",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/14411",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/14411.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/14411.patch"
          },
          "closed_at": "2018-11-14T17:01:19Z",
          "created_at": "2018-10-06T05:51:37Z",
          "updated_at": "2022-08-16T17:03:30Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-09T03:33:36Z",
      "updated_at": "2018-10-09T03:33:36Z",
      "source": {
        "issue": {
          "id": 368027839,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjIxMjk4Nzcx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14437",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14437/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14437/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14437/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/14437",
          "number": 14437,
          "state": "closed",
          "state_reason": null,
          "title": "Refactor: Start to separate wallet from node",
          "body": "This creates an incomplete [`Chain`](https://github.com/ryanofsky/bitcoin/blob/pr/wipc-sep/src/interfaces/chain.h) interface in [`src/interfaces/`](https://github.com/ryanofsky/bitcoin/tree/pr/wipc-sep/src/interfaces) and begins to update wallet code to use it.\r\n\r\n#10973 builds on this, changing the wallet to use the new interface to access chain state, instead of using CBlockIndex pointers and global variables like `chainActive`.",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 12,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14437",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/14437",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/14437.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/14437.patch"
          },
          "closed_at": "2018-11-09T15:04:56Z",
          "created_at": "2018-10-09T03:33:36Z",
          "updated_at": "2021-12-16T13:56:42Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-09T14:48:57Z",
      "updated_at": "2018-10-09T14:48:57Z",
      "source": {
        "issue": {
          "id": 368182639,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjIxNDE3MjI0",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14443",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14443/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14443/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14443/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/14443",
          "number": 14443,
          "state": "closed",
          "state_reason": null,
          "title": "Remove redundant run time assertions for locks already checked at compile time",
          "body": "Remove redundant run time assertions (`AssertLockHeld(foo)`) for locks already checked at compile time (`EXCLUSIVE_LOCKS_REQUIRED(foo)`, `-Wthread-safety`).\r\n\r\nThe redundancy can be verified by checking that the function that contains the removed run time assertion has the corresponding compile time check.\r\n\r\nThe relevant compile time checks can be listed using:\r\n\r\n```\r\ngit grep -E -A3 '(ImplicitlyLearnRelatedKeyScripts|MaybeSetPeerAsAnnouncingHeaderAndIDs|TipMayBeStale|BlockRequestAllowed|SendRejectsAndCheckIfBanned|ConsiderEviction|IsRBFOptIn|entryToJSON|removeForReorg|GetSortedDepthAndScore|RemoveStaged|trackPackageRemoved|CheckFinalTx|TestLockPointValidity|IsCurrentForFeeEstimation|UpdateMempoolForReorg|CheckInputsFromMempoolAndCache|AcceptToMemoryPoolWorker|CheckForkWarningConditions|CheckForkWarningConditionsOnNewFork|CheckInputs|GetBlockScriptFlags|ConnectBlock|ActivateBestChainStep|InvalidateBlock|ResetBlockFailureFlags|AddToBlockIndex|AcceptBlockHeader|AcceptBlock|TestBlockValidity|InsertBlockIndex|GenerateNewKey|AddKeyPubKeyWithDB|LoadKeyMetadata|LoadScriptMetadata|UpdateTimeFirstKey|RemoveWatchOnly|HasWalletSpend|IncOrderPosNext|AvailableCoins|ListCoins|SignTransaction|ZapSelectTx|KeypoolCountExternalKeys|LoadKeyPool|GetAddressGroupings|MarkReserveKeysAsUsed|LockCoin|UnlockCoin|UnlockAllCoins|IsLockedCoin|ListLockedCoins)' | grep -B3 EXCLUSIVE_LOCKS_REQUIRED\r\n```",
          "user": {
            "login": "practicalswift",
            "id": 7826565,
            "node_id": "MDQ6VXNlcjc4MjY1NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/practicalswift",
            "html_url": "https://github.com/practicalswift",
            "followers_url": "https://api.github.com/users/practicalswift/followers",
            "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
            "organizations_url": "https://api.github.com/users/practicalswift/orgs",
            "repos_url": "https://api.github.com/users/practicalswift/repos",
            "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/practicalswift/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 3,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14443",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/14443",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/14443.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/14443.patch"
          },
          "closed_at": "2018-10-10T02:32:40Z",
          "created_at": "2018-10-09T12:21:12Z",
          "updated_at": "2022-08-16T17:17:20Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 428467415,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQyODQ2NzQxNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/428467415",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-10T07:29:51Z",
      "updated_at": "2018-10-10T07:30:41Z",
      "author_association": "MEMBER",
      "body": "Should this be closed now that https://github.com/bitcoin/bitcoin/pull/14437 has been opened?",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#issuecomment-428467415",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10973"
    },
    {
      "event": "commented",
      "id": 428471793,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQyODQ3MTc5Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/428471793",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-10T07:45:45Z",
      "updated_at": "2018-10-10T07:45:45Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Should this be closed now that #14437 has been opened?\r\n\r\nI updated the PR description above to make it obvious that review comments be added in #14437. I'd still like to keep updating this PR though. I think for example being able to see the complete [`Chain`](https://github.com/ryanofsky/bitcoin/blob/pr/wipc-sep/src/interfaces/chain.h) interface added here is useful for understanding the direction #14437 is starting to go in.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#issuecomment-428471793",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10973"
    },
    {
      "event": "reviewed",
      "id": 163653229,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTYzNjUzMjI5",
      "url": null,
      "actor": null,
      "commit_id": "45b23efaada081a7be9e255df59670f4704c45d1",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-163653229",
      "submitted_at": "2018-10-11T05:24:57Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
    },
    {
      "event": "reviewed",
      "id": 163653596,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTYzNjUzNTk2",
      "url": null,
      "actor": null,
      "commit_id": "45b23efaada081a7be9e255df59670f4704c45d1",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-163653596",
      "submitted_at": "2018-10-11T05:27:31Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
    },
    {
      "event": "reviewed",
      "id": 163653786,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTYzNjUzNzg2",
      "url": null,
      "actor": null,
      "commit_id": "45b23efaada081a7be9e255df59670f4704c45d1",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-163653786",
      "submitted_at": "2018-10-11T05:28:53Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
    },
    {
      "event": "commented",
      "id": 428827811,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQyODgyNzgxMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/428827811",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-11T05:42:49Z",
      "updated_at": "2018-10-11T05:42:49Z",
      "author_association": "MEMBER",
      "body": "@practicalswift - see note in PR description:\r\n\r\n> This PR is based on #14437, so review comments for initial commits should be posted there.\r\n\r\nI recommend you don't spend time reviewing this until #14437 is merged.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#issuecomment-428827811",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10973"
    },
    {
      "event": "mentioned",
      "id": 1897254607,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTg5NzI1NDYwNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1897254607",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-11T05:42:49Z"
    },
    {
      "event": "subscribed",
      "id": 1897254608,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE4OTcyNTQ2MDg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1897254608",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-11T05:42:49Z"
    },
    {
      "event": "commented",
      "id": 428848760,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQyODg0ODc2MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/428848760",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-11T07:22:43Z",
      "updated_at": "2018-10-11T07:22:43Z",
      "author_association": "CONTRIBUTOR",
      "body": "@jnewbery Oh, thanks!",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#issuecomment-428848760",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10973"
    },
    {
      "event": "mentioned",
      "id": 1897396131,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTg5NzM5NjEzMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1897396131",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-11T07:22:43Z"
    },
    {
      "event": "subscribed",
      "id": 1897396132,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE4OTczOTYxMzI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1897396132",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-11T07:22:43Z"
    },
    {
      "event": "reviewed",
      "id": 164676052,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY0Njc2MDUy",
      "url": null,
      "actor": null,
      "commit_id": "45b23efaada081a7be9e255df59670f4704c45d1",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-164676052",
      "submitted_at": "2018-10-15T12:16:15Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
    },
    {
      "event": "reviewed",
      "id": 164676589,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY0Njc2NTg5",
      "url": null,
      "actor": null,
      "commit_id": "45b23efaada081a7be9e255df59670f4704c45d1",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-164676589",
      "submitted_at": "2018-10-15T12:17:43Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
    },
    {
      "event": "labeled",
      "id": 1916140837,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE5MTYxNDA4Mzc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1916140837",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-20T09:53:07Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1941578041,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTk0MTU3ODA0MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1941578041",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-01T21:00:37Z"
    },
    {
      "event": "reviewed",
      "id": 166261224,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY2MjYxMjI0",
      "url": null,
      "actor": null,
      "commit_id": "45b23efaada081a7be9e255df59670f4704c45d1",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "re: https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-116397255\r\n> there are some lingering references to chainActive in wallet/test/wallet_tests.cpp\r\n\r\nMaybe some of these could be changed, but I think it's fine if test code manipulates chain state directly. Alternatives would be extending the `Chain` interface or writing a new interface to manipulate chain state, which would add complexity and overhead, or having tests create mock chain objects, which might make sense but could result in more test code and less realistic tests.\r\n\r\nre: https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-116397255\r\n> there's a forward declaration of CBlockIndex in wallet/wallet.h that doesn't look necessary anymore.\r\n\r\nThanks, removed this.\r\n\r\nre: https://github.com/bitcoin/bitcoin/pull/10973#issuecomment-390335988\r\n> Also, I'll note that the lowercasing of method names on the interfaces conflicts with the Coding Style.\r\n\r\nThanks, sipa also commented on this in https://github.com/bitcoin/bitcoin/pull/14437#issuecomment-429439919. Will try a PR to update the style.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-166261224",
      "submitted_at": "2018-11-01T21:04:41Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
    },
    {
      "event": "unlabeled",
      "id": 1941620345,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MTk0MTYyMDM0NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1941620345",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-01T21:21:19Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "referenced",
      "id": 1941626555,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE5NDE2MjY1NTU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1941626555",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "8041cd39f0979a7db5d51bd1fc83d97d311836f7",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/8041cd39f0979a7db5d51bd1fc83d97d311836f7",
      "created_at": "2018-11-01T21:24:28Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-01T21:25:57Z",
      "updated_at": "2018-11-01T21:25:57Z",
      "source": {
        "issue": {
          "id": 376577328,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjI3NzY0OTA0",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14636",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14636/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14636/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14636/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/14636",
          "number": 14636,
          "state": "closed",
          "state_reason": null,
          "title": "Avoid using numeric_limits for sequence numbers and lock times",
          "body": "Switches to named constants, because numeric_limits calls can be harder to read and less portable.\r\n\r\nChange was suggested by jamesob in https://github.com/bitcoin/bitcoin/pull/10973#discussion_r213473620\r\n\r\nThere are no changes in behavior except on some platforms we don't support (ILP64, IP16L32, I16LP32), where `SignalsOptInRBF` and `MutateTxAddInput` functions would now work correctly.",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/35",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/35",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/35/labels",
            "id": 3318051,
            "node_id": "MDk6TWlsZXN0b25lMzMxODA1MQ==",
            "number": 35,
            "state": "closed",
            "title": "0.18.0",
            "description": "",
            "creator": {
              "login": "MarcoFalke",
              "id": 6399679,
              "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
              "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/MarcoFalke",
              "html_url": "https://github.com/MarcoFalke",
              "followers_url": "https://api.github.com/users/MarcoFalke/followers",
              "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
              "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
              "repos_url": "https://api.github.com/users/MarcoFalke/repos",
              "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 186,
            "created_at": "2018-05-03T15:34:54Z",
            "updated_at": "2020-03-17T18:30:07Z",
            "closed_at": "2019-05-03T02:51:38Z"
          },
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 11,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14636",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/14636",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/14636.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/14636.patch"
          },
          "closed_at": "2018-11-07T16:18:06Z",
          "created_at": "2018-11-01T21:25:57Z",
          "updated_at": "2021-09-08T11:59:19Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 1945942006,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE5NDU5NDIwMDY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1945942006",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-05T11:17:57Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "referenced",
      "id": 1947204544,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE5NDcyMDQ1NDQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1947204544",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "90a9e728070c9dd6e236b036cc25ab9ff477f096",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/90a9e728070c9dd6e236b036cc25ab9ff477f096",
      "created_at": "2018-11-05T19:50:56Z"
    },
    {
      "event": "referenced",
      "id": 1947569818,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE5NDc1Njk4MTg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1947569818",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "535203075e50eedef8f00852328f81f440233278",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/535203075e50eedef8f00852328f81f440233278",
      "created_at": "2018-11-05T22:41:41Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1949837697,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTk0OTgzNzY5Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1949837697",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-06T19:08:12Z"
    },
    {
      "event": "unlabeled",
      "id": 1949920023,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MTk0OTkyMDAyMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1949920023",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-06T19:42:56Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "referenced",
      "id": 1952062738,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE5NTIwNjI3Mzg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1952062738",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "e8d490f27e691d8e5f6910f878c4f1c3c6ad788d",
      "commit_url": "https://api.github.com/repos/MarcoFalke/b-c/commits/e8d490f27e691d8e5f6910f878c4f1c3c6ad788d",
      "created_at": "2018-11-07T16:17:35Z"
    },
    {
      "event": "referenced",
      "id": 1952416886,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE5NTI0MTY4ODY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1952416886",
      "actor": {
        "login": "HashUnlimited",
        "id": 26601261,
        "node_id": "MDQ6VXNlcjI2NjAxMjYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/26601261?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/HashUnlimited",
        "html_url": "https://github.com/HashUnlimited",
        "followers_url": "https://api.github.com/users/HashUnlimited/followers",
        "following_url": "https://api.github.com/users/HashUnlimited/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/HashUnlimited/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/HashUnlimited/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/HashUnlimited/subscriptions",
        "organizations_url": "https://api.github.com/users/HashUnlimited/orgs",
        "repos_url": "https://api.github.com/users/HashUnlimited/repos",
        "events_url": "https://api.github.com/users/HashUnlimited/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/HashUnlimited/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "e1ed1eb7d12cd46d3bec573314d1ad9726ee109c",
      "commit_url": "https://api.github.com/repos/chainworksindustries/ozc-0.17.99.0-hu/commits/e1ed1eb7d12cd46d3bec573314d1ad9726ee109c",
      "created_at": "2018-11-07T18:38:18Z"
    },
    {
      "event": "referenced",
      "id": 1957062521,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE5NTcwNjI1MjE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1957062521",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "cbf00939b5e813937fb21466aa3e229ca81cb6ba",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cbf00939b5e813937fb21466aa3e229ca81cb6ba",
      "created_at": "2018-11-09T15:05:11Z"
    },
    {
      "event": "reviewed",
      "id": 173535511,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTczNTM1NTEx",
      "url": null,
      "actor": null,
      "commit_id": "158ec814077c80bcc29e019f51af566504df1395",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-173535511",
      "submitted_at": "2018-11-09T18:32:19Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
    },
    {
      "event": "commented",
      "id": 437661545,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQzNzY2MTU0NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/437661545",
      "actor": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-11T11:16:58Z",
      "updated_at": "2018-11-11T11:16:58Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK, will this PR be rebased and ready for review now #14437 has been merged, or will you make another smaller PR for the next steps and leave this just to track overall?",
      "user": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#issuecomment-437661545",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10973"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1961110259,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTk2MTExMDI1OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1961110259",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-12T18:55:36Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-12T19:35:40Z",
      "updated_at": "2018-11-12T19:35:40Z",
      "source": {
        "issue": {
          "id": 379922223,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjMwMjQ1MTc4",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14711",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14711/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14711/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14711/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/14711",
          "number": 14711,
          "state": "closed",
          "state_reason": null,
          "title": "Remove uses of chainActive and mapBlockIndex in wallet code",
          "body": "This change removes uses of `chainActive` and `mapBlockIndex` globals in wallet code. It is a refactoring change which does not affect external behavior.\r\n\r\nThis is the next step in the larger #10973 refactoring change, which removes all other accesses to node global variables from wallet code. Doing this is useful to provide a better defined interface between the wallet and node, and necessary to allow wallet and node code to run in separate processes in #10102.",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/35",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/35",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/35/labels",
            "id": 3318051,
            "node_id": "MDk6TWlsZXN0b25lMzMxODA1MQ==",
            "number": 35,
            "state": "closed",
            "title": "0.18.0",
            "description": "",
            "creator": {
              "login": "MarcoFalke",
              "id": 6399679,
              "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
              "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/MarcoFalke",
              "html_url": "https://github.com/MarcoFalke",
              "followers_url": "https://api.github.com/users/MarcoFalke/followers",
              "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
              "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
              "repos_url": "https://api.github.com/users/MarcoFalke/repos",
              "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 186,
            "created_at": "2018-05-03T15:34:54Z",
            "updated_at": "2020-03-17T18:30:07Z",
            "closed_at": "2019-05-03T02:51:38Z"
          },
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 18,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14711",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/14711",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/14711.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/14711.patch"
          },
          "closed_at": "2019-01-30T00:04:22Z",
          "created_at": "2018-11-12T19:35:40Z",
          "updated_at": "2021-12-16T13:56:41Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 174038212,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTc0MDM4MjEy",
      "url": null,
      "actor": null,
      "commit_id": "158ec814077c80bcc29e019f51af566504df1395",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "> will this PR be rebased and ready for review now #14437 has been merged, or will you make another smaller PR for the next steps and leave this just to track overall?\r\n\r\nI made a new PR #14711 containing the first commit from this PR, but I'm also maintaining this.\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-174038212",
      "submitted_at": "2018-11-12T19:43:50Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
    },
    {
      "event": "labeled",
      "id": 1963749925,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE5NjM3NDk5MjU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1963749925",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-13T17:42:09Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 174499665,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTc0NDk5NjY1",
      "url": null,
      "actor": null,
      "commit_id": "3a2668b7bb63f26ee17873a83eaf5b4e97820f56",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "",
      "user": {
        "login": "peepeemlove",
        "id": 43833026,
        "node_id": "MDQ6VXNlcjQzODMzMDI2",
        "avatar_url": "https://avatars.githubusercontent.com/u/43833026?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/peepeemlove",
        "html_url": "https://github.com/peepeemlove",
        "followers_url": "https://api.github.com/users/peepeemlove/followers",
        "following_url": "https://api.github.com/users/peepeemlove/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/peepeemlove/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/peepeemlove/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/peepeemlove/subscriptions",
        "organizations_url": "https://api.github.com/users/peepeemlove/orgs",
        "repos_url": "https://api.github.com/users/peepeemlove/repos",
        "events_url": "https://api.github.com/users/peepeemlove/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/peepeemlove/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-174499665",
      "submitted_at": "2018-11-13T17:44:10Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
    },
    {
      "event": "referenced",
      "id": 1966096389,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE5NjYwOTYzODk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1966096389",
      "actor": {
        "login": "jfhk",
        "id": 27950989,
        "node_id": "MDQ6VXNlcjI3OTUwOTg5",
        "avatar_url": "https://avatars.githubusercontent.com/u/27950989?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jfhk",
        "html_url": "https://github.com/jfhk",
        "followers_url": "https://api.github.com/users/jfhk/followers",
        "following_url": "https://api.github.com/users/jfhk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jfhk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jfhk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jfhk/subscriptions",
        "organizations_url": "https://api.github.com/users/jfhk/orgs",
        "repos_url": "https://api.github.com/users/jfhk/repos",
        "events_url": "https://api.github.com/users/jfhk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jfhk/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "af421299e2ceb6cc93657e03f8800b13d7ed2c1c",
      "commit_url": "https://api.github.com/repos/jfhk/bitcoin/commits/af421299e2ceb6cc93657e03f8800b13d7ed2c1c",
      "created_at": "2018-11-14T15:00:02Z"
    },
    {
      "event": "referenced",
      "id": 1985157439,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE5ODUxNTc0Mzk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1985157439",
      "actor": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "b03e4e75d63f748219cc109c0c7028bcb3a5d1d4",
      "commit_url": "https://api.github.com/repos/JeremyRubin/bitcoin/commits/b03e4e75d63f748219cc109c0c7028bcb3a5d1d4",
      "created_at": "2018-11-24T22:05:23Z"
    },
    {
      "event": "referenced",
      "id": 1986772971,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE5ODY3NzI5NzE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1986772971",
      "actor": {
        "login": "HashUnlimited",
        "id": 26601261,
        "node_id": "MDQ6VXNlcjI2NjAxMjYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/26601261?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/HashUnlimited",
        "html_url": "https://github.com/HashUnlimited",
        "followers_url": "https://api.github.com/users/HashUnlimited/followers",
        "following_url": "https://api.github.com/users/HashUnlimited/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/HashUnlimited/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/HashUnlimited/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/HashUnlimited/subscriptions",
        "organizations_url": "https://api.github.com/users/HashUnlimited/orgs",
        "repos_url": "https://api.github.com/users/HashUnlimited/repos",
        "events_url": "https://api.github.com/users/HashUnlimited/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/HashUnlimited/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "992d4c03ca095d5f09bbf3aa433ae7e11fcd560c",
      "commit_url": "https://api.github.com/repos/HashUnlimited/chaincoin/commits/992d4c03ca095d5f09bbf3aa433ae7e11fcd560c",
      "created_at": "2018-11-26T13:34:00Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1987469119,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTk4NzQ2OTExOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1987469119",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-26T17:49:14Z"
    },
    {
      "event": "unlabeled",
      "id": 1987477253,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MTk4NzQ3NzI1Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1987477253",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-26T17:52:47Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 1998376594,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE5OTgzNzY1OTQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1998376594",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-30T16:31:08Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2010777055,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjAxMDc3NzA1NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2010777055",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-12-06T19:43:18Z"
    },
    {
      "event": "unlabeled",
      "id": 2010824604,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MjAxMDgyNDYwNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2010824604",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-12-06T20:04:23Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 2020578872,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDIwMjA1Nzg4NzI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2020578872",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-12-12T05:36:37Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 185364010,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTg1MzY0MDEw",
      "url": null,
      "actor": null,
      "commit_id": "7e498129c701b5daf4cd55be70131a8852c7c70b",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "",
      "user": {
        "login": "peepeemlove",
        "id": 43833026,
        "node_id": "MDQ6VXNlcjQzODMzMDI2",
        "avatar_url": "https://avatars.githubusercontent.com/u/43833026?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/peepeemlove",
        "html_url": "https://github.com/peepeemlove",
        "followers_url": "https://api.github.com/users/peepeemlove/followers",
        "following_url": "https://api.github.com/users/peepeemlove/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/peepeemlove/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/peepeemlove/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/peepeemlove/subscriptions",
        "organizations_url": "https://api.github.com/users/peepeemlove/orgs",
        "repos_url": "https://api.github.com/users/peepeemlove/repos",
        "events_url": "https://api.github.com/users/peepeemlove/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/peepeemlove/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-185364010",
      "submitted_at": "2018-12-15T19:09:23Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2031504098,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjAzMTUwNDA5OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2031504098",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-12-17T22:04:38Z"
    },
    {
      "event": "unlabeled",
      "id": 2031568947,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MjAzMTU2ODk0Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2031568947",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-12-17T22:37:12Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 2031895502,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDIwMzE4OTU1MDI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2031895502",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-12-18T02:48:03Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2033728202,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjAzMzcyODIwMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2033728202",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-12-18T18:15:58Z"
    },
    {
      "event": "unlabeled",
      "id": 2033749630,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MjAzMzc0OTYzMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2033749630",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-12-18T18:25:35Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-12-18T20:57:11Z",
      "updated_at": "2018-12-18T20:57:11Z",
      "source": {
        "issue": {
          "id": 390453938,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjM4MjE3NzU1",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14941",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14941/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14941/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14941/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/14941",
          "number": 14941,
          "state": "closed",
          "state_reason": null,
          "title": "rpc: Make unloadwallet wait for complete wallet unload",
          "body": "Currently the `unloadwallet` RPC is asynchronous, it only signals the intent to unload the wallet and then returns the response to the client. The actual unload can happen later and the client has no way to be notified of that.\r\n\r\nThis PR makes the `unloadwallet` RPC synchronous, meaning that it blocks until the wallet is fully unloaded.\r\n\r\nReplaces #14919, fixes #14917.",
          "user": {
            "login": "promag",
            "id": 3534524,
            "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/promag",
            "html_url": "https://github.com/promag",
            "followers_url": "https://api.github.com/users/promag/followers",
            "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
            "organizations_url": "https://api.github.com/users/promag/orgs",
            "repos_url": "https://api.github.com/users/promag/repos",
            "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/promag/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/40",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/40",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/40/labels",
            "id": 3861609,
            "node_id": "MDk6TWlsZXN0b25lMzg2MTYwOQ==",
            "number": 40,
            "state": "closed",
            "title": "0.17.2",
            "description": "",
            "creator": {
              "login": "MarcoFalke",
              "id": 6399679,
              "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
              "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/MarcoFalke",
              "html_url": "https://github.com/MarcoFalke",
              "followers_url": "https://api.github.com/users/MarcoFalke/followers",
              "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
              "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
              "repos_url": "https://api.github.com/users/MarcoFalke/repos",
              "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 36,
            "created_at": "2018-11-30T15:58:18Z",
            "updated_at": "2020-07-08T15:05:12Z",
            "closed_at": "2020-07-08T15:05:12Z"
          },
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 15,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14941",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/14941",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/14941.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/14941.patch"
          },
          "closed_at": "2019-01-15T13:39:18Z",
          "created_at": "2018-12-12T23:31:13Z",
          "updated_at": "2021-12-16T14:50:24Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 2066152844,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDIwNjYxNTI4NDQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2066152844",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-10T15:21:20Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2066485344,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjA2NjQ4NTM0NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2066485344",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-10T17:20:29Z"
    },
    {
      "event": "unlabeled",
      "id": 2066505737,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MjA2NjUwNTczNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2066505737",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-10T17:28:44Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 2074694983,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDIwNzQ2OTQ5ODM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2074694983",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-15T14:17:30Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2092829143,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjA5MjgyOTE0Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2092829143",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-23T21:02:31Z"
    },
    {
      "event": "unlabeled",
      "id": 2092902971,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MjA5MjkwMjk3MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2092902971",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-23T21:36:05Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "referenced",
      "id": 2105188500,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDIxMDUxODg1MDA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2105188500",
      "actor": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "72ca72e6370e4fabb40510f80c00b8863322aa50",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/72ca72e6370e4fabb40510f80c00b8863322aa50",
      "created_at": "2019-01-30T00:04:37Z"
    },
    {
      "event": "labeled",
      "id": 2105266598,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDIxMDUyNjY1OTg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2105266598",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-30T01:03:56Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-30T02:48:27Z",
      "updated_at": "2019-01-30T02:48:27Z",
      "source": {
        "issue": {
          "id": 404577603,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjQ4NzI3NjAz",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15288",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15288/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15288/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15288/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/15288",
          "number": 15288,
          "state": "closed",
          "state_reason": null,
          "title": "Remove wallet -> node global function calls",
          "body": "This change removes wallet calls to node functions that access global chain and mempool state.\r\n\r\nThis is the next step in the larger #10973 refactoring change, which removes all other accesses to node global variables from wallet code. Doing this is useful to provide a better defined interface between the wallet and node, and necessary to allow wallet and node code to run in separate processes in #10102.",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "comments": 19,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15288",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/15288",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/15288.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/15288.patch"
          },
          "closed_at": "2019-03-04T18:15:24Z",
          "created_at": "2019-01-30T02:48:27Z",
          "updated_at": "2022-11-08T17:34:58Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2105407389,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjEwNTQwNzM4OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2105407389",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-30T02:54:52Z"
    },
    {
      "event": "unlabeled",
      "id": 2105422796,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MjEwNTQyMjc5Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2105422796",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-30T03:08:17Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-31T09:37:57Z",
      "updated_at": "2019-01-31T09:37:57Z",
      "source": {
        "issue": {
          "id": 391539515,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjM5MDEzNjIx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14978",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14978/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14978/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14978/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/14978",
          "number": 14978,
          "state": "closed",
          "state_reason": null,
          "title": "Factor out PSBT utilities from RPCs for use in GUI code; related refactoring.",
          "body": "* Move most PSBT definitions into psbt.h.\r\n* Move most PSBT RPC utilities into psbt.{h,cpp}.\r\n* Move wallet-touching PSBT RPC utilities (FillPSBT) into\r\n    wallet/psbtwallet.{h,cpp}.\r\n* Switch exceptions from JSONRPCError() to new PSBTException class.\r\n* Split DecodePSBT into DecodeBase64PSBT (old behavior) and DecodeRawPSBT.\r\n* Add one new version of DecodeBase64 utility in strencodings.h (and\r\n    corresponding DecodeBase32 for completeness).\r\n* Factor BroadcastTransaction utility function out of sendrawtransaction RPC\r\n    handler in rpc/rawtransaction.cpp\r\n\r\nNote: For those keeping score at home wondering why refactor, this is in anticipation of (and developed in parallel with) a change to actually introduce GUI use of all this stuff, which is already under development and working-ish.\r\n",
          "user": {
            "login": "gwillen",
            "id": 458997,
            "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gwillen",
            "html_url": "https://github.com/gwillen",
            "followers_url": "https://api.github.com/users/gwillen/followers",
            "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
            "organizations_url": "https://api.github.com/users/gwillen/orgs",
            "repos_url": "https://api.github.com/users/gwillen/repos",
            "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/gwillen/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 38,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14978",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/14978",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/14978.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/14978.patch"
          },
          "closed_at": "2019-02-14T08:49:44Z",
          "created_at": "2018-12-17T02:52:20Z",
          "updated_at": "2021-12-16T14:50:51Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 2129370401,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDIxMjkzNzA0MDE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2129370401",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-10T19:34:09Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2131715146,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjEzMTcxNTE0Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2131715146",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-11T20:35:03Z"
    },
    {
      "event": "unlabeled",
      "id": 2131854308,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MjEzMTg1NDMwOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2131854308",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-11T21:34:39Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 2141209182,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDIxNDEyMDkxODI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2141209182",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-15T00:05:30Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-02T16:54:46Z",
      "updated_at": "2019-03-02T16:54:46Z",
      "source": {
        "issue": {
          "id": 416398544,
          "node_id": "MDU6SXNzdWU0MTYzOTg1NDQ=",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15515",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15515/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15515/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15515/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/15515",
          "number": 15515,
          "state": "closed",
          "state_reason": "completed",
          "title": "Why Bitcoin Core is a monolith?",
          "body": "I don't understand why Bitcoin Core software was designed as a monolith and not as a microservices architecture.\r\n\r\nNow the node, the gui, the cli, the wallet are all in one. \r\n\r\nFor example, some people don't need the GUI, others don't need the CLI, or others don't need the wallet.\r\n\r\nFor example, some people can install a cli, set the node, and use it remotely, or some people can be take a wallet with a remote node.\r\n\r\nSo my question is, Why the core team deceided a monolith architecture? I don't find any reasonable fact for do this.\r\n",
          "user": {
            "login": "CodersBrothers",
            "id": 2166523,
            "node_id": "MDQ6VXNlcjIxNjY1MjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2166523?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/CodersBrothers",
            "html_url": "https://github.com/CodersBrothers",
            "followers_url": "https://api.github.com/users/CodersBrothers/followers",
            "following_url": "https://api.github.com/users/CodersBrothers/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/CodersBrothers/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/CodersBrothers/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/CodersBrothers/subscriptions",
            "organizations_url": "https://api.github.com/users/CodersBrothers/orgs",
            "repos_url": "https://api.github.com/users/CodersBrothers/repos",
            "events_url": "https://api.github.com/users/CodersBrothers/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/CodersBrothers/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 477890092,
              "node_id": "MDU6TGFiZWw0Nzc4OTAwOTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Questions%20and%20Help",
              "name": "Questions and Help",
              "color": "006688",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "NONE",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 3,
          "closed_at": "2019-03-04T02:53:33Z",
          "created_at": "2019-03-02T13:42:03Z",
          "updated_at": "2021-12-16T14:51:43Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 2178702894,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDIxNzg3MDI4OTQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2178702894",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "45f434f44d0b55d137eaebb8c0486f9cebabc869",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/45f434f44d0b55d137eaebb8c0486f9cebabc869",
      "created_at": "2019-03-04T18:15:32Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2179155727,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjE3OTE1NTcyNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2179155727",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-04T21:24:13Z"
    },
    {
      "event": "unlabeled",
      "id": 2179298690,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MjE3OTI5ODY5MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2179298690",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-04T22:24:59Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MTg2OGU2Mjg4YWJmOWQxMzM2MjBiNTg1YmM2ZGU3OTNhMTFlMGUz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/91868e6288abf9d133620b585bc6de793a11e0e3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/91868e6288abf9d133620b585bc6de793a11e0e3",
      "tree": {
        "sha": "19fd82b1cfacf752ea4802b6ae4c0dfda9a94c2e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/19fd82b1cfacf752ea4802b6ae4c0dfda9a94c2e"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d8a62db8bf68896397f175e1d7d52b7be5021985",
          "sha": "d8a62db8bf68896397f175e1d7d52b7be5021985",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d8a62db8bf68896397f175e1d7d52b7be5021985"
        }
      ],
      "message": "Remove use CValidationInterface in wallet code\n\nThis commit does not change behavior.",
      "committer": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2019-03-05T14:20:00Z"
      },
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2017-07-30T20:00:56Z"
      },
      "sha": "91868e6288abf9d133620b585bc6de793a11e0e3"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZTRkOWU5Zjg1ZWFmOWMzYmVjNDg1NTliZDRjYWQzZThhOTMzM2Nh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4e4d9e9f85eaf9c3bec48559bd4cad3e8a9333ca",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4e4d9e9f85eaf9c3bec48559bd4cad3e8a9333ca",
      "tree": {
        "sha": "32ed7d798e1feaa8e1490d403f4d83760cddcd04",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/32ed7d798e1feaa8e1490d403f4d83760cddcd04"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/91868e6288abf9d133620b585bc6de793a11e0e3",
          "sha": "91868e6288abf9d133620b585bc6de793a11e0e3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/91868e6288abf9d133620b585bc6de793a11e0e3"
        }
      ],
      "message": "Remove use of CRPCTable::appendCommand in wallet code\n\nThis commit does not change behavior.",
      "committer": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2019-03-05T14:20:00Z"
      },
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2017-07-31T15:46:13Z"
      },
      "sha": "4e4d9e9f85eaf9c3bec48559bd4cad3e8a9333ca"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMWIyYjIzODkyOGU3YmUwNDRhZDYyY2YxYjIyMjQ2NDkwN2VjZTJj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b1b2b238928e7be044ad62cf1b222464907ece2c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b1b2b238928e7be044ad62cf1b222464907ece2c",
      "tree": {
        "sha": "50767a07bf5bdca1b6b4e2de761e90957febfaf0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/50767a07bf5bdca1b6b4e2de761e90957febfaf0"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4e4d9e9f85eaf9c3bec48559bd4cad3e8a9333ca",
          "sha": "4e4d9e9f85eaf9c3bec48559bd4cad3e8a9333ca",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4e4d9e9f85eaf9c3bec48559bd4cad3e8a9333ca"
        }
      ],
      "message": "Remove use of CCoinsViewMemPool::GetCoin in wallet code\n\nThis commit does not change behavior.",
      "committer": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2019-03-05T14:20:00Z"
      },
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2018-07-17T17:04:35Z"
      },
      "sha": "b1b2b238928e7be044ad62cf1b222464907ece2c"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2181169579,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjE4MTE2OTU3OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2181169579",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-05T14:42:22Z"
    },
    {
      "event": "comment_deleted",
      "id": 2185032989,
      "node_id": "MDE5OkNvbW1lbnREZWxldGVkRXZlbnQyMTg1MDMyOTg5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2185032989",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-06T18:39:28Z"
    },
    {
      "event": "commented",
      "id": 470235111,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MDIzNTExMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/470235111",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-06T19:07:38Z",
      "updated_at": "2019-03-21T03:04:04Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15606](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15606.html) ([experimental] UTXO snapshots by jamesob)\n* [#15557](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15557.html) (Enhance `bumpfee` to include inputs when targeting a feerate by instagibbs)\n* [#15329](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15329.html) (Fix InitError() and InitWarning() content by hebasto)\n* [#15157](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15157.html) (rpc: Bumpfee units change, satoshis to BTC by benthecarman)\n* [#14942](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14942.html) (wallet: Make scan / abort status private to CWallet by Empact)\n* [#14912](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14912.html) ([WIP] External signer support (e.g. hardware wallet) by Sjors)\n* [#14053](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14053.html) (Add address-based index (attempt 4?) by marcinja)\n* [#13804](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/13804.html) (WIP: Transaction Pool Layer by MarcoFalke)\n* [#12911](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/12911.html) (wallet: Show fee in results for signrawtransaction* for segwit inputs by kallewoof)\n* [#12096](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/12096.html) ([rpc] [wallet] Allow specifying the output index when using bumpfee by kallewoof)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#issuecomment-470235111",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10973"
    },
    {
      "event": "commented",
      "id": 470238555,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MDIzODU1NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/470238555",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-06T19:16:50Z",
      "updated_at": "2019-03-06T19:16:50Z",
      "author_association": "MEMBER",
      "body": "utACK 6898f53760",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#issuecomment-470238555",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10973"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMzU4NDY2ZGUxNWVmMjljMWQyYmNjYjlhZWJhYjM2MGQ1NzRkMWQw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "tree": {
        "sha": "731dd3ff9701381826ca0d0e3598f2de488b812b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/731dd3ff9701381826ca0d0e3598f2de488b812b"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b1b2b238928e7be044ad62cf1b222464907ece2c",
          "sha": "b1b2b238928e7be044ad62cf1b222464907ece2c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b1b2b238928e7be044ad62cf1b222464907ece2c"
        }
      ],
      "message": "Remove remaining wallet accesses to node globals",
      "committer": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2019-03-06T21:47:57Z"
      },
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2019-03-06T21:47:57Z"
      },
      "sha": "d358466de15ef29c1d2bccb9aebab360d574d1d0"
    },
    {
      "event": "added_to_project",
      "id": 2185793749,
      "node_id": "MDE5OkFkZGVkVG9Qcm9qZWN0RXZlbnQyMTg1NzkzNzQ5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2185793749",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-07T00:30:07Z",
      "project_card": {
        "id": 18418567,
        "url": "https://api.github.com/projects/columns/cards/18418567",
        "project_id": 481835,
        "project_url": "https://api.github.com/projects/481835",
        "column_name": "Blockers"
      }
    },
    {
      "event": "reviewed",
      "id": 212761964,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjEyNzYxOTY0",
      "url": null,
      "actor": null,
      "commit_id": "6898f5376071dcd84ce4aea980e170b4953c18bb",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Looks good, as @jnewbery points out, a bit hard to review, but I think it's worth the effort. Sorry for these nits, feel free to ignore them.\r\n\r\n> After this PR, wallet code no longer accesses global variables declared outside the wallet directory, and no longer calls functions accessing those globals (as verified by the hide-globals script in #10244).\r\n\r\nDo you think this should be committed and verified in CI?",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-212761964",
      "submitted_at": "2019-03-11T11:40:53Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2195620427,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjE5NTYyMDQyNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2195620427",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-12T00:05:58Z"
    },
    {
      "event": "reviewed",
      "id": 213000398,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjEzMDAwMzk4",
      "url": null,
      "actor": null,
      "commit_id": "53a730ab0c37354db1333f436761fb81f94e3657",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for reviews!\r\n\r\nUpdated 6898f5376071dcd84ce4aea980e170b4953c18bb -> 244edfe470d8b6a4c449649952bb2130e0d10bd5 ([pr/wipc-sep.97](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.97) -> [pr/wipc-sep.98](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.98), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/wipc-sep.97..pr/wipc-sep.98)).\r\n\r\n* Main change is adding a new commit \"Remove remaining wallet accesses to node globals\" (244edfe470d8b6a4c449649952bb2130e0d10bd5).\r\n* Commit \"Remove use CValidationInterface in wallet code\" (5c7f4118ef82248f50ff112828638e0a99247cd9, formerly fce0e3cfd1a8616e1c2c05052af277ae8cd7a574) is simplified to remove workaround for UnregisterValidationInterface crash fixed by 2196c51821e340c9a9d2c76c30f9402370f84994 in #13743.\r\n* Commit \"Remove use of CRPCTable::appendCommand in wallet code\" (a15a7bf8093c9841aed2e51a6655fc5be5b7d783, formerly 53a730ab0c37354db1333f436761fb81f94e3657) is unchanged except for a code comment.\r\n* Commit \"Remove use of CCoinsViewMemPool::GetCoin in wallet code\" (9863ddc7dbec47d57967544979f694e740d83916 formerly 6898f5376071dcd84ce4aea980e170b4953c18bb) has been simplified by replacing a custom `CCoinsView` subclass with a plain `std::map`.\r\n\r\nre: https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-212761964\r\n\r\n> > After this PR, wallet code no longer accesses global variables declared outside the wallet directory, and no longer calls functions accessing those globals (as verified by the hide-globals script in #10244).\r\n\r\n> Do you think this should be committed and verified in CI?\r\n\r\nI'd like to verify this, but not with a script, since it would be awkward to set up and maintain. Instead, I'd like to just add a new `libbitcoin_node.a` library, analogous to the existing `libbitcoin_wallet.a` library, and move symbol definitions like `cs_main` `pcoinsTip` `chainActive` there that wallet and gui code shouldn't access. That way any bad references will just result in link errors while building `bitcoin-wallet` and `bitcoin-gui` executables.\r\n\r\nSince we have src/node/ src/wallet/ and src/qt/ folders we could also set up rules preventing source files in one of these folders including headers in the other folders. This would provide the clearest separation, but would also require moving a bunch of code around, so would not be a short-term goal.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-213000398",
      "submitted_at": "2019-03-12T00:55:03Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2195696458,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjE5NTY5NjQ1OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2195696458",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-12T01:01:42Z"
    },
    {
      "event": "commented",
      "id": 471803386,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MTgwMzM4Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/471803386",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-12T01:02:32Z",
      "updated_at": "2019-03-12T01:02:32Z",
      "author_association": "CONTRIBUTOR",
      "body": "Updated 244edfe470d8b6a4c449649952bb2130e0d10bd5 -> 591434b72c3b0ec218fbe30969ae5a819ca224c4 ([pr/wipc-sep.98](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.98) -> [pr/wipc-sep.99](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.99), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/wipc-sep.98..pr/wipc-sep.99)) to fix travis error with old boost.\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#issuecomment-471803386",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10973"
    },
    {
      "event": "commented",
      "id": 472069472,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MjA2OTQ3Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/472069472",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-12T16:15:33Z",
      "updated_at": "2019-03-12T16:15:33Z",
      "author_association": "MEMBER",
      "body": "nit: In commit  591434b\r\n\r\nCould also update the TODO comment for `GetAvailableCredit` and remove the `cs_main` from it?",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#issuecomment-472069472",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10973"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2198009452,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjE5ODAwOTQ1Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2198009452",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-12T17:59:36Z"
    },
    {
      "event": "commented",
      "id": 472115030,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MjExNTAzMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/472115030",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-12T18:01:08Z",
      "updated_at": "2019-03-12T18:01:08Z",
      "author_association": "CONTRIBUTOR",
      "body": "Updated 591434b72c3b0ec218fbe30969ae5a819ca224c4 -> b7c78217ca7aa861b58fddcfdb82a09ca56f8023 ([pr/wipc-sep.99](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.99) -> [pr/wipc-sep.100](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.100), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/wipc-sep.99..pr/wipc-sep.100)) with Marco's GetAvailableCredit suggestion from https://github.com/bitcoin/bitcoin/pull/10973#issuecomment-472069472\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#issuecomment-472115030",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10973"
    },
    {
      "event": "commented",
      "id": 473724089,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MzcyNDA4OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/473724089",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-17T22:58:28Z",
      "updated_at": "2019-03-17T22:58:28Z",
      "author_association": "MEMBER",
      "body": "> Instead, I'd like to just add a new `libbitcoin_node.a` library, analogous to the existing `libbitcoin_wallet.a` library, and move symbol definitions like `cs_main` `pcoinsTip` `chainActive` there that wallet and gui code shouldn't access.\r\n\r\nNice!",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#issuecomment-473724089",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10973"
    },
    {
      "event": "reviewed",
      "id": 215654868,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjE1NjU0ODY4",
      "url": null,
      "actor": null,
      "commit_id": "b7c78217ca7aa861b58fddcfdb82a09ca56f8023",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "I've reviewed 5c7f4118ef82248f50ff112828638e0a99247cd9 (_Remove use CValidationInterface in wallet code_) and it looks good so far! A few comments inline.\r\n\r\nIncidentally, this github PR is pretty unwieldly - the notes are very long, and without reading through them all it's difficult to tell which comments are for the overall approach and which are for the commits under review now. I don't know if's worth it at this point, but it might be clearer to open one final PR for the last commits, and close this or leave it as the overarching PR.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-215654868",
      "submitted_at": "2019-03-18T15:51:24Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2211140400,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjIxMTE0MDQwMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2211140400",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-18T17:19:19Z"
    },
    {
      "event": "reviewed",
      "id": 215723029,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjE1NzIzMDI5",
      "url": null,
      "actor": null,
      "commit_id": "5c7f4118ef82248f50ff112828638e0a99247cd9",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Updated b7c78217ca7aa861b58fddcfdb82a09ca56f8023 -> 1a1036a5b3bc48715a5f3955e87203287c37210a ([pr/wipc-sep.100](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.100) -> [pr/wipc-sep.101](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.101), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/wipc-sep.100..pr/wipc-sep.101)) with suggestions from https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-215654868.\r\n\r\n> Incidentally, this github PR is pretty unwieldly\r\n\r\nA downside of making a new PR is that comments that show up in the diffs will be gone. I think the diff comments are probably more useful than other historical comments which appear above, which I think no one will look at unless they are counting acks. (And if anyone is counting ACKs, there is only one so far from Marco in https://github.com/bitcoin/bitcoin/pull/10973#issuecomment-470238555 ([pr/wipc-sep.97](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.97)) before some recent cleanups.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-215723029",
      "submitted_at": "2019-03-18T17:46:56Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-18T18:19:14Z",
      "updated_at": "2019-03-18T18:19:14Z",
      "source": {
        "issue": {
          "id": 422357484,
          "node_id": "MDU6SXNzdWU0MjIzNTc0ODQ=",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15619",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15619/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15619/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15619/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/15619",
          "number": 15619,
          "state": "closed",
          "state_reason": "completed",
          "title": "Remove `Broadcast`/`ResendWalletTransactions` from validation interface",
          "body": "The `Broadcast`/`ResendWalletTransactions` interface is strange:\r\n\r\n- it's the node saying to the wallet \"Try to submit your unconfirmed transactions to the mempool again\"\r\n- it's called in one place by the node, in `SendMessages()` here: https://github.com/bitcoin/bitcoin/blob/c033c4b5cef89a654e4d9d5c5f9bd823871b068b/src/net_processing.cpp#L3515. `SendMessages()` is called on the message handling thread on a loop.\r\n- the actual scheduling of when the wallet sends messages is handled in the `ResendWalletTransactions()` function itself, using the `nNextResend` and `nLastResend` wallet globals (which could as easily be static variables in `ResendWalletTransactions()`).\r\n\r\nTherefore the only use of `Broadcast()` is to periodically prod the wallet. The wallet itself decides whether it's time to resend transactions. This could be done by scheduling regular calls to `ResendWalletTransactions()`, in the same way that we schedule regular wallet flushes here: https://github.com/bitcoin/bitcoin/blob/c033c4b5cef89a654e4d9d5c5f9bd823871b068b/src/wallet/init.cpp#L215.\r\n\r\nA couple of minor implementation details:\r\n\r\n- the call to `Broadcast()` in `SendMessages()` is protected by an if statement `if (!fReindex && !fImporting && !IsInitialBlockDownload()) {`. Those tests could be moved into `ResendWalletTransactions()` (through the `Chain` interface).\r\n- The `Broadcast` notification passes in the `nTimeBestReceived` time of the best block. That could be fetched by `ResendWalletTransactions()` through the `Chain` interface.",
          "user": {
            "login": "jnewbery",
            "id": 1063656,
            "node_id": "MDQ6VXNlcjEwNjM2NTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jnewbery",
            "html_url": "https://github.com/jnewbery",
            "followers_url": "https://api.github.com/users/jnewbery/followers",
            "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
            "organizations_url": "https://api.github.com/users/jnewbery/orgs",
            "repos_url": "https://api.github.com/users/jnewbery/repos",
            "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jnewbery/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64584,
              "node_id": "MDU6TGFiZWw2NDU4NA==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Brainstorming",
              "name": "Brainstorming",
              "color": "ebd775",
              "default": false
            },
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 6,
          "closed_at": "2019-04-09T21:54:47Z",
          "created_at": "2019-03-18T17:58:16Z",
          "updated_at": "2021-12-16T15:10:10Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 215797861,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjE1Nzk3ODYx",
      "url": null,
      "actor": null,
      "commit_id": "0ca5446db3cda7f911e911a094482311f6a71221",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "utACK https://github.com/bitcoin/bitcoin/commit/1a1036a5b3bc48715a5f3955e87203287c37210a\r\n\r\nChanges look fine to me - feel free the ignore the nit. I'll do some manual testing of this tomorrow.",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-215797861",
      "submitted_at": "2019-03-18T21:41:56Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
    },
    {
      "event": "reviewed",
      "id": 216291689,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjE2MjkxNjg5",
      "url": null,
      "actor": null,
      "commit_id": "1a1036a5b3bc48715a5f3955e87203287c37210a",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "I've reviewed:\r\n\r\n - [x] 0ca5446db3cda7f911e911a094482311f6a71221 (_Remove use CValidationInterface in wallet code_) **utACK**\r\n- [ ] f157e7a73ba746c38c5437540806151fbfa4b286 (_Remove use of CRPCTable::appendCommand in wallet code_)\r\n- [x] 0bafbfcdd4b7d2393dc3e8a40b4ba7632117463a (_Remove use of CCoinsViewMemPool::GetCoin in wallet code_) and **utACK**\r\n- [ ] 1a1036a5b3bc48715a5f3955e87203287c37210a (_Remove remaining wallet accesses to node globals_)\r\n\r\nI found the _Remove use of CRPCTable::appendCommand in wallet code_ quite hard to review, probably due to my C++ ineptitude. I certainly wouldn't want to hold up this PR because I'm not able to fully work out what's going on in that commit. I think it could be made marginally simpler by removing support for multiple clients (https://github.com/bitcoin/bitcoin/pull/10973#discussion_r186538449), but Russ points out that most of the complexity is elsewhere. I also think some additional commenting in the `RpcForwarder` class could help.\r\n\r\nRuss is going to look at moving more code into the RPC server to simplify that commit, but again, I don't want to hold this up because of my inability to review. If other reviewers are happy to ACK this, then it should stay as it is.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-216291689",
      "submitted_at": "2019-03-19T21:00:11Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
    },
    {
      "event": "reviewed",
      "id": 216502554,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjE2NTAyNTU0",
      "url": null,
      "actor": null,
      "commit_id": "1a1036a5b3bc48715a5f3955e87203287c37210a",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Updated 1a1036a5b3bc48715a5f3955e87203287c37210a -> bffd676263953c662245be82c13a06c9bf5fbb20 ([pr/wipc-sep.101](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.101) -> [pr/wipc-sep.102](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.102), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/wipc-sep.101..pr/wipc-sep.102)) with John's suggestions.\r\nUpdated bffd676263953c662245be82c13a06c9bf5fbb20 -> d358466de15ef29c1d2bccb9aebab360d574d1d0 ([pr/wipc-sep.102](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.102) -> [pr/wipc-sep.103](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.103), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/wipc-sep.102..pr/wipc-sep.103)) renaming new src/node/coin.h file to be consistent with existing src/node/transaction.h file.\r\n\r\n\r\n> I found the Remove use of CRPCTable::appendCommand in wallet code [f157e7a73ba746c38c5437540806151fbfa4b286] quite hard to review\r\n\r\nNew version of this commit (4e4d9e9f85eaf9c3bec48559bd4cad3e8a9333ca) should be a lot simpler. I was too reluctant before to change rpc server code. Should be much more straightforward now.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-216502554",
      "submitted_at": "2019-03-20T11:28:25Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2216498612,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjIxNjQ5ODYxMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2216498612",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-20T11:28:50Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2216566507,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjIxNjU2NjUwNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2216566507",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-20T11:57:47Z"
    },
    {
      "event": "commented",
      "id": 475014521,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NTAxNDUyMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/475014521",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-20T20:27:20Z",
      "updated_at": "2019-03-20T20:27:20Z",
      "author_association": "MEMBER",
      "body": "utACK d358466de15ef29c1d2bccb9aebab360d574d1d0. This version is much clearer to me than the previous branch. Thank you!\r\n\r\nI still think that handling multiple clients is an unnecessary complication for this PR. The `RPC_WALLET_NOT_FOUND` catch/throw in the `RpcHandlerImpl` actor and the `last_handler` bool passed to the actor seem particularly strange to me.\r\n\r\nThat said, I've reviewed the code and it all seems fine. I wouldn't want to hold this PR up because of my own aesthetic inclinations.\r\n\r\nVery nice work Russ. Thanks for seeing this through!",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#issuecomment-475014521",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10973"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-20T22:18:08Z",
      "updated_at": "2019-03-20T22:18:08Z",
      "source": {
        "issue": {
          "id": 423497300,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjYzMDU3ODY5",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15632",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15632/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15632/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15632/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/15632",
          "number": 15632,
          "state": "closed",
          "state_reason": null,
          "title": "Remove ResendWalletTransactions from the Validation Interface",
          "body": "Remove the `Broadcast()`/`ResendWalletTransactions()` notification from the Validation interface.\r\n\r\nCloses #15619. See that issue for discussion.",
          "user": {
            "login": "jnewbery",
            "id": 1063656,
            "node_id": "MDQ6VXNlcjEwNjM2NTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jnewbery",
            "html_url": "https://github.com/jnewbery",
            "followers_url": "https://api.github.com/users/jnewbery/followers",
            "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
            "organizations_url": "https://api.github.com/users/jnewbery/orgs",
            "repos_url": "https://api.github.com/users/jnewbery/repos",
            "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jnewbery/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/37",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/37",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/37/labels",
            "id": 3391434,
            "node_id": "MDk6TWlsZXN0b25lMzM5MTQzNA==",
            "number": 37,
            "state": "closed",
            "title": "0.19.0",
            "description": "",
            "creator": {
              "login": "MarcoFalke",
              "id": 6399679,
              "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
              "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/MarcoFalke",
              "html_url": "https://github.com/MarcoFalke",
              "followers_url": "https://api.github.com/users/MarcoFalke/followers",
              "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
              "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
              "repos_url": "https://api.github.com/users/MarcoFalke/repos",
              "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 155,
            "created_at": "2018-05-31T19:40:07Z",
            "updated_at": "2020-04-24T16:46:17Z",
            "closed_at": "2019-11-10T11:39:07Z"
          },
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 41,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15632",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/15632",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/15632.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/15632.patch"
          },
          "closed_at": "2019-04-09T21:54:47Z",
          "created_at": "2019-03-20T22:16:59Z",
          "updated_at": "2021-12-16T14:56:57Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 475138852,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NTEzODg1Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/475138852",
      "actor": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-21T07:57:09Z",
      "updated_at": "2019-03-21T07:57:09Z",
      "author_association": "CONTRIBUTOR",
      "body": "I think this is ready 🎉 ",
      "user": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#issuecomment-475138852",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10973"
    },
    {
      "event": "merged",
      "id": 2218982247,
      "node_id": "MDExOk1lcmdlZEV2ZW50MjIxODk4MjI0Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2218982247",
      "actor": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "created_at": "2019-03-21T07:59:20Z"
    },
    {
      "event": "closed",
      "id": 2218982253,
      "node_id": "MDExOkNsb3NlZEV2ZW50MjIxODk4MjI1Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2218982253",
      "actor": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-21T07:59:20Z"
    },
    {
      "event": "referenced",
      "id": 2218983179,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDIyMTg5ODMxNzk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2218983179",
      "actor": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "2607d960a02e21098092e95ba6bc2a64c93e6127",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2607d960a02e21098092e95ba6bc2a64c93e6127",
      "created_at": "2019-03-21T08:00:03Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-21T12:40:33Z",
      "updated_at": "2019-03-21T12:40:33Z",
      "source": {
        "issue": {
          "id": 418445946,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjU5MjE3MzQ1",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15557",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15557/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15557/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15557/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/15557",
          "number": 15557,
          "state": "closed",
          "state_reason": null,
          "title": "Enhance `bumpfee` to include inputs when targeting a feerate",
          "body": "When targeting a feerate using `bumpfee`, call a new function that directly uses `CWallet::CreateTransaction` and coin control to get the desired result. This allows us to get a superset of previous behavior, with an arbitrary RBF bump of a transaction provided it passes the preconditional checks and spare confirmed utxos are available.\r\n\r\nNote(s):\r\n0) The coin selection will use knapsack solver for the residual selection.\r\n1) This functionality, just like knapsack coin selection in general, will hoover up negative-value inputs when given the chance.\r\n2) Newly added inputs must be confirmed due to current Core policy. See error: `replacement-adds-unconfirmed`\r\n3) Supporting this with `totalFee` is difficult since the \"minimum total fee\" option in `CreateTransaction` logic was (rightly)taken out in #10390 .",
          "user": {
            "login": "instagibbs",
            "id": 5767891,
            "node_id": "MDQ6VXNlcjU3Njc4OTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/instagibbs",
            "html_url": "https://github.com/instagibbs",
            "followers_url": "https://api.github.com/users/instagibbs/followers",
            "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
            "organizations_url": "https://api.github.com/users/instagibbs/orgs",
            "repos_url": "https://api.github.com/users/instagibbs/repos",
            "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/instagibbs/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 82428251,
              "node_id": "MDU6TGFiZWw4MjQyODI1MQ==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/TX%20fees%20and%20policy",
              "name": "TX fees and policy",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 28,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15557",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/15557",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/15557.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/15557.patch"
          },
          "closed_at": "2019-04-14T20:43:23Z",
          "created_at": "2019-03-07T18:12:12Z",
          "updated_at": "2022-02-15T10:47:28Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "removed_from_project",
      "id": 2220521496,
      "node_id": "MDIzOlJlbW92ZWRGcm9tUHJvamVjdEV2ZW50MjIyMDUyMTQ5Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2220521496",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-21T17:38:55Z",
      "project_card": {
        "id": 18418567,
        "url": "https://api.github.com/projects/columns/cards/18418567",
        "project_id": 481835,
        "project_url": "https://api.github.com/projects/481835",
        "column_name": "Blockers"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-22T14:14:50Z",
      "updated_at": "2019-03-22T14:14:50Z",
      "source": {
        "issue": {
          "id": 424047461,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjYzNDg2NzUw",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15638",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15638/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15638/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15638/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/15638",
          "number": 15638,
          "state": "closed",
          "state_reason": null,
          "title": "Move-only: Pull wallet code out of libbitcoin_server",
          "body": "This is a move-only commit. No code is changing and the moves can be easily verified with:\r\n\r\n```sh\r\ngit log -p -n1 --color-moved=dimmed_zebra\r\n```\r\n\r\nThis commit moves functions and variables that wallet code depends on out of libbitcoin_server.a, so the bitcoin-wallet tool can be built without libbitcoin_server.a in #15639, and attempting to access server state from wallet code will result in link errors instead of silently broken code.\r\n\r\nList of moves:\r\n\r\n- `CheckTransaction` moves from `consensus/tx_verify.cpp` to `consensus/tx_check.cpp`\r\n- `urlDecode` moves from `httpserver.cpp` to `util/url.cpp`\r\n- `TransactionErrorString` moves from `node/transaction.cpp` to `util/error.cpp`\r\n- `StringForFeeReason` and `FeeModeFromString` move from `policy/fees.cpp` to `util/fees.cpp`\r\n- `incrementalRelayFee` `dustRelayFee` and `nBytesPerSigOp` move from `policy/policy.cpp` to `policy/settings.cpp`\r\n- `SignalsOptInRBF` moves from `policy/rbf.cpp` to `util/rbf.cpp`\r\n- `fIsBareMultisigStd` moves from `validation.cpp` to `policy/settings.cpp`\r\n- `ConstructTransaction` `TxInErrorToJSON` and `SignTransaction` move from `rpc/rawtransaction.cpp` to `rpc/rawtransaction_util.cpp`\r\n- `RPCTypeCheck` `RPCTypeCheckArgument` `RPCTypeCheckObj` `AmountFromValue` `ParseHashV``ParseHashO` `ParseHexV` `ParseHexO` `HelpExampleCli` and `HelpExampleRpc` move from `rpc/server.cpp` to `rpc/util.cpp`\r\n- `AmountHighWarn` and `AmountErrMsg` move from `ui_interface.cpp` to `util/error.cpp`\r\n- `FormatStateMessage` and `strMessageMagic` move from `validation.cpp` to `util/validation.cpp`\r\n- `VerifyWallets` `LoadWallets` `StartWallets` `FlushWallets` `StopWallets` and `UnloadWallets` move from `wallet/init.cpp` to `wallet/node.cpp`",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 20,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15638",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/15638",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/15638.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/15638.patch"
          },
          "closed_at": "2019-04-10T13:52:46Z",
          "created_at": "2019-03-22T05:00:15Z",
          "updated_at": "2021-12-16T14:07:02Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 475701656,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NTcwMTY1Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/475701656",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-03-22T17:07:31Z",
      "updated_at": "2019-03-22T17:07:31Z",
      "author_association": "CONTRIBUTOR",
      "body": "re: https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-213000398\r\n\r\n> Instead, I'd like to just add a new libbitcoin_node.a library, analogous to the existing libbitcoin_wallet.a library, and move symbol definitions like cs_main pcoinsTip chainActive there that wallet and gui code shouldn't access\r\n\r\nTo follow up, I did this in #15638 and #15639, only using the existing `libbitcoin_server.a` library for simplicity instead of adding a new `libbitcoin_node.a` library.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#issuecomment-475701656",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10973"
    },
    {
      "event": "referenced",
      "id": 2226035391,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDIyMjYwMzUzOTE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2226035391",
      "actor": {
        "login": "domob1812",
        "id": 4943644,
        "node_id": "MDQ6VXNlcjQ5NDM2NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4943644?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/domob1812",
        "html_url": "https://github.com/domob1812",
        "followers_url": "https://api.github.com/users/domob1812/followers",
        "following_url": "https://api.github.com/users/domob1812/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/domob1812/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/domob1812/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/domob1812/subscriptions",
        "organizations_url": "https://api.github.com/users/domob1812/orgs",
        "repos_url": "https://api.github.com/users/domob1812/repos",
        "events_url": "https://api.github.com/users/domob1812/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/domob1812/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "69e327b36b89c64059ad529ea9867fd1577dbf35",
      "commit_url": "https://api.github.com/repos/domob1812/namecoin-core/commits/69e327b36b89c64059ad529ea9867fd1577dbf35",
      "created_at": "2019-03-25T10:21:47Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-04-10T15:38:13Z",
      "updated_at": "2019-04-10T15:38:13Z",
      "source": {
        "issue": {
          "id": 429461011,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjY3NTk0MTYy",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15750",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15750/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15750/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15750/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/15750",
          "number": 15750,
          "state": "closed",
          "state_reason": null,
          "title": "[rpc] Remove the addresses field from the getaddressinfo return object",
          "body": "The \"addresses\" field was confusing because it refered to public keys\r\nusing their P2PKH address.  It was included in the return object when\r\nneeded for backward compatibility. Remove that compatibility now that\r\nthe -deprecatedrpc=validateaddress option has been removed.\r\n\r\nNew applications should use the 'embedded'->'address' field for P2SH or\r\nP2WSH wrapped addresses, and 'pubkeys' for inspecting multisig\r\nparticipants.",
          "user": {
            "login": "jnewbery",
            "id": 1063656,
            "node_id": "MDQ6VXNlcjEwNjM2NTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jnewbery",
            "html_url": "https://github.com/jnewbery",
            "followers_url": "https://api.github.com/users/jnewbery/followers",
            "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
            "organizations_url": "https://api.github.com/users/jnewbery/orgs",
            "repos_url": "https://api.github.com/users/jnewbery/repos",
            "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jnewbery/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/35",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/35",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/35/labels",
            "id": 3318051,
            "node_id": "MDk6TWlsZXN0b25lMzMxODA1MQ==",
            "number": 35,
            "state": "closed",
            "title": "0.18.0",
            "description": "",
            "creator": {
              "login": "MarcoFalke",
              "id": 6399679,
              "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
              "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/MarcoFalke",
              "html_url": "https://github.com/MarcoFalke",
              "followers_url": "https://api.github.com/users/MarcoFalke/followers",
              "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
              "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
              "repos_url": "https://api.github.com/users/MarcoFalke/repos",
              "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 186,
            "created_at": "2018-05-03T15:34:54Z",
            "updated_at": "2020-03-17T18:30:07Z",
            "closed_at": "2019-05-03T02:51:38Z"
          },
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 16,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15750",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/15750",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/15750.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/15750.patch"
          },
          "closed_at": "2019-04-15T15:10:54Z",
          "created_at": "2019-04-04T20:08:42Z",
          "updated_at": "2021-12-16T14:52:03Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-07-20T06:25:04Z",
      "updated_at": "2019-07-20T06:25:04Z",
      "source": {
        "issue": {
          "id": 470641503,
          "node_id": "MDExOlB1bGxSZXF1ZXN0Mjk5NTQxNTg0",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16426/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/16426",
          "number": 16426,
          "state": "closed",
          "state_reason": null,
          "title": "Reverse cs_main, cs_wallet lock order and reduce cs_main locking",
          "body": "This change is intended to make the bitcoin node and its rpc, network and gui interfaces more responsive while the wallet is in use. Currently, because the node's `cs_main` mutex is always locked before the wallet's `cs_wallet` mutex (to prevent deadlocks), `cs_main` currently stays locked while the wallet does relatively slow things like creating and listing transactions.\r\n\r\nSwitching the lock order so `cs_main` is acquired after `cs_wallet` allows `cs_main` to be only locked intermittently while the wallet is doing slow operations, so the node is not blocked waiting for the wallet.\r\n\r\nTo review the present PR, most of getting right the move is ensuring any `LockAssertion` in `Chain::Lock` method is amended as a `LOCK(cs_main)`. And in final commit, check that any wallet code which was previously locking the chain is now calling a  method, enforcing the lock taking job. So far the only exception I found is `handleNotifications`, which should be corrected.",
          "user": {
            "login": "ariard",
            "id": 23310655,
            "node_id": "MDQ6VXNlcjIzMzEwNjU1",
            "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ariard",
            "html_url": "https://github.com/ariard",
            "followers_url": "https://api.github.com/users/ariard/followers",
            "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
            "organizations_url": "https://api.github.com/users/ariard/orgs",
            "repos_url": "https://api.github.com/users/ariard/repos",
            "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ariard/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 69,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16426",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/16426",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/16426.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/16426.patch"
          },
          "closed_at": "2020-05-01T11:01:34Z",
          "created_at": "2019-07-20T06:25:04Z",
          "updated_at": "2022-02-15T10:49:23Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 2648597068,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI2NDg1OTcwNjg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2648597068",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "30eec0609835ebadb8547751ab0409d38ffbafbf",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/30eec0609835ebadb8547751ab0409d38ffbafbf",
      "created_at": "2019-09-19T22:33:30Z"
    },
    {
      "event": "referenced",
      "id": 2902994799,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI5MDI5OTQ3OTk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2902994799",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "e712a34b7e642d7e4ea7eb8416fd77a000856786",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/e712a34b7e642d7e4ea7eb8416fd77a000856786",
      "created_at": "2019-12-22T03:10:44Z"
    },
    {
      "event": "referenced",
      "id": 2903000772,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI5MDMwMDA3NzI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2903000772",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "9efa5688337ca6368aa1e794fb03af2652386231",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/9efa5688337ca6368aa1e794fb03af2652386231",
      "created_at": "2019-12-22T03:35:28Z"
    },
    {
      "event": "referenced",
      "id": 2919018546,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI5MTkwMTg1NDY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2919018546",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "d7df373a0b6d301460525039d79dc50750717fbd",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/d7df373a0b6d301460525039d79dc50750717fbd",
      "created_at": "2020-01-02T22:59:25Z"
    },
    {
      "event": "referenced",
      "id": 2921937319,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI5MjE5MzczMTk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2921937319",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "1f29aae2eb675479f660175725a429807a2ef899",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/1f29aae2eb675479f660175725a429807a2ef899",
      "created_at": "2020-01-04T16:52:26Z"
    },
    {
      "event": "referenced",
      "id": 2921941657,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI5MjE5NDE2NTc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2921941657",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "ac94b9b4a8a7a5fabf7378d74c3d29e3fe80f81a",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/ac94b9b4a8a7a5fabf7378d74c3d29e3fe80f81a",
      "created_at": "2020-01-04T17:01:47Z"
    },
    {
      "event": "referenced",
      "id": 2939093156,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI5MzkwOTMxNTY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2939093156",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "05ccd986634037e3faa6b215718caac4ad88cfa9",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/05ccd986634037e3faa6b215718caac4ad88cfa9",
      "created_at": "2020-01-10T16:28:18Z"
    },
    {
      "event": "referenced",
      "id": 2939099940,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI5MzkwOTk5NDA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2939099940",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "c43d581347c1652bc91ee4128ddd477b523786bf",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/c43d581347c1652bc91ee4128ddd477b523786bf",
      "created_at": "2020-01-10T16:30:18Z"
    },
    {
      "event": "referenced",
      "id": 2939124402,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI5MzkxMjQ0MDI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2939124402",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "fc4ab83c83414d80138bf4f50d27643901b8e469",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/fc4ab83c83414d80138bf4f50d27643901b8e469",
      "created_at": "2020-01-10T16:38:06Z"
    },
    {
      "event": "referenced",
      "id": 2940920281,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI5NDA5MjAyODE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2940920281",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "20e8ce81db1fc134bfc74791f6313c779fc67e68",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/20e8ce81db1fc134bfc74791f6313c779fc67e68",
      "created_at": "2020-01-12T00:18:55Z"
    },
    {
      "event": "referenced",
      "id": 3281724727,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMyODE3MjQ3Mjc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3281724727",
      "actor": {
        "login": "deadalnix",
        "id": 854121,
        "node_id": "MDQ6VXNlcjg1NDEyMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/854121?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/deadalnix",
        "html_url": "https://github.com/deadalnix",
        "followers_url": "https://api.github.com/users/deadalnix/followers",
        "following_url": "https://api.github.com/users/deadalnix/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/deadalnix/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/deadalnix/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/deadalnix/subscriptions",
        "organizations_url": "https://api.github.com/users/deadalnix/orgs",
        "repos_url": "https://api.github.com/users/deadalnix/repos",
        "events_url": "https://api.github.com/users/deadalnix/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/deadalnix/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "39c9afd531adf483e18917a9e856528b6a4c2939",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/39c9afd531adf483e18917a9e856528b6a4c2939",
      "created_at": "2020-04-28T19:05:07Z"
    },
    {
      "event": "referenced",
      "id": 3293319229,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMyOTMzMTkyMjk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3293319229",
      "actor": {
        "login": "deadalnix",
        "id": 854121,
        "node_id": "MDQ6VXNlcjg1NDEyMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/854121?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/deadalnix",
        "html_url": "https://github.com/deadalnix",
        "followers_url": "https://api.github.com/users/deadalnix/followers",
        "following_url": "https://api.github.com/users/deadalnix/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/deadalnix/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/deadalnix/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/deadalnix/subscriptions",
        "organizations_url": "https://api.github.com/users/deadalnix/orgs",
        "repos_url": "https://api.github.com/users/deadalnix/repos",
        "events_url": "https://api.github.com/users/deadalnix/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/deadalnix/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "a7aad1a3ba1e6a697840af24ea11b70f3e718f1b",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/a7aad1a3ba1e6a697840af24ea11b70f3e718f1b",
      "created_at": "2020-05-01T14:20:09Z"
    },
    {
      "event": "referenced",
      "id": 3295804935,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMyOTU4MDQ5MzU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3295804935",
      "actor": {
        "login": "deadalnix",
        "id": 854121,
        "node_id": "MDQ6VXNlcjg1NDEyMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/854121?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/deadalnix",
        "html_url": "https://github.com/deadalnix",
        "followers_url": "https://api.github.com/users/deadalnix/followers",
        "following_url": "https://api.github.com/users/deadalnix/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/deadalnix/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/deadalnix/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/deadalnix/subscriptions",
        "organizations_url": "https://api.github.com/users/deadalnix/orgs",
        "repos_url": "https://api.github.com/users/deadalnix/repos",
        "events_url": "https://api.github.com/users/deadalnix/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/deadalnix/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "a6069ab2ada243d1fcb2d06ed65d4cc75159665a",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/a6069ab2ada243d1fcb2d06ed65d4cc75159665a",
      "created_at": "2020-05-02T12:50:09Z"
    },
    {
      "event": "referenced",
      "id": 3297403247,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMyOTc0MDMyNDc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3297403247",
      "actor": {
        "login": "deadalnix",
        "id": 854121,
        "node_id": "MDQ6VXNlcjg1NDEyMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/854121?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/deadalnix",
        "html_url": "https://github.com/deadalnix",
        "followers_url": "https://api.github.com/users/deadalnix/followers",
        "following_url": "https://api.github.com/users/deadalnix/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/deadalnix/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/deadalnix/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/deadalnix/subscriptions",
        "organizations_url": "https://api.github.com/users/deadalnix/orgs",
        "repos_url": "https://api.github.com/users/deadalnix/repos",
        "events_url": "https://api.github.com/users/deadalnix/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/deadalnix/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "5cf1cf93d7d2b0bfbad6a5fe1f88e4ce5ea87f5a",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/5cf1cf93d7d2b0bfbad6a5fe1f88e4ce5ea87f5a",
      "created_at": "2020-05-03T13:05:08Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-08T18:30:18Z",
      "updated_at": "2020-05-08T18:30:18Z",
      "source": {
        "issue": {
          "id": 133306878,
          "node_id": "MDU6SXNzdWUxMzMzMDY4Nzg=",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7525",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7525/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7525/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7525/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/7525",
          "number": 7525,
          "state": "closed",
          "state_reason": "completed",
          "title": "[enhancement] Separate Node and Wallet functions",
          "body": "## **We have a usability problem.**\n\n**Problem**\nWhen new layman users approach bitcoin, the first thing ANYONE ever does is seek out the original wallet software.  This means that every single new user that comes along is inadvertently running a FULL NODE.  While having more nodes can be useful, you wind up with users that just \"leave it alone\" and not keep up to date.\n\n**Reaction**\nWhen a user is nervous and learning about a new system it can scare, intimidate, and ward them off to be confronted with a full node download (currently 60GB), especially when all they expected was a \"wallet\"\n\n**Solution**\nI suggest separating the products, because they ARE distinct.\n- bitcoin-node\n- bitcoin-wallet   (thin by default, ALLOW to connect to your own defined node)\n\nWhile 3rd party wallets / thin clients DO exist, I feel we need a rock solid place for users to start.\nYes, people should do their research, but we need to make it as easy as possible to approach and use.\n\nWe want to make this as stupidly easy as possible for any member of the public to approach.\n\nThoughts?\n",
          "user": {
            "login": "cluelessperson",
            "id": 5635253,
            "node_id": "MDQ6VXNlcjU2MzUyNTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5635253?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cluelessperson",
            "html_url": "https://github.com/cluelessperson",
            "followers_url": "https://api.github.com/users/cluelessperson/followers",
            "following_url": "https://api.github.com/users/cluelessperson/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/cluelessperson/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/cluelessperson/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/cluelessperson/subscriptions",
            "organizations_url": "https://api.github.com/users/cluelessperson/orgs",
            "repos_url": "https://api.github.com/users/cluelessperson/repos",
            "events_url": "https://api.github.com/users/cluelessperson/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/cluelessperson/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64583,
              "node_id": "MDU6TGFiZWw2NDU4Mw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Feature",
              "name": "Feature",
              "color": "7cf575",
              "default": false
            },
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "NONE",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 28,
          "closed_at": "2020-05-08T18:30:18Z",
          "created_at": "2016-02-12T18:08:38Z",
          "updated_at": "2022-02-15T11:03:18Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 3559673582,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM1NTk2NzM1ODI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3559673582",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "27ea6bd99850226e2caa07a2cfdafd4c05bd3678",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/27ea6bd99850226e2caa07a2cfdafd4c05bd3678",
      "created_at": "2020-07-17T19:59:44Z"
    },
    {
      "event": "referenced",
      "id": 3559816250,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM1NTk4MTYyNTA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3559816250",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "897a6ee5ebb9c170c136cc4565436ca0f50a7dac",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/897a6ee5ebb9c170c136cc4565436ca0f50a7dac",
      "created_at": "2020-07-17T20:44:01Z"
    },
    {
      "event": "referenced",
      "id": 3562834076,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM1NjI4MzQwNzY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3562834076",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "81ba40ceade2c3db9fa695d9377888e5cd177daa",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/81ba40ceade2c3db9fa695d9377888e5cd177daa",
      "created_at": "2020-07-19T16:53:45Z"
    },
    {
      "event": "referenced",
      "id": 3572224731,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM1NzIyMjQ3MzE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3572224731",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "7b091fb99fe67a5b6c49042b9588bca9dfc87f58",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/7b091fb99fe67a5b6c49042b9588bca9dfc87f58",
      "created_at": "2020-07-21T16:55:20Z"
    },
    {
      "event": "referenced",
      "id": 4517981539,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ1MTc5ODE1Mzk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4517981539",
      "actor": {
        "login": "ckti",
        "id": 7046769,
        "node_id": "MDQ6VXNlcjcwNDY3Njk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7046769?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ckti",
        "html_url": "https://github.com/ckti",
        "followers_url": "https://api.github.com/users/ckti/followers",
        "following_url": "https://api.github.com/users/ckti/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ckti/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ckti/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ckti/subscriptions",
        "organizations_url": "https://api.github.com/users/ckti/orgs",
        "repos_url": "https://api.github.com/users/ckti/repos",
        "events_url": "https://api.github.com/users/ckti/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ckti/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "052ebdb7fd75f5925fc2983240d69b58ce48ec50",
      "commit_url": "https://api.github.com/repos/ckti-ioncore-current/ion/commits/052ebdb7fd75f5925fc2983240d69b58ce48ec50",
      "created_at": "2021-03-28T10:02:58Z"
    },
    {
      "event": "referenced",
      "id": 4962428031,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ5NjI0MjgwMzE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4962428031",
      "actor": {
        "login": "gades",
        "id": 4200730,
        "node_id": "MDQ6VXNlcjQyMDA3MzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4200730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gades",
        "html_url": "https://github.com/gades",
        "followers_url": "https://api.github.com/users/gades/followers",
        "following_url": "https://api.github.com/users/gades/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gades/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gades/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gades/subscriptions",
        "organizations_url": "https://api.github.com/users/gades/orgs",
        "repos_url": "https://api.github.com/users/gades/repos",
        "events_url": "https://api.github.com/users/gades/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gades/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "d4a6c7a3c61570ab9da5e008804f3bd28e159cfe",
      "commit_url": "https://api.github.com/repos/cosanta/cosanta-core/commits/d4a6c7a3c61570ab9da5e008804f3bd28e159cfe",
      "created_at": "2021-06-30T22:39:47Z"
    },
    {
      "event": "referenced",
      "id": 5077419473,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDUwNzc0MTk0NzM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5077419473",
      "actor": {
        "login": "5tefan",
        "id": 5855806,
        "node_id": "MDQ6VXNlcjU4NTU4MDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5855806?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/5tefan",
        "html_url": "https://github.com/5tefan",
        "followers_url": "https://api.github.com/users/5tefan/followers",
        "following_url": "https://api.github.com/users/5tefan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/5tefan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/5tefan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/5tefan/subscriptions",
        "organizations_url": "https://api.github.com/users/5tefan/orgs",
        "repos_url": "https://api.github.com/users/5tefan/repos",
        "events_url": "https://api.github.com/users/5tefan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/5tefan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "fe1aa6fe0edd7e89faf674db6a4b842d4bb518b0",
      "commit_url": "https://api.github.com/repos/5tefan/dash/commits/fe1aa6fe0edd7e89faf674db6a4b842d4bb518b0",
      "created_at": "2021-07-28T01:33:44Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "5tefan",
        "id": 5855806,
        "node_id": "MDQ6VXNlcjU4NTU4MDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5855806?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/5tefan",
        "html_url": "https://github.com/5tefan",
        "followers_url": "https://api.github.com/users/5tefan/followers",
        "following_url": "https://api.github.com/users/5tefan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/5tefan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/5tefan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/5tefan/subscriptions",
        "organizations_url": "https://api.github.com/users/5tefan/orgs",
        "repos_url": "https://api.github.com/users/5tefan/repos",
        "events_url": "https://api.github.com/users/5tefan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/5tefan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-28T01:35:39Z",
      "updated_at": "2021-07-28T01:35:39Z",
      "source": {
        "issue": {
          "id": 954390722,
          "node_id": "MDExOlB1bGxSZXF1ZXN0Njk4Mjk0MjA4",
          "url": "https://api.github.com/repos/dashpay/dash/issues/4296",
          "repository_url": "https://api.github.com/repos/dashpay/dash",
          "labels_url": "https://api.github.com/repos/dashpay/dash/issues/4296/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/dashpay/dash/issues/4296/comments",
          "events_url": "https://api.github.com/repos/dashpay/dash/issues/4296/events",
          "html_url": "https://github.com/dashpay/dash/pull/4296",
          "number": 4296,
          "state": "closed",
          "state_reason": null,
          "title": "Merge bitcoin#14636: Avoid using numeric_limits for sequence numbers and lock times",
          "body": "Merges bitcoin/bitcoin#14636: Avoid using numeric_limits for sequence\r\nnumbers and lock times.\r\n\r\n535203075e Avoid using numeric_limits for sequence numbers and lock\r\n            times (Russell Yanofsky)\r\nbafb921507 Remove duplicated code (Hennadii Stepanov)\r\ne4dc39b3bc Replace platform dependent type with proper const\r\n            (Hennadii Stepanov)\r\n\r\nPull request description:\r\n\r\n  Switches to named constants, because numeric_limits calls can be\r\nharder to read and less portable.\r\n\r\n  Change was suggested by jamesob in\r\nhttps://github.com/bitcoin/bitcoin/pull/10973#discussion_r213473620\r\n\r\n  There are no changes in behavior except on some platforms we don't\r\nsupport (ILP64, IP16L32, I16LP32), where `SignalsOptInRBF` and\r\n`MutateTxAddInput` functions would now work correctly.",
          "user": {
            "login": "5tefan",
            "id": 5855806,
            "node_id": "MDQ6VXNlcjU4NTU4MDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5855806?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/5tefan",
            "html_url": "https://github.com/5tefan",
            "followers_url": "https://api.github.com/users/5tefan/followers",
            "following_url": "https://api.github.com/users/5tefan/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/5tefan/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/5tefan/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/5tefan/subscriptions",
            "organizations_url": "https://api.github.com/users/5tefan/orgs",
            "repos_url": "https://api.github.com/users/5tefan/repos",
            "events_url": "https://api.github.com/users/5tefan/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/5tefan/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "NONE",
          "milestone": {
            "url": "https://api.github.com/repos/dashpay/dash/milestones/28",
            "html_url": "https://github.com/dashpay/dash/milestone/28",
            "labels_url": "https://api.github.com/repos/dashpay/dash/milestones/28/labels",
            "id": 6582425,
            "node_id": "MDk6TWlsZXN0b25lNjU4MjQyNQ==",
            "number": 28,
            "state": "closed",
            "title": "18",
            "description": "https://github.com/dashpay/dash/issues/4211",
            "creator": {
              "login": "PastaPastaPasta",
              "id": 6443210,
              "node_id": "MDQ6VXNlcjY0NDMyMTA=",
              "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/PastaPastaPasta",
              "html_url": "https://github.com/PastaPastaPasta",
              "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
              "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
              "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
              "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
              "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 2,
            "closed_issues": 617,
            "created_at": "2021-03-23T15:57:06Z",
            "updated_at": "2023-04-10T15:43:17Z",
            "closed_at": "2022-12-28T18:52:24Z",
            "due_on": "2022-05-25T07:00:00Z"
          },
          "locked": false,
          "comments": 2,
          "pull_request": {
            "url": "https://api.github.com/repos/dashpay/dash/pulls/4296",
            "html_url": "https://github.com/dashpay/dash/pull/4296",
            "diff_url": "https://github.com/dashpay/dash/pull/4296.diff",
            "patch_url": "https://github.com/dashpay/dash/pull/4296.patch"
          },
          "closed_at": "2021-07-28T14:16:46Z",
          "created_at": "2021-07-28T01:35:39Z",
          "updated_at": "2021-08-12T06:10:53Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 5077723299,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDUwNzc3MjMyOTk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5077723299",
      "actor": {
        "login": "5tefan",
        "id": 5855806,
        "node_id": "MDQ6VXNlcjU4NTU4MDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5855806?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/5tefan",
        "html_url": "https://github.com/5tefan",
        "followers_url": "https://api.github.com/users/5tefan/followers",
        "following_url": "https://api.github.com/users/5tefan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/5tefan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/5tefan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/5tefan/subscriptions",
        "organizations_url": "https://api.github.com/users/5tefan/orgs",
        "repos_url": "https://api.github.com/users/5tefan/repos",
        "events_url": "https://api.github.com/users/5tefan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/5tefan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "d1ea7d9e4c836c02548b9a3719b487143cbbe641",
      "commit_url": "https://api.github.com/repos/5tefan/dash/commits/d1ea7d9e4c836c02548b9a3719b487143cbbe641",
      "created_at": "2021-07-28T03:44:34Z"
    },
    {
      "event": "referenced",
      "id": 5077761296,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDUwNzc3NjEyOTY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5077761296",
      "actor": {
        "login": "5tefan",
        "id": 5855806,
        "node_id": "MDQ6VXNlcjU4NTU4MDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5855806?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/5tefan",
        "html_url": "https://github.com/5tefan",
        "followers_url": "https://api.github.com/users/5tefan/followers",
        "following_url": "https://api.github.com/users/5tefan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/5tefan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/5tefan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/5tefan/subscriptions",
        "organizations_url": "https://api.github.com/users/5tefan/orgs",
        "repos_url": "https://api.github.com/users/5tefan/repos",
        "events_url": "https://api.github.com/users/5tefan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/5tefan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "c64f797467eb4afc0df0fafa3a2eea627b5623f6",
      "commit_url": "https://api.github.com/repos/5tefan/dash/commits/c64f797467eb4afc0df0fafa3a2eea627b5623f6",
      "created_at": "2021-07-28T04:02:41Z"
    },
    {
      "event": "referenced",
      "id": 5080462738,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDUwODA0NjI3Mzg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5080462738",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "59cfd5263a323d4417bb4a903aca9ff511719d3c",
      "commit_url": "https://api.github.com/repos/dashpay/dash/commits/59cfd5263a323d4417bb4a903aca9ff511719d3c",
      "created_at": "2021-07-28T14:17:01Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-25T17:41:35Z",
      "updated_at": "2021-08-25T17:41:35Z",
      "source": {
        "issue": {
          "id": 954220384,
          "node_id": "MDExOlB1bGxSZXF1ZXN0Njk4MTUwMTI0",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22564",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22564/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22564/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22564/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/22564",
          "number": 22564,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: Move mutable globals cleared in `::UnloadBlockIndex` to `BlockManager`",
          "body": "Fixes #22964\r\n\r\n-----\r\n\r\nThis is a small part of the work to accomplish what I described in 972c5166ee685447a6d4bf5e501b07a0871fba85:\r\n```\r\nOver time, we should probably move these mutable global state variables\r\ninto ChainstateManager or CChainState so it's easier to reason about\r\ntheir lifecycles.\r\n```\r\n\r\n`::UnloadBlockIndex` manually resets a subset of our mutable globals in addition to unloading the `ChainstateManager` and clearing the mempool. The need for this manual reset (AFAICT) arises out of the fact that many of these globals are closely related to the block index (hence `::UnloadBlockIndex`), and need to be reset with it.\r\n\r\nI've shot this \"manual reset\" gun at my foot several times while doing the de-globalize chainman work.\r\n\r\nThankfully, now that we have a `BlockManager` class that owns the block index, these globals should be moved under that class so that they can live and die with the block index. These moves, along with making the block index non-heap-based, eliminates:\r\n1. https://github.com/bitcoin/bitcoin/commit/3585b521392c5b2c855c3ba6dc9b7d2a171b3710 The need to reason about when we need to manually call `::UnloadBlockIndex` (this decision can at times seem almost arbitrary)\r\n2. https://github.com/bitcoin/bitcoin/commit/f741623c25455c20bff9eb1ddd10a4ac84dc5655 The need to have an `::UnloadBlockIndex` or explicit `~ChainstateManager` at all",
          "user": {
            "login": "dongcarl",
            "id": 3445290,
            "node_id": "MDQ6VXNlcjM0NDUyOTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dongcarl",
            "html_url": "https://github.com/dongcarl",
            "followers_url": "https://api.github.com/users/dongcarl/followers",
            "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
            "organizations_url": "https://api.github.com/users/dongcarl/orgs",
            "repos_url": "https://api.github.com/users/dongcarl/repos",
            "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/dongcarl/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/54",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/54",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/54/labels",
            "id": 7150037,
            "node_id": "MI_kwDOABII584AbRnV",
            "number": 54,
            "state": "closed",
            "title": "24.0",
            "description": "",
            "creator": {
              "login": "laanwj",
              "id": 126646,
              "node_id": "MDQ6VXNlcjEyNjY0Ng==",
              "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/laanwj",
              "html_url": "https://github.com/laanwj",
              "followers_url": "https://api.github.com/users/laanwj/followers",
              "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
              "organizations_url": "https://api.github.com/users/laanwj/orgs",
              "repos_url": "https://api.github.com/users/laanwj/repos",
              "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/laanwj/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 159,
            "created_at": "2021-09-14T08:27:02Z",
            "updated_at": "2022-11-29T15:44:44Z",
            "closed_at": "2022-11-29T15:44:44Z"
          },
          "locked": true,
          "comments": 38,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22564",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/22564",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/22564.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/22564.patch"
          },
          "closed_at": "2022-04-28T10:17:08Z",
          "created_at": "2021-07-27T19:58:39Z",
          "updated_at": "2023-04-28T09:59:12Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 5508784180,
      "node_id": "REFE_lADOABII584OvEFhzwAAAAFIWWA0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5508784180",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "1ada50fee0e8f48b4a5113ccd2c966872ebc8b12",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/1ada50fee0e8f48b4a5113ccd2c966872ebc8b12",
      "created_at": "2021-10-23T21:48:08Z"
    },
    {
      "event": "referenced",
      "id": 5509883526,
      "node_id": "REFE_lADOABII584OvEFhzwAAAAFIaiaG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5509883526",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "3e8670d81af7ce6cb97b2932ab5b7e3f2da74987",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/3e8670d81af7ce6cb97b2932ab5b7e3f2da74987",
      "created_at": "2021-10-24T19:01:37Z"
    },
    {
      "event": "referenced",
      "id": 5515550013,
      "node_id": "REFE_lADOABII584OvEFhzwAAAAFIwJ09",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5515550013",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "df0373cd7611bc98207d59849f4cd221f09e341e",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/df0373cd7611bc98207d59849f4cd221f09e341e",
      "created_at": "2021-10-25T18:31:07Z"
    },
    {
      "event": "referenced",
      "id": 5515573081,
      "node_id": "REFE_lADOABII584OvEFhzwAAAAFIwPdZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5515573081",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "1834aa9a9a7ff6359919b3acd2e10e8eb6c1f22e",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/1834aa9a9a7ff6359919b3acd2e10e8eb6c1f22e",
      "created_at": "2021-10-25T18:35:44Z"
    },
    {
      "event": "referenced",
      "id": 5545459767,
      "node_id": "REFE_lADOABII584OvEFhzwAAAAFKiQA3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5545459767",
      "actor": {
        "login": "kwvg",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kwvg",
        "html_url": "https://github.com/kwvg",
        "followers_url": "https://api.github.com/users/kwvg/followers",
        "following_url": "https://api.github.com/users/kwvg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kwvg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kwvg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kwvg/subscriptions",
        "organizations_url": "https://api.github.com/users/kwvg/orgs",
        "repos_url": "https://api.github.com/users/kwvg/repos",
        "events_url": "https://api.github.com/users/kwvg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kwvg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "ab6f8fe9c19582b6dc47e0653f542c2f301f7c59",
      "commit_url": "https://api.github.com/repos/kwvg/dash/commits/ab6f8fe9c19582b6dc47e0653f542c2f301f7c59",
      "created_at": "2021-10-31T16:49:39Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "kwvg",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kwvg",
        "html_url": "https://github.com/kwvg",
        "followers_url": "https://api.github.com/users/kwvg/followers",
        "following_url": "https://api.github.com/users/kwvg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kwvg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kwvg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kwvg/subscriptions",
        "organizations_url": "https://api.github.com/users/kwvg/orgs",
        "repos_url": "https://api.github.com/users/kwvg/repos",
        "events_url": "https://api.github.com/users/kwvg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kwvg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-31T17:10:31Z",
      "updated_at": "2021-10-31T17:10:31Z",
      "source": {
        "issue": {
          "id": 1024015553,
          "node_id": "PR_kwDOASdLgs4tFQfk",
          "url": "https://api.github.com/repos/dashpay/dash/issues/4513",
          "repository_url": "https://api.github.com/repos/dashpay/dash",
          "labels_url": "https://api.github.com/repos/dashpay/dash/issues/4513/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/dashpay/dash/issues/4513/comments",
          "events_url": "https://api.github.com/repos/dashpay/dash/issues/4513/events",
          "html_url": "https://github.com/dashpay/dash/pull/4513",
          "number": 4513,
          "state": "closed",
          "state_reason": null,
          "title": " merge bitcoin#10973: separate wallet from node ",
          "body": "### Additional Information\r\n\r\n* bitcoin#14711's backport has been ~~stolen~~ borrowed from https://github.com/dashpay/dash/pull/4537 and used as a placeholder for the source PR. \r\n\r\n  _This PR therefore, depends on it._\r\n\r\n* `MAX_ANTI_FEE_SNIPING_TIP_AGE` has been changed from `8 * 60 * 60` to `4 * 60` when backporting bitcoin#15039 to satisfy the `wallet_create_tx.py` functional test\r\n\r\n* bitcoin#15288 ~~only includes the range between 80f52a2267f44a9cae4440615df3ff989be1579c and 00dfb2a440b94a24b61cafb519fb122f6a0ae176~~ has been fully backported (but still excludes bdc6628683197945326cbdfea3f53ec0b7d1949f)\r\n\r\n* #15779 was a partial backport done in https://github.com/dashpay/dash/pull/4511 as it relied on bitcoin#10973 (which is backported in this PR), as we fulfill that dependency in this PR, the rest of it has been backported as well, making it complete ",
          "user": {
            "login": "kwvg",
            "id": 63189531,
            "node_id": "MDQ6VXNlcjYzMTg5NTMx",
            "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kwvg",
            "html_url": "https://github.com/kwvg",
            "followers_url": "https://api.github.com/users/kwvg/followers",
            "following_url": "https://api.github.com/users/kwvg/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/kwvg/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/kwvg/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/kwvg/subscriptions",
            "organizations_url": "https://api.github.com/users/kwvg/orgs",
            "repos_url": "https://api.github.com/users/kwvg/repos",
            "events_url": "https://api.github.com/users/kwvg/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/kwvg/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 3475771172,
              "node_id": "LA_kwDOASdLgs7PLA8k",
              "url": "https://api.github.com/repos/dashpay/dash/labels/Bitcoin%20Backport",
              "name": "Bitcoin Backport",
              "description": "",
              "color": "d93f0b",
              "default": false
            }
          ],
          "assignee": {
            "login": "kwvg",
            "id": 63189531,
            "node_id": "MDQ6VXNlcjYzMTg5NTMx",
            "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kwvg",
            "html_url": "https://github.com/kwvg",
            "followers_url": "https://api.github.com/users/kwvg/followers",
            "following_url": "https://api.github.com/users/kwvg/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/kwvg/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/kwvg/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/kwvg/subscriptions",
            "organizations_url": "https://api.github.com/users/kwvg/orgs",
            "repos_url": "https://api.github.com/users/kwvg/repos",
            "events_url": "https://api.github.com/users/kwvg/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/kwvg/received_events",
            "type": "User",
            "site_admin": false
          },
          "assignees": [
            {
              "login": "kwvg",
              "id": 63189531,
              "node_id": "MDQ6VXNlcjYzMTg5NTMx",
              "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/kwvg",
              "html_url": "https://github.com/kwvg",
              "followers_url": "https://api.github.com/users/kwvg/followers",
              "following_url": "https://api.github.com/users/kwvg/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/kwvg/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/kwvg/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/kwvg/subscriptions",
              "organizations_url": "https://api.github.com/users/kwvg/orgs",
              "repos_url": "https://api.github.com/users/kwvg/repos",
              "events_url": "https://api.github.com/users/kwvg/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/kwvg/received_events",
              "type": "User",
              "site_admin": false
            }
          ],
          "author_association": "COLLABORATOR",
          "locked": false,
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/dashpay/dash/pulls/4513",
            "html_url": "https://github.com/dashpay/dash/pull/4513",
            "diff_url": "https://github.com/dashpay/dash/pull/4513.diff",
            "patch_url": "https://github.com/dashpay/dash/pull/4513.patch"
          },
          "closed_at": "2021-11-01T05:12:52Z",
          "created_at": "2021-10-12T16:28:11Z",
          "updated_at": "2023-07-18T11:40:24Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "kwvg",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kwvg",
        "html_url": "https://github.com/kwvg",
        "followers_url": "https://api.github.com/users/kwvg/followers",
        "following_url": "https://api.github.com/users/kwvg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kwvg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kwvg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kwvg/subscriptions",
        "organizations_url": "https://api.github.com/users/kwvg/orgs",
        "repos_url": "https://api.github.com/users/kwvg/repos",
        "events_url": "https://api.github.com/users/kwvg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kwvg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-01T05:11:40Z",
      "updated_at": "2021-11-01T05:11:40Z",
      "source": {
        "issue": {
          "id": 1040776376,
          "node_id": "PR_kwDOASdLgs4t6Aty",
          "url": "https://api.github.com/repos/dashpay/dash/issues/4558",
          "repository_url": "https://api.github.com/repos/dashpay/dash",
          "labels_url": "https://api.github.com/repos/dashpay/dash/issues/4558/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/dashpay/dash/issues/4558/comments",
          "events_url": "https://api.github.com/repos/dashpay/dash/issues/4558/events",
          "html_url": "https://github.com/dashpay/dash/pull/4558",
          "number": 4558,
          "state": "closed",
          "state_reason": null,
          "title": "merge bitcoin#10973, #15039, #15288: separate wallet from node",
          "body": "### Additional Information\r\n\r\n* ~~bitcoin#14711's backport has been ~~stolen~~ borrowed from https://github.com/dashpay/dash/pull/4537 and used as a placeholder for the source PR.~~\r\n\r\n  ~~_This PR therefore, depends on it._~~ _Merged_ \r\n\r\n* ~~_`MAX_ANTI_FEE_SNIPING_TIP_AGE` has been changed from `8 * 60 * 60` to `4 * 60` when backporting bitcoin#15039 to satisfy the `wallet_create_tx.py` functional test_~~ _Resolved with a6657e8_\r\n\r\n* bitcoin#15288 ~~only includes the range between 80f52a2267f44a9cae4440615df3ff989be1579c and 00dfb2a440b94a24b61cafb519fb122f6a0ae176~~ has been fully backported (but still excludes bdc6628683197945326cbdfea3f53ec0b7d1949f)\r\n\r\n* #15779 was a partial backport done in https://github.com/dashpay/dash/pull/4511 as it relied on bitcoin#10973 (which is backported in this PR), as we fulfill that dependency in this PR, the rest of it has been backported as well, making it complete ",
          "user": {
            "login": "kwvg",
            "id": 63189531,
            "node_id": "MDQ6VXNlcjYzMTg5NTMx",
            "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kwvg",
            "html_url": "https://github.com/kwvg",
            "followers_url": "https://api.github.com/users/kwvg/followers",
            "following_url": "https://api.github.com/users/kwvg/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/kwvg/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/kwvg/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/kwvg/subscriptions",
            "organizations_url": "https://api.github.com/users/kwvg/orgs",
            "repos_url": "https://api.github.com/users/kwvg/repos",
            "events_url": "https://api.github.com/users/kwvg/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/kwvg/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 3475771172,
              "node_id": "LA_kwDOASdLgs7PLA8k",
              "url": "https://api.github.com/repos/dashpay/dash/labels/Bitcoin%20Backport",
              "name": "Bitcoin Backport",
              "description": "",
              "color": "d93f0b",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "COLLABORATOR",
          "milestone": {
            "url": "https://api.github.com/repos/dashpay/dash/milestones/28",
            "html_url": "https://github.com/dashpay/dash/milestone/28",
            "labels_url": "https://api.github.com/repos/dashpay/dash/milestones/28/labels",
            "id": 6582425,
            "node_id": "MDk6TWlsZXN0b25lNjU4MjQyNQ==",
            "number": 28,
            "state": "closed",
            "title": "18",
            "description": "https://github.com/dashpay/dash/issues/4211",
            "creator": {
              "login": "PastaPastaPasta",
              "id": 6443210,
              "node_id": "MDQ6VXNlcjY0NDMyMTA=",
              "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/PastaPastaPasta",
              "html_url": "https://github.com/PastaPastaPasta",
              "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
              "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
              "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
              "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
              "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 2,
            "closed_issues": 617,
            "created_at": "2021-03-23T15:57:06Z",
            "updated_at": "2023-04-10T15:43:17Z",
            "closed_at": "2022-12-28T18:52:24Z",
            "due_on": "2022-05-25T07:00:00Z"
          },
          "locked": false,
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/dashpay/dash/pulls/4558",
            "html_url": "https://github.com/dashpay/dash/pull/4558",
            "diff_url": "https://github.com/dashpay/dash/pull/4558.diff",
            "patch_url": "https://github.com/dashpay/dash/pull/4558.patch"
          },
          "closed_at": "2021-11-15T21:28:59Z",
          "created_at": "2021-11-01T05:11:40Z",
          "updated_at": "2023-07-18T11:40:36Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 5547410004,
      "node_id": "REFE_lADOABII584OvEFhzwAAAAFKpsJU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5547410004",
      "actor": {
        "login": "kwvg",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kwvg",
        "html_url": "https://github.com/kwvg",
        "followers_url": "https://api.github.com/users/kwvg/followers",
        "following_url": "https://api.github.com/users/kwvg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kwvg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kwvg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kwvg/subscriptions",
        "organizations_url": "https://api.github.com/users/kwvg/orgs",
        "repos_url": "https://api.github.com/users/kwvg/repos",
        "events_url": "https://api.github.com/users/kwvg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kwvg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "ab7f283b5d4b5c4a474c3c40964fd5435a510e4f",
      "commit_url": "https://api.github.com/repos/kwvg/dash/commits/ab7f283b5d4b5c4a474c3c40964fd5435a510e4f",
      "created_at": "2021-11-01T08:27:25Z"
    },
    {
      "event": "referenced",
      "id": 5547664691,
      "node_id": "REFE_lADOABII584OvEFhzwAAAAFKqqUz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5547664691",
      "actor": {
        "login": "kwvg",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kwvg",
        "html_url": "https://github.com/kwvg",
        "followers_url": "https://api.github.com/users/kwvg/followers",
        "following_url": "https://api.github.com/users/kwvg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kwvg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kwvg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kwvg/subscriptions",
        "organizations_url": "https://api.github.com/users/kwvg/orgs",
        "repos_url": "https://api.github.com/users/kwvg/repos",
        "events_url": "https://api.github.com/users/kwvg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kwvg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "528698a47541c1d51e1b1749e51b08278eee436e",
      "commit_url": "https://api.github.com/repos/kwvg/dash/commits/528698a47541c1d51e1b1749e51b08278eee436e",
      "created_at": "2021-11-01T09:19:44Z"
    },
    {
      "event": "referenced",
      "id": 5548320325,
      "node_id": "REFE_lADOABII584OvEFhzwAAAAFKtKZF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5548320325",
      "actor": {
        "login": "kwvg",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kwvg",
        "html_url": "https://github.com/kwvg",
        "followers_url": "https://api.github.com/users/kwvg/followers",
        "following_url": "https://api.github.com/users/kwvg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kwvg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kwvg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kwvg/subscriptions",
        "organizations_url": "https://api.github.com/users/kwvg/orgs",
        "repos_url": "https://api.github.com/users/kwvg/repos",
        "events_url": "https://api.github.com/users/kwvg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kwvg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "50a3c20f5065a26f74061957208282c2e1c01400",
      "commit_url": "https://api.github.com/repos/kwvg/dash/commits/50a3c20f5065a26f74061957208282c2e1c01400",
      "created_at": "2021-11-01T11:26:59Z"
    },
    {
      "event": "referenced",
      "id": 5549714470,
      "node_id": "REFE_lADOABII584OvEFhzwAAAAFKyewm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5549714470",
      "actor": {
        "login": "kwvg",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kwvg",
        "html_url": "https://github.com/kwvg",
        "followers_url": "https://api.github.com/users/kwvg/followers",
        "following_url": "https://api.github.com/users/kwvg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kwvg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kwvg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kwvg/subscriptions",
        "organizations_url": "https://api.github.com/users/kwvg/orgs",
        "repos_url": "https://api.github.com/users/kwvg/repos",
        "events_url": "https://api.github.com/users/kwvg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kwvg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "ee24b4ca9e5597ee30471d9a5973e9b4a7cb4704",
      "commit_url": "https://api.github.com/repos/kwvg/dash/commits/ee24b4ca9e5597ee30471d9a5973e9b4a7cb4704",
      "created_at": "2021-11-01T15:32:35Z"
    },
    {
      "event": "referenced",
      "id": 5550868046,
      "node_id": "REFE_lADOABII584OvEFhzwAAAAFK24ZO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5550868046",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "75fda781df96f5f7d7469a56cb8a7d18f590c76f",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/75fda781df96f5f7d7469a56cb8a7d18f590c76f",
      "created_at": "2021-11-01T19:00:19Z"
    },
    {
      "event": "referenced",
      "id": 5550871395,
      "node_id": "REFE_lADOABII584OvEFhzwAAAAFK25Nj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5550871395",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "051bdef7f5950a5c56134b7c1ac002da281ff397",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/051bdef7f5950a5c56134b7c1ac002da281ff397",
      "created_at": "2021-11-01T19:00:55Z"
    },
    {
      "event": "referenced",
      "id": 5559387148,
      "node_id": "REFE_lADOABII584OvEFhzwAAAAFLXYQM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5559387148",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "48826b429d65c9a70ea47c36cb71f68959f9caa4",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/48826b429d65c9a70ea47c36cb71f68959f9caa4",
      "created_at": "2021-11-03T03:49:31Z"
    },
    {
      "event": "referenced",
      "id": 5566121727,
      "node_id": "REFE_lADOABII584OvEFhzwAAAAFLxEb_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5566121727",
      "actor": {
        "login": "kwvg",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kwvg",
        "html_url": "https://github.com/kwvg",
        "followers_url": "https://api.github.com/users/kwvg/followers",
        "following_url": "https://api.github.com/users/kwvg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kwvg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kwvg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kwvg/subscriptions",
        "organizations_url": "https://api.github.com/users/kwvg/orgs",
        "repos_url": "https://api.github.com/users/kwvg/repos",
        "events_url": "https://api.github.com/users/kwvg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kwvg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "49a8b953bcc105a3bd88751787fcb9a24ca83cfb",
      "commit_url": "https://api.github.com/repos/kwvg/dash/commits/49a8b953bcc105a3bd88751787fcb9a24ca83cfb",
      "created_at": "2021-11-04T04:28:48Z"
    },
    {
      "event": "referenced",
      "id": 5566164966,
      "node_id": "REFE_lADOABII584OvEFhzwAAAAFLxO_m",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5566164966",
      "actor": {
        "login": "kwvg",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kwvg",
        "html_url": "https://github.com/kwvg",
        "followers_url": "https://api.github.com/users/kwvg/followers",
        "following_url": "https://api.github.com/users/kwvg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kwvg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kwvg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kwvg/subscriptions",
        "organizations_url": "https://api.github.com/users/kwvg/orgs",
        "repos_url": "https://api.github.com/users/kwvg/repos",
        "events_url": "https://api.github.com/users/kwvg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kwvg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "af9baa6544dcb01becc6ef51f72857dfd0415ecc",
      "commit_url": "https://api.github.com/repos/kwvg/dash/commits/af9baa6544dcb01becc6ef51f72857dfd0415ecc",
      "created_at": "2021-11-04T04:49:20Z"
    },
    {
      "event": "referenced",
      "id": 5576107640,
      "node_id": "REFE_lADOABII584OvEFhzwAAAAFMXKZ4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5576107640",
      "actor": {
        "login": "malbit",
        "id": 35476352,
        "node_id": "MDQ6VXNlcjM1NDc2MzUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/35476352?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/malbit",
        "html_url": "https://github.com/malbit",
        "followers_url": "https://api.github.com/users/malbit/followers",
        "following_url": "https://api.github.com/users/malbit/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/malbit/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/malbit/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/malbit/subscriptions",
        "organizations_url": "https://api.github.com/users/malbit/orgs",
        "repos_url": "https://api.github.com/users/malbit/repos",
        "events_url": "https://api.github.com/users/malbit/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/malbit/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "8310ffb44edafbab138bb188ef95afed3da3b3c6",
      "commit_url": "https://api.github.com/repos/malbit/raptoreum/commits/8310ffb44edafbab138bb188ef95afed3da3b3c6",
      "created_at": "2021-11-05T18:34:03Z"
    },
    {
      "event": "referenced",
      "id": 5577811635,
      "node_id": "REFE_lADOABII584OvEFhzwAAAAFMdqaz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5577811635",
      "actor": {
        "login": "kwvg",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kwvg",
        "html_url": "https://github.com/kwvg",
        "followers_url": "https://api.github.com/users/kwvg/followers",
        "following_url": "https://api.github.com/users/kwvg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kwvg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kwvg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kwvg/subscriptions",
        "organizations_url": "https://api.github.com/users/kwvg/orgs",
        "repos_url": "https://api.github.com/users/kwvg/repos",
        "events_url": "https://api.github.com/users/kwvg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kwvg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "dcc6876fd8ae6340364e6c3b6b119b2f9fef3e03",
      "commit_url": "https://api.github.com/repos/kwvg/dash/commits/dcc6876fd8ae6340364e6c3b6b119b2f9fef3e03",
      "created_at": "2021-11-06T08:44:52Z"
    },
    {
      "event": "referenced",
      "id": 5614063794,
      "node_id": "REFE_lADOABII584OvEFhzwAAAAFOn9Cy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5614063794",
      "actor": {
        "login": "kwvg",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kwvg",
        "html_url": "https://github.com/kwvg",
        "followers_url": "https://api.github.com/users/kwvg/followers",
        "following_url": "https://api.github.com/users/kwvg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kwvg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kwvg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kwvg/subscriptions",
        "organizations_url": "https://api.github.com/users/kwvg/orgs",
        "repos_url": "https://api.github.com/users/kwvg/repos",
        "events_url": "https://api.github.com/users/kwvg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kwvg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "d2c184894682926fe83520857dc4e90cd76bbf5e",
      "commit_url": "https://api.github.com/repos/kwvg/dash/commits/d2c184894682926fe83520857dc4e90cd76bbf5e",
      "created_at": "2021-11-14T09:51:30Z"
    },
    {
      "event": "referenced",
      "id": 5614067480,
      "node_id": "REFE_lADOABII584OvEFhzwAAAAFOn98Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5614067480",
      "actor": {
        "login": "kwvg",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kwvg",
        "html_url": "https://github.com/kwvg",
        "followers_url": "https://api.github.com/users/kwvg/followers",
        "following_url": "https://api.github.com/users/kwvg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kwvg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kwvg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kwvg/subscriptions",
        "organizations_url": "https://api.github.com/users/kwvg/orgs",
        "repos_url": "https://api.github.com/users/kwvg/repos",
        "events_url": "https://api.github.com/users/kwvg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kwvg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "0ecb450232264f40d5e2323f5e6b4ac4e0861dae",
      "commit_url": "https://api.github.com/repos/kwvg/dash/commits/0ecb450232264f40d5e2323f5e6b4ac4e0861dae",
      "created_at": "2021-11-14T09:55:36Z"
    },
    {
      "event": "referenced",
      "id": 5614072997,
      "node_id": "REFE_lADOABII584OvEFhzwAAAAFOn_Sl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5614072997",
      "actor": {
        "login": "kwvg",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kwvg",
        "html_url": "https://github.com/kwvg",
        "followers_url": "https://api.github.com/users/kwvg/followers",
        "following_url": "https://api.github.com/users/kwvg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kwvg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kwvg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kwvg/subscriptions",
        "organizations_url": "https://api.github.com/users/kwvg/orgs",
        "repos_url": "https://api.github.com/users/kwvg/repos",
        "events_url": "https://api.github.com/users/kwvg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kwvg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "721458dc3954824faae9af63a62f958961015ad5",
      "commit_url": "https://api.github.com/repos/kwvg/dash/commits/721458dc3954824faae9af63a62f958961015ad5",
      "created_at": "2021-11-14T10:01:48Z"
    },
    {
      "event": "referenced",
      "id": 5614074068,
      "node_id": "REFE_lADOABII584OvEFhzwAAAAFOn_jU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5614074068",
      "actor": {
        "login": "kwvg",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kwvg",
        "html_url": "https://github.com/kwvg",
        "followers_url": "https://api.github.com/users/kwvg/followers",
        "following_url": "https://api.github.com/users/kwvg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kwvg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kwvg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kwvg/subscriptions",
        "organizations_url": "https://api.github.com/users/kwvg/orgs",
        "repos_url": "https://api.github.com/users/kwvg/repos",
        "events_url": "https://api.github.com/users/kwvg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kwvg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "438c93bd9a285fb07598ea58603abb0531f48429",
      "commit_url": "https://api.github.com/repos/kwvg/dash/commits/438c93bd9a285fb07598ea58603abb0531f48429",
      "created_at": "2021-11-14T10:03:01Z"
    },
    {
      "event": "referenced",
      "id": 5620988435,
      "node_id": "REFE_lADOABII584OvEFhzwAAAAFPCXoT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5620988435",
      "actor": {
        "login": "UdjinM6",
        "id": 1935069,
        "node_id": "MDQ6VXNlcjE5MzUwNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1935069?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/UdjinM6",
        "html_url": "https://github.com/UdjinM6",
        "followers_url": "https://api.github.com/users/UdjinM6/followers",
        "following_url": "https://api.github.com/users/UdjinM6/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/UdjinM6/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/UdjinM6/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/UdjinM6/subscriptions",
        "organizations_url": "https://api.github.com/users/UdjinM6/orgs",
        "repos_url": "https://api.github.com/users/UdjinM6/repos",
        "events_url": "https://api.github.com/users/UdjinM6/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/UdjinM6/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "a3a8bfee08001a1995b00165340bef72fa3e5c86",
      "commit_url": "https://api.github.com/repos/dashpay/dash/commits/a3a8bfee08001a1995b00165340bef72fa3e5c86",
      "created_at": "2021-11-15T21:29:09Z"
    },
    {
      "event": "referenced",
      "id": 5640695074,
      "node_id": "REFE_lADOABII584OvEFhzwAAAAFQNi0i",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5640695074",
      "actor": {
        "login": "pravblockc",
        "id": 51935684,
        "node_id": "MDQ6VXNlcjUxOTM1Njg0",
        "avatar_url": "https://avatars.githubusercontent.com/u/51935684?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pravblockc",
        "html_url": "https://github.com/pravblockc",
        "followers_url": "https://api.github.com/users/pravblockc/followers",
        "following_url": "https://api.github.com/users/pravblockc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pravblockc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pravblockc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pravblockc/subscriptions",
        "organizations_url": "https://api.github.com/users/pravblockc/orgs",
        "repos_url": "https://api.github.com/users/pravblockc/repos",
        "events_url": "https://api.github.com/users/pravblockc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pravblockc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "a7a32011d389134172cfe10b15a8dcdd6ece9040",
      "commit_url": "https://api.github.com/repos/pravblockc/dash/commits/a7a32011d389134172cfe10b15a8dcdd6ece9040",
      "created_at": "2021-11-18T18:27:55Z"
    },
    {
      "event": "referenced",
      "id": 5640695414,
      "node_id": "REFE_lADOABII584OvEFhzwAAAAFQNi52",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5640695414",
      "actor": {
        "login": "pravblockc",
        "id": 51935684,
        "node_id": "MDQ6VXNlcjUxOTM1Njg0",
        "avatar_url": "https://avatars.githubusercontent.com/u/51935684?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pravblockc",
        "html_url": "https://github.com/pravblockc",
        "followers_url": "https://api.github.com/users/pravblockc/followers",
        "following_url": "https://api.github.com/users/pravblockc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pravblockc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pravblockc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pravblockc/subscriptions",
        "organizations_url": "https://api.github.com/users/pravblockc/orgs",
        "repos_url": "https://api.github.com/users/pravblockc/repos",
        "events_url": "https://api.github.com/users/pravblockc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pravblockc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "bd6dfe8e34f1b8cd2b62dbf8ed0f9001b4692425",
      "commit_url": "https://api.github.com/repos/pravblockc/dash/commits/bd6dfe8e34f1b8cd2b62dbf8ed0f9001b4692425",
      "created_at": "2021-11-18T18:27:59Z"
    },
    {
      "event": "locked",
      "id": 5778589078,
      "node_id": "LOE_lADOABII584OvEFhzwAAAAFYbkWW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5778589078",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-16T14:06:43Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137120520",
      "pull_request_review_id": 60747312,
      "id": 137120520,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNzEyMDUyMA==",
      "diff_hunk": "@@ -28,6 +99,23 @@ class ChainImpl : public Chain\n         return std::move(result);\n     }\n     std::unique_ptr<Chain::LockedState> assumeLocked() override { return MakeUnique<LockedStateImpl>(); }\n+    bool findBlock(const uint256& hash, CBlock* block, int64_t* time) override\n+    {\n+        LOCK(cs_main);\n+        auto it = ::mapBlockIndex.find(hash);\n+        if (it == ::mapBlockIndex.end()) {\n+            return false;\n+        }\n+        if (block) {\n+            if (!ReadBlockFromDisk(*block, it->second, Params().GetConsensus())) {",
      "path": "src/ipc/local/bitcoind.cpp",
      "position": null,
      "original_position": 96,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "c1194635c663536a5140beb4b59f634e4ca09110",
      "in_reply_to_id": null,
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe `block && !ReadBlockFromDisk`",
      "created_at": "2017-09-05T21:32:14Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r137120520",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137120520"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 178,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137124189",
      "pull_request_review_id": 60747312,
      "id": 137124189,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNzEyNDE4OQ==",
      "diff_hunk": "@@ -23,6 +26,68 @@ class Chain\n     {\n     public:\n         virtual ~LockedState() {}\n+",
      "path": "src/ipc/interfaces.h",
      "position": null,
      "original_position": 15,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "c1194635c663536a5140beb4b59f634e4ca09110",
      "in_reply_to_id": null,
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe this would be a good place to use boost::option to simplify this API -- would be much clearer to get back `Some(Height) | Nothing` or `Some(Depth) | Nothing` than having semantics around if the invalid return is -1 or 0.\r\n",
      "created_at": "2017-09-05T21:50:38Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r137124189",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137124189"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 39,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137136281",
      "pull_request_review_id": 60747312,
      "id": 137136281,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNzEzNjI4MQ==",
      "diff_hunk": "@@ -887,7 +888,7 @@ bool AppInitBasicSetup()\n     return true;\n }\n \n-bool AppInitParameterInteraction()\n+bool AppInitParameterInteraction(ipc::Chain& ipc_chain, ipc::Chain::Clients& ipc_clients)",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "5269b56ec4e82d765098ba88ee0e3e79f5de1941",
      "in_reply_to_id": null,
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can we have something that wraps both ipc_chain and ipc_clients for passing in? Is there a reason to have them separate? I don't want to add another useless class, it just seems they are always passed around together & are created together.",
      "created_at": "2017-09-05T23:02:42Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r137136281",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137136281"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 885,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137139176",
      "pull_request_review_id": 60747312,
      "id": 137139176,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEzNzEzOTE3Ng==",
      "diff_hunk": "@@ -14,6 +14,26 @@ class Chain\n public:\n     virtual ~Chain() {}\n \n+    //! Interface for querying locked chain state, used by legacy code that\n+    //! assumes state won't change between calls. New code should avoid using\n+    //! the LockedState interface and instead call higher-level Chain methods\n+    //! that return more information so the chain doesn't need to stay locked\n+    //! between calls.\n+    class LockedState",
      "path": "src/ipc/interfaces.h",
      "position": null,
      "original_position": 9,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "e26e00bd3f53435ecd580e3f1f56ef4fd45bcfc1",
      "in_reply_to_id": null,
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: semantics of name LockedState is maybe a bit clearer as ChainStateLock?",
      "created_at": "2017-09-05T23:22:48Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r137139176",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/137139176"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 35,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/140299282",
      "pull_request_review_id": 64351645,
      "id": 140299282,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MDI5OTI4Mg==",
      "diff_hunk": "@@ -887,7 +888,7 @@ bool AppInitBasicSetup()\n     return true;\n }\n \n-bool AppInitParameterInteraction()\n+bool AppInitParameterInteraction(ipc::Chain& ipc_chain, ipc::Chain::Clients& ipc_clients)",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "5269b56ec4e82d765098ba88ee0e3e79f5de1941",
      "in_reply_to_id": 137136281,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Can we have something that wraps both ipc_chain and ipc_clients for passing in? Is there a reason to have them separate? I don't want to add another useless class, it just seems they are always passed around together & are created together.\r\n\r\nGood suggestion. I wrapped these in the InitInterfaces struct which simplified some things.",
      "created_at": "2017-09-21T16:53:36Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r140299282",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/140299282"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 885,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/140299357",
      "pull_request_review_id": 64351645,
      "id": 140299357,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MDI5OTM1Nw==",
      "diff_hunk": "@@ -14,6 +14,26 @@ class Chain\n public:\n     virtual ~Chain() {}\n \n+    //! Interface for querying locked chain state, used by legacy code that\n+    //! assumes state won't change between calls. New code should avoid using\n+    //! the LockedState interface and instead call higher-level Chain methods\n+    //! that return more information so the chain doesn't need to stay locked\n+    //! between calls.\n+    class LockedState",
      "path": "src/ipc/interfaces.h",
      "position": null,
      "original_position": 9,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "e26e00bd3f53435ecd580e3f1f56ef4fd45bcfc1",
      "in_reply_to_id": 137139176,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> nit: semantics of name LockedState is maybe a bit clearer as ChainStateLock?\r\n\r\nThis is now named Chain::Lock, which hopefully is clearer. I kind of wanted to chose a shorter name because locked_chain variables so commonly used in [https://github.com/ryanofsky/bitcoin/blob/pr/wipc-sep/src/wallet/wallet.cpp](wallet.cpp) after this.",
      "created_at": "2017-09-21T16:53:51Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r140299357",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/140299357"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 35,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/140299394",
      "pull_request_review_id": 64351645,
      "id": 140299394,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MDI5OTM5NA==",
      "diff_hunk": "@@ -28,6 +99,23 @@ class ChainImpl : public Chain\n         return std::move(result);\n     }\n     std::unique_ptr<Chain::LockedState> assumeLocked() override { return MakeUnique<LockedStateImpl>(); }\n+    bool findBlock(const uint256& hash, CBlock* block, int64_t* time) override\n+    {\n+        LOCK(cs_main);\n+        auto it = ::mapBlockIndex.find(hash);\n+        if (it == ::mapBlockIndex.end()) {\n+            return false;\n+        }\n+        if (block) {\n+            if (!ReadBlockFromDisk(*block, it->second, Params().GetConsensus())) {",
      "path": "src/ipc/local/bitcoind.cpp",
      "position": null,
      "original_position": 96,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "c1194635c663536a5140beb4b59f634e4ca09110",
      "in_reply_to_id": 137120520,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Maybe block && !ReadBlockFromDisk\r\n\r\nThanks, done in f98a13387d8c409153748996a64eb6051cfecfec",
      "created_at": "2017-09-21T16:54:02Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r140299394",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/140299394"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 178,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/140603814",
      "pull_request_review_id": 64351645,
      "id": 140603814,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0MDYwMzgxNA==",
      "diff_hunk": "@@ -23,6 +26,68 @@ class Chain\n     {\n     public:\n         virtual ~LockedState() {}\n+",
      "path": "src/ipc/interfaces.h",
      "position": null,
      "original_position": 15,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "c1194635c663536a5140beb4b59f634e4ca09110",
      "in_reply_to_id": 137124189,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Maybe this would be a good place to use boost::option to simplify this API -- would be much clearer to get back Some(Height) | Nothing or Some(Depth) | Nothing than having semantics around if the invalid return is -1 or 0.\r\n\r\nDone in 4b2ae4761c9e75e2d39ce46671d4562b28e54e6f. I'm not sure if it is a simplification, but it is definitely safer and probably clearer. Leaving it unsquashed for now, since there might be differing opinions.",
      "created_at": "2017-09-22T21:47:15Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r140603814",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/140603814"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 39,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/180142594",
      "pull_request_review_id": 110512280,
      "id": 180142594,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MDE0MjU5NA==",
      "diff_hunk": "@@ -0,0 +1,438 @@\n+#include <interfaces/chain.h>\n+\n+#include <amount.h>\n+#include <chain.h>\n+#include <chainparams.h>\n+#include <interfaces/handler.h>\n+#include <net.h>\n+#include <policy/feerate.h>\n+#include <policy/policy.h>\n+#include <policy/rbf.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <protocol.h>\n+#include <rpc/mining.h>\n+#include <rpc/protocol.h>\n+#include <rpc/server.h>\n+#include <sync.h>\n+#include <timedata.h>\n+#include <txmempool.h>\n+#include <ui_interface.h>\n+#include <uint256.h>\n+#include <univalue.h>\n+#include <util.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+#ifdef ENABLE_WALLET\n+#include <wallet/fees.h>\n+#include <wallet/wallet.h>\n+#define CHECK_WALLET(x) x\n+#else\n+#define CHECK_WALLET(x) throw std::logic_error(\"Wallet function called in non-wallet build.\")\n+#endif\n+\n+#include <algorithm>\n+#include <future>\n+#include <map>\n+#include <memory>",
      "path": "src/interfaces/chain.cpp",
      "position": 28,
      "original_position": 41,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "419308f3c8cf1b7fff0bd02de8522280ad91a93b",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```\r\nInclude(s) from src/interfaces/chain.h duplicated in src/interfaces/chain.cpp:\r\n#include <memory>\r\nInclude(s) from src/interfaces/wallet.h duplicated in src/interfaces/wallet.cpp:\r\n#include <memory>\r\n#include <string>\r\n#include <utility>\r\n#include <vector>\r\nInclude(s) from src/wallet/init.h duplicated in src/wallet/init.cpp:\r\n#include <walletinitinterface.h>\r\n^---- failure generated from contrib/devtools/lint-includes.sh",
      "created_at": "2018-04-09T15:54:33Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r180142594",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/180142594"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 33,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/180375204",
      "pull_request_review_id": 110782252,
      "id": 180375204,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MDM3NTIwNA==",
      "diff_hunk": "@@ -0,0 +1,438 @@\n+#include <interfaces/chain.h>\n+\n+#include <amount.h>\n+#include <chain.h>\n+#include <chainparams.h>\n+#include <interfaces/handler.h>\n+#include <net.h>\n+#include <policy/feerate.h>\n+#include <policy/policy.h>\n+#include <policy/rbf.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <protocol.h>\n+#include <rpc/mining.h>\n+#include <rpc/protocol.h>\n+#include <rpc/server.h>\n+#include <sync.h>\n+#include <timedata.h>\n+#include <txmempool.h>\n+#include <ui_interface.h>\n+#include <uint256.h>\n+#include <univalue.h>\n+#include <util.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+#ifdef ENABLE_WALLET\n+#include <wallet/fees.h>\n+#include <wallet/wallet.h>\n+#define CHECK_WALLET(x) x\n+#else\n+#define CHECK_WALLET(x) throw std::logic_error(\"Wallet function called in non-wallet build.\")\n+#endif\n+\n+#include <algorithm>\n+#include <future>\n+#include <map>\n+#include <memory>",
      "path": "src/interfaces/chain.cpp",
      "position": 28,
      "original_position": 41,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "419308f3c8cf1b7fff0bd02de8522280ad91a93b",
      "in_reply_to_id": 180142594,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> failure generated from contrib/devtools/lint-includes.sh\r\n\r\nI'll try to submit a pr to simplify the developer guideline and this lint check. This check is incompatible with the [iwyu tool](https://github.com/include-what-you-use/include-what-you-use/blob/master/docs/WhyIWYU.md), and I think \"include what you use\" is a better and simpler policy than \"include what you use most of the time but not if the same include line appears in a different file\"",
      "created_at": "2018-04-10T10:45:55Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r180375204",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/180375204"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 33,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/180412881",
      "pull_request_review_id": 110826150,
      "id": 180412881,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MDQxMjg4MQ==",
      "diff_hunk": "@@ -0,0 +1,438 @@\n+#include <interfaces/chain.h>\n+\n+#include <amount.h>\n+#include <chain.h>\n+#include <chainparams.h>\n+#include <interfaces/handler.h>\n+#include <net.h>\n+#include <policy/feerate.h>\n+#include <policy/policy.h>\n+#include <policy/rbf.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <protocol.h>\n+#include <rpc/mining.h>\n+#include <rpc/protocol.h>\n+#include <rpc/server.h>\n+#include <sync.h>\n+#include <timedata.h>\n+#include <txmempool.h>\n+#include <ui_interface.h>\n+#include <uint256.h>\n+#include <univalue.h>\n+#include <util.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+#ifdef ENABLE_WALLET\n+#include <wallet/fees.h>\n+#include <wallet/wallet.h>\n+#define CHECK_WALLET(x) x\n+#else\n+#define CHECK_WALLET(x) throw std::logic_error(\"Wallet function called in non-wallet build.\")\n+#endif\n+\n+#include <algorithm>\n+#include <future>\n+#include <map>\n+#include <memory>",
      "path": "src/interfaces/chain.cpp",
      "position": 28,
      "original_position": 41,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "419308f3c8cf1b7fff0bd02de8522280ad91a93b",
      "in_reply_to_id": 180142594,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@ryanofsky Agree with you here. I merged that pull request because it had some acks and no nack, afaics. I am happy to ACK a pull that adjusts the developer guidelines and removes the lint check.",
      "created_at": "2018-04-10T13:07:17Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r180412881",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/180412881"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 33,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185077211",
      "pull_request_review_id": 116397255,
      "id": 185077211,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NTA3NzIxMQ==",
      "diff_hunk": "@@ -144,7 +144,9 @@ void TestGUI()\n     for (int i = 0; i < 5; ++i) {\n         test.CreateAndProcessBlock({}, GetScriptForRawPubKey(test.coinbaseKey.GetPubKey()));\n     }\n-    CWallet wallet(\"mock\", WalletDatabase::CreateMock());\n+    auto node = interfaces::MakeNode();\n+    node->parseParameters(0, nullptr);\n+    CWallet wallet(&node->getChain(), \"mock\", WalletDatabase::CreateMock());",
      "path": "src/qt/test/wallettests.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "a0279e40745dfb8692e92c5cac0848a25b37f930",
      "in_reply_to_id": null,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "(in https://github.com/bitcoin/bitcoin/pull/10973/commits/a0279e40745dfb8692e92c5cac0848a25b37f930)\r\n\r\nI think we'll need to make an equivalent change in `addressbooktests.cpp` as well.",
      "created_at": "2018-04-30T18:58:14Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r185077211",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185077211"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 149,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185320554",
      "pull_request_review_id": 116397255,
      "id": 185320554,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NTMyMDU1NA==",
      "diff_hunk": "@@ -24,6 +30,62 @@ class Chain\n     {\n     public:\n         virtual ~Lock() {}\n+\n+        //! Get current chain height, not including genesis block (returns 0 if\n+        //! chain only contains genesis block, nothing if chain does not contain\n+        //! any blocks).\n+        virtual Optional<int> getHeight() = 0;\n+\n+        //! Get block height above genesis block. Returns 0 for genesis block,\n+        //! for following block, and so on. Returns nothing for a block not",
      "path": "src/interfaces/chain.h",
      "position": null,
      "original_position": 29,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "ba1e24b718d1db1c2ed06f88087e28994248b1c7",
      "in_reply_to_id": null,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "(in https://github.com/bitcoin/bitcoin/pull/10973/commits/ba1e24b718d1db1c2ed06f88087e28994248b1c7)\r\n\r\nShould be \"1 for following block ...\"?",
      "created_at": "2018-05-01T20:09:37Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r185320554",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185320554"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 50,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185321164",
      "pull_request_review_id": 116397255,
      "id": 185321164,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NTMyMTE2NA==",
      "diff_hunk": "@@ -24,6 +30,62 @@ class Chain\n     {\n     public:\n         virtual ~Lock() {}\n+\n+        //! Get current chain height, not including genesis block (returns 0 if\n+        //! chain only contains genesis block, nothing if chain does not contain\n+        //! any blocks).\n+        virtual Optional<int> getHeight() = 0;\n+\n+        //! Get block height above genesis block. Returns 0 for genesis block,\n+        //! for following block, and so on. Returns nothing for a block not\n+        //! included in the current chain.\n+        virtual Optional<int> getBlockHeight(const uint256& hash) = 0;\n+\n+        //! Get block depth. Returns 1 for chain tip, 2 for preceding block, and\n+        //! so on. Returns 0 for a block not included in the current chain.\n+        virtual int getBlockDepth(const uint256& hash) = 0;\n+\n+        //! Get block hash.\n+        virtual uint256 getBlockHash(int height) = 0;\n+\n+        //! Get block time.\n+        virtual int64_t getBlockTime(int height) = 0;\n+\n+        //! Get block median time past.\n+        virtual int64_t getBlockMedianTimePast(int height) = 0;\n+\n+        //! Check if block is empty.\n+        virtual bool blockHasTransactions(int height) = 0;\n+\n+        //! Return height of earliest block in chain with timestamp equal or\n+        //! greater than the given time, or nothing if there is no block with a\n+        //! high enough timestamp.\n+        virtual Optional<int> findEarliestAtLeast(int64_t time) = 0;\n+\n+        //! Return height of last block in chain with timestamp less than the\n+        //! given, and height less than or equal to the given, or nothing if\n+        //! there is no such block.\n+        virtual Optional<int> findLastBefore(int64_t time, int start_height) = 0;\n+\n+        //! Return height of last block in the specified range which is pruned, or\n+        //! nothing if no block in the range is pruned. Range is inclusive.\n+        virtual Optional<int> findPruned(int start_height = 0, Optional<int> stop_height = nullopt) = 0;\n+\n+        //! Return height of the highest block on the chain that is an ancestor\n+        //! of the specified block. Also return the height of the specified\n+        //! block as an optinal output parameter.",
      "path": "src/interfaces/chain.h",
      "position": null,
      "original_position": 65,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "ba1e24b718d1db1c2ed06f88087e28994248b1c7",
      "in_reply_to_id": null,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "(in https://github.com/bitcoin/bitcoin/pull/10973/commits/ba1e24b718d1db1c2ed06f88087e28994248b1c7)\r\n\r\n> optinal",
      "created_at": "2018-05-01T20:12:15Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r185321164",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185321164"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 86,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185327873",
      "pull_request_review_id": 116397255,
      "id": 185327873,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NTMyNzg3Mw==",
      "diff_hunk": "@@ -3725,58 +3724,53 @@ UniValue rescanblockchain(const JSONRPCRequest& request)\n         throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet is currently rescanning. Abort existing rescan or wait.\");\n     }\n \n-    CBlockIndex *pindexStart = nullptr;\n-    CBlockIndex *pindexStop = nullptr;\n-    CBlockIndex *pChainTip = nullptr;\n+    int start_height = 0;\n+    Optional<int> stop_height;\n+    Optional<int> tip_height;\n+    uint256 start_block, stop_block;\n     {\n         auto locked_chain = pwallet->chain().lock();\n-        pindexStart = chainActive.Genesis();\n-        pChainTip = chainActive.Tip();\n+        tip_height = locked_chain->getHeight();\n \n         if (!request.params[0].isNull()) {\n-            pindexStart = chainActive[request.params[0].get_int()];\n-            if (!pindexStart) {\n+            start_height = request.params[0].get_int();\n+            if (start_height < 0 || !tip_height || start_height > *tip_height) {\n                 throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid start_height\");\n             }\n         }\n \n         if (!request.params[1].isNull()) {\n-            pindexStop = chainActive[request.params[1].get_int()];\n-            if (!pindexStop) {\n+            stop_height = request.params[1].get_int();\n+            if (*stop_height < 0 || !tip_height || *stop_height > *tip_height) {\n                 throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid stop_height\");\n             }\n-            else if (pindexStop->nHeight < pindexStart->nHeight) {\n+            else if (*stop_height < start_height) {\n                 throw JSONRPCError(RPC_INVALID_PARAMETER, \"stop_height must be greater than start_height\");\n             }\n         }\n-    }\n \n-    // We can't rescan beyond non-pruned blocks, stop and throw an error\n-    if (fPruneMode) {\n-        auto locked_chain = pwallet->chain().lock();\n-        CBlockIndex *block = pindexStop ? pindexStop : pChainTip;\n-        while (block && block->nHeight >= pindexStart->nHeight) {\n-            if (!(block->nStatus & BLOCK_HAVE_DATA)) {\n-                throw JSONRPCError(RPC_MISC_ERROR, \"Can't rescan beyond pruned data. Use RPC call getblockchaininfo to determine your pruned height.\");\n-            }\n-            block = block->pprev;\n+        // We can't rescan beyond non-pruned blocks, stop and throw an error\n+        if (locked_chain->findPruned(start_height, stop_height)) {\n+            throw JSONRPCError(RPC_MISC_ERROR, \"Can't rescan beyond pruned data. Use RPC call getblockchaininfo to determine your pruned height.\");\n+        }\n+\n+        if (tip_height) {\n+            start_block = locked_chain->getBlockHash(start_height);\n+            stop_block = locked_chain->getBlockHash(stop_height ? *stop_height : *tip_height);\n         }\n     }\n \n-    CBlockIndex *stopBlock = pwallet->ScanForWalletTransactions(pindexStart, pindexStop, reserver, true);\n-    if (!stopBlock) {\n+    if (pwallet->ScanForWalletTransactions(start_block, stop_block, reserver, true).IsNull()) {\n         if (pwallet->IsAbortingRescan()) {\n             throw JSONRPCError(RPC_MISC_ERROR, \"Rescan aborted.\");\n         }\n-        // if we got a nullptr returned, ScanForWalletTransactions did rescan up to the requested stopindex\n-        stopBlock = pindexStop ? pindexStop : pChainTip;\n     }\n     else {\n         throw JSONRPCError(RPC_MISC_ERROR, \"Rescan failed. Potentially corrupted data files.\");\n     }\n     UniValue response(UniValue::VOBJ);\n-    response.pushKV(\"start_height\", pindexStart->nHeight);\n-    response.pushKV(\"stop_height\", stopBlock->nHeight);\n+    response.pushKV(\"start_height\", start_height);\n+    response.pushKV(\"stop_height\", stop_height ? UniValue(*stop_height) : tip_height ? UniValue(*tip_height): UniValue());",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 158,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "ba1e24b718d1db1c2ed06f88087e28994248b1c7",
      "in_reply_to_id": null,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Are the `UniValue` calls necessary?",
      "created_at": "2018-05-01T20:40:33Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r185327873",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185327873"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3774,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185796547",
      "pull_request_review_id": 116397255,
      "id": 185796547,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NTc5NjU0Nw==",
      "diff_hunk": "@@ -1699,108 +1694,126 @@ int64_t CWallet::RescanFromTime(int64_t startTime, const WalletRescanReserver& r\n     // Find starting block. May be null if nCreateTime is greater than the\n     // highest blockchain timestamp, in which case there is nothing that needs\n     // to be scanned.\n-    CBlockIndex* startBlock = nullptr;\n+    uint256 start_block;\n     {\n         auto locked_chain = m_chain->lock();\n-        startBlock = chainActive.FindEarliestAtLeast(startTime - TIMESTAMP_WINDOW);\n-        LogPrintf(\"%s: Rescanning last %i blocks\\n\", __func__, startBlock ? chainActive.Height() - startBlock->nHeight + 1 : 0);\n-    }\n-\n-    if (startBlock) {\n-        const CBlockIndex* const failedBlock = ScanForWalletTransactions(startBlock, nullptr, reserver, update);\n-        if (failedBlock) {\n-            return failedBlock->GetBlockTimeMax() + TIMESTAMP_WINDOW + 1;\n+        const Optional<int> start_height = locked_chain->findEarliestAtLeast(startTime - TIMESTAMP_WINDOW);\n+        const Optional<int> tip_height = locked_chain->getHeight();\n+        LogPrintf(\"%s: Rescanning last %i blocks\\n\", __func__, tip_height && start_height ? *tip_height - *start_height + 1 : 0);\n+        if (start_height) start_block = locked_chain->getBlockHash(*start_height);\n+    }\n+\n+    if (!start_block.IsNull()) {\n+        uint256 failed_block = ScanForWalletTransactions(start_block, {} /* stop block */, reserver, update);\n+        if (!failed_block.IsNull()) {\n+            int64_t time_max;\n+            if (!m_chain->findBlock(failed_block, nullptr /* CBlock */, nullptr /* time */, &time_max)) {\n+                throw std::logic_error(\"ScanForWalletTransactions returned invalid block hash\");\n+            }\n+            return time_max + TIMESTAMP_WINDOW + 1;\n         }\n     }\n     return startTime;\n }\n \n /**\n- * Scan the block chain (starting in pindexStart) for transactions\n+ * Scan the block chain (starting in start_block) for transactions\n  * from or to us. If fUpdate is true, found transactions that already\n  * exist in the wallet will be updated.\n  *\n  * Returns null if scan was successful. Otherwise, if a complete rescan was not\n  * possible (due to pruning or corruption), returns pointer to the most recent\n  * block that could not be scanned.\n  *\n- * If pindexStop is not a nullptr, the scan will stop at the block-index\n- * defined by pindexStop\n+ * If stop_block is not null, the scan will stop at the block-index\n+ * defined by stop_block\n  *\n- * Caller needs to make sure pindexStop (and the optional pindexStart) are on\n+ * Caller needs to make sure stop_block (and the optional start_block) are on\n  * the main chain after to the addition of any new keys you want to detect\n  * transactions for.\n  */\n-CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlockIndex* pindexStop, const WalletRescanReserver &reserver, bool fUpdate)\n+uint256 CWallet::ScanForWalletTransactions(const uint256& start_block, const uint256& stop_block, const WalletRescanReserver &reserver, bool fUpdate)\n {\n     int64_t nNow = GetTime();\n     const CChainParams& chainParams = Params();\n \n     assert(reserver.isReserved());\n-    if (pindexStop) {\n-        assert(pindexStop->nHeight >= pindexStart->nHeight);\n-    }\n \n-    CBlockIndex* pindex = pindexStart;\n-    CBlockIndex* ret = nullptr;\n+    uint256 block_hash = start_block;\n+    uint256 ret;\n \n-    if (pindex) LogPrintf(\"Rescan started from block %d...\\n\", pindex->nHeight);\n+    LogPrintf(\"Rescan started from block %s...\\n\", start_block.ToString());\n \n     {\n         fAbortRescan = false;\n         ShowProgress(_(\"Rescanning...\"), 0); // show rescan progress in GUI as dialog or on splashscreen, if -rescan on startup\n-        CBlockIndex* tip = nullptr;\n+        uint256 tip_hash;\n+        Optional<int> block_height;\n         double dProgressStart;\n         double dProgressTip;\n         {\n             auto locked_chain = m_chain->lock();\n-            tip = chainActive.Tip();\n-            dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n-            dProgressTip = GuessVerificationProgress(chainParams.TxData(), tip);\n+            if (Optional<int> tip_height = locked_chain->getHeight()) {\n+                tip_hash = locked_chain->getBlockHash(*tip_height);\n+            }\n+            block_height = locked_chain->getBlockHeight(block_hash);\n+            dProgressStart = m_chain->guessVerificationProgress(block_hash);\n+            dProgressTip = m_chain->guessVerificationProgress(tip_hash);\n         }\n         double gvp = dProgressStart;\n-        while (pindex && !fAbortRescan)\n+        while (block_height && !fAbortRescan)\n         {\n-            if (pindex->nHeight % 100 == 0 && dProgressTip - dProgressStart > 0.0) {\n+            if (*block_height % 100 == 0 && dProgressTip - dProgressStart > 0.0) {\n                 ShowProgress(_(\"Rescanning...\"), std::max(1, std::min(99, (int)((gvp - dProgressStart) / (dProgressTip - dProgressStart) * 100))));\n             }\n             if (GetTime() >= nNow + 60) {\n                 nNow = GetTime();\n-                LogPrintf(\"Still rescanning. At block %d. Progress=%f\\n\", pindex->nHeight, gvp);\n+                LogPrintf(\"Still rescanning. At block %d. Progress=%f\\n\", *block_height, gvp);\n             }\n \n             CBlock block;\n-            if (ReadBlockFromDisk(block, pindex, Params().GetConsensus())) {\n+            if (m_chain->findBlock(block_hash, &block) && !block.IsNull()) {\n                 auto locked_chain = m_chain->lock();\n                 LOCK(cs_wallet);\n-                if (pindex && !chainActive.Contains(pindex)) {\n+                if (!locked_chain->getBlockHeight(block_hash)) {\n                     // Abort scan if current block is no longer active, to prevent\n-                    // marking transactions as coming from the wrong block.\n-                    ret = pindex;\n+                    // marking transac<tions as coming from the wrong block.",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 227,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "7f087936082170018b189f19adb7d789f4c2969d",
      "in_reply_to_id": null,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "(in https://github.com/bitcoin/bitcoin/pull/10973/commits/7f087936082170018b189f19adb7d789f4c2969d)\r\n> transac<tions",
      "created_at": "2018-05-03T13:28:04Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r185796547",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185796547"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1781,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185886977",
      "pull_request_review_id": 116397255,
      "id": 185886977,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NTg4Njk3Nw==",
      "diff_hunk": "@@ -286,8 +301,106 @@ class ChainImpl : public Chain\n         return MakeUnique<HandlerImpl>(notifications);\n     }\n     void waitForNotifications() override { SyncWithValidationInterfaceQueue(); }\n+    std::unique_ptr<Handler> handleRpc(const CRPCCommand& command) override;\n+\n+    //! Map of RPC method name to forwarder. If multiple clients provide\n+    //! implementations of the same RPC method, the RPC forwarder can dispatch\n+    //! between them.\n+    class RpcForwarder;\n+    std::map<Ref<const std::string>, RpcForwarder> m_rpc_forwarders;\n+};\n+\n+//! Forwarder for one RPC method.\n+class ChainImpl::RpcForwarder\n+{\n+public:\n+    RpcForwarder(const CRPCCommand& command) : m_command(command)\n+    {\n+        m_command.actor = [this](const JSONRPCRequest& request) { return forwardRequest(request); };\n+    }\n+\n+    bool registerForwarder() { return ::tableRPC.appendCommand(m_command.name, &m_command); }\n+\n+    void addCommand(const CRPCCommand& command) { m_commands.emplace_back(&command); }\n+\n+    void removeCommand(const CRPCCommand& command)\n+    {\n+        m_commands.erase(std::remove(m_commands.begin(), m_commands.end(), &command));\n+    }\n+\n+    UniValue forwardRequest(const JSONRPCRequest& request) const\n+    {\n+        // Simple forwarding of RPC requests. This just sends the request to the\n+        // first client that registered a handler for the RPC method. If the\n+        // handler throws a wallet not found exception, this will retry\n+        // forwarding to the next handler (if any).\n+        //\n+        // This forwarding mechanism could be made more efficient (peeking\n+        // inside the RPC request for wallet name and sending it directly to the\n+        // right handler), but right now all wallets are in-process so there is\n+        // only ever a single handler, and in the future it isn't clear if we\n+        // will want we want to keep forwarding RPCs at all (clients could just\n+        // listen for their own RPCs).\n+        for (auto it = m_commands.begin(); it != m_commands.end();) {",
      "path": "src/interfaces/chain.cpp",
      "position": null,
      "original_position": 82,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "7a6069a3c51582f32fa1ce9bed6c3c905b5bfd0c",
      "in_reply_to_id": null,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Any reason you don't just want to do \r\n```c++\r\nfor (const CRPCCommand* command : m_commands) { ... }\r\n```\r\nhere?",
      "created_at": "2018-05-03T17:56:10Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r185886977",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185886977"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 381,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185934311",
      "pull_request_review_id": 116397255,
      "id": 185934311,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NTkzNDMxMQ==",
      "diff_hunk": "@@ -296,6 +299,13 @@ class ChainImpl : public Chain\n     void initMessage(const std::string& message) override { ::uiInterface.InitMessage(message); }\n     void initWarning(const std::string& message) override { InitWarning(message); }\n     void initError(const std::string& message) override { InitError(message); }\n+    UniValue generateBlocks(std::shared_ptr<CReserveScript> coinbase_script,\n+        int num_blocks,\n+        uint64_t max_tries,\n+        bool keep_script) override\n+    {\n+        return ::generateBlocks(coinbase_script, num_blocks, max_tries, keep_script);",
      "path": "src/interfaces/chain.cpp",
      "position": null,
      "original_position": 26,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "604c567e3c39099d2dd62ead72804d6a584cf34a",
      "in_reply_to_id": null,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Seems like these instances of straight pass-through to some underlying function may be good cases for templated argument forwarding. I don't feel strongly either way, but maybe worth considering to cut down on interface duplication?\r\n\r\nI guess if the end objective is to come up with a cross-process interface, duplicating these arguments in the meantime is actually what we want to do.",
      "created_at": "2018-05-03T20:58:18Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r185934311",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/185934311"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 355,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186125434",
      "pull_request_review_id": 117658720,
      "id": 186125434,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjEyNTQzNA==",
      "diff_hunk": "@@ -50,6 +51,7 @@ class NodeImpl : public Node\n {\n     void parseParameters(int argc, const char* const argv[]) override\n     {\n+        m_interfaces.chain = interfaces::MakeChain();",
      "path": "src/interfaces/node.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "af8f8087699c30ec83995c54112955253bcaba84",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't understand why this is in `parseParameters()`, rather than a constructor for `NodeImpl`",
      "created_at": "2018-05-04T15:52:41Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r186125434",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186125434"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186132129",
      "pull_request_review_id": 117658720,
      "id": 186132129,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjEzMjEyOQ==",
      "diff_hunk": "@@ -0,0 +1,251 @@\n+#ifndef BITCOIN_INTERFACES_CHAIN_H\n+#define BITCOIN_INTERFACES_CHAIN_H\n+\n+#include <optional.h>               // For Optional and nullopt\n+#include <policy/rbf.h>             // For RBFTransactionState\n+#include <primitives/transaction.h> // For CTransactionRef\n+\n+#include <memory>\n+#include <stddef.h>\n+#include <stdint.h>\n+#include <string>\n+#include <vector>\n+\n+class CBlock;\n+class CRPCCommand;\n+class CReserveScript;\n+class CScheduler;\n+class CValidationState;\n+class UniValue;\n+class uint256;\n+struct CBlockLocator;\n+struct FeeCalculation;\n+\n+namespace interfaces {\n+\n+class Handler;\n+\n+//! Interface for giving wallet processes access to blockchain state.\n+class Chain\n+{\n+public:\n+    virtual ~Chain() {}\n+\n+    //! Interface for querying locked chain state, used by legacy code that\n+    //! assumes state won't change between calls. New code should avoid using\n+    //! the Lock interface and instead call higher-level Chain methods\n+    //! that return more information so the chain doesn't need to stay locked\n+    //! between calls.\n+    class Lock\n+    {\n+    public:\n+        virtual ~Lock() {}\n+\n+        //! Get current chain height, not including genesis block (returns 0 if\n+        //! chain only contains genesis block, nothing if chain does not contain\n+        //! any blocks).\n+        virtual Optional<int> getHeight() = 0;\n+\n+        //! Get block height above genesis block. Returns 0 for genesis block,\n+        //! for following block, and so on. Returns nothing for a block not\n+        //! included in the current chain.\n+        virtual Optional<int> getBlockHeight(const uint256& hash) = 0;\n+\n+        //! Get block depth. Returns 1 for chain tip, 2 for preceding block, and\n+        //! so on. Returns 0 for a block not included in the current chain.\n+        virtual int getBlockDepth(const uint256& hash) = 0;\n+\n+        //! Get block hash.\n+        virtual uint256 getBlockHash(int height) = 0;\n+\n+        //! Get block time.\n+        virtual int64_t getBlockTime(int height) = 0;\n+\n+        //! Get block median time past.\n+        virtual int64_t getBlockMedianTimePast(int height) = 0;\n+\n+        //! Check if block is empty.\n+        virtual bool blockHasTransactions(int height) = 0;\n+\n+        //! Return height of earliest block in chain with timestamp equal or\n+        //! greater than the given time, or nothing if there is no block with a\n+        //! high enough timestamp.\n+        virtual Optional<int> findEarliestAtLeast(int64_t time) = 0;\n+\n+        //! Return height of last block in chain with timestamp less than the\n+        //! given, and height less than or equal to the given, or nothing if\n+        //! there is no such block.\n+        virtual Optional<int> findLastBefore(int64_t time, int start_height) = 0;\n+\n+        //! Return height of last block in the specified range which is pruned, or\n+        //! nothing if no block in the range is pruned. Range is inclusive.\n+        virtual Optional<int> findPruned(int start_height = 0, Optional<int> stop_height = nullopt) = 0;\n+\n+        //! Return height of the highest block on the chain that is an ancestor\n+        //! of the specified block. Also return the height of the specified\n+        //! block as an optinal output parameter.\n+        virtual Optional<int> findFork(const uint256& hash, Optional<int>* height) = 0;\n+\n+        //! Return true if block hash points to the current chain tip, or to a\n+        //! possible descendant of the current chain tip that isn't currently\n+        //! connected.\n+        virtual bool isPotentialTip(const uint256& hash) = 0;\n+\n+        //! Get locator for the current chain tip.\n+        virtual CBlockLocator getLocator() = 0;\n+\n+        //! Return height of block on the chain using locator.\n+        virtual Optional<int> findLocatorFork(const CBlockLocator& locator) = 0;\n+\n+        //! Check if transaction will be final given chain height current time.\n+        virtual bool checkFinalTx(const CTransaction& tx) = 0;\n+\n+        //! Check whether segregated witness is enabled on the network.\n+        virtual bool isWitnessEnabled() = 0;\n+\n+        //! Add transaction to memory pool.\n+        virtual bool acceptToMemoryPool(CTransactionRef tx, CValidationState& state) = 0;\n+    };\n+\n+    //! Return Lock interface. Chain is locked when this is called, and\n+    //! unlocked when the returned interface is freed.\n+    virtual std::unique_ptr<Lock> lock(bool try_lock = false) = 0;\n+\n+    //! Return Lock interface assuming chain is already locked. This\n+    //! method is temporary and is only used in a few places to avoid changing\n+    //! behavior while code is transitioned to use the LockState interface.\n+    virtual std::unique_ptr<Lock> assumeLocked() = 0;\n+\n+    //! Return whether node has the block and optionally return block metadata or contents.\n+    virtual bool findBlock(const uint256& hash,\n+        CBlock* block = nullptr,\n+        int64_t* time = nullptr,\n+        int64_t* max_time = nullptr) = 0;\n+\n+    //! Estimate fraction of total transactions verified if blocks up to\n+    //! given height are verified.\n+    virtual double guessVerificationProgress(const uint256& block_hash) = 0;\n+\n+    //! Get virtual transaction size.\n+    virtual int64_t getVirtualTransactionSize(const CTransaction& tx) = 0;\n+\n+    //! Check if transaction is RBF opt in.\n+    virtual RBFTransactionState isRBFOptIn(const CTransaction& tx) = 0;\n+\n+    //! Check if transaction has descendants in mempool.\n+    virtual bool hasDescendantsInMempool(const uint256& txid) = 0;\n+\n+    //! Relay transaction.\n+    virtual bool relayTransaction(const uint256& txid) = 0;\n+\n+    //! Check if transaction is within chain limit.\n+    virtual bool transactionWithinChainLimit(const uint256& txid, size_t chain_limit) = 0;\n+\n+    //! Check chain limits.\n+    virtual bool checkChainLimits(CTransactionRef tx) = 0;\n+\n+    //! Estimate smart fee.\n+    virtual CFeeRate estimateSmartFee(int num_blocks, bool conservative, FeeCalculation* calc = nullptr) = 0;\n+\n+    //! Fee estimator max target.\n+    virtual int estimateMaxBlocks() = 0;\n+\n+    //! Pool min fee.\n+    virtual CFeeRate poolMinFee() = 0;\n+\n+    //! Check if pruning is enabled.\n+    virtual bool getPruneMode() = 0;\n+\n+    //! Check if p2p enabled.\n+    virtual bool p2pEnabled() = 0;\n+\n+    //! Get adjusted time.\n+    virtual int64_t getAdjustedTime() = 0;\n+\n+    //! Send init message.\n+    virtual void initMessage(const std::string& message) = 0;\n+\n+    //! Send init warning.\n+    virtual void initWarning(const std::string& message) = 0;\n+\n+    //! Send init error.\n+    virtual void initError(const std::string& message) = 0;\n+\n+    //! Generate blocks\n+    virtual UniValue generateBlocks(std::shared_ptr<CReserveScript> coinbase_script,\n+        int num_blocks,\n+        uint64_t max_tries,\n+        bool keep_script) = 0;\n+\n+    //! Parse confirm target.\n+    virtual unsigned int parseConfirmTarget(const UniValue& value) = 0;\n+\n+    //! Chain notifications.\n+    class Notifications\n+    {\n+    public:\n+        virtual ~Notifications() {}\n+        virtual void TransactionAddedToMempool(const CTransactionRef& tx) {}\n+        virtual void TransactionRemovedFromMempool(const CTransactionRef& ptx) {}\n+        virtual void BlockConnected(const CBlock& block,\n+            const uint256& block_hash,\n+            const std::vector<CTransactionRef>& tx_conflicted)\n+        {\n+        }\n+        virtual void BlockDisconnected(const CBlock& block) {}\n+        virtual void ChainStateFlushed(const CBlockLocator& locator) {}\n+        virtual void Inventory(const uint256& hash) {}\n+        virtual void ResendWalletTransactions(int64_t best_block_time) {}\n+    };\n+\n+    //! Register handler for notifications.\n+    virtual std::unique_ptr<Handler> handleNotifications(Notifications& notifications) = 0;\n+\n+    //! Wait for pending notifications to be handled.\n+    virtual void waitForNotifications() = 0;\n+\n+    //! Interface to let node manage chain clients (wallets, or maybe tools for\n+    //! monitoring and analysis in the future).\n+    class Client\n+    {\n+    public:\n+        virtual ~Client() {}\n+\n+        //! Register rpcs.\n+        virtual void registerRpcs() = 0;\n+\n+        //! Prepare for execution, loading any needed state.\n+        virtual bool prepare() = 0;\n+\n+        //! Start client execution and provide a scheduler. (Scheduler is",
      "path": "src/interfaces/chain.h",
      "position": null,
      "original_position": 220,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "af8f8087699c30ec83995c54112955253bcaba84",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think the `(Scheduler is ignored if client is out-of-process).` comment can be saved for #10102",
      "created_at": "2018-05-04T16:15:54Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r186132129",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186132129"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 220,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186174271",
      "pull_request_review_id": 117658720,
      "id": 186174271,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjE3NDI3MQ==",
      "diff_hunk": "@@ -0,0 +1,251 @@\n+#ifndef BITCOIN_INTERFACES_CHAIN_H\n+#define BITCOIN_INTERFACES_CHAIN_H\n+\n+#include <optional.h>               // For Optional and nullopt\n+#include <policy/rbf.h>             // For RBFTransactionState\n+#include <primitives/transaction.h> // For CTransactionRef\n+\n+#include <memory>\n+#include <stddef.h>\n+#include <stdint.h>\n+#include <string>\n+#include <vector>\n+\n+class CBlock;\n+class CRPCCommand;\n+class CReserveScript;\n+class CScheduler;\n+class CValidationState;\n+class UniValue;\n+class uint256;\n+struct CBlockLocator;\n+struct FeeCalculation;\n+\n+namespace interfaces {\n+\n+class Handler;\n+\n+//! Interface for giving wallet processes access to blockchain state.\n+class Chain\n+{\n+public:\n+    virtual ~Chain() {}\n+\n+    //! Interface for querying locked chain state, used by legacy code that\n+    //! assumes state won't change between calls. New code should avoid using\n+    //! the Lock interface and instead call higher-level Chain methods\n+    //! that return more information so the chain doesn't need to stay locked\n+    //! between calls.\n+    class Lock",
      "path": "src/interfaces/chain.h",
      "position": null,
      "original_position": 39,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "af8f8087699c30ec83995c54112955253bcaba84",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I find the name of this class quite confusing, since it's not actually a lock. How about renaming this to `LockedChain` and renaming `LockingStateImpl` to `ChainLockImpl`?",
      "created_at": "2018-05-04T18:16:35Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r186174271",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186174271"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 70,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186174854",
      "pull_request_review_id": 117658720,
      "id": 186174854,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjE3NDg1NA==",
      "diff_hunk": "@@ -3388,7 +3417,8 @@ UniValue fundrawtransaction(const JSONRPCRequest& request)\n     CAmount nFeeOut;\n     std::string strFailReason;\n \n-    if (!pwallet->FundTransaction(tx, nFeeOut, changePosition, strFailReason, lockUnspents, setSubtractFeeFromOutputs, coinControl)) {\n+    auto locked_chain = pwallet->chain().assumeLocked();  // Temporary. Removed in upcoming lock cleanup",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 782,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "af8f8087699c30ec83995c54112955253bcaba84",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "There are 4 of these `Temporary. Removed in upcoming lock cleanup` comments. Sorry if I missed the answer to this, but what's the plan for removing them?",
      "created_at": "2018-05-04T18:18:55Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r186174854",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186174854"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3420,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186179348",
      "pull_request_review_id": 117658720,
      "id": 186179348,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjE3OTM0OA==",
      "diff_hunk": "@@ -0,0 +1,251 @@\n+#ifndef BITCOIN_INTERFACES_CHAIN_H\n+#define BITCOIN_INTERFACES_CHAIN_H\n+\n+#include <optional.h>               // For Optional and nullopt\n+#include <policy/rbf.h>             // For RBFTransactionState\n+#include <primitives/transaction.h> // For CTransactionRef\n+\n+#include <memory>\n+#include <stddef.h>\n+#include <stdint.h>\n+#include <string>\n+#include <vector>\n+\n+class CBlock;\n+class CRPCCommand;\n+class CReserveScript;\n+class CScheduler;\n+class CValidationState;\n+class UniValue;\n+class uint256;\n+struct CBlockLocator;\n+struct FeeCalculation;\n+\n+namespace interfaces {\n+\n+class Handler;\n+\n+//! Interface for giving wallet processes access to blockchain state.\n+class Chain\n+{\n+public:\n+    virtual ~Chain() {}\n+\n+    //! Interface for querying locked chain state, used by legacy code that\n+    //! assumes state won't change between calls. New code should avoid using\n+    //! the Lock interface and instead call higher-level Chain methods\n+    //! that return more information so the chain doesn't need to stay locked\n+    //! between calls.\n+    class Lock\n+    {\n+    public:\n+        virtual ~Lock() {}\n+\n+        //! Get current chain height, not including genesis block (returns 0 if\n+        //! chain only contains genesis block, nothing if chain does not contain\n+        //! any blocks).\n+        virtual Optional<int> getHeight() = 0;\n+\n+        //! Get block height above genesis block. Returns 0 for genesis block,\n+        //! for following block, and so on. Returns nothing for a block not\n+        //! included in the current chain.\n+        virtual Optional<int> getBlockHeight(const uint256& hash) = 0;\n+\n+        //! Get block depth. Returns 1 for chain tip, 2 for preceding block, and\n+        //! so on. Returns 0 for a block not included in the current chain.\n+        virtual int getBlockDepth(const uint256& hash) = 0;\n+\n+        //! Get block hash.\n+        virtual uint256 getBlockHash(int height) = 0;\n+\n+        //! Get block time.\n+        virtual int64_t getBlockTime(int height) = 0;\n+\n+        //! Get block median time past.\n+        virtual int64_t getBlockMedianTimePast(int height) = 0;\n+\n+        //! Check if block is empty.\n+        virtual bool blockHasTransactions(int height) = 0;\n+\n+        //! Return height of earliest block in chain with timestamp equal or\n+        //! greater than the given time, or nothing if there is no block with a\n+        //! high enough timestamp.\n+        virtual Optional<int> findEarliestAtLeast(int64_t time) = 0;\n+\n+        //! Return height of last block in chain with timestamp less than the\n+        //! given, and height less than or equal to the given, or nothing if\n+        //! there is no such block.\n+        virtual Optional<int> findLastBefore(int64_t time, int start_height) = 0;\n+\n+        //! Return height of last block in the specified range which is pruned, or\n+        //! nothing if no block in the range is pruned. Range is inclusive.\n+        virtual Optional<int> findPruned(int start_height = 0, Optional<int> stop_height = nullopt) = 0;\n+\n+        //! Return height of the highest block on the chain that is an ancestor\n+        //! of the specified block. Also return the height of the specified\n+        //! block as an optinal output parameter.",
      "path": "src/interfaces/chain.h",
      "position": null,
      "original_position": 86,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "af8f8087699c30ec83995c54112955253bcaba84",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "s/optinal/optional",
      "created_at": "2018-05-04T18:35:39Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r186179348",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186179348"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 86,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186181022",
      "pull_request_review_id": 117658720,
      "id": 186181022,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjE4MTAyMg==",
      "diff_hunk": "@@ -698,7 +697,7 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n \n     /* Used by TransactionAddedToMemorypool/BlockConnected/Disconnected.\n      * Should be called with pindexBlock and posInBlock if this is for a transaction that is included in a block. */",
      "path": "src/wallet/wallet.h",
      "position": null,
      "original_position": 90,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "af8f8087699c30ec83995c54112955253bcaba84",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Comment is wrong. Needs to be updated to `Should be called with non-zero block_hash and posInBlock...`",
      "created_at": "2018-05-04T18:42:13Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r186181022",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186181022"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 699,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186181393",
      "pull_request_review_id": 117658720,
      "id": 186181393,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjE4MTM5Mw==",
      "diff_hunk": "@@ -744,7 +751,7 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n      *\n      * Protected by cs_main (see BlockUntilSyncedToCurrentChain)",
      "path": "src/wallet/wallet.h",
      "position": null,
      "original_position": 120,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "af8f8087699c30ec83995c54112955253bcaba84",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Remove comment",
      "created_at": "2018-05-04T18:43:37Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r186181393",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186181393"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 752,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186216539",
      "pull_request_review_id": 117658720,
      "id": 186216539,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjIxNjUzOQ==",
      "diff_hunk": "@@ -747,8 +756,9 @@ UniValue dumpwallet(const JSONRPCRequest& request)\n     // produce output\n     file << strprintf(\"# Wallet dump created by Bitcoin %s\\n\", CLIENT_BUILD);\n     file << strprintf(\"# * Created on %s\\n\", FormatISO8601DateTime(GetTime()));\n-    file << strprintf(\"# * Best block at time of backup was %i (%s),\\n\", chainActive.Height(), chainActive.Tip()->GetBlockHash().ToString());\n-    file << strprintf(\"#   mined on %s\\n\", FormatISO8601DateTime(chainActive.Tip()->GetBlockTime()));\n+    const Optional<int> tip_height = locked_chain->getHeight();\n+    file << strprintf(\"# * Best block at time of backup was %i (%s),\\n\", tip_height ? *tip_height : -1, tip_height ? locked_chain->getBlockHash(*tip_height).ToString() : \"(missing block hash)\");",
      "path": "src/wallet/rpcdump.cpp",
      "position": null,
      "original_position": 158,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "af8f8087699c30ec83995c54112955253bcaba84",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The \"missing block hash\" and \"missing block time\" outputs here are a change in behaviour (and could potentially break clients using the dumpwallet API)",
      "created_at": "2018-05-04T20:46:48Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r186216539",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186216539"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 756,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186225645",
      "pull_request_review_id": 117658720,
      "id": 186225645,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjIyNTY0NQ==",
      "diff_hunk": "@@ -2214,39 +2227,41 @@ UniValue listsinceblock(const JSONRPCRequest& request)\n \n     bool include_removed = (request.params[3].isNull() || request.params[3].get_bool());\n \n-    int depth = pindex ? (1 + chainActive.Height() - pindex->nHeight) : -1;\n+    const Optional<int> tip_height = locked_chain->getHeight();\n+    int depth = tip_height && height ? (1 + *tip_height - *height) : -1;",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 530,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "af8f8087699c30ec83995c54112955253bcaba84",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can you use `locked_chain->getDepth(blockId)` here?",
      "created_at": "2018-05-04T21:26:29Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r186225645",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186225645"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1624,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186272603",
      "pull_request_review_id": 117825376,
      "id": 186272603,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjI3MjYwMw==",
      "diff_hunk": "@@ -24,6 +30,62 @@ class Chain\n     {\n     public:\n         virtual ~Lock() {}\n+\n+        //! Get current chain height, not including genesis block (returns 0 if\n+        //! chain only contains genesis block, nothing if chain does not contain\n+        //! any blocks).\n+        virtual Optional<int> getHeight() = 0;\n+\n+        //! Get block height above genesis block. Returns 0 for genesis block,\n+        //! for following block, and so on. Returns nothing for a block not",
      "path": "src/interfaces/chain.h",
      "position": null,
      "original_position": 29,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "ba1e24b718d1db1c2ed06f88087e28994248b1c7",
      "in_reply_to_id": 185320554,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r185320554\r\n\r\n> Should be \"1 for following block ...\"?\r\n\r\n Thanks, fixed in 7f2f5cc41aa05e6f2ad7bfa74173c11136b67cf9",
      "created_at": "2018-05-05T21:28:20Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r186272603",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186272603"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 50,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186272611",
      "pull_request_review_id": 117825376,
      "id": 186272611,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjI3MjYxMQ==",
      "diff_hunk": "@@ -24,6 +30,62 @@ class Chain\n     {\n     public:\n         virtual ~Lock() {}\n+\n+        //! Get current chain height, not including genesis block (returns 0 if\n+        //! chain only contains genesis block, nothing if chain does not contain\n+        //! any blocks).\n+        virtual Optional<int> getHeight() = 0;\n+\n+        //! Get block height above genesis block. Returns 0 for genesis block,\n+        //! for following block, and so on. Returns nothing for a block not\n+        //! included in the current chain.\n+        virtual Optional<int> getBlockHeight(const uint256& hash) = 0;\n+\n+        //! Get block depth. Returns 1 for chain tip, 2 for preceding block, and\n+        //! so on. Returns 0 for a block not included in the current chain.\n+        virtual int getBlockDepth(const uint256& hash) = 0;\n+\n+        //! Get block hash.\n+        virtual uint256 getBlockHash(int height) = 0;\n+\n+        //! Get block time.\n+        virtual int64_t getBlockTime(int height) = 0;\n+\n+        //! Get block median time past.\n+        virtual int64_t getBlockMedianTimePast(int height) = 0;\n+\n+        //! Check if block is empty.\n+        virtual bool blockHasTransactions(int height) = 0;\n+\n+        //! Return height of earliest block in chain with timestamp equal or\n+        //! greater than the given time, or nothing if there is no block with a\n+        //! high enough timestamp.\n+        virtual Optional<int> findEarliestAtLeast(int64_t time) = 0;\n+\n+        //! Return height of last block in chain with timestamp less than the\n+        //! given, and height less than or equal to the given, or nothing if\n+        //! there is no such block.\n+        virtual Optional<int> findLastBefore(int64_t time, int start_height) = 0;\n+\n+        //! Return height of last block in the specified range which is pruned, or\n+        //! nothing if no block in the range is pruned. Range is inclusive.\n+        virtual Optional<int> findPruned(int start_height = 0, Optional<int> stop_height = nullopt) = 0;\n+\n+        //! Return height of the highest block on the chain that is an ancestor\n+        //! of the specified block. Also return the height of the specified\n+        //! block as an optinal output parameter.",
      "path": "src/interfaces/chain.h",
      "position": null,
      "original_position": 65,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "ba1e24b718d1db1c2ed06f88087e28994248b1c7",
      "in_reply_to_id": 185321164,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r185321164\r\n\r\n> optinal\r\n\r\nFixed in 6bb7af9b1e41f833389f6d4d7ceb02b947dbfd07",
      "created_at": "2018-05-05T21:28:34Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r186272611",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186272611"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 86,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186272614",
      "pull_request_review_id": 117825376,
      "id": 186272614,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjI3MjYxNA==",
      "diff_hunk": "@@ -0,0 +1,251 @@\n+#ifndef BITCOIN_INTERFACES_CHAIN_H\n+#define BITCOIN_INTERFACES_CHAIN_H\n+\n+#include <optional.h>               // For Optional and nullopt\n+#include <policy/rbf.h>             // For RBFTransactionState\n+#include <primitives/transaction.h> // For CTransactionRef\n+\n+#include <memory>\n+#include <stddef.h>\n+#include <stdint.h>\n+#include <string>\n+#include <vector>\n+\n+class CBlock;\n+class CRPCCommand;\n+class CReserveScript;\n+class CScheduler;\n+class CValidationState;\n+class UniValue;\n+class uint256;\n+struct CBlockLocator;\n+struct FeeCalculation;\n+\n+namespace interfaces {\n+\n+class Handler;\n+\n+//! Interface for giving wallet processes access to blockchain state.\n+class Chain\n+{\n+public:\n+    virtual ~Chain() {}\n+\n+    //! Interface for querying locked chain state, used by legacy code that\n+    //! assumes state won't change between calls. New code should avoid using\n+    //! the Lock interface and instead call higher-level Chain methods\n+    //! that return more information so the chain doesn't need to stay locked\n+    //! between calls.\n+    class Lock\n+    {\n+    public:\n+        virtual ~Lock() {}\n+\n+        //! Get current chain height, not including genesis block (returns 0 if\n+        //! chain only contains genesis block, nothing if chain does not contain\n+        //! any blocks).\n+        virtual Optional<int> getHeight() = 0;\n+\n+        //! Get block height above genesis block. Returns 0 for genesis block,\n+        //! for following block, and so on. Returns nothing for a block not\n+        //! included in the current chain.\n+        virtual Optional<int> getBlockHeight(const uint256& hash) = 0;\n+\n+        //! Get block depth. Returns 1 for chain tip, 2 for preceding block, and\n+        //! so on. Returns 0 for a block not included in the current chain.\n+        virtual int getBlockDepth(const uint256& hash) = 0;\n+\n+        //! Get block hash.\n+        virtual uint256 getBlockHash(int height) = 0;\n+\n+        //! Get block time.\n+        virtual int64_t getBlockTime(int height) = 0;\n+\n+        //! Get block median time past.\n+        virtual int64_t getBlockMedianTimePast(int height) = 0;\n+\n+        //! Check if block is empty.\n+        virtual bool blockHasTransactions(int height) = 0;\n+\n+        //! Return height of earliest block in chain with timestamp equal or\n+        //! greater than the given time, or nothing if there is no block with a\n+        //! high enough timestamp.\n+        virtual Optional<int> findEarliestAtLeast(int64_t time) = 0;\n+\n+        //! Return height of last block in chain with timestamp less than the\n+        //! given, and height less than or equal to the given, or nothing if\n+        //! there is no such block.\n+        virtual Optional<int> findLastBefore(int64_t time, int start_height) = 0;\n+\n+        //! Return height of last block in the specified range which is pruned, or\n+        //! nothing if no block in the range is pruned. Range is inclusive.\n+        virtual Optional<int> findPruned(int start_height = 0, Optional<int> stop_height = nullopt) = 0;\n+\n+        //! Return height of the highest block on the chain that is an ancestor\n+        //! of the specified block. Also return the height of the specified\n+        //! block as an optinal output parameter.",
      "path": "src/interfaces/chain.h",
      "position": null,
      "original_position": 86,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "af8f8087699c30ec83995c54112955253bcaba84",
      "in_reply_to_id": 186179348,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r186179348\r\n\r\n> s/optinal/optional\r\n\r\nFixed in 6bb7af9b1e41f833389f6d4d7ceb02b947dbfd07",
      "created_at": "2018-05-05T21:28:42Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r186272614",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186272614"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 86,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186272619",
      "pull_request_review_id": 117825376,
      "id": 186272619,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjI3MjYxOQ==",
      "diff_hunk": "@@ -144,7 +144,9 @@ void TestGUI()\n     for (int i = 0; i < 5; ++i) {\n         test.CreateAndProcessBlock({}, GetScriptForRawPubKey(test.coinbaseKey.GetPubKey()));\n     }\n-    CWallet wallet(\"mock\", WalletDatabase::CreateMock());\n+    auto node = interfaces::MakeNode();\n+    node->parseParameters(0, nullptr);\n+    CWallet wallet(&node->getChain(), \"mock\", WalletDatabase::CreateMock());",
      "path": "src/qt/test/wallettests.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "a0279e40745dfb8692e92c5cac0848a25b37f930",
      "in_reply_to_id": 185077211,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r185077211\r\n\r\n> I think we'll need to make an equivalent change in addressbooktests.cpp as well.\r\n\r\nThanks, moved this change to the right commit (it was in c917d976c039c3bb79bb4a1b7aff72117b066597 instead of a0279e40745dfb8692e92c5cac0848a25b37f930)",
      "created_at": "2018-05-05T21:28:53Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r186272619",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186272619"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 149,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186272655",
      "pull_request_review_id": 117825376,
      "id": 186272655,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjI3MjY1NQ==",
      "diff_hunk": "@@ -3725,58 +3724,53 @@ UniValue rescanblockchain(const JSONRPCRequest& request)\n         throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet is currently rescanning. Abort existing rescan or wait.\");\n     }\n \n-    CBlockIndex *pindexStart = nullptr;\n-    CBlockIndex *pindexStop = nullptr;\n-    CBlockIndex *pChainTip = nullptr;\n+    int start_height = 0;\n+    Optional<int> stop_height;\n+    Optional<int> tip_height;\n+    uint256 start_block, stop_block;\n     {\n         auto locked_chain = pwallet->chain().lock();\n-        pindexStart = chainActive.Genesis();\n-        pChainTip = chainActive.Tip();\n+        tip_height = locked_chain->getHeight();\n \n         if (!request.params[0].isNull()) {\n-            pindexStart = chainActive[request.params[0].get_int()];\n-            if (!pindexStart) {\n+            start_height = request.params[0].get_int();\n+            if (start_height < 0 || !tip_height || start_height > *tip_height) {\n                 throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid start_height\");\n             }\n         }\n \n         if (!request.params[1].isNull()) {\n-            pindexStop = chainActive[request.params[1].get_int()];\n-            if (!pindexStop) {\n+            stop_height = request.params[1].get_int();\n+            if (*stop_height < 0 || !tip_height || *stop_height > *tip_height) {\n                 throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid stop_height\");\n             }\n-            else if (pindexStop->nHeight < pindexStart->nHeight) {\n+            else if (*stop_height < start_height) {\n                 throw JSONRPCError(RPC_INVALID_PARAMETER, \"stop_height must be greater than start_height\");\n             }\n         }\n-    }\n \n-    // We can't rescan beyond non-pruned blocks, stop and throw an error\n-    if (fPruneMode) {\n-        auto locked_chain = pwallet->chain().lock();\n-        CBlockIndex *block = pindexStop ? pindexStop : pChainTip;\n-        while (block && block->nHeight >= pindexStart->nHeight) {\n-            if (!(block->nStatus & BLOCK_HAVE_DATA)) {\n-                throw JSONRPCError(RPC_MISC_ERROR, \"Can't rescan beyond pruned data. Use RPC call getblockchaininfo to determine your pruned height.\");\n-            }\n-            block = block->pprev;\n+        // We can't rescan beyond non-pruned blocks, stop and throw an error\n+        if (locked_chain->findPruned(start_height, stop_height)) {\n+            throw JSONRPCError(RPC_MISC_ERROR, \"Can't rescan beyond pruned data. Use RPC call getblockchaininfo to determine your pruned height.\");\n+        }\n+\n+        if (tip_height) {\n+            start_block = locked_chain->getBlockHash(start_height);\n+            stop_block = locked_chain->getBlockHash(stop_height ? *stop_height : *tip_height);\n         }\n     }\n \n-    CBlockIndex *stopBlock = pwallet->ScanForWalletTransactions(pindexStart, pindexStop, reserver, true);\n-    if (!stopBlock) {\n+    if (pwallet->ScanForWalletTransactions(start_block, stop_block, reserver, true).IsNull()) {\n         if (pwallet->IsAbortingRescan()) {\n             throw JSONRPCError(RPC_MISC_ERROR, \"Rescan aborted.\");\n         }\n-        // if we got a nullptr returned, ScanForWalletTransactions did rescan up to the requested stopindex\n-        stopBlock = pindexStop ? pindexStop : pChainTip;\n     }\n     else {\n         throw JSONRPCError(RPC_MISC_ERROR, \"Rescan failed. Potentially corrupted data files.\");\n     }\n     UniValue response(UniValue::VOBJ);\n-    response.pushKV(\"start_height\", pindexStart->nHeight);\n-    response.pushKV(\"stop_height\", stopBlock->nHeight);\n+    response.pushKV(\"start_height\", start_height);\n+    response.pushKV(\"stop_height\", stop_height ? UniValue(*stop_height) : tip_height ? UniValue(*tip_height): UniValue());",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 158,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "ba1e24b718d1db1c2ed06f88087e28994248b1c7",
      "in_reply_to_id": 185327873,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r185327873\r\n\r\n> Are the UniValue calls necessary?\r\n\r\nGood catch, removed in 63dd8abdf822026a4a93356546ff1220e6c00e9e",
      "created_at": "2018-05-05T21:30:24Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r186272655",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186272655"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3774,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186272662",
      "pull_request_review_id": 117825376,
      "id": 186272662,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjI3MjY2Mg==",
      "diff_hunk": "@@ -1699,108 +1694,126 @@ int64_t CWallet::RescanFromTime(int64_t startTime, const WalletRescanReserver& r\n     // Find starting block. May be null if nCreateTime is greater than the\n     // highest blockchain timestamp, in which case there is nothing that needs\n     // to be scanned.\n-    CBlockIndex* startBlock = nullptr;\n+    uint256 start_block;\n     {\n         auto locked_chain = m_chain->lock();\n-        startBlock = chainActive.FindEarliestAtLeast(startTime - TIMESTAMP_WINDOW);\n-        LogPrintf(\"%s: Rescanning last %i blocks\\n\", __func__, startBlock ? chainActive.Height() - startBlock->nHeight + 1 : 0);\n-    }\n-\n-    if (startBlock) {\n-        const CBlockIndex* const failedBlock = ScanForWalletTransactions(startBlock, nullptr, reserver, update);\n-        if (failedBlock) {\n-            return failedBlock->GetBlockTimeMax() + TIMESTAMP_WINDOW + 1;\n+        const Optional<int> start_height = locked_chain->findEarliestAtLeast(startTime - TIMESTAMP_WINDOW);\n+        const Optional<int> tip_height = locked_chain->getHeight();\n+        LogPrintf(\"%s: Rescanning last %i blocks\\n\", __func__, tip_height && start_height ? *tip_height - *start_height + 1 : 0);\n+        if (start_height) start_block = locked_chain->getBlockHash(*start_height);\n+    }\n+\n+    if (!start_block.IsNull()) {\n+        uint256 failed_block = ScanForWalletTransactions(start_block, {} /* stop block */, reserver, update);\n+        if (!failed_block.IsNull()) {\n+            int64_t time_max;\n+            if (!m_chain->findBlock(failed_block, nullptr /* CBlock */, nullptr /* time */, &time_max)) {\n+                throw std::logic_error(\"ScanForWalletTransactions returned invalid block hash\");\n+            }\n+            return time_max + TIMESTAMP_WINDOW + 1;\n         }\n     }\n     return startTime;\n }\n \n /**\n- * Scan the block chain (starting in pindexStart) for transactions\n+ * Scan the block chain (starting in start_block) for transactions\n  * from or to us. If fUpdate is true, found transactions that already\n  * exist in the wallet will be updated.\n  *\n  * Returns null if scan was successful. Otherwise, if a complete rescan was not\n  * possible (due to pruning or corruption), returns pointer to the most recent\n  * block that could not be scanned.\n  *\n- * If pindexStop is not a nullptr, the scan will stop at the block-index\n- * defined by pindexStop\n+ * If stop_block is not null, the scan will stop at the block-index\n+ * defined by stop_block\n  *\n- * Caller needs to make sure pindexStop (and the optional pindexStart) are on\n+ * Caller needs to make sure stop_block (and the optional start_block) are on\n  * the main chain after to the addition of any new keys you want to detect\n  * transactions for.\n  */\n-CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlockIndex* pindexStop, const WalletRescanReserver &reserver, bool fUpdate)\n+uint256 CWallet::ScanForWalletTransactions(const uint256& start_block, const uint256& stop_block, const WalletRescanReserver &reserver, bool fUpdate)\n {\n     int64_t nNow = GetTime();\n     const CChainParams& chainParams = Params();\n \n     assert(reserver.isReserved());\n-    if (pindexStop) {\n-        assert(pindexStop->nHeight >= pindexStart->nHeight);\n-    }\n \n-    CBlockIndex* pindex = pindexStart;\n-    CBlockIndex* ret = nullptr;\n+    uint256 block_hash = start_block;\n+    uint256 ret;\n \n-    if (pindex) LogPrintf(\"Rescan started from block %d...\\n\", pindex->nHeight);\n+    LogPrintf(\"Rescan started from block %s...\\n\", start_block.ToString());\n \n     {\n         fAbortRescan = false;\n         ShowProgress(_(\"Rescanning...\"), 0); // show rescan progress in GUI as dialog or on splashscreen, if -rescan on startup\n-        CBlockIndex* tip = nullptr;\n+        uint256 tip_hash;\n+        Optional<int> block_height;\n         double dProgressStart;\n         double dProgressTip;\n         {\n             auto locked_chain = m_chain->lock();\n-            tip = chainActive.Tip();\n-            dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n-            dProgressTip = GuessVerificationProgress(chainParams.TxData(), tip);\n+            if (Optional<int> tip_height = locked_chain->getHeight()) {\n+                tip_hash = locked_chain->getBlockHash(*tip_height);\n+            }\n+            block_height = locked_chain->getBlockHeight(block_hash);\n+            dProgressStart = m_chain->guessVerificationProgress(block_hash);\n+            dProgressTip = m_chain->guessVerificationProgress(tip_hash);\n         }\n         double gvp = dProgressStart;\n-        while (pindex && !fAbortRescan)\n+        while (block_height && !fAbortRescan)\n         {\n-            if (pindex->nHeight % 100 == 0 && dProgressTip - dProgressStart > 0.0) {\n+            if (*block_height % 100 == 0 && dProgressTip - dProgressStart > 0.0) {\n                 ShowProgress(_(\"Rescanning...\"), std::max(1, std::min(99, (int)((gvp - dProgressStart) / (dProgressTip - dProgressStart) * 100))));\n             }\n             if (GetTime() >= nNow + 60) {\n                 nNow = GetTime();\n-                LogPrintf(\"Still rescanning. At block %d. Progress=%f\\n\", pindex->nHeight, gvp);\n+                LogPrintf(\"Still rescanning. At block %d. Progress=%f\\n\", *block_height, gvp);\n             }\n \n             CBlock block;\n-            if (ReadBlockFromDisk(block, pindex, Params().GetConsensus())) {\n+            if (m_chain->findBlock(block_hash, &block) && !block.IsNull()) {\n                 auto locked_chain = m_chain->lock();\n                 LOCK(cs_wallet);\n-                if (pindex && !chainActive.Contains(pindex)) {\n+                if (!locked_chain->getBlockHeight(block_hash)) {\n                     // Abort scan if current block is no longer active, to prevent\n-                    // marking transactions as coming from the wrong block.\n-                    ret = pindex;\n+                    // marking transac<tions as coming from the wrong block.",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 227,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "7f087936082170018b189f19adb7d789f4c2969d",
      "in_reply_to_id": 185796547,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r185796547\r\n\r\n> transac<tions\r\n\r\nFixed in 62f15da95f7abb4ae0a02517885d7fb69097f698",
      "created_at": "2018-05-05T21:30:40Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r186272662",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186272662"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1781,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186272672",
      "pull_request_review_id": 117825376,
      "id": 186272672,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjI3MjY3Mg==",
      "diff_hunk": "@@ -286,8 +301,106 @@ class ChainImpl : public Chain\n         return MakeUnique<HandlerImpl>(notifications);\n     }\n     void waitForNotifications() override { SyncWithValidationInterfaceQueue(); }\n+    std::unique_ptr<Handler> handleRpc(const CRPCCommand& command) override;\n+\n+    //! Map of RPC method name to forwarder. If multiple clients provide\n+    //! implementations of the same RPC method, the RPC forwarder can dispatch\n+    //! between them.\n+    class RpcForwarder;\n+    std::map<Ref<const std::string>, RpcForwarder> m_rpc_forwarders;\n+};\n+\n+//! Forwarder for one RPC method.\n+class ChainImpl::RpcForwarder\n+{\n+public:\n+    RpcForwarder(const CRPCCommand& command) : m_command(command)\n+    {\n+        m_command.actor = [this](const JSONRPCRequest& request) { return forwardRequest(request); };\n+    }\n+\n+    bool registerForwarder() { return ::tableRPC.appendCommand(m_command.name, &m_command); }\n+\n+    void addCommand(const CRPCCommand& command) { m_commands.emplace_back(&command); }\n+\n+    void removeCommand(const CRPCCommand& command)\n+    {\n+        m_commands.erase(std::remove(m_commands.begin(), m_commands.end(), &command));\n+    }\n+\n+    UniValue forwardRequest(const JSONRPCRequest& request) const\n+    {\n+        // Simple forwarding of RPC requests. This just sends the request to the\n+        // first client that registered a handler for the RPC method. If the\n+        // handler throws a wallet not found exception, this will retry\n+        // forwarding to the next handler (if any).\n+        //\n+        // This forwarding mechanism could be made more efficient (peeking\n+        // inside the RPC request for wallet name and sending it directly to the\n+        // right handler), but right now all wallets are in-process so there is\n+        // only ever a single handler, and in the future it isn't clear if we\n+        // will want we want to keep forwarding RPCs at all (clients could just\n+        // listen for their own RPCs).\n+        for (auto it = m_commands.begin(); it != m_commands.end();) {",
      "path": "src/interfaces/chain.cpp",
      "position": null,
      "original_position": 82,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "7a6069a3c51582f32fa1ce9bed6c3c905b5bfd0c",
      "in_reply_to_id": 185886977,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r185886977\r\n\r\n> Any reason you don't just want to do for (const CRPCCommand* command : m_commands) { ... }\r\n\r\nHaving access to the iterator makes it possible to detect the last loop iteration and let `RPC_WALLET_NOT_FOUND` exceptions from the last wallet process get reraised instead of being suppressed.",
      "created_at": "2018-05-05T21:31:02Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r186272672",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186272672"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 381,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186272697",
      "pull_request_review_id": 117825376,
      "id": 186272697,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjI3MjY5Nw==",
      "diff_hunk": "@@ -0,0 +1,251 @@\n+#ifndef BITCOIN_INTERFACES_CHAIN_H\n+#define BITCOIN_INTERFACES_CHAIN_H\n+\n+#include <optional.h>               // For Optional and nullopt\n+#include <policy/rbf.h>             // For RBFTransactionState\n+#include <primitives/transaction.h> // For CTransactionRef\n+\n+#include <memory>\n+#include <stddef.h>\n+#include <stdint.h>\n+#include <string>\n+#include <vector>\n+\n+class CBlock;\n+class CRPCCommand;\n+class CReserveScript;\n+class CScheduler;\n+class CValidationState;\n+class UniValue;\n+class uint256;\n+struct CBlockLocator;\n+struct FeeCalculation;\n+\n+namespace interfaces {\n+\n+class Handler;\n+\n+//! Interface for giving wallet processes access to blockchain state.\n+class Chain\n+{\n+public:\n+    virtual ~Chain() {}\n+\n+    //! Interface for querying locked chain state, used by legacy code that\n+    //! assumes state won't change between calls. New code should avoid using\n+    //! the Lock interface and instead call higher-level Chain methods\n+    //! that return more information so the chain doesn't need to stay locked\n+    //! between calls.\n+    class Lock",
      "path": "src/interfaces/chain.h",
      "position": null,
      "original_position": 39,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "af8f8087699c30ec83995c54112955253bcaba84",
      "in_reply_to_id": 186174271,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r186174271\r\n\r\n> I find the name of this class quite confusing, since it's not actually a lock. How about renaming this to LockedChain and renaming LockingStateImpl to ChainLockImpl?\r\n\r\nIt is really a lock, analogous to `std::unique_lock` (and the implementation will even inherit from a class called `UniqueLock` after #11599 renames `CCriticalBlock` to `UniqueLock`).\r\n\r\nI think `LockedChain` would be a good name if this were not an inner class, but `Chain::Lock` is less redundant than `Chain::LockedChain` (or `Chain::LockedState`, which was what this was called before https://github.com/bitcoin/bitcoin/pull/10973#discussion_r137139176).\r\n\r\n`LockingStateImpl` is temporary (it will go away when `assumeLocked` is removed), and it's also internal to chain.cpp, so I can rename it, but I don't think should be too much concern about it.",
      "created_at": "2018-05-05T21:31:40Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r186272697",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186272697"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 70,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186272710",
      "pull_request_review_id": 117825376,
      "id": 186272710,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjI3MjcxMA==",
      "diff_hunk": "@@ -0,0 +1,251 @@\n+#ifndef BITCOIN_INTERFACES_CHAIN_H\n+#define BITCOIN_INTERFACES_CHAIN_H\n+\n+#include <optional.h>               // For Optional and nullopt\n+#include <policy/rbf.h>             // For RBFTransactionState\n+#include <primitives/transaction.h> // For CTransactionRef\n+\n+#include <memory>\n+#include <stddef.h>\n+#include <stdint.h>\n+#include <string>\n+#include <vector>\n+\n+class CBlock;\n+class CRPCCommand;\n+class CReserveScript;\n+class CScheduler;\n+class CValidationState;\n+class UniValue;\n+class uint256;\n+struct CBlockLocator;\n+struct FeeCalculation;\n+\n+namespace interfaces {\n+\n+class Handler;\n+\n+//! Interface for giving wallet processes access to blockchain state.\n+class Chain\n+{\n+public:\n+    virtual ~Chain() {}\n+\n+    //! Interface for querying locked chain state, used by legacy code that\n+    //! assumes state won't change between calls. New code should avoid using\n+    //! the Lock interface and instead call higher-level Chain methods\n+    //! that return more information so the chain doesn't need to stay locked\n+    //! between calls.\n+    class Lock\n+    {\n+    public:\n+        virtual ~Lock() {}\n+\n+        //! Get current chain height, not including genesis block (returns 0 if\n+        //! chain only contains genesis block, nothing if chain does not contain\n+        //! any blocks).\n+        virtual Optional<int> getHeight() = 0;\n+\n+        //! Get block height above genesis block. Returns 0 for genesis block,\n+        //! for following block, and so on. Returns nothing for a block not\n+        //! included in the current chain.\n+        virtual Optional<int> getBlockHeight(const uint256& hash) = 0;\n+\n+        //! Get block depth. Returns 1 for chain tip, 2 for preceding block, and\n+        //! so on. Returns 0 for a block not included in the current chain.\n+        virtual int getBlockDepth(const uint256& hash) = 0;\n+\n+        //! Get block hash.\n+        virtual uint256 getBlockHash(int height) = 0;\n+\n+        //! Get block time.\n+        virtual int64_t getBlockTime(int height) = 0;\n+\n+        //! Get block median time past.\n+        virtual int64_t getBlockMedianTimePast(int height) = 0;\n+\n+        //! Check if block is empty.\n+        virtual bool blockHasTransactions(int height) = 0;\n+\n+        //! Return height of earliest block in chain with timestamp equal or\n+        //! greater than the given time, or nothing if there is no block with a\n+        //! high enough timestamp.\n+        virtual Optional<int> findEarliestAtLeast(int64_t time) = 0;\n+\n+        //! Return height of last block in chain with timestamp less than the\n+        //! given, and height less than or equal to the given, or nothing if\n+        //! there is no such block.\n+        virtual Optional<int> findLastBefore(int64_t time, int start_height) = 0;\n+\n+        //! Return height of last block in the specified range which is pruned, or\n+        //! nothing if no block in the range is pruned. Range is inclusive.\n+        virtual Optional<int> findPruned(int start_height = 0, Optional<int> stop_height = nullopt) = 0;\n+\n+        //! Return height of the highest block on the chain that is an ancestor\n+        //! of the specified block. Also return the height of the specified\n+        //! block as an optinal output parameter.\n+        virtual Optional<int> findFork(const uint256& hash, Optional<int>* height) = 0;\n+\n+        //! Return true if block hash points to the current chain tip, or to a\n+        //! possible descendant of the current chain tip that isn't currently\n+        //! connected.\n+        virtual bool isPotentialTip(const uint256& hash) = 0;\n+\n+        //! Get locator for the current chain tip.\n+        virtual CBlockLocator getLocator() = 0;\n+\n+        //! Return height of block on the chain using locator.\n+        virtual Optional<int> findLocatorFork(const CBlockLocator& locator) = 0;\n+\n+        //! Check if transaction will be final given chain height current time.\n+        virtual bool checkFinalTx(const CTransaction& tx) = 0;\n+\n+        //! Check whether segregated witness is enabled on the network.\n+        virtual bool isWitnessEnabled() = 0;\n+\n+        //! Add transaction to memory pool.\n+        virtual bool acceptToMemoryPool(CTransactionRef tx, CValidationState& state) = 0;\n+    };\n+\n+    //! Return Lock interface. Chain is locked when this is called, and\n+    //! unlocked when the returned interface is freed.\n+    virtual std::unique_ptr<Lock> lock(bool try_lock = false) = 0;\n+\n+    //! Return Lock interface assuming chain is already locked. This\n+    //! method is temporary and is only used in a few places to avoid changing\n+    //! behavior while code is transitioned to use the LockState interface.\n+    virtual std::unique_ptr<Lock> assumeLocked() = 0;\n+\n+    //! Return whether node has the block and optionally return block metadata or contents.\n+    virtual bool findBlock(const uint256& hash,\n+        CBlock* block = nullptr,\n+        int64_t* time = nullptr,\n+        int64_t* max_time = nullptr) = 0;\n+\n+    //! Estimate fraction of total transactions verified if blocks up to\n+    //! given height are verified.\n+    virtual double guessVerificationProgress(const uint256& block_hash) = 0;\n+\n+    //! Get virtual transaction size.\n+    virtual int64_t getVirtualTransactionSize(const CTransaction& tx) = 0;\n+\n+    //! Check if transaction is RBF opt in.\n+    virtual RBFTransactionState isRBFOptIn(const CTransaction& tx) = 0;\n+\n+    //! Check if transaction has descendants in mempool.\n+    virtual bool hasDescendantsInMempool(const uint256& txid) = 0;\n+\n+    //! Relay transaction.\n+    virtual bool relayTransaction(const uint256& txid) = 0;\n+\n+    //! Check if transaction is within chain limit.\n+    virtual bool transactionWithinChainLimit(const uint256& txid, size_t chain_limit) = 0;\n+\n+    //! Check chain limits.\n+    virtual bool checkChainLimits(CTransactionRef tx) = 0;\n+\n+    //! Estimate smart fee.\n+    virtual CFeeRate estimateSmartFee(int num_blocks, bool conservative, FeeCalculation* calc = nullptr) = 0;\n+\n+    //! Fee estimator max target.\n+    virtual int estimateMaxBlocks() = 0;\n+\n+    //! Pool min fee.\n+    virtual CFeeRate poolMinFee() = 0;\n+\n+    //! Check if pruning is enabled.\n+    virtual bool getPruneMode() = 0;\n+\n+    //! Check if p2p enabled.\n+    virtual bool p2pEnabled() = 0;\n+\n+    //! Get adjusted time.\n+    virtual int64_t getAdjustedTime() = 0;\n+\n+    //! Send init message.\n+    virtual void initMessage(const std::string& message) = 0;\n+\n+    //! Send init warning.\n+    virtual void initWarning(const std::string& message) = 0;\n+\n+    //! Send init error.\n+    virtual void initError(const std::string& message) = 0;\n+\n+    //! Generate blocks\n+    virtual UniValue generateBlocks(std::shared_ptr<CReserveScript> coinbase_script,\n+        int num_blocks,\n+        uint64_t max_tries,\n+        bool keep_script) = 0;\n+\n+    //! Parse confirm target.\n+    virtual unsigned int parseConfirmTarget(const UniValue& value) = 0;\n+\n+    //! Chain notifications.\n+    class Notifications\n+    {\n+    public:\n+        virtual ~Notifications() {}\n+        virtual void TransactionAddedToMempool(const CTransactionRef& tx) {}\n+        virtual void TransactionRemovedFromMempool(const CTransactionRef& ptx) {}\n+        virtual void BlockConnected(const CBlock& block,\n+            const uint256& block_hash,\n+            const std::vector<CTransactionRef>& tx_conflicted)\n+        {\n+        }\n+        virtual void BlockDisconnected(const CBlock& block) {}\n+        virtual void ChainStateFlushed(const CBlockLocator& locator) {}\n+        virtual void Inventory(const uint256& hash) {}\n+        virtual void ResendWalletTransactions(int64_t best_block_time) {}\n+    };\n+\n+    //! Register handler for notifications.\n+    virtual std::unique_ptr<Handler> handleNotifications(Notifications& notifications) = 0;\n+\n+    //! Wait for pending notifications to be handled.\n+    virtual void waitForNotifications() = 0;\n+\n+    //! Interface to let node manage chain clients (wallets, or maybe tools for\n+    //! monitoring and analysis in the future).\n+    class Client\n+    {\n+    public:\n+        virtual ~Client() {}\n+\n+        //! Register rpcs.\n+        virtual void registerRpcs() = 0;\n+\n+        //! Prepare for execution, loading any needed state.\n+        virtual bool prepare() = 0;\n+\n+        //! Start client execution and provide a scheduler. (Scheduler is",
      "path": "src/interfaces/chain.h",
      "position": null,
      "original_position": 220,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "af8f8087699c30ec83995c54112955253bcaba84",
      "in_reply_to_id": 186132129,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r186132129\r\n\r\n> I think the (Scheduler is ignored if client is out-of-process). comment can be saved for #10102\r\n\r\nSure, removed in 0d9ba1a093e30d77348efc55f0ff6599cef76621.",
      "created_at": "2018-05-05T21:32:05Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r186272710",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186272710"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 220,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186272718",
      "pull_request_review_id": 117825376,
      "id": 186272718,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjI3MjcxOA==",
      "diff_hunk": "@@ -50,6 +51,7 @@ class NodeImpl : public Node\n {\n     void parseParameters(int argc, const char* const argv[]) override\n     {\n+        m_interfaces.chain = interfaces::MakeChain();",
      "path": "src/interfaces/node.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "af8f8087699c30ec83995c54112955253bcaba84",
      "in_reply_to_id": 186125434,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r186125434\r\n\r\n> I don't understand why this is in parseParameters(), rather than a constructor for NodeImpl\r\n\r\nGood suggestion. Moved to constructor in 53a5d3e48093b366e4a227fc9c3e50d7729ba461. An earlier version of #10102 initialized `m_interfaces` here in order to be able to use the `argv[0]` directory from the `bitcoin-gui` process to spawn `bitcoin-wallet` processes from the `bitcoin-node` process. But the current version uses `bitcoin-node`'s `argv[0]`, which is simpler and doesn't require access to the GUI's `argv`.",
      "created_at": "2018-05-05T21:32:26Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r186272718",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186272718"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186272735",
      "pull_request_review_id": 117825376,
      "id": 186272735,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjI3MjczNQ==",
      "diff_hunk": "@@ -747,8 +756,9 @@ UniValue dumpwallet(const JSONRPCRequest& request)\n     // produce output\n     file << strprintf(\"# Wallet dump created by Bitcoin %s\\n\", CLIENT_BUILD);\n     file << strprintf(\"# * Created on %s\\n\", FormatISO8601DateTime(GetTime()));\n-    file << strprintf(\"# * Best block at time of backup was %i (%s),\\n\", chainActive.Height(), chainActive.Tip()->GetBlockHash().ToString());\n-    file << strprintf(\"#   mined on %s\\n\", FormatISO8601DateTime(chainActive.Tip()->GetBlockTime()));\n+    const Optional<int> tip_height = locked_chain->getHeight();\n+    file << strprintf(\"# * Best block at time of backup was %i (%s),\\n\", tip_height ? *tip_height : -1, tip_height ? locked_chain->getBlockHash(*tip_height).ToString() : \"(missing block hash)\");",
      "path": "src/wallet/rpcdump.cpp",
      "position": null,
      "original_position": 158,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "af8f8087699c30ec83995c54112955253bcaba84",
      "in_reply_to_id": 186216539,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r186216539\r\n\r\n> The \"missing block hash\" and \"missing block time\" outputs here are a change in behaviour (and could potentially break clients using the dumpwallet API)\r\n\r\nI don't think there is a risk of clients breaking, since the change in behavior is outputting \"(missing block hash)\" and \"(missing block time)\" where previously the code would segfault.",
      "created_at": "2018-05-05T21:32:43Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r186272735",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186272735"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 756,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186272743",
      "pull_request_review_id": 117825376,
      "id": 186272743,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjI3Mjc0Mw==",
      "diff_hunk": "@@ -2214,39 +2227,41 @@ UniValue listsinceblock(const JSONRPCRequest& request)\n \n     bool include_removed = (request.params[3].isNull() || request.params[3].get_bool());\n \n-    int depth = pindex ? (1 + chainActive.Height() - pindex->nHeight) : -1;\n+    const Optional<int> tip_height = locked_chain->getHeight();\n+    int depth = tip_height && height ? (1 + *tip_height - *height) : -1;",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 530,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "af8f8087699c30ec83995c54112955253bcaba84",
      "in_reply_to_id": 186225645,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r186225645\r\n\r\n> Can you use locked_chain->getDepth(blockId) here?\r\n\r\nI think so, but it seems like it would be deviating unnecessarily from current code and also obscuring relationship between height and depth which is currently explicit here.\r\n",
      "created_at": "2018-05-05T21:33:00Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r186272743",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186272743"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1624,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186272746",
      "pull_request_review_id": 117825376,
      "id": 186272746,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjI3Mjc0Ng==",
      "diff_hunk": "@@ -3388,7 +3417,8 @@ UniValue fundrawtransaction(const JSONRPCRequest& request)\n     CAmount nFeeOut;\n     std::string strFailReason;\n \n-    if (!pwallet->FundTransaction(tx, nFeeOut, changePosition, strFailReason, lockUnspents, setSubtractFeeFromOutputs, coinControl)) {\n+    auto locked_chain = pwallet->chain().assumeLocked();  // Temporary. Removed in upcoming lock cleanup",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 782,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "af8f8087699c30ec83995c54112955253bcaba84",
      "in_reply_to_id": 186174854,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r186174854\r\n\r\n> There are 4 of these Temporary. Removed in upcoming lock cleanup comments. Sorry if I missed the answer to this, but what's the plan for removing them?\r\n\r\nThese are introduced in commit 4d11732cc453b8ad5db571491909259fbacd1f51 (Remove uses of cs_main in wallet code), which like other commits in this PR, is just supposed to be mechanical change that doesn't change behavior.\r\n\r\nThe fixes for these comments will depend on the individual situation but will just mean adding required locks that are missing or removing recursive locks that are redundant. As an example, if #10605 is merged, the temporary comment in ListLocked can go away.\r\n",
      "created_at": "2018-05-05T21:33:18Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r186272746",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186272746"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3420,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186272748",
      "pull_request_review_id": 117825376,
      "id": 186272748,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjI3Mjc0OA==",
      "diff_hunk": "@@ -698,7 +697,7 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n \n     /* Used by TransactionAddedToMemorypool/BlockConnected/Disconnected.\n      * Should be called with pindexBlock and posInBlock if this is for a transaction that is included in a block. */",
      "path": "src/wallet/wallet.h",
      "position": null,
      "original_position": 90,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "af8f8087699c30ec83995c54112955253bcaba84",
      "in_reply_to_id": 186181022,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r186181022\r\n\r\n> Comment is wrong. Needs to be updated to Should be called with non-zero block_hash and posInBlock...\r\n\r\nThanks, fixed in 77cd28c7f5043ff82500fe59936d7a6abc8d0bf6",
      "created_at": "2018-05-05T21:33:33Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r186272748",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186272748"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 699,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186272752",
      "pull_request_review_id": 117825376,
      "id": 186272752,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjI3Mjc1Mg==",
      "diff_hunk": "@@ -744,7 +751,7 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n      *\n      * Protected by cs_main (see BlockUntilSyncedToCurrentChain)",
      "path": "src/wallet/wallet.h",
      "position": null,
      "original_position": 120,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "af8f8087699c30ec83995c54112955253bcaba84",
      "in_reply_to_id": 186181393,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r186181393\r\n\r\n> Remove comment\r\n\r\nRemoved in cc2290887af57d60640e7ec90afe2a87dcee3ed7",
      "created_at": "2018-05-05T21:33:48Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r186272752",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186272752"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 752,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186444555",
      "pull_request_review_id": 118022524,
      "id": 186444555,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjQ0NDU1NQ==",
      "diff_hunk": "@@ -1694,109 +1695,128 @@ int64_t CWallet::RescanFromTime(int64_t startTime, const WalletRescanReserver& r\n     // Find starting block. May be null if nCreateTime is greater than the\n     // highest blockchain timestamp, in which case there is nothing that needs\n     // to be scanned.\n-    CBlockIndex* startBlock = nullptr;\n+    uint256 start_block;\n     {\n-        LOCK(cs_main);\n-        startBlock = chainActive.FindEarliestAtLeast(startTime - TIMESTAMP_WINDOW);\n-        LogPrintf(\"%s: Rescanning last %i blocks\\n\", __func__, startBlock ? chainActive.Height() - startBlock->nHeight + 1 : 0);\n-    }\n-\n-    if (startBlock) {\n-        const CBlockIndex* const failedBlock = ScanForWalletTransactions(startBlock, nullptr, reserver, update);\n-        if (failedBlock) {\n-            return failedBlock->GetBlockTimeMax() + TIMESTAMP_WINDOW + 1;\n+        auto locked_chain = m_chain->lock();\n+        const Optional<int> start_height = locked_chain->findEarliestAtLeast(startTime - TIMESTAMP_WINDOW);\n+        const Optional<int> tip_height = locked_chain->getHeight();\n+        LogPrintf(\"%s: Rescanning last %i blocks\\n\", __func__, tip_height && start_height ? *tip_height - *start_height + 1 : 0);\n+        if (start_height) start_block = locked_chain->getBlockHash(*start_height);\n+    }\n+\n+    if (!start_block.IsNull()) {\n+        uint256 failed_block = ScanForWalletTransactions(start_block, {} /* stop block */, reserver, update);\n+        if (!failed_block.IsNull()) {\n+            int64_t time_max;\n+            if (!m_chain->findBlock(failed_block, nullptr /* CBlock */, nullptr /* time */, &time_max)) {\n+                throw std::logic_error(\"ScanForWalletTransactions returned invalid block hash\");\n+            }\n+            return time_max + TIMESTAMP_WINDOW + 1;\n         }\n     }\n     return startTime;\n }\n \n /**\n- * Scan the block chain (starting in pindexStart) for transactions\n+ * Scan the block chain (starting in start_block) for transactions\n  * from or to us. If fUpdate is true, found transactions that already\n  * exist in the wallet will be updated.\n  *\n  * Returns null if scan was successful. Otherwise, if a complete rescan was not\n  * possible (due to pruning or corruption), returns pointer to the most recent\n  * block that could not be scanned.\n  *\n- * If pindexStop is not a nullptr, the scan will stop at the block-index\n- * defined by pindexStop\n+ * If stop_block is not null, the scan will stop at the block-index\n+ * defined by stop_block\n  *\n- * Caller needs to make sure pindexStop (and the optional pindexStart) are on\n+ * Caller needs to make sure stop_block (and the optional start_block) are on\n  * the main chain after to the addition of any new keys you want to detect\n  * transactions for.\n  */\n-CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlockIndex* pindexStop, const WalletRescanReserver &reserver, bool fUpdate)\n+uint256 CWallet::ScanForWalletTransactions(const uint256& start_block, const uint256& stop_block, const WalletRescanReserver &reserver, bool fUpdate)\n {\n     int64_t nNow = GetTime();\n     const CChainParams& chainParams = Params();\n \n     assert(reserver.isReserved());\n-    if (pindexStop) {\n-        assert(pindexStop->nHeight >= pindexStart->nHeight);\n-    }\n \n-    CBlockIndex* pindex = pindexStart;\n-    CBlockIndex* ret = nullptr;\n+    uint256 block_hash = start_block;\n+    uint256 ret;\n \n-    if (pindex) LogPrintf(\"Rescan started from block %d...\\n\", pindex->nHeight);\n+    LogPrintf(\"Rescan started from block %s...\\n\", start_block.ToString());\n \n     {\n         fAbortRescan = false;\n         ShowProgress(_(\"Rescanning...\"), 0); // show rescan progress in GUI as dialog or on splashscreen, if -rescan on startup\n-        CBlockIndex* tip = nullptr;\n+        uint256 tip_hash;\n+        Optional<int> block_height;\n         double dProgressStart;\n         double dProgressTip;\n         {\n-            LOCK(cs_main);\n-            tip = chainActive.Tip();\n-            dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n-            dProgressTip = GuessVerificationProgress(chainParams.TxData(), tip);\n+            auto locked_chain = m_chain->lock();\n+            if (Optional<int> tip_height = locked_chain->getHeight()) {",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 326,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "af8f8087699c30ec83995c54112955253bcaba84",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Would it make sense to have a `Chain::Lock.getTip()` to just return the tip hash?",
      "created_at": "2018-05-07T14:42:19Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r186444555",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186444555"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1786,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186462615",
      "pull_request_review_id": 118022524,
      "id": 186462615,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjQ2MjYxNQ==",
      "diff_hunk": "@@ -3795,8 +3818,9 @@ void CWallet::GetKeyBirthTimes(std::map<CTxDestination, int64_t> &mapKeyBirth) c\n     }\n \n     // map in which we'll infer heights of other keys\n-    CBlockIndex *pindexMax = chainActive[std::max(0, chainActive.Height() - 144)]; // the tip can be reorganized; use a 144-block safety margin\n-    std::map<CKeyID, CBlockIndex*> mapKeyFirstBlock;\n+    const Optional<int> tip_height = locked_chain.getHeight();\n+    const int pindexMax = tip_height && *tip_height > 144 ? *tip_height - 144 : 0; // the tip can be reorganized; use a 144-block safety margin",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 1026,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "af8f8087699c30ec83995c54112955253bcaba84",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This variable isn't a pointer to a CBlockIndex, and should be named `max_height` or similar.",
      "created_at": "2018-05-07T15:42:19Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r186462615",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186462615"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3822,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186496577",
      "pull_request_review_id": 118022524,
      "id": 186496577,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjQ5NjU3Nw==",
      "diff_hunk": "@@ -4129,44 +4152,56 @@ CWallet* CWallet::CreateWalletFromFile(const std::string& name, const fs::path&\n     // Try to top up keypool. No-op if the wallet is locked.\n     walletInstance->TopUpKeyPool();\n \n-    LOCK(cs_main);\n+    auto locked_chain = chain.lock();\n \n-    CBlockIndex *pindexRescan = chainActive.Genesis();\n+    int index_rescan = 0;\n     if (!gArgs.GetBoolArg(\"-rescan\", false))\n     {\n         WalletBatch batch(*walletInstance->database);\n         CBlockLocator locator;\n-        if (batch.ReadBestBlock(locator))\n-            pindexRescan = FindForkInGlobalIndex(chainActive, locator);\n+        if (batch.ReadBestBlock(locator)) {\n+            if (const Optional<int> fork_height = locked_chain->findLocatorFork(locator)) {\n+                index_rescan = *fork_height;\n+            }\n+        }\n+    }\n+\n+    const Optional<int> tip_height = locked_chain->getHeight();\n+    if (tip_height) {\n+        walletInstance->m_last_block_processed = locked_chain->getBlockHash(index_rescan);\n+    } else {\n+        walletInstance->m_last_block_processed.SetNull();\n     }\n \n-    walletInstance->m_last_block_processed = chainActive.Tip();\n-    RegisterValidationInterface(walletInstance);\n+    walletInstance->m_handler = chain.handleNotifications(*walletInstance);\n \n-    if (chainActive.Tip() && chainActive.Tip() != pindexRescan)\n+    if (tip_height && *tip_height != index_rescan)\n     {\n         //We can't rescan beyond non-pruned blocks, stop and throw an error\n         //this might happen if a user uses an old wallet within a pruned node\n         // or if he ran -disablewallet for a longer time, then decided to re-enable\n-        if (fPruneMode)\n+        if (chain.getPruneMode())\n         {\n-            CBlockIndex *block = chainActive.Tip();\n-            while (block && block->pprev && (block->pprev->nStatus & BLOCK_HAVE_DATA) && block->pprev->nTx > 0 && pindexRescan != block)\n-                block = block->pprev;\n+            int block = *tip_height;",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 1225,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "af8f8087699c30ec83995c54112955253bcaba84",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "would `block_height` or `block_index` be a better variable name here?",
      "created_at": "2018-05-07T17:49:23Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r186496577",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186496577"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4185,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186497214",
      "pull_request_review_id": 118022524,
      "id": 186497214,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjQ5NzIxNA==",
      "diff_hunk": "@@ -0,0 +1,251 @@\n+#ifndef BITCOIN_INTERFACES_CHAIN_H\n+#define BITCOIN_INTERFACES_CHAIN_H\n+\n+#include <optional.h>               // For Optional and nullopt\n+#include <policy/rbf.h>             // For RBFTransactionState\n+#include <primitives/transaction.h> // For CTransactionRef\n+\n+#include <memory>\n+#include <stddef.h>\n+#include <stdint.h>\n+#include <string>\n+#include <vector>\n+\n+class CBlock;\n+class CRPCCommand;\n+class CReserveScript;\n+class CScheduler;\n+class CValidationState;\n+class UniValue;\n+class uint256;\n+struct CBlockLocator;\n+struct FeeCalculation;\n+\n+namespace interfaces {\n+\n+class Handler;\n+\n+//! Interface for giving wallet processes access to blockchain state.\n+class Chain\n+{\n+public:\n+    virtual ~Chain() {}\n+\n+    //! Interface for querying locked chain state, used by legacy code that\n+    //! assumes state won't change between calls. New code should avoid using\n+    //! the Lock interface and instead call higher-level Chain methods\n+    //! that return more information so the chain doesn't need to stay locked\n+    //! between calls.\n+    class Lock\n+    {\n+    public:\n+        virtual ~Lock() {}\n+\n+        //! Get current chain height, not including genesis block (returns 0 if\n+        //! chain only contains genesis block, nothing if chain does not contain\n+        //! any blocks).\n+        virtual Optional<int> getHeight() = 0;\n+\n+        //! Get block height above genesis block. Returns 0 for genesis block,\n+        //! for following block, and so on. Returns nothing for a block not\n+        //! included in the current chain.\n+        virtual Optional<int> getBlockHeight(const uint256& hash) = 0;\n+\n+        //! Get block depth. Returns 1 for chain tip, 2 for preceding block, and\n+        //! so on. Returns 0 for a block not included in the current chain.\n+        virtual int getBlockDepth(const uint256& hash) = 0;\n+\n+        //! Get block hash.\n+        virtual uint256 getBlockHash(int height) = 0;\n+\n+        //! Get block time.\n+        virtual int64_t getBlockTime(int height) = 0;\n+\n+        //! Get block median time past.\n+        virtual int64_t getBlockMedianTimePast(int height) = 0;\n+\n+        //! Check if block is empty.",
      "path": "src/interfaces/chain.h",
      "position": null,
      "original_position": 67,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "af8f8087699c30ec83995c54112955253bcaba84",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think this comment should make clear that the block must be available on disk:\r\n\r\n`Check that the full block is available on disk (ie has not been pruned), and contains transactions.`",
      "created_at": "2018-05-07T17:51:27Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r186497214",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186497214"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186499592",
      "pull_request_review_id": 118022524,
      "id": 186499592,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjQ5OTU5Mg==",
      "diff_hunk": "@@ -0,0 +1,251 @@\n+#ifndef BITCOIN_INTERFACES_CHAIN_H\n+#define BITCOIN_INTERFACES_CHAIN_H\n+\n+#include <optional.h>               // For Optional and nullopt\n+#include <policy/rbf.h>             // For RBFTransactionState\n+#include <primitives/transaction.h> // For CTransactionRef\n+\n+#include <memory>\n+#include <stddef.h>\n+#include <stdint.h>\n+#include <string>\n+#include <vector>\n+\n+class CBlock;\n+class CRPCCommand;\n+class CReserveScript;\n+class CScheduler;\n+class CValidationState;\n+class UniValue;\n+class uint256;\n+struct CBlockLocator;\n+struct FeeCalculation;\n+\n+namespace interfaces {\n+\n+class Handler;\n+\n+//! Interface for giving wallet processes access to blockchain state.\n+class Chain\n+{\n+public:\n+    virtual ~Chain() {}\n+\n+    //! Interface for querying locked chain state, used by legacy code that\n+    //! assumes state won't change between calls. New code should avoid using\n+    //! the Lock interface and instead call higher-level Chain methods\n+    //! that return more information so the chain doesn't need to stay locked\n+    //! between calls.\n+    class Lock\n+    {\n+    public:\n+        virtual ~Lock() {}\n+\n+        //! Get current chain height, not including genesis block (returns 0 if\n+        //! chain only contains genesis block, nothing if chain does not contain\n+        //! any blocks).\n+        virtual Optional<int> getHeight() = 0;\n+\n+        //! Get block height above genesis block. Returns 0 for genesis block,\n+        //! for following block, and so on. Returns nothing for a block not\n+        //! included in the current chain.\n+        virtual Optional<int> getBlockHeight(const uint256& hash) = 0;\n+\n+        //! Get block depth. Returns 1 for chain tip, 2 for preceding block, and\n+        //! so on. Returns 0 for a block not included in the current chain.\n+        virtual int getBlockDepth(const uint256& hash) = 0;\n+\n+        //! Get block hash.\n+        virtual uint256 getBlockHash(int height) = 0;\n+\n+        //! Get block time.\n+        virtual int64_t getBlockTime(int height) = 0;\n+\n+        //! Get block median time past.\n+        virtual int64_t getBlockMedianTimePast(int height) = 0;\n+\n+        //! Check if block is empty.",
      "path": "src/interfaces/chain.h",
      "position": null,
      "original_position": 67,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "af8f8087699c30ec83995c54112955253bcaba84",
      "in_reply_to_id": 186497214,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In fact, I think this function is misnamed. What we're interested in is whether the block is available on disk or not. The 'block contains transactions' conditional test was added here: https://github.com/bitcoin/bitcoin/commit/7e6569ea5be8cb26454ede3efb6a50b393aaa9be (comment here: https://github.com/bitcoin/bitcoin/pull/6057#issuecomment-97393680). I suggest renaming the function to `haveBlockOnDisk()` or similar.",
      "created_at": "2018-05-07T17:59:43Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r186499592",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186499592"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186501200",
      "pull_request_review_id": 118022524,
      "id": 186501200,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjUwMTIwMA==",
      "diff_hunk": "@@ -0,0 +1,251 @@\n+#ifndef BITCOIN_INTERFACES_CHAIN_H\n+#define BITCOIN_INTERFACES_CHAIN_H\n+\n+#include <optional.h>               // For Optional and nullopt\n+#include <policy/rbf.h>             // For RBFTransactionState\n+#include <primitives/transaction.h> // For CTransactionRef\n+\n+#include <memory>\n+#include <stddef.h>\n+#include <stdint.h>\n+#include <string>\n+#include <vector>\n+\n+class CBlock;\n+class CRPCCommand;\n+class CReserveScript;\n+class CScheduler;\n+class CValidationState;\n+class UniValue;\n+class uint256;\n+struct CBlockLocator;\n+struct FeeCalculation;\n+\n+namespace interfaces {\n+\n+class Handler;\n+\n+//! Interface for giving wallet processes access to blockchain state.\n+class Chain\n+{\n+public:\n+    virtual ~Chain() {}\n+\n+    //! Interface for querying locked chain state, used by legacy code that\n+    //! assumes state won't change between calls. New code should avoid using\n+    //! the Lock interface and instead call higher-level Chain methods\n+    //! that return more information so the chain doesn't need to stay locked\n+    //! between calls.\n+    class Lock\n+    {\n+    public:\n+        virtual ~Lock() {}\n+\n+        //! Get current chain height, not including genesis block (returns 0 if\n+        //! chain only contains genesis block, nothing if chain does not contain\n+        //! any blocks).\n+        virtual Optional<int> getHeight() = 0;\n+\n+        //! Get block height above genesis block. Returns 0 for genesis block,\n+        //! for following block, and so on. Returns nothing for a block not\n+        //! included in the current chain.\n+        virtual Optional<int> getBlockHeight(const uint256& hash) = 0;\n+\n+        //! Get block depth. Returns 1 for chain tip, 2 for preceding block, and\n+        //! so on. Returns 0 for a block not included in the current chain.\n+        virtual int getBlockDepth(const uint256& hash) = 0;\n+\n+        //! Get block hash.\n+        virtual uint256 getBlockHash(int height) = 0;\n+\n+        //! Get block time.\n+        virtual int64_t getBlockTime(int height) = 0;\n+\n+        //! Get block median time past.\n+        virtual int64_t getBlockMedianTimePast(int height) = 0;\n+\n+        //! Check if block is empty.\n+        virtual bool blockHasTransactions(int height) = 0;\n+\n+        //! Return height of earliest block in chain with timestamp equal or\n+        //! greater than the given time, or nothing if there is no block with a\n+        //! high enough timestamp.\n+        virtual Optional<int> findEarliestAtLeast(int64_t time) = 0;\n+\n+        //! Return height of last block in chain with timestamp less than the\n+        //! given, and height less than or equal to the given, or nothing if",
      "path": "src/interfaces/chain.h",
      "position": null,
      "original_position": 76,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "af8f8087699c30ec83995c54112955253bcaba84",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Shouldn't this be \"height greater than or equal to the given\"? The implementation starts at `start_height` and moves forwards along the chain.",
      "created_at": "2018-05-07T18:05:22Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r186501200",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186501200"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186538449",
      "pull_request_review_id": 118137361,
      "id": 186538449,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjUzODQ0OQ==",
      "diff_hunk": "@@ -0,0 +1,419 @@\n+#include <interfaces/chain.h>\n+\n+#include <chain.h>\n+#include <chainparams.h>\n+#include <interfaces/handler.h>\n+#include <net.h>\n+#include <policy/fees.h>\n+#include <policy/policy.h>\n+#include <policy/rbf.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <protocol.h>\n+#include <rpc/mining.h>\n+#include <rpc/protocol.h>\n+#include <rpc/server.h>\n+#include <sync.h>\n+#include <timedata.h>\n+#include <txmempool.h>\n+#include <ui_interface.h>\n+#include <uint256.h>\n+#include <univalue.h>\n+#include <util.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+\n+#include <algorithm>\n+#include <map>\n+#include <memory>\n+#include <tuple>\n+#include <unordered_map>\n+#include <utility>\n+\n+class CReserveScript;\n+\n+namespace interfaces {\n+namespace {\n+\n+//! Extension of std::reference_wrapper with operator< for use as map key.\n+template <typename T>\n+class Ref : public std::reference_wrapper<T>\n+{\n+public:\n+    using std::reference_wrapper<T>::reference_wrapper;\n+    bool operator<(const Ref<T>& other) const { return this->get() < other.get(); }\n+};\n+\n+class LockImpl : public Chain::Lock\n+{\n+    Optional<int> getHeight() override\n+    {\n+        int height = ::chainActive.Height();\n+        if (height >= 0) {\n+            return height;\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> getBlockHeight(const uint256& hash) override\n+    {\n+        auto it = ::mapBlockIndex.find(hash);\n+        if (it != ::mapBlockIndex.end() && it->second) {\n+            if (::chainActive.Contains(it->second)) {\n+                return it->second->nHeight;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    int getBlockDepth(const uint256& hash) override\n+    {\n+        const Optional<int> tip_height = getHeight();\n+        const Optional<int> height = getBlockHeight(hash);\n+        return tip_height && height ? *tip_height - *height + 1 : 0;\n+    }\n+    uint256 getBlockHash(int height) override { return ::chainActive[height]->GetBlockHash(); }\n+    int64_t getBlockTime(int height) override { return ::chainActive[height]->GetBlockTime(); }\n+    int64_t getBlockMedianTimePast(int height) override { return ::chainActive[height]->GetMedianTimePast(); }\n+    bool blockHasTransactions(int height) override\n+    {\n+        CBlockIndex* block = ::chainActive[height];\n+        return block && (block->nStatus & BLOCK_HAVE_DATA) && block->nTx > 0;\n+    }\n+    Optional<int> findEarliestAtLeast(int64_t time) override\n+    {\n+        CBlockIndex* block = ::chainActive.FindEarliestAtLeast(time);\n+        if (block) {\n+            return block->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findLastBefore(int64_t time, int start_height) override\n+    {\n+        CBlockIndex* block = ::chainActive[start_height];\n+        while (block && block->GetBlockTime() < time) {\n+            block = ::chainActive.Next(block);\n+        }\n+        if (block) {\n+            return block->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findPruned(int start_height, Optional<int> stop_height) override\n+    {\n+        if (::fPruneMode) {\n+            CBlockIndex* block = stop_height ? ::chainActive[*stop_height] : ::chainActive.Tip();\n+            while (block && block->nHeight >= start_height) {\n+                if (!(block->nStatus & BLOCK_HAVE_DATA)) {\n+                    return block->nHeight;\n+                }\n+                block = block->pprev;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findFork(const uint256& hash, Optional<int>* height) override\n+    {\n+        const CBlockIndex *block{nullptr}, *fork{nullptr};\n+        auto it = ::mapBlockIndex.find(hash);\n+        if (it != ::mapBlockIndex.end()) {\n+            block = it->second;\n+            fork = ::chainActive.FindFork(block);\n+        }\n+        if (height) {\n+            if (block) {\n+                *height = block->nHeight;\n+            } else {\n+                height->reset();\n+            }\n+        }\n+        if (fork) {\n+            return fork->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    bool isPotentialTip(const uint256& hash) override\n+    {\n+        if (::chainActive.Tip()->GetBlockHash() == hash) return true;\n+        auto it = ::mapBlockIndex.find(hash);\n+        return it != ::mapBlockIndex.end() && it->second->GetAncestor(::chainActive.Height()) == ::chainActive.Tip();\n+    }\n+    CBlockLocator getLocator() override { return ::chainActive.GetLocator(); }\n+    Optional<int> findLocatorFork(const CBlockLocator& locator) override\n+    {\n+        if (CBlockIndex* fork = FindForkInGlobalIndex(::chainActive, locator)) {\n+            return fork->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    bool checkFinalTx(const CTransaction& tx) override { return CheckFinalTx(tx); }\n+    bool isWitnessEnabled() override { return ::IsWitnessEnabled(::chainActive.Tip(), Params().GetConsensus()); }\n+    bool acceptToMemoryPool(CTransactionRef tx, CValidationState& state) override\n+    {\n+        return AcceptToMemoryPool(::mempool, state, tx, nullptr /* missing inputs */, nullptr /* txn replaced */,\n+            false /* bypass limits */, ::maxTxFee /* absurd fee */);\n+    }\n+};\n+\n+class LockingStateImpl : public LockImpl, public CCriticalBlock\n+{\n+    using CCriticalBlock::CCriticalBlock;\n+};\n+\n+class HandlerImpl : public Handler, private CValidationInterface\n+{\n+public:\n+    HandlerImpl(Chain::Notifications& notifications) : m_notifications(notifications)\n+    {\n+        RegisterValidationInterface(this);\n+    }\n+    ~HandlerImpl() override\n+    {\n+        // Don't call UnregisterValidationInterface here because it would try to\n+        // access virtual methods on this object which can't be accessed during\n+        // destruction. Also UnregisterAllValidationInterfaces is already called\n+        // at this point, so unregistering this object would be redundant.\n+    }\n+    void disconnect() override { UnregisterValidationInterface(this); }\n+    void TransactionAddedToMempool(const CTransactionRef& tx) override\n+    {\n+        m_notifications.TransactionAddedToMempool(tx);\n+    }\n+    void TransactionRemovedFromMempool(const CTransactionRef& tx) override\n+    {\n+        m_notifications.TransactionRemovedFromMempool(tx);\n+    }\n+    void BlockConnected(const std::shared_ptr<const CBlock>& block,\n+        const CBlockIndex* index,\n+        const std::vector<CTransactionRef>& tx_conflicted) override\n+    {\n+        m_notifications.BlockConnected(*block, index->GetBlockHash(), tx_conflicted);\n+    }\n+    void BlockDisconnected(const std::shared_ptr<const CBlock>& block) override\n+    {\n+        m_notifications.BlockDisconnected(*block);\n+    }\n+    void ChainStateFlushed(const CBlockLocator& locator) override { m_notifications.ChainStateFlushed(locator); }\n+    void Inventory(const uint256& hash) override { m_notifications.Inventory(hash); }\n+    void ResendWalletTransactions(int64_t best_block_time, CConnman* connman) override\n+    {\n+        m_notifications.ResendWalletTransactions(best_block_time);\n+    }\n+    Chain::Notifications& m_notifications;\n+};\n+\n+class ChainImpl : public Chain\n+{\n+public:\n+    std::unique_ptr<Chain::Lock> lock(bool try_lock) override\n+    {\n+        auto result = MakeUnique<LockingStateImpl>(::cs_main, \"cs_main\", __FILE__, __LINE__, try_lock);\n+        if (try_lock && result && !*result) return {};\n+        // std::move necessary on some compilers due to conversion from\n+        // LockingStateImpl to Lock pointer\n+        return std::move(result);\n+    }\n+    std::unique_ptr<Chain::Lock> assumeLocked() override { return MakeUnique<LockImpl>(); }\n+    bool findBlock(const uint256& hash, CBlock* block, int64_t* time, int64_t* time_max) override\n+    {\n+        CBlockIndex* index;\n+        {\n+            LOCK(cs_main);\n+            auto it = ::mapBlockIndex.find(hash);\n+            if (it == ::mapBlockIndex.end()) {\n+                return false;\n+            }\n+            index = it->second;\n+            if (time) {\n+                *time = index->GetBlockTime();\n+            }\n+            if (time_max) {\n+                *time_max = index->GetBlockTimeMax();\n+            }\n+        }\n+        if (block && !ReadBlockFromDisk(*block, index, Params().GetConsensus())) {\n+            block->SetNull();\n+        }\n+        return true;\n+    }\n+    double guessVerificationProgress(const uint256& block_hash) override\n+    {\n+        LOCK(cs_main);\n+        auto it = ::mapBlockIndex.find(block_hash);\n+        return GuessVerificationProgress(Params().TxData(), it != ::mapBlockIndex.end() ? it->second : nullptr);\n+    }\n+    int64_t getVirtualTransactionSize(const CTransaction& tx) override { return GetVirtualTransactionSize(tx); }\n+    RBFTransactionState isRBFOptIn(const CTransaction& tx) override\n+    {\n+        LOCK(::mempool.cs);\n+        return IsRBFOptIn(tx, ::mempool);\n+    }\n+    bool hasDescendantsInMempool(const uint256& txid) override\n+    {\n+        LOCK(::mempool.cs);\n+        auto it_mp = ::mempool.mapTx.find(txid);\n+        return it_mp != ::mempool.mapTx.end() && it_mp->GetCountWithDescendants() > 1;\n+    }\n+    bool relayTransaction(const uint256& txid) override\n+    {\n+        if (g_connman) {\n+            CInv inv(MSG_TX, txid);\n+            g_connman->ForEachNode([&inv](CNode* node) { node->PushInventory(inv); });\n+            return true;\n+        }\n+        return false;\n+    }\n+    bool transactionWithinChainLimit(const uint256& txid, size_t chain_limit) override\n+    {\n+        return ::mempool.TransactionWithinChainLimit(txid, chain_limit);\n+    }\n+    bool checkChainLimits(CTransactionRef tx) override\n+    {\n+        LockPoints lp;\n+        CTxMemPoolEntry entry(tx, 0, 0, 0, false, 0, lp);\n+        CTxMemPool::setEntries setAncestors;\n+        size_t nLimitAncestors = gArgs.GetArg(\"-limitancestorcount\", DEFAULT_ANCESTOR_LIMIT);\n+        size_t nLimitAncestorSize = gArgs.GetArg(\"-limitancestorsize\", DEFAULT_ANCESTOR_SIZE_LIMIT) * 1000;\n+        size_t nLimitDescendants = gArgs.GetArg(\"-limitdescendantcount\", DEFAULT_DESCENDANT_LIMIT);\n+        size_t nLimitDescendantSize = gArgs.GetArg(\"-limitdescendantsize\", DEFAULT_DESCENDANT_SIZE_LIMIT) * 1000;\n+        std::string errString;\n+        if (!::mempool.CalculateMemPoolAncestors(entry, setAncestors, nLimitAncestors, nLimitAncestorSize,\n+                nLimitDescendants, nLimitDescendantSize, errString)) {\n+            return false;\n+        }\n+        return true;\n+    }\n+    CFeeRate estimateSmartFee(int num_blocks, bool conservative, FeeCalculation* calc) override\n+    {\n+        return ::feeEstimator.estimateSmartFee(num_blocks, calc, conservative);\n+    }\n+    int estimateMaxBlocks() override\n+    {\n+        return ::feeEstimator.HighestTargetTracked(FeeEstimateHorizon::LONG_HALFLIFE);\n+    }\n+    CFeeRate poolMinFee() override\n+    {\n+        return ::mempool.GetMinFee(gArgs.GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000);\n+    }\n+    bool getPruneMode() override { return ::fPruneMode; }\n+    bool p2pEnabled() override { return g_connman != nullptr; }\n+    int64_t getAdjustedTime() override { return GetAdjustedTime(); }\n+    void initMessage(const std::string& message) override { ::uiInterface.InitMessage(message); }\n+    void initWarning(const std::string& message) override { InitWarning(message); }\n+    void initError(const std::string& message) override { InitError(message); }\n+    UniValue generateBlocks(std::shared_ptr<CReserveScript> coinbase_script,\n+        int num_blocks,\n+        uint64_t max_tries,\n+        bool keep_script) override\n+    {\n+        return ::generateBlocks(coinbase_script, num_blocks, max_tries, keep_script);\n+    }\n+    unsigned int parseConfirmTarget(const UniValue& value) override { return ParseConfirmTarget(value); }\n+    std::unique_ptr<Handler> handleNotifications(Notifications& notifications) override\n+    {\n+        return MakeUnique<HandlerImpl>(notifications);\n+    }\n+    void waitForNotifications() override { SyncWithValidationInterfaceQueue(); }\n+    std::unique_ptr<Handler> handleRpc(const CRPCCommand& command) override;\n+\n+    //! Map of RPC method name to forwarder. If multiple clients provide\n+    //! implementations of the same RPC method, the RPC forwarder can dispatch\n+    //! between them.\n+    class RpcForwarder;\n+    std::map<Ref<const std::string>, RpcForwarder> m_rpc_forwarders;\n+};\n+\n+//! Forwarder for one RPC method.\n+class ChainImpl::RpcForwarder\n+{\n+public:\n+    RpcForwarder(const CRPCCommand& command) : m_command(command)\n+    {\n+        m_command.actor = [this](const JSONRPCRequest& request) { return forwardRequest(request); };\n+    }\n+\n+    bool registerForwarder() { return ::tableRPC.appendCommand(m_command.name, &m_command); }\n+\n+    void addCommand(const CRPCCommand& command) { m_commands.emplace_back(&command); }\n+\n+    void removeCommand(const CRPCCommand& command)\n+    {\n+        m_commands.erase(std::remove(m_commands.begin(), m_commands.end(), &command));\n+    }\n+\n+    UniValue forwardRequest(const JSONRPCRequest& request) const\n+    {\n+        // Simple forwarding of RPC requests. This just sends the request to the",
      "path": "src/interfaces/chain.cpp",
      "position": null,
      "original_position": 344,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "af8f8087699c30ec83995c54112955253bcaba84",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Supporting multiple clients makes this more complex than it needs to be.\r\n\r\nThis PR would be easier to review if it initially supported just a single client (as we do today). A future PR could extend the RPC forwarding to support multiple clients.",
      "created_at": "2018-05-07T20:23:47Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r186538449",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186538449"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 370,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186791509",
      "pull_request_review_id": 117825376,
      "id": 186791509,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Njc5MTUwOQ==",
      "diff_hunk": "@@ -0,0 +1,251 @@\n+#ifndef BITCOIN_INTERFACES_CHAIN_H\n+#define BITCOIN_INTERFACES_CHAIN_H\n+\n+#include <optional.h>               // For Optional and nullopt\n+#include <policy/rbf.h>             // For RBFTransactionState\n+#include <primitives/transaction.h> // For CTransactionRef\n+\n+#include <memory>\n+#include <stddef.h>\n+#include <stdint.h>\n+#include <string>\n+#include <vector>\n+\n+class CBlock;\n+class CRPCCommand;\n+class CReserveScript;\n+class CScheduler;\n+class CValidationState;\n+class UniValue;\n+class uint256;\n+struct CBlockLocator;\n+struct FeeCalculation;\n+\n+namespace interfaces {\n+\n+class Handler;\n+\n+//! Interface for giving wallet processes access to blockchain state.\n+class Chain\n+{\n+public:\n+    virtual ~Chain() {}\n+\n+    //! Interface for querying locked chain state, used by legacy code that\n+    //! assumes state won't change between calls. New code should avoid using\n+    //! the Lock interface and instead call higher-level Chain methods\n+    //! that return more information so the chain doesn't need to stay locked\n+    //! between calls.\n+    class Lock\n+    {\n+    public:\n+        virtual ~Lock() {}\n+\n+        //! Get current chain height, not including genesis block (returns 0 if\n+        //! chain only contains genesis block, nothing if chain does not contain\n+        //! any blocks).\n+        virtual Optional<int> getHeight() = 0;\n+\n+        //! Get block height above genesis block. Returns 0 for genesis block,\n+        //! for following block, and so on. Returns nothing for a block not\n+        //! included in the current chain.\n+        virtual Optional<int> getBlockHeight(const uint256& hash) = 0;\n+\n+        //! Get block depth. Returns 1 for chain tip, 2 for preceding block, and\n+        //! so on. Returns 0 for a block not included in the current chain.\n+        virtual int getBlockDepth(const uint256& hash) = 0;\n+\n+        //! Get block hash.\n+        virtual uint256 getBlockHash(int height) = 0;\n+\n+        //! Get block time.\n+        virtual int64_t getBlockTime(int height) = 0;\n+\n+        //! Get block median time past.\n+        virtual int64_t getBlockMedianTimePast(int height) = 0;\n+\n+        //! Check if block is empty.",
      "path": "src/interfaces/chain.h",
      "position": null,
      "original_position": 67,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "af8f8087699c30ec83995c54112955253bcaba84",
      "in_reply_to_id": 186497214,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r186497214\r\n\r\n> I think this comment should make clear that the block must be available on disk:\r\n\r\nRenamed as suggested and added your comment in 731b02dd1885e5d7242c894d14054ead91044550.\r\n",
      "created_at": "2018-05-08T16:39:31Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r186791509",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186791509"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186791578",
      "pull_request_review_id": 117825376,
      "id": 186791578,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Njc5MTU3OA==",
      "diff_hunk": "@@ -0,0 +1,251 @@\n+#ifndef BITCOIN_INTERFACES_CHAIN_H\n+#define BITCOIN_INTERFACES_CHAIN_H\n+\n+#include <optional.h>               // For Optional and nullopt\n+#include <policy/rbf.h>             // For RBFTransactionState\n+#include <primitives/transaction.h> // For CTransactionRef\n+\n+#include <memory>\n+#include <stddef.h>\n+#include <stdint.h>\n+#include <string>\n+#include <vector>\n+\n+class CBlock;\n+class CRPCCommand;\n+class CReserveScript;\n+class CScheduler;\n+class CValidationState;\n+class UniValue;\n+class uint256;\n+struct CBlockLocator;\n+struct FeeCalculation;\n+\n+namespace interfaces {\n+\n+class Handler;\n+\n+//! Interface for giving wallet processes access to blockchain state.\n+class Chain\n+{\n+public:\n+    virtual ~Chain() {}\n+\n+    //! Interface for querying locked chain state, used by legacy code that\n+    //! assumes state won't change between calls. New code should avoid using\n+    //! the Lock interface and instead call higher-level Chain methods\n+    //! that return more information so the chain doesn't need to stay locked\n+    //! between calls.\n+    class Lock\n+    {\n+    public:\n+        virtual ~Lock() {}\n+\n+        //! Get current chain height, not including genesis block (returns 0 if\n+        //! chain only contains genesis block, nothing if chain does not contain\n+        //! any blocks).\n+        virtual Optional<int> getHeight() = 0;\n+\n+        //! Get block height above genesis block. Returns 0 for genesis block,\n+        //! for following block, and so on. Returns nothing for a block not\n+        //! included in the current chain.\n+        virtual Optional<int> getBlockHeight(const uint256& hash) = 0;\n+\n+        //! Get block depth. Returns 1 for chain tip, 2 for preceding block, and\n+        //! so on. Returns 0 for a block not included in the current chain.\n+        virtual int getBlockDepth(const uint256& hash) = 0;\n+\n+        //! Get block hash.\n+        virtual uint256 getBlockHash(int height) = 0;\n+\n+        //! Get block time.\n+        virtual int64_t getBlockTime(int height) = 0;\n+\n+        //! Get block median time past.\n+        virtual int64_t getBlockMedianTimePast(int height) = 0;\n+\n+        //! Check if block is empty.\n+        virtual bool blockHasTransactions(int height) = 0;\n+\n+        //! Return height of earliest block in chain with timestamp equal or\n+        //! greater than the given time, or nothing if there is no block with a\n+        //! high enough timestamp.\n+        virtual Optional<int> findEarliestAtLeast(int64_t time) = 0;\n+\n+        //! Return height of last block in chain with timestamp less than the\n+        //! given, and height less than or equal to the given, or nothing if",
      "path": "src/interfaces/chain.h",
      "position": null,
      "original_position": 76,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "af8f8087699c30ec83995c54112955253bcaba84",
      "in_reply_to_id": 186501200,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r186501200\r\n\r\n> Shouldn't this be \"height greater than or equal to the given\"?\r\n\r\nYes you're right. Updated comment and renamed method to reflect this in d1ea68d7aa0e8a5b7389a38c4176b38bff5e94b4.",
      "created_at": "2018-05-08T16:39:47Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r186791578",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186791578"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186791740",
      "pull_request_review_id": 117825376,
      "id": 186791740,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Njc5MTc0MA==",
      "diff_hunk": "@@ -0,0 +1,419 @@\n+#include <interfaces/chain.h>\n+\n+#include <chain.h>\n+#include <chainparams.h>\n+#include <interfaces/handler.h>\n+#include <net.h>\n+#include <policy/fees.h>\n+#include <policy/policy.h>\n+#include <policy/rbf.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <protocol.h>\n+#include <rpc/mining.h>\n+#include <rpc/protocol.h>\n+#include <rpc/server.h>\n+#include <sync.h>\n+#include <timedata.h>\n+#include <txmempool.h>\n+#include <ui_interface.h>\n+#include <uint256.h>\n+#include <univalue.h>\n+#include <util.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+\n+#include <algorithm>\n+#include <map>\n+#include <memory>\n+#include <tuple>\n+#include <unordered_map>\n+#include <utility>\n+\n+class CReserveScript;\n+\n+namespace interfaces {\n+namespace {\n+\n+//! Extension of std::reference_wrapper with operator< for use as map key.\n+template <typename T>\n+class Ref : public std::reference_wrapper<T>\n+{\n+public:\n+    using std::reference_wrapper<T>::reference_wrapper;\n+    bool operator<(const Ref<T>& other) const { return this->get() < other.get(); }\n+};\n+\n+class LockImpl : public Chain::Lock\n+{\n+    Optional<int> getHeight() override\n+    {\n+        int height = ::chainActive.Height();\n+        if (height >= 0) {\n+            return height;\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> getBlockHeight(const uint256& hash) override\n+    {\n+        auto it = ::mapBlockIndex.find(hash);\n+        if (it != ::mapBlockIndex.end() && it->second) {\n+            if (::chainActive.Contains(it->second)) {\n+                return it->second->nHeight;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    int getBlockDepth(const uint256& hash) override\n+    {\n+        const Optional<int> tip_height = getHeight();\n+        const Optional<int> height = getBlockHeight(hash);\n+        return tip_height && height ? *tip_height - *height + 1 : 0;\n+    }\n+    uint256 getBlockHash(int height) override { return ::chainActive[height]->GetBlockHash(); }\n+    int64_t getBlockTime(int height) override { return ::chainActive[height]->GetBlockTime(); }\n+    int64_t getBlockMedianTimePast(int height) override { return ::chainActive[height]->GetMedianTimePast(); }\n+    bool blockHasTransactions(int height) override\n+    {\n+        CBlockIndex* block = ::chainActive[height];\n+        return block && (block->nStatus & BLOCK_HAVE_DATA) && block->nTx > 0;\n+    }\n+    Optional<int> findEarliestAtLeast(int64_t time) override\n+    {\n+        CBlockIndex* block = ::chainActive.FindEarliestAtLeast(time);\n+        if (block) {\n+            return block->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findLastBefore(int64_t time, int start_height) override\n+    {\n+        CBlockIndex* block = ::chainActive[start_height];\n+        while (block && block->GetBlockTime() < time) {\n+            block = ::chainActive.Next(block);\n+        }\n+        if (block) {\n+            return block->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findPruned(int start_height, Optional<int> stop_height) override\n+    {\n+        if (::fPruneMode) {\n+            CBlockIndex* block = stop_height ? ::chainActive[*stop_height] : ::chainActive.Tip();\n+            while (block && block->nHeight >= start_height) {\n+                if (!(block->nStatus & BLOCK_HAVE_DATA)) {\n+                    return block->nHeight;\n+                }\n+                block = block->pprev;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findFork(const uint256& hash, Optional<int>* height) override\n+    {\n+        const CBlockIndex *block{nullptr}, *fork{nullptr};\n+        auto it = ::mapBlockIndex.find(hash);\n+        if (it != ::mapBlockIndex.end()) {\n+            block = it->second;\n+            fork = ::chainActive.FindFork(block);\n+        }\n+        if (height) {\n+            if (block) {\n+                *height = block->nHeight;\n+            } else {\n+                height->reset();\n+            }\n+        }\n+        if (fork) {\n+            return fork->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    bool isPotentialTip(const uint256& hash) override\n+    {\n+        if (::chainActive.Tip()->GetBlockHash() == hash) return true;\n+        auto it = ::mapBlockIndex.find(hash);\n+        return it != ::mapBlockIndex.end() && it->second->GetAncestor(::chainActive.Height()) == ::chainActive.Tip();\n+    }\n+    CBlockLocator getLocator() override { return ::chainActive.GetLocator(); }\n+    Optional<int> findLocatorFork(const CBlockLocator& locator) override\n+    {\n+        if (CBlockIndex* fork = FindForkInGlobalIndex(::chainActive, locator)) {\n+            return fork->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    bool checkFinalTx(const CTransaction& tx) override { return CheckFinalTx(tx); }\n+    bool isWitnessEnabled() override { return ::IsWitnessEnabled(::chainActive.Tip(), Params().GetConsensus()); }\n+    bool acceptToMemoryPool(CTransactionRef tx, CValidationState& state) override\n+    {\n+        return AcceptToMemoryPool(::mempool, state, tx, nullptr /* missing inputs */, nullptr /* txn replaced */,\n+            false /* bypass limits */, ::maxTxFee /* absurd fee */);\n+    }\n+};\n+\n+class LockingStateImpl : public LockImpl, public CCriticalBlock\n+{\n+    using CCriticalBlock::CCriticalBlock;\n+};\n+\n+class HandlerImpl : public Handler, private CValidationInterface\n+{\n+public:\n+    HandlerImpl(Chain::Notifications& notifications) : m_notifications(notifications)\n+    {\n+        RegisterValidationInterface(this);\n+    }\n+    ~HandlerImpl() override\n+    {\n+        // Don't call UnregisterValidationInterface here because it would try to\n+        // access virtual methods on this object which can't be accessed during\n+        // destruction. Also UnregisterAllValidationInterfaces is already called\n+        // at this point, so unregistering this object would be redundant.\n+    }\n+    void disconnect() override { UnregisterValidationInterface(this); }\n+    void TransactionAddedToMempool(const CTransactionRef& tx) override\n+    {\n+        m_notifications.TransactionAddedToMempool(tx);\n+    }\n+    void TransactionRemovedFromMempool(const CTransactionRef& tx) override\n+    {\n+        m_notifications.TransactionRemovedFromMempool(tx);\n+    }\n+    void BlockConnected(const std::shared_ptr<const CBlock>& block,\n+        const CBlockIndex* index,\n+        const std::vector<CTransactionRef>& tx_conflicted) override\n+    {\n+        m_notifications.BlockConnected(*block, index->GetBlockHash(), tx_conflicted);\n+    }\n+    void BlockDisconnected(const std::shared_ptr<const CBlock>& block) override\n+    {\n+        m_notifications.BlockDisconnected(*block);\n+    }\n+    void ChainStateFlushed(const CBlockLocator& locator) override { m_notifications.ChainStateFlushed(locator); }\n+    void Inventory(const uint256& hash) override { m_notifications.Inventory(hash); }\n+    void ResendWalletTransactions(int64_t best_block_time, CConnman* connman) override\n+    {\n+        m_notifications.ResendWalletTransactions(best_block_time);\n+    }\n+    Chain::Notifications& m_notifications;\n+};\n+\n+class ChainImpl : public Chain\n+{\n+public:\n+    std::unique_ptr<Chain::Lock> lock(bool try_lock) override\n+    {\n+        auto result = MakeUnique<LockingStateImpl>(::cs_main, \"cs_main\", __FILE__, __LINE__, try_lock);\n+        if (try_lock && result && !*result) return {};\n+        // std::move necessary on some compilers due to conversion from\n+        // LockingStateImpl to Lock pointer\n+        return std::move(result);\n+    }\n+    std::unique_ptr<Chain::Lock> assumeLocked() override { return MakeUnique<LockImpl>(); }\n+    bool findBlock(const uint256& hash, CBlock* block, int64_t* time, int64_t* time_max) override\n+    {\n+        CBlockIndex* index;\n+        {\n+            LOCK(cs_main);\n+            auto it = ::mapBlockIndex.find(hash);\n+            if (it == ::mapBlockIndex.end()) {\n+                return false;\n+            }\n+            index = it->second;\n+            if (time) {\n+                *time = index->GetBlockTime();\n+            }\n+            if (time_max) {\n+                *time_max = index->GetBlockTimeMax();\n+            }\n+        }\n+        if (block && !ReadBlockFromDisk(*block, index, Params().GetConsensus())) {\n+            block->SetNull();\n+        }\n+        return true;\n+    }\n+    double guessVerificationProgress(const uint256& block_hash) override\n+    {\n+        LOCK(cs_main);\n+        auto it = ::mapBlockIndex.find(block_hash);\n+        return GuessVerificationProgress(Params().TxData(), it != ::mapBlockIndex.end() ? it->second : nullptr);\n+    }\n+    int64_t getVirtualTransactionSize(const CTransaction& tx) override { return GetVirtualTransactionSize(tx); }\n+    RBFTransactionState isRBFOptIn(const CTransaction& tx) override\n+    {\n+        LOCK(::mempool.cs);\n+        return IsRBFOptIn(tx, ::mempool);\n+    }\n+    bool hasDescendantsInMempool(const uint256& txid) override\n+    {\n+        LOCK(::mempool.cs);\n+        auto it_mp = ::mempool.mapTx.find(txid);\n+        return it_mp != ::mempool.mapTx.end() && it_mp->GetCountWithDescendants() > 1;\n+    }\n+    bool relayTransaction(const uint256& txid) override\n+    {\n+        if (g_connman) {\n+            CInv inv(MSG_TX, txid);\n+            g_connman->ForEachNode([&inv](CNode* node) { node->PushInventory(inv); });\n+            return true;\n+        }\n+        return false;\n+    }\n+    bool transactionWithinChainLimit(const uint256& txid, size_t chain_limit) override\n+    {\n+        return ::mempool.TransactionWithinChainLimit(txid, chain_limit);\n+    }\n+    bool checkChainLimits(CTransactionRef tx) override\n+    {\n+        LockPoints lp;\n+        CTxMemPoolEntry entry(tx, 0, 0, 0, false, 0, lp);\n+        CTxMemPool::setEntries setAncestors;\n+        size_t nLimitAncestors = gArgs.GetArg(\"-limitancestorcount\", DEFAULT_ANCESTOR_LIMIT);\n+        size_t nLimitAncestorSize = gArgs.GetArg(\"-limitancestorsize\", DEFAULT_ANCESTOR_SIZE_LIMIT) * 1000;\n+        size_t nLimitDescendants = gArgs.GetArg(\"-limitdescendantcount\", DEFAULT_DESCENDANT_LIMIT);\n+        size_t nLimitDescendantSize = gArgs.GetArg(\"-limitdescendantsize\", DEFAULT_DESCENDANT_SIZE_LIMIT) * 1000;\n+        std::string errString;\n+        if (!::mempool.CalculateMemPoolAncestors(entry, setAncestors, nLimitAncestors, nLimitAncestorSize,\n+                nLimitDescendants, nLimitDescendantSize, errString)) {\n+            return false;\n+        }\n+        return true;\n+    }\n+    CFeeRate estimateSmartFee(int num_blocks, bool conservative, FeeCalculation* calc) override\n+    {\n+        return ::feeEstimator.estimateSmartFee(num_blocks, calc, conservative);\n+    }\n+    int estimateMaxBlocks() override\n+    {\n+        return ::feeEstimator.HighestTargetTracked(FeeEstimateHorizon::LONG_HALFLIFE);\n+    }\n+    CFeeRate poolMinFee() override\n+    {\n+        return ::mempool.GetMinFee(gArgs.GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000);\n+    }\n+    bool getPruneMode() override { return ::fPruneMode; }\n+    bool p2pEnabled() override { return g_connman != nullptr; }\n+    int64_t getAdjustedTime() override { return GetAdjustedTime(); }\n+    void initMessage(const std::string& message) override { ::uiInterface.InitMessage(message); }\n+    void initWarning(const std::string& message) override { InitWarning(message); }\n+    void initError(const std::string& message) override { InitError(message); }\n+    UniValue generateBlocks(std::shared_ptr<CReserveScript> coinbase_script,\n+        int num_blocks,\n+        uint64_t max_tries,\n+        bool keep_script) override\n+    {\n+        return ::generateBlocks(coinbase_script, num_blocks, max_tries, keep_script);\n+    }\n+    unsigned int parseConfirmTarget(const UniValue& value) override { return ParseConfirmTarget(value); }\n+    std::unique_ptr<Handler> handleNotifications(Notifications& notifications) override\n+    {\n+        return MakeUnique<HandlerImpl>(notifications);\n+    }\n+    void waitForNotifications() override { SyncWithValidationInterfaceQueue(); }\n+    std::unique_ptr<Handler> handleRpc(const CRPCCommand& command) override;\n+\n+    //! Map of RPC method name to forwarder. If multiple clients provide\n+    //! implementations of the same RPC method, the RPC forwarder can dispatch\n+    //! between them.\n+    class RpcForwarder;\n+    std::map<Ref<const std::string>, RpcForwarder> m_rpc_forwarders;\n+};\n+\n+//! Forwarder for one RPC method.\n+class ChainImpl::RpcForwarder\n+{\n+public:\n+    RpcForwarder(const CRPCCommand& command) : m_command(command)\n+    {\n+        m_command.actor = [this](const JSONRPCRequest& request) { return forwardRequest(request); };\n+    }\n+\n+    bool registerForwarder() { return ::tableRPC.appendCommand(m_command.name, &m_command); }\n+\n+    void addCommand(const CRPCCommand& command) { m_commands.emplace_back(&command); }\n+\n+    void removeCommand(const CRPCCommand& command)\n+    {\n+        m_commands.erase(std::remove(m_commands.begin(), m_commands.end(), &command));\n+    }\n+\n+    UniValue forwardRequest(const JSONRPCRequest& request) const\n+    {\n+        // Simple forwarding of RPC requests. This just sends the request to the",
      "path": "src/interfaces/chain.cpp",
      "position": null,
      "original_position": 344,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "af8f8087699c30ec83995c54112955253bcaba84",
      "in_reply_to_id": 186538449,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r186538449\r\n\r\n> Supporting multiple clients makes this more complex than it needs to be.\r\n>\r\n> This PR would be easier to review if it initially supported just a single client (as we do today). A future PR could extend the RPC forwarding to support multiple clients.\r\n\r\nRPC forwarding is complex I think mostly because I tried to make few changes to `src/rpc/` and instead do forwarding to wallet clients in a new layer. Making the `src/rpc/` code aware of clients and able to disconnect handlers might be a way to make dispatching simpler overall, but would require a larger diff. I'm also not sure it would be useful in the longer run, because it's probably better for wallet processes to just listen for RPC requests directly instead of having the node process listen and forward requests to them.\r\n\r\nSupporting only one client per RPC method instead of multiple seems like it would be sacrificing correctness and only providing a minor simplification. It would allow getting rid of the try/catch in `RpcForwarder::forwardRequest` and replacing `std::vector<const CRPCCommand*> m_commands;` with `const CRPCCommand* m_command;` but I think that's it.",
      "created_at": "2018-05-08T16:40:21Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r186791740",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186791740"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 370,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186791830",
      "pull_request_review_id": 117825376,
      "id": 186791830,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Njc5MTgzMA==",
      "diff_hunk": "@@ -1694,109 +1695,128 @@ int64_t CWallet::RescanFromTime(int64_t startTime, const WalletRescanReserver& r\n     // Find starting block. May be null if nCreateTime is greater than the\n     // highest blockchain timestamp, in which case there is nothing that needs\n     // to be scanned.\n-    CBlockIndex* startBlock = nullptr;\n+    uint256 start_block;\n     {\n-        LOCK(cs_main);\n-        startBlock = chainActive.FindEarliestAtLeast(startTime - TIMESTAMP_WINDOW);\n-        LogPrintf(\"%s: Rescanning last %i blocks\\n\", __func__, startBlock ? chainActive.Height() - startBlock->nHeight + 1 : 0);\n-    }\n-\n-    if (startBlock) {\n-        const CBlockIndex* const failedBlock = ScanForWalletTransactions(startBlock, nullptr, reserver, update);\n-        if (failedBlock) {\n-            return failedBlock->GetBlockTimeMax() + TIMESTAMP_WINDOW + 1;\n+        auto locked_chain = m_chain->lock();\n+        const Optional<int> start_height = locked_chain->findEarliestAtLeast(startTime - TIMESTAMP_WINDOW);\n+        const Optional<int> tip_height = locked_chain->getHeight();\n+        LogPrintf(\"%s: Rescanning last %i blocks\\n\", __func__, tip_height && start_height ? *tip_height - *start_height + 1 : 0);\n+        if (start_height) start_block = locked_chain->getBlockHash(*start_height);\n+    }\n+\n+    if (!start_block.IsNull()) {\n+        uint256 failed_block = ScanForWalletTransactions(start_block, {} /* stop block */, reserver, update);\n+        if (!failed_block.IsNull()) {\n+            int64_t time_max;\n+            if (!m_chain->findBlock(failed_block, nullptr /* CBlock */, nullptr /* time */, &time_max)) {\n+                throw std::logic_error(\"ScanForWalletTransactions returned invalid block hash\");\n+            }\n+            return time_max + TIMESTAMP_WINDOW + 1;\n         }\n     }\n     return startTime;\n }\n \n /**\n- * Scan the block chain (starting in pindexStart) for transactions\n+ * Scan the block chain (starting in start_block) for transactions\n  * from or to us. If fUpdate is true, found transactions that already\n  * exist in the wallet will be updated.\n  *\n  * Returns null if scan was successful. Otherwise, if a complete rescan was not\n  * possible (due to pruning or corruption), returns pointer to the most recent\n  * block that could not be scanned.\n  *\n- * If pindexStop is not a nullptr, the scan will stop at the block-index\n- * defined by pindexStop\n+ * If stop_block is not null, the scan will stop at the block-index\n+ * defined by stop_block\n  *\n- * Caller needs to make sure pindexStop (and the optional pindexStart) are on\n+ * Caller needs to make sure stop_block (and the optional start_block) are on\n  * the main chain after to the addition of any new keys you want to detect\n  * transactions for.\n  */\n-CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, CBlockIndex* pindexStop, const WalletRescanReserver &reserver, bool fUpdate)\n+uint256 CWallet::ScanForWalletTransactions(const uint256& start_block, const uint256& stop_block, const WalletRescanReserver &reserver, bool fUpdate)\n {\n     int64_t nNow = GetTime();\n     const CChainParams& chainParams = Params();\n \n     assert(reserver.isReserved());\n-    if (pindexStop) {\n-        assert(pindexStop->nHeight >= pindexStart->nHeight);\n-    }\n \n-    CBlockIndex* pindex = pindexStart;\n-    CBlockIndex* ret = nullptr;\n+    uint256 block_hash = start_block;\n+    uint256 ret;\n \n-    if (pindex) LogPrintf(\"Rescan started from block %d...\\n\", pindex->nHeight);\n+    LogPrintf(\"Rescan started from block %s...\\n\", start_block.ToString());\n \n     {\n         fAbortRescan = false;\n         ShowProgress(_(\"Rescanning...\"), 0); // show rescan progress in GUI as dialog or on splashscreen, if -rescan on startup\n-        CBlockIndex* tip = nullptr;\n+        uint256 tip_hash;\n+        Optional<int> block_height;\n         double dProgressStart;\n         double dProgressTip;\n         {\n-            LOCK(cs_main);\n-            tip = chainActive.Tip();\n-            dProgressStart = GuessVerificationProgress(chainParams.TxData(), pindex);\n-            dProgressTip = GuessVerificationProgress(chainParams.TxData(), tip);\n+            auto locked_chain = m_chain->lock();\n+            if (Optional<int> tip_height = locked_chain->getHeight()) {",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 326,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "af8f8087699c30ec83995c54112955253bcaba84",
      "in_reply_to_id": 186444555,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> https://github.com/bitcoin/bitcoin/pull/10973#discussion_r186444555\r\n\r\n> Would it make sense to have a Chain::Lock.getTip() to just return the tip hash?\r\n\r\n I started to implement this and look for different places where `getTip` could be used, and found that this was actually the only place it would remove any code. So I think it doesn't make sense to add for now.",
      "created_at": "2018-05-08T16:40:41Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r186791830",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186791830"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1786,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186791900",
      "pull_request_review_id": 117825376,
      "id": 186791900,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Njc5MTkwMA==",
      "diff_hunk": "@@ -3795,8 +3818,9 @@ void CWallet::GetKeyBirthTimes(std::map<CTxDestination, int64_t> &mapKeyBirth) c\n     }\n \n     // map in which we'll infer heights of other keys\n-    CBlockIndex *pindexMax = chainActive[std::max(0, chainActive.Height() - 144)]; // the tip can be reorganized; use a 144-block safety margin\n-    std::map<CKeyID, CBlockIndex*> mapKeyFirstBlock;\n+    const Optional<int> tip_height = locked_chain.getHeight();\n+    const int pindexMax = tip_height && *tip_height > 144 ? *tip_height - 144 : 0; // the tip can be reorganized; use a 144-block safety margin",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 1026,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "af8f8087699c30ec83995c54112955253bcaba84",
      "in_reply_to_id": 186462615,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r186462615\r\n\r\n> This variable isn't a pointer to a CBlockIndex, and should be named max_height or similar.\r\n\r\nRenamed as suggested in 63158224c69bd3d3621569a42132012ad186eb76.\r\n\r\n",
      "created_at": "2018-05-08T16:40:58Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r186791900",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186791900"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3822,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186791980",
      "pull_request_review_id": 117825376,
      "id": 186791980,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Njc5MTk4MA==",
      "diff_hunk": "@@ -4129,44 +4152,56 @@ CWallet* CWallet::CreateWalletFromFile(const std::string& name, const fs::path&\n     // Try to top up keypool. No-op if the wallet is locked.\n     walletInstance->TopUpKeyPool();\n \n-    LOCK(cs_main);\n+    auto locked_chain = chain.lock();\n \n-    CBlockIndex *pindexRescan = chainActive.Genesis();\n+    int index_rescan = 0;\n     if (!gArgs.GetBoolArg(\"-rescan\", false))\n     {\n         WalletBatch batch(*walletInstance->database);\n         CBlockLocator locator;\n-        if (batch.ReadBestBlock(locator))\n-            pindexRescan = FindForkInGlobalIndex(chainActive, locator);\n+        if (batch.ReadBestBlock(locator)) {\n+            if (const Optional<int> fork_height = locked_chain->findLocatorFork(locator)) {\n+                index_rescan = *fork_height;\n+            }\n+        }\n+    }\n+\n+    const Optional<int> tip_height = locked_chain->getHeight();\n+    if (tip_height) {\n+        walletInstance->m_last_block_processed = locked_chain->getBlockHash(index_rescan);\n+    } else {\n+        walletInstance->m_last_block_processed.SetNull();\n     }\n \n-    walletInstance->m_last_block_processed = chainActive.Tip();\n-    RegisterValidationInterface(walletInstance);\n+    walletInstance->m_handler = chain.handleNotifications(*walletInstance);\n \n-    if (chainActive.Tip() && chainActive.Tip() != pindexRescan)\n+    if (tip_height && *tip_height != index_rescan)\n     {\n         //We can't rescan beyond non-pruned blocks, stop and throw an error\n         //this might happen if a user uses an old wallet within a pruned node\n         // or if he ran -disablewallet for a longer time, then decided to re-enable\n-        if (fPruneMode)\n+        if (chain.getPruneMode())\n         {\n-            CBlockIndex *block = chainActive.Tip();\n-            while (block && block->pprev && (block->pprev->nStatus & BLOCK_HAVE_DATA) && block->pprev->nTx > 0 && pindexRescan != block)\n-                block = block->pprev;\n+            int block = *tip_height;",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 1225,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "af8f8087699c30ec83995c54112955253bcaba84",
      "in_reply_to_id": 186496577,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r186496577\r\n\r\n> would block_height or block_index be a better variable name here?\r\n\r\nYes, I think so and went with block_height in b2224a586fd6d9f186f9b45a778f70b7294bb83c.",
      "created_at": "2018-05-08T16:41:16Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r186791980",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186791980"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4185,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186847373",
      "pull_request_review_id": 118508941,
      "id": 186847373,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Njg0NzM3Mw==",
      "diff_hunk": "@@ -2214,39 +2227,41 @@ UniValue listsinceblock(const JSONRPCRequest& request)\n \n     bool include_removed = (request.params[3].isNull() || request.params[3].get_bool());\n \n-    int depth = pindex ? (1 + chainActive.Height() - pindex->nHeight) : -1;\n+    const Optional<int> tip_height = locked_chain->getHeight();\n+    int depth = tip_height && height ? (1 + *tip_height - *height) : -1;",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 530,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "af8f8087699c30ec83995c54112955253bcaba84",
      "in_reply_to_id": 186225645,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "We need `tip_height` for later and so using `getDepth()` would do an extra `getHeight()` call. But agree that it's a shame to see the depth arithmetic repeated...",
      "created_at": "2018-05-08T19:53:25Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r186847373",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/186847373"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1624,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/189395768",
      "pull_request_review_id": 121575825,
      "id": 189395768,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4OTM5NTc2OA==",
      "diff_hunk": "@@ -182,6 +182,9 @@ class Chain\n         uint64_t max_tries,\n         bool keep_script) = 0;\n \n+    //! Parse confirm target.\n+    virtual unsigned int parseConfirmTarget(const UniValue& value) = 0;",
      "path": "src/interfaces/chain.h",
      "position": null,
      "original_position": 5,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "a71c5b8e73d991f28945280c8812fa0c2898a710",
      "in_reply_to_id": null,
      "user": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This feels like a weird method to put in the chain interface because it's just an RPC helper function. I'd actually rather it be duplicated (though that might still require a `maxConfirmTarget` method on the interface).",
      "created_at": "2018-05-18T21:19:06Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r189395768",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/189395768"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 197,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/190031428",
      "pull_request_review_id": 122326231,
      "id": 190031428,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MDAzMTQyOA==",
      "diff_hunk": "@@ -66,11 +66,6 @@ bool EnsureWalletIsAvailable(CWallet * const pwallet, bool avoidException)\n     if (pwallet) return true;\n     if (avoidException) return false;\n     if (!HasWallets()) {\n-        // Note: It isn't currently possible to trigger this error because\n-        // wallet RPC methods aren't registered unless a wallet is loaded. But\n-        // this error is being kept as a precaution, because it's possible in\n-        // the future that wallet RPC methods might get or remain registered\n-        // when no wallets are loaded.",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "a71c5b8e73d991f28945280c8812fa0c2898a710",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Mind to explain why this is removed? I believe `Construct` will still return without creating a chain client and thus `RegisterWalletRPCCommands` is never called.",
      "created_at": "2018-05-22T19:51:52Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r190031428",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/190031428"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 73,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/196881338",
      "pull_request_review_id": 130515100,
      "id": 196881338,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5Njg4MTMzOA==",
      "diff_hunk": "@@ -0,0 +1,18 @@\n+// Copyright (c) 2017 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_OPTIONAL_H\n+#define BITCOIN_OPTIONAL_H\n+\n+#include <boost/none.hpp>\n+#include <boost/optional/optional.hpp>",
      "path": "src/optional.h",
      "position": null,
      "original_position": 9,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "4a1c901c7e4bd9e2e5545d1a1ab155e86d72faea",
      "in_reply_to_id": null,
      "user": {
        "login": "ken2812221",
        "id": 11154118,
        "node_id": "MDQ6VXNlcjExMTU0MTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ken2812221",
        "html_url": "https://github.com/ken2812221",
        "followers_url": "https://api.github.com/users/ken2812221/followers",
        "following_url": "https://api.github.com/users/ken2812221/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ken2812221/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ken2812221/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
        "organizations_url": "https://api.github.com/users/ken2812221/orgs",
        "repos_url": "https://api.github.com/users/ken2812221/repos",
        "events_url": "https://api.github.com/users/ken2812221/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ken2812221/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe replace these two lines as `#include <boost/optional.hpp>` to pass travis tests.\r\n\r\nIn commit 'Remove uses of chainActive and mapBlockIndex in wallet code '",
      "created_at": "2018-06-20T17:39:35Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r196881338",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/196881338"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 9,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213473620",
      "pull_request_review_id": 150318841,
      "id": 213473620,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzQ3MzYyMA==",
      "diff_hunk": "@@ -2726,7 +2741,8 @@ bool CWallet::CreateTransaction(interfaces::Chain::Lock& locked_chain, const std\n     // enough, that fee sniping isn't a problem yet, but by implementing a fix\n     // now we ensure code won't be written that makes assumptions about\n     // nLockTime that preclude a fix later.\n-    txNew.nLockTime = chainActive.Height();\n+    const Optional<int> tip_height = locked_chain.getHeight();\n+    txNew.nLockTime = tip_height ? *tip_height : std::numeric_limits<uint32_t>::max();",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 292,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "2aa964dc531464c47c7236ec7b288e3b9c403a1e",
      "in_reply_to_id": null,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Probably out-of-scope nit: I wish the uint32_t max was instead a named constant that had meaning relative to use with nLockTime (e.g. `IGNORE_NLOCKTIME`).",
      "created_at": "2018-08-28T21:10:55Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r213473620",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213473620"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2636,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217879497",
      "pull_request_review_id": 155707668,
      "id": 217879497,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNzg3OTQ5Nw==",
      "diff_hunk": "@@ -41,6 +41,11 @@ bench_bench_bitcoin_LDADD = \\\n   $(LIBBITCOIN_COMMON) \\\n   $(LIBBITCOIN_UTIL) \\\n   $(LIBBITCOIN_SERVER) \\\n+  $(LIBBITCOIN_COMMON) \\\n+  $(LIBBITCOIN_UTIL) \\\n+  $(LIBBITCOIN_WALLET) \\\n+  $(LIBBITCOIN_SERVER) \\\n+  $(LIBBITCOIN_UTIL) \\",
      "path": "src/Makefile.bench.include",
      "position": null,
      "original_position": 8,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "e0854fc5baa7f0212cd9c2ae4d1e3cec682dca08",
      "in_reply_to_id": null,
      "user": {
        "login": "ken2812221",
        "id": 11154118,
        "node_id": "MDQ6VXNlcjExMTU0MTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/11154118?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ken2812221",
        "html_url": "https://github.com/ken2812221",
        "followers_url": "https://api.github.com/users/ken2812221/followers",
        "following_url": "https://api.github.com/users/ken2812221/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ken2812221/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ken2812221/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ken2812221/subscriptions",
        "organizations_url": "https://api.github.com/users/ken2812221/orgs",
        "repos_url": "https://api.github.com/users/ken2812221/repos",
        "events_url": "https://api.github.com/users/ken2812221/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ken2812221/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"Remove use of g_connman / PushInventory in wallet code\": unnecessary changes",
      "created_at": "2018-09-15T08:29:29Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r217879497",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/217879497"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 48,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219411542",
      "pull_request_review_id": 157580590,
      "id": 219411542,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTQxMTU0Mg==",
      "diff_hunk": "@@ -8,16 +8,15 @@\n #include <wallet/db.h>\n \n WalletTestingSetup::WalletTestingSetup(const std::string& chainName):\n-    TestingSetup(chainName), m_wallet(\"mock\", WalletDatabase::CreateMock())\n+    TestingSetup(chainName), m_wallet(*m_chain, \"mock\", WalletDatabase::CreateMock())\n {\n     bool fFirstRun;\n     m_wallet.LoadWallet(fFirstRun);\n-    RegisterValidationInterface(&m_wallet);\n+    m_wallet.m_handler = m_chain->handleNotifications(m_wallet);\n \n-    RegisterWalletRPCCommands(tableRPC);\n+    m_chain_client->registerRpcs();\n }\n \n WalletTestingSetup::~WalletTestingSetup()",
      "path": "src/wallet/test/wallet_test_fixture.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "e44e639558b1084f14a97847592616c3df9fff38",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```\r\n2018-09-19 14:39:06 clang-tidy(pr=10973): src/wallet/test/wallet_test_fixture.cpp:20:21: warning: use '= default' to define a trivial destructor [hicpp-use-equals-default]\r\n```",
      "created_at": "2018-09-21T07:54:18Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r219411542",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219411542"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219412134",
      "pull_request_review_id": 157581192,
      "id": 219412134,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTQxMjEzNA==",
      "diff_hunk": "@@ -0,0 +1,453 @@\n+#include <interfaces/chain.h>\n+\n+#include <chain.h>\n+#include <chainparams.h>\n+#include <interfaces/handler.h>\n+#include <interfaces/wallet.h>\n+#include <net.h>\n+#include <policy/fees.h>\n+#include <policy/policy.h>\n+#include <policy/rbf.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <protocol.h>\n+#include <rpc/mining.h>\n+#include <rpc/protocol.h>\n+#include <rpc/server.h>\n+#include <sync.h>\n+#include <threadsafety.h>\n+#include <timedata.h>\n+#include <txmempool.h>\n+#include <ui_interface.h>\n+#include <uint256.h>\n+#include <univalue.h>\n+#include <util.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+\n+#include <algorithm>\n+#include <map>\n+#include <memory>\n+#include <tuple>\n+#include <unordered_map>\n+#include <utility>\n+\n+class CReserveScript;\n+\n+namespace interfaces {\n+namespace {\n+\n+//! Extension of std::reference_wrapper with operator< for use as map key.\n+template <typename T>\n+class Ref : public std::reference_wrapper<T>\n+{\n+public:\n+    using std::reference_wrapper<T>::reference_wrapper;\n+    bool operator<(const Ref<T>& other) const { return this->get() < other.get(); }\n+};\n+\n+class LockImpl : public Chain::Lock\n+{\n+    Optional<int> getHeight() override\n+    {\n+        int height = ::chainActive.Height();\n+        if (height >= 0) {\n+            return height;\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> getBlockHeight(const uint256& hash) override\n+    {\n+        auto it = ::mapBlockIndex.find(hash);\n+        if (it != ::mapBlockIndex.end() && it->second) {\n+            if (::chainActive.Contains(it->second)) {\n+                return it->second->nHeight;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    int getBlockDepth(const uint256& hash) override\n+    {\n+        const Optional<int> tip_height = getHeight();\n+        const Optional<int> height = getBlockHeight(hash);\n+        return tip_height && height ? *tip_height - *height + 1 : 0;\n+    }\n+    uint256 getBlockHash(int height) override { return ::chainActive[height]->GetBlockHash(); }\n+    int64_t getBlockTime(int height) override { return ::chainActive[height]->GetBlockTime(); }\n+    int64_t getBlockMedianTimePast(int height) override { return ::chainActive[height]->GetMedianTimePast(); }\n+    bool haveBlockOnDisk(int height) override\n+    {\n+        CBlockIndex* block = ::chainActive[height];\n+        return block && (block->nStatus & BLOCK_HAVE_DATA) && block->nTx > 0;",
      "path": "src/interfaces/chain.cpp",
      "position": null,
      "original_position": 81,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "e44e639558b1084f14a97847592616c3df9fff38",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```\r\n2018-09-19 14:39:06 clang-tidy(pr=10973): src/interfaces/chain.cpp:81:25: warning: implicit conversion 'unsigned int' -> bool [readability-implicit-bool-conversion]\r\n```",
      "created_at": "2018-09-21T07:56:18Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r219412134",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219412134"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 81,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219412177",
      "pull_request_review_id": 157581246,
      "id": 219412177,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTQxMjE3Nw==",
      "diff_hunk": "@@ -0,0 +1,453 @@\n+#include <interfaces/chain.h>\n+\n+#include <chain.h>\n+#include <chainparams.h>\n+#include <interfaces/handler.h>\n+#include <interfaces/wallet.h>\n+#include <net.h>\n+#include <policy/fees.h>\n+#include <policy/policy.h>\n+#include <policy/rbf.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <protocol.h>\n+#include <rpc/mining.h>\n+#include <rpc/protocol.h>\n+#include <rpc/server.h>\n+#include <sync.h>\n+#include <threadsafety.h>\n+#include <timedata.h>\n+#include <txmempool.h>\n+#include <ui_interface.h>\n+#include <uint256.h>\n+#include <univalue.h>\n+#include <util.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+\n+#include <algorithm>\n+#include <map>\n+#include <memory>\n+#include <tuple>\n+#include <unordered_map>\n+#include <utility>\n+\n+class CReserveScript;\n+\n+namespace interfaces {\n+namespace {\n+\n+//! Extension of std::reference_wrapper with operator< for use as map key.\n+template <typename T>\n+class Ref : public std::reference_wrapper<T>\n+{\n+public:\n+    using std::reference_wrapper<T>::reference_wrapper;\n+    bool operator<(const Ref<T>& other) const { return this->get() < other.get(); }\n+};\n+\n+class LockImpl : public Chain::Lock\n+{\n+    Optional<int> getHeight() override\n+    {\n+        int height = ::chainActive.Height();\n+        if (height >= 0) {\n+            return height;\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> getBlockHeight(const uint256& hash) override\n+    {\n+        auto it = ::mapBlockIndex.find(hash);\n+        if (it != ::mapBlockIndex.end() && it->second) {\n+            if (::chainActive.Contains(it->second)) {\n+                return it->second->nHeight;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    int getBlockDepth(const uint256& hash) override\n+    {\n+        const Optional<int> tip_height = getHeight();\n+        const Optional<int> height = getBlockHeight(hash);\n+        return tip_height && height ? *tip_height - *height + 1 : 0;\n+    }\n+    uint256 getBlockHash(int height) override { return ::chainActive[height]->GetBlockHash(); }\n+    int64_t getBlockTime(int height) override { return ::chainActive[height]->GetBlockTime(); }\n+    int64_t getBlockMedianTimePast(int height) override { return ::chainActive[height]->GetMedianTimePast(); }\n+    bool haveBlockOnDisk(int height) override\n+    {\n+        CBlockIndex* block = ::chainActive[height];\n+        return block && (block->nStatus & BLOCK_HAVE_DATA) && block->nTx > 0;\n+    }\n+    Optional<int> findFirstBlockWithTime(int64_t time) override\n+    {\n+        CBlockIndex* block = ::chainActive.FindEarliestAtLeast(time);\n+        if (block) {\n+            return block->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findFirstBlockWithTimeAndHeight(int64_t time, int height) override\n+    {\n+        for (CBlockIndex* block = ::chainActive[height]; block; block = ::chainActive.Next(block)) {\n+            if (block->GetBlockTime() >= time) {\n+                return block->nHeight;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findPruned(int start_height, Optional<int> stop_height) override\n+    {\n+        if (::fPruneMode) {\n+            CBlockIndex* block = stop_height ? ::chainActive[*stop_height] : ::chainActive.Tip();\n+            while (block && block->nHeight >= start_height) {\n+                if (!(block->nStatus & BLOCK_HAVE_DATA)) {",
      "path": "src/interfaces/chain.cpp",
      "position": null,
      "original_position": 105,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "e44e639558b1084f14a97847592616c3df9fff38",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```\r\n2018-09-19 14:39:06 clang-tidy(pr=10973): src/interfaces/chain.cpp:105:22: warning: implicit conversion 'unsigned int' -> bool [readability-implicit-bool-conversion]\r\n```",
      "created_at": "2018-09-21T07:56:31Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r219412177",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219412177"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 105,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219412247",
      "pull_request_review_id": 157581340,
      "id": 219412247,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTQxMjI0Nw==",
      "diff_hunk": "@@ -0,0 +1,453 @@\n+#include <interfaces/chain.h>\n+\n+#include <chain.h>\n+#include <chainparams.h>\n+#include <interfaces/handler.h>\n+#include <interfaces/wallet.h>\n+#include <net.h>\n+#include <policy/fees.h>\n+#include <policy/policy.h>\n+#include <policy/rbf.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <protocol.h>\n+#include <rpc/mining.h>\n+#include <rpc/protocol.h>\n+#include <rpc/server.h>\n+#include <sync.h>\n+#include <threadsafety.h>\n+#include <timedata.h>\n+#include <txmempool.h>\n+#include <ui_interface.h>\n+#include <uint256.h>\n+#include <univalue.h>\n+#include <util.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+\n+#include <algorithm>\n+#include <map>\n+#include <memory>\n+#include <tuple>\n+#include <unordered_map>\n+#include <utility>\n+\n+class CReserveScript;\n+\n+namespace interfaces {\n+namespace {\n+\n+//! Extension of std::reference_wrapper with operator< for use as map key.\n+template <typename T>\n+class Ref : public std::reference_wrapper<T>\n+{\n+public:\n+    using std::reference_wrapper<T>::reference_wrapper;\n+    bool operator<(const Ref<T>& other) const { return this->get() < other.get(); }\n+};\n+\n+class LockImpl : public Chain::Lock\n+{\n+    Optional<int> getHeight() override\n+    {\n+        int height = ::chainActive.Height();\n+        if (height >= 0) {\n+            return height;\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> getBlockHeight(const uint256& hash) override\n+    {\n+        auto it = ::mapBlockIndex.find(hash);\n+        if (it != ::mapBlockIndex.end() && it->second) {\n+            if (::chainActive.Contains(it->second)) {\n+                return it->second->nHeight;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    int getBlockDepth(const uint256& hash) override\n+    {\n+        const Optional<int> tip_height = getHeight();\n+        const Optional<int> height = getBlockHeight(hash);\n+        return tip_height && height ? *tip_height - *height + 1 : 0;\n+    }\n+    uint256 getBlockHash(int height) override { return ::chainActive[height]->GetBlockHash(); }\n+    int64_t getBlockTime(int height) override { return ::chainActive[height]->GetBlockTime(); }\n+    int64_t getBlockMedianTimePast(int height) override { return ::chainActive[height]->GetMedianTimePast(); }\n+    bool haveBlockOnDisk(int height) override\n+    {\n+        CBlockIndex* block = ::chainActive[height];\n+        return block && (block->nStatus & BLOCK_HAVE_DATA) && block->nTx > 0;\n+    }\n+    Optional<int> findFirstBlockWithTime(int64_t time) override\n+    {\n+        CBlockIndex* block = ::chainActive.FindEarliestAtLeast(time);\n+        if (block) {\n+            return block->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findFirstBlockWithTimeAndHeight(int64_t time, int height) override\n+    {\n+        for (CBlockIndex* block = ::chainActive[height]; block; block = ::chainActive.Next(block)) {\n+            if (block->GetBlockTime() >= time) {\n+                return block->nHeight;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findPruned(int start_height, Optional<int> stop_height) override\n+    {\n+        if (::fPruneMode) {\n+            CBlockIndex* block = stop_height ? ::chainActive[*stop_height] : ::chainActive.Tip();\n+            while (block && block->nHeight >= start_height) {\n+                if (!(block->nStatus & BLOCK_HAVE_DATA)) {\n+                    return block->nHeight;\n+                }\n+                block = block->pprev;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findFork(const uint256& hash, Optional<int>* height) override\n+    {\n+        const CBlockIndex *block{nullptr}, *fork{nullptr};\n+        auto it = ::mapBlockIndex.find(hash);\n+        if (it != ::mapBlockIndex.end()) {\n+            block = it->second;\n+            fork = ::chainActive.FindFork(block);\n+        }\n+        if (height) {",
      "path": "src/interfaces/chain.cpp",
      "position": null,
      "original_position": 121,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "e44e639558b1084f14a97847592616c3df9fff38",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```\r\n2018-09-19 14:39:06 clang-tidy(pr=10973): src/interfaces/chain.cpp:121:13: warning: implicit conversion 'Optional<int> *' (aka 'boost::optional<int> *') -> bool [readability-implicit-bool-conversion]\r\n```",
      "created_at": "2018-09-21T07:56:49Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r219412247",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219412247"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 126,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219412334",
      "pull_request_review_id": 157581455,
      "id": 219412334,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTQxMjMzNA==",
      "diff_hunk": "@@ -0,0 +1,453 @@\n+#include <interfaces/chain.h>\n+\n+#include <chain.h>\n+#include <chainparams.h>\n+#include <interfaces/handler.h>\n+#include <interfaces/wallet.h>\n+#include <net.h>\n+#include <policy/fees.h>\n+#include <policy/policy.h>\n+#include <policy/rbf.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <protocol.h>\n+#include <rpc/mining.h>\n+#include <rpc/protocol.h>\n+#include <rpc/server.h>\n+#include <sync.h>\n+#include <threadsafety.h>\n+#include <timedata.h>\n+#include <txmempool.h>\n+#include <ui_interface.h>\n+#include <uint256.h>\n+#include <univalue.h>\n+#include <util.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+\n+#include <algorithm>\n+#include <map>\n+#include <memory>\n+#include <tuple>\n+#include <unordered_map>\n+#include <utility>\n+\n+class CReserveScript;\n+\n+namespace interfaces {\n+namespace {\n+\n+//! Extension of std::reference_wrapper with operator< for use as map key.\n+template <typename T>\n+class Ref : public std::reference_wrapper<T>\n+{\n+public:\n+    using std::reference_wrapper<T>::reference_wrapper;\n+    bool operator<(const Ref<T>& other) const { return this->get() < other.get(); }\n+};\n+\n+class LockImpl : public Chain::Lock\n+{\n+    Optional<int> getHeight() override\n+    {\n+        int height = ::chainActive.Height();\n+        if (height >= 0) {\n+            return height;\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> getBlockHeight(const uint256& hash) override\n+    {\n+        auto it = ::mapBlockIndex.find(hash);\n+        if (it != ::mapBlockIndex.end() && it->second) {\n+            if (::chainActive.Contains(it->second)) {\n+                return it->second->nHeight;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    int getBlockDepth(const uint256& hash) override\n+    {\n+        const Optional<int> tip_height = getHeight();\n+        const Optional<int> height = getBlockHeight(hash);\n+        return tip_height && height ? *tip_height - *height + 1 : 0;\n+    }\n+    uint256 getBlockHash(int height) override { return ::chainActive[height]->GetBlockHash(); }\n+    int64_t getBlockTime(int height) override { return ::chainActive[height]->GetBlockTime(); }\n+    int64_t getBlockMedianTimePast(int height) override { return ::chainActive[height]->GetMedianTimePast(); }\n+    bool haveBlockOnDisk(int height) override\n+    {\n+        CBlockIndex* block = ::chainActive[height];\n+        return block && (block->nStatus & BLOCK_HAVE_DATA) && block->nTx > 0;\n+    }\n+    Optional<int> findFirstBlockWithTime(int64_t time) override\n+    {\n+        CBlockIndex* block = ::chainActive.FindEarliestAtLeast(time);\n+        if (block) {\n+            return block->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findFirstBlockWithTimeAndHeight(int64_t time, int height) override\n+    {\n+        for (CBlockIndex* block = ::chainActive[height]; block; block = ::chainActive.Next(block)) {\n+            if (block->GetBlockTime() >= time) {\n+                return block->nHeight;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findPruned(int start_height, Optional<int> stop_height) override\n+    {\n+        if (::fPruneMode) {\n+            CBlockIndex* block = stop_height ? ::chainActive[*stop_height] : ::chainActive.Tip();\n+            while (block && block->nHeight >= start_height) {\n+                if (!(block->nStatus & BLOCK_HAVE_DATA)) {\n+                    return block->nHeight;\n+                }\n+                block = block->pprev;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findFork(const uint256& hash, Optional<int>* height) override\n+    {\n+        const CBlockIndex *block{nullptr}, *fork{nullptr};\n+        auto it = ::mapBlockIndex.find(hash);\n+        if (it != ::mapBlockIndex.end()) {\n+            block = it->second;\n+            fork = ::chainActive.FindFork(block);\n+        }\n+        if (height) {\n+            if (block) {\n+                *height = block->nHeight;\n+            } else {\n+                height->reset();\n+            }\n+        }\n+        if (fork) {\n+            return fork->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    bool isPotentialTip(const uint256& hash) override\n+    {\n+        if (::chainActive.Tip()->GetBlockHash() == hash) return true;\n+        auto it = ::mapBlockIndex.find(hash);\n+        return it != ::mapBlockIndex.end() && it->second->GetAncestor(::chainActive.Height()) == ::chainActive.Tip();\n+    }\n+    CBlockLocator getLocator() override { return ::chainActive.GetLocator(); }\n+    Optional<int> findLocatorFork(const CBlockLocator& locator) override\n+    {\n+        if (CBlockIndex* fork = FindForkInGlobalIndex(::chainActive, locator)) {\n+            return fork->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    bool checkFinalTx(const CTransaction& tx) override\n+    {\n+        LockAnnotation lock(::cs_main);\n+        return CheckFinalTx(tx);\n+    }\n+    bool acceptToMemoryPool(CTransactionRef tx, CValidationState& state) override\n+    {\n+        LockAnnotation lock(::cs_main);\n+        return AcceptToMemoryPool(::mempool, state, tx, nullptr /* missing inputs */, nullptr /* txn replaced */,\n+            false /* bypass limits */, ::maxTxFee /* absurd fee */);\n+    }\n+};\n+\n+class LockingStateImpl : public LockImpl, public UniqueLock<CCriticalSection>\n+{\n+    using UniqueLock::UniqueLock;\n+};\n+\n+class HandlerImpl : public Handler\n+{\n+public:\n+    HandlerImpl(Chain::Notifications& notifications) : m_forwarder(notifications) {}",
      "path": "src/interfaces/chain.cpp",
      "position": null,
      "original_position": 168,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "e44e639558b1084f14a97847592616c3df9fff38",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```\r\n2018-09-19 14:39:06 clang-tidy(pr=10973): src/interfaces/chain.cpp:168:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [hicpp-explicit-conversions]\r\n```",
      "created_at": "2018-09-21T07:57:11Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r219412334",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219412334"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 168,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219412384",
      "pull_request_review_id": 157581521,
      "id": 219412384,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTQxMjM4NA==",
      "diff_hunk": "@@ -0,0 +1,453 @@\n+#include <interfaces/chain.h>\n+\n+#include <chain.h>\n+#include <chainparams.h>\n+#include <interfaces/handler.h>\n+#include <interfaces/wallet.h>\n+#include <net.h>\n+#include <policy/fees.h>\n+#include <policy/policy.h>\n+#include <policy/rbf.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <protocol.h>\n+#include <rpc/mining.h>\n+#include <rpc/protocol.h>\n+#include <rpc/server.h>\n+#include <sync.h>\n+#include <threadsafety.h>\n+#include <timedata.h>\n+#include <txmempool.h>\n+#include <ui_interface.h>\n+#include <uint256.h>\n+#include <univalue.h>\n+#include <util.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+\n+#include <algorithm>\n+#include <map>\n+#include <memory>\n+#include <tuple>\n+#include <unordered_map>\n+#include <utility>\n+\n+class CReserveScript;\n+\n+namespace interfaces {\n+namespace {\n+\n+//! Extension of std::reference_wrapper with operator< for use as map key.\n+template <typename T>\n+class Ref : public std::reference_wrapper<T>\n+{\n+public:\n+    using std::reference_wrapper<T>::reference_wrapper;\n+    bool operator<(const Ref<T>& other) const { return this->get() < other.get(); }\n+};\n+\n+class LockImpl : public Chain::Lock\n+{\n+    Optional<int> getHeight() override\n+    {\n+        int height = ::chainActive.Height();\n+        if (height >= 0) {\n+            return height;\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> getBlockHeight(const uint256& hash) override\n+    {\n+        auto it = ::mapBlockIndex.find(hash);\n+        if (it != ::mapBlockIndex.end() && it->second) {\n+            if (::chainActive.Contains(it->second)) {\n+                return it->second->nHeight;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    int getBlockDepth(const uint256& hash) override\n+    {\n+        const Optional<int> tip_height = getHeight();\n+        const Optional<int> height = getBlockHeight(hash);\n+        return tip_height && height ? *tip_height - *height + 1 : 0;\n+    }\n+    uint256 getBlockHash(int height) override { return ::chainActive[height]->GetBlockHash(); }\n+    int64_t getBlockTime(int height) override { return ::chainActive[height]->GetBlockTime(); }\n+    int64_t getBlockMedianTimePast(int height) override { return ::chainActive[height]->GetMedianTimePast(); }\n+    bool haveBlockOnDisk(int height) override\n+    {\n+        CBlockIndex* block = ::chainActive[height];\n+        return block && (block->nStatus & BLOCK_HAVE_DATA) && block->nTx > 0;\n+    }\n+    Optional<int> findFirstBlockWithTime(int64_t time) override\n+    {\n+        CBlockIndex* block = ::chainActive.FindEarliestAtLeast(time);\n+        if (block) {\n+            return block->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findFirstBlockWithTimeAndHeight(int64_t time, int height) override\n+    {\n+        for (CBlockIndex* block = ::chainActive[height]; block; block = ::chainActive.Next(block)) {\n+            if (block->GetBlockTime() >= time) {\n+                return block->nHeight;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findPruned(int start_height, Optional<int> stop_height) override\n+    {\n+        if (::fPruneMode) {\n+            CBlockIndex* block = stop_height ? ::chainActive[*stop_height] : ::chainActive.Tip();\n+            while (block && block->nHeight >= start_height) {\n+                if (!(block->nStatus & BLOCK_HAVE_DATA)) {\n+                    return block->nHeight;\n+                }\n+                block = block->pprev;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findFork(const uint256& hash, Optional<int>* height) override\n+    {\n+        const CBlockIndex *block{nullptr}, *fork{nullptr};\n+        auto it = ::mapBlockIndex.find(hash);\n+        if (it != ::mapBlockIndex.end()) {\n+            block = it->second;\n+            fork = ::chainActive.FindFork(block);\n+        }\n+        if (height) {\n+            if (block) {\n+                *height = block->nHeight;\n+            } else {\n+                height->reset();\n+            }\n+        }\n+        if (fork) {\n+            return fork->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    bool isPotentialTip(const uint256& hash) override\n+    {\n+        if (::chainActive.Tip()->GetBlockHash() == hash) return true;\n+        auto it = ::mapBlockIndex.find(hash);\n+        return it != ::mapBlockIndex.end() && it->second->GetAncestor(::chainActive.Height()) == ::chainActive.Tip();\n+    }\n+    CBlockLocator getLocator() override { return ::chainActive.GetLocator(); }\n+    Optional<int> findLocatorFork(const CBlockLocator& locator) override\n+    {\n+        if (CBlockIndex* fork = FindForkInGlobalIndex(::chainActive, locator)) {\n+            return fork->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    bool checkFinalTx(const CTransaction& tx) override\n+    {\n+        LockAnnotation lock(::cs_main);\n+        return CheckFinalTx(tx);\n+    }\n+    bool acceptToMemoryPool(CTransactionRef tx, CValidationState& state) override\n+    {\n+        LockAnnotation lock(::cs_main);\n+        return AcceptToMemoryPool(::mempool, state, tx, nullptr /* missing inputs */, nullptr /* txn replaced */,\n+            false /* bypass limits */, ::maxTxFee /* absurd fee */);\n+    }\n+};\n+\n+class LockingStateImpl : public LockImpl, public UniqueLock<CCriticalSection>\n+{\n+    using UniqueLock::UniqueLock;\n+};\n+\n+class HandlerImpl : public Handler\n+{\n+public:\n+    HandlerImpl(Chain::Notifications& notifications) : m_forwarder(notifications) {}\n+    ~HandlerImpl() override\n+    {\n+        // It is important to disconnect here in the HandlerImpl destructor,\n+        // instead of in the HandleImpl::Forwarder destructor, because\n+        // UnregisterAllValidationInterfaces() internally accesses Forwarder\n+        // virtual methods which are no longer available after Forwarder object\n+        // has begun to be being destroyed.\n+        m_forwarder.disconnect();\n+    }\n+    void disconnect() override { m_forwarder.disconnect(); }\n+\n+    struct Forwarder : CValidationInterface\n+    {\n+        Forwarder(Chain::Notifications& notifications) : m_notifications(&notifications)",
      "path": "src/interfaces/chain.cpp",
      "position": null,
      "original_position": 182,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "e44e639558b1084f14a97847592616c3df9fff38",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```\r\n2018-09-19 14:39:06 clang-tidy(pr=10973): src/interfaces/chain.cpp:182:9: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor]\r\n```",
      "created_at": "2018-09-21T07:57:23Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r219412384",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219412384"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 182,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219412493",
      "pull_request_review_id": 157581640,
      "id": 219412493,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTQxMjQ5Mw==",
      "diff_hunk": "@@ -0,0 +1,453 @@\n+#include <interfaces/chain.h>\n+\n+#include <chain.h>\n+#include <chainparams.h>\n+#include <interfaces/handler.h>\n+#include <interfaces/wallet.h>\n+#include <net.h>\n+#include <policy/fees.h>\n+#include <policy/policy.h>\n+#include <policy/rbf.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <protocol.h>\n+#include <rpc/mining.h>\n+#include <rpc/protocol.h>\n+#include <rpc/server.h>\n+#include <sync.h>\n+#include <threadsafety.h>\n+#include <timedata.h>\n+#include <txmempool.h>\n+#include <ui_interface.h>\n+#include <uint256.h>\n+#include <univalue.h>\n+#include <util.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+\n+#include <algorithm>\n+#include <map>\n+#include <memory>\n+#include <tuple>\n+#include <unordered_map>\n+#include <utility>\n+\n+class CReserveScript;\n+\n+namespace interfaces {\n+namespace {\n+\n+//! Extension of std::reference_wrapper with operator< for use as map key.\n+template <typename T>\n+class Ref : public std::reference_wrapper<T>\n+{\n+public:\n+    using std::reference_wrapper<T>::reference_wrapper;\n+    bool operator<(const Ref<T>& other) const { return this->get() < other.get(); }\n+};\n+\n+class LockImpl : public Chain::Lock\n+{\n+    Optional<int> getHeight() override\n+    {\n+        int height = ::chainActive.Height();\n+        if (height >= 0) {\n+            return height;\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> getBlockHeight(const uint256& hash) override\n+    {\n+        auto it = ::mapBlockIndex.find(hash);\n+        if (it != ::mapBlockIndex.end() && it->second) {\n+            if (::chainActive.Contains(it->second)) {\n+                return it->second->nHeight;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    int getBlockDepth(const uint256& hash) override\n+    {\n+        const Optional<int> tip_height = getHeight();\n+        const Optional<int> height = getBlockHeight(hash);\n+        return tip_height && height ? *tip_height - *height + 1 : 0;\n+    }\n+    uint256 getBlockHash(int height) override { return ::chainActive[height]->GetBlockHash(); }\n+    int64_t getBlockTime(int height) override { return ::chainActive[height]->GetBlockTime(); }\n+    int64_t getBlockMedianTimePast(int height) override { return ::chainActive[height]->GetMedianTimePast(); }\n+    bool haveBlockOnDisk(int height) override\n+    {\n+        CBlockIndex* block = ::chainActive[height];\n+        return block && (block->nStatus & BLOCK_HAVE_DATA) && block->nTx > 0;\n+    }\n+    Optional<int> findFirstBlockWithTime(int64_t time) override\n+    {\n+        CBlockIndex* block = ::chainActive.FindEarliestAtLeast(time);\n+        if (block) {\n+            return block->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findFirstBlockWithTimeAndHeight(int64_t time, int height) override\n+    {\n+        for (CBlockIndex* block = ::chainActive[height]; block; block = ::chainActive.Next(block)) {\n+            if (block->GetBlockTime() >= time) {\n+                return block->nHeight;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findPruned(int start_height, Optional<int> stop_height) override\n+    {\n+        if (::fPruneMode) {\n+            CBlockIndex* block = stop_height ? ::chainActive[*stop_height] : ::chainActive.Tip();\n+            while (block && block->nHeight >= start_height) {\n+                if (!(block->nStatus & BLOCK_HAVE_DATA)) {\n+                    return block->nHeight;\n+                }\n+                block = block->pprev;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findFork(const uint256& hash, Optional<int>* height) override\n+    {\n+        const CBlockIndex *block{nullptr}, *fork{nullptr};\n+        auto it = ::mapBlockIndex.find(hash);\n+        if (it != ::mapBlockIndex.end()) {\n+            block = it->second;\n+            fork = ::chainActive.FindFork(block);\n+        }\n+        if (height) {\n+            if (block) {\n+                *height = block->nHeight;\n+            } else {\n+                height->reset();\n+            }\n+        }\n+        if (fork) {\n+            return fork->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    bool isPotentialTip(const uint256& hash) override\n+    {\n+        if (::chainActive.Tip()->GetBlockHash() == hash) return true;\n+        auto it = ::mapBlockIndex.find(hash);\n+        return it != ::mapBlockIndex.end() && it->second->GetAncestor(::chainActive.Height()) == ::chainActive.Tip();\n+    }\n+    CBlockLocator getLocator() override { return ::chainActive.GetLocator(); }\n+    Optional<int> findLocatorFork(const CBlockLocator& locator) override\n+    {\n+        if (CBlockIndex* fork = FindForkInGlobalIndex(::chainActive, locator)) {\n+            return fork->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    bool checkFinalTx(const CTransaction& tx) override\n+    {\n+        LockAnnotation lock(::cs_main);\n+        return CheckFinalTx(tx);\n+    }\n+    bool acceptToMemoryPool(CTransactionRef tx, CValidationState& state) override\n+    {\n+        LockAnnotation lock(::cs_main);\n+        return AcceptToMemoryPool(::mempool, state, tx, nullptr /* missing inputs */, nullptr /* txn replaced */,\n+            false /* bypass limits */, ::maxTxFee /* absurd fee */);\n+    }\n+};\n+\n+class LockingStateImpl : public LockImpl, public UniqueLock<CCriticalSection>\n+{\n+    using UniqueLock::UniqueLock;\n+};\n+\n+class HandlerImpl : public Handler\n+{\n+public:\n+    HandlerImpl(Chain::Notifications& notifications) : m_forwarder(notifications) {}\n+    ~HandlerImpl() override\n+    {\n+        // It is important to disconnect here in the HandlerImpl destructor,\n+        // instead of in the HandleImpl::Forwarder destructor, because\n+        // UnregisterAllValidationInterfaces() internally accesses Forwarder\n+        // virtual methods which are no longer available after Forwarder object\n+        // has begun to be being destroyed.\n+        m_forwarder.disconnect();\n+    }\n+    void disconnect() override { m_forwarder.disconnect(); }\n+\n+    struct Forwarder : CValidationInterface\n+    {\n+        Forwarder(Chain::Notifications& notifications) : m_notifications(&notifications)\n+        {\n+            RegisterValidationInterface(this);\n+        }\n+        void disconnect()\n+        {\n+            if (m_notifications) {\n+                m_notifications = nullptr;\n+                UnregisterValidationInterface(this);\n+            }\n+        }\n+        void TransactionAddedToMempool(const CTransactionRef& tx) override\n+        {\n+            m_notifications->TransactionAddedToMempool(tx);\n+        }\n+        void TransactionRemovedFromMempool(const CTransactionRef& tx) override\n+        {\n+            m_notifications->TransactionRemovedFromMempool(tx);\n+        }\n+        void BlockConnected(const std::shared_ptr<const CBlock>& block,\n+            const CBlockIndex* index,\n+            const std::vector<CTransactionRef>& tx_conflicted) override\n+        {\n+            m_notifications->BlockConnected(*block, index->GetBlockHash(), tx_conflicted);\n+        }\n+        void BlockDisconnected(const std::shared_ptr<const CBlock>& block) override\n+        {\n+            m_notifications->BlockDisconnected(*block);\n+        }\n+        void ChainStateFlushed(const CBlockLocator& locator) override { m_notifications->ChainStateFlushed(locator); }\n+        void ResendWalletTransactions(int64_t best_block_time, CConnman* connman) override",
      "path": "src/interfaces/chain.cpp",
      "position": null,
      "original_position": 212,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "e44e639558b1084f14a97847592616c3df9fff38",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```\r\n2018-09-19 14:39:06 clang-tidy(pr=10973): src/interfaces/chain.cpp:212:74: warning: parameter 'connman' is unused [misc-unused-parameters]\r\n```",
      "created_at": "2018-09-21T07:57:48Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r219412493",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219412493"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 212,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219415575",
      "pull_request_review_id": 157585498,
      "id": 219415575,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTQxNTU3NQ==",
      "diff_hunk": "@@ -0,0 +1,453 @@\n+#include <interfaces/chain.h>\n+\n+#include <chain.h>\n+#include <chainparams.h>\n+#include <interfaces/handler.h>\n+#include <interfaces/wallet.h>\n+#include <net.h>\n+#include <policy/fees.h>\n+#include <policy/policy.h>\n+#include <policy/rbf.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <protocol.h>\n+#include <rpc/mining.h>\n+#include <rpc/protocol.h>\n+#include <rpc/server.h>\n+#include <sync.h>\n+#include <threadsafety.h>\n+#include <timedata.h>\n+#include <txmempool.h>\n+#include <ui_interface.h>\n+#include <uint256.h>\n+#include <univalue.h>\n+#include <util.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+\n+#include <algorithm>\n+#include <map>\n+#include <memory>\n+#include <tuple>\n+#include <unordered_map>\n+#include <utility>\n+\n+class CReserveScript;\n+\n+namespace interfaces {\n+namespace {\n+\n+//! Extension of std::reference_wrapper with operator< for use as map key.\n+template <typename T>\n+class Ref : public std::reference_wrapper<T>\n+{\n+public:\n+    using std::reference_wrapper<T>::reference_wrapper;\n+    bool operator<(const Ref<T>& other) const { return this->get() < other.get(); }\n+};\n+\n+class LockImpl : public Chain::Lock\n+{\n+    Optional<int> getHeight() override\n+    {\n+        int height = ::chainActive.Height();\n+        if (height >= 0) {\n+            return height;\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> getBlockHeight(const uint256& hash) override\n+    {\n+        auto it = ::mapBlockIndex.find(hash);\n+        if (it != ::mapBlockIndex.end() && it->second) {\n+            if (::chainActive.Contains(it->second)) {\n+                return it->second->nHeight;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    int getBlockDepth(const uint256& hash) override\n+    {\n+        const Optional<int> tip_height = getHeight();\n+        const Optional<int> height = getBlockHeight(hash);\n+        return tip_height && height ? *tip_height - *height + 1 : 0;\n+    }\n+    uint256 getBlockHash(int height) override { return ::chainActive[height]->GetBlockHash(); }\n+    int64_t getBlockTime(int height) override { return ::chainActive[height]->GetBlockTime(); }\n+    int64_t getBlockMedianTimePast(int height) override { return ::chainActive[height]->GetMedianTimePast(); }\n+    bool haveBlockOnDisk(int height) override\n+    {\n+        CBlockIndex* block = ::chainActive[height];\n+        return block && (block->nStatus & BLOCK_HAVE_DATA) && block->nTx > 0;\n+    }\n+    Optional<int> findFirstBlockWithTime(int64_t time) override\n+    {\n+        CBlockIndex* block = ::chainActive.FindEarliestAtLeast(time);\n+        if (block) {\n+            return block->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findFirstBlockWithTimeAndHeight(int64_t time, int height) override\n+    {\n+        for (CBlockIndex* block = ::chainActive[height]; block; block = ::chainActive.Next(block)) {\n+            if (block->GetBlockTime() >= time) {\n+                return block->nHeight;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findPruned(int start_height, Optional<int> stop_height) override\n+    {\n+        if (::fPruneMode) {\n+            CBlockIndex* block = stop_height ? ::chainActive[*stop_height] : ::chainActive.Tip();\n+            while (block && block->nHeight >= start_height) {\n+                if (!(block->nStatus & BLOCK_HAVE_DATA)) {\n+                    return block->nHeight;\n+                }\n+                block = block->pprev;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findFork(const uint256& hash, Optional<int>* height) override\n+    {\n+        const CBlockIndex *block{nullptr}, *fork{nullptr};\n+        auto it = ::mapBlockIndex.find(hash);\n+        if (it != ::mapBlockIndex.end()) {\n+            block = it->second;\n+            fork = ::chainActive.FindFork(block);\n+        }\n+        if (height) {\n+            if (block) {\n+                *height = block->nHeight;\n+            } else {\n+                height->reset();\n+            }\n+        }\n+        if (fork) {\n+            return fork->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    bool isPotentialTip(const uint256& hash) override\n+    {\n+        if (::chainActive.Tip()->GetBlockHash() == hash) return true;\n+        auto it = ::mapBlockIndex.find(hash);\n+        return it != ::mapBlockIndex.end() && it->second->GetAncestor(::chainActive.Height()) == ::chainActive.Tip();\n+    }\n+    CBlockLocator getLocator() override { return ::chainActive.GetLocator(); }\n+    Optional<int> findLocatorFork(const CBlockLocator& locator) override\n+    {\n+        if (CBlockIndex* fork = FindForkInGlobalIndex(::chainActive, locator)) {\n+            return fork->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    bool checkFinalTx(const CTransaction& tx) override\n+    {\n+        LockAnnotation lock(::cs_main);\n+        return CheckFinalTx(tx);\n+    }\n+    bool acceptToMemoryPool(CTransactionRef tx, CValidationState& state) override\n+    {\n+        LockAnnotation lock(::cs_main);\n+        return AcceptToMemoryPool(::mempool, state, tx, nullptr /* missing inputs */, nullptr /* txn replaced */,\n+            false /* bypass limits */, ::maxTxFee /* absurd fee */);\n+    }\n+};\n+\n+class LockingStateImpl : public LockImpl, public UniqueLock<CCriticalSection>\n+{\n+    using UniqueLock::UniqueLock;\n+};\n+\n+class HandlerImpl : public Handler\n+{\n+public:\n+    HandlerImpl(Chain::Notifications& notifications) : m_forwarder(notifications) {}\n+    ~HandlerImpl() override\n+    {\n+        // It is important to disconnect here in the HandlerImpl destructor,\n+        // instead of in the HandleImpl::Forwarder destructor, because\n+        // UnregisterAllValidationInterfaces() internally accesses Forwarder\n+        // virtual methods which are no longer available after Forwarder object\n+        // has begun to be being destroyed.\n+        m_forwarder.disconnect();\n+    }\n+    void disconnect() override { m_forwarder.disconnect(); }\n+\n+    struct Forwarder : CValidationInterface\n+    {\n+        Forwarder(Chain::Notifications& notifications) : m_notifications(&notifications)\n+        {\n+            RegisterValidationInterface(this);\n+        }\n+        void disconnect()\n+        {\n+            if (m_notifications) {\n+                m_notifications = nullptr;\n+                UnregisterValidationInterface(this);\n+            }\n+        }\n+        void TransactionAddedToMempool(const CTransactionRef& tx) override\n+        {\n+            m_notifications->TransactionAddedToMempool(tx);\n+        }\n+        void TransactionRemovedFromMempool(const CTransactionRef& tx) override\n+        {\n+            m_notifications->TransactionRemovedFromMempool(tx);\n+        }\n+        void BlockConnected(const std::shared_ptr<const CBlock>& block,\n+            const CBlockIndex* index,\n+            const std::vector<CTransactionRef>& tx_conflicted) override\n+        {\n+            m_notifications->BlockConnected(*block, index->GetBlockHash(), tx_conflicted);\n+        }\n+        void BlockDisconnected(const std::shared_ptr<const CBlock>& block) override\n+        {\n+            m_notifications->BlockDisconnected(*block);\n+        }\n+        void ChainStateFlushed(const CBlockLocator& locator) override { m_notifications->ChainStateFlushed(locator); }\n+        void ResendWalletTransactions(int64_t best_block_time, CConnman* connman) override\n+        {\n+            m_notifications->ResendWalletTransactions(best_block_time);\n+        }\n+\n+        Chain::Notifications* m_notifications;\n+    };\n+\n+    Forwarder m_forwarder;\n+};\n+\n+class ChainImpl : public Chain\n+{\n+public:\n+    std::unique_ptr<Chain::Lock> lock(bool try_lock) override\n+    {\n+        auto result = MakeUnique<LockingStateImpl>(::cs_main, \"cs_main\", __FILE__, __LINE__, try_lock);\n+        if (try_lock && result && !*result) return {};\n+        // std::move necessary on some compilers due to conversion from\n+        // LockingStateImpl to Lock pointer\n+        return std::move(result);\n+    }\n+    std::unique_ptr<Chain::Lock> assumeLocked() override { return MakeUnique<LockImpl>(); }\n+    bool findBlock(const uint256& hash, CBlock* block, int64_t* time, int64_t* time_max) override\n+    {\n+        CBlockIndex* index;\n+        {\n+            LOCK(cs_main);\n+            auto it = ::mapBlockIndex.find(hash);\n+            if (it == ::mapBlockIndex.end()) {\n+                return false;\n+            }\n+            index = it->second;\n+            if (time) {\n+                *time = index->GetBlockTime();\n+            }\n+            if (time_max) {\n+                *time_max = index->GetBlockTimeMax();\n+            }\n+        }\n+        if (block && !ReadBlockFromDisk(*block, index, Params().GetConsensus())) {\n+            block->SetNull();\n+        }\n+        return true;\n+    }\n+    std::vector<Coin> findCoins(const std::vector<COutPoint>& outputs) override\n+    {\n+        std::vector<Coin> coins;\n+        LOCK2(cs_main, ::mempool.cs);\n+        assert(pcoinsTip);\n+        CCoinsViewCache& chain_view = *::pcoinsTip;\n+        CCoinsViewMemPool mempool_view(&chain_view, ::mempool);\n+        for (const auto& output : outputs) {\n+            Coin coin;\n+            mempool_view.GetCoin(output, coin);\n+            coins.emplace_back(std::move(coin));\n+        }\n+        return coins;\n+    }\n+    double guessVerificationProgress(const uint256& block_hash) override\n+    {\n+        LOCK(cs_main);\n+        auto it = ::mapBlockIndex.find(block_hash);\n+        return GuessVerificationProgress(Params().TxData(), it != ::mapBlockIndex.end() ? it->second : nullptr);\n+    }\n+    int64_t getVirtualTransactionSize(const CTransaction& tx) override { return GetVirtualTransactionSize(tx); }\n+    RBFTransactionState isRBFOptIn(const CTransaction& tx) override\n+    {\n+        LOCK(::mempool.cs);\n+        return IsRBFOptIn(tx, ::mempool);\n+    }\n+    bool hasDescendantsInMempool(const uint256& txid) override\n+    {\n+        LOCK(::mempool.cs);\n+        auto it_mp = ::mempool.mapTx.find(txid);\n+        return it_mp != ::mempool.mapTx.end() && it_mp->GetCountWithDescendants() > 1;\n+    }\n+    bool relayTransaction(const uint256& txid) override\n+    {\n+        if (g_connman) {\n+            CInv inv(MSG_TX, txid);\n+            g_connman->ForEachNode([&inv](CNode* node) { node->PushInventory(inv); });\n+            return true;\n+        }\n+        return false;\n+    }\n+    void getTransactionAncestry(const uint256& txid, size_t& ancestors, size_t& descendants) override\n+    {\n+        ::mempool.GetTransactionAncestry(txid, ancestors, descendants);\n+    }\n+    bool checkChainLimits(CTransactionRef tx) override\n+    {\n+        LockPoints lp;\n+        CTxMemPoolEntry entry(tx, 0, 0, 0, false, 0, lp);\n+        CTxMemPool::setEntries setAncestors;\n+        size_t nLimitAncestors = gArgs.GetArg(\"-limitancestorcount\", DEFAULT_ANCESTOR_LIMIT);\n+        size_t nLimitAncestorSize = gArgs.GetArg(\"-limitancestorsize\", DEFAULT_ANCESTOR_SIZE_LIMIT) * 1000;\n+        size_t nLimitDescendants = gArgs.GetArg(\"-limitdescendantcount\", DEFAULT_DESCENDANT_LIMIT);\n+        size_t nLimitDescendantSize = gArgs.GetArg(\"-limitdescendantsize\", DEFAULT_DESCENDANT_SIZE_LIMIT) * 1000;\n+        std::string errString;\n+        LOCK(::mempool.cs);\n+        if (!::mempool.CalculateMemPoolAncestors(entry, setAncestors, nLimitAncestors, nLimitAncestorSize,\n+                nLimitDescendants, nLimitDescendantSize, errString)) {\n+            return false;",
      "path": "src/interfaces/chain.cpp",
      "position": null,
      "original_position": 315,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "e44e639558b1084f14a97847592616c3df9fff38",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```\r\n2018-09-19 14:39:06 clang-tidy(pr=10973): src/interfaces/chain.cpp:315:20: warning: redundant boolean literal in conditional return statement [readability-simplify-boolean-expr]\r\n```",
      "created_at": "2018-09-21T08:11:03Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r219415575",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219415575"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 315,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219415650",
      "pull_request_review_id": 157585601,
      "id": 219415650,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTQxNTY1MA==",
      "diff_hunk": "@@ -0,0 +1,453 @@\n+#include <interfaces/chain.h>\n+\n+#include <chain.h>\n+#include <chainparams.h>\n+#include <interfaces/handler.h>\n+#include <interfaces/wallet.h>\n+#include <net.h>\n+#include <policy/fees.h>\n+#include <policy/policy.h>\n+#include <policy/rbf.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <protocol.h>\n+#include <rpc/mining.h>\n+#include <rpc/protocol.h>\n+#include <rpc/server.h>\n+#include <sync.h>\n+#include <threadsafety.h>\n+#include <timedata.h>\n+#include <txmempool.h>\n+#include <ui_interface.h>\n+#include <uint256.h>\n+#include <univalue.h>\n+#include <util.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+\n+#include <algorithm>\n+#include <map>\n+#include <memory>\n+#include <tuple>\n+#include <unordered_map>\n+#include <utility>\n+\n+class CReserveScript;\n+\n+namespace interfaces {\n+namespace {\n+\n+//! Extension of std::reference_wrapper with operator< for use as map key.\n+template <typename T>\n+class Ref : public std::reference_wrapper<T>\n+{\n+public:\n+    using std::reference_wrapper<T>::reference_wrapper;\n+    bool operator<(const Ref<T>& other) const { return this->get() < other.get(); }\n+};\n+\n+class LockImpl : public Chain::Lock\n+{\n+    Optional<int> getHeight() override\n+    {\n+        int height = ::chainActive.Height();\n+        if (height >= 0) {\n+            return height;\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> getBlockHeight(const uint256& hash) override\n+    {\n+        auto it = ::mapBlockIndex.find(hash);\n+        if (it != ::mapBlockIndex.end() && it->second) {\n+            if (::chainActive.Contains(it->second)) {\n+                return it->second->nHeight;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    int getBlockDepth(const uint256& hash) override\n+    {\n+        const Optional<int> tip_height = getHeight();\n+        const Optional<int> height = getBlockHeight(hash);\n+        return tip_height && height ? *tip_height - *height + 1 : 0;\n+    }\n+    uint256 getBlockHash(int height) override { return ::chainActive[height]->GetBlockHash(); }\n+    int64_t getBlockTime(int height) override { return ::chainActive[height]->GetBlockTime(); }\n+    int64_t getBlockMedianTimePast(int height) override { return ::chainActive[height]->GetMedianTimePast(); }\n+    bool haveBlockOnDisk(int height) override\n+    {\n+        CBlockIndex* block = ::chainActive[height];\n+        return block && (block->nStatus & BLOCK_HAVE_DATA) && block->nTx > 0;\n+    }\n+    Optional<int> findFirstBlockWithTime(int64_t time) override\n+    {\n+        CBlockIndex* block = ::chainActive.FindEarliestAtLeast(time);\n+        if (block) {\n+            return block->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findFirstBlockWithTimeAndHeight(int64_t time, int height) override\n+    {\n+        for (CBlockIndex* block = ::chainActive[height]; block; block = ::chainActive.Next(block)) {\n+            if (block->GetBlockTime() >= time) {\n+                return block->nHeight;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findPruned(int start_height, Optional<int> stop_height) override\n+    {\n+        if (::fPruneMode) {\n+            CBlockIndex* block = stop_height ? ::chainActive[*stop_height] : ::chainActive.Tip();\n+            while (block && block->nHeight >= start_height) {\n+                if (!(block->nStatus & BLOCK_HAVE_DATA)) {\n+                    return block->nHeight;\n+                }\n+                block = block->pprev;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findFork(const uint256& hash, Optional<int>* height) override\n+    {\n+        const CBlockIndex *block{nullptr}, *fork{nullptr};\n+        auto it = ::mapBlockIndex.find(hash);\n+        if (it != ::mapBlockIndex.end()) {\n+            block = it->second;\n+            fork = ::chainActive.FindFork(block);\n+        }\n+        if (height) {\n+            if (block) {\n+                *height = block->nHeight;\n+            } else {\n+                height->reset();\n+            }\n+        }\n+        if (fork) {\n+            return fork->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    bool isPotentialTip(const uint256& hash) override\n+    {\n+        if (::chainActive.Tip()->GetBlockHash() == hash) return true;\n+        auto it = ::mapBlockIndex.find(hash);\n+        return it != ::mapBlockIndex.end() && it->second->GetAncestor(::chainActive.Height()) == ::chainActive.Tip();\n+    }\n+    CBlockLocator getLocator() override { return ::chainActive.GetLocator(); }\n+    Optional<int> findLocatorFork(const CBlockLocator& locator) override\n+    {\n+        if (CBlockIndex* fork = FindForkInGlobalIndex(::chainActive, locator)) {\n+            return fork->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    bool checkFinalTx(const CTransaction& tx) override\n+    {\n+        LockAnnotation lock(::cs_main);\n+        return CheckFinalTx(tx);\n+    }\n+    bool acceptToMemoryPool(CTransactionRef tx, CValidationState& state) override\n+    {\n+        LockAnnotation lock(::cs_main);\n+        return AcceptToMemoryPool(::mempool, state, tx, nullptr /* missing inputs */, nullptr /* txn replaced */,\n+            false /* bypass limits */, ::maxTxFee /* absurd fee */);\n+    }\n+};\n+\n+class LockingStateImpl : public LockImpl, public UniqueLock<CCriticalSection>\n+{\n+    using UniqueLock::UniqueLock;\n+};\n+\n+class HandlerImpl : public Handler\n+{\n+public:\n+    HandlerImpl(Chain::Notifications& notifications) : m_forwarder(notifications) {}\n+    ~HandlerImpl() override\n+    {\n+        // It is important to disconnect here in the HandlerImpl destructor,\n+        // instead of in the HandleImpl::Forwarder destructor, because\n+        // UnregisterAllValidationInterfaces() internally accesses Forwarder\n+        // virtual methods which are no longer available after Forwarder object\n+        // has begun to be being destroyed.\n+        m_forwarder.disconnect();\n+    }\n+    void disconnect() override { m_forwarder.disconnect(); }\n+\n+    struct Forwarder : CValidationInterface\n+    {\n+        Forwarder(Chain::Notifications& notifications) : m_notifications(&notifications)\n+        {\n+            RegisterValidationInterface(this);\n+        }\n+        void disconnect()\n+        {\n+            if (m_notifications) {\n+                m_notifications = nullptr;\n+                UnregisterValidationInterface(this);\n+            }\n+        }\n+        void TransactionAddedToMempool(const CTransactionRef& tx) override\n+        {\n+            m_notifications->TransactionAddedToMempool(tx);\n+        }\n+        void TransactionRemovedFromMempool(const CTransactionRef& tx) override\n+        {\n+            m_notifications->TransactionRemovedFromMempool(tx);\n+        }\n+        void BlockConnected(const std::shared_ptr<const CBlock>& block,\n+            const CBlockIndex* index,\n+            const std::vector<CTransactionRef>& tx_conflicted) override\n+        {\n+            m_notifications->BlockConnected(*block, index->GetBlockHash(), tx_conflicted);\n+        }\n+        void BlockDisconnected(const std::shared_ptr<const CBlock>& block) override\n+        {\n+            m_notifications->BlockDisconnected(*block);\n+        }\n+        void ChainStateFlushed(const CBlockLocator& locator) override { m_notifications->ChainStateFlushed(locator); }\n+        void ResendWalletTransactions(int64_t best_block_time, CConnman* connman) override\n+        {\n+            m_notifications->ResendWalletTransactions(best_block_time);\n+        }\n+\n+        Chain::Notifications* m_notifications;\n+    };\n+\n+    Forwarder m_forwarder;\n+};\n+\n+class ChainImpl : public Chain\n+{\n+public:\n+    std::unique_ptr<Chain::Lock> lock(bool try_lock) override\n+    {\n+        auto result = MakeUnique<LockingStateImpl>(::cs_main, \"cs_main\", __FILE__, __LINE__, try_lock);\n+        if (try_lock && result && !*result) return {};\n+        // std::move necessary on some compilers due to conversion from\n+        // LockingStateImpl to Lock pointer\n+        return std::move(result);\n+    }\n+    std::unique_ptr<Chain::Lock> assumeLocked() override { return MakeUnique<LockImpl>(); }\n+    bool findBlock(const uint256& hash, CBlock* block, int64_t* time, int64_t* time_max) override\n+    {\n+        CBlockIndex* index;\n+        {\n+            LOCK(cs_main);\n+            auto it = ::mapBlockIndex.find(hash);\n+            if (it == ::mapBlockIndex.end()) {\n+                return false;\n+            }\n+            index = it->second;\n+            if (time) {\n+                *time = index->GetBlockTime();\n+            }\n+            if (time_max) {\n+                *time_max = index->GetBlockTimeMax();\n+            }\n+        }\n+        if (block && !ReadBlockFromDisk(*block, index, Params().GetConsensus())) {\n+            block->SetNull();\n+        }\n+        return true;\n+    }\n+    std::vector<Coin> findCoins(const std::vector<COutPoint>& outputs) override\n+    {\n+        std::vector<Coin> coins;\n+        LOCK2(cs_main, ::mempool.cs);\n+        assert(pcoinsTip);\n+        CCoinsViewCache& chain_view = *::pcoinsTip;\n+        CCoinsViewMemPool mempool_view(&chain_view, ::mempool);\n+        for (const auto& output : outputs) {\n+            Coin coin;\n+            mempool_view.GetCoin(output, coin);\n+            coins.emplace_back(std::move(coin));\n+        }\n+        return coins;\n+    }\n+    double guessVerificationProgress(const uint256& block_hash) override\n+    {\n+        LOCK(cs_main);\n+        auto it = ::mapBlockIndex.find(block_hash);\n+        return GuessVerificationProgress(Params().TxData(), it != ::mapBlockIndex.end() ? it->second : nullptr);\n+    }\n+    int64_t getVirtualTransactionSize(const CTransaction& tx) override { return GetVirtualTransactionSize(tx); }\n+    RBFTransactionState isRBFOptIn(const CTransaction& tx) override\n+    {\n+        LOCK(::mempool.cs);\n+        return IsRBFOptIn(tx, ::mempool);\n+    }\n+    bool hasDescendantsInMempool(const uint256& txid) override\n+    {\n+        LOCK(::mempool.cs);\n+        auto it_mp = ::mempool.mapTx.find(txid);\n+        return it_mp != ::mempool.mapTx.end() && it_mp->GetCountWithDescendants() > 1;\n+    }\n+    bool relayTransaction(const uint256& txid) override\n+    {\n+        if (g_connman) {\n+            CInv inv(MSG_TX, txid);\n+            g_connman->ForEachNode([&inv](CNode* node) { node->PushInventory(inv); });\n+            return true;\n+        }\n+        return false;\n+    }\n+    void getTransactionAncestry(const uint256& txid, size_t& ancestors, size_t& descendants) override\n+    {\n+        ::mempool.GetTransactionAncestry(txid, ancestors, descendants);\n+    }\n+    bool checkChainLimits(CTransactionRef tx) override\n+    {\n+        LockPoints lp;\n+        CTxMemPoolEntry entry(tx, 0, 0, 0, false, 0, lp);\n+        CTxMemPool::setEntries setAncestors;\n+        size_t nLimitAncestors = gArgs.GetArg(\"-limitancestorcount\", DEFAULT_ANCESTOR_LIMIT);\n+        size_t nLimitAncestorSize = gArgs.GetArg(\"-limitancestorsize\", DEFAULT_ANCESTOR_SIZE_LIMIT) * 1000;\n+        size_t nLimitDescendants = gArgs.GetArg(\"-limitdescendantcount\", DEFAULT_DESCENDANT_LIMIT);\n+        size_t nLimitDescendantSize = gArgs.GetArg(\"-limitdescendantsize\", DEFAULT_DESCENDANT_SIZE_LIMIT) * 1000;\n+        std::string errString;\n+        LOCK(::mempool.cs);\n+        if (!::mempool.CalculateMemPoolAncestors(entry, setAncestors, nLimitAncestors, nLimitAncestorSize,\n+                nLimitDescendants, nLimitDescendantSize, errString)) {\n+            return false;\n+        }\n+        return true;\n+    }\n+    CFeeRate estimateSmartFee(int num_blocks, bool conservative, FeeCalculation* calc) override\n+    {\n+        return ::feeEstimator.estimateSmartFee(num_blocks, calc, conservative);\n+    }\n+    int estimateMaxBlocks() override { return ::feeEstimator.HighestTargetTracked(FeeEstimateHorizon::LONG_HALFLIFE); }\n+    CFeeRate poolMinFee() override\n+    {\n+        return ::mempool.GetMinFee(gArgs.GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000);\n+    }\n+    bool getPruneMode() override { return ::fPruneMode; }\n+    bool p2pEnabled() override { return g_connman != nullptr; }\n+    bool isInitialBlockDownload() override { return IsInitialBlockDownload(); }\n+    int64_t getAdjustedTime() override { return GetAdjustedTime(); }\n+    void initMessage(const std::string& message) override { ::uiInterface.InitMessage(message); }\n+    void initWarning(const std::string& message) override { InitWarning(message); }\n+    void initError(const std::string& message) override { InitError(message); }\n+    void loadWallet(std::unique_ptr<Wallet> wallet) override { ::uiInterface.LoadWallet(wallet); }\n+    UniValue generateBlocks(std::shared_ptr<CReserveScript> coinbase_script,\n+        int num_blocks,\n+        uint64_t max_tries,\n+        bool keep_script) override\n+    {\n+        return ::generateBlocks(coinbase_script, num_blocks, max_tries, keep_script);\n+    }\n+    unsigned int parseConfirmTarget(const UniValue& value) override { return ParseConfirmTarget(value); }\n+    std::unique_ptr<Handler> handleNotifications(Notifications& notifications) override\n+    {\n+        return MakeUnique<HandlerImpl>(notifications);\n+    }\n+    void waitForNotifications() override { SyncWithValidationInterfaceQueue(); }\n+    std::unique_ptr<Handler> handleRpc(const CRPCCommand& command) override;\n+\n+    //! Map of RPC method name to forwarder. If multiple clients provide\n+    //! implementations of the same RPC method, the RPC forwarder can dispatch\n+    //! between them.\n+    class RpcForwarder;\n+    std::map<Ref<const std::string>, RpcForwarder> m_rpc_forwarders;\n+};\n+\n+//! Forwarder for one RPC method.\n+class ChainImpl::RpcForwarder\n+{\n+public:\n+    RpcForwarder(const CRPCCommand& command) : m_command(command)",
      "path": "src/interfaces/chain.cpp",
      "position": null,
      "original_position": 362,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "e44e639558b1084f14a97847592616c3df9fff38",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```\r\n2018-09-19 14:39:06 clang-tidy(pr=10973): src/interfaces/chain.cpp:362:5: warning: single-argument constructors must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor]\r\n```",
      "created_at": "2018-09-21T08:11:24Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r219415650",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219415650"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 362,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219415928",
      "pull_request_review_id": 157585959,
      "id": 219415928,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTQxNTkyOA==",
      "diff_hunk": "@@ -0,0 +1,453 @@\n+#include <interfaces/chain.h>\n+\n+#include <chain.h>\n+#include <chainparams.h>\n+#include <interfaces/handler.h>\n+#include <interfaces/wallet.h>\n+#include <net.h>\n+#include <policy/fees.h>\n+#include <policy/policy.h>\n+#include <policy/rbf.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <protocol.h>\n+#include <rpc/mining.h>\n+#include <rpc/protocol.h>\n+#include <rpc/server.h>\n+#include <sync.h>\n+#include <threadsafety.h>\n+#include <timedata.h>\n+#include <txmempool.h>\n+#include <ui_interface.h>\n+#include <uint256.h>\n+#include <univalue.h>\n+#include <util.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+\n+#include <algorithm>\n+#include <map>\n+#include <memory>\n+#include <tuple>\n+#include <unordered_map>\n+#include <utility>\n+\n+class CReserveScript;\n+\n+namespace interfaces {\n+namespace {\n+\n+//! Extension of std::reference_wrapper with operator< for use as map key.\n+template <typename T>\n+class Ref : public std::reference_wrapper<T>\n+{\n+public:\n+    using std::reference_wrapper<T>::reference_wrapper;\n+    bool operator<(const Ref<T>& other) const { return this->get() < other.get(); }\n+};\n+\n+class LockImpl : public Chain::Lock\n+{\n+    Optional<int> getHeight() override\n+    {\n+        int height = ::chainActive.Height();\n+        if (height >= 0) {\n+            return height;\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> getBlockHeight(const uint256& hash) override\n+    {\n+        auto it = ::mapBlockIndex.find(hash);\n+        if (it != ::mapBlockIndex.end() && it->second) {\n+            if (::chainActive.Contains(it->second)) {\n+                return it->second->nHeight;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    int getBlockDepth(const uint256& hash) override\n+    {\n+        const Optional<int> tip_height = getHeight();\n+        const Optional<int> height = getBlockHeight(hash);\n+        return tip_height && height ? *tip_height - *height + 1 : 0;\n+    }\n+    uint256 getBlockHash(int height) override { return ::chainActive[height]->GetBlockHash(); }\n+    int64_t getBlockTime(int height) override { return ::chainActive[height]->GetBlockTime(); }\n+    int64_t getBlockMedianTimePast(int height) override { return ::chainActive[height]->GetMedianTimePast(); }\n+    bool haveBlockOnDisk(int height) override\n+    {\n+        CBlockIndex* block = ::chainActive[height];\n+        return block && (block->nStatus & BLOCK_HAVE_DATA) && block->nTx > 0;\n+    }\n+    Optional<int> findFirstBlockWithTime(int64_t time) override\n+    {\n+        CBlockIndex* block = ::chainActive.FindEarliestAtLeast(time);\n+        if (block) {\n+            return block->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findFirstBlockWithTimeAndHeight(int64_t time, int height) override\n+    {\n+        for (CBlockIndex* block = ::chainActive[height]; block; block = ::chainActive.Next(block)) {\n+            if (block->GetBlockTime() >= time) {\n+                return block->nHeight;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findPruned(int start_height, Optional<int> stop_height) override\n+    {\n+        if (::fPruneMode) {\n+            CBlockIndex* block = stop_height ? ::chainActive[*stop_height] : ::chainActive.Tip();\n+            while (block && block->nHeight >= start_height) {\n+                if (!(block->nStatus & BLOCK_HAVE_DATA)) {\n+                    return block->nHeight;\n+                }\n+                block = block->pprev;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findFork(const uint256& hash, Optional<int>* height) override\n+    {\n+        const CBlockIndex *block{nullptr}, *fork{nullptr};\n+        auto it = ::mapBlockIndex.find(hash);\n+        if (it != ::mapBlockIndex.end()) {\n+            block = it->second;\n+            fork = ::chainActive.FindFork(block);\n+        }\n+        if (height) {\n+            if (block) {\n+                *height = block->nHeight;\n+            } else {\n+                height->reset();\n+            }\n+        }\n+        if (fork) {\n+            return fork->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    bool isPotentialTip(const uint256& hash) override\n+    {\n+        if (::chainActive.Tip()->GetBlockHash() == hash) return true;\n+        auto it = ::mapBlockIndex.find(hash);\n+        return it != ::mapBlockIndex.end() && it->second->GetAncestor(::chainActive.Height()) == ::chainActive.Tip();\n+    }\n+    CBlockLocator getLocator() override { return ::chainActive.GetLocator(); }\n+    Optional<int> findLocatorFork(const CBlockLocator& locator) override\n+    {\n+        if (CBlockIndex* fork = FindForkInGlobalIndex(::chainActive, locator)) {\n+            return fork->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    bool checkFinalTx(const CTransaction& tx) override\n+    {\n+        LockAnnotation lock(::cs_main);\n+        return CheckFinalTx(tx);\n+    }\n+    bool acceptToMemoryPool(CTransactionRef tx, CValidationState& state) override\n+    {\n+        LockAnnotation lock(::cs_main);\n+        return AcceptToMemoryPool(::mempool, state, tx, nullptr /* missing inputs */, nullptr /* txn replaced */,\n+            false /* bypass limits */, ::maxTxFee /* absurd fee */);\n+    }\n+};\n+\n+class LockingStateImpl : public LockImpl, public UniqueLock<CCriticalSection>\n+{\n+    using UniqueLock::UniqueLock;\n+};\n+\n+class HandlerImpl : public Handler\n+{\n+public:\n+    HandlerImpl(Chain::Notifications& notifications) : m_forwarder(notifications) {}\n+    ~HandlerImpl() override\n+    {\n+        // It is important to disconnect here in the HandlerImpl destructor,\n+        // instead of in the HandleImpl::Forwarder destructor, because\n+        // UnregisterAllValidationInterfaces() internally accesses Forwarder\n+        // virtual methods which are no longer available after Forwarder object\n+        // has begun to be being destroyed.\n+        m_forwarder.disconnect();\n+    }\n+    void disconnect() override { m_forwarder.disconnect(); }\n+\n+    struct Forwarder : CValidationInterface\n+    {\n+        Forwarder(Chain::Notifications& notifications) : m_notifications(&notifications)\n+        {\n+            RegisterValidationInterface(this);\n+        }\n+        void disconnect()\n+        {\n+            if (m_notifications) {\n+                m_notifications = nullptr;\n+                UnregisterValidationInterface(this);\n+            }\n+        }\n+        void TransactionAddedToMempool(const CTransactionRef& tx) override\n+        {\n+            m_notifications->TransactionAddedToMempool(tx);\n+        }\n+        void TransactionRemovedFromMempool(const CTransactionRef& tx) override\n+        {\n+            m_notifications->TransactionRemovedFromMempool(tx);\n+        }\n+        void BlockConnected(const std::shared_ptr<const CBlock>& block,\n+            const CBlockIndex* index,\n+            const std::vector<CTransactionRef>& tx_conflicted) override\n+        {\n+            m_notifications->BlockConnected(*block, index->GetBlockHash(), tx_conflicted);\n+        }\n+        void BlockDisconnected(const std::shared_ptr<const CBlock>& block) override\n+        {\n+            m_notifications->BlockDisconnected(*block);\n+        }\n+        void ChainStateFlushed(const CBlockLocator& locator) override { m_notifications->ChainStateFlushed(locator); }\n+        void ResendWalletTransactions(int64_t best_block_time, CConnman* connman) override\n+        {\n+            m_notifications->ResendWalletTransactions(best_block_time);\n+        }\n+\n+        Chain::Notifications* m_notifications;\n+    };\n+\n+    Forwarder m_forwarder;\n+};\n+\n+class ChainImpl : public Chain\n+{\n+public:\n+    std::unique_ptr<Chain::Lock> lock(bool try_lock) override\n+    {\n+        auto result = MakeUnique<LockingStateImpl>(::cs_main, \"cs_main\", __FILE__, __LINE__, try_lock);\n+        if (try_lock && result && !*result) return {};\n+        // std::move necessary on some compilers due to conversion from\n+        // LockingStateImpl to Lock pointer\n+        return std::move(result);\n+    }\n+    std::unique_ptr<Chain::Lock> assumeLocked() override { return MakeUnique<LockImpl>(); }\n+    bool findBlock(const uint256& hash, CBlock* block, int64_t* time, int64_t* time_max) override\n+    {\n+        CBlockIndex* index;\n+        {\n+            LOCK(cs_main);\n+            auto it = ::mapBlockIndex.find(hash);\n+            if (it == ::mapBlockIndex.end()) {\n+                return false;\n+            }\n+            index = it->second;\n+            if (time) {\n+                *time = index->GetBlockTime();\n+            }\n+            if (time_max) {\n+                *time_max = index->GetBlockTimeMax();\n+            }\n+        }\n+        if (block && !ReadBlockFromDisk(*block, index, Params().GetConsensus())) {\n+            block->SetNull();\n+        }\n+        return true;\n+    }\n+    std::vector<Coin> findCoins(const std::vector<COutPoint>& outputs) override\n+    {\n+        std::vector<Coin> coins;\n+        LOCK2(cs_main, ::mempool.cs);\n+        assert(pcoinsTip);\n+        CCoinsViewCache& chain_view = *::pcoinsTip;\n+        CCoinsViewMemPool mempool_view(&chain_view, ::mempool);\n+        for (const auto& output : outputs) {\n+            Coin coin;\n+            mempool_view.GetCoin(output, coin);\n+            coins.emplace_back(std::move(coin));\n+        }\n+        return coins;\n+    }\n+    double guessVerificationProgress(const uint256& block_hash) override\n+    {\n+        LOCK(cs_main);\n+        auto it = ::mapBlockIndex.find(block_hash);\n+        return GuessVerificationProgress(Params().TxData(), it != ::mapBlockIndex.end() ? it->second : nullptr);\n+    }\n+    int64_t getVirtualTransactionSize(const CTransaction& tx) override { return GetVirtualTransactionSize(tx); }\n+    RBFTransactionState isRBFOptIn(const CTransaction& tx) override\n+    {\n+        LOCK(::mempool.cs);\n+        return IsRBFOptIn(tx, ::mempool);\n+    }\n+    bool hasDescendantsInMempool(const uint256& txid) override\n+    {\n+        LOCK(::mempool.cs);\n+        auto it_mp = ::mempool.mapTx.find(txid);\n+        return it_mp != ::mempool.mapTx.end() && it_mp->GetCountWithDescendants() > 1;\n+    }\n+    bool relayTransaction(const uint256& txid) override\n+    {\n+        if (g_connman) {\n+            CInv inv(MSG_TX, txid);\n+            g_connman->ForEachNode([&inv](CNode* node) { node->PushInventory(inv); });\n+            return true;\n+        }\n+        return false;\n+    }\n+    void getTransactionAncestry(const uint256& txid, size_t& ancestors, size_t& descendants) override\n+    {\n+        ::mempool.GetTransactionAncestry(txid, ancestors, descendants);\n+    }\n+    bool checkChainLimits(CTransactionRef tx) override\n+    {\n+        LockPoints lp;\n+        CTxMemPoolEntry entry(tx, 0, 0, 0, false, 0, lp);\n+        CTxMemPool::setEntries setAncestors;\n+        size_t nLimitAncestors = gArgs.GetArg(\"-limitancestorcount\", DEFAULT_ANCESTOR_LIMIT);\n+        size_t nLimitAncestorSize = gArgs.GetArg(\"-limitancestorsize\", DEFAULT_ANCESTOR_SIZE_LIMIT) * 1000;\n+        size_t nLimitDescendants = gArgs.GetArg(\"-limitdescendantcount\", DEFAULT_DESCENDANT_LIMIT);\n+        size_t nLimitDescendantSize = gArgs.GetArg(\"-limitdescendantsize\", DEFAULT_DESCENDANT_SIZE_LIMIT) * 1000;\n+        std::string errString;\n+        LOCK(::mempool.cs);\n+        if (!::mempool.CalculateMemPoolAncestors(entry, setAncestors, nLimitAncestors, nLimitAncestorSize,\n+                nLimitDescendants, nLimitDescendantSize, errString)) {\n+            return false;\n+        }\n+        return true;\n+    }\n+    CFeeRate estimateSmartFee(int num_blocks, bool conservative, FeeCalculation* calc) override\n+    {\n+        return ::feeEstimator.estimateSmartFee(num_blocks, calc, conservative);\n+    }\n+    int estimateMaxBlocks() override { return ::feeEstimator.HighestTargetTracked(FeeEstimateHorizon::LONG_HALFLIFE); }\n+    CFeeRate poolMinFee() override\n+    {\n+        return ::mempool.GetMinFee(gArgs.GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000);\n+    }\n+    bool getPruneMode() override { return ::fPruneMode; }\n+    bool p2pEnabled() override { return g_connman != nullptr; }\n+    bool isInitialBlockDownload() override { return IsInitialBlockDownload(); }\n+    int64_t getAdjustedTime() override { return GetAdjustedTime(); }\n+    void initMessage(const std::string& message) override { ::uiInterface.InitMessage(message); }\n+    void initWarning(const std::string& message) override { InitWarning(message); }\n+    void initError(const std::string& message) override { InitError(message); }\n+    void loadWallet(std::unique_ptr<Wallet> wallet) override { ::uiInterface.LoadWallet(wallet); }\n+    UniValue generateBlocks(std::shared_ptr<CReserveScript> coinbase_script,\n+        int num_blocks,\n+        uint64_t max_tries,\n+        bool keep_script) override\n+    {\n+        return ::generateBlocks(coinbase_script, num_blocks, max_tries, keep_script);\n+    }\n+    unsigned int parseConfirmTarget(const UniValue& value) override { return ParseConfirmTarget(value); }\n+    std::unique_ptr<Handler> handleNotifications(Notifications& notifications) override\n+    {\n+        return MakeUnique<HandlerImpl>(notifications);\n+    }\n+    void waitForNotifications() override { SyncWithValidationInterfaceQueue(); }\n+    std::unique_ptr<Handler> handleRpc(const CRPCCommand& command) override;\n+\n+    //! Map of RPC method name to forwarder. If multiple clients provide\n+    //! implementations of the same RPC method, the RPC forwarder can dispatch\n+    //! between them.\n+    class RpcForwarder;\n+    std::map<Ref<const std::string>, RpcForwarder> m_rpc_forwarders;\n+};\n+\n+//! Forwarder for one RPC method.\n+class ChainImpl::RpcForwarder\n+{\n+public:\n+    RpcForwarder(const CRPCCommand& command) : m_command(command)\n+    {\n+        m_command.actor = [this](const JSONRPCRequest& request) { return forwardRequest(request); };\n+    }\n+\n+    bool registerForwarder() { return ::tableRPC.appendCommand(m_command.name, &m_command); }\n+\n+    void addCommand(const CRPCCommand& command) { m_commands.emplace_back(&command); }\n+\n+    void removeCommand(const CRPCCommand& command)\n+    {\n+        m_commands.erase(std::remove(m_commands.begin(), m_commands.end(), &command));",
      "path": "src/interfaces/chain.cpp",
      "position": null,
      "original_position": 373,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "e44e639558b1084f14a97847592616c3df9fff38",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```\r\n2018-09-19 14:39:06 clang-tidy(pr=10973): src/interfaces/chain.cpp:373:9: warning: this call will remove at most one item even when multiple items should be removed [bugprone-inaccurate-erase]\r\n```",
      "created_at": "2018-09-21T08:12:32Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r219415928",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219415928"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 373,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219416164",
      "pull_request_review_id": 157586253,
      "id": 219416164,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTQxNjE2NA==",
      "diff_hunk": "@@ -0,0 +1,453 @@\n+#include <interfaces/chain.h>\n+\n+#include <chain.h>\n+#include <chainparams.h>\n+#include <interfaces/handler.h>\n+#include <interfaces/wallet.h>\n+#include <net.h>\n+#include <policy/fees.h>\n+#include <policy/policy.h>\n+#include <policy/rbf.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <protocol.h>\n+#include <rpc/mining.h>\n+#include <rpc/protocol.h>\n+#include <rpc/server.h>\n+#include <sync.h>\n+#include <threadsafety.h>\n+#include <timedata.h>\n+#include <txmempool.h>\n+#include <ui_interface.h>\n+#include <uint256.h>\n+#include <univalue.h>\n+#include <util.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+\n+#include <algorithm>\n+#include <map>\n+#include <memory>\n+#include <tuple>\n+#include <unordered_map>\n+#include <utility>\n+\n+class CReserveScript;\n+\n+namespace interfaces {\n+namespace {\n+\n+//! Extension of std::reference_wrapper with operator< for use as map key.\n+template <typename T>\n+class Ref : public std::reference_wrapper<T>\n+{\n+public:\n+    using std::reference_wrapper<T>::reference_wrapper;\n+    bool operator<(const Ref<T>& other) const { return this->get() < other.get(); }\n+};\n+\n+class LockImpl : public Chain::Lock\n+{\n+    Optional<int> getHeight() override\n+    {\n+        int height = ::chainActive.Height();\n+        if (height >= 0) {\n+            return height;\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> getBlockHeight(const uint256& hash) override\n+    {\n+        auto it = ::mapBlockIndex.find(hash);\n+        if (it != ::mapBlockIndex.end() && it->second) {\n+            if (::chainActive.Contains(it->second)) {\n+                return it->second->nHeight;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    int getBlockDepth(const uint256& hash) override\n+    {\n+        const Optional<int> tip_height = getHeight();\n+        const Optional<int> height = getBlockHeight(hash);\n+        return tip_height && height ? *tip_height - *height + 1 : 0;\n+    }\n+    uint256 getBlockHash(int height) override { return ::chainActive[height]->GetBlockHash(); }\n+    int64_t getBlockTime(int height) override { return ::chainActive[height]->GetBlockTime(); }\n+    int64_t getBlockMedianTimePast(int height) override { return ::chainActive[height]->GetMedianTimePast(); }\n+    bool haveBlockOnDisk(int height) override\n+    {\n+        CBlockIndex* block = ::chainActive[height];\n+        return block && (block->nStatus & BLOCK_HAVE_DATA) && block->nTx > 0;\n+    }\n+    Optional<int> findFirstBlockWithTime(int64_t time) override\n+    {\n+        CBlockIndex* block = ::chainActive.FindEarliestAtLeast(time);\n+        if (block) {\n+            return block->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findFirstBlockWithTimeAndHeight(int64_t time, int height) override\n+    {\n+        for (CBlockIndex* block = ::chainActive[height]; block; block = ::chainActive.Next(block)) {\n+            if (block->GetBlockTime() >= time) {\n+                return block->nHeight;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findPruned(int start_height, Optional<int> stop_height) override\n+    {\n+        if (::fPruneMode) {\n+            CBlockIndex* block = stop_height ? ::chainActive[*stop_height] : ::chainActive.Tip();\n+            while (block && block->nHeight >= start_height) {\n+                if (!(block->nStatus & BLOCK_HAVE_DATA)) {\n+                    return block->nHeight;\n+                }\n+                block = block->pprev;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findFork(const uint256& hash, Optional<int>* height) override\n+    {\n+        const CBlockIndex *block{nullptr}, *fork{nullptr};\n+        auto it = ::mapBlockIndex.find(hash);\n+        if (it != ::mapBlockIndex.end()) {\n+            block = it->second;\n+            fork = ::chainActive.FindFork(block);\n+        }\n+        if (height) {\n+            if (block) {\n+                *height = block->nHeight;\n+            } else {\n+                height->reset();\n+            }\n+        }\n+        if (fork) {\n+            return fork->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    bool isPotentialTip(const uint256& hash) override\n+    {\n+        if (::chainActive.Tip()->GetBlockHash() == hash) return true;\n+        auto it = ::mapBlockIndex.find(hash);\n+        return it != ::mapBlockIndex.end() && it->second->GetAncestor(::chainActive.Height()) == ::chainActive.Tip();\n+    }\n+    CBlockLocator getLocator() override { return ::chainActive.GetLocator(); }\n+    Optional<int> findLocatorFork(const CBlockLocator& locator) override\n+    {\n+        if (CBlockIndex* fork = FindForkInGlobalIndex(::chainActive, locator)) {\n+            return fork->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    bool checkFinalTx(const CTransaction& tx) override\n+    {\n+        LockAnnotation lock(::cs_main);\n+        return CheckFinalTx(tx);\n+    }\n+    bool acceptToMemoryPool(CTransactionRef tx, CValidationState& state) override\n+    {\n+        LockAnnotation lock(::cs_main);\n+        return AcceptToMemoryPool(::mempool, state, tx, nullptr /* missing inputs */, nullptr /* txn replaced */,\n+            false /* bypass limits */, ::maxTxFee /* absurd fee */);\n+    }\n+};\n+\n+class LockingStateImpl : public LockImpl, public UniqueLock<CCriticalSection>\n+{\n+    using UniqueLock::UniqueLock;\n+};\n+\n+class HandlerImpl : public Handler\n+{\n+public:\n+    HandlerImpl(Chain::Notifications& notifications) : m_forwarder(notifications) {}\n+    ~HandlerImpl() override\n+    {\n+        // It is important to disconnect here in the HandlerImpl destructor,\n+        // instead of in the HandleImpl::Forwarder destructor, because\n+        // UnregisterAllValidationInterfaces() internally accesses Forwarder\n+        // virtual methods which are no longer available after Forwarder object\n+        // has begun to be being destroyed.\n+        m_forwarder.disconnect();\n+    }\n+    void disconnect() override { m_forwarder.disconnect(); }\n+\n+    struct Forwarder : CValidationInterface\n+    {\n+        Forwarder(Chain::Notifications& notifications) : m_notifications(&notifications)\n+        {\n+            RegisterValidationInterface(this);\n+        }\n+        void disconnect()\n+        {\n+            if (m_notifications) {\n+                m_notifications = nullptr;\n+                UnregisterValidationInterface(this);\n+            }\n+        }\n+        void TransactionAddedToMempool(const CTransactionRef& tx) override\n+        {\n+            m_notifications->TransactionAddedToMempool(tx);\n+        }\n+        void TransactionRemovedFromMempool(const CTransactionRef& tx) override\n+        {\n+            m_notifications->TransactionRemovedFromMempool(tx);\n+        }\n+        void BlockConnected(const std::shared_ptr<const CBlock>& block,\n+            const CBlockIndex* index,\n+            const std::vector<CTransactionRef>& tx_conflicted) override\n+        {\n+            m_notifications->BlockConnected(*block, index->GetBlockHash(), tx_conflicted);\n+        }\n+        void BlockDisconnected(const std::shared_ptr<const CBlock>& block) override\n+        {\n+            m_notifications->BlockDisconnected(*block);\n+        }\n+        void ChainStateFlushed(const CBlockLocator& locator) override { m_notifications->ChainStateFlushed(locator); }\n+        void ResendWalletTransactions(int64_t best_block_time, CConnman* connman) override\n+        {\n+            m_notifications->ResendWalletTransactions(best_block_time);\n+        }\n+\n+        Chain::Notifications* m_notifications;\n+    };\n+\n+    Forwarder m_forwarder;\n+};\n+\n+class ChainImpl : public Chain\n+{\n+public:\n+    std::unique_ptr<Chain::Lock> lock(bool try_lock) override\n+    {\n+        auto result = MakeUnique<LockingStateImpl>(::cs_main, \"cs_main\", __FILE__, __LINE__, try_lock);\n+        if (try_lock && result && !*result) return {};\n+        // std::move necessary on some compilers due to conversion from\n+        // LockingStateImpl to Lock pointer\n+        return std::move(result);\n+    }\n+    std::unique_ptr<Chain::Lock> assumeLocked() override { return MakeUnique<LockImpl>(); }\n+    bool findBlock(const uint256& hash, CBlock* block, int64_t* time, int64_t* time_max) override\n+    {\n+        CBlockIndex* index;\n+        {\n+            LOCK(cs_main);\n+            auto it = ::mapBlockIndex.find(hash);\n+            if (it == ::mapBlockIndex.end()) {\n+                return false;\n+            }\n+            index = it->second;\n+            if (time) {\n+                *time = index->GetBlockTime();\n+            }\n+            if (time_max) {\n+                *time_max = index->GetBlockTimeMax();\n+            }\n+        }\n+        if (block && !ReadBlockFromDisk(*block, index, Params().GetConsensus())) {\n+            block->SetNull();\n+        }\n+        return true;\n+    }\n+    std::vector<Coin> findCoins(const std::vector<COutPoint>& outputs) override\n+    {\n+        std::vector<Coin> coins;\n+        LOCK2(cs_main, ::mempool.cs);\n+        assert(pcoinsTip);\n+        CCoinsViewCache& chain_view = *::pcoinsTip;\n+        CCoinsViewMemPool mempool_view(&chain_view, ::mempool);\n+        for (const auto& output : outputs) {\n+            Coin coin;\n+            mempool_view.GetCoin(output, coin);\n+            coins.emplace_back(std::move(coin));\n+        }\n+        return coins;\n+    }\n+    double guessVerificationProgress(const uint256& block_hash) override\n+    {\n+        LOCK(cs_main);\n+        auto it = ::mapBlockIndex.find(block_hash);\n+        return GuessVerificationProgress(Params().TxData(), it != ::mapBlockIndex.end() ? it->second : nullptr);\n+    }\n+    int64_t getVirtualTransactionSize(const CTransaction& tx) override { return GetVirtualTransactionSize(tx); }\n+    RBFTransactionState isRBFOptIn(const CTransaction& tx) override\n+    {\n+        LOCK(::mempool.cs);\n+        return IsRBFOptIn(tx, ::mempool);\n+    }\n+    bool hasDescendantsInMempool(const uint256& txid) override\n+    {\n+        LOCK(::mempool.cs);\n+        auto it_mp = ::mempool.mapTx.find(txid);\n+        return it_mp != ::mempool.mapTx.end() && it_mp->GetCountWithDescendants() > 1;\n+    }\n+    bool relayTransaction(const uint256& txid) override\n+    {\n+        if (g_connman) {\n+            CInv inv(MSG_TX, txid);\n+            g_connman->ForEachNode([&inv](CNode* node) { node->PushInventory(inv); });\n+            return true;\n+        }\n+        return false;\n+    }\n+    void getTransactionAncestry(const uint256& txid, size_t& ancestors, size_t& descendants) override\n+    {\n+        ::mempool.GetTransactionAncestry(txid, ancestors, descendants);\n+    }\n+    bool checkChainLimits(CTransactionRef tx) override\n+    {\n+        LockPoints lp;\n+        CTxMemPoolEntry entry(tx, 0, 0, 0, false, 0, lp);\n+        CTxMemPool::setEntries setAncestors;\n+        size_t nLimitAncestors = gArgs.GetArg(\"-limitancestorcount\", DEFAULT_ANCESTOR_LIMIT);\n+        size_t nLimitAncestorSize = gArgs.GetArg(\"-limitancestorsize\", DEFAULT_ANCESTOR_SIZE_LIMIT) * 1000;\n+        size_t nLimitDescendants = gArgs.GetArg(\"-limitdescendantcount\", DEFAULT_DESCENDANT_LIMIT);\n+        size_t nLimitDescendantSize = gArgs.GetArg(\"-limitdescendantsize\", DEFAULT_DESCENDANT_SIZE_LIMIT) * 1000;\n+        std::string errString;\n+        LOCK(::mempool.cs);\n+        if (!::mempool.CalculateMemPoolAncestors(entry, setAncestors, nLimitAncestors, nLimitAncestorSize,\n+                nLimitDescendants, nLimitDescendantSize, errString)) {\n+            return false;\n+        }\n+        return true;\n+    }\n+    CFeeRate estimateSmartFee(int num_blocks, bool conservative, FeeCalculation* calc) override\n+    {\n+        return ::feeEstimator.estimateSmartFee(num_blocks, calc, conservative);\n+    }\n+    int estimateMaxBlocks() override { return ::feeEstimator.HighestTargetTracked(FeeEstimateHorizon::LONG_HALFLIFE); }\n+    CFeeRate poolMinFee() override\n+    {\n+        return ::mempool.GetMinFee(gArgs.GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000);\n+    }\n+    bool getPruneMode() override { return ::fPruneMode; }\n+    bool p2pEnabled() override { return g_connman != nullptr; }\n+    bool isInitialBlockDownload() override { return IsInitialBlockDownload(); }\n+    int64_t getAdjustedTime() override { return GetAdjustedTime(); }\n+    void initMessage(const std::string& message) override { ::uiInterface.InitMessage(message); }\n+    void initWarning(const std::string& message) override { InitWarning(message); }\n+    void initError(const std::string& message) override { InitError(message); }\n+    void loadWallet(std::unique_ptr<Wallet> wallet) override { ::uiInterface.LoadWallet(wallet); }\n+    UniValue generateBlocks(std::shared_ptr<CReserveScript> coinbase_script,\n+        int num_blocks,\n+        uint64_t max_tries,\n+        bool keep_script) override\n+    {\n+        return ::generateBlocks(coinbase_script, num_blocks, max_tries, keep_script);\n+    }\n+    unsigned int parseConfirmTarget(const UniValue& value) override { return ParseConfirmTarget(value); }\n+    std::unique_ptr<Handler> handleNotifications(Notifications& notifications) override\n+    {\n+        return MakeUnique<HandlerImpl>(notifications);\n+    }\n+    void waitForNotifications() override { SyncWithValidationInterfaceQueue(); }\n+    std::unique_ptr<Handler> handleRpc(const CRPCCommand& command) override;\n+\n+    //! Map of RPC method name to forwarder. If multiple clients provide\n+    //! implementations of the same RPC method, the RPC forwarder can dispatch\n+    //! between them.\n+    class RpcForwarder;\n+    std::map<Ref<const std::string>, RpcForwarder> m_rpc_forwarders;\n+};\n+\n+//! Forwarder for one RPC method.\n+class ChainImpl::RpcForwarder\n+{\n+public:\n+    RpcForwarder(const CRPCCommand& command) : m_command(command)\n+    {\n+        m_command.actor = [this](const JSONRPCRequest& request) { return forwardRequest(request); };\n+    }\n+\n+    bool registerForwarder() { return ::tableRPC.appendCommand(m_command.name, &m_command); }\n+\n+    void addCommand(const CRPCCommand& command) { m_commands.emplace_back(&command); }\n+\n+    void removeCommand(const CRPCCommand& command)\n+    {\n+        m_commands.erase(std::remove(m_commands.begin(), m_commands.end(), &command));\n+    }\n+\n+    UniValue forwardRequest(const JSONRPCRequest& request) const\n+    {\n+        // Simple forwarding of RPC requests. This just sends the request to the\n+        // first client that registered a handler for the RPC method. If the\n+        // handler throws a wallet not found exception, this will retry\n+        // forwarding to the next handler (if any).\n+        //\n+        // This forwarding mechanism could be made more efficient (peeking\n+        // inside the RPC request for wallet name and sending it directly to the\n+        // right handler), but right now all wallets are in-process so there is\n+        // only ever a single handler, and in the future it isn't clear if we\n+        // will want we want to keep forwarding RPCs at all (clients could just\n+        // listen for their own RPCs).\n+        for (auto it = m_commands.begin(); it != m_commands.end();) {\n+            const CRPCCommand& command = **it++;\n+            try {\n+                return command.actor(request);\n+            } catch (const UniValue& e) {\n+                if (it != m_commands.end()) {\n+                    const UniValue& code = e[\"code\"];\n+                    if (code.isNum() && code.get_int() == RPC_WALLET_NOT_FOUND) {\n+                        continue;\n+                    }\n+                }\n+                throw;\n+            }\n+        }\n+\n+        // This will only be reached if m_commands is empty. (Because the RPC\n+        // server provides an appendCommand, but no removeCommand method, it\n+        // will keep sending requests here even if there are no clients left to\n+        // forward to.)\n+        throw JSONRPCError(RPC_METHOD_NOT_FOUND, \"Method not found\");\n+    };\n+\n+    CRPCCommand m_command;\n+    std::vector<const CRPCCommand*> m_commands;\n+};\n+\n+class RpcHandler : public Handler\n+{\n+public:\n+    RpcHandler(ChainImpl::RpcForwarder& forwarder, const CRPCCommand& command)\n+        : m_forwarder(&forwarder), m_command(command)\n+    {\n+        m_forwarder->addCommand(m_command);\n+    }\n+\n+    void disconnect() override\n+    {\n+        if (m_forwarder) {\n+            m_forwarder->removeCommand(m_command);\n+            m_forwarder = nullptr;\n+        }\n+    }\n+\n+    ~RpcHandler() { disconnect(); }",
      "path": "src/interfaces/chain.cpp",
      "position": null,
      "original_position": 432,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "e44e639558b1084f14a97847592616c3df9fff38",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```\r\n2018-09-19 14:39:06 clang-tidy(pr=10973): src/interfaces/chain.cpp:432:5: warning: annotate this function with 'override' or (rarely) 'final' [hicpp-use-override]\r\n```",
      "created_at": "2018-09-21T08:13:37Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r219416164",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219416164"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 432,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219416254",
      "pull_request_review_id": 157586382,
      "id": 219416254,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTQxNjI1NA==",
      "diff_hunk": "@@ -0,0 +1,453 @@\n+#include <interfaces/chain.h>\n+\n+#include <chain.h>\n+#include <chainparams.h>\n+#include <interfaces/handler.h>\n+#include <interfaces/wallet.h>\n+#include <net.h>\n+#include <policy/fees.h>\n+#include <policy/policy.h>\n+#include <policy/rbf.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <protocol.h>\n+#include <rpc/mining.h>\n+#include <rpc/protocol.h>\n+#include <rpc/server.h>\n+#include <sync.h>\n+#include <threadsafety.h>\n+#include <timedata.h>\n+#include <txmempool.h>\n+#include <ui_interface.h>\n+#include <uint256.h>\n+#include <univalue.h>\n+#include <util.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+\n+#include <algorithm>\n+#include <map>\n+#include <memory>\n+#include <tuple>\n+#include <unordered_map>\n+#include <utility>\n+\n+class CReserveScript;\n+\n+namespace interfaces {\n+namespace {\n+\n+//! Extension of std::reference_wrapper with operator< for use as map key.\n+template <typename T>\n+class Ref : public std::reference_wrapper<T>\n+{\n+public:\n+    using std::reference_wrapper<T>::reference_wrapper;\n+    bool operator<(const Ref<T>& other) const { return this->get() < other.get(); }\n+};\n+\n+class LockImpl : public Chain::Lock\n+{\n+    Optional<int> getHeight() override\n+    {\n+        int height = ::chainActive.Height();\n+        if (height >= 0) {\n+            return height;\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> getBlockHeight(const uint256& hash) override\n+    {\n+        auto it = ::mapBlockIndex.find(hash);\n+        if (it != ::mapBlockIndex.end() && it->second) {\n+            if (::chainActive.Contains(it->second)) {\n+                return it->second->nHeight;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    int getBlockDepth(const uint256& hash) override\n+    {\n+        const Optional<int> tip_height = getHeight();\n+        const Optional<int> height = getBlockHeight(hash);\n+        return tip_height && height ? *tip_height - *height + 1 : 0;\n+    }\n+    uint256 getBlockHash(int height) override { return ::chainActive[height]->GetBlockHash(); }\n+    int64_t getBlockTime(int height) override { return ::chainActive[height]->GetBlockTime(); }\n+    int64_t getBlockMedianTimePast(int height) override { return ::chainActive[height]->GetMedianTimePast(); }\n+    bool haveBlockOnDisk(int height) override\n+    {\n+        CBlockIndex* block = ::chainActive[height];\n+        return block && (block->nStatus & BLOCK_HAVE_DATA) && block->nTx > 0;\n+    }\n+    Optional<int> findFirstBlockWithTime(int64_t time) override\n+    {\n+        CBlockIndex* block = ::chainActive.FindEarliestAtLeast(time);\n+        if (block) {\n+            return block->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findFirstBlockWithTimeAndHeight(int64_t time, int height) override\n+    {\n+        for (CBlockIndex* block = ::chainActive[height]; block; block = ::chainActive.Next(block)) {\n+            if (block->GetBlockTime() >= time) {\n+                return block->nHeight;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findPruned(int start_height, Optional<int> stop_height) override\n+    {\n+        if (::fPruneMode) {\n+            CBlockIndex* block = stop_height ? ::chainActive[*stop_height] : ::chainActive.Tip();\n+            while (block && block->nHeight >= start_height) {\n+                if (!(block->nStatus & BLOCK_HAVE_DATA)) {\n+                    return block->nHeight;\n+                }\n+                block = block->pprev;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findFork(const uint256& hash, Optional<int>* height) override\n+    {\n+        const CBlockIndex *block{nullptr}, *fork{nullptr};\n+        auto it = ::mapBlockIndex.find(hash);\n+        if (it != ::mapBlockIndex.end()) {\n+            block = it->second;\n+            fork = ::chainActive.FindFork(block);\n+        }\n+        if (height) {\n+            if (block) {\n+                *height = block->nHeight;\n+            } else {\n+                height->reset();\n+            }\n+        }\n+        if (fork) {\n+            return fork->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    bool isPotentialTip(const uint256& hash) override\n+    {\n+        if (::chainActive.Tip()->GetBlockHash() == hash) return true;\n+        auto it = ::mapBlockIndex.find(hash);\n+        return it != ::mapBlockIndex.end() && it->second->GetAncestor(::chainActive.Height()) == ::chainActive.Tip();\n+    }\n+    CBlockLocator getLocator() override { return ::chainActive.GetLocator(); }\n+    Optional<int> findLocatorFork(const CBlockLocator& locator) override\n+    {\n+        if (CBlockIndex* fork = FindForkInGlobalIndex(::chainActive, locator)) {\n+            return fork->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    bool checkFinalTx(const CTransaction& tx) override\n+    {\n+        LockAnnotation lock(::cs_main);\n+        return CheckFinalTx(tx);\n+    }\n+    bool acceptToMemoryPool(CTransactionRef tx, CValidationState& state) override\n+    {\n+        LockAnnotation lock(::cs_main);\n+        return AcceptToMemoryPool(::mempool, state, tx, nullptr /* missing inputs */, nullptr /* txn replaced */,\n+            false /* bypass limits */, ::maxTxFee /* absurd fee */);\n+    }\n+};\n+\n+class LockingStateImpl : public LockImpl, public UniqueLock<CCriticalSection>\n+{\n+    using UniqueLock::UniqueLock;\n+};\n+\n+class HandlerImpl : public Handler\n+{\n+public:\n+    HandlerImpl(Chain::Notifications& notifications) : m_forwarder(notifications) {}\n+    ~HandlerImpl() override\n+    {\n+        // It is important to disconnect here in the HandlerImpl destructor,\n+        // instead of in the HandleImpl::Forwarder destructor, because\n+        // UnregisterAllValidationInterfaces() internally accesses Forwarder\n+        // virtual methods which are no longer available after Forwarder object\n+        // has begun to be being destroyed.\n+        m_forwarder.disconnect();\n+    }\n+    void disconnect() override { m_forwarder.disconnect(); }\n+\n+    struct Forwarder : CValidationInterface\n+    {\n+        Forwarder(Chain::Notifications& notifications) : m_notifications(&notifications)\n+        {\n+            RegisterValidationInterface(this);\n+        }\n+        void disconnect()\n+        {\n+            if (m_notifications) {\n+                m_notifications = nullptr;\n+                UnregisterValidationInterface(this);\n+            }\n+        }\n+        void TransactionAddedToMempool(const CTransactionRef& tx) override\n+        {\n+            m_notifications->TransactionAddedToMempool(tx);\n+        }\n+        void TransactionRemovedFromMempool(const CTransactionRef& tx) override\n+        {\n+            m_notifications->TransactionRemovedFromMempool(tx);\n+        }\n+        void BlockConnected(const std::shared_ptr<const CBlock>& block,\n+            const CBlockIndex* index,\n+            const std::vector<CTransactionRef>& tx_conflicted) override\n+        {\n+            m_notifications->BlockConnected(*block, index->GetBlockHash(), tx_conflicted);\n+        }\n+        void BlockDisconnected(const std::shared_ptr<const CBlock>& block) override\n+        {\n+            m_notifications->BlockDisconnected(*block);\n+        }\n+        void ChainStateFlushed(const CBlockLocator& locator) override { m_notifications->ChainStateFlushed(locator); }\n+        void ResendWalletTransactions(int64_t best_block_time, CConnman* connman) override\n+        {\n+            m_notifications->ResendWalletTransactions(best_block_time);\n+        }\n+\n+        Chain::Notifications* m_notifications;\n+    };\n+\n+    Forwarder m_forwarder;\n+};\n+\n+class ChainImpl : public Chain\n+{\n+public:\n+    std::unique_ptr<Chain::Lock> lock(bool try_lock) override\n+    {\n+        auto result = MakeUnique<LockingStateImpl>(::cs_main, \"cs_main\", __FILE__, __LINE__, try_lock);\n+        if (try_lock && result && !*result) return {};\n+        // std::move necessary on some compilers due to conversion from\n+        // LockingStateImpl to Lock pointer\n+        return std::move(result);\n+    }\n+    std::unique_ptr<Chain::Lock> assumeLocked() override { return MakeUnique<LockImpl>(); }\n+    bool findBlock(const uint256& hash, CBlock* block, int64_t* time, int64_t* time_max) override\n+    {\n+        CBlockIndex* index;\n+        {\n+            LOCK(cs_main);\n+            auto it = ::mapBlockIndex.find(hash);\n+            if (it == ::mapBlockIndex.end()) {\n+                return false;\n+            }\n+            index = it->second;\n+            if (time) {\n+                *time = index->GetBlockTime();\n+            }\n+            if (time_max) {\n+                *time_max = index->GetBlockTimeMax();\n+            }\n+        }\n+        if (block && !ReadBlockFromDisk(*block, index, Params().GetConsensus())) {\n+            block->SetNull();\n+        }\n+        return true;\n+    }\n+    std::vector<Coin> findCoins(const std::vector<COutPoint>& outputs) override\n+    {\n+        std::vector<Coin> coins;\n+        LOCK2(cs_main, ::mempool.cs);\n+        assert(pcoinsTip);\n+        CCoinsViewCache& chain_view = *::pcoinsTip;\n+        CCoinsViewMemPool mempool_view(&chain_view, ::mempool);\n+        for (const auto& output : outputs) {\n+            Coin coin;\n+            mempool_view.GetCoin(output, coin);\n+            coins.emplace_back(std::move(coin));\n+        }\n+        return coins;\n+    }\n+    double guessVerificationProgress(const uint256& block_hash) override\n+    {\n+        LOCK(cs_main);\n+        auto it = ::mapBlockIndex.find(block_hash);\n+        return GuessVerificationProgress(Params().TxData(), it != ::mapBlockIndex.end() ? it->second : nullptr);\n+    }\n+    int64_t getVirtualTransactionSize(const CTransaction& tx) override { return GetVirtualTransactionSize(tx); }\n+    RBFTransactionState isRBFOptIn(const CTransaction& tx) override\n+    {\n+        LOCK(::mempool.cs);\n+        return IsRBFOptIn(tx, ::mempool);\n+    }\n+    bool hasDescendantsInMempool(const uint256& txid) override\n+    {\n+        LOCK(::mempool.cs);\n+        auto it_mp = ::mempool.mapTx.find(txid);\n+        return it_mp != ::mempool.mapTx.end() && it_mp->GetCountWithDescendants() > 1;\n+    }\n+    bool relayTransaction(const uint256& txid) override\n+    {\n+        if (g_connman) {\n+            CInv inv(MSG_TX, txid);\n+            g_connman->ForEachNode([&inv](CNode* node) { node->PushInventory(inv); });\n+            return true;\n+        }\n+        return false;\n+    }\n+    void getTransactionAncestry(const uint256& txid, size_t& ancestors, size_t& descendants) override\n+    {\n+        ::mempool.GetTransactionAncestry(txid, ancestors, descendants);\n+    }\n+    bool checkChainLimits(CTransactionRef tx) override\n+    {\n+        LockPoints lp;\n+        CTxMemPoolEntry entry(tx, 0, 0, 0, false, 0, lp);\n+        CTxMemPool::setEntries setAncestors;\n+        size_t nLimitAncestors = gArgs.GetArg(\"-limitancestorcount\", DEFAULT_ANCESTOR_LIMIT);\n+        size_t nLimitAncestorSize = gArgs.GetArg(\"-limitancestorsize\", DEFAULT_ANCESTOR_SIZE_LIMIT) * 1000;\n+        size_t nLimitDescendants = gArgs.GetArg(\"-limitdescendantcount\", DEFAULT_DESCENDANT_LIMIT);\n+        size_t nLimitDescendantSize = gArgs.GetArg(\"-limitdescendantsize\", DEFAULT_DESCENDANT_SIZE_LIMIT) * 1000;\n+        std::string errString;\n+        LOCK(::mempool.cs);\n+        if (!::mempool.CalculateMemPoolAncestors(entry, setAncestors, nLimitAncestors, nLimitAncestorSize,\n+                nLimitDescendants, nLimitDescendantSize, errString)) {\n+            return false;\n+        }\n+        return true;\n+    }\n+    CFeeRate estimateSmartFee(int num_blocks, bool conservative, FeeCalculation* calc) override\n+    {\n+        return ::feeEstimator.estimateSmartFee(num_blocks, calc, conservative);\n+    }\n+    int estimateMaxBlocks() override { return ::feeEstimator.HighestTargetTracked(FeeEstimateHorizon::LONG_HALFLIFE); }\n+    CFeeRate poolMinFee() override\n+    {\n+        return ::mempool.GetMinFee(gArgs.GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000);\n+    }\n+    bool getPruneMode() override { return ::fPruneMode; }\n+    bool p2pEnabled() override { return g_connman != nullptr; }\n+    bool isInitialBlockDownload() override { return IsInitialBlockDownload(); }\n+    int64_t getAdjustedTime() override { return GetAdjustedTime(); }\n+    void initMessage(const std::string& message) override { ::uiInterface.InitMessage(message); }\n+    void initWarning(const std::string& message) override { InitWarning(message); }\n+    void initError(const std::string& message) override { InitError(message); }\n+    void loadWallet(std::unique_ptr<Wallet> wallet) override { ::uiInterface.LoadWallet(wallet); }\n+    UniValue generateBlocks(std::shared_ptr<CReserveScript> coinbase_script,\n+        int num_blocks,\n+        uint64_t max_tries,\n+        bool keep_script) override\n+    {\n+        return ::generateBlocks(coinbase_script, num_blocks, max_tries, keep_script);\n+    }\n+    unsigned int parseConfirmTarget(const UniValue& value) override { return ParseConfirmTarget(value); }\n+    std::unique_ptr<Handler> handleNotifications(Notifications& notifications) override\n+    {\n+        return MakeUnique<HandlerImpl>(notifications);\n+    }\n+    void waitForNotifications() override { SyncWithValidationInterfaceQueue(); }\n+    std::unique_ptr<Handler> handleRpc(const CRPCCommand& command) override;\n+\n+    //! Map of RPC method name to forwarder. If multiple clients provide\n+    //! implementations of the same RPC method, the RPC forwarder can dispatch\n+    //! between them.\n+    class RpcForwarder;\n+    std::map<Ref<const std::string>, RpcForwarder> m_rpc_forwarders;\n+};\n+\n+//! Forwarder for one RPC method.\n+class ChainImpl::RpcForwarder\n+{\n+public:\n+    RpcForwarder(const CRPCCommand& command) : m_command(command)\n+    {\n+        m_command.actor = [this](const JSONRPCRequest& request) { return forwardRequest(request); };\n+    }\n+\n+    bool registerForwarder() { return ::tableRPC.appendCommand(m_command.name, &m_command); }\n+\n+    void addCommand(const CRPCCommand& command) { m_commands.emplace_back(&command); }\n+\n+    void removeCommand(const CRPCCommand& command)\n+    {\n+        m_commands.erase(std::remove(m_commands.begin(), m_commands.end(), &command));\n+    }\n+\n+    UniValue forwardRequest(const JSONRPCRequest& request) const\n+    {\n+        // Simple forwarding of RPC requests. This just sends the request to the\n+        // first client that registered a handler for the RPC method. If the\n+        // handler throws a wallet not found exception, this will retry\n+        // forwarding to the next handler (if any).\n+        //\n+        // This forwarding mechanism could be made more efficient (peeking\n+        // inside the RPC request for wallet name and sending it directly to the\n+        // right handler), but right now all wallets are in-process so there is\n+        // only ever a single handler, and in the future it isn't clear if we\n+        // will want we want to keep forwarding RPCs at all (clients could just\n+        // listen for their own RPCs).\n+        for (auto it = m_commands.begin(); it != m_commands.end();) {\n+            const CRPCCommand& command = **it++;\n+            try {\n+                return command.actor(request);\n+            } catch (const UniValue& e) {\n+                if (it != m_commands.end()) {\n+                    const UniValue& code = e[\"code\"];\n+                    if (code.isNum() && code.get_int() == RPC_WALLET_NOT_FOUND) {\n+                        continue;\n+                    }\n+                }\n+                throw;\n+            }\n+        }\n+\n+        // This will only be reached if m_commands is empty. (Because the RPC\n+        // server provides an appendCommand, but no removeCommand method, it\n+        // will keep sending requests here even if there are no clients left to\n+        // forward to.)\n+        throw JSONRPCError(RPC_METHOD_NOT_FOUND, \"Method not found\");\n+    };\n+\n+    CRPCCommand m_command;\n+    std::vector<const CRPCCommand*> m_commands;\n+};\n+\n+class RpcHandler : public Handler\n+{\n+public:\n+    RpcHandler(ChainImpl::RpcForwarder& forwarder, const CRPCCommand& command)\n+        : m_forwarder(&forwarder), m_command(command)\n+    {\n+        m_forwarder->addCommand(m_command);\n+    }\n+\n+    void disconnect() override\n+    {\n+        if (m_forwarder) {\n+            m_forwarder->removeCommand(m_command);\n+            m_forwarder = nullptr;\n+        }\n+    }\n+\n+    ~RpcHandler() { disconnect(); }",
      "path": "src/interfaces/chain.cpp",
      "position": null,
      "original_position": 432,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "e44e639558b1084f14a97847592616c3df9fff38",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```\r\n2018-09-19 14:39:06 clang-tidy(pr=10973): src/interfaces/chain.cpp:432:21: warning: Call to virtual function during destruction [clang-analyzer-optin.cplusplus.VirtualCall]\r\n```",
      "created_at": "2018-09-21T08:14:02Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r219416254",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219416254"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 432,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219416534",
      "pull_request_review_id": 157586754,
      "id": 219416534,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTQxNjUzNA==",
      "diff_hunk": "@@ -945,19 +947,19 @@ void CWallet::LoadToWallet(const CWalletTx& wtxIn)\n     }\n }\n \n-bool CWallet::AddToWalletIfInvolvingMe(const CTransactionRef& ptx, const CBlockIndex* pIndex, int posInBlock, bool fUpdate)\n+bool CWallet::AddToWalletIfInvolvingMe(interfaces::Chain::Lock& locked_chain, const CTransactionRef& ptx, const uint256& block_hash, int posInBlock, bool fUpdate)",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 41,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "e44e639558b1084f14a97847592616c3df9fff38",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```\r\n2018-09-19 14:39:06 clang-tidy(pr=10973): src/wallet/wallet.cpp:950:65: warning: parameter 'locked_chain' is unused [misc-unused-parameters]\r\n```",
      "created_at": "2018-09-21T08:15:15Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r219416534",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219416534"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 950,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219420130",
      "pull_request_review_id": 157591392,
      "id": 219420130,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTQyMDEzMA==",
      "diff_hunk": "@@ -54,4 +54,15 @@\n #define ASSERT_EXCLUSIVE_LOCK(...)\n #endif // __GNUC__\n \n+// Utility class to indicate mutex is locked for thread analysis when it can't\n+// be determined otherwise.\n+struct SCOPED_LOCKABLE LockAnnotation\n+{\n+    template <typename Mutex>\n+    LockAnnotation(Mutex& mutex) EXCLUSIVE_LOCK_FUNCTION(mutex)",
      "path": "src/threadsafety.h",
      "position": null,
      "original_position": 9,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "e44e639558b1084f14a97847592616c3df9fff38",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```\r\n2018-09-20 04:12:32 cppcheck(pr=10973): [src/threadsafety.h:62]: (style) Struct 'LockAnnotation' has a constructor with 1 argument that is not explicit.\r\n```",
      "created_at": "2018-09-21T08:29:41Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r219420130",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219420130"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 62,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219420288",
      "pull_request_review_id": 157591599,
      "id": 219420288,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTQyMDI4OA==",
      "diff_hunk": "@@ -0,0 +1,453 @@\n+#include <interfaces/chain.h>\n+\n+#include <chain.h>\n+#include <chainparams.h>\n+#include <interfaces/handler.h>\n+#include <interfaces/wallet.h>\n+#include <net.h>\n+#include <policy/fees.h>\n+#include <policy/policy.h>\n+#include <policy/rbf.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <protocol.h>\n+#include <rpc/mining.h>\n+#include <rpc/protocol.h>\n+#include <rpc/server.h>\n+#include <sync.h>\n+#include <threadsafety.h>\n+#include <timedata.h>\n+#include <txmempool.h>\n+#include <ui_interface.h>\n+#include <uint256.h>\n+#include <univalue.h>\n+#include <util.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+\n+#include <algorithm>\n+#include <map>\n+#include <memory>\n+#include <tuple>\n+#include <unordered_map>\n+#include <utility>\n+\n+class CReserveScript;\n+\n+namespace interfaces {\n+namespace {\n+\n+//! Extension of std::reference_wrapper with operator< for use as map key.\n+template <typename T>\n+class Ref : public std::reference_wrapper<T>\n+{\n+public:\n+    using std::reference_wrapper<T>::reference_wrapper;\n+    bool operator<(const Ref<T>& other) const { return this->get() < other.get(); }\n+};\n+\n+class LockImpl : public Chain::Lock\n+{\n+    Optional<int> getHeight() override\n+    {\n+        int height = ::chainActive.Height();\n+        if (height >= 0) {\n+            return height;\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> getBlockHeight(const uint256& hash) override\n+    {\n+        auto it = ::mapBlockIndex.find(hash);\n+        if (it != ::mapBlockIndex.end() && it->second) {\n+            if (::chainActive.Contains(it->second)) {\n+                return it->second->nHeight;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    int getBlockDepth(const uint256& hash) override\n+    {\n+        const Optional<int> tip_height = getHeight();\n+        const Optional<int> height = getBlockHeight(hash);\n+        return tip_height && height ? *tip_height - *height + 1 : 0;\n+    }\n+    uint256 getBlockHash(int height) override { return ::chainActive[height]->GetBlockHash(); }\n+    int64_t getBlockTime(int height) override { return ::chainActive[height]->GetBlockTime(); }\n+    int64_t getBlockMedianTimePast(int height) override { return ::chainActive[height]->GetMedianTimePast(); }\n+    bool haveBlockOnDisk(int height) override\n+    {\n+        CBlockIndex* block = ::chainActive[height];\n+        return block && (block->nStatus & BLOCK_HAVE_DATA) && block->nTx > 0;\n+    }\n+    Optional<int> findFirstBlockWithTime(int64_t time) override\n+    {\n+        CBlockIndex* block = ::chainActive.FindEarliestAtLeast(time);\n+        if (block) {\n+            return block->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findFirstBlockWithTimeAndHeight(int64_t time, int height) override\n+    {\n+        for (CBlockIndex* block = ::chainActive[height]; block; block = ::chainActive.Next(block)) {\n+            if (block->GetBlockTime() >= time) {\n+                return block->nHeight;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findPruned(int start_height, Optional<int> stop_height) override\n+    {\n+        if (::fPruneMode) {\n+            CBlockIndex* block = stop_height ? ::chainActive[*stop_height] : ::chainActive.Tip();\n+            while (block && block->nHeight >= start_height) {\n+                if (!(block->nStatus & BLOCK_HAVE_DATA)) {\n+                    return block->nHeight;\n+                }\n+                block = block->pprev;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findFork(const uint256& hash, Optional<int>* height) override\n+    {\n+        const CBlockIndex *block{nullptr}, *fork{nullptr};\n+        auto it = ::mapBlockIndex.find(hash);\n+        if (it != ::mapBlockIndex.end()) {\n+            block = it->second;\n+            fork = ::chainActive.FindFork(block);\n+        }\n+        if (height) {\n+            if (block) {\n+                *height = block->nHeight;\n+            } else {\n+                height->reset();\n+            }\n+        }\n+        if (fork) {\n+            return fork->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    bool isPotentialTip(const uint256& hash) override\n+    {\n+        if (::chainActive.Tip()->GetBlockHash() == hash) return true;\n+        auto it = ::mapBlockIndex.find(hash);\n+        return it != ::mapBlockIndex.end() && it->second->GetAncestor(::chainActive.Height()) == ::chainActive.Tip();\n+    }\n+    CBlockLocator getLocator() override { return ::chainActive.GetLocator(); }\n+    Optional<int> findLocatorFork(const CBlockLocator& locator) override\n+    {\n+        if (CBlockIndex* fork = FindForkInGlobalIndex(::chainActive, locator)) {\n+            return fork->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    bool checkFinalTx(const CTransaction& tx) override\n+    {\n+        LockAnnotation lock(::cs_main);\n+        return CheckFinalTx(tx);\n+    }\n+    bool acceptToMemoryPool(CTransactionRef tx, CValidationState& state) override\n+    {\n+        LockAnnotation lock(::cs_main);\n+        return AcceptToMemoryPool(::mempool, state, tx, nullptr /* missing inputs */, nullptr /* txn replaced */,\n+            false /* bypass limits */, ::maxTxFee /* absurd fee */);\n+    }\n+};\n+\n+class LockingStateImpl : public LockImpl, public UniqueLock<CCriticalSection>\n+{\n+    using UniqueLock::UniqueLock;\n+};\n+\n+class HandlerImpl : public Handler\n+{\n+public:\n+    HandlerImpl(Chain::Notifications& notifications) : m_forwarder(notifications) {}",
      "path": "src/interfaces/chain.cpp",
      "position": null,
      "original_position": 168,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "e44e639558b1084f14a97847592616c3df9fff38",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```\r\n2018-09-20 04:12:32 cppcheck(pr=10973): [src/interfaces/chain.cpp:168]: (style) Class 'HandlerImpl' has a constructor with 1 argument that is not explicit.\r\n```",
      "created_at": "2018-09-21T08:30:14Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r219420288",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219420288"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 168,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219420364",
      "pull_request_review_id": 157591688,
      "id": 219420364,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTQyMDM2NA==",
      "diff_hunk": "@@ -0,0 +1,453 @@\n+#include <interfaces/chain.h>\n+\n+#include <chain.h>\n+#include <chainparams.h>\n+#include <interfaces/handler.h>\n+#include <interfaces/wallet.h>\n+#include <net.h>\n+#include <policy/fees.h>\n+#include <policy/policy.h>\n+#include <policy/rbf.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <protocol.h>\n+#include <rpc/mining.h>\n+#include <rpc/protocol.h>\n+#include <rpc/server.h>\n+#include <sync.h>\n+#include <threadsafety.h>\n+#include <timedata.h>\n+#include <txmempool.h>\n+#include <ui_interface.h>\n+#include <uint256.h>\n+#include <univalue.h>\n+#include <util.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+\n+#include <algorithm>\n+#include <map>\n+#include <memory>\n+#include <tuple>\n+#include <unordered_map>\n+#include <utility>\n+\n+class CReserveScript;\n+\n+namespace interfaces {\n+namespace {\n+\n+//! Extension of std::reference_wrapper with operator< for use as map key.\n+template <typename T>\n+class Ref : public std::reference_wrapper<T>\n+{\n+public:\n+    using std::reference_wrapper<T>::reference_wrapper;\n+    bool operator<(const Ref<T>& other) const { return this->get() < other.get(); }\n+};\n+\n+class LockImpl : public Chain::Lock\n+{\n+    Optional<int> getHeight() override\n+    {\n+        int height = ::chainActive.Height();\n+        if (height >= 0) {\n+            return height;\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> getBlockHeight(const uint256& hash) override\n+    {\n+        auto it = ::mapBlockIndex.find(hash);\n+        if (it != ::mapBlockIndex.end() && it->second) {\n+            if (::chainActive.Contains(it->second)) {\n+                return it->second->nHeight;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    int getBlockDepth(const uint256& hash) override\n+    {\n+        const Optional<int> tip_height = getHeight();\n+        const Optional<int> height = getBlockHeight(hash);\n+        return tip_height && height ? *tip_height - *height + 1 : 0;\n+    }\n+    uint256 getBlockHash(int height) override { return ::chainActive[height]->GetBlockHash(); }\n+    int64_t getBlockTime(int height) override { return ::chainActive[height]->GetBlockTime(); }\n+    int64_t getBlockMedianTimePast(int height) override { return ::chainActive[height]->GetMedianTimePast(); }\n+    bool haveBlockOnDisk(int height) override\n+    {\n+        CBlockIndex* block = ::chainActive[height];\n+        return block && (block->nStatus & BLOCK_HAVE_DATA) && block->nTx > 0;\n+    }\n+    Optional<int> findFirstBlockWithTime(int64_t time) override\n+    {\n+        CBlockIndex* block = ::chainActive.FindEarliestAtLeast(time);\n+        if (block) {\n+            return block->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findFirstBlockWithTimeAndHeight(int64_t time, int height) override\n+    {\n+        for (CBlockIndex* block = ::chainActive[height]; block; block = ::chainActive.Next(block)) {\n+            if (block->GetBlockTime() >= time) {\n+                return block->nHeight;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findPruned(int start_height, Optional<int> stop_height) override\n+    {\n+        if (::fPruneMode) {\n+            CBlockIndex* block = stop_height ? ::chainActive[*stop_height] : ::chainActive.Tip();\n+            while (block && block->nHeight >= start_height) {\n+                if (!(block->nStatus & BLOCK_HAVE_DATA)) {\n+                    return block->nHeight;\n+                }\n+                block = block->pprev;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findFork(const uint256& hash, Optional<int>* height) override\n+    {\n+        const CBlockIndex *block{nullptr}, *fork{nullptr};\n+        auto it = ::mapBlockIndex.find(hash);\n+        if (it != ::mapBlockIndex.end()) {\n+            block = it->second;\n+            fork = ::chainActive.FindFork(block);\n+        }\n+        if (height) {\n+            if (block) {\n+                *height = block->nHeight;\n+            } else {\n+                height->reset();\n+            }\n+        }\n+        if (fork) {\n+            return fork->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    bool isPotentialTip(const uint256& hash) override\n+    {\n+        if (::chainActive.Tip()->GetBlockHash() == hash) return true;\n+        auto it = ::mapBlockIndex.find(hash);\n+        return it != ::mapBlockIndex.end() && it->second->GetAncestor(::chainActive.Height()) == ::chainActive.Tip();\n+    }\n+    CBlockLocator getLocator() override { return ::chainActive.GetLocator(); }\n+    Optional<int> findLocatorFork(const CBlockLocator& locator) override\n+    {\n+        if (CBlockIndex* fork = FindForkInGlobalIndex(::chainActive, locator)) {\n+            return fork->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    bool checkFinalTx(const CTransaction& tx) override\n+    {\n+        LockAnnotation lock(::cs_main);\n+        return CheckFinalTx(tx);\n+    }\n+    bool acceptToMemoryPool(CTransactionRef tx, CValidationState& state) override\n+    {\n+        LockAnnotation lock(::cs_main);\n+        return AcceptToMemoryPool(::mempool, state, tx, nullptr /* missing inputs */, nullptr /* txn replaced */,\n+            false /* bypass limits */, ::maxTxFee /* absurd fee */);\n+    }\n+};\n+\n+class LockingStateImpl : public LockImpl, public UniqueLock<CCriticalSection>\n+{\n+    using UniqueLock::UniqueLock;\n+};\n+\n+class HandlerImpl : public Handler\n+{\n+public:\n+    HandlerImpl(Chain::Notifications& notifications) : m_forwarder(notifications) {}\n+    ~HandlerImpl() override\n+    {\n+        // It is important to disconnect here in the HandlerImpl destructor,\n+        // instead of in the HandleImpl::Forwarder destructor, because\n+        // UnregisterAllValidationInterfaces() internally accesses Forwarder\n+        // virtual methods which are no longer available after Forwarder object\n+        // has begun to be being destroyed.\n+        m_forwarder.disconnect();\n+    }\n+    void disconnect() override { m_forwarder.disconnect(); }\n+\n+    struct Forwarder : CValidationInterface\n+    {\n+        Forwarder(Chain::Notifications& notifications) : m_notifications(&notifications)",
      "path": "src/interfaces/chain.cpp",
      "position": null,
      "original_position": 182,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "e44e639558b1084f14a97847592616c3df9fff38",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```\r\n2018-09-20 04:12:32 cppcheck(pr=10973): [src/interfaces/chain.cpp:182]: (style) Struct 'Forwarder' has a constructor with 1 argument that is not explicit.\r\n```",
      "created_at": "2018-09-21T08:30:27Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r219420364",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219420364"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 182,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219420448",
      "pull_request_review_id": 157591801,
      "id": 219420448,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTQyMDQ0OA==",
      "diff_hunk": "@@ -0,0 +1,453 @@\n+#include <interfaces/chain.h>\n+\n+#include <chain.h>\n+#include <chainparams.h>\n+#include <interfaces/handler.h>\n+#include <interfaces/wallet.h>\n+#include <net.h>\n+#include <policy/fees.h>\n+#include <policy/policy.h>\n+#include <policy/rbf.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <protocol.h>\n+#include <rpc/mining.h>\n+#include <rpc/protocol.h>\n+#include <rpc/server.h>\n+#include <sync.h>\n+#include <threadsafety.h>\n+#include <timedata.h>\n+#include <txmempool.h>\n+#include <ui_interface.h>\n+#include <uint256.h>\n+#include <univalue.h>\n+#include <util.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+\n+#include <algorithm>\n+#include <map>\n+#include <memory>\n+#include <tuple>\n+#include <unordered_map>\n+#include <utility>\n+\n+class CReserveScript;\n+\n+namespace interfaces {\n+namespace {\n+\n+//! Extension of std::reference_wrapper with operator< for use as map key.\n+template <typename T>\n+class Ref : public std::reference_wrapper<T>\n+{\n+public:\n+    using std::reference_wrapper<T>::reference_wrapper;\n+    bool operator<(const Ref<T>& other) const { return this->get() < other.get(); }\n+};\n+\n+class LockImpl : public Chain::Lock\n+{\n+    Optional<int> getHeight() override\n+    {\n+        int height = ::chainActive.Height();\n+        if (height >= 0) {\n+            return height;\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> getBlockHeight(const uint256& hash) override\n+    {\n+        auto it = ::mapBlockIndex.find(hash);\n+        if (it != ::mapBlockIndex.end() && it->second) {\n+            if (::chainActive.Contains(it->second)) {\n+                return it->second->nHeight;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    int getBlockDepth(const uint256& hash) override\n+    {\n+        const Optional<int> tip_height = getHeight();\n+        const Optional<int> height = getBlockHeight(hash);\n+        return tip_height && height ? *tip_height - *height + 1 : 0;\n+    }\n+    uint256 getBlockHash(int height) override { return ::chainActive[height]->GetBlockHash(); }\n+    int64_t getBlockTime(int height) override { return ::chainActive[height]->GetBlockTime(); }\n+    int64_t getBlockMedianTimePast(int height) override { return ::chainActive[height]->GetMedianTimePast(); }\n+    bool haveBlockOnDisk(int height) override\n+    {\n+        CBlockIndex* block = ::chainActive[height];\n+        return block && (block->nStatus & BLOCK_HAVE_DATA) && block->nTx > 0;\n+    }\n+    Optional<int> findFirstBlockWithTime(int64_t time) override\n+    {\n+        CBlockIndex* block = ::chainActive.FindEarliestAtLeast(time);\n+        if (block) {\n+            return block->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findFirstBlockWithTimeAndHeight(int64_t time, int height) override\n+    {\n+        for (CBlockIndex* block = ::chainActive[height]; block; block = ::chainActive.Next(block)) {\n+            if (block->GetBlockTime() >= time) {\n+                return block->nHeight;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findPruned(int start_height, Optional<int> stop_height) override\n+    {\n+        if (::fPruneMode) {\n+            CBlockIndex* block = stop_height ? ::chainActive[*stop_height] : ::chainActive.Tip();\n+            while (block && block->nHeight >= start_height) {\n+                if (!(block->nStatus & BLOCK_HAVE_DATA)) {\n+                    return block->nHeight;\n+                }\n+                block = block->pprev;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findFork(const uint256& hash, Optional<int>* height) override\n+    {\n+        const CBlockIndex *block{nullptr}, *fork{nullptr};\n+        auto it = ::mapBlockIndex.find(hash);\n+        if (it != ::mapBlockIndex.end()) {\n+            block = it->second;\n+            fork = ::chainActive.FindFork(block);\n+        }\n+        if (height) {\n+            if (block) {\n+                *height = block->nHeight;\n+            } else {\n+                height->reset();\n+            }\n+        }\n+        if (fork) {\n+            return fork->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    bool isPotentialTip(const uint256& hash) override\n+    {\n+        if (::chainActive.Tip()->GetBlockHash() == hash) return true;\n+        auto it = ::mapBlockIndex.find(hash);\n+        return it != ::mapBlockIndex.end() && it->second->GetAncestor(::chainActive.Height()) == ::chainActive.Tip();\n+    }\n+    CBlockLocator getLocator() override { return ::chainActive.GetLocator(); }\n+    Optional<int> findLocatorFork(const CBlockLocator& locator) override\n+    {\n+        if (CBlockIndex* fork = FindForkInGlobalIndex(::chainActive, locator)) {\n+            return fork->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    bool checkFinalTx(const CTransaction& tx) override\n+    {\n+        LockAnnotation lock(::cs_main);\n+        return CheckFinalTx(tx);\n+    }\n+    bool acceptToMemoryPool(CTransactionRef tx, CValidationState& state) override\n+    {\n+        LockAnnotation lock(::cs_main);\n+        return AcceptToMemoryPool(::mempool, state, tx, nullptr /* missing inputs */, nullptr /* txn replaced */,\n+            false /* bypass limits */, ::maxTxFee /* absurd fee */);\n+    }\n+};\n+\n+class LockingStateImpl : public LockImpl, public UniqueLock<CCriticalSection>\n+{\n+    using UniqueLock::UniqueLock;\n+};\n+\n+class HandlerImpl : public Handler\n+{\n+public:\n+    HandlerImpl(Chain::Notifications& notifications) : m_forwarder(notifications) {}\n+    ~HandlerImpl() override\n+    {\n+        // It is important to disconnect here in the HandlerImpl destructor,\n+        // instead of in the HandleImpl::Forwarder destructor, because\n+        // UnregisterAllValidationInterfaces() internally accesses Forwarder\n+        // virtual methods which are no longer available after Forwarder object\n+        // has begun to be being destroyed.\n+        m_forwarder.disconnect();\n+    }\n+    void disconnect() override { m_forwarder.disconnect(); }\n+\n+    struct Forwarder : CValidationInterface\n+    {\n+        Forwarder(Chain::Notifications& notifications) : m_notifications(&notifications)\n+        {\n+            RegisterValidationInterface(this);\n+        }\n+        void disconnect()\n+        {\n+            if (m_notifications) {\n+                m_notifications = nullptr;\n+                UnregisterValidationInterface(this);\n+            }\n+        }\n+        void TransactionAddedToMempool(const CTransactionRef& tx) override\n+        {\n+            m_notifications->TransactionAddedToMempool(tx);\n+        }\n+        void TransactionRemovedFromMempool(const CTransactionRef& tx) override\n+        {\n+            m_notifications->TransactionRemovedFromMempool(tx);\n+        }\n+        void BlockConnected(const std::shared_ptr<const CBlock>& block,\n+            const CBlockIndex* index,\n+            const std::vector<CTransactionRef>& tx_conflicted) override\n+        {\n+            m_notifications->BlockConnected(*block, index->GetBlockHash(), tx_conflicted);\n+        }\n+        void BlockDisconnected(const std::shared_ptr<const CBlock>& block) override\n+        {\n+            m_notifications->BlockDisconnected(*block);\n+        }\n+        void ChainStateFlushed(const CBlockLocator& locator) override { m_notifications->ChainStateFlushed(locator); }\n+        void ResendWalletTransactions(int64_t best_block_time, CConnman* connman) override\n+        {\n+            m_notifications->ResendWalletTransactions(best_block_time);\n+        }\n+\n+        Chain::Notifications* m_notifications;\n+    };\n+\n+    Forwarder m_forwarder;\n+};\n+\n+class ChainImpl : public Chain\n+{\n+public:\n+    std::unique_ptr<Chain::Lock> lock(bool try_lock) override\n+    {\n+        auto result = MakeUnique<LockingStateImpl>(::cs_main, \"cs_main\", __FILE__, __LINE__, try_lock);\n+        if (try_lock && result && !*result) return {};\n+        // std::move necessary on some compilers due to conversion from\n+        // LockingStateImpl to Lock pointer\n+        return std::move(result);\n+    }\n+    std::unique_ptr<Chain::Lock> assumeLocked() override { return MakeUnique<LockImpl>(); }\n+    bool findBlock(const uint256& hash, CBlock* block, int64_t* time, int64_t* time_max) override\n+    {\n+        CBlockIndex* index;\n+        {\n+            LOCK(cs_main);\n+            auto it = ::mapBlockIndex.find(hash);\n+            if (it == ::mapBlockIndex.end()) {\n+                return false;\n+            }\n+            index = it->second;\n+            if (time) {\n+                *time = index->GetBlockTime();\n+            }\n+            if (time_max) {\n+                *time_max = index->GetBlockTimeMax();\n+            }\n+        }\n+        if (block && !ReadBlockFromDisk(*block, index, Params().GetConsensus())) {\n+            block->SetNull();\n+        }\n+        return true;\n+    }\n+    std::vector<Coin> findCoins(const std::vector<COutPoint>& outputs) override\n+    {\n+        std::vector<Coin> coins;\n+        LOCK2(cs_main, ::mempool.cs);\n+        assert(pcoinsTip);\n+        CCoinsViewCache& chain_view = *::pcoinsTip;\n+        CCoinsViewMemPool mempool_view(&chain_view, ::mempool);\n+        for (const auto& output : outputs) {\n+            Coin coin;\n+            mempool_view.GetCoin(output, coin);\n+            coins.emplace_back(std::move(coin));\n+        }\n+        return coins;\n+    }\n+    double guessVerificationProgress(const uint256& block_hash) override\n+    {\n+        LOCK(cs_main);\n+        auto it = ::mapBlockIndex.find(block_hash);\n+        return GuessVerificationProgress(Params().TxData(), it != ::mapBlockIndex.end() ? it->second : nullptr);\n+    }\n+    int64_t getVirtualTransactionSize(const CTransaction& tx) override { return GetVirtualTransactionSize(tx); }\n+    RBFTransactionState isRBFOptIn(const CTransaction& tx) override\n+    {\n+        LOCK(::mempool.cs);\n+        return IsRBFOptIn(tx, ::mempool);\n+    }\n+    bool hasDescendantsInMempool(const uint256& txid) override\n+    {\n+        LOCK(::mempool.cs);\n+        auto it_mp = ::mempool.mapTx.find(txid);\n+        return it_mp != ::mempool.mapTx.end() && it_mp->GetCountWithDescendants() > 1;\n+    }\n+    bool relayTransaction(const uint256& txid) override\n+    {\n+        if (g_connman) {\n+            CInv inv(MSG_TX, txid);\n+            g_connman->ForEachNode([&inv](CNode* node) { node->PushInventory(inv); });\n+            return true;\n+        }\n+        return false;\n+    }\n+    void getTransactionAncestry(const uint256& txid, size_t& ancestors, size_t& descendants) override\n+    {\n+        ::mempool.GetTransactionAncestry(txid, ancestors, descendants);\n+    }\n+    bool checkChainLimits(CTransactionRef tx) override\n+    {\n+        LockPoints lp;\n+        CTxMemPoolEntry entry(tx, 0, 0, 0, false, 0, lp);\n+        CTxMemPool::setEntries setAncestors;\n+        size_t nLimitAncestors = gArgs.GetArg(\"-limitancestorcount\", DEFAULT_ANCESTOR_LIMIT);\n+        size_t nLimitAncestorSize = gArgs.GetArg(\"-limitancestorsize\", DEFAULT_ANCESTOR_SIZE_LIMIT) * 1000;\n+        size_t nLimitDescendants = gArgs.GetArg(\"-limitdescendantcount\", DEFAULT_DESCENDANT_LIMIT);\n+        size_t nLimitDescendantSize = gArgs.GetArg(\"-limitdescendantsize\", DEFAULT_DESCENDANT_SIZE_LIMIT) * 1000;\n+        std::string errString;\n+        LOCK(::mempool.cs);\n+        if (!::mempool.CalculateMemPoolAncestors(entry, setAncestors, nLimitAncestors, nLimitAncestorSize,\n+                nLimitDescendants, nLimitDescendantSize, errString)) {\n+            return false;\n+        }\n+        return true;\n+    }\n+    CFeeRate estimateSmartFee(int num_blocks, bool conservative, FeeCalculation* calc) override\n+    {\n+        return ::feeEstimator.estimateSmartFee(num_blocks, calc, conservative);\n+    }\n+    int estimateMaxBlocks() override { return ::feeEstimator.HighestTargetTracked(FeeEstimateHorizon::LONG_HALFLIFE); }\n+    CFeeRate poolMinFee() override\n+    {\n+        return ::mempool.GetMinFee(gArgs.GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000);\n+    }\n+    bool getPruneMode() override { return ::fPruneMode; }\n+    bool p2pEnabled() override { return g_connman != nullptr; }\n+    bool isInitialBlockDownload() override { return IsInitialBlockDownload(); }\n+    int64_t getAdjustedTime() override { return GetAdjustedTime(); }\n+    void initMessage(const std::string& message) override { ::uiInterface.InitMessage(message); }\n+    void initWarning(const std::string& message) override { InitWarning(message); }\n+    void initError(const std::string& message) override { InitError(message); }\n+    void loadWallet(std::unique_ptr<Wallet> wallet) override { ::uiInterface.LoadWallet(wallet); }\n+    UniValue generateBlocks(std::shared_ptr<CReserveScript> coinbase_script,\n+        int num_blocks,\n+        uint64_t max_tries,\n+        bool keep_script) override\n+    {\n+        return ::generateBlocks(coinbase_script, num_blocks, max_tries, keep_script);\n+    }\n+    unsigned int parseConfirmTarget(const UniValue& value) override { return ParseConfirmTarget(value); }\n+    std::unique_ptr<Handler> handleNotifications(Notifications& notifications) override\n+    {\n+        return MakeUnique<HandlerImpl>(notifications);\n+    }\n+    void waitForNotifications() override { SyncWithValidationInterfaceQueue(); }\n+    std::unique_ptr<Handler> handleRpc(const CRPCCommand& command) override;\n+\n+    //! Map of RPC method name to forwarder. If multiple clients provide\n+    //! implementations of the same RPC method, the RPC forwarder can dispatch\n+    //! between them.\n+    class RpcForwarder;\n+    std::map<Ref<const std::string>, RpcForwarder> m_rpc_forwarders;\n+};\n+\n+//! Forwarder for one RPC method.\n+class ChainImpl::RpcForwarder\n+{\n+public:\n+    RpcForwarder(const CRPCCommand& command) : m_command(command)",
      "path": "src/interfaces/chain.cpp",
      "position": null,
      "original_position": 362,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "e44e639558b1084f14a97847592616c3df9fff38",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```\r\n2018-09-20 04:12:32 cppcheck(pr=10973): [src/interfaces/chain.cpp:362]: (style) Class 'RpcForwarder' has a constructor with 1 argument that is not explicit.\r\n```",
      "created_at": "2018-09-21T08:30:43Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r219420448",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219420448"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 362,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219420677",
      "pull_request_review_id": 157591941,
      "id": 219420677,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTQyMDY3Nw==",
      "diff_hunk": "@@ -0,0 +1,265 @@\n+#ifndef BITCOIN_INTERFACES_CHAIN_H\n+#define BITCOIN_INTERFACES_CHAIN_H\n+\n+#include <optional.h>               // For Optional and nullopt\n+#include <policy/rbf.h>             // For RBFTransactionState\n+#include <primitives/transaction.h> // For CTransactionRef\n+\n+#include <memory>\n+#include <stddef.h>\n+#include <stdint.h>\n+#include <string>\n+#include <vector>\n+\n+class CBlock;\n+class CRPCCommand;\n+class CReserveScript;\n+class CScheduler;\n+class CValidationState;\n+class UniValue;\n+class uint256;\n+struct CBlockLocator;\n+struct FeeCalculation;\n+\n+namespace interfaces {\n+\n+class Handler;\n+class Wallet;\n+\n+//! Interface for giving wallet processes access to blockchain state.\n+class Chain\n+{\n+public:\n+    virtual ~Chain() {}\n+\n+    //! Interface for querying locked chain state, used by legacy code that\n+    //! assumes state won't change between calls. New code should avoid using\n+    //! the Lock interface and instead call higher-level Chain methods\n+    //! that return more information so the chain doesn't need to stay locked\n+    //! between calls.\n+    class Lock\n+    {\n+    public:\n+        virtual ~Lock() {}\n+\n+        //! Get current chain height, not including genesis block (returns 0 if\n+        //! chain only contains genesis block, nothing if chain does not contain\n+        //! any blocks).\n+        virtual Optional<int> getHeight() = 0;\n+\n+        //! Get block height above genesis block. Returns 0 for genesis block,\n+        //! 1 for following block, and so on. Returns nothing for a block not\n+        //! included in the current chain.\n+        virtual Optional<int> getBlockHeight(const uint256& hash) = 0;\n+\n+        //! Get block depth. Returns 1 for chain tip, 2 for preceding block, and\n+        //! so on. Returns 0 for a block not included in the current chain.\n+        virtual int getBlockDepth(const uint256& hash) = 0;\n+\n+        //! Get block hash.\n+        virtual uint256 getBlockHash(int height) = 0;\n+\n+        //! Get block time.\n+        virtual int64_t getBlockTime(int height) = 0;\n+\n+        //! Get block median time past.\n+        virtual int64_t getBlockMedianTimePast(int height) = 0;\n+\n+        //! Check that the full block is available on disk (ie has not been\n+        //! pruned), and contains transactions.\n+        virtual bool haveBlockOnDisk(int height) = 0;\n+\n+        //! Return height of the first block in the chain with timestamp equal\n+        //! or greater than the given time, or nothing if there is no block with\n+        //! a high enough timestamp.\n+        virtual Optional<int> findFirstBlockWithTime(int64_t time) = 0;\n+\n+        //! Return height of the first block in the chain with timestamp equal\n+        //! or greater than the given time and height equal or greater than the\n+        //! given height, or nothing if there is no such block.\n+        //!\n+        //! Calling this with height 0 is equivalent to calling\n+        //! findFirstBlockWithTime, but less efficient because it requires a\n+        //! linear instead of a binary search.\n+        virtual Optional<int> findFirstBlockWithTimeAndHeight(int64_t time, int height) = 0;\n+\n+        //! Return height of last block in the specified range which is pruned, or\n+        //! nothing if no block in the range is pruned. Range is inclusive.\n+        virtual Optional<int> findPruned(int start_height = 0, Optional<int> stop_height = nullopt) = 0;\n+\n+        //! Return height of the highest block on the chain that is an ancestor\n+        //! of the specified block. Also return the height of the specified\n+        //! block as an optional output parameter.\n+        virtual Optional<int> findFork(const uint256& hash, Optional<int>* height) = 0;\n+\n+        //! Return true if block hash points to the current chain tip, or to a\n+        //! possible descendant of the current chain tip that isn't currently\n+        //! connected.\n+        virtual bool isPotentialTip(const uint256& hash) = 0;\n+\n+        //! Get locator for the current chain tip.\n+        virtual CBlockLocator getLocator() = 0;\n+\n+        //! Return height of block on the chain using locator.\n+        virtual Optional<int> findLocatorFork(const CBlockLocator& locator) = 0;\n+\n+        //! Check if transaction will be final given chain height current time.\n+        virtual bool checkFinalTx(const CTransaction& tx) = 0;\n+\n+        //! Add transaction to memory pool.\n+        virtual bool acceptToMemoryPool(CTransactionRef tx, CValidationState& state) = 0;\n+    };\n+\n+    //! Return Lock interface. Chain is locked when this is called, and\n+    //! unlocked when the returned interface is freed.\n+    virtual std::unique_ptr<Lock> lock(bool try_lock = false) = 0;\n+\n+    //! Return Lock interface assuming chain is already locked. This\n+    //! method is temporary and is only used in a few places to avoid changing\n+    //! behavior while code is transitioned to use the Chain::Lock interface.\n+    virtual std::unique_ptr<Lock> assumeLocked() = 0;\n+\n+    //! Return whether node has the block and optionally return block metadata or contents.\n+    virtual bool findBlock(const uint256& hash,\n+        CBlock* block = nullptr,\n+        int64_t* time = nullptr,\n+        int64_t* max_time = nullptr) = 0;\n+\n+    //! Get unspent outputs associated with a transaction.\n+    virtual std::vector<Coin> findCoins(const std::vector<COutPoint>& outputs) = 0;\n+\n+    //! Estimate fraction of total transactions verified if blocks up to\n+    //! given height are verified.\n+    virtual double guessVerificationProgress(const uint256& block_hash) = 0;\n+\n+    //! Get virtual transaction size.\n+    virtual int64_t getVirtualTransactionSize(const CTransaction& tx) = 0;\n+\n+    //! Check if transaction is RBF opt in.\n+    virtual RBFTransactionState isRBFOptIn(const CTransaction& tx) = 0;\n+\n+    //! Check if transaction has descendants in mempool.\n+    virtual bool hasDescendantsInMempool(const uint256& txid) = 0;\n+\n+    //! Relay transaction.\n+    virtual bool relayTransaction(const uint256& txid) = 0;\n+\n+    //! Calculate mempool ancestor and descendant counts for the given transaction.\n+    virtual void getTransactionAncestry(const uint256& txid, size_t& ancestors, size_t& descendants) = 0;\n+\n+    //! Check chain limits.\n+    virtual bool checkChainLimits(CTransactionRef tx) = 0;\n+\n+    //! Estimate smart fee.\n+    virtual CFeeRate estimateSmartFee(int num_blocks, bool conservative, FeeCalculation* calc = nullptr) = 0;\n+\n+    //! Fee estimator max target.\n+    virtual int estimateMaxBlocks() = 0;\n+\n+    //! Pool min fee.\n+    virtual CFeeRate poolMinFee() = 0;\n+\n+    //! Check if pruning is enabled.\n+    virtual bool getPruneMode() = 0;\n+\n+    //! Check if p2p enabled.\n+    virtual bool p2pEnabled() = 0;\n+\n+    // Check if in IBD.\n+    virtual bool isInitialBlockDownload() = 0;\n+\n+    //! Get adjusted time.\n+    virtual int64_t getAdjustedTime() = 0;\n+\n+    //! Send init message.\n+    virtual void initMessage(const std::string& message) = 0;\n+\n+    //! Send init warning.\n+    virtual void initWarning(const std::string& message) = 0;\n+\n+    //! Send init error.\n+    virtual void initError(const std::string& message) = 0;\n+\n+    //! Send wallet load notification.\n+    virtual void loadWallet(std::unique_ptr<Wallet> wallet) = 0;\n+\n+    //! Generate blocks\n+    virtual UniValue generateBlocks(std::shared_ptr<CReserveScript> coinbase_script,\n+        int num_blocks,\n+        uint64_t max_tries,\n+        bool keep_script) = 0;\n+\n+    //! Parse confirm target.\n+    virtual unsigned int parseConfirmTarget(const UniValue& value) = 0;\n+\n+    //! Chain notifications.\n+    class Notifications\n+    {\n+    public:\n+        virtual ~Notifications() {}\n+        virtual void TransactionAddedToMempool(const CTransactionRef& tx) {}\n+        virtual void TransactionRemovedFromMempool(const CTransactionRef& ptx) {}\n+        virtual void BlockConnected(const CBlock& block,\n+            const uint256& block_hash,\n+            const std::vector<CTransactionRef>& tx_conflicted)\n+        {\n+        }\n+        virtual void BlockDisconnected(const CBlock& block) {}\n+        virtual void ChainStateFlushed(const CBlockLocator& locator) {}\n+        virtual void Inventory(const uint256& hash) {}",
      "path": "src/interfaces/chain.h",
      "position": null,
      "original_position": 209,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "e44e639558b1084f14a97847592616c3df9fff38",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```\r\n2018-09-20 04:12:32 cppcheck(pr=10973): [src/interfaces/chain.h:209]: (style) The function 'Inventory' is never used.\r\n```",
      "created_at": "2018-09-21T08:31:01Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r219420677",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219420677"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 209,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219691759",
      "pull_request_review_id": 157932364,
      "id": 219691759,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTY5MTc1OQ==",
      "diff_hunk": "@@ -0,0 +1,453 @@\n+#include <interfaces/chain.h>",
      "path": "src/interfaces/chain.cpp",
      "position": null,
      "original_position": 1,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "e44e639558b1084f14a97847592616c3df9fff38",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```\r\n\r\n2018-09-22 22:50:20 cpplint(pr=10973): src/interfaces/chain.cpp:0:  No copyright message found.\r\n```",
      "created_at": "2018-09-23T08:23:05Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r219691759",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219691759"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219691763",
      "pull_request_review_id": 157932369,
      "id": 219691763,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTY5MTc2Mw==",
      "diff_hunk": "@@ -0,0 +1,453 @@\n+#include <interfaces/chain.h>\n+\n+#include <chain.h>\n+#include <chainparams.h>\n+#include <interfaces/handler.h>\n+#include <interfaces/wallet.h>\n+#include <net.h>\n+#include <policy/fees.h>\n+#include <policy/policy.h>\n+#include <policy/rbf.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <protocol.h>\n+#include <rpc/mining.h>\n+#include <rpc/protocol.h>\n+#include <rpc/server.h>\n+#include <sync.h>\n+#include <threadsafety.h>\n+#include <timedata.h>\n+#include <txmempool.h>\n+#include <ui_interface.h>\n+#include <uint256.h>\n+#include <univalue.h>\n+#include <util.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+\n+#include <algorithm>\n+#include <map>\n+#include <memory>\n+#include <tuple>\n+#include <unordered_map>\n+#include <utility>\n+\n+class CReserveScript;\n+\n+namespace interfaces {\n+namespace {\n+\n+//! Extension of std::reference_wrapper with operator< for use as map key.\n+template <typename T>\n+class Ref : public std::reference_wrapper<T>\n+{\n+public:\n+    using std::reference_wrapper<T>::reference_wrapper;\n+    bool operator<(const Ref<T>& other) const { return this->get() < other.get(); }\n+};\n+\n+class LockImpl : public Chain::Lock\n+{\n+    Optional<int> getHeight() override\n+    {\n+        int height = ::chainActive.Height();\n+        if (height >= 0) {\n+            return height;\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> getBlockHeight(const uint256& hash) override\n+    {\n+        auto it = ::mapBlockIndex.find(hash);\n+        if (it != ::mapBlockIndex.end() && it->second) {\n+            if (::chainActive.Contains(it->second)) {\n+                return it->second->nHeight;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    int getBlockDepth(const uint256& hash) override\n+    {\n+        const Optional<int> tip_height = getHeight();\n+        const Optional<int> height = getBlockHeight(hash);\n+        return tip_height && height ? *tip_height - *height + 1 : 0;\n+    }\n+    uint256 getBlockHash(int height) override { return ::chainActive[height]->GetBlockHash(); }\n+    int64_t getBlockTime(int height) override { return ::chainActive[height]->GetBlockTime(); }\n+    int64_t getBlockMedianTimePast(int height) override { return ::chainActive[height]->GetMedianTimePast(); }\n+    bool haveBlockOnDisk(int height) override\n+    {\n+        CBlockIndex* block = ::chainActive[height];\n+        return block && (block->nStatus & BLOCK_HAVE_DATA) && block->nTx > 0;\n+    }\n+    Optional<int> findFirstBlockWithTime(int64_t time) override\n+    {\n+        CBlockIndex* block = ::chainActive.FindEarliestAtLeast(time);\n+        if (block) {\n+            return block->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findFirstBlockWithTimeAndHeight(int64_t time, int height) override\n+    {\n+        for (CBlockIndex* block = ::chainActive[height]; block; block = ::chainActive.Next(block)) {\n+            if (block->GetBlockTime() >= time) {\n+                return block->nHeight;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findPruned(int start_height, Optional<int> stop_height) override\n+    {\n+        if (::fPruneMode) {\n+            CBlockIndex* block = stop_height ? ::chainActive[*stop_height] : ::chainActive.Tip();\n+            while (block && block->nHeight >= start_height) {\n+                if (!(block->nStatus & BLOCK_HAVE_DATA)) {\n+                    return block->nHeight;\n+                }\n+                block = block->pprev;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findFork(const uint256& hash, Optional<int>* height) override\n+    {\n+        const CBlockIndex *block{nullptr}, *fork{nullptr};\n+        auto it = ::mapBlockIndex.find(hash);\n+        if (it != ::mapBlockIndex.end()) {\n+            block = it->second;\n+            fork = ::chainActive.FindFork(block);\n+        }\n+        if (height) {\n+            if (block) {\n+                *height = block->nHeight;\n+            } else {\n+                height->reset();\n+            }\n+        }\n+        if (fork) {\n+            return fork->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    bool isPotentialTip(const uint256& hash) override\n+    {\n+        if (::chainActive.Tip()->GetBlockHash() == hash) return true;\n+        auto it = ::mapBlockIndex.find(hash);\n+        return it != ::mapBlockIndex.end() && it->second->GetAncestor(::chainActive.Height()) == ::chainActive.Tip();\n+    }\n+    CBlockLocator getLocator() override { return ::chainActive.GetLocator(); }\n+    Optional<int> findLocatorFork(const CBlockLocator& locator) override\n+    {\n+        if (CBlockIndex* fork = FindForkInGlobalIndex(::chainActive, locator)) {\n+            return fork->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    bool checkFinalTx(const CTransaction& tx) override\n+    {\n+        LockAnnotation lock(::cs_main);\n+        return CheckFinalTx(tx);\n+    }\n+    bool acceptToMemoryPool(CTransactionRef tx, CValidationState& state) override\n+    {\n+        LockAnnotation lock(::cs_main);\n+        return AcceptToMemoryPool(::mempool, state, tx, nullptr /* missing inputs */, nullptr /* txn replaced */,\n+            false /* bypass limits */, ::maxTxFee /* absurd fee */);\n+    }\n+};\n+\n+class LockingStateImpl : public LockImpl, public UniqueLock<CCriticalSection>\n+{\n+    using UniqueLock::UniqueLock;\n+};\n+\n+class HandlerImpl : public Handler\n+{\n+public:\n+    HandlerImpl(Chain::Notifications& notifications) : m_forwarder(notifications) {}",
      "path": "src/interfaces/chain.cpp",
      "position": null,
      "original_position": 168,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "e44e639558b1084f14a97847592616c3df9fff38",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```\r\n2018-09-22 22:50:20 cpplint(pr=10973): src/interfaces/chain.cpp:168:  Single-parameter constructors should be marked explicit.\r\n```",
      "created_at": "2018-09-23T08:23:28Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r219691763",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219691763"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 168,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219691774",
      "pull_request_review_id": 157932380,
      "id": 219691774,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTY5MTc3NA==",
      "diff_hunk": "@@ -0,0 +1,453 @@\n+#include <interfaces/chain.h>\n+\n+#include <chain.h>\n+#include <chainparams.h>\n+#include <interfaces/handler.h>\n+#include <interfaces/wallet.h>\n+#include <net.h>\n+#include <policy/fees.h>\n+#include <policy/policy.h>\n+#include <policy/rbf.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <protocol.h>\n+#include <rpc/mining.h>\n+#include <rpc/protocol.h>\n+#include <rpc/server.h>\n+#include <sync.h>\n+#include <threadsafety.h>\n+#include <timedata.h>\n+#include <txmempool.h>\n+#include <ui_interface.h>\n+#include <uint256.h>\n+#include <univalue.h>\n+#include <util.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+\n+#include <algorithm>\n+#include <map>\n+#include <memory>\n+#include <tuple>\n+#include <unordered_map>\n+#include <utility>\n+\n+class CReserveScript;\n+\n+namespace interfaces {\n+namespace {\n+\n+//! Extension of std::reference_wrapper with operator< for use as map key.\n+template <typename T>\n+class Ref : public std::reference_wrapper<T>\n+{\n+public:\n+    using std::reference_wrapper<T>::reference_wrapper;\n+    bool operator<(const Ref<T>& other) const { return this->get() < other.get(); }\n+};\n+\n+class LockImpl : public Chain::Lock\n+{\n+    Optional<int> getHeight() override\n+    {\n+        int height = ::chainActive.Height();\n+        if (height >= 0) {\n+            return height;\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> getBlockHeight(const uint256& hash) override\n+    {\n+        auto it = ::mapBlockIndex.find(hash);\n+        if (it != ::mapBlockIndex.end() && it->second) {\n+            if (::chainActive.Contains(it->second)) {\n+                return it->second->nHeight;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    int getBlockDepth(const uint256& hash) override\n+    {\n+        const Optional<int> tip_height = getHeight();\n+        const Optional<int> height = getBlockHeight(hash);\n+        return tip_height && height ? *tip_height - *height + 1 : 0;\n+    }\n+    uint256 getBlockHash(int height) override { return ::chainActive[height]->GetBlockHash(); }\n+    int64_t getBlockTime(int height) override { return ::chainActive[height]->GetBlockTime(); }\n+    int64_t getBlockMedianTimePast(int height) override { return ::chainActive[height]->GetMedianTimePast(); }\n+    bool haveBlockOnDisk(int height) override\n+    {\n+        CBlockIndex* block = ::chainActive[height];\n+        return block && (block->nStatus & BLOCK_HAVE_DATA) && block->nTx > 0;\n+    }\n+    Optional<int> findFirstBlockWithTime(int64_t time) override\n+    {\n+        CBlockIndex* block = ::chainActive.FindEarliestAtLeast(time);\n+        if (block) {\n+            return block->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findFirstBlockWithTimeAndHeight(int64_t time, int height) override\n+    {\n+        for (CBlockIndex* block = ::chainActive[height]; block; block = ::chainActive.Next(block)) {\n+            if (block->GetBlockTime() >= time) {\n+                return block->nHeight;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findPruned(int start_height, Optional<int> stop_height) override\n+    {\n+        if (::fPruneMode) {\n+            CBlockIndex* block = stop_height ? ::chainActive[*stop_height] : ::chainActive.Tip();\n+            while (block && block->nHeight >= start_height) {\n+                if (!(block->nStatus & BLOCK_HAVE_DATA)) {\n+                    return block->nHeight;\n+                }\n+                block = block->pprev;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findFork(const uint256& hash, Optional<int>* height) override\n+    {\n+        const CBlockIndex *block{nullptr}, *fork{nullptr};\n+        auto it = ::mapBlockIndex.find(hash);\n+        if (it != ::mapBlockIndex.end()) {\n+            block = it->second;\n+            fork = ::chainActive.FindFork(block);\n+        }\n+        if (height) {\n+            if (block) {\n+                *height = block->nHeight;\n+            } else {\n+                height->reset();\n+            }\n+        }\n+        if (fork) {\n+            return fork->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    bool isPotentialTip(const uint256& hash) override\n+    {\n+        if (::chainActive.Tip()->GetBlockHash() == hash) return true;\n+        auto it = ::mapBlockIndex.find(hash);\n+        return it != ::mapBlockIndex.end() && it->second->GetAncestor(::chainActive.Height()) == ::chainActive.Tip();\n+    }\n+    CBlockLocator getLocator() override { return ::chainActive.GetLocator(); }\n+    Optional<int> findLocatorFork(const CBlockLocator& locator) override\n+    {\n+        if (CBlockIndex* fork = FindForkInGlobalIndex(::chainActive, locator)) {\n+            return fork->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    bool checkFinalTx(const CTransaction& tx) override\n+    {\n+        LockAnnotation lock(::cs_main);\n+        return CheckFinalTx(tx);\n+    }\n+    bool acceptToMemoryPool(CTransactionRef tx, CValidationState& state) override\n+    {\n+        LockAnnotation lock(::cs_main);\n+        return AcceptToMemoryPool(::mempool, state, tx, nullptr /* missing inputs */, nullptr /* txn replaced */,\n+            false /* bypass limits */, ::maxTxFee /* absurd fee */);\n+    }\n+};\n+\n+class LockingStateImpl : public LockImpl, public UniqueLock<CCriticalSection>\n+{\n+    using UniqueLock::UniqueLock;\n+};\n+\n+class HandlerImpl : public Handler\n+{\n+public:\n+    HandlerImpl(Chain::Notifications& notifications) : m_forwarder(notifications) {}\n+    ~HandlerImpl() override\n+    {\n+        // It is important to disconnect here in the HandlerImpl destructor,\n+        // instead of in the HandleImpl::Forwarder destructor, because\n+        // UnregisterAllValidationInterfaces() internally accesses Forwarder\n+        // virtual methods which are no longer available after Forwarder object\n+        // has begun to be being destroyed.\n+        m_forwarder.disconnect();\n+    }\n+    void disconnect() override { m_forwarder.disconnect(); }\n+\n+    struct Forwarder : CValidationInterface\n+    {\n+        Forwarder(Chain::Notifications& notifications) : m_notifications(&notifications)",
      "path": "src/interfaces/chain.cpp",
      "position": null,
      "original_position": 182,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "e44e639558b1084f14a97847592616c3df9fff38",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```\r\n2018-09-22 22:50:20 cpplint(pr=10973): src/interfaces/chain.cpp:182:  Single-parameter constructors should be marked explicit.\r\n```",
      "created_at": "2018-09-23T08:24:00Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r219691774",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219691774"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 182,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219691784",
      "pull_request_review_id": 157932388,
      "id": 219691784,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTY5MTc4NA==",
      "diff_hunk": "@@ -0,0 +1,453 @@\n+#include <interfaces/chain.h>\n+\n+#include <chain.h>\n+#include <chainparams.h>\n+#include <interfaces/handler.h>\n+#include <interfaces/wallet.h>\n+#include <net.h>\n+#include <policy/fees.h>\n+#include <policy/policy.h>\n+#include <policy/rbf.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <protocol.h>\n+#include <rpc/mining.h>\n+#include <rpc/protocol.h>\n+#include <rpc/server.h>\n+#include <sync.h>\n+#include <threadsafety.h>\n+#include <timedata.h>\n+#include <txmempool.h>\n+#include <ui_interface.h>\n+#include <uint256.h>\n+#include <univalue.h>\n+#include <util.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+\n+#include <algorithm>\n+#include <map>\n+#include <memory>\n+#include <tuple>\n+#include <unordered_map>\n+#include <utility>\n+\n+class CReserveScript;\n+\n+namespace interfaces {\n+namespace {\n+\n+//! Extension of std::reference_wrapper with operator< for use as map key.\n+template <typename T>\n+class Ref : public std::reference_wrapper<T>\n+{\n+public:\n+    using std::reference_wrapper<T>::reference_wrapper;\n+    bool operator<(const Ref<T>& other) const { return this->get() < other.get(); }\n+};\n+\n+class LockImpl : public Chain::Lock\n+{\n+    Optional<int> getHeight() override\n+    {\n+        int height = ::chainActive.Height();\n+        if (height >= 0) {\n+            return height;\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> getBlockHeight(const uint256& hash) override\n+    {\n+        auto it = ::mapBlockIndex.find(hash);\n+        if (it != ::mapBlockIndex.end() && it->second) {\n+            if (::chainActive.Contains(it->second)) {\n+                return it->second->nHeight;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    int getBlockDepth(const uint256& hash) override\n+    {\n+        const Optional<int> tip_height = getHeight();\n+        const Optional<int> height = getBlockHeight(hash);\n+        return tip_height && height ? *tip_height - *height + 1 : 0;\n+    }\n+    uint256 getBlockHash(int height) override { return ::chainActive[height]->GetBlockHash(); }\n+    int64_t getBlockTime(int height) override { return ::chainActive[height]->GetBlockTime(); }\n+    int64_t getBlockMedianTimePast(int height) override { return ::chainActive[height]->GetMedianTimePast(); }\n+    bool haveBlockOnDisk(int height) override\n+    {\n+        CBlockIndex* block = ::chainActive[height];\n+        return block && (block->nStatus & BLOCK_HAVE_DATA) && block->nTx > 0;\n+    }\n+    Optional<int> findFirstBlockWithTime(int64_t time) override\n+    {\n+        CBlockIndex* block = ::chainActive.FindEarliestAtLeast(time);\n+        if (block) {\n+            return block->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findFirstBlockWithTimeAndHeight(int64_t time, int height) override\n+    {\n+        for (CBlockIndex* block = ::chainActive[height]; block; block = ::chainActive.Next(block)) {\n+            if (block->GetBlockTime() >= time) {\n+                return block->nHeight;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findPruned(int start_height, Optional<int> stop_height) override\n+    {\n+        if (::fPruneMode) {\n+            CBlockIndex* block = stop_height ? ::chainActive[*stop_height] : ::chainActive.Tip();\n+            while (block && block->nHeight >= start_height) {\n+                if (!(block->nStatus & BLOCK_HAVE_DATA)) {\n+                    return block->nHeight;\n+                }\n+                block = block->pprev;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findFork(const uint256& hash, Optional<int>* height) override\n+    {\n+        const CBlockIndex *block{nullptr}, *fork{nullptr};\n+        auto it = ::mapBlockIndex.find(hash);\n+        if (it != ::mapBlockIndex.end()) {\n+            block = it->second;\n+            fork = ::chainActive.FindFork(block);\n+        }\n+        if (height) {\n+            if (block) {\n+                *height = block->nHeight;\n+            } else {\n+                height->reset();\n+            }\n+        }\n+        if (fork) {\n+            return fork->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    bool isPotentialTip(const uint256& hash) override\n+    {\n+        if (::chainActive.Tip()->GetBlockHash() == hash) return true;\n+        auto it = ::mapBlockIndex.find(hash);\n+        return it != ::mapBlockIndex.end() && it->second->GetAncestor(::chainActive.Height()) == ::chainActive.Tip();\n+    }\n+    CBlockLocator getLocator() override { return ::chainActive.GetLocator(); }\n+    Optional<int> findLocatorFork(const CBlockLocator& locator) override\n+    {\n+        if (CBlockIndex* fork = FindForkInGlobalIndex(::chainActive, locator)) {\n+            return fork->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    bool checkFinalTx(const CTransaction& tx) override\n+    {\n+        LockAnnotation lock(::cs_main);\n+        return CheckFinalTx(tx);\n+    }\n+    bool acceptToMemoryPool(CTransactionRef tx, CValidationState& state) override\n+    {\n+        LockAnnotation lock(::cs_main);\n+        return AcceptToMemoryPool(::mempool, state, tx, nullptr /* missing inputs */, nullptr /* txn replaced */,\n+            false /* bypass limits */, ::maxTxFee /* absurd fee */);\n+    }\n+};\n+\n+class LockingStateImpl : public LockImpl, public UniqueLock<CCriticalSection>\n+{\n+    using UniqueLock::UniqueLock;\n+};\n+\n+class HandlerImpl : public Handler\n+{\n+public:\n+    HandlerImpl(Chain::Notifications& notifications) : m_forwarder(notifications) {}\n+    ~HandlerImpl() override\n+    {\n+        // It is important to disconnect here in the HandlerImpl destructor,\n+        // instead of in the HandleImpl::Forwarder destructor, because\n+        // UnregisterAllValidationInterfaces() internally accesses Forwarder\n+        // virtual methods which are no longer available after Forwarder object\n+        // has begun to be being destroyed.\n+        m_forwarder.disconnect();\n+    }\n+    void disconnect() override { m_forwarder.disconnect(); }\n+\n+    struct Forwarder : CValidationInterface\n+    {\n+        Forwarder(Chain::Notifications& notifications) : m_notifications(&notifications)\n+        {\n+            RegisterValidationInterface(this);\n+        }\n+        void disconnect()\n+        {\n+            if (m_notifications) {\n+                m_notifications = nullptr;\n+                UnregisterValidationInterface(this);\n+            }\n+        }\n+        void TransactionAddedToMempool(const CTransactionRef& tx) override\n+        {\n+            m_notifications->TransactionAddedToMempool(tx);\n+        }\n+        void TransactionRemovedFromMempool(const CTransactionRef& tx) override\n+        {\n+            m_notifications->TransactionRemovedFromMempool(tx);\n+        }\n+        void BlockConnected(const std::shared_ptr<const CBlock>& block,\n+            const CBlockIndex* index,\n+            const std::vector<CTransactionRef>& tx_conflicted) override\n+        {\n+            m_notifications->BlockConnected(*block, index->GetBlockHash(), tx_conflicted);\n+        }\n+        void BlockDisconnected(const std::shared_ptr<const CBlock>& block) override\n+        {\n+            m_notifications->BlockDisconnected(*block);\n+        }\n+        void ChainStateFlushed(const CBlockLocator& locator) override { m_notifications->ChainStateFlushed(locator); }\n+        void ResendWalletTransactions(int64_t best_block_time, CConnman* connman) override\n+        {\n+            m_notifications->ResendWalletTransactions(best_block_time);\n+        }\n+\n+        Chain::Notifications* m_notifications;\n+    };\n+\n+    Forwarder m_forwarder;\n+};\n+\n+class ChainImpl : public Chain\n+{\n+public:\n+    std::unique_ptr<Chain::Lock> lock(bool try_lock) override\n+    {\n+        auto result = MakeUnique<LockingStateImpl>(::cs_main, \"cs_main\", __FILE__, __LINE__, try_lock);\n+        if (try_lock && result && !*result) return {};\n+        // std::move necessary on some compilers due to conversion from\n+        // LockingStateImpl to Lock pointer\n+        return std::move(result);\n+    }\n+    std::unique_ptr<Chain::Lock> assumeLocked() override { return MakeUnique<LockImpl>(); }\n+    bool findBlock(const uint256& hash, CBlock* block, int64_t* time, int64_t* time_max) override\n+    {\n+        CBlockIndex* index;\n+        {\n+            LOCK(cs_main);\n+            auto it = ::mapBlockIndex.find(hash);\n+            if (it == ::mapBlockIndex.end()) {\n+                return false;\n+            }\n+            index = it->second;\n+            if (time) {\n+                *time = index->GetBlockTime();\n+            }\n+            if (time_max) {\n+                *time_max = index->GetBlockTimeMax();\n+            }\n+        }\n+        if (block && !ReadBlockFromDisk(*block, index, Params().GetConsensus())) {\n+            block->SetNull();\n+        }\n+        return true;\n+    }\n+    std::vector<Coin> findCoins(const std::vector<COutPoint>& outputs) override\n+    {\n+        std::vector<Coin> coins;\n+        LOCK2(cs_main, ::mempool.cs);\n+        assert(pcoinsTip);\n+        CCoinsViewCache& chain_view = *::pcoinsTip;\n+        CCoinsViewMemPool mempool_view(&chain_view, ::mempool);\n+        for (const auto& output : outputs) {\n+            Coin coin;\n+            mempool_view.GetCoin(output, coin);\n+            coins.emplace_back(std::move(coin));\n+        }\n+        return coins;\n+    }\n+    double guessVerificationProgress(const uint256& block_hash) override\n+    {\n+        LOCK(cs_main);\n+        auto it = ::mapBlockIndex.find(block_hash);\n+        return GuessVerificationProgress(Params().TxData(), it != ::mapBlockIndex.end() ? it->second : nullptr);\n+    }\n+    int64_t getVirtualTransactionSize(const CTransaction& tx) override { return GetVirtualTransactionSize(tx); }\n+    RBFTransactionState isRBFOptIn(const CTransaction& tx) override\n+    {\n+        LOCK(::mempool.cs);\n+        return IsRBFOptIn(tx, ::mempool);\n+    }\n+    bool hasDescendantsInMempool(const uint256& txid) override\n+    {\n+        LOCK(::mempool.cs);\n+        auto it_mp = ::mempool.mapTx.find(txid);\n+        return it_mp != ::mempool.mapTx.end() && it_mp->GetCountWithDescendants() > 1;\n+    }\n+    bool relayTransaction(const uint256& txid) override\n+    {\n+        if (g_connman) {\n+            CInv inv(MSG_TX, txid);\n+            g_connman->ForEachNode([&inv](CNode* node) { node->PushInventory(inv); });\n+            return true;\n+        }\n+        return false;\n+    }\n+    void getTransactionAncestry(const uint256& txid, size_t& ancestors, size_t& descendants) override\n+    {\n+        ::mempool.GetTransactionAncestry(txid, ancestors, descendants);\n+    }\n+    bool checkChainLimits(CTransactionRef tx) override\n+    {\n+        LockPoints lp;\n+        CTxMemPoolEntry entry(tx, 0, 0, 0, false, 0, lp);\n+        CTxMemPool::setEntries setAncestors;\n+        size_t nLimitAncestors = gArgs.GetArg(\"-limitancestorcount\", DEFAULT_ANCESTOR_LIMIT);\n+        size_t nLimitAncestorSize = gArgs.GetArg(\"-limitancestorsize\", DEFAULT_ANCESTOR_SIZE_LIMIT) * 1000;\n+        size_t nLimitDescendants = gArgs.GetArg(\"-limitdescendantcount\", DEFAULT_DESCENDANT_LIMIT);\n+        size_t nLimitDescendantSize = gArgs.GetArg(\"-limitdescendantsize\", DEFAULT_DESCENDANT_SIZE_LIMIT) * 1000;\n+        std::string errString;\n+        LOCK(::mempool.cs);\n+        if (!::mempool.CalculateMemPoolAncestors(entry, setAncestors, nLimitAncestors, nLimitAncestorSize,\n+                nLimitDescendants, nLimitDescendantSize, errString)) {\n+            return false;\n+        }\n+        return true;\n+    }\n+    CFeeRate estimateSmartFee(int num_blocks, bool conservative, FeeCalculation* calc) override\n+    {\n+        return ::feeEstimator.estimateSmartFee(num_blocks, calc, conservative);\n+    }\n+    int estimateMaxBlocks() override { return ::feeEstimator.HighestTargetTracked(FeeEstimateHorizon::LONG_HALFLIFE); }\n+    CFeeRate poolMinFee() override\n+    {\n+        return ::mempool.GetMinFee(gArgs.GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000);\n+    }\n+    bool getPruneMode() override { return ::fPruneMode; }\n+    bool p2pEnabled() override { return g_connman != nullptr; }\n+    bool isInitialBlockDownload() override { return IsInitialBlockDownload(); }\n+    int64_t getAdjustedTime() override { return GetAdjustedTime(); }\n+    void initMessage(const std::string& message) override { ::uiInterface.InitMessage(message); }\n+    void initWarning(const std::string& message) override { InitWarning(message); }\n+    void initError(const std::string& message) override { InitError(message); }\n+    void loadWallet(std::unique_ptr<Wallet> wallet) override { ::uiInterface.LoadWallet(wallet); }\n+    UniValue generateBlocks(std::shared_ptr<CReserveScript> coinbase_script,\n+        int num_blocks,\n+        uint64_t max_tries,\n+        bool keep_script) override\n+    {\n+        return ::generateBlocks(coinbase_script, num_blocks, max_tries, keep_script);\n+    }\n+    unsigned int parseConfirmTarget(const UniValue& value) override { return ParseConfirmTarget(value); }\n+    std::unique_ptr<Handler> handleNotifications(Notifications& notifications) override\n+    {\n+        return MakeUnique<HandlerImpl>(notifications);\n+    }\n+    void waitForNotifications() override { SyncWithValidationInterfaceQueue(); }\n+    std::unique_ptr<Handler> handleRpc(const CRPCCommand& command) override;\n+\n+    //! Map of RPC method name to forwarder. If multiple clients provide\n+    //! implementations of the same RPC method, the RPC forwarder can dispatch\n+    //! between them.\n+    class RpcForwarder;\n+    std::map<Ref<const std::string>, RpcForwarder> m_rpc_forwarders;\n+};\n+\n+//! Forwarder for one RPC method.\n+class ChainImpl::RpcForwarder\n+{\n+public:\n+    RpcForwarder(const CRPCCommand& command) : m_command(command)",
      "path": "src/interfaces/chain.cpp",
      "position": null,
      "original_position": 362,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "e44e639558b1084f14a97847592616c3df9fff38",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```\r\n2018-09-22 22:50:20 cpplint(pr=10973): src/interfaces/chain.cpp:362:  Single-parameter constructors should be marked explicit.\r\n```",
      "created_at": "2018-09-23T08:24:17Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r219691784",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219691784"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 362,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219691793",
      "pull_request_review_id": 157932396,
      "id": 219691793,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTY5MTc5Mw==",
      "diff_hunk": "@@ -0,0 +1,265 @@\n+#ifndef BITCOIN_INTERFACES_CHAIN_H",
      "path": "src/interfaces/chain.h",
      "position": null,
      "original_position": 1,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "e44e639558b1084f14a97847592616c3df9fff38",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```\r\n2018-09-22 22:50:20 cpplint(pr=10973): src/interfaces/chain.h:0:  No copyright message found.\r\n```",
      "created_at": "2018-09-23T08:24:35Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r219691793",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219691793"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219691803",
      "pull_request_review_id": 157932405,
      "id": 219691803,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTY5MTgwMw==",
      "diff_hunk": "@@ -54,4 +54,15 @@\n #define ASSERT_EXCLUSIVE_LOCK(...)\n #endif // __GNUC__\n \n+// Utility class to indicate mutex is locked for thread analysis when it can't\n+// be determined otherwise.\n+struct SCOPED_LOCKABLE LockAnnotation\n+{\n+    template <typename Mutex>\n+    LockAnnotation(Mutex& mutex) EXCLUSIVE_LOCK_FUNCTION(mutex)",
      "path": "src/threadsafety.h",
      "position": null,
      "original_position": 9,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "e44e639558b1084f14a97847592616c3df9fff38",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```\r\n2018-09-22 22:50:20 cpplint(pr=10973): src/threadsafety.h:62:  Single-parameter constructors should be marked explicit.  [runtime/explicit] [5]\r\n```",
      "created_at": "2018-09-23T08:24:56Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r219691803",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219691803"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 62,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219704316",
      "pull_request_review_id": 157944675,
      "id": 219704316,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTcwNDMxNg==",
      "diff_hunk": "@@ -0,0 +1,453 @@\n+#include <interfaces/chain.h>\n+\n+#include <chain.h>\n+#include <chainparams.h>\n+#include <interfaces/handler.h>\n+#include <interfaces/wallet.h>\n+#include <net.h>\n+#include <policy/fees.h>\n+#include <policy/policy.h>\n+#include <policy/rbf.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <protocol.h>\n+#include <rpc/mining.h>\n+#include <rpc/protocol.h>\n+#include <rpc/server.h>\n+#include <sync.h>\n+#include <threadsafety.h>\n+#include <timedata.h>\n+#include <txmempool.h>\n+#include <ui_interface.h>\n+#include <uint256.h>\n+#include <univalue.h>\n+#include <util.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+\n+#include <algorithm>\n+#include <map>\n+#include <memory>\n+#include <tuple>\n+#include <unordered_map>\n+#include <utility>\n+\n+class CReserveScript;\n+\n+namespace interfaces {\n+namespace {\n+\n+//! Extension of std::reference_wrapper with operator< for use as map key.\n+template <typename T>\n+class Ref : public std::reference_wrapper<T>\n+{\n+public:\n+    using std::reference_wrapper<T>::reference_wrapper;\n+    bool operator<(const Ref<T>& other) const { return this->get() < other.get(); }\n+};\n+\n+class LockImpl : public Chain::Lock\n+{\n+    Optional<int> getHeight() override\n+    {\n+        int height = ::chainActive.Height();\n+        if (height >= 0) {\n+            return height;\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> getBlockHeight(const uint256& hash) override\n+    {\n+        auto it = ::mapBlockIndex.find(hash);\n+        if (it != ::mapBlockIndex.end() && it->second) {\n+            if (::chainActive.Contains(it->second)) {\n+                return it->second->nHeight;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    int getBlockDepth(const uint256& hash) override\n+    {\n+        const Optional<int> tip_height = getHeight();\n+        const Optional<int> height = getBlockHeight(hash);\n+        return tip_height && height ? *tip_height - *height + 1 : 0;\n+    }\n+    uint256 getBlockHash(int height) override { return ::chainActive[height]->GetBlockHash(); }\n+    int64_t getBlockTime(int height) override { return ::chainActive[height]->GetBlockTime(); }\n+    int64_t getBlockMedianTimePast(int height) override { return ::chainActive[height]->GetMedianTimePast(); }\n+    bool haveBlockOnDisk(int height) override\n+    {\n+        CBlockIndex* block = ::chainActive[height];\n+        return block && (block->nStatus & BLOCK_HAVE_DATA) && block->nTx > 0;\n+    }\n+    Optional<int> findFirstBlockWithTime(int64_t time) override\n+    {\n+        CBlockIndex* block = ::chainActive.FindEarliestAtLeast(time);\n+        if (block) {\n+            return block->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findFirstBlockWithTimeAndHeight(int64_t time, int height) override\n+    {\n+        for (CBlockIndex* block = ::chainActive[height]; block; block = ::chainActive.Next(block)) {\n+            if (block->GetBlockTime() >= time) {\n+                return block->nHeight;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findPruned(int start_height, Optional<int> stop_height) override\n+    {\n+        if (::fPruneMode) {\n+            CBlockIndex* block = stop_height ? ::chainActive[*stop_height] : ::chainActive.Tip();\n+            while (block && block->nHeight >= start_height) {\n+                if (!(block->nStatus & BLOCK_HAVE_DATA)) {\n+                    return block->nHeight;\n+                }\n+                block = block->pprev;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findFork(const uint256& hash, Optional<int>* height) override\n+    {\n+        const CBlockIndex *block{nullptr}, *fork{nullptr};\n+        auto it = ::mapBlockIndex.find(hash);\n+        if (it != ::mapBlockIndex.end()) {\n+            block = it->second;\n+            fork = ::chainActive.FindFork(block);\n+        }\n+        if (height) {",
      "path": "src/interfaces/chain.cpp",
      "position": null,
      "original_position": 121,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "e44e639558b1084f14a97847592616c3df9fff38",
      "in_reply_to_id": 219412247,
      "user": {
        "login": "flack",
        "id": 425166,
        "node_id": "MDQ6VXNlcjQyNTE2Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/425166?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/flack",
        "html_url": "https://github.com/flack",
        "followers_url": "https://api.github.com/users/flack/followers",
        "following_url": "https://api.github.com/users/flack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/flack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/flack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/flack/subscriptions",
        "organizations_url": "https://api.github.com/users/flack/orgs",
        "repos_url": "https://api.github.com/users/flack/repos",
        "events_url": "https://api.github.com/users/flack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/flack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@practicalswift You know, the signal/noise ratio of these comments would be higher if you omitted the timestamp (which isn't interesting), the PR number and the file path (which are redundant, because that's where the comment is attached). Currently in the web UI, you always have to scroll each comment horizontally to see what it's actually about.\r\n\r\nstatus quo:\r\n<img width=\"676\" alt=\"bildschirmfoto 2018-09-23 um 18 40 53\" src=\"https://user-images.githubusercontent.com/425166/45930419-5f36e980-bf60-11e8-866f-102591e58d38.png\">\r\n\r\nproposed:\r\n<img width=\"664\" alt=\"bildschirmfoto 2018-09-23 um 18 41 21\" src=\"https://user-images.githubusercontent.com/425166/45930424-6958e800-bf60-11e8-841b-1e553ca9d7b6.png\">\r\n\r\n",
      "created_at": "2018-09-23T16:42:36Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r219704316",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219704316"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 126,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219705466",
      "pull_request_review_id": 157945797,
      "id": 219705466,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxOTcwNTQ2Ng==",
      "diff_hunk": "@@ -0,0 +1,453 @@\n+#include <interfaces/chain.h>\n+\n+#include <chain.h>\n+#include <chainparams.h>\n+#include <interfaces/handler.h>\n+#include <interfaces/wallet.h>\n+#include <net.h>\n+#include <policy/fees.h>\n+#include <policy/policy.h>\n+#include <policy/rbf.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <protocol.h>\n+#include <rpc/mining.h>\n+#include <rpc/protocol.h>\n+#include <rpc/server.h>\n+#include <sync.h>\n+#include <threadsafety.h>\n+#include <timedata.h>\n+#include <txmempool.h>\n+#include <ui_interface.h>\n+#include <uint256.h>\n+#include <univalue.h>\n+#include <util.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+\n+#include <algorithm>\n+#include <map>\n+#include <memory>\n+#include <tuple>\n+#include <unordered_map>\n+#include <utility>\n+\n+class CReserveScript;\n+\n+namespace interfaces {\n+namespace {\n+\n+//! Extension of std::reference_wrapper with operator< for use as map key.\n+template <typename T>\n+class Ref : public std::reference_wrapper<T>\n+{\n+public:\n+    using std::reference_wrapper<T>::reference_wrapper;\n+    bool operator<(const Ref<T>& other) const { return this->get() < other.get(); }\n+};\n+\n+class LockImpl : public Chain::Lock\n+{\n+    Optional<int> getHeight() override\n+    {\n+        int height = ::chainActive.Height();\n+        if (height >= 0) {\n+            return height;\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> getBlockHeight(const uint256& hash) override\n+    {\n+        auto it = ::mapBlockIndex.find(hash);\n+        if (it != ::mapBlockIndex.end() && it->second) {\n+            if (::chainActive.Contains(it->second)) {\n+                return it->second->nHeight;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    int getBlockDepth(const uint256& hash) override\n+    {\n+        const Optional<int> tip_height = getHeight();\n+        const Optional<int> height = getBlockHeight(hash);\n+        return tip_height && height ? *tip_height - *height + 1 : 0;\n+    }\n+    uint256 getBlockHash(int height) override { return ::chainActive[height]->GetBlockHash(); }\n+    int64_t getBlockTime(int height) override { return ::chainActive[height]->GetBlockTime(); }\n+    int64_t getBlockMedianTimePast(int height) override { return ::chainActive[height]->GetMedianTimePast(); }\n+    bool haveBlockOnDisk(int height) override\n+    {\n+        CBlockIndex* block = ::chainActive[height];\n+        return block && (block->nStatus & BLOCK_HAVE_DATA) && block->nTx > 0;\n+    }\n+    Optional<int> findFirstBlockWithTime(int64_t time) override\n+    {\n+        CBlockIndex* block = ::chainActive.FindEarliestAtLeast(time);\n+        if (block) {\n+            return block->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findFirstBlockWithTimeAndHeight(int64_t time, int height) override\n+    {\n+        for (CBlockIndex* block = ::chainActive[height]; block; block = ::chainActive.Next(block)) {\n+            if (block->GetBlockTime() >= time) {\n+                return block->nHeight;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findPruned(int start_height, Optional<int> stop_height) override\n+    {\n+        if (::fPruneMode) {\n+            CBlockIndex* block = stop_height ? ::chainActive[*stop_height] : ::chainActive.Tip();\n+            while (block && block->nHeight >= start_height) {\n+                if (!(block->nStatus & BLOCK_HAVE_DATA)) {\n+                    return block->nHeight;\n+                }\n+                block = block->pprev;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findFork(const uint256& hash, Optional<int>* height) override\n+    {\n+        const CBlockIndex *block{nullptr}, *fork{nullptr};\n+        auto it = ::mapBlockIndex.find(hash);\n+        if (it != ::mapBlockIndex.end()) {\n+            block = it->second;\n+            fork = ::chainActive.FindFork(block);\n+        }\n+        if (height) {",
      "path": "src/interfaces/chain.cpp",
      "position": null,
      "original_position": 121,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "e44e639558b1084f14a97847592616c3df9fff38",
      "in_reply_to_id": 219412247,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@flack Good point! I'll implement that!",
      "created_at": "2018-09-23T17:22:36Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r219705466",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/219705466"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 126,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/224318014",
      "pull_request_review_id": 163653229,
      "id": 224318014,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNDMxODAxNA==",
      "diff_hunk": "@@ -0,0 +1,454 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <interfaces/chain.h>\n+\n+#include <chain.h>\n+#include <chainparams.h>\n+#include <interfaces/handler.h>\n+#include <interfaces/wallet.h>\n+#include <net.h>\n+#include <policy/fees.h>\n+#include <policy/policy.h>\n+#include <policy/rbf.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <protocol.h>\n+#include <rpc/mining.h>\n+#include <rpc/protocol.h>\n+#include <rpc/server.h>\n+#include <sync.h>\n+#include <threadsafety.h>\n+#include <timedata.h>\n+#include <txmempool.h>\n+#include <ui_interface.h>\n+#include <uint256.h>\n+#include <univalue.h>\n+#include <util.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+\n+#include <algorithm>\n+#include <map>\n+#include <memory>\n+#include <tuple>\n+#include <unordered_map>\n+#include <utility>\n+\n+class CReserveScript;\n+\n+namespace interfaces {\n+namespace {\n+\n+//! Extension of std::reference_wrapper with operator< for use as map key.\n+template <typename T>\n+class Ref : public std::reference_wrapper<T>\n+{\n+public:\n+    using std::reference_wrapper<T>::reference_wrapper;\n+    bool operator<(const Ref<T>& other) const { return this->get() < other.get(); }\n+};\n+\n+class LockImpl : public Chain::Lock\n+{\n+    Optional<int> getHeight() override\n+    {\n+        int height = ::chainActive.Height();\n+        if (height >= 0) {\n+            return height;\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> getBlockHeight(const uint256& hash) override\n+    {\n+        auto it = ::mapBlockIndex.find(hash);\n+        if (it != ::mapBlockIndex.end() && it->second) {\n+            if (::chainActive.Contains(it->second)) {\n+                return it->second->nHeight;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    int getBlockDepth(const uint256& hash) override\n+    {\n+        const Optional<int> tip_height = getHeight();\n+        const Optional<int> height = getBlockHeight(hash);\n+        return tip_height && height ? *tip_height - *height + 1 : 0;\n+    }\n+    uint256 getBlockHash(int height) override { return ::chainActive[height]->GetBlockHash(); }\n+    int64_t getBlockTime(int height) override { return ::chainActive[height]->GetBlockTime(); }\n+    int64_t getBlockMedianTimePast(int height) override { return ::chainActive[height]->GetMedianTimePast(); }\n+    bool haveBlockOnDisk(int height) override\n+    {\n+        CBlockIndex* block = ::chainActive[height];\n+        return block && ((block->nStatus & BLOCK_HAVE_DATA) != 0) && block->nTx > 0;\n+    }\n+    Optional<int> findFirstBlockWithTime(int64_t time) override\n+    {\n+        CBlockIndex* block = ::chainActive.FindEarliestAtLeast(time);\n+        if (block) {\n+            return block->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findFirstBlockWithTimeAndHeight(int64_t time, int height) override\n+    {\n+        for (CBlockIndex* block = ::chainActive[height]; block; block = ::chainActive.Next(block)) {\n+            if (block->GetBlockTime() >= time) {\n+                return block->nHeight;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findPruned(int start_height, Optional<int> stop_height) override\n+    {\n+        if (::fPruneMode) {\n+            CBlockIndex* block = stop_height ? ::chainActive[*stop_height] : ::chainActive.Tip();\n+            while (block && block->nHeight >= start_height) {\n+                if ((block->nStatus & BLOCK_HAVE_DATA) == 0) {\n+                    return block->nHeight;\n+                }\n+                block = block->pprev;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findFork(const uint256& hash, Optional<int>* height) override\n+    {\n+        const CBlockIndex *block{nullptr}, *fork{nullptr};\n+        auto it = ::mapBlockIndex.find(hash);\n+        if (it != ::mapBlockIndex.end()) {\n+            block = it->second;\n+            fork = ::chainActive.FindFork(block);\n+        }\n+        if (height != nullptr) {\n+            if (block) {\n+                *height = block->nHeight;\n+            } else {\n+                height->reset();\n+            }\n+        }\n+        if (fork) {\n+            return fork->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    bool isPotentialTip(const uint256& hash) override\n+    {\n+        if (::chainActive.Tip()->GetBlockHash() == hash) return true;\n+        auto it = ::mapBlockIndex.find(hash);\n+        return it != ::mapBlockIndex.end() && it->second->GetAncestor(::chainActive.Height()) == ::chainActive.Tip();\n+    }\n+    CBlockLocator getLocator() override { return ::chainActive.GetLocator(); }\n+    Optional<int> findLocatorFork(const CBlockLocator& locator) override\n+    {\n+        if (CBlockIndex* fork = FindForkInGlobalIndex(::chainActive, locator)) {\n+            return fork->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    bool checkFinalTx(const CTransaction& tx) override\n+    {\n+        LockAnnotation lock(::cs_main);\n+        return CheckFinalTx(tx);\n+    }\n+    bool acceptToMemoryPool(CTransactionRef tx, CValidationState& state) override\n+    {\n+        LockAnnotation lock(::cs_main);\n+        return AcceptToMemoryPool(::mempool, state, tx, nullptr /* missing inputs */, nullptr /* txn replaced */,\n+            false /* bypass limits */, ::maxTxFee /* absurd fee */);\n+    }\n+};\n+\n+class LockingStateImpl : public LockImpl, public UniqueLock<CCriticalSection>\n+{\n+    using UniqueLock::UniqueLock;\n+};\n+\n+class HandlerImpl : public Handler\n+{\n+public:\n+    explicit HandlerImpl(Chain::Notifications& notifications) : m_forwarder(notifications) {}\n+    ~HandlerImpl() override\n+    {\n+        // It is important to disconnect here in the HandlerImpl destructor,\n+        // instead of in the HandleImpl::Forwarder destructor, because\n+        // UnregisterAllValidationInterfaces() internally accesses Forwarder\n+        // virtual methods which are no longer available after Forwarder object\n+        // has begun to be being destroyed.\n+        m_forwarder.disconnect();\n+    }\n+    void disconnect() override { m_forwarder.disconnect(); }\n+\n+    struct Forwarder : CValidationInterface\n+    {\n+        explicit Forwarder(Chain::Notifications& notifications) : m_notifications(&notifications)\n+        {\n+            RegisterValidationInterface(this);\n+        }\n+        void disconnect()\n+        {\n+            if (m_notifications) {\n+                m_notifications = nullptr;\n+                UnregisterValidationInterface(this);\n+            }\n+        }\n+        void TransactionAddedToMempool(const CTransactionRef& tx) override\n+        {\n+            m_notifications->TransactionAddedToMempool(tx);\n+        }\n+        void TransactionRemovedFromMempool(const CTransactionRef& tx) override\n+        {\n+            m_notifications->TransactionRemovedFromMempool(tx);\n+        }\n+        void BlockConnected(const std::shared_ptr<const CBlock>& block,\n+            const CBlockIndex* index,\n+            const std::vector<CTransactionRef>& tx_conflicted) override\n+        {\n+            m_notifications->BlockConnected(*block, index->GetBlockHash(), tx_conflicted);\n+        }\n+        void BlockDisconnected(const std::shared_ptr<const CBlock>& block) override\n+        {\n+            m_notifications->BlockDisconnected(*block);\n+        }\n+        void ChainStateFlushed(const CBlockLocator& locator) override { m_notifications->ChainStateFlushed(locator); }\n+        void ResendWalletTransactions(int64_t best_block_time, CConnman*) override\n+        {\n+            m_notifications->ResendWalletTransactions(best_block_time);\n+        }\n+\n+        Chain::Notifications* m_notifications;\n+    };\n+\n+    Forwarder m_forwarder;\n+};\n+\n+class ChainImpl : public Chain\n+{\n+public:\n+    std::unique_ptr<Chain::Lock> lock(bool try_lock) override\n+    {\n+        auto result = MakeUnique<LockingStateImpl>(::cs_main, \"cs_main\", __FILE__, __LINE__, try_lock);\n+        if (try_lock && result && !*result) return {};\n+        // std::move necessary on some compilers due to conversion from\n+        // LockingStateImpl to Lock pointer\n+        return std::move(result);\n+    }\n+    std::unique_ptr<Chain::Lock> assumeLocked() override { return MakeUnique<LockImpl>(); }\n+    bool findBlock(const uint256& hash, CBlock* block, int64_t* time, int64_t* time_max) override\n+    {\n+        CBlockIndex* index;\n+        {\n+            LOCK(cs_main);\n+            auto it = ::mapBlockIndex.find(hash);\n+            if (it == ::mapBlockIndex.end()) {\n+                return false;\n+            }\n+            index = it->second;\n+            if (time) {\n+                *time = index->GetBlockTime();\n+            }\n+            if (time_max) {\n+                *time_max = index->GetBlockTimeMax();\n+            }\n+        }\n+        if (block && !ReadBlockFromDisk(*block, index, Params().GetConsensus())) {\n+            block->SetNull();\n+        }\n+        return true;\n+    }\n+    std::vector<Coin> findCoins(const std::vector<COutPoint>& outputs) override\n+    {\n+        std::vector<Coin> coins;\n+        LOCK2(cs_main, ::mempool.cs);\n+        assert(pcoinsTip);\n+        CCoinsViewCache& chain_view = *::pcoinsTip;\n+        CCoinsViewMemPool mempool_view(&chain_view, ::mempool);\n+        for (const auto& output : outputs) {\n+            Coin coin;\n+            mempool_view.GetCoin(output, coin);\n+            coins.emplace_back(std::move(coin));\n+        }\n+        return coins;\n+    }\n+    double guessVerificationProgress(const uint256& block_hash) override\n+    {\n+        LOCK(cs_main);\n+        auto it = ::mapBlockIndex.find(block_hash);\n+        return GuessVerificationProgress(Params().TxData(), it != ::mapBlockIndex.end() ? it->second : nullptr);\n+    }\n+    int64_t getVirtualTransactionSize(const CTransaction& tx) override { return GetVirtualTransactionSize(tx); }\n+    RBFTransactionState isRBFOptIn(const CTransaction& tx) override\n+    {\n+        LOCK(::mempool.cs);\n+        return IsRBFOptIn(tx, ::mempool);\n+    }\n+    bool hasDescendantsInMempool(const uint256& txid) override\n+    {\n+        LOCK(::mempool.cs);\n+        auto it_mp = ::mempool.mapTx.find(txid);\n+        return it_mp != ::mempool.mapTx.end() && it_mp->GetCountWithDescendants() > 1;\n+    }\n+    bool relayTransaction(const uint256& txid) override\n+    {\n+        if (g_connman) {\n+            CInv inv(MSG_TX, txid);\n+            g_connman->ForEachNode([&inv](CNode* node) { node->PushInventory(inv); });\n+            return true;\n+        }\n+        return false;\n+    }\n+    void getTransactionAncestry(const uint256& txid, size_t& ancestors, size_t& descendants) override\n+    {\n+        ::mempool.GetTransactionAncestry(txid, ancestors, descendants);\n+    }\n+    bool checkChainLimits(CTransactionRef tx) override\n+    {\n+        LockPoints lp;\n+        CTxMemPoolEntry entry(tx, 0, 0, 0, false, 0, lp);\n+        CTxMemPool::setEntries setAncestors;\n+        size_t nLimitAncestors = gArgs.GetArg(\"-limitancestorcount\", DEFAULT_ANCESTOR_LIMIT);\n+        size_t nLimitAncestorSize = gArgs.GetArg(\"-limitancestorsize\", DEFAULT_ANCESTOR_SIZE_LIMIT) * 1000;\n+        size_t nLimitDescendants = gArgs.GetArg(\"-limitdescendantcount\", DEFAULT_DESCENDANT_LIMIT);\n+        size_t nLimitDescendantSize = gArgs.GetArg(\"-limitdescendantsize\", DEFAULT_DESCENDANT_SIZE_LIMIT) * 1000;\n+        std::string errString;\n+        LOCK(::mempool.cs);\n+        return ::mempool.CalculateMemPoolAncestors(entry, setAncestors, nLimitAncestors, nLimitAncestorSize,\n+            nLimitDescendants, nLimitDescendantSize, errString);\n+    }\n+    CFeeRate estimateSmartFee(int num_blocks, bool conservative, FeeCalculation* calc) override\n+    {\n+        return ::feeEstimator.estimateSmartFee(num_blocks, calc, conservative);\n+    }\n+    int estimateMaxBlocks() override { return ::feeEstimator.HighestTargetTracked(FeeEstimateHorizon::LONG_HALFLIFE); }",
      "path": "src/interfaces/chain.cpp",
      "position": null,
      "original_position": 324,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "45b23efaada081a7be9e255df59670f4704c45d1",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "An implicit conversion from `unsigned int` to `int` takes place here. Return an unsigned integer instead?",
      "created_at": "2018-10-11T05:24:57Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r224318014",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/224318014"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 324,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/224318332",
      "pull_request_review_id": 163653596,
      "id": 224318332,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNDMxODMzMg==",
      "diff_hunk": "@@ -0,0 +1,454 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <interfaces/chain.h>\n+\n+#include <chain.h>\n+#include <chainparams.h>\n+#include <interfaces/handler.h>\n+#include <interfaces/wallet.h>\n+#include <net.h>\n+#include <policy/fees.h>\n+#include <policy/policy.h>\n+#include <policy/rbf.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <protocol.h>\n+#include <rpc/mining.h>\n+#include <rpc/protocol.h>\n+#include <rpc/server.h>\n+#include <sync.h>\n+#include <threadsafety.h>\n+#include <timedata.h>\n+#include <txmempool.h>\n+#include <ui_interface.h>\n+#include <uint256.h>\n+#include <univalue.h>\n+#include <util.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+\n+#include <algorithm>\n+#include <map>\n+#include <memory>\n+#include <tuple>\n+#include <unordered_map>\n+#include <utility>\n+\n+class CReserveScript;\n+\n+namespace interfaces {\n+namespace {\n+\n+//! Extension of std::reference_wrapper with operator< for use as map key.\n+template <typename T>\n+class Ref : public std::reference_wrapper<T>\n+{\n+public:\n+    using std::reference_wrapper<T>::reference_wrapper;\n+    bool operator<(const Ref<T>& other) const { return this->get() < other.get(); }\n+};\n+\n+class LockImpl : public Chain::Lock\n+{\n+    Optional<int> getHeight() override\n+    {\n+        int height = ::chainActive.Height();\n+        if (height >= 0) {\n+            return height;\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> getBlockHeight(const uint256& hash) override\n+    {\n+        auto it = ::mapBlockIndex.find(hash);\n+        if (it != ::mapBlockIndex.end() && it->second) {\n+            if (::chainActive.Contains(it->second)) {\n+                return it->second->nHeight;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    int getBlockDepth(const uint256& hash) override\n+    {\n+        const Optional<int> tip_height = getHeight();\n+        const Optional<int> height = getBlockHeight(hash);\n+        return tip_height && height ? *tip_height - *height + 1 : 0;\n+    }\n+    uint256 getBlockHash(int height) override { return ::chainActive[height]->GetBlockHash(); }\n+    int64_t getBlockTime(int height) override { return ::chainActive[height]->GetBlockTime(); }\n+    int64_t getBlockMedianTimePast(int height) override { return ::chainActive[height]->GetMedianTimePast(); }\n+    bool haveBlockOnDisk(int height) override\n+    {\n+        CBlockIndex* block = ::chainActive[height];\n+        return block && ((block->nStatus & BLOCK_HAVE_DATA) != 0) && block->nTx > 0;\n+    }\n+    Optional<int> findFirstBlockWithTime(int64_t time) override\n+    {\n+        CBlockIndex* block = ::chainActive.FindEarliestAtLeast(time);\n+        if (block) {\n+            return block->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findFirstBlockWithTimeAndHeight(int64_t time, int height) override\n+    {\n+        for (CBlockIndex* block = ::chainActive[height]; block; block = ::chainActive.Next(block)) {\n+            if (block->GetBlockTime() >= time) {\n+                return block->nHeight;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findPruned(int start_height, Optional<int> stop_height) override\n+    {\n+        if (::fPruneMode) {\n+            CBlockIndex* block = stop_height ? ::chainActive[*stop_height] : ::chainActive.Tip();\n+            while (block && block->nHeight >= start_height) {\n+                if ((block->nStatus & BLOCK_HAVE_DATA) == 0) {\n+                    return block->nHeight;\n+                }\n+                block = block->pprev;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findFork(const uint256& hash, Optional<int>* height) override\n+    {\n+        const CBlockIndex *block{nullptr}, *fork{nullptr};\n+        auto it = ::mapBlockIndex.find(hash);\n+        if (it != ::mapBlockIndex.end()) {\n+            block = it->second;\n+            fork = ::chainActive.FindFork(block);\n+        }\n+        if (height != nullptr) {\n+            if (block) {\n+                *height = block->nHeight;\n+            } else {\n+                height->reset();\n+            }\n+        }\n+        if (fork) {\n+            return fork->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    bool isPotentialTip(const uint256& hash) override\n+    {\n+        if (::chainActive.Tip()->GetBlockHash() == hash) return true;\n+        auto it = ::mapBlockIndex.find(hash);\n+        return it != ::mapBlockIndex.end() && it->second->GetAncestor(::chainActive.Height()) == ::chainActive.Tip();\n+    }\n+    CBlockLocator getLocator() override { return ::chainActive.GetLocator(); }\n+    Optional<int> findLocatorFork(const CBlockLocator& locator) override\n+    {\n+        if (CBlockIndex* fork = FindForkInGlobalIndex(::chainActive, locator)) {\n+            return fork->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    bool checkFinalTx(const CTransaction& tx) override\n+    {\n+        LockAnnotation lock(::cs_main);\n+        return CheckFinalTx(tx);\n+    }\n+    bool acceptToMemoryPool(CTransactionRef tx, CValidationState& state) override\n+    {\n+        LockAnnotation lock(::cs_main);\n+        return AcceptToMemoryPool(::mempool, state, tx, nullptr /* missing inputs */, nullptr /* txn replaced */,\n+            false /* bypass limits */, ::maxTxFee /* absurd fee */);\n+    }\n+};\n+\n+class LockingStateImpl : public LockImpl, public UniqueLock<CCriticalSection>\n+{\n+    using UniqueLock::UniqueLock;\n+};\n+\n+class HandlerImpl : public Handler\n+{\n+public:\n+    explicit HandlerImpl(Chain::Notifications& notifications) : m_forwarder(notifications) {}\n+    ~HandlerImpl() override\n+    {\n+        // It is important to disconnect here in the HandlerImpl destructor,\n+        // instead of in the HandleImpl::Forwarder destructor, because\n+        // UnregisterAllValidationInterfaces() internally accesses Forwarder\n+        // virtual methods which are no longer available after Forwarder object\n+        // has begun to be being destroyed.\n+        m_forwarder.disconnect();\n+    }\n+    void disconnect() override { m_forwarder.disconnect(); }\n+\n+    struct Forwarder : CValidationInterface\n+    {\n+        explicit Forwarder(Chain::Notifications& notifications) : m_notifications(&notifications)\n+        {\n+            RegisterValidationInterface(this);\n+        }\n+        void disconnect()\n+        {\n+            if (m_notifications) {\n+                m_notifications = nullptr;\n+                UnregisterValidationInterface(this);\n+            }\n+        }\n+        void TransactionAddedToMempool(const CTransactionRef& tx) override\n+        {\n+            m_notifications->TransactionAddedToMempool(tx);\n+        }\n+        void TransactionRemovedFromMempool(const CTransactionRef& tx) override\n+        {\n+            m_notifications->TransactionRemovedFromMempool(tx);\n+        }\n+        void BlockConnected(const std::shared_ptr<const CBlock>& block,\n+            const CBlockIndex* index,\n+            const std::vector<CTransactionRef>& tx_conflicted) override\n+        {\n+            m_notifications->BlockConnected(*block, index->GetBlockHash(), tx_conflicted);\n+        }\n+        void BlockDisconnected(const std::shared_ptr<const CBlock>& block) override\n+        {\n+            m_notifications->BlockDisconnected(*block);\n+        }\n+        void ChainStateFlushed(const CBlockLocator& locator) override { m_notifications->ChainStateFlushed(locator); }\n+        void ResendWalletTransactions(int64_t best_block_time, CConnman*) override\n+        {\n+            m_notifications->ResendWalletTransactions(best_block_time);\n+        }\n+\n+        Chain::Notifications* m_notifications;\n+    };\n+\n+    Forwarder m_forwarder;\n+};\n+\n+class ChainImpl : public Chain\n+{\n+public:\n+    std::unique_ptr<Chain::Lock> lock(bool try_lock) override\n+    {\n+        auto result = MakeUnique<LockingStateImpl>(::cs_main, \"cs_main\", __FILE__, __LINE__, try_lock);\n+        if (try_lock && result && !*result) return {};\n+        // std::move necessary on some compilers due to conversion from\n+        // LockingStateImpl to Lock pointer\n+        return std::move(result);\n+    }\n+    std::unique_ptr<Chain::Lock> assumeLocked() override { return MakeUnique<LockImpl>(); }\n+    bool findBlock(const uint256& hash, CBlock* block, int64_t* time, int64_t* time_max) override\n+    {\n+        CBlockIndex* index;\n+        {\n+            LOCK(cs_main);\n+            auto it = ::mapBlockIndex.find(hash);\n+            if (it == ::mapBlockIndex.end()) {\n+                return false;\n+            }\n+            index = it->second;\n+            if (time) {\n+                *time = index->GetBlockTime();\n+            }\n+            if (time_max) {\n+                *time_max = index->GetBlockTimeMax();\n+            }\n+        }\n+        if (block && !ReadBlockFromDisk(*block, index, Params().GetConsensus())) {\n+            block->SetNull();\n+        }\n+        return true;\n+    }\n+    std::vector<Coin> findCoins(const std::vector<COutPoint>& outputs) override\n+    {\n+        std::vector<Coin> coins;\n+        LOCK2(cs_main, ::mempool.cs);\n+        assert(pcoinsTip);\n+        CCoinsViewCache& chain_view = *::pcoinsTip;\n+        CCoinsViewMemPool mempool_view(&chain_view, ::mempool);\n+        for (const auto& output : outputs) {\n+            Coin coin;\n+            mempool_view.GetCoin(output, coin);\n+            coins.emplace_back(std::move(coin));\n+        }\n+        return coins;\n+    }\n+    double guessVerificationProgress(const uint256& block_hash) override\n+    {\n+        LOCK(cs_main);\n+        auto it = ::mapBlockIndex.find(block_hash);\n+        return GuessVerificationProgress(Params().TxData(), it != ::mapBlockIndex.end() ? it->second : nullptr);\n+    }\n+    int64_t getVirtualTransactionSize(const CTransaction& tx) override { return GetVirtualTransactionSize(tx); }\n+    RBFTransactionState isRBFOptIn(const CTransaction& tx) override\n+    {\n+        LOCK(::mempool.cs);\n+        return IsRBFOptIn(tx, ::mempool);\n+    }\n+    bool hasDescendantsInMempool(const uint256& txid) override\n+    {\n+        LOCK(::mempool.cs);\n+        auto it_mp = ::mempool.mapTx.find(txid);\n+        return it_mp != ::mempool.mapTx.end() && it_mp->GetCountWithDescendants() > 1;\n+    }\n+    bool relayTransaction(const uint256& txid) override\n+    {\n+        if (g_connman) {\n+            CInv inv(MSG_TX, txid);\n+            g_connman->ForEachNode([&inv](CNode* node) { node->PushInventory(inv); });\n+            return true;\n+        }\n+        return false;\n+    }\n+    void getTransactionAncestry(const uint256& txid, size_t& ancestors, size_t& descendants) override\n+    {\n+        ::mempool.GetTransactionAncestry(txid, ancestors, descendants);\n+    }\n+    bool checkChainLimits(CTransactionRef tx) override\n+    {\n+        LockPoints lp;\n+        CTxMemPoolEntry entry(tx, 0, 0, 0, false, 0, lp);\n+        CTxMemPool::setEntries setAncestors;\n+        size_t nLimitAncestors = gArgs.GetArg(\"-limitancestorcount\", DEFAULT_ANCESTOR_LIMIT);\n+        size_t nLimitAncestorSize = gArgs.GetArg(\"-limitancestorsize\", DEFAULT_ANCESTOR_SIZE_LIMIT) * 1000;\n+        size_t nLimitDescendants = gArgs.GetArg(\"-limitdescendantcount\", DEFAULT_DESCENDANT_LIMIT);\n+        size_t nLimitDescendantSize = gArgs.GetArg(\"-limitdescendantsize\", DEFAULT_DESCENDANT_SIZE_LIMIT) * 1000;\n+        std::string errString;\n+        LOCK(::mempool.cs);\n+        return ::mempool.CalculateMemPoolAncestors(entry, setAncestors, nLimitAncestors, nLimitAncestorSize,\n+            nLimitDescendants, nLimitDescendantSize, errString);\n+    }\n+    CFeeRate estimateSmartFee(int num_blocks, bool conservative, FeeCalculation* calc) override\n+    {\n+        return ::feeEstimator.estimateSmartFee(num_blocks, calc, conservative);\n+    }\n+    int estimateMaxBlocks() override { return ::feeEstimator.HighestTargetTracked(FeeEstimateHorizon::LONG_HALFLIFE); }\n+    CFeeRate poolMinFee() override\n+    {\n+        return ::mempool.GetMinFee(gArgs.GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000);\n+    }\n+    bool getPruneMode() override { return ::fPruneMode; }\n+    bool p2pEnabled() override { return g_connman != nullptr; }\n+    bool isInitialBlockDownload() override { return IsInitialBlockDownload(); }\n+    int64_t getAdjustedTime() override { return GetAdjustedTime(); }\n+    void initMessage(const std::string& message) override { ::uiInterface.InitMessage(message); }\n+    void initWarning(const std::string& message) override { InitWarning(message); }\n+    void initError(const std::string& message) override { InitError(message); }\n+    void loadWallet(std::unique_ptr<Wallet> wallet) override { ::uiInterface.LoadWallet(wallet); }\n+    UniValue generateBlocks(std::shared_ptr<CReserveScript> coinbase_script,\n+        int num_blocks,\n+        uint64_t max_tries,\n+        bool keep_script) override\n+    {\n+        return ::generateBlocks(coinbase_script, num_blocks, max_tries, keep_script);\n+    }\n+    unsigned int parseConfirmTarget(const UniValue& value) override { return ParseConfirmTarget(value); }\n+    std::unique_ptr<Handler> handleNotifications(Notifications& notifications) override\n+    {\n+        return MakeUnique<HandlerImpl>(notifications);\n+    }\n+    void waitForNotifications() override { SyncWithValidationInterfaceQueue(); }\n+    std::unique_ptr<Handler> handleRpc(const CRPCCommand& command) override;\n+\n+    //! Map of RPC method name to forwarder. If multiple clients provide\n+    //! implementations of the same RPC method, the RPC forwarder can dispatch\n+    //! between them.\n+    class RpcForwarder;\n+    std::map<Ref<const std::string>, RpcForwarder> m_rpc_forwarders;\n+};\n+\n+//! Forwarder for one RPC method.\n+class ChainImpl::RpcForwarder\n+{\n+public:\n+    explicit RpcForwarder(const CRPCCommand& command) : m_command(command)\n+    {\n+        m_command.actor = [this](const JSONRPCRequest& request) { return forwardRequest(request); };\n+    }\n+\n+    bool registerForwarder() { return ::tableRPC.appendCommand(m_command.name, &m_command); }\n+\n+    void addCommand(const CRPCCommand& command) { m_commands.emplace_back(&command); }\n+\n+    void removeCommand(const CRPCCommand& command)\n+    {\n+        m_commands.erase(std::remove(m_commands.begin(), m_commands.end(), &command), m_commands.end());\n+    }\n+\n+    UniValue forwardRequest(const JSONRPCRequest& request) const\n+    {\n+        // Simple forwarding of RPC requests. This just sends the request to the\n+        // first client that registered a handler for the RPC method. If the\n+        // handler throws a wallet not found exception, this will retry\n+        // forwarding to the next handler (if any).\n+        //\n+        // This forwarding mechanism could be made more efficient (peeking\n+        // inside the RPC request for wallet name and sending it directly to the\n+        // right handler), but right now all wallets are in-process so there is\n+        // only ever a single handler, and in the future it isn't clear if we\n+        // will want we want to keep forwarding RPCs at all (clients could just\n+        // listen for their own RPCs).\n+        for (auto it = m_commands.begin(); it != m_commands.end();) {\n+            const CRPCCommand& command = **it++;\n+            try {\n+                return command.actor(request);\n+            } catch (const UniValue& e) {\n+                if (it != m_commands.end()) {\n+                    const UniValue& code = e[\"code\"];\n+                    if (code.isNum() && code.get_int() == RPC_WALLET_NOT_FOUND) {\n+                        continue;\n+                    }\n+                }\n+                throw;\n+            }\n+        }\n+\n+        // This will only be reached if m_commands is empty. (Because the RPC\n+        // server provides an appendCommand, but no removeCommand method, it\n+        // will keep sending requests here even if there are no clients left to\n+        // forward to.)\n+        throw JSONRPCError(RPC_METHOD_NOT_FOUND, \"Method not found\");\n+    };",
      "path": "src/interfaces/chain.cpp",
      "position": null,
      "original_position": 410,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "45b23efaada081a7be9e255df59670f4704c45d1",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: Remove `;` :-)",
      "created_at": "2018-10-11T05:27:31Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r224318332",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/224318332"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 410,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/224318496",
      "pull_request_review_id": 163653786,
      "id": 224318496,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNDMxODQ5Ng==",
      "diff_hunk": "@@ -754,22 +757,44 @@ static UniValue combinerawtransaction(const JSONRPCRequest& request)\n     return EncodeHexTx(mergedTx);\n }\n \n-UniValue SignTransaction(CMutableTransaction& mtx, const UniValue& prevTxsUnival, CBasicKeyStore *keystore, bool is_temp_keystore, const UniValue& hashType)\n+// Wrapper to help add a single coin to CCoinsViewCache.\n+class CoinFill : private CCoinsView\n+{\n+public:\n+    CoinFill(CCoinsViewCache& cache, const COutPoint &output, Coin&& coin, CCoinsView &backend) : m_cache(cache), m_output(output), m_coin(std::move(coin)), m_backend(backend) {\n+        m_cache.SetBackend(*this);\n+        m_cache.AccessCoin(output);\n+    }\n+    ~CoinFill() {",
      "path": "src/rpc/rawtransaction.cpp",
      "position": null,
      "original_position": 30,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "45b23efaada081a7be9e255df59670f4704c45d1",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Should be marked `override`?",
      "created_at": "2018-10-11T05:28:52Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r224318496",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/224318496"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 768,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/225142332",
      "pull_request_review_id": 164676052,
      "id": 225142332,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNTE0MjMzMg==",
      "diff_hunk": "@@ -0,0 +1,454 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <interfaces/chain.h>\n+\n+#include <chain.h>\n+#include <chainparams.h>\n+#include <interfaces/handler.h>\n+#include <interfaces/wallet.h>\n+#include <net.h>\n+#include <policy/fees.h>\n+#include <policy/policy.h>\n+#include <policy/rbf.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <protocol.h>\n+#include <rpc/mining.h>\n+#include <rpc/protocol.h>\n+#include <rpc/server.h>\n+#include <sync.h>\n+#include <threadsafety.h>\n+#include <timedata.h>\n+#include <txmempool.h>\n+#include <ui_interface.h>\n+#include <uint256.h>\n+#include <univalue.h>\n+#include <util.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+\n+#include <algorithm>\n+#include <map>\n+#include <memory>\n+#include <tuple>\n+#include <unordered_map>\n+#include <utility>\n+\n+class CReserveScript;\n+\n+namespace interfaces {\n+namespace {\n+\n+//! Extension of std::reference_wrapper with operator< for use as map key.\n+template <typename T>\n+class Ref : public std::reference_wrapper<T>\n+{\n+public:\n+    using std::reference_wrapper<T>::reference_wrapper;\n+    bool operator<(const Ref<T>& other) const { return this->get() < other.get(); }\n+};\n+\n+class LockImpl : public Chain::Lock\n+{\n+    Optional<int> getHeight() override\n+    {\n+        int height = ::chainActive.Height();\n+        if (height >= 0) {\n+            return height;\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> getBlockHeight(const uint256& hash) override\n+    {\n+        auto it = ::mapBlockIndex.find(hash);\n+        if (it != ::mapBlockIndex.end() && it->second) {\n+            if (::chainActive.Contains(it->second)) {\n+                return it->second->nHeight;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    int getBlockDepth(const uint256& hash) override\n+    {\n+        const Optional<int> tip_height = getHeight();\n+        const Optional<int> height = getBlockHeight(hash);\n+        return tip_height && height ? *tip_height - *height + 1 : 0;\n+    }\n+    uint256 getBlockHash(int height) override { return ::chainActive[height]->GetBlockHash(); }\n+    int64_t getBlockTime(int height) override { return ::chainActive[height]->GetBlockTime(); }\n+    int64_t getBlockMedianTimePast(int height) override { return ::chainActive[height]->GetMedianTimePast(); }\n+    bool haveBlockOnDisk(int height) override\n+    {\n+        CBlockIndex* block = ::chainActive[height];\n+        return block && ((block->nStatus & BLOCK_HAVE_DATA) != 0) && block->nTx > 0;\n+    }\n+    Optional<int> findFirstBlockWithTime(int64_t time) override\n+    {\n+        CBlockIndex* block = ::chainActive.FindEarliestAtLeast(time);\n+        if (block) {\n+            return block->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findFirstBlockWithTimeAndHeight(int64_t time, int height) override\n+    {\n+        for (CBlockIndex* block = ::chainActive[height]; block; block = ::chainActive.Next(block)) {\n+            if (block->GetBlockTime() >= time) {\n+                return block->nHeight;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findPruned(int start_height, Optional<int> stop_height) override\n+    {\n+        if (::fPruneMode) {\n+            CBlockIndex* block = stop_height ? ::chainActive[*stop_height] : ::chainActive.Tip();\n+            while (block && block->nHeight >= start_height) {\n+                if ((block->nStatus & BLOCK_HAVE_DATA) == 0) {\n+                    return block->nHeight;\n+                }\n+                block = block->pprev;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findFork(const uint256& hash, Optional<int>* height) override\n+    {\n+        const CBlockIndex *block{nullptr}, *fork{nullptr};\n+        auto it = ::mapBlockIndex.find(hash);\n+        if (it != ::mapBlockIndex.end()) {\n+            block = it->second;\n+            fork = ::chainActive.FindFork(block);\n+        }\n+        if (height != nullptr) {\n+            if (block) {\n+                *height = block->nHeight;\n+            } else {\n+                height->reset();\n+            }\n+        }\n+        if (fork) {\n+            return fork->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    bool isPotentialTip(const uint256& hash) override\n+    {\n+        if (::chainActive.Tip()->GetBlockHash() == hash) return true;\n+        auto it = ::mapBlockIndex.find(hash);\n+        return it != ::mapBlockIndex.end() && it->second->GetAncestor(::chainActive.Height()) == ::chainActive.Tip();\n+    }\n+    CBlockLocator getLocator() override { return ::chainActive.GetLocator(); }\n+    Optional<int> findLocatorFork(const CBlockLocator& locator) override\n+    {\n+        if (CBlockIndex* fork = FindForkInGlobalIndex(::chainActive, locator)) {\n+            return fork->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    bool checkFinalTx(const CTransaction& tx) override\n+    {\n+        LockAnnotation lock(::cs_main);\n+        return CheckFinalTx(tx);\n+    }\n+    bool acceptToMemoryPool(CTransactionRef tx, CValidationState& state) override\n+    {\n+        LockAnnotation lock(::cs_main);\n+        return AcceptToMemoryPool(::mempool, state, tx, nullptr /* missing inputs */, nullptr /* txn replaced */,\n+            false /* bypass limits */, ::maxTxFee /* absurd fee */);\n+    }\n+};\n+\n+class LockingStateImpl : public LockImpl, public UniqueLock<CCriticalSection>\n+{\n+    using UniqueLock::UniqueLock;\n+};\n+\n+class HandlerImpl : public Handler\n+{\n+public:\n+    explicit HandlerImpl(Chain::Notifications& notifications) : m_forwarder(notifications) {}\n+    ~HandlerImpl() override\n+    {\n+        // It is important to disconnect here in the HandlerImpl destructor,\n+        // instead of in the HandleImpl::Forwarder destructor, because\n+        // UnregisterAllValidationInterfaces() internally accesses Forwarder\n+        // virtual methods which are no longer available after Forwarder object\n+        // has begun to be being destroyed.\n+        m_forwarder.disconnect();\n+    }\n+    void disconnect() override { m_forwarder.disconnect(); }\n+\n+    struct Forwarder : CValidationInterface\n+    {\n+        explicit Forwarder(Chain::Notifications& notifications) : m_notifications(&notifications)\n+        {\n+            RegisterValidationInterface(this);\n+        }\n+        void disconnect()\n+        {\n+            if (m_notifications) {\n+                m_notifications = nullptr;\n+                UnregisterValidationInterface(this);\n+            }\n+        }\n+        void TransactionAddedToMempool(const CTransactionRef& tx) override\n+        {\n+            m_notifications->TransactionAddedToMempool(tx);\n+        }\n+        void TransactionRemovedFromMempool(const CTransactionRef& tx) override\n+        {\n+            m_notifications->TransactionRemovedFromMempool(tx);\n+        }\n+        void BlockConnected(const std::shared_ptr<const CBlock>& block,\n+            const CBlockIndex* index,\n+            const std::vector<CTransactionRef>& tx_conflicted) override\n+        {\n+            m_notifications->BlockConnected(*block, index->GetBlockHash(), tx_conflicted);\n+        }\n+        void BlockDisconnected(const std::shared_ptr<const CBlock>& block) override\n+        {\n+            m_notifications->BlockDisconnected(*block);\n+        }\n+        void ChainStateFlushed(const CBlockLocator& locator) override { m_notifications->ChainStateFlushed(locator); }\n+        void ResendWalletTransactions(int64_t best_block_time, CConnman*) override\n+        {\n+            m_notifications->ResendWalletTransactions(best_block_time);\n+        }\n+\n+        Chain::Notifications* m_notifications;\n+    };\n+\n+    Forwarder m_forwarder;\n+};\n+\n+class ChainImpl : public Chain\n+{\n+public:\n+    std::unique_ptr<Chain::Lock> lock(bool try_lock) override\n+    {\n+        auto result = MakeUnique<LockingStateImpl>(::cs_main, \"cs_main\", __FILE__, __LINE__, try_lock);\n+        if (try_lock && result && !*result) return {};\n+        // std::move necessary on some compilers due to conversion from\n+        // LockingStateImpl to Lock pointer\n+        return std::move(result);\n+    }\n+    std::unique_ptr<Chain::Lock> assumeLocked() override { return MakeUnique<LockImpl>(); }\n+    bool findBlock(const uint256& hash, CBlock* block, int64_t* time, int64_t* time_max) override\n+    {\n+        CBlockIndex* index;\n+        {\n+            LOCK(cs_main);\n+            auto it = ::mapBlockIndex.find(hash);\n+            if (it == ::mapBlockIndex.end()) {\n+                return false;\n+            }\n+            index = it->second;\n+            if (time) {\n+                *time = index->GetBlockTime();\n+            }\n+            if (time_max) {\n+                *time_max = index->GetBlockTimeMax();\n+            }\n+        }\n+        if (block && !ReadBlockFromDisk(*block, index, Params().GetConsensus())) {\n+            block->SetNull();\n+        }\n+        return true;\n+    }\n+    std::vector<Coin> findCoins(const std::vector<COutPoint>& outputs) override\n+    {\n+        std::vector<Coin> coins;\n+        LOCK2(cs_main, ::mempool.cs);\n+        assert(pcoinsTip);\n+        CCoinsViewCache& chain_view = *::pcoinsTip;\n+        CCoinsViewMemPool mempool_view(&chain_view, ::mempool);\n+        for (const auto& output : outputs) {\n+            Coin coin;\n+            mempool_view.GetCoin(output, coin);\n+            coins.emplace_back(std::move(coin));\n+        }\n+        return coins;\n+    }\n+    double guessVerificationProgress(const uint256& block_hash) override\n+    {\n+        LOCK(cs_main);\n+        auto it = ::mapBlockIndex.find(block_hash);\n+        return GuessVerificationProgress(Params().TxData(), it != ::mapBlockIndex.end() ? it->second : nullptr);\n+    }\n+    int64_t getVirtualTransactionSize(const CTransaction& tx) override { return GetVirtualTransactionSize(tx); }\n+    RBFTransactionState isRBFOptIn(const CTransaction& tx) override\n+    {\n+        LOCK(::mempool.cs);\n+        return IsRBFOptIn(tx, ::mempool);\n+    }\n+    bool hasDescendantsInMempool(const uint256& txid) override\n+    {\n+        LOCK(::mempool.cs);\n+        auto it_mp = ::mempool.mapTx.find(txid);\n+        return it_mp != ::mempool.mapTx.end() && it_mp->GetCountWithDescendants() > 1;\n+    }\n+    bool relayTransaction(const uint256& txid) override\n+    {\n+        if (g_connman) {\n+            CInv inv(MSG_TX, txid);\n+            g_connman->ForEachNode([&inv](CNode* node) { node->PushInventory(inv); });\n+            return true;\n+        }\n+        return false;\n+    }\n+    void getTransactionAncestry(const uint256& txid, size_t& ancestors, size_t& descendants) override\n+    {\n+        ::mempool.GetTransactionAncestry(txid, ancestors, descendants);\n+    }\n+    bool checkChainLimits(CTransactionRef tx) override\n+    {\n+        LockPoints lp;\n+        CTxMemPoolEntry entry(tx, 0, 0, 0, false, 0, lp);\n+        CTxMemPool::setEntries setAncestors;\n+        size_t nLimitAncestors = gArgs.GetArg(\"-limitancestorcount\", DEFAULT_ANCESTOR_LIMIT);",
      "path": "src/interfaces/chain.cpp",
      "position": null,
      "original_position": 311,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "45b23efaada081a7be9e255df59670f4704c45d1",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Make this and the conversions on the lines below explicit?",
      "created_at": "2018-10-15T12:16:14Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r225142332",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/225142332"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 311,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/225142764",
      "pull_request_review_id": 164676589,
      "id": 225142764,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNTE0Mjc2NA==",
      "diff_hunk": "@@ -90,10 +89,10 @@ CFeeRate GetMinimumFeeRate(const CWallet& wallet, const CCoinControl& coin_contr\n     return feerate_needed;\n }\n \n-CFeeRate GetDiscardRate(const CWallet& wallet, const CBlockPolicyEstimator& estimator)\n+CFeeRate GetDiscardRate(const CWallet& wallet)\n {\n-    unsigned int highest_target = estimator.HighestTargetTracked(FeeEstimateHorizon::LONG_HALFLIFE);\n-    CFeeRate discard_rate = estimator.estimateSmartFee(highest_target, nullptr /* FeeCalculation */, false /* conservative */);\n+    unsigned int highest_target = wallet.chain().estimateMaxBlocks();",
      "path": "src/wallet/fees.cpp",
      "position": null,
      "original_position": 56,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "45b23efaada081a7be9e255df59670f4704c45d1",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Implicit sign conversion here: see comment on `estimateMaxBlocks` above.",
      "created_at": "2018-10-15T12:17:43Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r225142764",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/225142764"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/226438193",
      "pull_request_review_id": 166261224,
      "id": 226438193,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNjQzODE5Mw==",
      "diff_hunk": "@@ -296,6 +299,13 @@ class ChainImpl : public Chain\n     void initMessage(const std::string& message) override { ::uiInterface.InitMessage(message); }\n     void initWarning(const std::string& message) override { InitWarning(message); }\n     void initError(const std::string& message) override { InitError(message); }\n+    UniValue generateBlocks(std::shared_ptr<CReserveScript> coinbase_script,\n+        int num_blocks,\n+        uint64_t max_tries,\n+        bool keep_script) override\n+    {\n+        return ::generateBlocks(coinbase_script, num_blocks, max_tries, keep_script);",
      "path": "src/interfaces/chain.cpp",
      "position": null,
      "original_position": 26,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "604c567e3c39099d2dd62ead72804d6a584cf34a",
      "in_reply_to_id": 185934311,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/10973#discussion_r185934311\r\n\r\n> Seems like these instances of straight pass-through to some underlying function may be good cases for templated argument forwarding.\r\n\r\nI think fully specifying the interface in `chain.h` is nicer than having to look in different files to see names and types of the arguments. Writing the arguments explicitly also means internal functions can potentially change while the external interface remains stable. And C++ doesn't really support [virtual template functions](https://stackoverflow.com/questions/2354210/can-a-c-class-member-function-template-be-virtual]), so you'd have to rig something up with varargs and [`std::any`](https://en.cppreference.com/w/cpp/utility/any) to forward arguments without listing names or types. Also, many chain functions here are not just passing their arguments verbatim, so this forwarding couldn't be used in many cases.",
      "created_at": "2018-10-18T19:36:06Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r226438193",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/226438193"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 355,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229078622",
      "pull_request_review_id": 166261224,
      "id": 229078622,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyOTA3ODYyMg==",
      "diff_hunk": "@@ -182,6 +182,9 @@ class Chain\n         uint64_t max_tries,\n         bool keep_script) = 0;\n \n+    //! Parse confirm target.\n+    virtual unsigned int parseConfirmTarget(const UniValue& value) = 0;",
      "path": "src/interfaces/chain.h",
      "position": null,
      "original_position": 5,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "a71c5b8e73d991f28945280c8812fa0c2898a710",
      "in_reply_to_id": 189395768,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/10973#discussion_r189395768\r\n\r\n> This feels like a weird method to put in the chain interface\r\n\r\nAgree, removed this method.",
      "created_at": "2018-10-29T20:05:49Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r229078622",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229078622"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 197,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/230112626",
      "pull_request_review_id": 166261224,
      "id": 230112626,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMDExMjYyNg==",
      "diff_hunk": "@@ -2726,7 +2741,8 @@ bool CWallet::CreateTransaction(interfaces::Chain::Lock& locked_chain, const std\n     // enough, that fee sniping isn't a problem yet, but by implementing a fix\n     // now we ensure code won't be written that makes assumptions about\n     // nLockTime that preclude a fix later.\n-    txNew.nLockTime = chainActive.Height();\n+    const Optional<int> tip_height = locked_chain.getHeight();\n+    txNew.nLockTime = tip_height ? *tip_height : std::numeric_limits<uint32_t>::max();",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 292,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "2aa964dc531464c47c7236ec7b288e3b9c403a1e",
      "in_reply_to_id": 213473620,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/10973#discussion_r213473620\r\n\r\n> Probably out-of-scope nit: I wish the uint32_t max was instead a named constant\r\n\r\nAdded LOCKTIME_MAX constant here and in #14636.",
      "created_at": "2018-11-01T16:47:16Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r230112626",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/230112626"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2636,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232349663",
      "pull_request_review_id": 173535511,
      "id": 232349663,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMjM0OTY2Mw==",
      "diff_hunk": "@@ -1243,7 +1258,11 @@ bool AppInitMain()\n     }\n \n     // ********************************************************* Step 5: verify wallet database integrity\n-    if (!g_wallet_init_interface.Verify()) return false;\n+    for (const auto& client : interfaces.chain_clients) {\n+        if (!client->verify()) {\n+            return false;",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 97,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "158ec814077c80bcc29e019f51af566504df1395",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: Looks like a potential opportunity for `std::any_of`? :-)",
      "created_at": "2018-11-09T18:31:35Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r232349663",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232349663"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1320,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232349796",
      "pull_request_review_id": 173535511,
      "id": 232349796,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMjM0OTc5Ng==",
      "diff_hunk": "@@ -1562,7 +1581,11 @@ bool AppInitMain()\n     }\n \n     // ********************************************************* Step 9: load wallet\n-    if (!g_wallet_init_interface.Open()) return false;\n+    for (const auto& client : interfaces.chain_clients) {\n+        if (!client->load()) {\n+            return false;",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 110,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "158ec814077c80bcc29e019f51af566504df1395",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: Looks like a potential opportunity for `std::any_of`? :-)",
      "created_at": "2018-11-09T18:32:00Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r232349796",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232349796"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1644,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232767596",
      "pull_request_review_id": 174038212,
      "id": 232767596,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMjc2NzU5Ng==",
      "diff_hunk": "@@ -1243,7 +1258,11 @@ bool AppInitMain()\n     }\n \n     // ********************************************************* Step 5: verify wallet database integrity\n-    if (!g_wallet_init_interface.Verify()) return false;\n+    for (const auto& client : interfaces.chain_clients) {\n+        if (!client->verify()) {\n+            return false;",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 97,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "158ec814077c80bcc29e019f51af566504df1395",
      "in_reply_to_id": 232349663,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Discussed in base PR: https://github.com/bitcoin/bitcoin/pull/14437#discussion_r232173026",
      "created_at": "2018-11-12T18:34:00Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r232767596",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232767596"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1320,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232767664",
      "pull_request_review_id": 174038212,
      "id": 232767664,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMjc2NzY2NA==",
      "diff_hunk": "@@ -1562,7 +1581,11 @@ bool AppInitMain()\n     }\n \n     // ********************************************************* Step 9: load wallet\n-    if (!g_wallet_init_interface.Open()) return false;\n+    for (const auto& client : interfaces.chain_clients) {\n+        if (!client->load()) {\n+            return false;",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 110,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "158ec814077c80bcc29e019f51af566504df1395",
      "in_reply_to_id": 232349796,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Discussed in base PR: https://github.com/bitcoin/bitcoin/pull/14437#discussion_r232173026",
      "created_at": "2018-11-12T18:34:14Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r232767664",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232767664"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1644,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/264173415",
      "pull_request_review_id": 212761964,
      "id": 264173415,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NDE3MzQxNQ==",
      "diff_hunk": "@@ -790,22 +791,44 @@ static UniValue combinerawtransaction(const JSONRPCRequest& request)\n     return EncodeHexTx(CTransaction(mergedTx));\n }\n \n+// Wrapper to help add a single coin to CCoinsViewCache.\n+class CoinFill : private CCoinsView\n+{\n+public:\n+    CoinFill(CCoinsViewCache& cache, const COutPoint &output, Coin&& coin, CCoinsView &backend) : m_cache(cache), m_output(output), m_coin(std::move(coin)), m_backend(backend) {\n+        m_cache.SetBackend(*this);\n+        m_cache.AccessCoin(output);\n+    }\n+    ~CoinFill() override {\n+        m_cache.SetBackend(m_backend);\n+    }\n+\n+    private:",
      "path": "src/rpc/rawtransaction.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "6898f5376071dcd84ce4aea980e170b4953c18bb",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit, align.",
      "created_at": "2019-03-11T10:40:50Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r264173415",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/264173415"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 806,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/264173464",
      "pull_request_review_id": 212761964,
      "id": 264173464,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NDE3MzQ2NA==",
      "diff_hunk": "@@ -790,22 +791,44 @@ static UniValue combinerawtransaction(const JSONRPCRequest& request)\n     return EncodeHexTx(CTransaction(mergedTx));\n }\n \n+// Wrapper to help add a single coin to CCoinsViewCache.\n+class CoinFill : private CCoinsView\n+{\n+public:\n+    CoinFill(CCoinsViewCache& cache, const COutPoint &output, Coin&& coin, CCoinsView &backend) : m_cache(cache), m_output(output), m_coin(std::move(coin)), m_backend(backend) {\n+        m_cache.SetBackend(*this);\n+        m_cache.AccessCoin(output);\n+    }\n+    ~CoinFill() override {\n+        m_cache.SetBackend(m_backend);\n+    }\n+\n+    private:\n+    bool GetCoin(const COutPoint &output, Coin &coin) const override {",
      "path": "src/rpc/rawtransaction.cpp",
      "position": null,
      "original_position": 25,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "6898f5376071dcd84ce4aea980e170b4953c18bb",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit, format.",
      "created_at": "2019-03-11T10:40:59Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r264173464",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/264173464"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 807,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/264184370",
      "pull_request_review_id": 212761964,
      "id": 264184370,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NDE4NDM3MA==",
      "diff_hunk": "@@ -160,6 +163,9 @@ class Chain\n         int64_t* time = nullptr,\n         int64_t* max_time = nullptr) = 0;\n \n+    //! Get unspent outputs associated with a transaction.\n+    virtual std::vector<Coin> findCoins(const std::vector<COutPoint>& outputs) = 0;",
      "path": "src/interfaces/chain.h",
      "position": null,
      "original_position": 24,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "6898f5376071dcd84ce4aea980e170b4953c18bb",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I wonder if this should return an `std::vector<std::pair<COutPoint, Coin>>`? Otherwise could note in the comment that result follows `outputs` order.",
      "created_at": "2019-03-11T11:11:13Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r264184370",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/264184370"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 167,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/264184444",
      "pull_request_review_id": 212761964,
      "id": 264184444,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NDE4NDQ0NA==",
      "diff_hunk": "@@ -790,22 +791,44 @@ static UniValue combinerawtransaction(const JSONRPCRequest& request)\n     return EncodeHexTx(CTransaction(mergedTx));\n }\n \n+// Wrapper to help add a single coin to CCoinsViewCache.\n+class CoinFill : private CCoinsView\n+{\n+public:\n+    CoinFill(CCoinsViewCache& cache, const COutPoint &output, Coin&& coin, CCoinsView &backend) : m_cache(cache), m_output(output), m_coin(std::move(coin)), m_backend(backend) {\n+        m_cache.SetBackend(*this);\n+        m_cache.AccessCoin(output);\n+    }\n+    ~CoinFill() override {\n+        m_cache.SetBackend(m_backend);\n+    }\n+\n+    private:\n+    bool GetCoin(const COutPoint &output, Coin &coin) const override {\n+        assert(output == m_output);\n+        coin = std::move(m_coin);\n+        return true;\n+    }\n+    CCoinsViewCache& m_cache;\n+    const COutPoint& m_output;\n+    Coin&& m_coin;",
      "path": "src/rpc/rawtransaction.cpp",
      "position": null,
      "original_position": 32,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "6898f5376071dcd84ce4aea980e170b4953c18bb",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why?",
      "created_at": "2019-03-11T11:11:29Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r264184444",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/264184444"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 814,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/264184576",
      "pull_request_review_id": 212761964,
      "id": 264184576,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NDE4NDU3Ng==",
      "diff_hunk": "@@ -193,9 +193,8 @@ std::string CRPCTable::help(const std::string& strCommand, const JSONRPCRequest&\n         jreq.strMethod = strMethod;\n         try\n         {\n-            rpcfn_type pfn = pcmd->actor;\n-            if (setDone.insert(pfn).second)\n-                (*pfn)(jreq);\n+            if (setDone.insert(pcmd->unique_id).second)",
      "path": "src/rpc/server.cpp",
      "position": 30,
      "original_position": 16,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "6898f5376071dcd84ce4aea980e170b4953c18bb",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit, `{`",
      "created_at": "2019-03-11T11:11:44Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r264184576",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/264184576"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 198,
      "original_line": 198,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/264188304",
      "pull_request_review_id": 212761964,
      "id": 264188304,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NDE4ODMwNA==",
      "diff_hunk": "@@ -790,22 +791,44 @@ static UniValue combinerawtransaction(const JSONRPCRequest& request)\n     return EncodeHexTx(CTransaction(mergedTx));\n }\n \n+// Wrapper to help add a single coin to CCoinsViewCache.\n+class CoinFill : private CCoinsView\n+{\n+public:\n+    CoinFill(CCoinsViewCache& cache, const COutPoint &output, Coin&& coin, CCoinsView &backend) : m_cache(cache), m_output(output), m_coin(std::move(coin)), m_backend(backend) {\n+        m_cache.SetBackend(*this);\n+        m_cache.AccessCoin(output);\n+    }\n+    ~CoinFill() override {\n+        m_cache.SetBackend(m_backend);\n+    }\n+\n+    private:\n+    bool GetCoin(const COutPoint &output, Coin &coin) const override {\n+        assert(output == m_output);\n+        coin = std::move(m_coin);\n+        return true;\n+    }\n+    CCoinsViewCache& m_cache;\n+    const COutPoint& m_output;\n+    Coin&& m_coin;\n+    CCoinsView& m_backend;\n+};\n+\n UniValue SignTransaction(interfaces::Chain& chain, CMutableTransaction& mtx, const UniValue& prevTxsUnival, CBasicKeyStore *keystore, bool is_temp_keystore, const UniValue& hashType)\n {\n     // Fetch previous transactions (inputs):\n     CCoinsView viewDummy;\n     CCoinsViewCache view(&viewDummy);\n     {\n-        LOCK2(cs_main, mempool.cs);\n-        CCoinsViewCache &viewChain = *pcoinsTip;\n-        CCoinsViewMemPool viewMempool(&viewChain, mempool);\n-        view.SetBackend(viewMempool); // temporarily switch cache backend to db+mempool view\n-\n+        std::vector<COutPoint> outputs;\n         for (const CTxIn& txin : mtx.vin) {\n-            view.AccessCoin(txin.prevout); // Load entries from viewChain into view; can fail.\n+            outputs.emplace_back(txin.prevout);\n+        }\n+        std::vector<Coin> coins = chain.findCoins(outputs);\n+        for (size_t i = 0; i < coins.size(); ++i) {\n+            CoinFill(view, outputs[i], std::move(coins[i]), viewDummy);",
      "path": "src/rpc/rawtransaction.cpp",
      "position": null,
      "original_position": 54,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "6898f5376071dcd84ce4aea980e170b4953c18bb",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can you explain why not do the following:\r\n```cpp\r\nCoinFill view(...);\r\nfor (...) {\r\n   view.AccessCoin(...)\r\n}\r\n```",
      "created_at": "2019-03-11T11:23:27Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r264188304",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/264188304"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 830,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/264191105",
      "pull_request_review_id": 212761964,
      "id": 264191105,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NDE5MTEwNQ==",
      "diff_hunk": "@@ -254,8 +343,111 @@ class ChainImpl : public Chain\n     void initWarning(const std::string& message) override { InitWarning(message); }\n     void initError(const std::string& message) override { InitError(message); }\n     void loadWallet(std::unique_ptr<Wallet> wallet) override { ::uiInterface.LoadWallet(wallet); }\n+    std::unique_ptr<Handler> handleNotifications(Notifications& notifications) override\n+    {\n+        return MakeUnique<HandlerImpl>(notifications);\n+    }\n+    void waitForNotifications() override { SyncWithValidationInterfaceQueue(); }\n+    std::unique_ptr<Handler> handleRpc(const CRPCCommand& command) override;\n+\n+    //! Map of RPC method name to forwarder. If multiple clients provide\n+    //! implementations of the same RPC method, the RPC forwarder can dispatch\n+    //! between them.\n+    class RpcForwarder;\n+    std::map<Ref<const std::string>, RpcForwarder> m_rpc_forwarders;\n };\n \n+//! Forwarder for one RPC method.\n+class ChainImpl::RpcForwarder\n+{\n+public:\n+    explicit RpcForwarder(const CRPCCommand& command) : m_command(command)\n+    {\n+        m_command.actor = [this](const JSONRPCRequest& request) { return forwardRequest(request); };\n+    }\n+\n+    bool registerForwarder() { return ::tableRPC.appendCommand(m_command.name, &m_command); }\n+\n+    void addCommand(const CRPCCommand& command) { m_commands.emplace_back(&command); }\n+\n+    void removeCommand(const CRPCCommand& command)\n+    {\n+        m_commands.erase(std::remove(m_commands.begin(), m_commands.end(), &command), m_commands.end());\n+    }\n+\n+    UniValue forwardRequest(const JSONRPCRequest& request) const\n+    {\n+        // Simple forwarding of RPC requests. This just sends the request to the\n+        // first client that registered a handler for the RPC method. If the\n+        // handler throws a wallet not found exception, this will retry\n+        // forwarding to the next handler (if any).\n+        //\n+        // This forwarding mechanism could be made more efficient (peeking\n+        // inside the RPC request for wallet name and sending it directly to the\n+        // right handler), but right now all wallets are in-process so there is\n+        // only ever a single handler, and in the future it isn't clear if we\n+        // will want we want to keep forwarding RPCs at all (clients could just\n+        // listen for their own RPCs).\n+        for (auto it = m_commands.begin(); it != m_commands.end();) {\n+            const CRPCCommand& command = **it++;\n+            try {\n+                return command.actor(request);\n+            } catch (const UniValue& e) {\n+                if (it != m_commands.end()) {\n+                    const UniValue& code = e[\"code\"];\n+                    if (code.isNum() && code.get_int() == RPC_WALLET_NOT_FOUND) {\n+                        continue;\n+                    }\n+                }\n+                throw;\n+            }\n+        }\n+\n+        // This will only be reached if m_commands is empty. (Because the RPC\n+        // server provides an appendCommand, but no removeCommand method, it\n+        // will keep sending requests here even if there are no clients left to\n+        // forward to.)\n+        throw JSONRPCError(RPC_METHOD_NOT_FOUND, \"Method not found\");\n+    }\n+\n+    CRPCCommand m_command;\n+    std::vector<const CRPCCommand*> m_commands;\n+};\n+\n+class RpcHandler : public Handler\n+{\n+public:\n+    RpcHandler(ChainImpl::RpcForwarder& forwarder, const CRPCCommand& command)\n+        : m_forwarder(&forwarder), m_command(command)\n+    {\n+        m_forwarder->addCommand(m_command);\n+    }\n+\n+    void disconnect() override final\n+    {\n+        if (m_forwarder) {\n+            m_forwarder->removeCommand(m_command);\n+            m_forwarder = nullptr;\n+        }\n+    }\n+\n+    ~RpcHandler() override { disconnect(); }\n+\n+    ChainImpl::RpcForwarder* m_forwarder;\n+    const CRPCCommand& m_command;\n+};\n+\n+std::unique_ptr<Handler> ChainImpl::handleRpc(const CRPCCommand& command)\n+{\n+    auto inserted = m_rpc_forwarders.emplace(\n+        std::piecewise_construct, std::forward_as_tuple(command.name), std::forward_as_tuple(command));\n+    if (inserted.second && !inserted.first->second.registerForwarder()) {",
      "path": "src/interfaces/chain.cpp",
      "position": null,
      "original_position": 234,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "6898f5376071dcd84ce4aea980e170b4953c18bb",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "When can `inserted.second` fail?",
      "created_at": "2019-03-11T11:32:15Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r264191105",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/264191105"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 436,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/264191494",
      "pull_request_review_id": 212761964,
      "id": 264191494,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NDE5MTQ5NA==",
      "diff_hunk": "@@ -4156,8 +4156,8 @@ static const CRPCCommand commands[] =\n };\n // clang-format on\n \n-void RegisterWalletRPCCommands(CRPCTable &t)\n+void RegisterWalletRPCCommands(interfaces::Chain& chain, std::vector<std::unique_ptr<interfaces::Handler>>& handlers)\n {\n     for (unsigned int vcidx = 0; vcidx < ARRAYLEN(commands); vcidx++)\n-        t.appendCommand(commands[vcidx].name, &commands[vcidx]);\n+        handlers.emplace_back(chain.handleRpc(commands[vcidx]));",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 20,
      "original_position": 9,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "6898f5376071dcd84ce4aea980e170b4953c18bb",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`handleRpc` can return an \"empty\" handler.",
      "created_at": "2019-03-11T11:33:37Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r264191494",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/264191494"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4162,
      "original_line": 4162,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/264191750",
      "pull_request_review_id": 212761964,
      "id": 264191750,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NDE5MTc1MA==",
      "diff_hunk": "@@ -254,8 +343,111 @@ class ChainImpl : public Chain\n     void initWarning(const std::string& message) override { InitWarning(message); }\n     void initError(const std::string& message) override { InitError(message); }\n     void loadWallet(std::unique_ptr<Wallet> wallet) override { ::uiInterface.LoadWallet(wallet); }\n+    std::unique_ptr<Handler> handleNotifications(Notifications& notifications) override\n+    {\n+        return MakeUnique<HandlerImpl>(notifications);\n+    }\n+    void waitForNotifications() override { SyncWithValidationInterfaceQueue(); }\n+    std::unique_ptr<Handler> handleRpc(const CRPCCommand& command) override;",
      "path": "src/interfaces/chain.cpp",
      "position": null,
      "original_position": 141,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "6898f5376071dcd84ce4aea980e170b4953c18bb",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit, maybe a bit late, but should be uppercase RPC?",
      "created_at": "2019-03-11T11:34:24Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r264191750",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/264191750"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 341,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/264361814",
      "pull_request_review_id": 213000398,
      "id": 264361814,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NDM2MTgxNA==",
      "diff_hunk": "@@ -254,8 +343,111 @@ class ChainImpl : public Chain\n     void initWarning(const std::string& message) override { InitWarning(message); }\n     void initError(const std::string& message) override { InitError(message); }\n     void loadWallet(std::unique_ptr<Wallet> wallet) override { ::uiInterface.LoadWallet(wallet); }\n+    std::unique_ptr<Handler> handleNotifications(Notifications& notifications) override\n+    {\n+        return MakeUnique<HandlerImpl>(notifications);\n+    }\n+    void waitForNotifications() override { SyncWithValidationInterfaceQueue(); }\n+    std::unique_ptr<Handler> handleRpc(const CRPCCommand& command) override;",
      "path": "src/interfaces/chain.cpp",
      "position": null,
      "original_position": 141,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "6898f5376071dcd84ce4aea980e170b4953c18bb",
      "in_reply_to_id": 264191750,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/10973#discussion_r264191750\r\n\r\n> nit, maybe a bit late, but should be uppercase RPC?\r\n\r\nIMO, strict camel case without exceptions for acronyms is easier to read. (`JSONRPCRequest` `JsonRpcRequest`)",
      "created_at": "2019-03-11T18:08:30Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r264361814",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/264361814"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 341,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/264361879",
      "pull_request_review_id": 213000398,
      "id": 264361879,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NDM2MTg3OQ==",
      "diff_hunk": "@@ -254,8 +343,111 @@ class ChainImpl : public Chain\n     void initWarning(const std::string& message) override { InitWarning(message); }\n     void initError(const std::string& message) override { InitError(message); }\n     void loadWallet(std::unique_ptr<Wallet> wallet) override { ::uiInterface.LoadWallet(wallet); }\n+    std::unique_ptr<Handler> handleNotifications(Notifications& notifications) override\n+    {\n+        return MakeUnique<HandlerImpl>(notifications);\n+    }\n+    void waitForNotifications() override { SyncWithValidationInterfaceQueue(); }\n+    std::unique_ptr<Handler> handleRpc(const CRPCCommand& command) override;\n+\n+    //! Map of RPC method name to forwarder. If multiple clients provide\n+    //! implementations of the same RPC method, the RPC forwarder can dispatch\n+    //! between them.\n+    class RpcForwarder;\n+    std::map<Ref<const std::string>, RpcForwarder> m_rpc_forwarders;\n };\n \n+//! Forwarder for one RPC method.\n+class ChainImpl::RpcForwarder\n+{\n+public:\n+    explicit RpcForwarder(const CRPCCommand& command) : m_command(command)\n+    {\n+        m_command.actor = [this](const JSONRPCRequest& request) { return forwardRequest(request); };\n+    }\n+\n+    bool registerForwarder() { return ::tableRPC.appendCommand(m_command.name, &m_command); }\n+\n+    void addCommand(const CRPCCommand& command) { m_commands.emplace_back(&command); }\n+\n+    void removeCommand(const CRPCCommand& command)\n+    {\n+        m_commands.erase(std::remove(m_commands.begin(), m_commands.end(), &command), m_commands.end());\n+    }\n+\n+    UniValue forwardRequest(const JSONRPCRequest& request) const\n+    {\n+        // Simple forwarding of RPC requests. This just sends the request to the\n+        // first client that registered a handler for the RPC method. If the\n+        // handler throws a wallet not found exception, this will retry\n+        // forwarding to the next handler (if any).\n+        //\n+        // This forwarding mechanism could be made more efficient (peeking\n+        // inside the RPC request for wallet name and sending it directly to the\n+        // right handler), but right now all wallets are in-process so there is\n+        // only ever a single handler, and in the future it isn't clear if we\n+        // will want we want to keep forwarding RPCs at all (clients could just\n+        // listen for their own RPCs).\n+        for (auto it = m_commands.begin(); it != m_commands.end();) {\n+            const CRPCCommand& command = **it++;\n+            try {\n+                return command.actor(request);\n+            } catch (const UniValue& e) {\n+                if (it != m_commands.end()) {\n+                    const UniValue& code = e[\"code\"];\n+                    if (code.isNum() && code.get_int() == RPC_WALLET_NOT_FOUND) {\n+                        continue;\n+                    }\n+                }\n+                throw;\n+            }\n+        }\n+\n+        // This will only be reached if m_commands is empty. (Because the RPC\n+        // server provides an appendCommand, but no removeCommand method, it\n+        // will keep sending requests here even if there are no clients left to\n+        // forward to.)\n+        throw JSONRPCError(RPC_METHOD_NOT_FOUND, \"Method not found\");\n+    }\n+\n+    CRPCCommand m_command;\n+    std::vector<const CRPCCommand*> m_commands;\n+};\n+\n+class RpcHandler : public Handler\n+{\n+public:\n+    RpcHandler(ChainImpl::RpcForwarder& forwarder, const CRPCCommand& command)\n+        : m_forwarder(&forwarder), m_command(command)\n+    {\n+        m_forwarder->addCommand(m_command);\n+    }\n+\n+    void disconnect() override final\n+    {\n+        if (m_forwarder) {\n+            m_forwarder->removeCommand(m_command);\n+            m_forwarder = nullptr;\n+        }\n+    }\n+\n+    ~RpcHandler() override { disconnect(); }\n+\n+    ChainImpl::RpcForwarder* m_forwarder;\n+    const CRPCCommand& m_command;\n+};\n+\n+std::unique_ptr<Handler> ChainImpl::handleRpc(const CRPCCommand& command)\n+{\n+    auto inserted = m_rpc_forwarders.emplace(\n+        std::piecewise_construct, std::forward_as_tuple(command.name), std::forward_as_tuple(command));\n+    if (inserted.second && !inserted.first->second.registerForwarder()) {",
      "path": "src/interfaces/chain.cpp",
      "position": null,
      "original_position": 234,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "6898f5376071dcd84ce4aea980e170b4953c18bb",
      "in_reply_to_id": 264191105,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/10973#discussion_r264191105\r\n\r\n> When can inserted.second fail?\r\n\r\nAdded comment, but `inserted.second` being false isn't a failure. It's just checked to prevent work being repeated when there are multiple wallet processes.",
      "created_at": "2019-03-11T18:08:38Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r264361879",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/264361879"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 436,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/264362081",
      "pull_request_review_id": 213000398,
      "id": 264362081,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NDM2MjA4MQ==",
      "diff_hunk": "@@ -193,9 +193,8 @@ std::string CRPCTable::help(const std::string& strCommand, const JSONRPCRequest&\n         jreq.strMethod = strMethod;\n         try\n         {\n-            rpcfn_type pfn = pcmd->actor;\n-            if (setDone.insert(pfn).second)\n-                (*pfn)(jreq);\n+            if (setDone.insert(pcmd->unique_id).second)",
      "path": "src/rpc/server.cpp",
      "position": 30,
      "original_position": 16,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "6898f5376071dcd84ce4aea980e170b4953c18bb",
      "in_reply_to_id": 264184576,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r264184576\r\n\r\n> nit, {\r\n\r\nWill leave since I'm just replacing `pfn` with `pcmd->unique_id` here and I think it's nice that this function uses a consistent style.",
      "created_at": "2019-03-11T18:09:12Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r264362081",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/264362081"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 198,
      "original_line": 198,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/264362191",
      "pull_request_review_id": 213000398,
      "id": 264362191,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NDM2MjE5MQ==",
      "diff_hunk": "@@ -4156,8 +4156,8 @@ static const CRPCCommand commands[] =\n };\n // clang-format on\n \n-void RegisterWalletRPCCommands(CRPCTable &t)\n+void RegisterWalletRPCCommands(interfaces::Chain& chain, std::vector<std::unique_ptr<interfaces::Handler>>& handlers)\n {\n     for (unsigned int vcidx = 0; vcidx < ARRAYLEN(commands); vcidx++)\n-        t.appendCommand(commands[vcidx].name, &commands[vcidx]);\n+        handlers.emplace_back(chain.handleRpc(commands[vcidx]));",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 20,
      "original_position": 9,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "6898f5376071dcd84ce4aea980e170b4953c18bb",
      "in_reply_to_id": 264191494,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/10973#discussion_r264191494\r\n\r\n> handleRpc can return an \"empty\" handler.\r\n\r\nNot sure if there is a suggested change, but `handleRpc` will return null if `CRPCTable::appendCommand` returns false. There should be no change in behavior as this is.",
      "created_at": "2019-03-11T18:09:27Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r264362191",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/264362191"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4162,
      "original_line": 4162,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/264362318",
      "pull_request_review_id": 213000398,
      "id": 264362318,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NDM2MjMxOA==",
      "diff_hunk": "@@ -160,6 +163,9 @@ class Chain\n         int64_t* time = nullptr,\n         int64_t* max_time = nullptr) = 0;\n \n+    //! Get unspent outputs associated with a transaction.\n+    virtual std::vector<Coin> findCoins(const std::vector<COutPoint>& outputs) = 0;",
      "path": "src/interfaces/chain.h",
      "position": null,
      "original_position": 24,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "6898f5376071dcd84ce4aea980e170b4953c18bb",
      "in_reply_to_id": 264184370,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/10973#discussion_r264184370\r\n\r\n> I wonder if this should return an std::vector<std::pair<COutPoint, Coin>>? Otherwise could note in the comment that result follows outputs order.\r\n\r\nAgree this was awkward. Replaced with in/out param in simplification.",
      "created_at": "2019-03-11T18:09:46Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r264362318",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/264362318"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 167,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/264362391",
      "pull_request_review_id": 213000398,
      "id": 264362391,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NDM2MjM5MQ==",
      "diff_hunk": "@@ -790,22 +791,44 @@ static UniValue combinerawtransaction(const JSONRPCRequest& request)\n     return EncodeHexTx(CTransaction(mergedTx));\n }\n \n+// Wrapper to help add a single coin to CCoinsViewCache.\n+class CoinFill : private CCoinsView\n+{\n+public:\n+    CoinFill(CCoinsViewCache& cache, const COutPoint &output, Coin&& coin, CCoinsView &backend) : m_cache(cache), m_output(output), m_coin(std::move(coin)), m_backend(backend) {\n+        m_cache.SetBackend(*this);\n+        m_cache.AccessCoin(output);\n+    }\n+    ~CoinFill() override {\n+        m_cache.SetBackend(m_backend);\n+    }\n+\n+    private:",
      "path": "src/rpc/rawtransaction.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "6898f5376071dcd84ce4aea980e170b4953c18bb",
      "in_reply_to_id": 264173415,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/10973#discussion_r264173415\r\n\r\n> nit, align.\r\n\r\nRemoved in simplification.",
      "created_at": "2019-03-11T18:09:56Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r264362391",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/264362391"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 806,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/264362457",
      "pull_request_review_id": 213000398,
      "id": 264362457,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NDM2MjQ1Nw==",
      "diff_hunk": "@@ -790,22 +791,44 @@ static UniValue combinerawtransaction(const JSONRPCRequest& request)\n     return EncodeHexTx(CTransaction(mergedTx));\n }\n \n+// Wrapper to help add a single coin to CCoinsViewCache.\n+class CoinFill : private CCoinsView\n+{\n+public:\n+    CoinFill(CCoinsViewCache& cache, const COutPoint &output, Coin&& coin, CCoinsView &backend) : m_cache(cache), m_output(output), m_coin(std::move(coin)), m_backend(backend) {\n+        m_cache.SetBackend(*this);\n+        m_cache.AccessCoin(output);\n+    }\n+    ~CoinFill() override {\n+        m_cache.SetBackend(m_backend);\n+    }\n+\n+    private:\n+    bool GetCoin(const COutPoint &output, Coin &coin) const override {",
      "path": "src/rpc/rawtransaction.cpp",
      "position": null,
      "original_position": 25,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "6898f5376071dcd84ce4aea980e170b4953c18bb",
      "in_reply_to_id": 264173464,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/10973#discussion_r264173464\r\n\r\n> nit, format.\r\n\r\nRemoved in simplification.",
      "created_at": "2019-03-11T18:10:06Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r264362457",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/264362457"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 807,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/264362610",
      "pull_request_review_id": 213000398,
      "id": 264362610,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NDM2MjYxMA==",
      "diff_hunk": "@@ -790,22 +791,44 @@ static UniValue combinerawtransaction(const JSONRPCRequest& request)\n     return EncodeHexTx(CTransaction(mergedTx));\n }\n \n+// Wrapper to help add a single coin to CCoinsViewCache.\n+class CoinFill : private CCoinsView\n+{\n+public:\n+    CoinFill(CCoinsViewCache& cache, const COutPoint &output, Coin&& coin, CCoinsView &backend) : m_cache(cache), m_output(output), m_coin(std::move(coin)), m_backend(backend) {\n+        m_cache.SetBackend(*this);\n+        m_cache.AccessCoin(output);\n+    }\n+    ~CoinFill() override {\n+        m_cache.SetBackend(m_backend);\n+    }\n+\n+    private:\n+    bool GetCoin(const COutPoint &output, Coin &coin) const override {\n+        assert(output == m_output);\n+        coin = std::move(m_coin);\n+        return true;\n+    }\n+    CCoinsViewCache& m_cache;\n+    const COutPoint& m_output;\n+    Coin&& m_coin;",
      "path": "src/rpc/rawtransaction.cpp",
      "position": null,
      "original_position": 32,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "6898f5376071dcd84ce4aea980e170b4953c18bb",
      "in_reply_to_id": 264184444,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/10973#discussion_r264184444\r\n\r\nIn commit \"Remove use of CCoinsViewMemPool::GetCoin in wallet code\" (016b121b447d5383614ef77d6a050bd66994170b)\r\n\r\n> Why?\r\n\r\nRemoved in simplification. `&` would have worked here too, but `&&` seemed to make sense since this was a reference to a temporary that was moved from.",
      "created_at": "2019-03-11T18:10:27Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r264362610",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/264362610"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 814,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/264362676",
      "pull_request_review_id": 213000398,
      "id": 264362676,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NDM2MjY3Ng==",
      "diff_hunk": "@@ -790,22 +791,44 @@ static UniValue combinerawtransaction(const JSONRPCRequest& request)\n     return EncodeHexTx(CTransaction(mergedTx));\n }\n \n+// Wrapper to help add a single coin to CCoinsViewCache.\n+class CoinFill : private CCoinsView\n+{\n+public:\n+    CoinFill(CCoinsViewCache& cache, const COutPoint &output, Coin&& coin, CCoinsView &backend) : m_cache(cache), m_output(output), m_coin(std::move(coin)), m_backend(backend) {\n+        m_cache.SetBackend(*this);\n+        m_cache.AccessCoin(output);\n+    }\n+    ~CoinFill() override {\n+        m_cache.SetBackend(m_backend);\n+    }\n+\n+    private:\n+    bool GetCoin(const COutPoint &output, Coin &coin) const override {\n+        assert(output == m_output);\n+        coin = std::move(m_coin);\n+        return true;\n+    }\n+    CCoinsViewCache& m_cache;\n+    const COutPoint& m_output;\n+    Coin&& m_coin;\n+    CCoinsView& m_backend;\n+};\n+\n UniValue SignTransaction(interfaces::Chain& chain, CMutableTransaction& mtx, const UniValue& prevTxsUnival, CBasicKeyStore *keystore, bool is_temp_keystore, const UniValue& hashType)\n {\n     // Fetch previous transactions (inputs):\n     CCoinsView viewDummy;\n     CCoinsViewCache view(&viewDummy);\n     {\n-        LOCK2(cs_main, mempool.cs);\n-        CCoinsViewCache &viewChain = *pcoinsTip;\n-        CCoinsViewMemPool viewMempool(&viewChain, mempool);\n-        view.SetBackend(viewMempool); // temporarily switch cache backend to db+mempool view\n-\n+        std::vector<COutPoint> outputs;\n         for (const CTxIn& txin : mtx.vin) {\n-            view.AccessCoin(txin.prevout); // Load entries from viewChain into view; can fail.\n+            outputs.emplace_back(txin.prevout);\n+        }\n+        std::vector<Coin> coins = chain.findCoins(outputs);\n+        for (size_t i = 0; i < coins.size(); ++i) {\n+            CoinFill(view, outputs[i], std::move(coins[i]), viewDummy);",
      "path": "src/rpc/rawtransaction.cpp",
      "position": null,
      "original_position": 54,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "6898f5376071dcd84ce4aea980e170b4953c18bb",
      "in_reply_to_id": 264188304,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/10973#discussion_r264188304\r\n\r\n> Can you explain why not do the following:\r\n\r\nPrefer short lifetimes and less persistent state. In any case, this has been removed in a simplification.",
      "created_at": "2019-03-11T18:10:37Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r264362676",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/264362676"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 830,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/264493627",
      "pull_request_review_id": 213162043,
      "id": 264493627,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NDQ5MzYyNw==",
      "diff_hunk": "@@ -4156,8 +4156,8 @@ static const CRPCCommand commands[] =\n };\n // clang-format on\n \n-void RegisterWalletRPCCommands(CRPCTable &t)\n+void RegisterWalletRPCCommands(interfaces::Chain& chain, std::vector<std::unique_ptr<interfaces::Handler>>& handlers)\n {\n     for (unsigned int vcidx = 0; vcidx < ARRAYLEN(commands); vcidx++)\n-        t.appendCommand(commands[vcidx].name, &commands[vcidx]);\n+        handlers.emplace_back(chain.handleRpc(commands[vcidx]));",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 20,
      "original_position": 9,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "6898f5376071dcd84ce4aea980e170b4953c18bb",
      "in_reply_to_id": 264191494,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "But why let `handlers` have a null entry?",
      "created_at": "2019-03-12T01:45:05Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r264493627",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/264493627"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4162,
      "original_line": 4162,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/264505016",
      "pull_request_review_id": 213175956,
      "id": 264505016,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NDUwNTAxNg==",
      "diff_hunk": "@@ -4156,8 +4156,8 @@ static const CRPCCommand commands[] =\n };\n // clang-format on\n \n-void RegisterWalletRPCCommands(CRPCTable &t)\n+void RegisterWalletRPCCommands(interfaces::Chain& chain, std::vector<std::unique_ptr<interfaces::Handler>>& handlers)\n {\n     for (unsigned int vcidx = 0; vcidx < ARRAYLEN(commands); vcidx++)\n-        t.appendCommand(commands[vcidx].name, &commands[vcidx]);\n+        handlers.emplace_back(chain.handleRpc(commands[vcidx]));",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 20,
      "original_position": 9,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "6898f5376071dcd84ce4aea980e170b4953c18bb",
      "in_reply_to_id": 264191494,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> But why let handlers have a null entry?\r\n\r\nWhat is the suggestion? This condition won't happen and it wouldn't be a problem if it did happen. I'm trying not to change behavior and this is a straight translation of the previous code. Neither the old code nor the new code cares about this condition. If there are concerns about rpc registration they would probably be better to address in another PR.",
      "created_at": "2019-03-12T02:59:12Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r264505016",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/264505016"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4162,
      "original_line": 4162,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/266484246",
      "pull_request_review_id": 215654868,
      "id": 266484246,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NjQ4NDI0Ng==",
      "diff_hunk": "@@ -217,6 +236,36 @@ class Chain\n \n     //! Send wallet load notification to the GUI.\n     virtual void loadWallet(std::unique_ptr<Wallet> wallet) = 0;\n+\n+    //! Send progress indicator.\n+    virtual void showProgress(const std::string& title, int progress, bool resume_possible) = 0;\n+\n+    //! Chain notifications.\n+    class Notifications\n+    {\n+    public:\n+        virtual ~Notifications() {}\n+        virtual void TransactionAddedToMempool(const CTransactionRef& tx) {}\n+        virtual void TransactionRemovedFromMempool(const CTransactionRef& ptx) {}\n+        virtual void BlockConnected(const CBlock& block,",
      "path": "src/interfaces/chain.h",
      "position": null,
      "original_position": 75,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "b7c78217ca7aa861b58fddcfdb82a09ca56f8023",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can you simplify this interface to `(cont CBlock& block, const std::vector<CTransactionRef>& tx_conflicted)`? The client can get the block hash using `CBlock->GetHash()`.",
      "created_at": "2019-03-18T15:02:26Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r266484246",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/266484246"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 250,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/266492528",
      "pull_request_review_id": 215654868,
      "id": 266492528,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NjQ5MjUyOA==",
      "diff_hunk": "@@ -4386,7 +4384,7 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n     chain.loadWallet(interfaces::MakeWallet(walletInstance));\n \n     // Register with the validation interface. It's ok to do this after rescan since we're still holding cs_main.",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 173,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "b7c78217ca7aa861b58fddcfdb82a09ca56f8023",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think this comment could be changed slightly now, since 'we' (the wallet) don't ever hold `cs_main` now.\r\n\r\n`since we're still holding cs_main` -> `since we're still holding the Chain::Lock interface`.",
      "created_at": "2019-03-18T15:17:49Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r266492528",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/266492528"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4386,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/266501274",
      "pull_request_review_id": 215654868,
      "id": 266501274,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NjUwMTI3NA==",
      "diff_hunk": "@@ -808,6 +809,9 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n \n     std::set<COutPoint> setLockedCoins GUARDED_BY(cs_wallet);\n \n+    /** Validation event callback handler. */\n+    std::unique_ptr<interfaces::Handler> m_handler;",
      "path": "src/wallet/wallet.h",
      "position": null,
      "original_position": 31,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "b7c78217ca7aa861b58fddcfdb82a09ca56f8023",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't really like this name `m_handler`, (or the class name `HandlerImpl`), since the name handler is generic for any interface handler. It's more verbose, but I think `m_validation_interface_handler` and `ValidationInterfaceHandlerImpl` are more explicit.",
      "created_at": "2019-03-18T15:34:09Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r266501274",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/266501274"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 813,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/266539338",
      "pull_request_review_id": 215723029,
      "id": 266539338,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NjUzOTMzOA==",
      "diff_hunk": "@@ -217,6 +236,36 @@ class Chain\n \n     //! Send wallet load notification to the GUI.\n     virtual void loadWallet(std::unique_ptr<Wallet> wallet) = 0;\n+\n+    //! Send progress indicator.\n+    virtual void showProgress(const std::string& title, int progress, bool resume_possible) = 0;\n+\n+    //! Chain notifications.\n+    class Notifications\n+    {\n+    public:\n+        virtual ~Notifications() {}\n+        virtual void TransactionAddedToMempool(const CTransactionRef& tx) {}\n+        virtual void TransactionRemovedFromMempool(const CTransactionRef& ptx) {}\n+        virtual void BlockConnected(const CBlock& block,",
      "path": "src/interfaces/chain.h",
      "position": null,
      "original_position": 75,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "b7c78217ca7aa861b58fddcfdb82a09ca56f8023",
      "in_reply_to_id": 266484246,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/10973#discussion_r266484246\r\n\r\n> Can you simplify this interface to (cont CBlock& block, const std::vector\\<CTransactionRef>& tx_conflicted)? \r\n\r\nSimplified as suggested",
      "created_at": "2019-03-18T16:49:19Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r266539338",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/266539338"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 250,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/266539438",
      "pull_request_review_id": 215723029,
      "id": 266539438,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NjUzOTQzOA==",
      "diff_hunk": "@@ -4386,7 +4384,7 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n     chain.loadWallet(interfaces::MakeWallet(walletInstance));\n \n     // Register with the validation interface. It's ok to do this after rescan since we're still holding cs_main.",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 173,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "b7c78217ca7aa861b58fddcfdb82a09ca56f8023",
      "in_reply_to_id": 266492528,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/10973#discussion_r266492528\r\n\r\n> I think this comment could be changed slightly now, since 'we' (the wallet) don't ever hold cs_main now.\r\n\r\nChanged this to reference locked_chain instead of cs_main (it seemed to good to reference the actual variable name).",
      "created_at": "2019-03-18T16:49:28Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r266539438",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/266539438"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4386,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/266539497",
      "pull_request_review_id": 215723029,
      "id": 266539497,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NjUzOTQ5Nw==",
      "diff_hunk": "@@ -808,6 +809,9 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n \n     std::set<COutPoint> setLockedCoins GUARDED_BY(cs_wallet);\n \n+    /** Validation event callback handler. */\n+    std::unique_ptr<interfaces::Handler> m_handler;",
      "path": "src/wallet/wallet.h",
      "position": null,
      "original_position": 31,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "b7c78217ca7aa861b58fddcfdb82a09ca56f8023",
      "in_reply_to_id": 266501274,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/10973#discussion_r266501274\r\n\r\n> I don't really like this name m_handler, (or the class name HandlerImpl)\r\n\r\nRenamed to m_chain_notifications_handler to match Chain::Notifications, Chain::handleNotifications, Chain::waitForNotifications.",
      "created_at": "2019-03-18T16:49:35Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r266539497",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/266539497"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 813,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/266598533",
      "pull_request_review_id": 215797861,
      "id": 266598533,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NjU5ODUzMw==",
      "diff_hunk": "@@ -1220,6 +1224,8 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n \n     /** Add a KeyOriginInfo to the wallet */\n     bool AddKeyOrigin(const CPubKey& pubkey, const KeyOriginInfo& info);\n+\n+    friend struct WalletTestingSetup;",
      "path": "src/wallet/wallet.h",
      "position": 61,
      "original_position": 52,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "0ca5446db3cda7f911e911a094482311f6a71221",
      "in_reply_to_id": null,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe outdated? Since `m_chain_notifications_handler` is public I don't see why we'd need this.",
      "created_at": "2019-03-18T19:09:26Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r266598533",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/266598533"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1228,
      "original_line": 1228,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/266659428",
      "pull_request_review_id": 215874442,
      "id": 266659428,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NjY1OTQyOA==",
      "diff_hunk": "@@ -1220,6 +1224,8 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n \n     /** Add a KeyOriginInfo to the wallet */\n     bool AddKeyOrigin(const CPubKey& pubkey, const KeyOriginInfo& info);\n+\n+    friend struct WalletTestingSetup;",
      "path": "src/wallet/wallet.h",
      "position": 61,
      "original_position": 52,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "0ca5446db3cda7f911e911a094482311f6a71221",
      "in_reply_to_id": 266598533,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/10973#discussion_r266598533\r\n\r\n> Maybe outdated? Since m_chain_notifications_handler is public I don't see why we'd need this.\r\n\r\nIt's needed to avoid \"error: cannot cast 'CWallet' to its private base class 'interfaces::Chain::Notifications'\" in the WalletTestingSetup constructor:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/0ca5446db3cda7f911e911a094482311f6a71221/src/wallet/test/wallet_test_fixture.cpp#L16\r\n\r\nbecause the relevant base class is private:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/0ca5446db3cda7f911e911a094482311f6a71221/src/wallet/wallet.h#L641",
      "created_at": "2019-03-18T22:00:03Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r266659428",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/266659428"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1228,
      "original_line": 1228,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/266995234",
      "pull_request_review_id": 216291689,
      "id": 266995234,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2Njk5NTIzNA==",
      "diff_hunk": "@@ -942,7 +946,7 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n     ScanResult ScanForWalletTransactions(const uint256& first_block, const uint256& last_block, const WalletRescanReserver& reserver, bool fUpdate);\n     void TransactionRemovedFromMempool(const CTransactionRef &ptx) override;\n     void ReacceptWalletTransactions();\n-    void ResendWalletTransactions(int64_t nBestBlockTime, CConnman* connman) override EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+    void ResendWalletTransactions(int64_t nBestBlockTime) override EXCLUSIVE_LOCKS_REQUIRED(cs_main);",
      "path": "src/wallet/wallet.h",
      "position": null,
      "original_position": 52,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "1a1036a5b3bc48715a5f3955e87203287c37210a",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is this `EXCLUSIVE_LOCKS_REQUIRED(cs_main)` still required? `ResendWalletTransactions()` grabs a `locked_chain` interface.\r\n\r\nSee also the `LOCKS_EXCLUDED(cs_main` annotation on `BlockUntilSyncedToCurrentChain()` and the comment above it. Can that also go?\r\n\r\nThe `BlockUntilSyncedToCurrentChain()` function can definitely use some clean-up after this PR to remove the `locked_chain` and move `isPotentialTip` out of the `Chain::Lock` interface, but that can wait for later.",
      "created_at": "2019-03-19T16:57:35Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r266995234",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/266995234"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 949,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/267084237",
      "pull_request_review_id": 216291689,
      "id": 267084237,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NzA4NDIzNw==",
      "diff_hunk": "@@ -793,20 +794,11 @@ static UniValue combinerawtransaction(const JSONRPCRequest& request)\n UniValue SignTransaction(interfaces::Chain& chain, CMutableTransaction& mtx, const UniValue& prevTxsUnival, CBasicKeyStore *keystore, bool is_temp_keystore, const UniValue& hashType)",
      "path": "src/rpc/rawtransaction.cpp",
      "position": 18,
      "original_position": 9,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "1a1036a5b3bc48715a5f3955e87203287c37210a",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't very much like that:\r\n\r\n- `SignTransction()` is taking a `Chain` interface as an argument\r\n- rpcwallet is calling into rpc/rawtransaction , which should eventually be part of `libbitcoin_node` (https://github.com/bitcoin/bitcoin/pull/10973#pullrequestreview-213000398)\r\n\r\nThose can both be done in a future PR.",
      "created_at": "2019-03-19T20:32:26Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r267084237",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/267084237"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 800,
      "original_line": 800,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/267090091",
      "pull_request_review_id": 216291689,
      "id": 267090091,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NzA5MDA5MQ==",
      "diff_hunk": "@@ -194,6 +253,18 @@ class ChainImpl : public Chain\n         }\n         return true;\n     }\n+    void findCoins(std::map<COutPoint, Coin>& coins) override\n+    {\n+        LOCK2(cs_main, ::mempool.cs);\n+        assert(pcoinsTip);\n+        CCoinsViewCache& chain_view = *::pcoinsTip;\n+        CCoinsViewMemPool mempool_view(&chain_view, ::mempool);\n+        for (auto& coin : coins) {\n+            if (!mempool_view.GetCoin(coin.first, coin.second)) {\n+                coin.second.Clear();",
      "path": "src/interfaces/chain.cpp",
      "position": null,
      "original_position": 107,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "1a1036a5b3bc48715a5f3955e87203287c37210a",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Might be worth a comment here:\r\n\r\n```\r\n// Either the coin is not in the CCoinsViewCache or is spent. Clear it.\r\n```",
      "created_at": "2019-03-19T20:47:26Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r267090091",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/267090091"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 264,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/267165239",
      "pull_request_review_id": 216502554,
      "id": 267165239,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NzE2NTIzOQ==",
      "diff_hunk": "@@ -194,6 +253,18 @@ class ChainImpl : public Chain\n         }\n         return true;\n     }\n+    void findCoins(std::map<COutPoint, Coin>& coins) override\n+    {\n+        LOCK2(cs_main, ::mempool.cs);\n+        assert(pcoinsTip);\n+        CCoinsViewCache& chain_view = *::pcoinsTip;\n+        CCoinsViewMemPool mempool_view(&chain_view, ::mempool);\n+        for (auto& coin : coins) {\n+            if (!mempool_view.GetCoin(coin.first, coin.second)) {\n+                coin.second.Clear();",
      "path": "src/interfaces/chain.cpp",
      "position": null,
      "original_position": 107,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "1a1036a5b3bc48715a5f3955e87203287c37210a",
      "in_reply_to_id": 267090091,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/10973#discussion_r267090091\r\n\r\n> // Either the coin is not in the CCoinsViewCache or is spent. Clear it.\r\n\r\nAdded comment\r\n\r\n ",
      "created_at": "2019-03-20T02:21:46Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r267165239",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/267165239"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 264,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/267165538",
      "pull_request_review_id": 216502554,
      "id": 267165538,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NzE2NTUzOA==",
      "diff_hunk": "@@ -0,0 +1,419 @@\n+#include <interfaces/chain.h>\n+\n+#include <chain.h>\n+#include <chainparams.h>\n+#include <interfaces/handler.h>\n+#include <net.h>\n+#include <policy/fees.h>\n+#include <policy/policy.h>\n+#include <policy/rbf.h>\n+#include <primitives/block.h>\n+#include <primitives/transaction.h>\n+#include <protocol.h>\n+#include <rpc/mining.h>\n+#include <rpc/protocol.h>\n+#include <rpc/server.h>\n+#include <sync.h>\n+#include <timedata.h>\n+#include <txmempool.h>\n+#include <ui_interface.h>\n+#include <uint256.h>\n+#include <univalue.h>\n+#include <util.h>\n+#include <validation.h>\n+#include <validationinterface.h>\n+\n+#include <algorithm>\n+#include <map>\n+#include <memory>\n+#include <tuple>\n+#include <unordered_map>\n+#include <utility>\n+\n+class CReserveScript;\n+\n+namespace interfaces {\n+namespace {\n+\n+//! Extension of std::reference_wrapper with operator< for use as map key.\n+template <typename T>\n+class Ref : public std::reference_wrapper<T>\n+{\n+public:\n+    using std::reference_wrapper<T>::reference_wrapper;\n+    bool operator<(const Ref<T>& other) const { return this->get() < other.get(); }\n+};\n+\n+class LockImpl : public Chain::Lock\n+{\n+    Optional<int> getHeight() override\n+    {\n+        int height = ::chainActive.Height();\n+        if (height >= 0) {\n+            return height;\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> getBlockHeight(const uint256& hash) override\n+    {\n+        auto it = ::mapBlockIndex.find(hash);\n+        if (it != ::mapBlockIndex.end() && it->second) {\n+            if (::chainActive.Contains(it->second)) {\n+                return it->second->nHeight;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    int getBlockDepth(const uint256& hash) override\n+    {\n+        const Optional<int> tip_height = getHeight();\n+        const Optional<int> height = getBlockHeight(hash);\n+        return tip_height && height ? *tip_height - *height + 1 : 0;\n+    }\n+    uint256 getBlockHash(int height) override { return ::chainActive[height]->GetBlockHash(); }\n+    int64_t getBlockTime(int height) override { return ::chainActive[height]->GetBlockTime(); }\n+    int64_t getBlockMedianTimePast(int height) override { return ::chainActive[height]->GetMedianTimePast(); }\n+    bool blockHasTransactions(int height) override\n+    {\n+        CBlockIndex* block = ::chainActive[height];\n+        return block && (block->nStatus & BLOCK_HAVE_DATA) && block->nTx > 0;\n+    }\n+    Optional<int> findEarliestAtLeast(int64_t time) override\n+    {\n+        CBlockIndex* block = ::chainActive.FindEarliestAtLeast(time);\n+        if (block) {\n+            return block->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findLastBefore(int64_t time, int start_height) override\n+    {\n+        CBlockIndex* block = ::chainActive[start_height];\n+        while (block && block->GetBlockTime() < time) {\n+            block = ::chainActive.Next(block);\n+        }\n+        if (block) {\n+            return block->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findPruned(int start_height, Optional<int> stop_height) override\n+    {\n+        if (::fPruneMode) {\n+            CBlockIndex* block = stop_height ? ::chainActive[*stop_height] : ::chainActive.Tip();\n+            while (block && block->nHeight >= start_height) {\n+                if (!(block->nStatus & BLOCK_HAVE_DATA)) {\n+                    return block->nHeight;\n+                }\n+                block = block->pprev;\n+            }\n+        }\n+        return nullopt;\n+    }\n+    Optional<int> findFork(const uint256& hash, Optional<int>* height) override\n+    {\n+        const CBlockIndex *block{nullptr}, *fork{nullptr};\n+        auto it = ::mapBlockIndex.find(hash);\n+        if (it != ::mapBlockIndex.end()) {\n+            block = it->second;\n+            fork = ::chainActive.FindFork(block);\n+        }\n+        if (height) {\n+            if (block) {\n+                *height = block->nHeight;\n+            } else {\n+                height->reset();\n+            }\n+        }\n+        if (fork) {\n+            return fork->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    bool isPotentialTip(const uint256& hash) override\n+    {\n+        if (::chainActive.Tip()->GetBlockHash() == hash) return true;\n+        auto it = ::mapBlockIndex.find(hash);\n+        return it != ::mapBlockIndex.end() && it->second->GetAncestor(::chainActive.Height()) == ::chainActive.Tip();\n+    }\n+    CBlockLocator getLocator() override { return ::chainActive.GetLocator(); }\n+    Optional<int> findLocatorFork(const CBlockLocator& locator) override\n+    {\n+        if (CBlockIndex* fork = FindForkInGlobalIndex(::chainActive, locator)) {\n+            return fork->nHeight;\n+        }\n+        return nullopt;\n+    }\n+    bool checkFinalTx(const CTransaction& tx) override { return CheckFinalTx(tx); }\n+    bool isWitnessEnabled() override { return ::IsWitnessEnabled(::chainActive.Tip(), Params().GetConsensus()); }\n+    bool acceptToMemoryPool(CTransactionRef tx, CValidationState& state) override\n+    {\n+        return AcceptToMemoryPool(::mempool, state, tx, nullptr /* missing inputs */, nullptr /* txn replaced */,\n+            false /* bypass limits */, ::maxTxFee /* absurd fee */);\n+    }\n+};\n+\n+class LockingStateImpl : public LockImpl, public CCriticalBlock\n+{\n+    using CCriticalBlock::CCriticalBlock;\n+};\n+\n+class HandlerImpl : public Handler, private CValidationInterface\n+{\n+public:\n+    HandlerImpl(Chain::Notifications& notifications) : m_notifications(notifications)\n+    {\n+        RegisterValidationInterface(this);\n+    }\n+    ~HandlerImpl() override\n+    {\n+        // Don't call UnregisterValidationInterface here because it would try to\n+        // access virtual methods on this object which can't be accessed during\n+        // destruction. Also UnregisterAllValidationInterfaces is already called\n+        // at this point, so unregistering this object would be redundant.\n+    }\n+    void disconnect() override { UnregisterValidationInterface(this); }\n+    void TransactionAddedToMempool(const CTransactionRef& tx) override\n+    {\n+        m_notifications.TransactionAddedToMempool(tx);\n+    }\n+    void TransactionRemovedFromMempool(const CTransactionRef& tx) override\n+    {\n+        m_notifications.TransactionRemovedFromMempool(tx);\n+    }\n+    void BlockConnected(const std::shared_ptr<const CBlock>& block,\n+        const CBlockIndex* index,\n+        const std::vector<CTransactionRef>& tx_conflicted) override\n+    {\n+        m_notifications.BlockConnected(*block, index->GetBlockHash(), tx_conflicted);\n+    }\n+    void BlockDisconnected(const std::shared_ptr<const CBlock>& block) override\n+    {\n+        m_notifications.BlockDisconnected(*block);\n+    }\n+    void ChainStateFlushed(const CBlockLocator& locator) override { m_notifications.ChainStateFlushed(locator); }\n+    void Inventory(const uint256& hash) override { m_notifications.Inventory(hash); }\n+    void ResendWalletTransactions(int64_t best_block_time, CConnman* connman) override\n+    {\n+        m_notifications.ResendWalletTransactions(best_block_time);\n+    }\n+    Chain::Notifications& m_notifications;\n+};\n+\n+class ChainImpl : public Chain\n+{\n+public:\n+    std::unique_ptr<Chain::Lock> lock(bool try_lock) override\n+    {\n+        auto result = MakeUnique<LockingStateImpl>(::cs_main, \"cs_main\", __FILE__, __LINE__, try_lock);\n+        if (try_lock && result && !*result) return {};\n+        // std::move necessary on some compilers due to conversion from\n+        // LockingStateImpl to Lock pointer\n+        return std::move(result);\n+    }\n+    std::unique_ptr<Chain::Lock> assumeLocked() override { return MakeUnique<LockImpl>(); }\n+    bool findBlock(const uint256& hash, CBlock* block, int64_t* time, int64_t* time_max) override\n+    {\n+        CBlockIndex* index;\n+        {\n+            LOCK(cs_main);\n+            auto it = ::mapBlockIndex.find(hash);\n+            if (it == ::mapBlockIndex.end()) {\n+                return false;\n+            }\n+            index = it->second;\n+            if (time) {\n+                *time = index->GetBlockTime();\n+            }\n+            if (time_max) {\n+                *time_max = index->GetBlockTimeMax();\n+            }\n+        }\n+        if (block && !ReadBlockFromDisk(*block, index, Params().GetConsensus())) {\n+            block->SetNull();\n+        }\n+        return true;\n+    }\n+    double guessVerificationProgress(const uint256& block_hash) override\n+    {\n+        LOCK(cs_main);\n+        auto it = ::mapBlockIndex.find(block_hash);\n+        return GuessVerificationProgress(Params().TxData(), it != ::mapBlockIndex.end() ? it->second : nullptr);\n+    }\n+    int64_t getVirtualTransactionSize(const CTransaction& tx) override { return GetVirtualTransactionSize(tx); }\n+    RBFTransactionState isRBFOptIn(const CTransaction& tx) override\n+    {\n+        LOCK(::mempool.cs);\n+        return IsRBFOptIn(tx, ::mempool);\n+    }\n+    bool hasDescendantsInMempool(const uint256& txid) override\n+    {\n+        LOCK(::mempool.cs);\n+        auto it_mp = ::mempool.mapTx.find(txid);\n+        return it_mp != ::mempool.mapTx.end() && it_mp->GetCountWithDescendants() > 1;\n+    }\n+    bool relayTransaction(const uint256& txid) override\n+    {\n+        if (g_connman) {\n+            CInv inv(MSG_TX, txid);\n+            g_connman->ForEachNode([&inv](CNode* node) { node->PushInventory(inv); });\n+            return true;\n+        }\n+        return false;\n+    }\n+    bool transactionWithinChainLimit(const uint256& txid, size_t chain_limit) override\n+    {\n+        return ::mempool.TransactionWithinChainLimit(txid, chain_limit);\n+    }\n+    bool checkChainLimits(CTransactionRef tx) override\n+    {\n+        LockPoints lp;\n+        CTxMemPoolEntry entry(tx, 0, 0, 0, false, 0, lp);\n+        CTxMemPool::setEntries setAncestors;\n+        size_t nLimitAncestors = gArgs.GetArg(\"-limitancestorcount\", DEFAULT_ANCESTOR_LIMIT);\n+        size_t nLimitAncestorSize = gArgs.GetArg(\"-limitancestorsize\", DEFAULT_ANCESTOR_SIZE_LIMIT) * 1000;\n+        size_t nLimitDescendants = gArgs.GetArg(\"-limitdescendantcount\", DEFAULT_DESCENDANT_LIMIT);\n+        size_t nLimitDescendantSize = gArgs.GetArg(\"-limitdescendantsize\", DEFAULT_DESCENDANT_SIZE_LIMIT) * 1000;\n+        std::string errString;\n+        if (!::mempool.CalculateMemPoolAncestors(entry, setAncestors, nLimitAncestors, nLimitAncestorSize,\n+                nLimitDescendants, nLimitDescendantSize, errString)) {\n+            return false;\n+        }\n+        return true;\n+    }\n+    CFeeRate estimateSmartFee(int num_blocks, bool conservative, FeeCalculation* calc) override\n+    {\n+        return ::feeEstimator.estimateSmartFee(num_blocks, calc, conservative);\n+    }\n+    int estimateMaxBlocks() override\n+    {\n+        return ::feeEstimator.HighestTargetTracked(FeeEstimateHorizon::LONG_HALFLIFE);\n+    }\n+    CFeeRate poolMinFee() override\n+    {\n+        return ::mempool.GetMinFee(gArgs.GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000);\n+    }\n+    bool getPruneMode() override { return ::fPruneMode; }\n+    bool p2pEnabled() override { return g_connman != nullptr; }\n+    int64_t getAdjustedTime() override { return GetAdjustedTime(); }\n+    void initMessage(const std::string& message) override { ::uiInterface.InitMessage(message); }\n+    void initWarning(const std::string& message) override { InitWarning(message); }\n+    void initError(const std::string& message) override { InitError(message); }\n+    UniValue generateBlocks(std::shared_ptr<CReserveScript> coinbase_script,\n+        int num_blocks,\n+        uint64_t max_tries,\n+        bool keep_script) override\n+    {\n+        return ::generateBlocks(coinbase_script, num_blocks, max_tries, keep_script);\n+    }\n+    unsigned int parseConfirmTarget(const UniValue& value) override { return ParseConfirmTarget(value); }\n+    std::unique_ptr<Handler> handleNotifications(Notifications& notifications) override\n+    {\n+        return MakeUnique<HandlerImpl>(notifications);\n+    }\n+    void waitForNotifications() override { SyncWithValidationInterfaceQueue(); }\n+    std::unique_ptr<Handler> handleRpc(const CRPCCommand& command) override;\n+\n+    //! Map of RPC method name to forwarder. If multiple clients provide\n+    //! implementations of the same RPC method, the RPC forwarder can dispatch\n+    //! between them.\n+    class RpcForwarder;\n+    std::map<Ref<const std::string>, RpcForwarder> m_rpc_forwarders;\n+};\n+\n+//! Forwarder for one RPC method.\n+class ChainImpl::RpcForwarder\n+{\n+public:\n+    RpcForwarder(const CRPCCommand& command) : m_command(command)\n+    {\n+        m_command.actor = [this](const JSONRPCRequest& request) { return forwardRequest(request); };\n+    }\n+\n+    bool registerForwarder() { return ::tableRPC.appendCommand(m_command.name, &m_command); }\n+\n+    void addCommand(const CRPCCommand& command) { m_commands.emplace_back(&command); }\n+\n+    void removeCommand(const CRPCCommand& command)\n+    {\n+        m_commands.erase(std::remove(m_commands.begin(), m_commands.end(), &command));\n+    }\n+\n+    UniValue forwardRequest(const JSONRPCRequest& request) const\n+    {\n+        // Simple forwarding of RPC requests. This just sends the request to the",
      "path": "src/interfaces/chain.cpp",
      "position": null,
      "original_position": 344,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "af8f8087699c30ec83995c54112955253bcaba84",
      "in_reply_to_id": 186538449,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/10973#discussion_r186538449\r\n\r\n> Supporting multiple clients makes this more complex than it needs to be.\r\n\r\nThis should be a lot simpler with commit f157e7a73ba746c38c5437540806151fbfa4b286 replaced by 4e4d9e9f85eaf9c3bec48559bd4cad3e8a9333ca ([pr/wipc-sep.101](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.101) -> [pr/wipc-sep.102](https://github.com/ryanofsky/bitcoin/commits/pr/wipc-sep.102)).\r\n\r\nAdding a new rpc server `removeCommand` method allowed dropping the `m_rpc_forwarders` map and merging the `RpcHandler` and `RpcForwarder` classes. Changing rpc server `appendCommand` to accept multiple commands was also not too hard and allowed getting rid of the `RpcForwarder` loop and `m_commands` vector. ",
      "created_at": "2019-03-20T02:23:45Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r267165538",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/267165538"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 370,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/267165594",
      "pull_request_review_id": 216502554,
      "id": 267165594,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NzE2NTU5NA==",
      "diff_hunk": "@@ -793,20 +794,11 @@ static UniValue combinerawtransaction(const JSONRPCRequest& request)\n UniValue SignTransaction(interfaces::Chain& chain, CMutableTransaction& mtx, const UniValue& prevTxsUnival, CBasicKeyStore *keystore, bool is_temp_keystore, const UniValue& hashType)",
      "path": "src/rpc/rawtransaction.cpp",
      "position": 18,
      "original_position": 9,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "1a1036a5b3bc48715a5f3955e87203287c37210a",
      "in_reply_to_id": 267084237,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/10973#discussion_r267084237\r\n\r\n> Those can both be done in a future PR.\r\n\r\nAdded todo (https://github.com/ryanofsky/bitcoin/blob/pr/wipc-sep.102/src/rpc/rawtransaction.cpp#L794-L799) and also moved `findCoins` code into a global method so it will be easier to get rid of the Chain argument later.",
      "created_at": "2019-03-20T02:24:08Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r267165594",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/267165594"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 800,
      "original_line": 800,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/267165624",
      "pull_request_review_id": 216502554,
      "id": 267165624,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI2NzE2NTYyNA==",
      "diff_hunk": "@@ -942,7 +946,7 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n     ScanResult ScanForWalletTransactions(const uint256& first_block, const uint256& last_block, const WalletRescanReserver& reserver, bool fUpdate);\n     void TransactionRemovedFromMempool(const CTransactionRef &ptx) override;\n     void ReacceptWalletTransactions();\n-    void ResendWalletTransactions(int64_t nBestBlockTime, CConnman* connman) override EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+    void ResendWalletTransactions(int64_t nBestBlockTime) override EXCLUSIVE_LOCKS_REQUIRED(cs_main);",
      "path": "src/wallet/wallet.h",
      "position": null,
      "original_position": 52,
      "commit_id": "d358466de15ef29c1d2bccb9aebab360d574d1d0",
      "original_commit_id": "1a1036a5b3bc48715a5f3955e87203287c37210a",
      "in_reply_to_id": 266995234,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/10973#discussion_r266995234\r\n\r\n> Is this EXCLUSIVE_LOCKS_REQUIRED(cs_main) still required? ResendWalletTransactions() grabs a locked_chain interface.\r\n\r\nIt's not required and should have been removed. I replaced `EXCLUSIVE_LOCKS_REQUIRED(cs_main)` with a `locked_chain` argument. \r\n\r\nI also added todos in https://github.com/ryanofsky/bitcoin/blob/pr/wipc-sep.102/src/interfaces/chain.h#L46-L50 and https://github.com/ryanofsky/bitcoin/blob/pr/wipc-sep.102/src/interfaces/chain.cpp#L208-L212 for simplifying `BlockUntilSyncedToCurrentChain` and removing `ResendWalletTransactions`.\r\n\r\n\r\n\r\n",
      "created_at": "2019-03-20T02:24:20Z",
      "updated_at": "2019-03-20T11:57:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10973#discussion_r267165624",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/267165624"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10973"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 949,
      "side": "RIGHT"
    }
  ]
}