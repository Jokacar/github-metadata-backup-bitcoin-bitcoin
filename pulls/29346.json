{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29346",
    "id": 1700291038,
    "node_id": "PR_kwDOABII585lWGHe",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/29346",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/29346.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/29346.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29346",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29346/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29346/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29346/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/af8e738d37eb3787d91fec250d83cc78197d16e9",
    "number": 29346,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "Stratum v2 Noise Protocol",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Parent PR #29432 \r\n\r\nThis is the first part of the Stratum v2 Template Provider change that can be a standalone pull request.\r\n\r\nThe Noise Protocol Framework is defined here: https://noiseprotocol.org/noise.html\r\n\r\nIt's quite similar to BIP324. The main differences are explained here, including why Stratum v2 can't use BIP234 (yet): https://delvingbitcoin.org/t/stratum-v2-noise-protocol-bip324-nuggets/413\r\n\r\nThe implementation is based on revision 38, 2018-07-11 (most recent at the time of writing).\r\n\r\nThe Stratum v2 spec defines the specific choice of ciphers: https://github.com/stratum-mining/sv2-spec/blob/main/04-Protocol-Security.md\r\n\r\nThis protocol has been implemented in the Stratum Reference Implementation (SRI, using [rust-bitcoin](https://github.com/rust-bitcoin/rust-bitcoin)). https://github.com/stratum-mining/stratum\r\n\r\nIt has also been (independently) implemented in BraiinsOS. This part is currently not open source, and it's behind on some recent changes.\r\n\r\nThe classes in `sv2_noise.h` attempt to stay close to the paper, whereas the test and fuzzer code borrow heavily from BIP324.\r\n\r\nIt's ready for review, but not for merge:\r\n\r\n1. The parent PR may need more conceptual review (and perhaps the entire spec, but that would really slow things down)\r\n2. We could decide to not support Noise encryption at all and require users to install separate software for that. Code review of this PR could help inform that decision.\r\n\r\nYou can see this code in action in the parent PR #29432.\r\n\r\nInitial seed corpus: https://github.com/bitcoin-core/qa-assets/pull/169\r\n\r\n---\r\n\r\nThe following spec change is already implemented in this PR and in SRI:\r\n\r\n* The spec is being modified to use EllSwift (instead of regular x-only) for the encoding of public keys and ECDH: https://github.com/stratum-mining/sv2-spec/pull/66",
    "labels": [],
    "created_at": "2024-01-29T16:14:50Z",
    "updated_at": "2024-02-29T21:35:01Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "c619bb2c8c76fbc8a49c241e556aa60639c3dc5d",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "Sjors:2024/01/sv2_noise",
      "ref": "2024/01/sv2_noise",
      "sha": "af8e738d37eb3787d91fec250d83cc78197d16e9",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 92390696,
        "node_id": "MDEwOlJlcG9zaXRvcnk5MjM5MDY5Ng==",
        "name": "bitcoin",
        "full_name": "Sjors/bitcoin",
        "owner": {
          "login": "Sjors",
          "id": 10217,
          "node_id": "MDQ6VXNlcjEwMjE3",
          "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Sjors",
          "html_url": "https://github.com/Sjors",
          "followers_url": "https://api.github.com/users/Sjors/followers",
          "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
          "organizations_url": "https://api.github.com/users/Sjors/orgs",
          "repos_url": "https://api.github.com/users/Sjors/repos",
          "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/Sjors/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/Sjors/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/Sjors/bitcoin",
        "archive_url": "https://api.github.com/repos/Sjors/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/Sjors/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/Sjors/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/Sjors/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/Sjors/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/Sjors/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/Sjors/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/Sjors/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/Sjors/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/Sjors/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/Sjors/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/Sjors/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/Sjors/bitcoin/events",
        "forks_url": "https://api.github.com/repos/Sjors/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/Sjors/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/Sjors/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/Sjors/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/Sjors/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/Sjors/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/Sjors/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/Sjors/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/Sjors/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/Sjors/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/Sjors/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/Sjors/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/Sjors/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/Sjors/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/Sjors/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/Sjors/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:Sjors/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/Sjors/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/Sjors/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/Sjors/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/Sjors/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/Sjors/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/Sjors/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/Sjors/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/Sjors/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/Sjors/bitcoin/hooks",
        "svn_url": "https://github.com/Sjors/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 5,
        "stargazers_count": 4,
        "watchers_count": 4,
        "size": 230008,
        "default_branch": "sv2",
        "open_issues_count": 3,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": false,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-02-27T18:20:38Z",
        "created_at": "2017-05-25T10:05:54Z",
        "updated_at": "2024-01-09T16:46:04Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "baed5edeb611d949982c849461949c645f8998a7",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34713,
        "stargazers_count": 74309,
        "watchers_count": 74309,
        "size": 250562,
        "default_branch": "master",
        "open_issues_count": 684,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-02-29T21:44:09Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-02-29T21:34:53Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29346"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 1160,
    "deletions": 1,
    "changed_files": 9,
    "commits": 2,
    "review_comments": 14,
    "comments": 6
  },
  "events": [
    {
      "event": "commented",
      "id": 1915046817,
      "node_id": "IC_kwDOABII585yJUuh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1915046817",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-29T16:14:54Z",
      "updated_at": "2024-02-29T21:35:01Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/29346).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\nA summary of reviews will appear here.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#29419](https://github.com/bitcoin/bitcoin/pull/29419) (log: deduplicate category names and improve logging.cpp by vasild)\n* [#29415](https://github.com/bitcoin/bitcoin/pull/29415) (Broadcast own transactions only via short-lived Tor or I2P connections by vasild)\n* [#29015](https://github.com/bitcoin/bitcoin/pull/29015) (kernel: Streamline util library by ryanofsky)\n* [#26697](https://github.com/bitcoin/bitcoin/pull/26697) (logging: use bitset for categories by LarryRuane)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29346#issuecomment-1915046817",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29346"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-29T16:15:41Z",
      "updated_at": "2024-01-29T16:15:41Z",
      "source": {
        "issue": {
          "id": 2020711772,
          "node_id": "PR_kwDOABII585g48_Q",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28983",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28983/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28983/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28983/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28983",
          "number": 28983,
          "state": "closed",
          "state_reason": null,
          "title": "Stratum v2 Template Provider (take 2)",
          "body": "Based on on @Fi3's https://github.com/bitcoin/bitcoin/compare/master...Fi3:bitcoin:PatchTemplates which is based on @ccdle12's #27854. I rebased it and re-wrote the commit history. See the original branch for the evolution of the spec.\r\n\r\nSee [docs/stratum-v2.md](https://github.com/Sjors/bitcoin/blob/2023/11/sv2-poll/doc/stratum-v2.md) for a brief description of Stratum v2 and the role of Bitcoin Core in that system..\r\n\r\n## What to test and review? \r\n\r\n- [ ] #29295 \r\n- [ ] Custom signet mining improvement: #29032\r\n- [ ] Make nested pull-requests easier: #29274\r\n\r\nSee the [testing guide](https://github.com/Sjors/bitcoin/blob/2023/11/sv2-poll/doc/stratum-v2.md#testing-guide) for various ways to test this PR. This branch is actively used by (testnet) pools, so it should be ready for high level review.\r\n\r\nI'll make separate pull requests for parts that are ready for detailed review. Probably starting with ECDH and the Noise Protocol.\r\n\r\n## Implementation notes\r\n\r\nSilent Payments also needs the ECDH module, so I cherry-picked the commit from #28122. It uses ECDH is a slightly different way, but perhaps there's more overlap to be had.\r\n\r\n## Contributing\r\n\r\nIf you want to help out with any of the issues below, please open a PR to my fork. I will then squash your commits into my own where needed. \r\n\r\n## Upstream issues\r\n\r\n### Spec\r\n\r\n- [ ] modify spec to use `ProvideMissingTransactions`? (followup?)\r\n- [ ] pick a good default for `default_coinbase_tx_additional_output_size` (see `getblocktemplate` RPC)\r\n\r\n### Noise\r\n\r\n- [ ] use EllSwift https://github.com/stratum-mining/sv2-spec/pull/66, implemented in https://github.com/Sjors/bitcoin/pull/28\r\n- [ ] certificate signing issue: https://github.com/stratum-mining/stratum/issues/717, fix in https://github.com/Sjors/bitcoin/pull/29\r\n\r\n### Networking\r\n\r\n- [ ] add `-sv2bind` and `-sv2allowip`\r\n- [x] persist static key (needs #29229)\r\n- [ ] optional `-sv2cert`\r\n- [x] create `Sv2Transport` subclass similar to `V2Transport`: https://github.com/Sjors/bitcoin/pull/27\r\n- [ ] drop `Sv2TemplateProvider::SendBuf`, reuse p2p socket handling if possible\r\n- [ ] limit number of connected clients\r\n- [ ] maybe limit (number of) `coinbase_output_max_additional_size`\r\n- [ ] TMP / TODO comments at the top of `sv2_messages.h`\r\n- [ ] adjust base58 encoding of authority public key https://github.com/stratum-mining/stratum/issues/721\r\n\r\n### Testing\r\n\r\n- [ ] expand sv2_template_provider_tests\r\n- [ ] add transport fuzzer\r\n- [ ] add template provider fuzzer\r\n\r\n### Template generation and updating\r\n\r\n- [x] hold on to templates a bit after a block is found https://github.com/stratum-mining/stratum/issues/709 (in case of race to prevent downstream crashes, though we still wouldn't relay it without additional changes)\r\n- [ ] hold on to template transactions even if the mempool drops them (for some time)\r\n- [ ] group templates with the same `coinbase_tx_additional_output_size`\r\n- [ ] don't generate templates when no client is connected\r\n\r\n### Misc\r\n\r\n- [ ] move / refactor `GetMerklePathForCoinbase` helper (see Future Work in original PR, and https://github.com/stratum-mining/stratum/issues/567)\r\n- [ ] truncate long trace messages\r\n\r\n## Potential followups\r\n\r\n- [ ] implement Noise protocol and mock client in Python, add functional tests (based on `test/sv2_template_provider_tests.cpp`)\r\n- [ ] use process separation, e.g. a `bitcoin-tp` binary, see [multiprocess.md](https://github.com/bitcoin/bitcoin/blob/master/doc/design/multiprocess.md?plain=1)\r\n- [ ] make template updates push based, on top of Cluster Mempool, see [docs/stratum-v2.md](https://github.com/Sjors/bitcoin/blob/2023/11/sv2-poll/doc/stratum-v2.md) (for new blocks it's already push based)\r\n- [ ] push empty template for the next block (downstream can ignore or use, https://github.com/stratum-mining/stratum/issues/715)\r\n  - send prevhash for this template as soon as any new block arrives\r\n- [ ] push optimistic template for the next block\r\n  - send prevhash if and only if our template won (i.e. we got a `SubmitSolution` message)",
          "user": {
            "login": "Sjors",
            "id": 10217,
            "node_id": "MDQ6VXNlcjEwMjE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sjors",
            "html_url": "https://github.com/Sjors",
            "followers_url": "https://api.github.com/users/Sjors/followers",
            "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
            "organizations_url": "https://api.github.com/users/Sjors/orgs",
            "repos_url": "https://api.github.com/users/Sjors/repos",
            "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Sjors/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 118378960,
              "node_id": "MDU6TGFiZWwxMTgzNzg5NjA=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Mining",
              "name": "Mining",
              "color": "c7def8",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 29,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28983",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28983",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28983.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28983.patch"
          },
          "closed_at": "2024-02-14T11:35:17Z",
          "created_at": "2023-12-01T11:39:27Z",
          "updated_at": "2024-02-14T11:35:18Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 11631222432,
      "node_id": "LE_lADOABII5859hNA7zwAAAAK1Rl6g",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11631222432",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-29T17:42:00Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-29T20:15:52Z",
      "updated_at": "2024-01-29T20:15:52Z",
      "source": {
        "issue": {
          "id": 2029493410,
          "node_id": "PR_kwDOABII585hWvMx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29015",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29015/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29015/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29015/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29015",
          "number": 29015,
          "state": "open",
          "state_reason": null,
          "title": "kernel: Streamline util library",
          "body": "Remove `fees.h`, `errors.h`, and `spanparsing.h` from the util library. Specifically:\r\n\r\n- Move `Split` functions from `util/spanparsing.h` to `util/string.h`, using `util` namespace for clarity.\r\n- Move remaining spanparsing functions to `script/parsing.h` since they are used for descriptor and miniscript parsing.\r\n- Combine `util/fees.h` and `util/errors.h` into `common/messages.h` so there is a place for simple functions that generate user messages to live, and these functions are not part of the util library.\r\n\r\nMotivation for this change is that the util library is a dependency of the kernel, and we should remove functionality from util that shouldn't be called by kernel code or kernel applications. These changes should also improve code organization and make functions easier to discover. Some of these same moves are (or were) part of #28690, but did not help with code organization, or made it worse, so it is better to move them and clean them up in the same PR so code only has to change one time.\r\n",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 18,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29015",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29015",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29015.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29015.patch"
          },
          "created_at": "2023-12-06T22:26:39Z",
          "updated_at": "2024-02-28T05:39:32Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-29T23:26:24Z",
      "updated_at": "2024-01-29T23:26:24Z",
      "source": {
        "issue": {
          "id": 1495740611,
          "node_id": "PR_kwDOABII585FZpvc",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26697",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26697/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26697/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26697/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26697",
          "number": 26697,
          "state": "open",
          "state_reason": null,
          "title": "logging: use bitset for categories",
          "body": "... rather than integer bitmasks such as (1 << 28). This removes the limit of 32 logging categories -- we're up to 28 currently.\r\n\r\nThis is an alternative to #26619 that was [suggested](https://github.com/bitcoin/bitcoin/pull/26619#issuecomment-1343902657) by luke-jr.\r\n\r\ntag jonatack klementtan",
          "user": {
            "login": "LarryRuane",
            "id": 8321330,
            "node_id": "MDQ6VXNlcjgzMjEzMzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LarryRuane",
            "html_url": "https://github.com/LarryRuane",
            "followers_url": "https://api.github.com/users/LarryRuane/followers",
            "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
            "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
            "repos_url": "https://api.github.com/users/LarryRuane/repos",
            "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 16,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26697",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26697",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26697.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26697.patch"
          },
          "created_at": "2022-12-14T05:40:18Z",
          "updated_at": "2024-02-27T22:22:03Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-30T10:16:59Z",
      "updated_at": "2024-01-30T10:16:59Z",
      "source": {
        "issue": {
          "id": 2096139309,
          "node_id": "PR_kwDOABII585k1vcl",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29295",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29295/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29295/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29295/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29295",
          "number": 29295,
          "state": "open",
          "state_reason": null,
          "title": "CKey: add Serialize and Unserialize",
          "body": "In #28983 I need to read and write two private keys to/from disk that are used by Stratum v2 peers to (optionally) authenticate us.\r\n\r\nFor the write part, I initially just put the key data into a `std::vector<unsigned char>` and then used a modified version of `WriteBinaryFile`. But @vasild pointed out in #29229 that:\r\n\r\n> `CKey` stores sensitive data and takes care to wipe it from memory when freed. In #28983 `Read/WriteBinaryData()` is used in a way that defeats that - the sensitive data will be copied to a temporary variable (ordinary `std::vector`) for IO. Can we change `Read/WriteBinaryData()` to operate directly on `CKey` in such a way that data goes directly from `CKey` to the disk?\r\n\r\nThis PR tries a different approach that hopefully addresses that. See https://github.com/Sjors/bitcoin/pull/32 for how it's used (in `sv2_template_provider.cpp`).",
          "user": {
            "login": "Sjors",
            "id": 10217,
            "node_id": "MDQ6VXNlcjEwMjE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sjors",
            "html_url": "https://github.com/Sjors",
            "followers_url": "https://api.github.com/users/Sjors/followers",
            "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
            "organizations_url": "https://api.github.com/users/Sjors/orgs",
            "repos_url": "https://api.github.com/users/Sjors/repos",
            "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Sjors/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 26,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29295",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29295",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29295.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29295.patch"
          },
          "created_at": "2024-01-23T13:50:53Z",
          "updated_at": "2024-02-26T20:11:30Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11639834288,
      "node_id": "HRFPE_lADOABII5859hNA7zwAAAAK1ycaw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11639834288",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-30T10:42:11Z"
    },
    {
      "event": "reviewed",
      "id": 1852611449,
      "node_id": "PRR_kwDOABII585ubJt5",
      "url": null,
      "actor": null,
      "commit_id": "a392a4c2f3be7d2751502adc887802a24f0f6898",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "",
      "user": {
        "login": "winlover32",
        "id": 74832157,
        "node_id": "MDQ6VXNlcjc0ODMyMTU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/74832157?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/winlover32",
        "html_url": "https://github.com/winlover32",
        "followers_url": "https://api.github.com/users/winlover32/followers",
        "following_url": "https://api.github.com/users/winlover32/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/winlover32/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/winlover32/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/winlover32/subscriptions",
        "organizations_url": "https://api.github.com/users/winlover32/orgs",
        "repos_url": "https://api.github.com/users/winlover32/repos",
        "events_url": "https://api.github.com/users/winlover32/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/winlover32/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29346#pullrequestreview-1852611449",
      "submitted_at": "2024-01-30T23:40:35Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29346"
    },
    {
      "event": "reviewed",
      "id": 1852616925,
      "node_id": "PRR_kwDOABII585ubLDd",
      "url": null,
      "actor": null,
      "commit_id": "a392a4c2f3be7d2751502adc887802a24f0f6898",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "",
      "user": {
        "login": "winlover32",
        "id": 74832157,
        "node_id": "MDQ6VXNlcjc0ODMyMTU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/74832157?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/winlover32",
        "html_url": "https://github.com/winlover32",
        "followers_url": "https://api.github.com/users/winlover32/followers",
        "following_url": "https://api.github.com/users/winlover32/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/winlover32/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/winlover32/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/winlover32/subscriptions",
        "organizations_url": "https://api.github.com/users/winlover32/orgs",
        "repos_url": "https://api.github.com/users/winlover32/repos",
        "events_url": "https://api.github.com/users/winlover32/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/winlover32/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29346#pullrequestreview-1852616925",
      "submitted_at": "2024-01-30T23:45:23Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29346"
    },
    {
      "event": "reviewed",
      "id": 1853197747,
      "node_id": "PRR_kwDOABII585udY2z",
      "url": null,
      "actor": null,
      "commit_id": "a392a4c2f3be7d2751502adc887802a24f0f6898",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29346#pullrequestreview-1853197747",
      "submitted_at": "2024-01-31T08:57:57Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29346"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11671317055,
      "node_id": "HRFPE_lADOABII5859hNA7zwAAAAK3qio_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11671317055",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-01T14:53:06Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11674417210,
      "node_id": "HRFPE_lADOABII5859hNA7zwAAAAK32Xg6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11674417210",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-01T18:52:28Z"
    },
    {
      "event": "commented",
      "id": 1922011219,
      "node_id": "IC_kwDOABII585yj5BT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1922011219",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-01T18:53:41Z",
      "updated_at": "2024-02-01T19:04:29Z",
      "author_association": "MEMBER",
      "body": "I moved the static constants into classes and renamed them a bit. Expanded the fuzzer to send multiple messages back and forth (like the BIP324 fuzzer).\r\n\r\nI dropped the 1 hour wiggle room in certificate timestamps, because it adds complexity and I don't expect this to cause any issues in practice. A self-signed certificate is generated when the TemplateProvider loads, which is unlikely the same second someone connects to it.\r\n\r\nThe fuzzer found a bug where I forgot to defragment messages larger than the chunk size. Since the Template Provider generally only _sends_ large messages, this (probably) wasn't caught in testing.\r\n\r\n`DecryptAndHash` was broken in a way that my initial tests didn't catch (not sure why), nor interoperability tests because this iniator-side function is only used in test code. But I managed to break something in the ensuing refactor, will clean it up later...\r\n\r\n[it's currently in a broken state, second ECDH handshake gives different result, maybe due to bad memory management]",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29346#issuecomment-1922011219",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29346"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11683105943,
      "node_id": "HRFPE_lADOABII5859hNA7zwAAAAK4XgyX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11683105943",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-02T11:46:48Z"
    },
    {
      "event": "commented",
      "id": 1923648187,
      "node_id": "IC_kwDOABII585yqIq7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1923648187",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-02T11:47:01Z",
      "updated_at": "2024-02-02T12:18:01Z",
      "author_association": "MEMBER",
      "body": "Alright, code is back in working state. I dropped a bunch of spurious `Make*ByteSpan` (mostly by switching remaining uses of `uint8_t` to `std::byte`).\r\n\r\nAlso switched to the new logging convention, mostly `LogTrace()`. Also expanded the fuzzer to mess with bytes during the handshake.\r\n\r\n(fuzzing for a few hours now, will submit a draft corpus if it doesn't find anything)",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29346#issuecomment-1923648187",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29346"
    },
    {
      "event": "unlabeled",
      "id": 11683727526,
      "node_id": "UNLE_lADOABII5859hNA7zwAAAAK4Z4im",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11683727526",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-02T12:50:09Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-02T14:49:33Z",
      "updated_at": "2024-02-02T14:49:33Z",
      "source": {
        "issue": {
          "id": 2115109815,
          "node_id": "PR_kwDOCgmu_85l12sm",
          "url": "https://api.github.com/repos/bitcoin-core/qa-assets/issues/169",
          "repository_url": "https://api.github.com/repos/bitcoin-core/qa-assets",
          "labels_url": "https://api.github.com/repos/bitcoin-core/qa-assets/issues/169/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-core/qa-assets/issues/169/comments",
          "events_url": "https://api.github.com/repos/bitcoin-core/qa-assets/issues/169/events",
          "html_url": "https://github.com/bitcoin-core/qa-assets/pull/169",
          "number": 169,
          "state": "open",
          "state_reason": null,
          "title": "Initial corpus for sv2_noise_cipher_roundtrip",
          "body": "Generated by running for about two hours on an AMD Ryzen 7950x (32 threads) with Ubuntu 23.10 using Clang 16.0.6 and libFuzzer.\r\n\r\nI used `--with-sanitizers=fuzzer`. Merged using `--m_dir` into 1.3MB.\r\n\r\nI'll do a longer run once https://github.com/bitcoin/bitcoin/pull/29346 has had more review.",
          "user": {
            "login": "Sjors",
            "id": 10217,
            "node_id": "MDQ6VXNlcjEwMjE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sjors",
            "html_url": "https://github.com/Sjors",
            "followers_url": "https://api.github.com/users/Sjors/followers",
            "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
            "organizations_url": "https://api.github.com/users/Sjors/orgs",
            "repos_url": "https://api.github.com/users/Sjors/repos",
            "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Sjors/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 0,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin-core/qa-assets/pulls/169",
            "html_url": "https://github.com/bitcoin-core/qa-assets/pull/169",
            "diff_url": "https://github.com/bitcoin-core/qa-assets/pull/169.diff",
            "patch_url": "https://github.com/bitcoin-core/qa-assets/pull/169.patch"
          },
          "created_at": "2024-02-02T14:49:18Z",
          "updated_at": "2024-02-02T14:49:33Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11700715172,
      "node_id": "HRFPE_lADOABII5859hNA7zwAAAAK5ar6k",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11700715172",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-05T09:02:26Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-05T09:10:20Z",
      "updated_at": "2024-02-05T09:10:20Z",
      "source": {
        "issue": {
          "id": 2094275066,
          "node_id": "PR_kwDOBYHFKM5kvaCE",
          "url": "https://api.github.com/repos/Sjors/bitcoin/issues/31",
          "repository_url": "https://api.github.com/repos/Sjors/bitcoin",
          "labels_url": "https://api.github.com/repos/Sjors/bitcoin/issues/31/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/Sjors/bitcoin/issues/31/comments",
          "events_url": "https://api.github.com/repos/Sjors/bitcoin/issues/31/events",
          "html_url": "https://github.com/Sjors/bitcoin/pull/31",
          "number": 31,
          "state": "closed",
          "state_reason": null,
          "title": "Add Sv2Noise fuzzer",
          "body": "Waiting for #28 and #29 to land before merging this into the main PR.\r\n\r\nTodo:\r\n\r\n- [ ] include #33\r\n- [ ] more coverage (e.g. messages with swapped bytes, wrong length)\r\n- [ ] make sure to cover message larger than chunk size\r\n- [ ] drop trailing BIP324 code (after absorbing the useful bits)\r\n- [ ] adjust to EllSwift after #28\r\n- [ ] adjust to #29  ",
          "user": {
            "login": "Sjors",
            "id": 10217,
            "node_id": "MDQ6VXNlcjEwMjE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sjors",
            "html_url": "https://github.com/Sjors",
            "followers_url": "https://api.github.com/users/Sjors/followers",
            "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
            "organizations_url": "https://api.github.com/users/Sjors/orgs",
            "repos_url": "https://api.github.com/users/Sjors/repos",
            "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Sjors/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "OWNER",
          "locked": false,
          "comments": 2,
          "pull_request": {
            "url": "https://api.github.com/repos/Sjors/bitcoin/pulls/31",
            "html_url": "https://github.com/Sjors/bitcoin/pull/31",
            "diff_url": "https://github.com/Sjors/bitcoin/pull/31.diff",
            "patch_url": "https://github.com/Sjors/bitcoin/pull/31.patch"
          },
          "closed_at": "2024-02-05T09:10:19Z",
          "created_at": "2024-01-22T16:20:56Z",
          "updated_at": "2024-02-05T09:10:20Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "plebhash",
        "id": 147345153,
        "node_id": "U_kgDOCMhPAQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/147345153?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/plebhash",
        "html_url": "https://github.com/plebhash",
        "followers_url": "https://api.github.com/users/plebhash/followers",
        "following_url": "https://api.github.com/users/plebhash/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/plebhash/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/plebhash/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/plebhash/subscriptions",
        "organizations_url": "https://api.github.com/users/plebhash/orgs",
        "repos_url": "https://api.github.com/users/plebhash/repos",
        "events_url": "https://api.github.com/users/plebhash/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/plebhash/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-07T17:46:51Z",
      "updated_at": "2024-02-07T17:46:51Z",
      "source": {
        "issue": {
          "id": 2079195389,
          "node_id": "I_kwDOFDde0s577gD9",
          "url": "https://api.github.com/repos/stratum-mining/stratum/issues/717",
          "repository_url": "https://api.github.com/repos/stratum-mining/stratum",
          "labels_url": "https://api.github.com/repos/stratum-mining/stratum/issues/717/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/stratum-mining/stratum/issues/717/comments",
          "events_url": "https://api.github.com/repos/stratum-mining/stratum/issues/717/events",
          "html_url": "https://github.com/stratum-mining/stratum/issues/717",
          "number": 717,
          "state": "closed",
          "state_reason": "completed",
          "title": "Incorrect certificate validation",
          "body": "Currently the pool role (and presumably other roles) incorrectly verifies the Template Provider authority key (and presumable other upstream keys).\r\n\r\nhttps://github.com/stratum-mining/sv2-spec/blob/main/04-Protocol-Security.md#453-server-authentication\r\n\r\nThe checks happen here:\r\n\r\nhttps://github.com/stratum-mining/stratum/blob/3f07a6a747ab69c1594a93fdc563f06f72d716d8/protocols/v2/noise-sv2/src/signature_message.rs#L26-L40\r\n\r\n1. The spec requires that `server_public_key` (the upstream static key) is included in the signature hash, but `m` only covers the 10 bytes of the `SIGNATURE_NOISE_MESSAGE`. It needs to append the server static public.\r\n\r\n2. The message should be signed by the authority key, but it's actually being checked against the static key.\r\n\r\nThe Template Provider in Bitcoin Core generated signatures with the same two issues. I fixed the bug, but then put in a workaround to re-introduce the bug. That way things keep working.\r\n\r\nA fix for the Bitcoin Core side is here: https://github.com/Sjors/bitcoin/pull/29\r\n\r\nI'll merge that once the SRI-side is fixed.",
          "user": {
            "login": "Sjors",
            "id": 10217,
            "node_id": "MDQ6VXNlcjEwMjE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sjors",
            "html_url": "https://github.com/Sjors",
            "followers_url": "https://api.github.com/users/Sjors/followers",
            "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
            "organizations_url": "https://api.github.com/users/Sjors/orgs",
            "repos_url": "https://api.github.com/users/Sjors/repos",
            "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Sjors/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 2744192359,
              "node_id": "MDU6TGFiZWwyNzQ0MTkyMzU5",
              "url": "https://api.github.com/repos/stratum-mining/stratum/labels/bug",
              "name": "bug",
              "description": "Something isn't working",
              "color": "d73a4a",
              "default": true
            },
            {
              "id": 4875382091,
              "node_id": "LA_kwDOFDde0s8AAAABIphtSw",
              "url": "https://api.github.com/repos/stratum-mining/stratum/labels/spec%20incompatibility",
              "name": "spec incompatibility",
              "description": "Issues ensuring SRI follows the specs",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 4875638934,
              "node_id": "LA_kwDOFDde0s8AAAABIpxYlg",
              "url": "https://api.github.com/repos/stratum-mining/stratum/labels/template%20provider",
              "name": "template provider",
              "description": "",
              "color": "D93F0B",
              "default": false
            }
          ],
          "assignee": {
            "login": "plebhash",
            "id": 147345153,
            "node_id": "U_kgDOCMhPAQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/147345153?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/plebhash",
            "html_url": "https://github.com/plebhash",
            "followers_url": "https://api.github.com/users/plebhash/followers",
            "following_url": "https://api.github.com/users/plebhash/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/plebhash/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/plebhash/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/plebhash/subscriptions",
            "organizations_url": "https://api.github.com/users/plebhash/orgs",
            "repos_url": "https://api.github.com/users/plebhash/repos",
            "events_url": "https://api.github.com/users/plebhash/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/plebhash/received_events",
            "type": "User",
            "site_admin": false
          },
          "assignees": [
            {
              "login": "plebhash",
              "id": 147345153,
              "node_id": "U_kgDOCMhPAQ",
              "avatar_url": "https://avatars.githubusercontent.com/u/147345153?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/plebhash",
              "html_url": "https://github.com/plebhash",
              "followers_url": "https://api.github.com/users/plebhash/followers",
              "following_url": "https://api.github.com/users/plebhash/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/plebhash/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/plebhash/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/plebhash/subscriptions",
              "organizations_url": "https://api.github.com/users/plebhash/orgs",
              "repos_url": "https://api.github.com/users/plebhash/repos",
              "events_url": "https://api.github.com/users/plebhash/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/plebhash/received_events",
              "type": "User",
              "site_admin": false
            }
          ],
          "author_association": "COLLABORATOR",
          "milestone": {
            "url": "https://api.github.com/repos/stratum-mining/stratum/milestones/13",
            "html_url": "https://github.com/stratum-mining/stratum/milestone/13",
            "labels_url": "https://api.github.com/repos/stratum-mining/stratum/milestones/13/labels",
            "id": 10430703,
            "node_id": "MI_kwDOFDde0s4Anyjv",
            "number": 13,
            "state": "open",
            "title": "Milestone 4",
            "description": "Milestone 4 should ensure no major bugs and specification incompatibilities exist. It sets the foundation for publishing a first official release of SRI. ",
            "creator": {
              "login": "Fi3",
              "id": 6207037,
              "node_id": "MDQ6VXNlcjYyMDcwMzc=",
              "avatar_url": "https://avatars.githubusercontent.com/u/6207037?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/Fi3",
              "html_url": "https://github.com/Fi3",
              "followers_url": "https://api.github.com/users/Fi3/followers",
              "following_url": "https://api.github.com/users/Fi3/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/Fi3/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/Fi3/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/Fi3/subscriptions",
              "organizations_url": "https://api.github.com/users/Fi3/orgs",
              "repos_url": "https://api.github.com/users/Fi3/repos",
              "events_url": "https://api.github.com/users/Fi3/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/Fi3/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 6,
            "closed_issues": 16,
            "created_at": "2024-01-17T14:19:16Z",
            "updated_at": "2024-02-28T11:20:07Z",
            "due_on": "2024-02-16T08:00:00Z"
          },
          "locked": false,
          "comments": 22,
          "closed_at": "2024-02-16T18:43:11Z",
          "created_at": "2024-01-12T16:09:42Z",
          "updated_at": "2024-02-16T18:43:11Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11755741553,
      "node_id": "HRFPE_lADOABII5859hNA7zwAAAAK8smFx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11755741553",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-09T09:34:05Z"
    },
    {
      "event": "commented",
      "id": 1935603779,
      "node_id": "IC_kwDOABII585zXvhD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1935603779",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-09T09:37:29Z",
      "updated_at": "2024-02-09T09:37:29Z",
      "author_association": "MEMBER",
      "body": "This latest push improves support for mock time (which the parent PR needs). It's still using the deprecated `GetTime`, but it's not clear to me what to replace it with.\r\n\r\nIt also changes the protocol name to `Noise_NX_Secp256k1+EllSwift_ChaChaPoly_SHA256` (https://github.com/stratum-mining/sv2-spec/pull/66#discussion_r1483090409).",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29346#issuecomment-1935603779",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29346"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-09T15:14:13Z",
      "updated_at": "2024-02-09T15:14:13Z",
      "source": {
        "issue": {
          "id": 2127176950,
          "node_id": "PR_kwDOABII585me8Nn",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29415",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29415/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29415/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29415/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29415",
          "number": 29415,
          "state": "open",
          "state_reason": null,
          "title": "Broadcast own transactions only via short-lived Tor or I2P connections",
          "body": "To improve privacy, broadcast locally submitted transactions (from the `sendrawtransaction` RPC) to the P2P network only via Tor or I2P short-lived connections.\r\n\r\n* Introduce a new connection type for private broadcast of transactions with the following properties:\r\n  * started whenever there are local transactions to be sent\r\n  * only opened to Tor or I2P peers\r\n  * opened regardless of max connections limits\r\n  * after handshake is completed one local transaction is pushed to the peer, `PING` is sent and after receiving `PONG` the connection is closed\r\n  * ignore all incoming messages after handshake is completed (except `PONG`)\r\n\r\n* Broadcast transactions submitted via `sendrawtransaction` using this new mechanism, to a few Tor or I2P peers. Keep doing this until we receive an `INV` about this transaction from one of our ordinary peers (this takes about 1 second on mainnet).\r\n\r\n* The transaction is stored in peerman and does not enter the mempool.\r\n\r\n* Once we get an `INV` from somebody, then the normal flow executes: we request the transaction with `GETDATA`, receive it with a `TX` message, put it in our mempool and broadcast it to all our existent connections (as if we see it for the first time).\r\n\r\n* After we receive the full transaction as a `TX` message, in reply to our `GETDATA` request, only then consider the transaction has propagated through the network and remove it from the storage in peerman, ending the private broadcast attempts.\r\n\r\nThe messages exchange should look like this:\r\n\r\n```\r\ntx-sender >--- connect -------> tx-recipient\r\ntx-sender >--- VERSION -------> tx-recipient (dummy VERSION with no revealing data)\r\ntx-sender <--- VERSION -------< tx-recipient\r\ntx-sender <--- WTXIDRELAY ----< tx-recipient (maybe)\r\ntx-sender <--- SENDADDRV2 ----< tx-recipient (maybe)\r\ntx-sender <--- SENDTXRCNCL ---< tx-recipient (maybe)\r\ntx-sender <--- VERACK --------< tx-recipient\r\ntx-sender >--- VERACK --------> tx-recipient\r\ntx-sender >--- TX ------------> tx-recipient\r\ntx-sender >--- PING ----------> tx-recipient\r\ntx-sender <--- PONG ----------< tx-recipient\r\ntx-sender disconnects\r\n```\r\n\r\nWhenever a new transaction is received from `sendrawtransaction` RPC, the node will send it to 5 (`NUM_PRIVATE_BROADCAST_PER_TX`) recipients right away. If after 10-15 mins we still have not heard anything about the transaction from the network, then it will be sent to 1 more peer (see `PeerManagerImpl::ReattemptPrivateBroadcast()`).\r\n\r\nA few considerations:\r\n* The short-lived private broadcast connections are very cheap and fast wrt network traffic. It is expected that some of those peers could blackhole the transaction. Just one honest/proper peer is enough for successful propagation.\r\n* The peers that receive the transaction could deduce that this is initial transaction broadcast from the transaction originator. This is ok, they can't identify the sender.\r\n\r\n---\r\n\r\nSome explanation of the commits:\r\n\r\n* Independent improvement (also opened as a standalone PR at https://github.com/bitcoin/bitcoin/pull/29419):\r\n  * `log: deduplicate category names and improve logging.cpp`\r\n\r\n* New logging category and config option to enable private broadcast\r\n  * `log: introduce a new category for private broadcast`\r\n  * `init: introduce a new option to enable/disable private broadcast`\r\n\r\n* Implement the private broadcast connection handling on the `CConnman` side:\r\n  * `net: introduce a new connection type for private broadcast`\r\n  * `net: move peers counting before grant acquisition in ThreadOpenConnections()`\r\n  * `net: implement opening PRIVATE_BROADCAST connections`\r\n\r\n* Prepare `BroadcastTransaction()` for private broadcast requests:\r\n  * `net_processing: rename RelayTransaction to better describe what it does`\r\n  * `node: change a tx-relay on/off flag to a tri-state`\r\n  * `net_processing: store transactions for private broadcast in PeerManager`\r\n\r\n* Implement the private broadcast connection handling on the `PeerManager` side:\r\n  * `net_processing: reorder the code that handles the VERSION message`\r\n  * `net_processing: handle ConnectionType::PRIVATE_BROADCAST connections`\r\n  * `net_processing: stop private broadcast of a transaction after round-trip`\r\n  * `net_processing: retry private broadcast`\r\n\r\n* Engage the new functionality from `sendrawtransaction`:\r\n  * `rpc: use private broadcast from sendrawtransaction RPC if -privatebroadcast is ON`\r\n\r\n* Independent test framework improvements (also opened as a standalone PR at https://github.com/bitcoin/bitcoin/pull/29420):\r\n  * `test: improve debug log message from P2PConnection::connection_made()`\r\n  * `test: extend the SOCKS5 Python proxy to actually connect to a destination`\r\n  * `test: support WTX INVs from P2PDataStore and fix a comment`\r\n  * `test: set P2PConnection::p2p_connected_to_node in peer_connect_helper()`\r\n\r\n* New functional test that exercies some of the new code:\r\n  * `test: add functional test for local tx relay`\r\n\r\n---\r\n\r\nThis addresses:\r\nhttps://github.com/bitcoin/bitcoin/issues/3828 Clients leak IPs if they are recipients of a transaction\r\nhttps://github.com/bitcoin/bitcoin/issues/14692 Can't configure bitocoind to only send tx via Tor but receive clearnet transactions\r\nhttps://github.com/bitcoin/bitcoin/issues/19042 Tor-only transaction broadcast onlynet=onion alternative\r\nhttps://github.com/bitcoin/bitcoin/issues/24557 Option for receive events with all networks, but send transactions and/or blocks only with anonymous network[s]?\r\nhttps://github.com/bitcoin/bitcoin/issues/25450 Ability to broadcast wallet transactions only via dedicated oneshot Tor connections\r\n\r\nRelated, but different:\r\nhttps://github.com/bitcoin/bitcoin/issues/21876 Broadcast a transaction to specific nodes\r\nhttps://github.com/bitcoin/bitcoin/issues/28636 new RPC: sendrawtransactiontopeer\r\n\r\n---\r\n\r\n_A previous incarnation of this can be found at https://github.com/bitcoin/bitcoin/pull/27509. It puts the transaction in the mempool and (tries to) hide it from the outside observers. This turned out to be too error prone or maybe even impossible._\r\n",
          "user": {
            "login": "vasild",
            "id": 266751,
            "node_id": "MDQ6VXNlcjI2Njc1MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vasild",
            "html_url": "https://github.com/vasild",
            "followers_url": "https://api.github.com/users/vasild/followers",
            "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
            "organizations_url": "https://api.github.com/users/vasild/orgs",
            "repos_url": "https://api.github.com/users/vasild/repos",
            "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/vasild/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29415",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29415",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29415.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29415.patch"
          },
          "created_at": "2024-02-09T13:39:10Z",
          "updated_at": "2024-02-29T21:08:47Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-11T22:39:26Z",
      "updated_at": "2024-02-11T22:39:26Z",
      "source": {
        "issue": {
          "id": 2129010635,
          "node_id": "PR_kwDOABII585mk94S",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29419",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29419/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29419/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29419/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29419",
          "number": 29419,
          "state": "open",
          "state_reason": null,
          "title": "log: deduplicate category names and improve logging.cpp",
          "body": "The code in `logging.cpp` needs to: \r\n* Get the category name given the flag (e.g. `BCLog::PRUNE` -> `\"prune\"`)\r\n* Get the flag given the category name (e.g. `\"prune\"` -> `BCLog::PRUNE`)\r\n* Get the list of category names sorted in alphabetical order\r\n\r\nAchieve this by using the proper std containers. The result is\r\n* less code (the diff of the first commit is +62 / -129)\r\n* faster code (to linear search and no copy+sort)\r\n* more maintainable code (the categories are no longer duplicated in `LogCategories[]` and `LogCategoryToStr()`)\r\n\r\nThis behavior is preserved:\r\n`BCLog::NONE` -> `\"\"` (lookup by `LogCategoryToStr()`)\r\n`\"\"` -> `BCLog::ALL` (lookup by `GetLogCategory(\"\")`)\r\n\r\n---\r\n\r\nAlso remove unused `BCLog::UTIL`.\r\n\r\n---\r\n\r\nThese changes (modulo the `BCLog::UTIL` removal) are part of https://github.com/bitcoin/bitcoin/pull/29415 but they make sense on their own and would be good to have them, regardless of the fate of https://github.com/bitcoin/bitcoin/pull/29415. Also, if this is merged, that would reduce the size of https://github.com/bitcoin/bitcoin/pull/29415, thus the current standalone PR.",
          "user": {
            "login": "vasild",
            "id": 266751,
            "node_id": "MDQ6VXNlcjI2Njc1MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vasild",
            "html_url": "https://github.com/vasild",
            "followers_url": "https://api.github.com/users/vasild/followers",
            "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
            "organizations_url": "https://api.github.com/users/vasild/orgs",
            "repos_url": "https://api.github.com/users/vasild/repos",
            "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/vasild/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 1,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29419",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29419",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29419.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29419.patch"
          },
          "created_at": "2024-02-11T14:28:18Z",
          "updated_at": "2024-02-29T21:05:15Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11772903841,
      "node_id": "HRFPE_lADOABII5859hNA7zwAAAAK9uEGh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11772903841",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-12T10:51:00Z"
    },
    {
      "event": "commented",
      "id": 1943613979,
      "node_id": "IC_kwDOABII585z2TIb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1943613979",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-14T11:47:16Z",
      "updated_at": "2024-02-14T18:14:55Z",
      "author_association": "MEMBER",
      "body": "Updated and simplified the description to account for the new parent PR. I'm leaving this in draft status pending ~two merges~ one merge on the SRI side; that way the whole thing is easier to test.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29346#issuecomment-1943613979",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29346"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-14T18:14:25Z",
      "updated_at": "2024-02-14T18:14:25Z",
      "source": {
        "issue": {
          "id": 2134155715,
          "node_id": "PR_kwDOABII585m2Xsr",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29432",
          "number": 29432,
          "state": "open",
          "state_reason": null,
          "title": "Stratum v2 Template Provider (take 3)",
          "body": "Based on on @Fi3's https://github.com/bitcoin/bitcoin/compare/master...Fi3:bitcoin:PatchTemplates which is based on @ccdle12's #27854. I rebased it and re-wrote the commit history. Compared to #28983 it introduces EllSwift in the handshake and fixes various bugs. I used that opportunity to change the branch name, which makes testing against [SRI](https://github.com/stratum-mining/stratum) slightly easier. There's no conceptual discussion on #28983 so it can be ignored by reviewers.\r\n\r\nSee [docs/stratum-v2.md](https://github.com/Sjors/bitcoin/blob/sv2/doc/stratum-v2.md) for a brief description of Stratum v2 and the role of Bitcoin Core in that system..\r\n\r\n## What to test and review?\r\n\r\nI'll make separate pull requests for parts that are ready for detailed review.\r\n\r\n- [ ] #29346\r\n- [ ] #29295 \r\n- [ ] Custom signet mining improvement: #29032\r\n- [ ] Make nested pull-requests easier: #29274\r\n\r\nSee the [testing guide](https://github.com/Sjors/bitcoin/blob/2023/11/sv2-poll/doc/stratum-v2.md#testing-guide) for various ways to test this PR. This branch is actively used by (testnet) pools, so it should be ready for high level review.\r\n\r\n### Related useful PRs\r\n\r\n- [ ] #26812\r\n\r\n## Implementation notes\r\n\r\nThere's roughly three layers:\r\n\r\n1. Noise encryption #29346\r\n2. Messages and transport layer\r\n3. The Template Provider\r\n\r\n* the `ci:` commits (#29274) are there to facilitate PR's against this branch, but they are not blocking for Stratum v2\r\n* the commits that move `transport.h` and some other stuff from `node` to `common` are not blocking. But in the longer run I'd like to see process separation between the node and the template provider.\r\n* I will occasionally add commits to _undo_ bug fixes, in order to stay compatible with the SRI `main` branch. Those will get dropped over time and can be ignored. \r\n\r\n## Contributing\r\n\r\nIf you want to help out with any of the issues below, please open a PR to my fork. I will then squash your commits into my own where needed. \r\n\r\n## Things left todo\r\n\r\n### Spec\r\n\r\n- [ ] modify spec to use `ProvideMissingTransactions`? (followup?)\r\n- [ ] pick a good default for `default_coinbase_tx_additional_output_size` (see `getblocktemplate` RPC)\r\n\r\n### Networking\r\n\r\n- [ ] add `-sv2bind` and `-sv2allowip`\r\n- [ ] optional `-sv2cert`\r\n- [ ] drop `Sv2TemplateProvider::SendBuf`, reuse p2p socket handling if possible\r\n- [ ] limit number of connected clients\r\n- [ ] maybe limit (number of) `coinbase_output_max_additional_size`\r\n- [ ] TMP / TODO comments at the top of `sv2_messages.h`\r\n\r\n### Testing\r\n\r\n- [ ] expand sv2_template_provider_tests\r\n- [ ] add transport fuzzer\r\n- [ ] add template provider fuzzer\r\n\r\n### Template generation and updating\r\n\r\n- [ ] group templates with the same `coinbase_tx_additional_output_size`\r\n- [ ] don't generate templates when no client is connected\r\n\r\n### Misc\r\n\r\n- [ ] move / refactor `GetMerklePathForCoinbase` helper (see Future Work in original PR, and https://github.com/stratum-mining/stratum/issues/567)\r\n- [ ] truncate long trace messages\r\n\r\n## Potential followups\r\n\r\n- [ ] implement Noise protocol and mock client in Python, add functional tests (based on `test/sv2_template_provider_tests.cpp`)\r\n- [ ] use process separation, e.g. a `bitcoin-tp` binary, see [multiprocess.md](https://github.com/bitcoin/bitcoin/blob/master/doc/design/multiprocess.md?plain=1)\r\n- [ ] make template updates push based, on top of Cluster Mempool, see [docs/stratum-v2.md](https://github.com/Sjors/bitcoin/blob/2023/11/sv2-poll/doc/stratum-v2.md) (for new blocks it's already push based)\r\n- [ ] push empty template for the next block (downstream can ignore or use, https://github.com/stratum-mining/stratum/issues/715)\r\n  - send prevhash for this template as soon as any new block arrives\r\n- [ ] push optimistic template for the next block\r\n  - send prevhash if and only if our template won (i.e. we got a `SubmitSolution` message)",
          "user": {
            "login": "Sjors",
            "id": 10217,
            "node_id": "MDQ6VXNlcjEwMjE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sjors",
            "html_url": "https://github.com/Sjors",
            "followers_url": "https://api.github.com/users/Sjors/followers",
            "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
            "organizations_url": "https://api.github.com/users/Sjors/orgs",
            "repos_url": "https://api.github.com/users/Sjors/repos",
            "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Sjors/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 9,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29432",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29432",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29432.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29432.patch"
          },
          "created_at": "2024-02-14T11:34:49Z",
          "updated_at": "2024-02-29T20:54:47Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGFlNTgyYWY1M2EyOGNlY2EzNDQ5OTAzZTlmMGY4ZWRiYjY2ODQyMzI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ae582af53a28ceca3449903e9f0f8edbb6684232",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ae582af53a28ceca3449903e9f0f8edbb6684232",
      "tree": {
        "sha": "6999726f50129eb5510fbdd9605ce52f4bdd9441",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6999726f50129eb5510fbdd9605ce52f4bdd9441"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 6999726f50129eb5510fbdd9605ce52f4bdd9441\nparent baed5edeb611d949982c849461949c645f8998a7\nauthor Sjors Provoost <sjors@sprovoost.nl> 1701349128 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1707991527 +0100\n\nAdd sv2 log category for Stratum v2\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmXN4ecACgkQV/+b28ww\nEAnLkA//fVikr/BJCBMydnyIYPk4M0Fh5LYc5hTKQEzDVaFPKQAUyesFfdEcSqF/\nn5ruotMpYEoxQRSrYSTfVBxzwCRZ/I7TmYW8tHUCs9IbjPBDbKKeXD6N4kvgATqc\nSWiVCGw2ykMyYhYEs6dM1vFUdpddggqjelwiyAhDMlEFc7HyFvk/lsO7s3DmcwH/\nJpmSNlHy7ic3gXjJETPVOx87jrxWi58JvmcP551091nFLGBY8sEB4mh2GXml4rPt\nEDfPwJKiQo3R83EWT9qaXcZ6dbujJD6sTa9oWI1bscc/3zkLkI5PVa8zwQRF0gf+\nPkIYpSiR8juStR/FXK+rRMJTJcEvv8oPpQT/O8/EBSwk9h8pWbXme8l7652RjLQ3\nPhdorUR6qe91Z8XarSKUcW+pknSuA18S9WmdJzMRBBuQoDYNrKJzjuC+0pU6wsmD\no/g/paJnpyUTvdPAs3AQLNuIgayASXOmSYhYYA+9z7w2PquDbaOxr6ss0HFuDbyI\nSeamZWkk52kuwoA3sAVCqfw2DHrYVKpx9O+IhIe30ev55VBfamGq5DPD6SR5KYEN\n1que0ExqcUjuFbC2KiVl3qEFq72wkbEbHHv+Fxkd8e4Rq36hxVnI6cSqz9N87yZQ\ntZSzQoDM1LRzv4g08m90LCFRaQGB22rVj2wpNSCEiGRVy5fSH18=\n=D3oh\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/baed5edeb611d949982c849461949c645f8998a7",
          "sha": "baed5edeb611d949982c849461949c645f8998a7",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/baed5edeb611d949982c849461949c645f8998a7"
        }
      ],
      "message": "Add sv2 log category for Stratum v2",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-02-15T10:05:27Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2023-11-30T12:58:48Z"
      },
      "sha": "ae582af53a28ceca3449903e9f0f8edbb6684232"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGFmOGU3MzhkMzdlYjM3ODdkOTFmZWMyNTBkODNjYzc4MTk3ZDE2ZTk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/af8e738d37eb3787d91fec250d83cc78197d16e9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/af8e738d37eb3787d91fec250d83cc78197d16e9",
      "tree": {
        "sha": "35a8be4060936a10bc20b56371e4655cb46ad66e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/35a8be4060936a10bc20b56371e4655cb46ad66e"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 35a8be4060936a10bc20b56371e4655cb46ad66e\nparent ae582af53a28ceca3449903e9f0f8edbb6684232\nauthor Sjors Provoost <sjors@sprovoost.nl> 1706876104 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1707991527 +0100\n\nAdd sv2 noise protocol\n\nCo-Authored-By: Christopher Coverdale <chris.coverdale24@gmail.com>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmXN4ecACgkQV/+b28ww\nEAmfhg/8CYTzziA5c4i+SbpF/YARMIQ84sRdfas23Kd5S6FtN9+Zc6jb0xbxB5tf\nmVWlaGtubE8r93YGaEGorFkvMPf9VDkWEod/ClE77aL3pIVI+qREI671XbEUi379\nNvURQLApGqD5R5qUziM+w2MnkXTbm8qZbOI0Fn0bwN6ohEjkxctoDgoVTKeXHZau\nFsj7NWKDnuivCj7UJz0I6E8JTJH/RaxyXuc40BT2xIrLY1Z3yottcamzR8++sSYl\nHsTA6v2TQ5fibnaQJs0RkidnGKtmpRrYKDokcLPpftIcdcRxJQDB/oHYT14V5w6T\ngkOKMmV1Kwu0qiGN7mduxv37ffZi7VjN6auAd/9HsegJcdbmMhoSlVHgmm4wyDY2\nXd0OYO8xcdYWRTrv2APXzxyyOpn3sdmvoz6+IZdqUjfJl2fPB1IWNQWPvG0W5JEA\nSfO75ifpRP62pSCV2FO3Fu8RAr0URepDr7hy8CgLi3uqhCwmMRCbt7ooQSvAEpzE\nNVNKVRTIonWU+aLS02kmTerhcAdWDYCDVCBwr5JsO7yJVAh5l/3mAiPZAjdVR1Uh\nLkCL3kDFB0z30RCXlxmxxpT6FcyQW36vQi4oR5A0tgtJ4Pd7F/nqPMfsvL26aoJJ\nIDdtwavEB4w5YsgBTsFPjj7U6L43hdmfTV+OKxOwhGDu/yXl2+8=\n=Sg5V\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ae582af53a28ceca3449903e9f0f8edbb6684232",
          "sha": "ae582af53a28ceca3449903e9f0f8edbb6684232",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ae582af53a28ceca3449903e9f0f8edbb6684232"
        }
      ],
      "message": "Add sv2 noise protocol\n\nCo-Authored-By: Christopher Coverdale <chris.coverdale24@gmail.com>",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-02-15T10:05:27Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-02-02T12:15:04Z"
      },
      "sha": "af8e738d37eb3787d91fec250d83cc78197d16e9"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11813250345,
      "node_id": "HRFPE_lADOABII5859hNA7zwAAAALAH-Up",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11813250345",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-15T10:12:37Z"
    },
    {
      "event": "ready_for_review",
      "id": 11832632081,
      "node_id": "RFRE_lADOABII5859hNA7zwAAAALBR6MR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11832632081",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-16T19:04:18Z"
    },
    {
      "event": "commented",
      "id": 1949200230,
      "node_id": "IC_kwDOABII5850Lm9m",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1949200230",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-16T19:29:56Z",
      "updated_at": "2024-02-16T19:31:00Z",
      "author_association": "MEMBER",
      "body": "Possibly relevant: the test introduced here, and not modified later, failed at least once in the parent PR: https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-1948481906\r\n\r\nCI run: https://github.com/bitcoin/bitcoin/runs/21654131515",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29346#issuecomment-1949200230",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29346"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1472497733",
      "pull_request_review_id": 1853197747,
      "id": 1472497733,
      "node_id": "PRRC_kwDOABII585XxIhF",
      "diff_hunk": "@@ -0,0 +1,283 @@\n+// Copyright (c) 2023-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_COMMON_SV2_NOISE_H\n+#define BITCOIN_COMMON_SV2_NOISE_H\n+\n+#include <compat/compat.h>\n+#include <key.h>\n+#include <pubkey.h>\n+#include <random.h>\n+#include <streams.h>\n+#include <uint256.h>\n+\n+/** The Noise Protocol Framework\n+ *  https://noiseprotocol.org/noise.html\n+ *  Revision 38, 2018-07-11\n+ *\n+ *  Stratum v2 handshake and cipher specification:\n+ *  https://github.com/stratum-mining/sv2-spec/blob/main/04-Protocol-Security.md\n+ */\n+\n+static constexpr size_t POLY1305_TAGLEN{16};\n+static constexpr size_t KEY_SIZE = 32;\n+static constexpr size_t ELLSWIFT_KEY_SIZE = 64;\n+static constexpr size_t ECDH_OUTPUT_SIZE = 32;\n+/** Section 3: All Noise messages are less than or equal to 65535 bytes in length. */\n+static constexpr size_t NOISE_MAX_CHUNK_SIZE = 65535;\n+/** Sv2 spec 4.5.2 */\n+static constexpr size_t SIGNATURE_NOISE_MESSAGE_SIZE = 2 + 4 + 4 + 64;\n+static constexpr size_t HANDSHAKE_STEP2_SIZE = ELLSWIFT_KEY_SIZE + ELLSWIFT_KEY_SIZE +\n+                                               POLY1305_TAGLEN + SIGNATURE_NOISE_MESSAGE_SIZE + POLY1305_TAGLEN;\n+static constexpr size_t SV2_CERTIFICATE_GRACE_PERIOD = 3600;\n+\n+// Sha256 hash of the ascii encoding - \"Noise_NX_EllSwiftXonly_ChaChaPoly_SHA256\".\n+// This is the first step required when setting up the chaining key.\n+const std::vector<uint8_t> PROTOCOL_NAME_HASH = {\n+    27, 97, 156, 90, 248, 120, 254, 68, 34, 119, 45, 129, 209, 41, 152, 82,\n+    26, 137, 97, 115, 62, 44, 177, 60, 145, 24, 250, 214, 68, 188, 1, 128};\n+\n+// The double hash of protocol name \"Noise_NX_EllSwiftXonly_ChaChaPoly_SHA256\".\n+static std::vector<uint8_t> PROTOCOL_NAME_DOUBLE_HASH = {60, 102, 112, 143, 69, 248, 185, 34, 53, 193, 3, 46, 250, 104, 70, 171,\n+                                                         139, 103, 55, 191, 199, 9, 77, 179, 99, 170, 7, 240, 219, 36, 226, 71};\n+\n+/** Simple certificate for the static key signed by the authority key.\n+ * See 4.5.2 and 4.5.3 of the Stratum v2 spec.\n+ */\n+class Sv2SignatureNoiseMessage\n+{\n+private:\n+    uint16_t m_version = 0;\n+    uint32_t m_valid_from = 0;\n+    uint32_t m_valid_to = 0;\n+    std::vector<unsigned char> m_sig;\n+\n+    uint256 GetHash();\n+    void SignSchnorr(const CKey& authority_key, Span<unsigned char> sig);\n+\n+public:\n+    Sv2SignatureNoiseMessage() = default;\n+    Sv2SignatureNoiseMessage(uint16_t version, uint32_t valid_from, uint32_t valid_to, const XOnlyPubKey& static_key, const CKey& authority_key);\n+\n+    /* The certificate serializes pubkeys in x-only format, not EllSwift. */\n+    XOnlyPubKey m_static_key = {};\n+\n+    [[nodiscard]] bool Validate(XOnlyPubKey authority_key);\n+\n+    template <typename Stream>\n+    // The static_key is signed for, but not serialized.\n+    void Serialize(Stream& s) const\n+    {\n+        s << m_version\n+          << m_valid_from\n+          << m_valid_to;\n+\n+        s.write(MakeByteSpan(m_sig));",
      "path": "src/common/sv2_noise.h",
      "position": null,
      "original_position": 76,
      "commit_id": "af8e738d37eb3787d91fec250d83cc78197d16e9",
      "original_commit_id": "a392a4c2f3be7d2751502adc887802a24f0f6898",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You can't serialize a non-fixed-size vector as a span. This will lead to errors when deserializing. For example, a default constructed empty vector, serialized, can not be serialized into a vector which has been resized to 64 bytes.",
      "created_at": "2024-01-31T08:57:57Z",
      "updated_at": "2024-01-31T08:57:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29346#discussion_r1472497733",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1472497733"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29346"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 66,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1474470023",
      "pull_request_review_id": 1856491032,
      "id": 1474470023,
      "node_id": "PRRC_kwDOABII585X4qCH",
      "diff_hunk": "@@ -0,0 +1,283 @@\n+// Copyright (c) 2023-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_COMMON_SV2_NOISE_H\n+#define BITCOIN_COMMON_SV2_NOISE_H\n+\n+#include <compat/compat.h>\n+#include <key.h>\n+#include <pubkey.h>\n+#include <random.h>\n+#include <streams.h>\n+#include <uint256.h>\n+\n+/** The Noise Protocol Framework\n+ *  https://noiseprotocol.org/noise.html\n+ *  Revision 38, 2018-07-11\n+ *\n+ *  Stratum v2 handshake and cipher specification:\n+ *  https://github.com/stratum-mining/sv2-spec/blob/main/04-Protocol-Security.md\n+ */\n+\n+static constexpr size_t POLY1305_TAGLEN{16};\n+static constexpr size_t KEY_SIZE = 32;\n+static constexpr size_t ELLSWIFT_KEY_SIZE = 64;\n+static constexpr size_t ECDH_OUTPUT_SIZE = 32;\n+/** Section 3: All Noise messages are less than or equal to 65535 bytes in length. */\n+static constexpr size_t NOISE_MAX_CHUNK_SIZE = 65535;\n+/** Sv2 spec 4.5.2 */\n+static constexpr size_t SIGNATURE_NOISE_MESSAGE_SIZE = 2 + 4 + 4 + 64;\n+static constexpr size_t HANDSHAKE_STEP2_SIZE = ELLSWIFT_KEY_SIZE + ELLSWIFT_KEY_SIZE +\n+                                               POLY1305_TAGLEN + SIGNATURE_NOISE_MESSAGE_SIZE + POLY1305_TAGLEN;\n+static constexpr size_t SV2_CERTIFICATE_GRACE_PERIOD = 3600;\n+\n+// Sha256 hash of the ascii encoding - \"Noise_NX_EllSwiftXonly_ChaChaPoly_SHA256\".\n+// This is the first step required when setting up the chaining key.\n+const std::vector<uint8_t> PROTOCOL_NAME_HASH = {\n+    27, 97, 156, 90, 248, 120, 254, 68, 34, 119, 45, 129, 209, 41, 152, 82,\n+    26, 137, 97, 115, 62, 44, 177, 60, 145, 24, 250, 214, 68, 188, 1, 128};\n+\n+// The double hash of protocol name \"Noise_NX_EllSwiftXonly_ChaChaPoly_SHA256\".\n+static std::vector<uint8_t> PROTOCOL_NAME_DOUBLE_HASH = {60, 102, 112, 143, 69, 248, 185, 34, 53, 193, 3, 46, 250, 104, 70, 171,\n+                                                         139, 103, 55, 191, 199, 9, 77, 179, 99, 170, 7, 240, 219, 36, 226, 71};\n+\n+/** Simple certificate for the static key signed by the authority key.\n+ * See 4.5.2 and 4.5.3 of the Stratum v2 spec.\n+ */\n+class Sv2SignatureNoiseMessage\n+{\n+private:\n+    uint16_t m_version = 0;\n+    uint32_t m_valid_from = 0;\n+    uint32_t m_valid_to = 0;\n+    std::vector<unsigned char> m_sig;\n+\n+    uint256 GetHash();\n+    void SignSchnorr(const CKey& authority_key, Span<unsigned char> sig);\n+\n+public:\n+    Sv2SignatureNoiseMessage() = default;\n+    Sv2SignatureNoiseMessage(uint16_t version, uint32_t valid_from, uint32_t valid_to, const XOnlyPubKey& static_key, const CKey& authority_key);\n+\n+    /* The certificate serializes pubkeys in x-only format, not EllSwift. */\n+    XOnlyPubKey m_static_key = {};\n+\n+    [[nodiscard]] bool Validate(XOnlyPubKey authority_key);\n+\n+    template <typename Stream>\n+    // The static_key is signed for, but not serialized.\n+    void Serialize(Stream& s) const\n+    {\n+        s << m_version\n+          << m_valid_from\n+          << m_valid_to;\n+\n+        s.write(MakeByteSpan(m_sig));",
      "path": "src/common/sv2_noise.h",
      "position": null,
      "original_position": 76,
      "commit_id": "af8e738d37eb3787d91fec250d83cc78197d16e9",
      "original_commit_id": "a392a4c2f3be7d2751502adc887802a24f0f6898",
      "in_reply_to_id": 1472497733,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Any suggested reading to wrap my head around this serialisation / bytes / span stuff?",
      "created_at": "2024-02-01T13:28:25Z",
      "updated_at": "2024-02-01T13:28:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29346#discussion_r1474470023",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1474470023"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29346"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 66,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1474513906",
      "pull_request_review_id": 1856557365,
      "id": 1474513906,
      "node_id": "PRRC_kwDOABII585X40vy",
      "diff_hunk": "@@ -0,0 +1,283 @@\n+// Copyright (c) 2023-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_COMMON_SV2_NOISE_H\n+#define BITCOIN_COMMON_SV2_NOISE_H\n+\n+#include <compat/compat.h>\n+#include <key.h>\n+#include <pubkey.h>\n+#include <random.h>\n+#include <streams.h>\n+#include <uint256.h>\n+\n+/** The Noise Protocol Framework\n+ *  https://noiseprotocol.org/noise.html\n+ *  Revision 38, 2018-07-11\n+ *\n+ *  Stratum v2 handshake and cipher specification:\n+ *  https://github.com/stratum-mining/sv2-spec/blob/main/04-Protocol-Security.md\n+ */\n+\n+static constexpr size_t POLY1305_TAGLEN{16};\n+static constexpr size_t KEY_SIZE = 32;\n+static constexpr size_t ELLSWIFT_KEY_SIZE = 64;\n+static constexpr size_t ECDH_OUTPUT_SIZE = 32;\n+/** Section 3: All Noise messages are less than or equal to 65535 bytes in length. */\n+static constexpr size_t NOISE_MAX_CHUNK_SIZE = 65535;\n+/** Sv2 spec 4.5.2 */\n+static constexpr size_t SIGNATURE_NOISE_MESSAGE_SIZE = 2 + 4 + 4 + 64;\n+static constexpr size_t HANDSHAKE_STEP2_SIZE = ELLSWIFT_KEY_SIZE + ELLSWIFT_KEY_SIZE +\n+                                               POLY1305_TAGLEN + SIGNATURE_NOISE_MESSAGE_SIZE + POLY1305_TAGLEN;\n+static constexpr size_t SV2_CERTIFICATE_GRACE_PERIOD = 3600;\n+\n+// Sha256 hash of the ascii encoding - \"Noise_NX_EllSwiftXonly_ChaChaPoly_SHA256\".\n+// This is the first step required when setting up the chaining key.\n+const std::vector<uint8_t> PROTOCOL_NAME_HASH = {\n+    27, 97, 156, 90, 248, 120, 254, 68, 34, 119, 45, 129, 209, 41, 152, 82,\n+    26, 137, 97, 115, 62, 44, 177, 60, 145, 24, 250, 214, 68, 188, 1, 128};\n+\n+// The double hash of protocol name \"Noise_NX_EllSwiftXonly_ChaChaPoly_SHA256\".\n+static std::vector<uint8_t> PROTOCOL_NAME_DOUBLE_HASH = {60, 102, 112, 143, 69, 248, 185, 34, 53, 193, 3, 46, 250, 104, 70, 171,\n+                                                         139, 103, 55, 191, 199, 9, 77, 179, 99, 170, 7, 240, 219, 36, 226, 71};\n+\n+/** Simple certificate for the static key signed by the authority key.\n+ * See 4.5.2 and 4.5.3 of the Stratum v2 spec.\n+ */\n+class Sv2SignatureNoiseMessage\n+{\n+private:\n+    uint16_t m_version = 0;\n+    uint32_t m_valid_from = 0;\n+    uint32_t m_valid_to = 0;\n+    std::vector<unsigned char> m_sig;\n+\n+    uint256 GetHash();\n+    void SignSchnorr(const CKey& authority_key, Span<unsigned char> sig);\n+\n+public:\n+    Sv2SignatureNoiseMessage() = default;\n+    Sv2SignatureNoiseMessage(uint16_t version, uint32_t valid_from, uint32_t valid_to, const XOnlyPubKey& static_key, const CKey& authority_key);\n+\n+    /* The certificate serializes pubkeys in x-only format, not EllSwift. */\n+    XOnlyPubKey m_static_key = {};\n+\n+    [[nodiscard]] bool Validate(XOnlyPubKey authority_key);\n+\n+    template <typename Stream>\n+    // The static_key is signed for, but not serialized.\n+    void Serialize(Stream& s) const\n+    {\n+        s << m_version\n+          << m_valid_from\n+          << m_valid_to;\n+\n+        s.write(MakeByteSpan(m_sig));",
      "path": "src/common/sv2_noise.h",
      "position": null,
      "original_position": 76,
      "commit_id": "af8e738d37eb3787d91fec250d83cc78197d16e9",
      "original_commit_id": "a392a4c2f3be7d2751502adc887802a24f0f6898",
      "in_reply_to_id": 1472497733,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "A `std::byte` is serialized no different than an `uint8_t`. (https://en.cppreference.com/w/cpp/types/byte)\r\n\r\nA span holds a pointer and a size. It points to memory outside of itself. For example, a string_view (special kind of span) creates a view on a pre-existing string (string literal or std::string).\r\n\r\nWhen serializing a span in Bitcoin Core, the size is not written. Thus, the size of the pointed-to memory must be exactly equal every time at runtime. How you achieve that the memory is always the same length, or whether a span is the right choice, depends on the context.",
      "created_at": "2024-02-01T13:55:18Z",
      "updated_at": "2024-02-01T13:55:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29346#discussion_r1474513906",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1474513906"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29346"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 66,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1474518715",
      "pull_request_review_id": 1856565092,
      "id": 1474518715,
      "node_id": "PRRC_kwDOABII585X4167",
      "diff_hunk": "@@ -0,0 +1,283 @@\n+// Copyright (c) 2023-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_COMMON_SV2_NOISE_H\n+#define BITCOIN_COMMON_SV2_NOISE_H\n+\n+#include <compat/compat.h>\n+#include <key.h>\n+#include <pubkey.h>\n+#include <random.h>\n+#include <streams.h>\n+#include <uint256.h>\n+\n+/** The Noise Protocol Framework\n+ *  https://noiseprotocol.org/noise.html\n+ *  Revision 38, 2018-07-11\n+ *\n+ *  Stratum v2 handshake and cipher specification:\n+ *  https://github.com/stratum-mining/sv2-spec/blob/main/04-Protocol-Security.md\n+ */\n+\n+static constexpr size_t POLY1305_TAGLEN{16};\n+static constexpr size_t KEY_SIZE = 32;\n+static constexpr size_t ELLSWIFT_KEY_SIZE = 64;\n+static constexpr size_t ECDH_OUTPUT_SIZE = 32;\n+/** Section 3: All Noise messages are less than or equal to 65535 bytes in length. */\n+static constexpr size_t NOISE_MAX_CHUNK_SIZE = 65535;\n+/** Sv2 spec 4.5.2 */\n+static constexpr size_t SIGNATURE_NOISE_MESSAGE_SIZE = 2 + 4 + 4 + 64;\n+static constexpr size_t HANDSHAKE_STEP2_SIZE = ELLSWIFT_KEY_SIZE + ELLSWIFT_KEY_SIZE +\n+                                               POLY1305_TAGLEN + SIGNATURE_NOISE_MESSAGE_SIZE + POLY1305_TAGLEN;\n+static constexpr size_t SV2_CERTIFICATE_GRACE_PERIOD = 3600;\n+\n+// Sha256 hash of the ascii encoding - \"Noise_NX_EllSwiftXonly_ChaChaPoly_SHA256\".\n+// This is the first step required when setting up the chaining key.\n+const std::vector<uint8_t> PROTOCOL_NAME_HASH = {\n+    27, 97, 156, 90, 248, 120, 254, 68, 34, 119, 45, 129, 209, 41, 152, 82,\n+    26, 137, 97, 115, 62, 44, 177, 60, 145, 24, 250, 214, 68, 188, 1, 128};\n+\n+// The double hash of protocol name \"Noise_NX_EllSwiftXonly_ChaChaPoly_SHA256\".\n+static std::vector<uint8_t> PROTOCOL_NAME_DOUBLE_HASH = {60, 102, 112, 143, 69, 248, 185, 34, 53, 193, 3, 46, 250, 104, 70, 171,\n+                                                         139, 103, 55, 191, 199, 9, 77, 179, 99, 170, 7, 240, 219, 36, 226, 71};\n+\n+/** Simple certificate for the static key signed by the authority key.\n+ * See 4.5.2 and 4.5.3 of the Stratum v2 spec.\n+ */\n+class Sv2SignatureNoiseMessage\n+{\n+private:\n+    uint16_t m_version = 0;\n+    uint32_t m_valid_from = 0;\n+    uint32_t m_valid_to = 0;\n+    std::vector<unsigned char> m_sig;\n+\n+    uint256 GetHash();\n+    void SignSchnorr(const CKey& authority_key, Span<unsigned char> sig);\n+\n+public:\n+    Sv2SignatureNoiseMessage() = default;\n+    Sv2SignatureNoiseMessage(uint16_t version, uint32_t valid_from, uint32_t valid_to, const XOnlyPubKey& static_key, const CKey& authority_key);\n+\n+    /* The certificate serializes pubkeys in x-only format, not EllSwift. */\n+    XOnlyPubKey m_static_key = {};\n+\n+    [[nodiscard]] bool Validate(XOnlyPubKey authority_key);\n+\n+    template <typename Stream>\n+    // The static_key is signed for, but not serialized.\n+    void Serialize(Stream& s) const\n+    {\n+        s << m_version\n+          << m_valid_from\n+          << m_valid_to;\n+\n+        s.write(MakeByteSpan(m_sig));",
      "path": "src/common/sv2_noise.h",
      "position": null,
      "original_position": 76,
      "commit_id": "af8e738d37eb3787d91fec250d83cc78197d16e9",
      "original_commit_id": "a392a4c2f3be7d2751502adc887802a24f0f6898",
      "in_reply_to_id": 1472497733,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Possible solutions can be:\r\n\r\n* Remove the `Sv2SignatureNoiseMessage` default constructor and/or check that the size of m_sig is properly initialized\r\n* Use a `std::array` instead\r\n* Serialize as `std::vector` instead\r\n\r\n",
      "created_at": "2024-02-01T13:58:09Z",
      "updated_at": "2024-02-01T13:58:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29346#discussion_r1474518715",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1474518715"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29346"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 66,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1474609984",
      "pull_request_review_id": 1856710697,
      "id": 1474609984,
      "node_id": "PRRC_kwDOABII585X5MNA",
      "diff_hunk": "@@ -0,0 +1,283 @@\n+// Copyright (c) 2023-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_COMMON_SV2_NOISE_H\n+#define BITCOIN_COMMON_SV2_NOISE_H\n+\n+#include <compat/compat.h>\n+#include <key.h>\n+#include <pubkey.h>\n+#include <random.h>\n+#include <streams.h>\n+#include <uint256.h>\n+\n+/** The Noise Protocol Framework\n+ *  https://noiseprotocol.org/noise.html\n+ *  Revision 38, 2018-07-11\n+ *\n+ *  Stratum v2 handshake and cipher specification:\n+ *  https://github.com/stratum-mining/sv2-spec/blob/main/04-Protocol-Security.md\n+ */\n+\n+static constexpr size_t POLY1305_TAGLEN{16};\n+static constexpr size_t KEY_SIZE = 32;\n+static constexpr size_t ELLSWIFT_KEY_SIZE = 64;\n+static constexpr size_t ECDH_OUTPUT_SIZE = 32;\n+/** Section 3: All Noise messages are less than or equal to 65535 bytes in length. */\n+static constexpr size_t NOISE_MAX_CHUNK_SIZE = 65535;\n+/** Sv2 spec 4.5.2 */\n+static constexpr size_t SIGNATURE_NOISE_MESSAGE_SIZE = 2 + 4 + 4 + 64;\n+static constexpr size_t HANDSHAKE_STEP2_SIZE = ELLSWIFT_KEY_SIZE + ELLSWIFT_KEY_SIZE +\n+                                               POLY1305_TAGLEN + SIGNATURE_NOISE_MESSAGE_SIZE + POLY1305_TAGLEN;\n+static constexpr size_t SV2_CERTIFICATE_GRACE_PERIOD = 3600;\n+\n+// Sha256 hash of the ascii encoding - \"Noise_NX_EllSwiftXonly_ChaChaPoly_SHA256\".\n+// This is the first step required when setting up the chaining key.\n+const std::vector<uint8_t> PROTOCOL_NAME_HASH = {\n+    27, 97, 156, 90, 248, 120, 254, 68, 34, 119, 45, 129, 209, 41, 152, 82,\n+    26, 137, 97, 115, 62, 44, 177, 60, 145, 24, 250, 214, 68, 188, 1, 128};\n+\n+// The double hash of protocol name \"Noise_NX_EllSwiftXonly_ChaChaPoly_SHA256\".\n+static std::vector<uint8_t> PROTOCOL_NAME_DOUBLE_HASH = {60, 102, 112, 143, 69, 248, 185, 34, 53, 193, 3, 46, 250, 104, 70, 171,\n+                                                         139, 103, 55, 191, 199, 9, 77, 179, 99, 170, 7, 240, 219, 36, 226, 71};\n+\n+/** Simple certificate for the static key signed by the authority key.\n+ * See 4.5.2 and 4.5.3 of the Stratum v2 spec.\n+ */\n+class Sv2SignatureNoiseMessage\n+{\n+private:\n+    uint16_t m_version = 0;\n+    uint32_t m_valid_from = 0;\n+    uint32_t m_valid_to = 0;\n+    std::vector<unsigned char> m_sig;\n+\n+    uint256 GetHash();\n+    void SignSchnorr(const CKey& authority_key, Span<unsigned char> sig);\n+\n+public:\n+    Sv2SignatureNoiseMessage() = default;\n+    Sv2SignatureNoiseMessage(uint16_t version, uint32_t valid_from, uint32_t valid_to, const XOnlyPubKey& static_key, const CKey& authority_key);\n+\n+    /* The certificate serializes pubkeys in x-only format, not EllSwift. */\n+    XOnlyPubKey m_static_key = {};\n+\n+    [[nodiscard]] bool Validate(XOnlyPubKey authority_key);\n+\n+    template <typename Stream>\n+    // The static_key is signed for, but not serialized.\n+    void Serialize(Stream& s) const\n+    {\n+        s << m_version\n+          << m_valid_from\n+          << m_valid_to;\n+\n+        s.write(MakeByteSpan(m_sig));",
      "path": "src/common/sv2_noise.h",
      "position": null,
      "original_position": 76,
      "commit_id": "af8e738d37eb3787d91fec250d83cc78197d16e9",
      "original_commit_id": "a392a4c2f3be7d2751502adc887802a24f0f6898",
      "in_reply_to_id": 1472497733,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Since `m_sig` is always 64 bytes, I changed it to `std::array`.",
      "created_at": "2024-02-01T14:53:07Z",
      "updated_at": "2024-02-01T14:53:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29346#discussion_r1474609984",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1474609984"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29346"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 66,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1474641091",
      "pull_request_review_id": 1856764776,
      "id": 1474641091,
      "node_id": "PRRC_kwDOABII585X5TzD",
      "diff_hunk": "@@ -0,0 +1,283 @@\n+// Copyright (c) 2023-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_COMMON_SV2_NOISE_H\n+#define BITCOIN_COMMON_SV2_NOISE_H\n+\n+#include <compat/compat.h>\n+#include <key.h>\n+#include <pubkey.h>\n+#include <random.h>\n+#include <streams.h>\n+#include <uint256.h>\n+\n+/** The Noise Protocol Framework\n+ *  https://noiseprotocol.org/noise.html\n+ *  Revision 38, 2018-07-11\n+ *\n+ *  Stratum v2 handshake and cipher specification:\n+ *  https://github.com/stratum-mining/sv2-spec/blob/main/04-Protocol-Security.md\n+ */\n+\n+static constexpr size_t POLY1305_TAGLEN{16};\n+static constexpr size_t KEY_SIZE = 32;\n+static constexpr size_t ELLSWIFT_KEY_SIZE = 64;\n+static constexpr size_t ECDH_OUTPUT_SIZE = 32;\n+/** Section 3: All Noise messages are less than or equal to 65535 bytes in length. */\n+static constexpr size_t NOISE_MAX_CHUNK_SIZE = 65535;\n+/** Sv2 spec 4.5.2 */\n+static constexpr size_t SIGNATURE_NOISE_MESSAGE_SIZE = 2 + 4 + 4 + 64;\n+static constexpr size_t HANDSHAKE_STEP2_SIZE = ELLSWIFT_KEY_SIZE + ELLSWIFT_KEY_SIZE +\n+                                               POLY1305_TAGLEN + SIGNATURE_NOISE_MESSAGE_SIZE + POLY1305_TAGLEN;\n+static constexpr size_t SV2_CERTIFICATE_GRACE_PERIOD = 3600;\n+\n+// Sha256 hash of the ascii encoding - \"Noise_NX_EllSwiftXonly_ChaChaPoly_SHA256\".\n+// This is the first step required when setting up the chaining key.\n+const std::vector<uint8_t> PROTOCOL_NAME_HASH = {\n+    27, 97, 156, 90, 248, 120, 254, 68, 34, 119, 45, 129, 209, 41, 152, 82,\n+    26, 137, 97, 115, 62, 44, 177, 60, 145, 24, 250, 214, 68, 188, 1, 128};\n+\n+// The double hash of protocol name \"Noise_NX_EllSwiftXonly_ChaChaPoly_SHA256\".\n+static std::vector<uint8_t> PROTOCOL_NAME_DOUBLE_HASH = {60, 102, 112, 143, 69, 248, 185, 34, 53, 193, 3, 46, 250, 104, 70, 171,\n+                                                         139, 103, 55, 191, 199, 9, 77, 179, 99, 170, 7, 240, 219, 36, 226, 71};\n+\n+/** Simple certificate for the static key signed by the authority key.\n+ * See 4.5.2 and 4.5.3 of the Stratum v2 spec.\n+ */\n+class Sv2SignatureNoiseMessage\n+{\n+private:\n+    uint16_t m_version = 0;\n+    uint32_t m_valid_from = 0;\n+    uint32_t m_valid_to = 0;\n+    std::vector<unsigned char> m_sig;\n+\n+    uint256 GetHash();\n+    void SignSchnorr(const CKey& authority_key, Span<unsigned char> sig);\n+\n+public:\n+    Sv2SignatureNoiseMessage() = default;\n+    Sv2SignatureNoiseMessage(uint16_t version, uint32_t valid_from, uint32_t valid_to, const XOnlyPubKey& static_key, const CKey& authority_key);\n+\n+    /* The certificate serializes pubkeys in x-only format, not EllSwift. */\n+    XOnlyPubKey m_static_key = {};\n+\n+    [[nodiscard]] bool Validate(XOnlyPubKey authority_key);\n+\n+    template <typename Stream>\n+    // The static_key is signed for, but not serialized.\n+    void Serialize(Stream& s) const\n+    {\n+        s << m_version\n+          << m_valid_from\n+          << m_valid_to;\n+\n+        s.write(MakeByteSpan(m_sig));",
      "path": "src/common/sv2_noise.h",
      "position": null,
      "original_position": 76,
      "commit_id": "af8e738d37eb3787d91fec250d83cc78197d16e9",
      "original_commit_id": "a392a4c2f3be7d2751502adc887802a24f0f6898",
      "in_reply_to_id": 1472497733,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You don't need a `Make*ByteSpan` when the underlying data is already bytes. Also, you don't need `Span` at all, when the object is an array. (arrays as well have their size not serialized)",
      "created_at": "2024-02-01T15:14:25Z",
      "updated_at": "2024-02-01T15:14:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29346#discussion_r1474641091",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1474641091"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29346"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 66,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1474705042",
      "pull_request_review_id": 1856871978,
      "id": 1474705042,
      "node_id": "PRRC_kwDOABII585X5jaS",
      "diff_hunk": "@@ -0,0 +1,283 @@\n+// Copyright (c) 2023-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_COMMON_SV2_NOISE_H\n+#define BITCOIN_COMMON_SV2_NOISE_H\n+\n+#include <compat/compat.h>\n+#include <key.h>\n+#include <pubkey.h>\n+#include <random.h>\n+#include <streams.h>\n+#include <uint256.h>\n+\n+/** The Noise Protocol Framework\n+ *  https://noiseprotocol.org/noise.html\n+ *  Revision 38, 2018-07-11\n+ *\n+ *  Stratum v2 handshake and cipher specification:\n+ *  https://github.com/stratum-mining/sv2-spec/blob/main/04-Protocol-Security.md\n+ */\n+\n+static constexpr size_t POLY1305_TAGLEN{16};\n+static constexpr size_t KEY_SIZE = 32;\n+static constexpr size_t ELLSWIFT_KEY_SIZE = 64;\n+static constexpr size_t ECDH_OUTPUT_SIZE = 32;\n+/** Section 3: All Noise messages are less than or equal to 65535 bytes in length. */\n+static constexpr size_t NOISE_MAX_CHUNK_SIZE = 65535;\n+/** Sv2 spec 4.5.2 */\n+static constexpr size_t SIGNATURE_NOISE_MESSAGE_SIZE = 2 + 4 + 4 + 64;\n+static constexpr size_t HANDSHAKE_STEP2_SIZE = ELLSWIFT_KEY_SIZE + ELLSWIFT_KEY_SIZE +\n+                                               POLY1305_TAGLEN + SIGNATURE_NOISE_MESSAGE_SIZE + POLY1305_TAGLEN;\n+static constexpr size_t SV2_CERTIFICATE_GRACE_PERIOD = 3600;\n+\n+// Sha256 hash of the ascii encoding - \"Noise_NX_EllSwiftXonly_ChaChaPoly_SHA256\".\n+// This is the first step required when setting up the chaining key.\n+const std::vector<uint8_t> PROTOCOL_NAME_HASH = {\n+    27, 97, 156, 90, 248, 120, 254, 68, 34, 119, 45, 129, 209, 41, 152, 82,\n+    26, 137, 97, 115, 62, 44, 177, 60, 145, 24, 250, 214, 68, 188, 1, 128};\n+\n+// The double hash of protocol name \"Noise_NX_EllSwiftXonly_ChaChaPoly_SHA256\".\n+static std::vector<uint8_t> PROTOCOL_NAME_DOUBLE_HASH = {60, 102, 112, 143, 69, 248, 185, 34, 53, 193, 3, 46, 250, 104, 70, 171,\n+                                                         139, 103, 55, 191, 199, 9, 77, 179, 99, 170, 7, 240, 219, 36, 226, 71};\n+\n+/** Simple certificate for the static key signed by the authority key.\n+ * See 4.5.2 and 4.5.3 of the Stratum v2 spec.\n+ */\n+class Sv2SignatureNoiseMessage\n+{\n+private:\n+    uint16_t m_version = 0;\n+    uint32_t m_valid_from = 0;\n+    uint32_t m_valid_to = 0;\n+    std::vector<unsigned char> m_sig;\n+\n+    uint256 GetHash();\n+    void SignSchnorr(const CKey& authority_key, Span<unsigned char> sig);\n+\n+public:\n+    Sv2SignatureNoiseMessage() = default;\n+    Sv2SignatureNoiseMessage(uint16_t version, uint32_t valid_from, uint32_t valid_to, const XOnlyPubKey& static_key, const CKey& authority_key);\n+\n+    /* The certificate serializes pubkeys in x-only format, not EllSwift. */\n+    XOnlyPubKey m_static_key = {};\n+\n+    [[nodiscard]] bool Validate(XOnlyPubKey authority_key);\n+\n+    template <typename Stream>\n+    // The static_key is signed for, but not serialized.\n+    void Serialize(Stream& s) const\n+    {\n+        s << m_version\n+          << m_valid_from\n+          << m_valid_to;\n+\n+        s.write(MakeByteSpan(m_sig));",
      "path": "src/common/sv2_noise.h",
      "position": null,
      "original_position": 76,
      "commit_id": "af8e738d37eb3787d91fec250d83cc78197d16e9",
      "original_commit_id": "a392a4c2f3be7d2751502adc887802a24f0f6898",
      "in_reply_to_id": 1472497733,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If I drop `MakeByteSpan()` the compiler complains:\r\n\r\n```\r\n./common/sv2_noise.h:68:17: error: no viable conversion from 'const std::array<unsigned char, SCHNORR_SIGNATURE_SIZE>' to 'Span<const value_type>' (aka 'Span<const std::byte>')\r\n        s.write(m_sig);\r\n```",
      "created_at": "2024-02-01T15:59:14Z",
      "updated_at": "2024-02-01T15:59:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29346#discussion_r1474705042",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1474705042"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29346"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 66,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1474796055",
      "pull_request_review_id": 1857020952,
      "id": 1474796055,
      "node_id": "PRRC_kwDOABII585X55oX",
      "diff_hunk": "@@ -0,0 +1,283 @@\n+// Copyright (c) 2023-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_COMMON_SV2_NOISE_H\n+#define BITCOIN_COMMON_SV2_NOISE_H\n+\n+#include <compat/compat.h>\n+#include <key.h>\n+#include <pubkey.h>\n+#include <random.h>\n+#include <streams.h>\n+#include <uint256.h>\n+\n+/** The Noise Protocol Framework\n+ *  https://noiseprotocol.org/noise.html\n+ *  Revision 38, 2018-07-11\n+ *\n+ *  Stratum v2 handshake and cipher specification:\n+ *  https://github.com/stratum-mining/sv2-spec/blob/main/04-Protocol-Security.md\n+ */\n+\n+static constexpr size_t POLY1305_TAGLEN{16};\n+static constexpr size_t KEY_SIZE = 32;\n+static constexpr size_t ELLSWIFT_KEY_SIZE = 64;\n+static constexpr size_t ECDH_OUTPUT_SIZE = 32;\n+/** Section 3: All Noise messages are less than or equal to 65535 bytes in length. */\n+static constexpr size_t NOISE_MAX_CHUNK_SIZE = 65535;\n+/** Sv2 spec 4.5.2 */\n+static constexpr size_t SIGNATURE_NOISE_MESSAGE_SIZE = 2 + 4 + 4 + 64;\n+static constexpr size_t HANDSHAKE_STEP2_SIZE = ELLSWIFT_KEY_SIZE + ELLSWIFT_KEY_SIZE +\n+                                               POLY1305_TAGLEN + SIGNATURE_NOISE_MESSAGE_SIZE + POLY1305_TAGLEN;\n+static constexpr size_t SV2_CERTIFICATE_GRACE_PERIOD = 3600;\n+\n+// Sha256 hash of the ascii encoding - \"Noise_NX_EllSwiftXonly_ChaChaPoly_SHA256\".\n+// This is the first step required when setting up the chaining key.\n+const std::vector<uint8_t> PROTOCOL_NAME_HASH = {\n+    27, 97, 156, 90, 248, 120, 254, 68, 34, 119, 45, 129, 209, 41, 152, 82,\n+    26, 137, 97, 115, 62, 44, 177, 60, 145, 24, 250, 214, 68, 188, 1, 128};\n+\n+// The double hash of protocol name \"Noise_NX_EllSwiftXonly_ChaChaPoly_SHA256\".\n+static std::vector<uint8_t> PROTOCOL_NAME_DOUBLE_HASH = {60, 102, 112, 143, 69, 248, 185, 34, 53, 193, 3, 46, 250, 104, 70, 171,\n+                                                         139, 103, 55, 191, 199, 9, 77, 179, 99, 170, 7, 240, 219, 36, 226, 71};\n+\n+/** Simple certificate for the static key signed by the authority key.\n+ * See 4.5.2 and 4.5.3 of the Stratum v2 spec.\n+ */\n+class Sv2SignatureNoiseMessage\n+{\n+private:\n+    uint16_t m_version = 0;\n+    uint32_t m_valid_from = 0;\n+    uint32_t m_valid_to = 0;\n+    std::vector<unsigned char> m_sig;\n+\n+    uint256 GetHash();\n+    void SignSchnorr(const CKey& authority_key, Span<unsigned char> sig);\n+\n+public:\n+    Sv2SignatureNoiseMessage() = default;\n+    Sv2SignatureNoiseMessage(uint16_t version, uint32_t valid_from, uint32_t valid_to, const XOnlyPubKey& static_key, const CKey& authority_key);\n+\n+    /* The certificate serializes pubkeys in x-only format, not EllSwift. */\n+    XOnlyPubKey m_static_key = {};\n+\n+    [[nodiscard]] bool Validate(XOnlyPubKey authority_key);\n+\n+    template <typename Stream>\n+    // The static_key is signed for, but not serialized.\n+    void Serialize(Stream& s) const\n+    {\n+        s << m_version\n+          << m_valid_from\n+          << m_valid_to;\n+\n+        s.write(MakeByteSpan(m_sig));",
      "path": "src/common/sv2_noise.h",
      "position": null,
      "original_position": 76,
      "commit_id": "af8e738d37eb3787d91fec250d83cc78197d16e9",
      "original_commit_id": "a392a4c2f3be7d2751502adc887802a24f0f6898",
      "in_reply_to_id": 1472497733,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes, you'd need to make it an array of std::byte.",
      "created_at": "2024-02-01T16:56:32Z",
      "updated_at": "2024-02-01T16:56:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29346#discussion_r1474796055",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1474796055"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29346"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 66,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1474833093",
      "pull_request_review_id": 1857086231,
      "id": 1474833093,
      "node_id": "PRRC_kwDOABII585X6CrF",
      "diff_hunk": "@@ -0,0 +1,283 @@\n+// Copyright (c) 2023-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_COMMON_SV2_NOISE_H\n+#define BITCOIN_COMMON_SV2_NOISE_H\n+\n+#include <compat/compat.h>\n+#include <key.h>\n+#include <pubkey.h>\n+#include <random.h>\n+#include <streams.h>\n+#include <uint256.h>\n+\n+/** The Noise Protocol Framework\n+ *  https://noiseprotocol.org/noise.html\n+ *  Revision 38, 2018-07-11\n+ *\n+ *  Stratum v2 handshake and cipher specification:\n+ *  https://github.com/stratum-mining/sv2-spec/blob/main/04-Protocol-Security.md\n+ */\n+\n+static constexpr size_t POLY1305_TAGLEN{16};\n+static constexpr size_t KEY_SIZE = 32;\n+static constexpr size_t ELLSWIFT_KEY_SIZE = 64;\n+static constexpr size_t ECDH_OUTPUT_SIZE = 32;\n+/** Section 3: All Noise messages are less than or equal to 65535 bytes in length. */\n+static constexpr size_t NOISE_MAX_CHUNK_SIZE = 65535;\n+/** Sv2 spec 4.5.2 */\n+static constexpr size_t SIGNATURE_NOISE_MESSAGE_SIZE = 2 + 4 + 4 + 64;\n+static constexpr size_t HANDSHAKE_STEP2_SIZE = ELLSWIFT_KEY_SIZE + ELLSWIFT_KEY_SIZE +\n+                                               POLY1305_TAGLEN + SIGNATURE_NOISE_MESSAGE_SIZE + POLY1305_TAGLEN;\n+static constexpr size_t SV2_CERTIFICATE_GRACE_PERIOD = 3600;\n+\n+// Sha256 hash of the ascii encoding - \"Noise_NX_EllSwiftXonly_ChaChaPoly_SHA256\".\n+// This is the first step required when setting up the chaining key.\n+const std::vector<uint8_t> PROTOCOL_NAME_HASH = {\n+    27, 97, 156, 90, 248, 120, 254, 68, 34, 119, 45, 129, 209, 41, 152, 82,\n+    26, 137, 97, 115, 62, 44, 177, 60, 145, 24, 250, 214, 68, 188, 1, 128};\n+\n+// The double hash of protocol name \"Noise_NX_EllSwiftXonly_ChaChaPoly_SHA256\".\n+static std::vector<uint8_t> PROTOCOL_NAME_DOUBLE_HASH = {60, 102, 112, 143, 69, 248, 185, 34, 53, 193, 3, 46, 250, 104, 70, 171,\n+                                                         139, 103, 55, 191, 199, 9, 77, 179, 99, 170, 7, 240, 219, 36, 226, 71};\n+\n+/** Simple certificate for the static key signed by the authority key.\n+ * See 4.5.2 and 4.5.3 of the Stratum v2 spec.\n+ */\n+class Sv2SignatureNoiseMessage\n+{\n+private:\n+    uint16_t m_version = 0;\n+    uint32_t m_valid_from = 0;\n+    uint32_t m_valid_to = 0;\n+    std::vector<unsigned char> m_sig;\n+\n+    uint256 GetHash();\n+    void SignSchnorr(const CKey& authority_key, Span<unsigned char> sig);\n+\n+public:\n+    Sv2SignatureNoiseMessage() = default;\n+    Sv2SignatureNoiseMessage(uint16_t version, uint32_t valid_from, uint32_t valid_to, const XOnlyPubKey& static_key, const CKey& authority_key);\n+\n+    /* The certificate serializes pubkeys in x-only format, not EllSwift. */\n+    XOnlyPubKey m_static_key = {};\n+\n+    [[nodiscard]] bool Validate(XOnlyPubKey authority_key);\n+\n+    template <typename Stream>\n+    // The static_key is signed for, but not serialized.\n+    void Serialize(Stream& s) const\n+    {\n+        s << m_version\n+          << m_valid_from\n+          << m_valid_to;\n+\n+        s.write(MakeByteSpan(m_sig));",
      "path": "src/common/sv2_noise.h",
      "position": null,
      "original_position": 76,
      "commit_id": "af8e738d37eb3787d91fec250d83cc78197d16e9",
      "original_commit_id": "a392a4c2f3be7d2751502adc887802a24f0f6898",
      "in_reply_to_id": 1472497733,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The member function `write` is the low-level interface for stream-like classes to accept a span of bytes. Normally, it shouldn't be used in common code, only internally in serialization.\r\n\r\nIf you want to serialize an object in Bitcoin Core, you can use the `<<` operator to write and `>>` to read.",
      "created_at": "2024-02-01T17:20:09Z",
      "updated_at": "2024-02-01T17:20:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29346#discussion_r1474833093",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1474833093"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29346"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 66,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1474980968",
      "pull_request_review_id": 1857343625,
      "id": 1474980968,
      "node_id": "PRRC_kwDOABII585X6mxo",
      "diff_hunk": "@@ -0,0 +1,283 @@\n+// Copyright (c) 2023-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_COMMON_SV2_NOISE_H\n+#define BITCOIN_COMMON_SV2_NOISE_H\n+\n+#include <compat/compat.h>\n+#include <key.h>\n+#include <pubkey.h>\n+#include <random.h>\n+#include <streams.h>\n+#include <uint256.h>\n+\n+/** The Noise Protocol Framework\n+ *  https://noiseprotocol.org/noise.html\n+ *  Revision 38, 2018-07-11\n+ *\n+ *  Stratum v2 handshake and cipher specification:\n+ *  https://github.com/stratum-mining/sv2-spec/blob/main/04-Protocol-Security.md\n+ */\n+\n+static constexpr size_t POLY1305_TAGLEN{16};\n+static constexpr size_t KEY_SIZE = 32;\n+static constexpr size_t ELLSWIFT_KEY_SIZE = 64;\n+static constexpr size_t ECDH_OUTPUT_SIZE = 32;\n+/** Section 3: All Noise messages are less than or equal to 65535 bytes in length. */\n+static constexpr size_t NOISE_MAX_CHUNK_SIZE = 65535;\n+/** Sv2 spec 4.5.2 */\n+static constexpr size_t SIGNATURE_NOISE_MESSAGE_SIZE = 2 + 4 + 4 + 64;\n+static constexpr size_t HANDSHAKE_STEP2_SIZE = ELLSWIFT_KEY_SIZE + ELLSWIFT_KEY_SIZE +\n+                                               POLY1305_TAGLEN + SIGNATURE_NOISE_MESSAGE_SIZE + POLY1305_TAGLEN;\n+static constexpr size_t SV2_CERTIFICATE_GRACE_PERIOD = 3600;\n+\n+// Sha256 hash of the ascii encoding - \"Noise_NX_EllSwiftXonly_ChaChaPoly_SHA256\".\n+// This is the first step required when setting up the chaining key.\n+const std::vector<uint8_t> PROTOCOL_NAME_HASH = {\n+    27, 97, 156, 90, 248, 120, 254, 68, 34, 119, 45, 129, 209, 41, 152, 82,\n+    26, 137, 97, 115, 62, 44, 177, 60, 145, 24, 250, 214, 68, 188, 1, 128};\n+\n+// The double hash of protocol name \"Noise_NX_EllSwiftXonly_ChaChaPoly_SHA256\".\n+static std::vector<uint8_t> PROTOCOL_NAME_DOUBLE_HASH = {60, 102, 112, 143, 69, 248, 185, 34, 53, 193, 3, 46, 250, 104, 70, 171,\n+                                                         139, 103, 55, 191, 199, 9, 77, 179, 99, 170, 7, 240, 219, 36, 226, 71};\n+\n+/** Simple certificate for the static key signed by the authority key.\n+ * See 4.5.2 and 4.5.3 of the Stratum v2 spec.\n+ */\n+class Sv2SignatureNoiseMessage\n+{\n+private:\n+    uint16_t m_version = 0;\n+    uint32_t m_valid_from = 0;\n+    uint32_t m_valid_to = 0;\n+    std::vector<unsigned char> m_sig;\n+\n+    uint256 GetHash();\n+    void SignSchnorr(const CKey& authority_key, Span<unsigned char> sig);\n+\n+public:\n+    Sv2SignatureNoiseMessage() = default;\n+    Sv2SignatureNoiseMessage(uint16_t version, uint32_t valid_from, uint32_t valid_to, const XOnlyPubKey& static_key, const CKey& authority_key);\n+\n+    /* The certificate serializes pubkeys in x-only format, not EllSwift. */\n+    XOnlyPubKey m_static_key = {};\n+\n+    [[nodiscard]] bool Validate(XOnlyPubKey authority_key);\n+\n+    template <typename Stream>\n+    // The static_key is signed for, but not serialized.\n+    void Serialize(Stream& s) const\n+    {\n+        s << m_version\n+          << m_valid_from\n+          << m_valid_to;\n+\n+        s.write(MakeByteSpan(m_sig));",
      "path": "src/common/sv2_noise.h",
      "position": null,
      "original_position": 76,
      "commit_id": "af8e738d37eb3787d91fec250d83cc78197d16e9",
      "original_commit_id": "a392a4c2f3be7d2751502adc887802a24f0f6898",
      "in_reply_to_id": 1472497733,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'll look into replace `write` with `>>`.\r\n\r\nNot sure if it's worth changing `m_sig` from `std::array<unsigned char>` to `std::array<std::byte>`. It's only used by `VerifySchnorr` and `SignSchnorr` which want a `Span<unsigned char>`, so whether we cast it here or there doesn't matter?",
      "created_at": "2024-02-01T19:00:33Z",
      "updated_at": "2024-02-01T19:00:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29346#discussion_r1474980968",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1474980968"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29346"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 66,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1475695984",
      "pull_request_review_id": 1858606575,
      "id": 1475695984,
      "node_id": "PRRC_kwDOABII585X9VVw",
      "diff_hunk": "@@ -0,0 +1,283 @@\n+// Copyright (c) 2023-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_COMMON_SV2_NOISE_H\n+#define BITCOIN_COMMON_SV2_NOISE_H\n+\n+#include <compat/compat.h>\n+#include <key.h>\n+#include <pubkey.h>\n+#include <random.h>\n+#include <streams.h>\n+#include <uint256.h>\n+\n+/** The Noise Protocol Framework\n+ *  https://noiseprotocol.org/noise.html\n+ *  Revision 38, 2018-07-11\n+ *\n+ *  Stratum v2 handshake and cipher specification:\n+ *  https://github.com/stratum-mining/sv2-spec/blob/main/04-Protocol-Security.md\n+ */\n+\n+static constexpr size_t POLY1305_TAGLEN{16};\n+static constexpr size_t KEY_SIZE = 32;\n+static constexpr size_t ELLSWIFT_KEY_SIZE = 64;\n+static constexpr size_t ECDH_OUTPUT_SIZE = 32;\n+/** Section 3: All Noise messages are less than or equal to 65535 bytes in length. */\n+static constexpr size_t NOISE_MAX_CHUNK_SIZE = 65535;\n+/** Sv2 spec 4.5.2 */\n+static constexpr size_t SIGNATURE_NOISE_MESSAGE_SIZE = 2 + 4 + 4 + 64;\n+static constexpr size_t HANDSHAKE_STEP2_SIZE = ELLSWIFT_KEY_SIZE + ELLSWIFT_KEY_SIZE +\n+                                               POLY1305_TAGLEN + SIGNATURE_NOISE_MESSAGE_SIZE + POLY1305_TAGLEN;\n+static constexpr size_t SV2_CERTIFICATE_GRACE_PERIOD = 3600;\n+\n+// Sha256 hash of the ascii encoding - \"Noise_NX_EllSwiftXonly_ChaChaPoly_SHA256\".\n+// This is the first step required when setting up the chaining key.\n+const std::vector<uint8_t> PROTOCOL_NAME_HASH = {\n+    27, 97, 156, 90, 248, 120, 254, 68, 34, 119, 45, 129, 209, 41, 152, 82,\n+    26, 137, 97, 115, 62, 44, 177, 60, 145, 24, 250, 214, 68, 188, 1, 128};\n+\n+// The double hash of protocol name \"Noise_NX_EllSwiftXonly_ChaChaPoly_SHA256\".\n+static std::vector<uint8_t> PROTOCOL_NAME_DOUBLE_HASH = {60, 102, 112, 143, 69, 248, 185, 34, 53, 193, 3, 46, 250, 104, 70, 171,\n+                                                         139, 103, 55, 191, 199, 9, 77, 179, 99, 170, 7, 240, 219, 36, 226, 71};\n+\n+/** Simple certificate for the static key signed by the authority key.\n+ * See 4.5.2 and 4.5.3 of the Stratum v2 spec.\n+ */\n+class Sv2SignatureNoiseMessage\n+{\n+private:\n+    uint16_t m_version = 0;\n+    uint32_t m_valid_from = 0;\n+    uint32_t m_valid_to = 0;\n+    std::vector<unsigned char> m_sig;\n+\n+    uint256 GetHash();\n+    void SignSchnorr(const CKey& authority_key, Span<unsigned char> sig);\n+\n+public:\n+    Sv2SignatureNoiseMessage() = default;\n+    Sv2SignatureNoiseMessage(uint16_t version, uint32_t valid_from, uint32_t valid_to, const XOnlyPubKey& static_key, const CKey& authority_key);\n+\n+    /* The certificate serializes pubkeys in x-only format, not EllSwift. */\n+    XOnlyPubKey m_static_key = {};\n+\n+    [[nodiscard]] bool Validate(XOnlyPubKey authority_key);\n+\n+    template <typename Stream>\n+    // The static_key is signed for, but not serialized.\n+    void Serialize(Stream& s) const\n+    {\n+        s << m_version\n+          << m_valid_from\n+          << m_valid_to;\n+\n+        s.write(MakeByteSpan(m_sig));",
      "path": "src/common/sv2_noise.h",
      "position": null,
      "original_position": 76,
      "commit_id": "af8e738d37eb3787d91fec250d83cc78197d16e9",
      "original_commit_id": "a392a4c2f3be7d2751502adc887802a24f0f6898",
      "in_reply_to_id": 1472497733,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I'll look into replace `write` with `>>`.\r\n\r\n`>>` means reading. You may want to try `<<`, if you want to write an object.",
      "created_at": "2024-02-02T08:00:48Z",
      "updated_at": "2024-02-02T08:00:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29346#discussion_r1475695984",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1475695984"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29346"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 66,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1475854412",
      "pull_request_review_id": 1858879817,
      "id": 1475854412,
      "node_id": "PRRC_kwDOABII585X98BM",
      "diff_hunk": "@@ -0,0 +1,283 @@\n+// Copyright (c) 2023-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_COMMON_SV2_NOISE_H\n+#define BITCOIN_COMMON_SV2_NOISE_H\n+\n+#include <compat/compat.h>\n+#include <key.h>\n+#include <pubkey.h>\n+#include <random.h>\n+#include <streams.h>\n+#include <uint256.h>\n+\n+/** The Noise Protocol Framework\n+ *  https://noiseprotocol.org/noise.html\n+ *  Revision 38, 2018-07-11\n+ *\n+ *  Stratum v2 handshake and cipher specification:\n+ *  https://github.com/stratum-mining/sv2-spec/blob/main/04-Protocol-Security.md\n+ */\n+\n+static constexpr size_t POLY1305_TAGLEN{16};\n+static constexpr size_t KEY_SIZE = 32;\n+static constexpr size_t ELLSWIFT_KEY_SIZE = 64;\n+static constexpr size_t ECDH_OUTPUT_SIZE = 32;\n+/** Section 3: All Noise messages are less than or equal to 65535 bytes in length. */\n+static constexpr size_t NOISE_MAX_CHUNK_SIZE = 65535;\n+/** Sv2 spec 4.5.2 */\n+static constexpr size_t SIGNATURE_NOISE_MESSAGE_SIZE = 2 + 4 + 4 + 64;\n+static constexpr size_t HANDSHAKE_STEP2_SIZE = ELLSWIFT_KEY_SIZE + ELLSWIFT_KEY_SIZE +\n+                                               POLY1305_TAGLEN + SIGNATURE_NOISE_MESSAGE_SIZE + POLY1305_TAGLEN;\n+static constexpr size_t SV2_CERTIFICATE_GRACE_PERIOD = 3600;\n+\n+// Sha256 hash of the ascii encoding - \"Noise_NX_EllSwiftXonly_ChaChaPoly_SHA256\".\n+// This is the first step required when setting up the chaining key.\n+const std::vector<uint8_t> PROTOCOL_NAME_HASH = {\n+    27, 97, 156, 90, 248, 120, 254, 68, 34, 119, 45, 129, 209, 41, 152, 82,\n+    26, 137, 97, 115, 62, 44, 177, 60, 145, 24, 250, 214, 68, 188, 1, 128};\n+\n+// The double hash of protocol name \"Noise_NX_EllSwiftXonly_ChaChaPoly_SHA256\".\n+static std::vector<uint8_t> PROTOCOL_NAME_DOUBLE_HASH = {60, 102, 112, 143, 69, 248, 185, 34, 53, 193, 3, 46, 250, 104, 70, 171,\n+                                                         139, 103, 55, 191, 199, 9, 77, 179, 99, 170, 7, 240, 219, 36, 226, 71};\n+\n+/** Simple certificate for the static key signed by the authority key.\n+ * See 4.5.2 and 4.5.3 of the Stratum v2 spec.\n+ */\n+class Sv2SignatureNoiseMessage\n+{\n+private:\n+    uint16_t m_version = 0;\n+    uint32_t m_valid_from = 0;\n+    uint32_t m_valid_to = 0;\n+    std::vector<unsigned char> m_sig;\n+\n+    uint256 GetHash();\n+    void SignSchnorr(const CKey& authority_key, Span<unsigned char> sig);\n+\n+public:\n+    Sv2SignatureNoiseMessage() = default;\n+    Sv2SignatureNoiseMessage(uint16_t version, uint32_t valid_from, uint32_t valid_to, const XOnlyPubKey& static_key, const CKey& authority_key);\n+\n+    /* The certificate serializes pubkeys in x-only format, not EllSwift. */\n+    XOnlyPubKey m_static_key = {};\n+\n+    [[nodiscard]] bool Validate(XOnlyPubKey authority_key);\n+\n+    template <typename Stream>\n+    // The static_key is signed for, but not serialized.\n+    void Serialize(Stream& s) const\n+    {\n+        s << m_version\n+          << m_valid_from\n+          << m_valid_to;\n+\n+        s.write(MakeByteSpan(m_sig));",
      "path": "src/common/sv2_noise.h",
      "position": null,
      "original_position": 76,
      "commit_id": "af8e738d37eb3787d91fec250d83cc78197d16e9",
      "original_commit_id": "a392a4c2f3be7d2751502adc887802a24f0f6898",
      "in_reply_to_id": 1472497733,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "` << m_sig` works fine, so `m_sig` can live happily as a `std::array<unsigned char`",
      "created_at": "2024-02-02T10:20:27Z",
      "updated_at": "2024-02-02T10:20:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29346#discussion_r1475854412",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1475854412"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29346"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 66,
      "side": "RIGHT"
    }
  ]
}