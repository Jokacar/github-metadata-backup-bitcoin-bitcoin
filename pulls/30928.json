{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928",
    "id": 2081209565,
    "node_id": "PR_kwDOABII5858DLzd",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/30928",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/30928.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/30928.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30928",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30928/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/2e33dbadcf69838c8ea591dccdc666f809c3134a",
    "number": 30928,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "tinyformat: refactor: increase compile-time checks and don't throw for tfm::format_error",
    "user": {
      "login": "stickies-v",
      "id": 69010457,
      "node_id": "MDQ6VXNlcjY5MDEwNDU3",
      "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stickies-v",
      "html_url": "https://github.com/stickies-v",
      "followers_url": "https://api.github.com/users/stickies-v/followers",
      "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
      "organizations_url": "https://api.github.com/users/stickies-v/orgs",
      "repos_url": "https://api.github.com/users/stickies-v/repos",
      "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/stickies-v/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Avoid unexpected run-time crashes from string formatting by enforcing compile-time format string checks for most* `tfm::format` and `strprintf` usage, and by returning an error string instead of throwing for a run-time tfm::format_error so callsites don't need to implement this error handling.\r\n\r\nThis PR should introduce no behaviour change.\r\nThe main changes are:\r\n- remove the `const std::string&` `tfm::format` overload since it's not necessary. Usage of this overload is removed by one of:\r\n  - replacing string concatenation in the format string with just an extra parameter\r\n  - using the `bilingual_str` overload\r\n  - using the `tfm::format_raw` functions (only for tinyformat implementation or tests)\r\n- rename the throwing `tfm::format` functions to `tfm::format_raw`, so call existing callsites by default use the safer `util::ConstevalFormatString` overloads. Callsites that for some reason don't pass the compile-time checks (such as in `bitcoin-cli.cpp`) can use `tfm::format_raw`.\r\n- make `tfm::format_error` internal to `tinyformat` and just return error strings instead, so callsites don't need to implement error handling to prevent crashing. \r\n\r\n*The `bilingual_str format(const bilingual_str& fmt, const Args&... args)` is not yet compile-time checked, which means the `lint-format-strings.py` test can't be removed yet.\r\n\r\n Follow-up on https://github.com/bitcoin/bitcoin/pull/30889#discussion_r1766633746, an alternative to #15926.",
    "labels": [
      {
        "id": 241832923,
        "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
        "name": "Utils/log/libs",
        "description": "",
        "color": "5319e7",
        "default": false
      }
    ],
    "created_at": "2024-09-19T14:45:20Z",
    "updated_at": "2024-09-30T10:58:07Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "2f89a9520c8fc545425317c92532e8148f575b85",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "stickies-v:2024-09/try-format",
      "ref": "2024-09/try-format",
      "sha": "2e33dbadcf69838c8ea591dccdc666f809c3134a",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 431644530,
        "node_id": "R_kgDOGbpfcg",
        "name": "bitcoin",
        "full_name": "stickies-v/bitcoin",
        "owner": {
          "login": "stickies-v",
          "id": 69010457,
          "node_id": "MDQ6VXNlcjY5MDEwNDU3",
          "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/stickies-v",
          "html_url": "https://github.com/stickies-v",
          "followers_url": "https://api.github.com/users/stickies-v/followers",
          "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
          "organizations_url": "https://api.github.com/users/stickies-v/orgs",
          "repos_url": "https://api.github.com/users/stickies-v/repos",
          "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/stickies-v/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/stickies-v/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/stickies-v/bitcoin",
        "archive_url": "https://api.github.com/repos/stickies-v/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/stickies-v/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/stickies-v/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/stickies-v/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/stickies-v/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/stickies-v/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/stickies-v/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/stickies-v/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/stickies-v/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/stickies-v/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/stickies-v/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/stickies-v/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/stickies-v/bitcoin/events",
        "forks_url": "https://api.github.com/repos/stickies-v/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/stickies-v/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/stickies-v/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/stickies-v/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/stickies-v/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/stickies-v/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/stickies-v/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/stickies-v/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/stickies-v/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/stickies-v/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/stickies-v/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/stickies-v/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/stickies-v/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/stickies-v/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/stickies-v/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/stickies-v/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:stickies-v/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/stickies-v/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/stickies-v/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/stickies-v/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/stickies-v/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/stickies-v/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/stickies-v/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/stickies-v/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/stickies-v/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/stickies-v/bitcoin/hooks",
        "svn_url": "https://github.com/stickies-v/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 2,
        "watchers_count": 2,
        "size": 259192,
        "default_branch": "master",
        "open_issues_count": 1,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-09-30T10:19:45Z",
        "created_at": "2021-11-24T22:26:41Z",
        "updated_at": "2024-06-19T14:39:47Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "d812cf11896a2214467b6fa72d7b763bac6077c5",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 36220,
        "stargazers_count": 78649,
        "watchers_count": 78649,
        "size": 269032,
        "default_branch": "master",
        "open_issues_count": 669,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-09-27T10:17:47Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-09-30T10:33:30Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 139,
    "deletions": 131,
    "changed_files": 15,
    "commits": 4,
    "review_comments": 55,
    "comments": 7
  },
  "events": [
    {
      "event": "commented",
      "id": 2361212948,
      "node_id": "IC_kwDOABII586MvUAU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2361212948",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-19T14:45:23Z",
      "updated_at": "2024-09-30T10:35:58Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/30928).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [maflcko](https://github.com/bitcoin/bitcoin/pull/30928#issuecomment-2382746995) |\n| Stale ACK | [l0rinc](https://github.com/bitcoin/bitcoin/pull/30928#pullrequestreview-2316356184) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#30930](https://github.com/bitcoin/bitcoin/pull/30930) (netinfo: add peer services column and outbound-only peers list by jonatack)\n* [#30929](https://github.com/bitcoin/bitcoin/pull/30929) (log: Enforce trailing newline at compile time by maflcko)\n* [#29936](https://github.com/bitcoin/bitcoin/pull/29936) (fuzz: wallet: add target for `CreateTransaction` by brunoerg)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#issuecomment-2361212948",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30928"
    },
    {
      "event": "labeled",
      "id": 14325579443,
      "node_id": "LE_lADOABII586XMRHuzwAAAANV3v6z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14325579443",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-19T14:45:25Z",
      "label": {
        "name": "Utils/log/libs",
        "color": "5319e7"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14325740161,
      "node_id": "HRFPE_lADOABII586XMRHuzwAAAANV4XKB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14325740161",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-19T14:54:58Z"
    },
    {
      "event": "labeled",
      "id": 14325743947,
      "node_id": "LE_lADOABII586XMRHuzwAAAANV4YFL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14325743947",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-19T14:55:15Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2361244945,
      "node_id": "IC_kwDOABII586Mvb0R",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2361244945",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-19T14:55:16Z",
      "updated_at": "2024-09-19T14:55:16Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/30382700932</sub>\n\n<details><summary>Hints</summary>\n\nMake sure to run all tests locally, according to the documentation.\n\nThe failure may happen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#issuecomment-2361244945",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30928"
    },
    {
      "event": "reviewed",
      "id": 2315839833,
      "node_id": "PRR_kwDOABII586KCOlZ",
      "url": null,
      "actor": null,
      "commit_id": "ed4c60e38b78ab49af0212bee775ce34285e6d21",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#pullrequestreview-2315839833",
      "submitted_at": "2024-09-19T15:06:29Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
    },
    {
      "event": "reviewed",
      "id": 2315829956,
      "node_id": "PRR_kwDOABII586KCMLE",
      "url": null,
      "actor": null,
      "commit_id": "bb9b55f51c4d611bd79e4e29d8cb0ede59e3e487",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#pullrequestreview-2315829956",
      "submitted_at": "2024-09-19T15:09:13Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14326266500,
      "node_id": "HRFPE_lADOABII586XMRHuzwAAAANV6XqE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14326266500",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-19T15:27:17Z"
    },
    {
      "event": "reviewed",
      "id": 2315918549,
      "node_id": "PRR_kwDOABII586KChzV",
      "url": null,
      "actor": null,
      "commit_id": "6dc6e4583c02f0d21dffeb6b2c81358b49a1f340",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#pullrequestreview-2315918549",
      "submitted_at": "2024-09-19T15:37:16Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
    },
    {
      "event": "unlabeled",
      "id": 14328138385,
      "node_id": "UNLE_lADOABII586XMRHuzwAAAANWBgqR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14328138385",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-19T17:25:52Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2316356184,
      "node_id": "PRR_kwDOABII586KEMpY",
      "url": null,
      "actor": null,
      "commit_id": "6dc6e4583c02f0d21dffeb6b2c81358b49a1f340",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "utACK 6dc6e4583c02f0d21dffeb6b2c81358b49a1f340",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#pullrequestreview-2316356184",
      "submitted_at": "2024-09-19T17:55:27Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDFmMmQwZmZkNTY2OWY1MWU0YzVhMmFmMTRkMjU1YzM5NGIyZWRhMjg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1f2d0ffd5669f51e4c5a2af14d255c394b2eda28",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1f2d0ffd5669f51e4c5a2af14d255c394b2eda28",
      "tree": {
        "sha": "0d3ccb00d2a0d65859eca562cd9e2ddd2a5ea52c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0d3ccb00d2a0d65859eca562cd9e2ddd2a5ea52c"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 0d3ccb00d2a0d65859eca562cd9e2ddd2a5ea52c\nparent 2db926f49c812a3f04a565834c841ce4bc4ae288\nauthor stickies-v <stickies-v@protonmail.com> 1727272523 +0100\ncommitter stickies-v <stickies-v@protonmail.com> 1727347642 +0100\n\nmove-only: ConstevalFormatString tfm::format to tinyformat.h\n\nIn future commits, the non-ConstevalFormatString tfm::format\noverloads will be renamed or removed. To avoid all callsites\nhaving to include util/string.h (or to have a circular dependency\nbetween tinyformat.h and util/string.h), just move the\nConstevalFormatString overloads to tinyformat.h\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE5g/ggIZt5fccjfOgXLHObl5mp1cFAmb1PLMACgkQXLHObl5m\np1foSw/9E7ST9uyO4Ofl6SWp0hFYPTFF0+egcMxtCZ9SOTavQfBMeE9q4IdpWXrF\n/y7sN+KWKipml8u24ayAMZABgAjvYP9GmAFbKC7NgxxFNk4lrbz0kwq4opYY2T04\n59YjteY3iUQJKHeono7MRxo8wVk40R8hcVRTYny7fdJXSZwY+3iWhotPxFFt5x4P\n7HPcqV5aUK+GGdaO1CIbVE6GKgkKpQiFBHIOG5hbuFMCCDZuKZy1/7Brc4dCdAaI\nizru4Kk4gJXl4K+GFpb7fllCSRq7nY6cIXCvDEyj9Os8fgoltNevolcQe0Ap0TqS\nI0xjkujtp7gVsb99gTVw/LBpfLmu8lTfhiKgMU5vct3m93OsuiZrg5LZx3yUPsT1\nzPk5aYOkwdpNId58XOiEPrTeW6+MlF/8RVYLRsDoD1yqNbwWWs95k+Z12NqfHemF\nzrJNUFfOq7fD6mjc8tiSKt4X6+q+63RLu9ApdF480TDp+n5nhzrQ7f4GbAdnMDGK\nc6eGjslZEx0EEVTjZledljdEXxPOCtCHA4IAEPcYNzBoHDLtjMz/jDZCIlmeDfGr\nii1aIh6arctLFEan2jVNC1gq/C492mJHRGZHhJkRmVL8eCvFxzviPxpZbCOTT8vQ\nuIII6JtSvy+GqVpWS47zYyEkfyUKl6XKN4jkKanrYfNmUZgGtfo=\n=9KQh\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2db926f49c812a3f04a565834c841ce4bc4ae288",
          "sha": "2db926f49c812a3f04a565834c841ce4bc4ae288",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/2db926f49c812a3f04a565834c841ce4bc4ae288"
        }
      ],
      "message": "move-only: ConstevalFormatString tfm::format to tinyformat.h\n\nIn future commits, the non-ConstevalFormatString tfm::format\noverloads will be renamed or removed. To avoid all callsites\nhaving to include util/string.h (or to have a circular dependency\nbetween tinyformat.h and util/string.h), just move the\nConstevalFormatString overloads to tinyformat.h",
      "committer": {
        "name": "stickies-v",
        "email": "stickies-v@protonmail.com",
        "date": "2024-09-26T10:47:22Z"
      },
      "author": {
        "name": "stickies-v",
        "email": "stickies-v@protonmail.com",
        "date": "2024-09-25T13:55:23Z"
      },
      "sha": "1f2d0ffd5669f51e4c5a2af14d255c394b2eda28"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14414791159,
      "node_id": "HRFPE_lADOABII586XMRHuzwAAAANbMEH3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14414791159",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-26T11:31:54Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14415243013,
      "node_id": "HRFPE_lADOABII586XMRHuzwAAAANbNycF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14415243013",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-26T12:05:57Z"
    },
    {
      "event": "commented",
      "id": 2376752672,
      "node_id": "IC_kwDOABII586Nql4g",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2376752672",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-26T12:06:02Z",
      "updated_at": "2024-09-26T12:06:02Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/30701048188</sub>\n\n<details><summary>Hints</summary>\n\nMake sure to run all tests locally, according to the documentation.\n\nThe failure may happen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#issuecomment-2376752672",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30928"
    },
    {
      "event": "labeled",
      "id": 14415244140,
      "node_id": "LE_lADOABII586XMRHuzwAAAANbNyts",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14415244140",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-26T12:06:02Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "renamed",
      "id": 14415305325,
      "node_id": "RTE_lADOABII586XMRHuzwAAAANbOBpt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14415305325",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-26T12:10:24Z",
      "rename": {
        "from": "util: refactor: add and use run-time safe tinyformat::try_format",
        "to": "tinyformat: refactor: increase compile-time checks and don't throw for tfm::format_error"
      }
    },
    {
      "event": "commented",
      "id": 2376782278,
      "node_id": "IC_kwDOABII586NqtHG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2376782278",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-26T12:16:13Z",
      "updated_at": "2024-09-26T12:16:13Z",
      "author_association": "CONTRIBUTOR",
      "body": "Latest force-push increases the scope of this PR, see updated PR description for an overview. In a nutshell:\r\n- all non-`bilingual_str` `format`/`strprintf` usage is now compile-time checked. Format errors are returned as strings instead of thrown as error, but throwing behaviour can be maintained through `tfm::format_raw`.\r\n- the `const std::string&` `format` overload is removed because it's unnecessary\r\n\r\nThanks a lot @maflcko and @l0rinc for your review!",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#issuecomment-2376782278",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30928"
    },
    {
      "event": "mentioned",
      "id": 14415411888,
      "node_id": "MEE_lADOABII586XMRHuzwAAAANbObqw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14415411888",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-26T12:16:15Z"
    },
    {
      "event": "subscribed",
      "id": 14415411910,
      "node_id": "SE_lADOABII586XMRHuzwAAAANbObrG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14415411910",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-26T12:16:15Z"
    },
    {
      "event": "mentioned",
      "id": 14415411932,
      "node_id": "MEE_lADOABII586XMRHuzwAAAANbObrc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14415411932",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-26T12:16:15Z"
    },
    {
      "event": "subscribed",
      "id": 14415411946,
      "node_id": "SE_lADOABII586XMRHuzwAAAANbObrq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14415411946",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-26T12:16:15Z"
    },
    {
      "event": "reviewed",
      "id": 2331072265,
      "node_id": "PRR_kwDOABII586K8VcJ",
      "url": null,
      "actor": null,
      "commit_id": "ed57f6ee02d5a6ada23abaea6e2176cd4f173e4f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "lgtm\r\n\r\nThanks for taking the feedback",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#pullrequestreview-2331072265",
      "submitted_at": "2024-09-26T12:22:48Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
    },
    {
      "event": "unlabeled",
      "id": 14416622815,
      "node_id": "UNLE_lADOABII586XMRHuzwAAAANbTDTf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14416622815",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-26T13:32:13Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14429565270,
      "node_id": "HRFPE_lADOABII586XMRHuzwAAAANcEbFW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14429565270",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-27T11:16:01Z"
    },
    {
      "event": "commented",
      "id": 2379043395,
      "node_id": "IC_kwDOABII586NzVJD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2379043395",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-27T11:18:38Z",
      "updated_at": "2024-09-27T11:18:38Z",
      "author_association": "CONTRIBUTOR",
      "body": "Force-pushed to address @maflcko's [comment](https://github.com/bitcoin/bitcoin/pull/30928/#discussion_r1776965132) about generally not letting `tinyformat` throw format errors, instead of just for the `util::ConstevalFormatString` overloads. Most notably, this changes behaviour for the `bilingual_str` `format` overload to also not throw.",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#issuecomment-2379043395",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30928"
    },
    {
      "event": "mentioned",
      "id": 14429593825,
      "node_id": "MEE_lADOABII586XMRHuzwAAAANcEiDh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14429593825",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-27T11:18:39Z"
    },
    {
      "event": "subscribed",
      "id": 14429593842,
      "node_id": "SE_lADOABII586XMRHuzwAAAANcEiDy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14429593842",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-27T11:18:39Z"
    },
    {
      "event": "reviewed",
      "id": 2333489859,
      "node_id": "PRR_kwDOABII586LFjrD",
      "url": null,
      "actor": null,
      "commit_id": "bb12305737e3c22325930b5bdb04028f1a6f2ef6",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "lgtm",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#pullrequestreview-2333489859",
      "submitted_at": "2024-09-27T11:28:40Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
    },
    {
      "event": "reviewed",
      "id": 2333689157,
      "node_id": "PRR_kwDOABII586LGUVF",
      "url": null,
      "actor": null,
      "commit_id": "bb12305737e3c22325930b5bdb04028f1a6f2ef6",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "\r\n\r\n\r\n\r\nreview ACK bb12305737e3c22325930b5bdb04028f1a6f2ef6 💅\r\n\r\n<details><summary>Show signature</summary>\r\n\r\nSignature:\r\n\r\n```\r\nuntrusted comment: signature from minisign secret key on empty file; verify via: minisign -Vm \"${path_to_any_empty_file}\" -P RWTRmVTMeKV5noAMqVlsMugDDCyyTSbA3Re5AkUrhvLVln0tSaFWglOw -x \"${path_to_this_whole_four_line_signature_blob}\"\r\nRUTRmVTMeKV5npGrKx1nqXCw5zeVHdtdYURB/KlyA/LMFgpNCs+SkW9a8N95d+U4AP1RJMi+krxU1A3Yux4bpwZNLvVBKy0wLgM=\r\ntrusted comment: review ACK bb12305737e3c22325930b5bdb04028f1a6f2ef6 💅\r\nFge/JMP/cEBpCNfrVWYhr7mIRY4zXGiZRkBzWtbVouQ4q6WPnKlif9AdGqIb4Jrmkp/sIcvaECTG9QyCy1/mBA==\r\n```\r\n\r\n</details>\r\n",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#pullrequestreview-2333689157",
      "submitted_at": "2024-09-27T13:07:28Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
    },
    {
      "event": "review_requested",
      "id": 14430916113,
      "node_id": "RRE_lADOABII586XMRHuzwAAAANcJk4R",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14430916113",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-27T13:07:31Z",
      "requested_reviewer": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14432389993,
      "node_id": "HRFPE_lADOABII586XMRHuzwAAAANcPMtp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14432389993",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-27T14:48:17Z"
    },
    {
      "event": "reviewed",
      "id": 2333963688,
      "node_id": "PRR_kwDOABII586LHXWo",
      "url": null,
      "actor": null,
      "commit_id": "2d4f82d590845f9b2ea11bbcfe9377ef14df8775",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "I have concerns about the translations, using raw format instead of adjusting the validator, and I think we could sneak in a fix for unterminated positionals.\r\n\r\n<details>\r\n<summary>Patch</summary>\r\n\r\n```patch\r\nIndex: src/util/string.h\r\n<+>UTF-8\r\n===================================================================\r\ndiff --git a/src/util/string.h b/src/util/string.h\r\n--- a/src/util/string.h\t(revision 2d4f82d590845f9b2ea11bbcfe9377ef14df8775)\r\n+++ b/src/util/string.h\t(date 1727560531914)\r\n@@ -51,12 +51,19 @@\r\n                 ++it;\r\n                 continue;\r\n             }\r\n+            if (*it == '*' || ((*it == '_' || *it == '-') && *std::next(it) == '*')) {\r\n+                count_normal += 2; // width + value\r\n+                it += 2;\r\n+                continue;\r\n+            }\r\n \r\n             unsigned maybe_num{0};\r\n             while ('0' <= *it && *it <= '9') {\r\n                 maybe_num *= 10;\r\n                 maybe_num += *it - '0';\r\n-                ++it;\r\n+                if (++it >= str.end()) throw \"Format specifier incorrectly terminated by end of string\";\r\n             };\r\n \r\n             if (*it == '$') {\r\nIndex: src/test/util_string_tests.cpp\r\n<+>UTF-8\r\n===================================================================\r\ndiff --git a/src/test/util_string_tests.cpp b/src/test/util_string_tests.cpp\r\n--- a/src/test/util_string_tests.cpp\t(revision 2d4f82d590845f9b2ea11bbcfe9377ef14df8775)\r\n+++ b/src/test/util_string_tests.cpp\t(date 1727560389361)\r\n@@ -61,7 +61,6 @@\r\n     // The `*` specifier behavior is unsupported and can lead to runtime\r\n     // errors when used in a ConstevalFormatString. Please refer to the\r\n     // note in the ConstevalFormatString docs.\r\n-    PassFmt<1>(\"%*c\");\r\n     PassFmt<2>(\"%2$*3$d\");\r\n     PassFmt<1>(\"%.*f\");\r\n \r\n@@ -83,18 +82,27 @@\r\n \r\n     auto err_term{\"Format specifier incorrectly terminated by end of string\"};\r\n     FailFmtWithError<1>(\"%\", err_term);\r\n+    FailFmtWithError<1>(\"%1\", err_term);\r\n     FailFmtWithError<1>(\"%1$\", err_term);\r\n }\r\n \r\n+BOOST_AUTO_TEST_CASE(ConstevalFormatString_SpecificUsageTests)\r\n+{\r\n+    PassFmt<6>(\"<->   type   net  v  mping   ping send recv  txn  blk  hb %*s%*s%*s \");\r\n+    PassFmt<5>(\"%*s %-*s%s\\n\");\r\n+    PassFmt<24>( \"%3s %6s %5s %2s%7s%7s%5s%5s%5s%5s  %2s %*s%*s%*s%*i %*s %-*s%s\\n\");\r\n+    PassFmt<2>(\"                        ms     ms  sec  sec  min  min                %*s\\n\\n\");\r\n+    PassFmt<4>(\"\\n%-*s    port %6i    score %6i\");\r\n+    PassFmt<3>(\"%*s %s\\n\");\r\n+}\r\n+\r\n BOOST_AUTO_TEST_CASE(tinyformat_ConstevalFormatString)\r\n {\r\n-    // ensure invalid format strings don't throw at run-time\r\n-    BOOST_CHECK_EQUAL(tfm::format(\"%*c\", \"dummy\"), R\"(Error \"tinyformat: Cannot convert from argument type to integer for use as variable width or precision\" while formatting log message: \"%*c\")\");\r\n+    // Ensure invalid format strings don't throw at run-time\r\n     BOOST_CHECK_EQUAL(tfm::format(\"%2$*3$d\", \"dummy\", \"value\"), R\"(Error \"tinyformat: Positional argument out of range\" while formatting log message: \"%2$*3$d\")\");\r\n     std::ostringstream oss;\r\n     tfm::format(oss, \"%.*f\", 5);\r\n     BOOST_CHECK_EQUAL(oss.str(), R\"(Error \"tinyformat: Too many conversion specifiers in format string\" while formatting log message: \"%.*f\")\");\r\n }\r\n \r\n-\r\n BOOST_AUTO_TEST_SUITE_END()\r\nIndex: src/bitcoin-cli.cpp\r\n<+>UTF-8\r\n===================================================================\r\ndiff --git a/src/bitcoin-cli.cpp b/src/bitcoin-cli.cpp\r\n--- a/src/bitcoin-cli.cpp\t(revision 2d4f82d590845f9b2ea11bbcfe9377ef14df8775)\r\n+++ b/src/bitcoin-cli.cpp\t(date 1727560250888)\r\n@@ -540,42 +540,46 @@\r\n         // Report detailed peer connections list sorted by direction and minimum ping time.\r\n         if (DetailsRequested() && !m_peers.empty()) {\r\n             std::sort(m_peers.begin(), m_peers.end());\r\n-            result += tfm::format_raw(\"<->   type   net  v  mping   ping send recv  txn  blk  hb %*s%*s%*s \",\r\n-                                      m_max_addr_processed_length, \"addrp\",\r\n-                                      m_max_addr_rate_limited_length, \"addrl\",\r\n-                                      m_max_age_length, \"age\");\r\n+            result += tfm::format(\"<->   type   net  v  mping   ping send recv  txn  blk  hb %*s%*s%*s \",\r\n+                                  m_max_addr_processed_length, \"addrp\",\r\n+                                  m_max_addr_rate_limited_length, \"addrl\",\r\n+                                  m_max_age_length, \"age\");\r\n             if (m_is_asmap_on) result += \" asmap \";\r\n-            result += tfm::format_raw(\"%*s %-*s%s\\n\", m_max_id_length, \"id\", IsAddressSelected() ? m_max_addr_length : 0, IsAddressSelected() ? \"address\" : \"\", IsVersionSelected() ? \"version\" : \"\");\r\n+            result += tfm::format(\"%*s %-*s%s\\n\",\r\n+                                  m_max_id_length, \"id\",\r\n+                                  IsAddressSelected() ? m_max_addr_length : 0,\r\n+                                  IsAddressSelected() ? \"address\" : \"\",\r\n+                                  IsVersionSelected() ? \"version\" : \"\");\r\n             for (const Peer& peer : m_peers) {\r\n                 std::string version{ToString(peer.version) + peer.sub_version};\r\n-                result += tfm::format_raw(\r\n-                    \"%3s %6s %5s %2s%7s%7s%5s%5s%5s%5s  %2s %*s%*s%*s%*i %*s %-*s%s\\n\",\r\n-                    peer.is_outbound ? \"out\" : \"in\",\r\n-                    ConnectionTypeForNetinfo(peer.conn_type),\r\n-                    peer.network,\r\n-                    (peer.transport_protocol_type.size() == 2 && peer.transport_protocol_type[0] == 'v') ? peer.transport_protocol_type[1] : ' ',\r\n-                    PingTimeToString(peer.min_ping),\r\n-                    PingTimeToString(peer.ping),\r\n-                    peer.last_send ? ToString(time_now - peer.last_send) : \"\",\r\n-                    peer.last_recv ? ToString(time_now - peer.last_recv) : \"\",\r\n-                    peer.last_trxn ? ToString((time_now - peer.last_trxn) / 60) : peer.is_tx_relay ? \"\" : \"*\",\r\n-                    peer.last_blck ? ToString((time_now - peer.last_blck) / 60) : \"\",\r\n-                    strprintf(\"%s%s\", peer.is_bip152_hb_to ? \".\" : \" \", peer.is_bip152_hb_from ? \"*\" : \" \"),\r\n-                    m_max_addr_processed_length, // variable spacing\r\n-                    peer.addr_processed ? ToString(peer.addr_processed) : peer.is_addr_relay_enabled ? \"\" : \".\",\r\n-                    m_max_addr_rate_limited_length, // variable spacing\r\n-                    peer.addr_rate_limited ? ToString(peer.addr_rate_limited) : \"\",\r\n-                    m_max_age_length, // variable spacing\r\n-                    peer.age,\r\n-                    m_is_asmap_on ? 7 : 0, // variable spacing\r\n-                    m_is_asmap_on && peer.mapped_as ? ToString(peer.mapped_as) : \"\",\r\n-                    m_max_id_length, // variable spacing\r\n-                    peer.id,\r\n-                    IsAddressSelected() ? m_max_addr_length : 0, // variable spacing\r\n-                    IsAddressSelected() ? peer.addr : \"\",\r\n-                    IsVersionSelected() && version != \"0\" ? version : \"\");\r\n+                result += tfm::format(\"%3s %6s %5s %2s%7s%7s%5s%5s%5s%5s  %2s %*s%*s%*s%*i %*s %-*s%s\\n\",\r\n+                                      peer.is_outbound ? \"out\" : \"in\",\r\n+                                      ConnectionTypeForNetinfo(peer.conn_type),\r\n+                                      peer.network,\r\n+                                      (peer.transport_protocol_type.size() == 2 && peer.transport_protocol_type[0] == 'v') ? peer.transport_protocol_type[1] : ' ',\r\n+                                      PingTimeToString(peer.min_ping),\r\n+                                      PingTimeToString(peer.ping),\r\n+                                      peer.last_send ? ToString(time_now - peer.last_send) : \"\",\r\n+                                      peer.last_recv ? ToString(time_now - peer.last_recv) : \"\",\r\n+                                      peer.last_trxn ? ToString((time_now - peer.last_trxn) / 60) : peer.is_tx_relay ? \"\" : \"*\",\r\n+                                      peer.last_blck ? ToString((time_now - peer.last_blck) / 60) : \"\",\r\n+                                      strprintf(\"%s%s\", peer.is_bip152_hb_to ? \".\" : \" \", peer.is_bip152_hb_from ? \"*\" : \" \"),\r\n+                                      m_max_addr_processed_length, // variable spacing\r\n+                                      peer.addr_processed ? ToString(peer.addr_processed) : peer.is_addr_relay_enabled ? \"\" : \".\",\r\n+                                      m_max_addr_rate_limited_length, // variable spacing\r\n+                                      peer.addr_rate_limited ? ToString(peer.addr_rate_limited) : \"\",\r\n+                                      m_max_age_length, // variable spacing\r\n+                                      peer.age,\r\n+                                      m_is_asmap_on ? 7 : 0, // variable spacing\r\n+                                      m_is_asmap_on && peer.mapped_as ? ToString(peer.mapped_as) : \"\",\r\n+                                      m_max_id_length, // variable spacing\r\n+                                      peer.id,\r\n+                                      IsAddressSelected() ? m_max_addr_length : 0, // variable spacing\r\n+                                      IsAddressSelected() ? peer.addr : \"\",\r\n+                                      IsVersionSelected() && version != \"0\" ? version : \"\");\r\n             }\r\n-            result += tfm::format_raw(\"                        ms     ms  sec  sec  min  min                %*s\\n\\n\", m_max_age_length, \"min\");\r\n+            result += tfm::format(\"                        ms     ms  sec  sec  min  min                %*s\\n\\n\",\r\n+                                  m_max_age_length, \"min\");\r\n         }\r\n \r\n         // Report peer connection totals by type.\r\n@@ -624,7 +628,10 @@\r\n                 max_addr_size = std::max(addr[\"address\"].get_str().length() + 1, max_addr_size);\r\n             }\r\n             for (const UniValue& addr : local_addrs) {\r\n-                result += tfm::format_raw(\"\\n%-*s    port %6i    score %6i\", max_addr_size, addr[\"address\"].get_str(), addr[\"port\"].getInt<int>(), addr[\"score\"].getInt<int>());\r\n+                result += tfm::format(\"\\n%-*s    port %6i    score %6i\",\r\n+                                      max_addr_size, addr[\"address\"].get_str(),\r\n+                                      addr[\"port\"].getInt<int>(),\r\n+                                          addr[\"score\"].getInt<int>());\r\n             }\r\n         }\r\n \r\n@@ -1116,10 +1123,9 @@\r\n         }\r\n \r\n         for (const std::string& wallet : result[\"balances\"].getKeys()) {\r\n-            result_string += tfm::format_raw(\"%*s %s\\n\",\r\n-                                             max_balance_length,\r\n-                                             result[\"balances\"][wallet].getValStr(),\r\n-                                             wallet.empty() ? \"\\\"\\\"\" : wallet);\r\n+            result_string += tfm::format(\"%*s %s\\n\",\r\n+                                         max_balance_length, result[\"balances\"][wallet].getValStr(),\r\n+                                         wallet.empty() ? \"\\\"\\\"\" : wallet);\r\n         }\r\n         result_string += \"\\n\";\r\n     }\r\nIndex: src/test/txrequest_tests.cpp\r\n<+>UTF-8\r\n===================================================================\r\ndiff --git a/src/test/txrequest_tests.cpp b/src/test/txrequest_tests.cpp\r\n--- a/src/test/txrequest_tests.cpp\t(revision 2d4f82d590845f9b2ea11bbcfe9377ef14df8775)\r\n+++ b/src/test/txrequest_tests.cpp\t(date 1727560250869)\r\n@@ -181,7 +181,7 @@\r\n             BOOST_CHECK_MESSAGE(real_total == total, strprintf(\"[%s] total %i (%i expected)\", comment, real_total, total));\r\n             BOOST_CHECK_MESSAGE(real_inflight == inflight, strprintf(\"[%s] inflight %i (%i expected)\", comment, real_inflight, inflight));\r\n             BOOST_CHECK_MESSAGE(real_candidates == candidates, strprintf(\"[%s] candidates %i (%i expected)\", comment, real_candidates, candidates));\r\n-            BOOST_CHECK_MESSAGE(ret == expected, \"[\" + comment + \"] mismatching requestables\");\r\n+            BOOST_CHECK_MESSAGE(ret == expected, strprintf(\"[%s] mismatching requestables\", comment));\r\n         });\r\n     }\r\n ```\r\n\r\n</details>",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#pullrequestreview-2333963688",
      "submitted_at": "2024-09-27T16:37:33Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
    },
    {
      "event": "reviewed",
      "id": 2335380928,
      "node_id": "PRR_kwDOABII586LMxXA",
      "url": null,
      "actor": null,
      "commit_id": "2d4f82d590845f9b2ea11bbcfe9377ef14df8775",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#pullrequestreview-2335380928",
      "submitted_at": "2024-09-28T17:24:20Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGM5MzdlYmYxY2ViYmVlNDczNTc0MzQ1NjZiNmRlYWE5ZWFhMjhmZDk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c937ebf1cebbee47357434566b6deaa9eaa28fd9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c937ebf1cebbee47357434566b6deaa9eaa28fd9",
      "tree": {
        "sha": "825cb909aa2ecdfc0625318109da9c33642fe893",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/825cb909aa2ecdfc0625318109da9c33642fe893"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 825cb909aa2ecdfc0625318109da9c33642fe893\nparent 1f2d0ffd5669f51e4c5a2af14d255c394b2eda28\nauthor stickies-v <stickies-v@protonmail.com> 1727278427 +0100\ncommitter stickies-v <stickies-v@protonmail.com> 1727690678 +0200\n\ntinyformat: remove std::string overload\n\nAll (non-test) format strings are known at compile-time, so we\ndon't need the std::string overload. Remove it so users use the\nsafer util::ConstevalFormatString where possible, or the\nbilingual_str overload where applicable.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE5g/ggIZt5fccjfOgXLHObl5mp1cFAmb6d7YACgkQXLHObl5m\np1fGnRAAmlaP9CE/urhk9DUi7wnsOq8PBgyeJcp18UY2ymJ+XYDY3+1T9uCdUw9l\n8mJq5pqAdGitVKLQvEDIi6xpsMXixgP6ThUXEnP9r9VO6oQkL8/rsbS2TBl+gENO\noMuUOnqiFEtTFBAnL1IG1uQc5mxJrkkZwAaHU2L5tWDaZH8u2X3Grc1CPGVX2CoG\nqNa/4G+KaChbaSp+lZSVp+6+Alo/x7wW7WFVSiPEp8iAPs0ny5CqJvD4amny/dIn\nj3qRVoZYhh+VGUTLNfJRmsbsciMhVvY6EgvP67PZWmhKhE1n1yTpC478+etPngSP\n7ZyXbZ0hh6n2VGc6mB4c9QXDwFClMluE5POki6g+c7l08/9qILO0OPX3utk2zJK+\nZ5IS6mLeMCTxoBw6yGntIKwIB9rdKi9o6OgH3Coo+W1wUDFjckSeVqrhR7Qj8KRv\nRDBjxa9QRxniFVJLwGAzbft98DYPZirfyoqJTYfKM4QHjXix5cE97euRJvytIoYl\nw2ioMcIqqra1WfEUJuyVcw3eItyXzJlbIB9GhbI+gippRKibEQJ2Mg7PGb7HcqC4\nROwVu3sTHiSh54jMA0IBVKaFKbXabXvEygxxcLjQSJUeTAsTW6qqj15LEM28wRbb\nRL9qQGVhN4H28yT80t4lEojMXvpOW47Ec2R947si05x0IOtTTuE=\n=rU5Y\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1f2d0ffd5669f51e4c5a2af14d255c394b2eda28",
          "sha": "1f2d0ffd5669f51e4c5a2af14d255c394b2eda28",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1f2d0ffd5669f51e4c5a2af14d255c394b2eda28"
        }
      ],
      "message": "tinyformat: remove std::string overload\n\nAll (non-test) format strings are known at compile-time, so we\ndon't need the std::string overload. Remove it so users use the\nsafer util::ConstevalFormatString where possible, or the\nbilingual_str overload where applicable.",
      "committer": {
        "name": "stickies-v",
        "email": "stickies-v@protonmail.com",
        "date": "2024-09-30T10:04:38Z"
      },
      "author": {
        "name": "stickies-v",
        "email": "stickies-v@protonmail.com",
        "date": "2024-09-25T15:33:47Z"
      },
      "sha": "c937ebf1cebbee47357434566b6deaa9eaa28fd9"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGJlN2RlODA3YzhjOWIyYTNmYzVkYTlmODk4NTExYzcwYWU0MGI5NjA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/be7de807c8c9b2a3fc5da9f898511c70ae40b960",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/be7de807c8c9b2a3fc5da9f898511c70ae40b960",
      "tree": {
        "sha": "de615b0f1c3fd40c2f8069fe7a3d0d299c6729fc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/de615b0f1c3fd40c2f8069fe7a3d0d299c6729fc"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree de615b0f1c3fd40c2f8069fe7a3d0d299c6729fc\nparent c937ebf1cebbee47357434566b6deaa9eaa28fd9\nauthor stickies-v <stickies-v@protonmail.com> 1727274730 +0100\ncommitter stickies-v <stickies-v@protonmail.com> 1727690680 +0200\n\ntinyformat: force compile-time checks for format string literals\n\nCallsites such as bitcoin-cli that (incorrectly) fail compile-time\nvalidation can still use tfm::format_raw.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE5g/ggIZt5fccjfOgXLHObl5mp1cFAmb6d7gACgkQXLHObl5m\np1eCfQ/9F5j9wAc2qqx1g7c6wPdyyYCWFnYODKFfBGsp/PHKxVXZ8UEqdLh+f0yg\nGAEhAPmWL04WmjX3JBttl8GfdZeQ57yQubuyjBteNg8hd7sb1u+iC4uHK2ZAueLm\nrMpxWCNMAiXQwafF5iT974JbVbL6EH7xVo0sndlyfSxOk28Y64oSa3CjdI7VfMzl\nRk7AOPNInfjynk1URwSviRRz6k9hTXfvweT0fk1Ho55Y1Nejgzt2/VUNawV/5Tk5\nWr9raec0QWf4Qn5VFnWWsykGUXk3v06VeCro2YOwddcyUWHH9AgduHOf2L209MFy\nWykPJAib0aZwjOIu/z2FcbZmZD9PPPS4oBtlzHNXXZ1jR7MBPAJZDyDC84Nl56al\nuSRzUBd7g2w3LV1VgRkJ33KncgvltYeePbfWDSimSGOT/fuHysScS6YylLDKdRwz\nxuXsFHbQheFWVAW8CLl0V5QagsrItzwTzP3vICWqZvFco2MXz5mdy2ZiO0cDHjHB\nEu37TNY5tkXlQ9yWC5FMXJf6oWG7Y8feNKarTE1Jv3eik9e4Lqe6XWhwTmaZHImS\nNyXgjlE2PCIGnR6qU6abbP7au36+1HSvuwlyes+EkOYUl2UxvLVFbaylHuSNWx8+\nEdBL+Bo0YGgEsjjIyc5CKJVruWhR2uj+HAOzF/t7LS30WbKxDWY=\n=mlbg\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c937ebf1cebbee47357434566b6deaa9eaa28fd9",
          "sha": "c937ebf1cebbee47357434566b6deaa9eaa28fd9",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c937ebf1cebbee47357434566b6deaa9eaa28fd9"
        }
      ],
      "message": "tinyformat: force compile-time checks for format string literals\n\nCallsites such as bitcoin-cli that (incorrectly) fail compile-time\nvalidation can still use tfm::format_raw.",
      "committer": {
        "name": "stickies-v",
        "email": "stickies-v@protonmail.com",
        "date": "2024-09-30T10:04:40Z"
      },
      "author": {
        "name": "stickies-v",
        "email": "stickies-v@protonmail.com",
        "date": "2024-09-25T14:32:10Z"
      },
      "sha": "be7de807c8c9b2a3fc5da9f898511c70ae40b960"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDJlMzNkYmFkY2Y2OTgzOGM4ZWE1OTFkY2NkYzY2NmY4MDljMzEzNGE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2e33dbadcf69838c8ea591dccdc666f809c3134a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/2e33dbadcf69838c8ea591dccdc666f809c3134a",
      "tree": {
        "sha": "cd30896e27c3aca1b05b052a4ab2f35b24538fc7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cd30896e27c3aca1b05b052a4ab2f35b24538fc7"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree cd30896e27c3aca1b05b052a4ab2f35b24538fc7\nparent be7de807c8c9b2a3fc5da9f898511c70ae40b960\nauthor stickies-v <stickies-v@protonmail.com> 1727345508 +0100\ncommitter stickies-v <stickies-v@protonmail.com> 1727690692 +0200\n\ntinyformat: don't throw format string errors\n\nIn almost all cases, invalid format strings should not lead to crashing\nbehaviour, so suppress run-time format errors by returning the error as\na string instead of throwing a tinyformat::format_error.\n\nNote: most format string literals are partially validated at compile-time\nthrough util::ConstevalFormatString. Notably, bilingual_str format strings\ndo not have this compile-time validation.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE5g/ggIZt5fccjfOgXLHObl5mp1cFAmb6d8QACgkQXLHObl5m\np1dh+w//aeeOl8JdZY9IOughx/CdSzPg4KWy6XvzTg/jazfh4GKT+6t8x3rC/DmT\n5Yt+20kofOKC3t/bZZdYqFTjt+URxAxBzTsZXSDYkUjGJhvohu5or+wfgq0zfvFh\nu+/D52qmssKA4KdUd2PlGIacpyvIXQCUFT77JSdc3huoSdNlGpJXaAxgCc5CRj/N\nV1pfaeEkZb5nDJsdl+CENLmPB1k9QS31M0Ld/Mx0VYI88iDFARmy2ZKTtbmJMB7Q\n7+F5PKViPcZS4yWlJxH36yJgQXfulM2CzSLY3jwkXKanNQl5BWldBQcseOrSr6Yn\njJAo8pauji63e1h6mrwlccfLR8lzmVVT6av8LZHvnVM/uG7jaZ4VH+zQKPqSZI2D\nTdihkx1blSaY+UuWrCftOfcBpIxWTXva8VMB42hxmvqzEQWSS7dJoHza2BafMn2e\nnJQxb+HG/jUUcuPD0BcOFcGkNWADKp/S4Yqwx6PyEihex+V55Y84odwRL76OzyGF\ni4LhehBbknM3eS9OfW+QLcLz/upsPhp0tQFcq7/wMBJ1zTqZXC+ZtHAo9MD0Bp60\nFVX5aULpWRO9jsv6K5cOPx2ftVOj+L+aYVSuHceHaixoYEONVDj9j02Oon+ttHqJ\n2DQEJyE3fHpiUrrP6JADwr9yDBOyE47ZYo4pfUBFLL5Nt+MLaWU=\n=t4xF\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/be7de807c8c9b2a3fc5da9f898511c70ae40b960",
          "sha": "be7de807c8c9b2a3fc5da9f898511c70ae40b960",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/be7de807c8c9b2a3fc5da9f898511c70ae40b960"
        }
      ],
      "message": "tinyformat: don't throw format string errors\n\nIn almost all cases, invalid format strings should not lead to crashing\nbehaviour, so suppress run-time format errors by returning the error as\na string instead of throwing a tinyformat::format_error.\n\nNote: most format string literals are partially validated at compile-time\nthrough util::ConstevalFormatString. Notably, bilingual_str format strings\ndo not have this compile-time validation.",
      "committer": {
        "name": "stickies-v",
        "email": "stickies-v@protonmail.com",
        "date": "2024-09-30T10:04:52Z"
      },
      "author": {
        "name": "stickies-v",
        "email": "stickies-v@protonmail.com",
        "date": "2024-09-26T10:11:48Z"
      },
      "sha": "2e33dbadcf69838c8ea591dccdc666f809c3134a"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14453415113,
      "node_id": "HRFPE_lADOABII586XMRHuzwAAAANdfZzJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14453415113",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-30T10:19:48Z"
    },
    {
      "event": "commented",
      "id": 2382717634,
      "node_id": "IC_kwDOABII586OBWLC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2382717634",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-30T10:21:12Z",
      "updated_at": "2024-09-30T10:21:12Z",
      "author_association": "CONTRIBUTOR",
      "body": "Force-pushed to address two nits from @l0rinc - thanks for the review!",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#issuecomment-2382717634",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30928"
    },
    {
      "event": "mentioned",
      "id": 14453433768,
      "node_id": "MEE_lADOABII586XMRHuzwAAAANdfeWo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14453433768",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-30T10:21:14Z"
    },
    {
      "event": "subscribed",
      "id": 14453433790,
      "node_id": "SE_lADOABII586XMRHuzwAAAANdfeW-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14453433790",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-30T10:21:14Z"
    },
    {
      "event": "commented",
      "id": 2382746995,
      "node_id": "IC_kwDOABII586OBdVz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2382746995",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-30T10:35:54Z",
      "updated_at": "2024-09-30T10:35:54Z",
      "author_association": "MEMBER",
      "body": "Only changes are some minor style-only test-only fixups.\r\n\r\nre-ACK 2e33dbadcf69838c8ea591dccdc666f809c3134a 🔰\r\n\r\n<details><summary>Show signature</summary>\r\n\r\nSignature:\r\n\r\n```\r\nuntrusted comment: signature from minisign secret key on empty file; verify via: minisign -Vm \"${path_to_any_empty_file}\" -P RWTRmVTMeKV5noAMqVlsMugDDCyyTSbA3Re5AkUrhvLVln0tSaFWglOw -x \"${path_to_this_whole_four_line_signature_blob}\"\r\nRUTRmVTMeKV5npGrKx1nqXCw5zeVHdtdYURB/KlyA/LMFgpNCs+SkW9a8N95d+U4AP1RJMi+krxU1A3Yux4bpwZNLvVBKy0wLgM=\r\ntrusted comment: re-ACK 2e33dbadcf69838c8ea591dccdc666f809c3134a 🔰\r\nh0UdH750a2MwfQDDQ6yAM8tgC42014X4xvJwvJx2c8A+MKy2Ic1ul1lWUqsX8+xhu3EQRJWsZpa3GZbGzbsGCg==\r\n```\r\n\r\n</details>\r\n",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#issuecomment-2382746995",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30928"
    },
    {
      "event": "review_requested",
      "id": 14453633588,
      "node_id": "RRE_lADOABII586XMRHuzwAAAANdgPI0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14453633588",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-30T10:35:59Z",
      "requested_reviewer": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "reviewed",
      "id": 2337149494,
      "node_id": "PRR_kwDOABII586LThI2",
      "url": null,
      "actor": null,
      "commit_id": "2e33dbadcf69838c8ea591dccdc666f809c3134a",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#pullrequestreview-2337149494",
      "submitted_at": "2024-09-30T10:55:44Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1767001843",
      "pull_request_review_id": 2315829956,
      "id": 1767001843,
      "node_id": "PRRC_kwDOABII585pUk7z",
      "diff_hunk": "@@ -235,11 +235,27 @@ template <typename T1, size_t PREFIX_LEN>\n }\n } // namespace util\n \n+/**\n+ * Safer alternative to tfm::format that does not throw string\n+ * formatting errors at run-time.\n+ *\n+ * The `fmt` format string is partially checked at compile-time. At\n+ * run-time, if any `tinyformat::format_error` occurs, the error is caught\n+ * and the error message is returned instead, so the caller doesn't need\n+ * to handle the error.\n+ */\n namespace tinyformat {\n template <typename... Args>\n-std::string format(util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)\n+std::string try_format(util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)\n {\n-    return format(fmt.fmt, args...);\n+    std::string log_msg;\n+    try {\n+        log_msg = tfm::format(fmt.fmt, args...);\n+    } catch (tinyformat::format_error& fmterr) {\n+        /* Original format string will have newline so don't add one here */\n+        log_msg = \"Error \\\"\" + std::string{fmterr.what()} + \"\\\" while formatting log message: \\\"\" + fmt.fmt + \"\\\"\";\n+    }\n+    return log_msg;",
      "path": "src/util/string.h",
      "position": null,
      "original_position": 26,
      "commit_id": "2e33dbadcf69838c8ea591dccdc666f809c3134a",
      "original_commit_id": "bb9b55f51c4d611bd79e4e29d8cb0ede59e3e487",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Since we have simple, atomic instructions in both branches after which we immediately return, we might as well return directly:\r\n```suggestion\r\n    try {\r\n        return tfm::format(fmt.fmt, args...);\r\n    } catch (tinyformat::format_error& fmterr) {\r\n        /* Original format string will have newline so don't add one here */\r\n        return \"Error \\\"\"s + fmterr.what() + \"\\\" while formatting log message: \\\"\" + fmt.fmt + \"\\\"\";\r\n    }\r\n```\r\n\r\nNote: I've used `using namespace std::string_literals` to simplify `\"Error \\\"\"s + fmterr.what()` concat here.",
      "created_at": "2024-09-19T15:02:55Z",
      "updated_at": "2024-09-19T15:09:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#discussion_r1767001843",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1767001843"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
        }
      },
      "start_line": null,
      "original_start_line": 251,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 258,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1767007551",
      "pull_request_review_id": 2315839833,
      "id": 1767007551,
      "node_id": "PRRC_kwDOABII585pUmU_",
      "diff_hunk": "@@ -559,12 +559,8 @@ std::function<std::unique_ptr<Sock>(int, int, int)> CreateSock = CreateSockOS;\n template<typename... Args>\n static void LogConnectFailure(bool manual_connection, util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)\n {\n-    std::string error_message = tfm::format(fmt, args...);\n-    if (manual_connection) {\n-        LogPrintf(\"%s\\n\", error_message);\n-    } else {\n-        LogDebug(BCLog::NET, \"%s\\n\", error_message);\n-    }\n+    auto log_level{manual_connection ? BCLog::Level::Info : BCLog::Level::Debug};",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "2e33dbadcf69838c8ea591dccdc666f809c3134a",
      "original_commit_id": "ed4c60e38b78ab49af0212bee775ce34285e6d21",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not sure about the first commit. One is unconditionally logging and the other not. That is a pretty stark difference and would be better to leave on separate lines. In any case, this isn't a refactor, because you drop the trailing `\\n`, and it isn't needed for the changes here, so it may be best to drop the first commit.",
      "created_at": "2024-09-19T15:06:29Z",
      "updated_at": "2024-09-19T15:08:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#discussion_r1767007551",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1767007551"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 562,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1767009245",
      "pull_request_review_id": 2315829956,
      "id": 1767009245,
      "node_id": "PRRC_kwDOABII585pUmvd",
      "diff_hunk": "@@ -559,12 +559,8 @@ std::function<std::unique_ptr<Sock>(int, int, int)> CreateSock = CreateSockOS;\n template<typename... Args>\n static void LogConnectFailure(bool manual_connection, util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)\n {\n-    std::string error_message = tfm::format(fmt, args...);\n-    if (manual_connection) {\n-        LogPrintf(\"%s\\n\", error_message);\n-    } else {\n-        LogDebug(BCLog::NET, \"%s\\n\", error_message);\n-    }\n+    auto log_level{manual_connection ? BCLog::Level::Info : BCLog::Level::Debug};\n+    LogPrintLevel(BCLog::NET, log_level, fmt, args...);",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 11,
      "commit_id": "2e33dbadcf69838c8ea591dccdc666f809c3134a",
      "original_commit_id": "ed4c60e38b78ab49af0212bee775ce34285e6d21",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is the `LogFlags::NONE` -> `BCLog::NET` category in case of `manual_connection` a behavior change?",
      "created_at": "2024-09-19T15:07:37Z",
      "updated_at": "2024-09-19T15:09:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#discussion_r1767009245",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1767009245"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 563,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1767010840",
      "pull_request_review_id": 2315829956,
      "id": 1767010840,
      "node_id": "PRRC_kwDOABII585pUnIY",
      "diff_hunk": "@@ -83,4 +84,12 @@ BOOST_AUTO_TEST_CASE(ConstevalFormatString_NumSpec)\n     FailFmtWithError<1>(\"%1$\", err_term);\n }\n \n+BOOST_AUTO_TEST_CASE(tinyformat_try_format)\n+{\n+    // ensure invalid format strings don't throw at run-time",
      "path": "src/test/util_string_tests.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "2e33dbadcf69838c8ea591dccdc666f809c3134a",
      "original_commit_id": "bb9b55f51c4d611bd79e4e29d8cb0ede59e3e487",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: comment seems redundant here",
      "created_at": "2024-09-19T15:08:38Z",
      "updated_at": "2024-09-19T15:09:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#discussion_r1767010840",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1767010840"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 91,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1767048974",
      "pull_request_review_id": 2315908873,
      "id": 1767048974,
      "node_id": "PRRC_kwDOABII585pUwcO",
      "diff_hunk": "@@ -559,12 +559,8 @@ std::function<std::unique_ptr<Sock>(int, int, int)> CreateSock = CreateSockOS;\n template<typename... Args>\n static void LogConnectFailure(bool manual_connection, util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)\n {\n-    std::string error_message = tfm::format(fmt, args...);\n-    if (manual_connection) {\n-        LogPrintf(\"%s\\n\", error_message);\n-    } else {\n-        LogDebug(BCLog::NET, \"%s\\n\", error_message);\n-    }\n+    auto log_level{manual_connection ? BCLog::Level::Info : BCLog::Level::Debug};",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "2e33dbadcf69838c8ea591dccdc666f809c3134a",
      "original_commit_id": "ed4c60e38b78ab49af0212bee775ce34285e6d21",
      "in_reply_to_id": 1767007551,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks for pointing out the behaviour change, I've dropped the commit.",
      "created_at": "2024-09-19T15:33:20Z",
      "updated_at": "2024-09-19T15:33:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#discussion_r1767048974",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1767048974"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 562,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1767049495",
      "pull_request_review_id": 2315909671,
      "id": 1767049495,
      "node_id": "PRRC_kwDOABII585pUwkX",
      "diff_hunk": "@@ -235,11 +235,27 @@ template <typename T1, size_t PREFIX_LEN>\n }\n } // namespace util\n \n+/**\n+ * Safer alternative to tfm::format that does not throw string\n+ * formatting errors at run-time.\n+ *\n+ * The `fmt` format string is partially checked at compile-time. At\n+ * run-time, if any `tinyformat::format_error` occurs, the error is caught\n+ * and the error message is returned instead, so the caller doesn't need\n+ * to handle the error.\n+ */\n namespace tinyformat {\n template <typename... Args>\n-std::string format(util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)\n+std::string try_format(util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)\n {\n-    return format(fmt.fmt, args...);\n+    std::string log_msg;\n+    try {\n+        log_msg = tfm::format(fmt.fmt, args...);\n+    } catch (tinyformat::format_error& fmterr) {\n+        /* Original format string will have newline so don't add one here */\n+        log_msg = \"Error \\\"\" + std::string{fmterr.what()} + \"\\\" while formatting log message: \\\"\" + fmt.fmt + \"\\\"\";\n+    }\n+    return log_msg;",
      "path": "src/util/string.h",
      "position": null,
      "original_position": 26,
      "commit_id": "2e33dbadcf69838c8ea591dccdc666f809c3134a",
      "original_commit_id": "bb9b55f51c4d611bd79e4e29d8cb0ede59e3e487",
      "in_reply_to_id": 1767001843,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Taken (minus string literals), thanks!",
      "created_at": "2024-09-19T15:33:40Z",
      "updated_at": "2024-09-19T15:33:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#discussion_r1767049495",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1767049495"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
        }
      },
      "start_line": null,
      "original_start_line": 251,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 258,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1767050387",
      "pull_request_review_id": 2315911225,
      "id": 1767050387,
      "node_id": "PRRC_kwDOABII585pUwyT",
      "diff_hunk": "@@ -559,12 +559,8 @@ std::function<std::unique_ptr<Sock>(int, int, int)> CreateSock = CreateSockOS;\n template<typename... Args>\n static void LogConnectFailure(bool manual_connection, util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)\n {\n-    std::string error_message = tfm::format(fmt, args...);\n-    if (manual_connection) {\n-        LogPrintf(\"%s\\n\", error_message);\n-    } else {\n-        LogDebug(BCLog::NET, \"%s\\n\", error_message);\n-    }\n+    auto log_level{manual_connection ? BCLog::Level::Info : BCLog::Level::Debug};\n+    LogPrintLevel(BCLog::NET, log_level, fmt, args...);",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 11,
      "commit_id": "2e33dbadcf69838c8ea591dccdc666f809c3134a",
      "original_commit_id": "ed4c60e38b78ab49af0212bee775ce34285e6d21",
      "in_reply_to_id": 1767009245,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It is indeed, thanks for pointing it out. Resolved by dropping the first commit and applying a minimal diff to `netbase.cpp`.",
      "created_at": "2024-09-19T15:34:17Z",
      "updated_at": "2024-09-19T15:34:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#discussion_r1767050387",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1767050387"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 563,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1767054547",
      "pull_request_review_id": 2315918549,
      "id": 1767054547,
      "node_id": "PRRC_kwDOABII585pUxzT",
      "diff_hunk": "@@ -235,11 +235,25 @@ template <typename T1, size_t PREFIX_LEN>\n }\n } // namespace util\n \n+/**\n+ * Safer alternative to tfm::format that does not throw string\n+ * formatting errors at run-time.\n+ *\n+ * The `fmt` format string is partially checked at compile-time. At\n+ * run-time, if any `tinyformat::format_error` occurs, the error is caught\n+ * and the error message is returned instead, so the caller doesn't need\n+ * to handle the error.\n+ */\n namespace tinyformat {\n template <typename... Args>\n-std::string format(util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)\n+std::string try_format(util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)",
      "path": "src/util/string.h",
      "position": null,
      "original_position": 16,
      "commit_id": "2e33dbadcf69838c8ea591dccdc666f809c3134a",
      "original_commit_id": "6dc6e4583c02f0d21dffeb6b2c81358b49a1f340",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not sure about this. `tfm::format` is the only remaining function preventing the removal of `./test/lint/lint-format-strings.py`. I wanted to do this in a follow-up, but if this function is renamed, it will be harder, because all call sites will have to be renamed.\r\n\r\nMy preference would be to leave the name as-is and instead just delete the unchecked one, or rename that one to `format_maybe_throw` (or similar).\r\n\r\nIf you don't mind, it would be good to delete `./test/lint/lint-format-strings.py` in this pull request. Otherwise there will need to be another follow-up, or a possibly conflicting pull.",
      "created_at": "2024-09-19T15:37:15Z",
      "updated_at": "2024-09-19T15:37:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#discussion_r1767054547",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1767054547"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 249,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1767054801",
      "pull_request_review_id": 2315919001,
      "id": 1767054801,
      "node_id": "PRRC_kwDOABII585pUx3R",
      "diff_hunk": "@@ -83,4 +84,12 @@ BOOST_AUTO_TEST_CASE(ConstevalFormatString_NumSpec)\n     FailFmtWithError<1>(\"%1$\", err_term);\n }\n \n+BOOST_AUTO_TEST_CASE(tinyformat_try_format)\n+{\n+    // ensure invalid format strings don't throw at run-time",
      "path": "src/test/util_string_tests.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "2e33dbadcf69838c8ea591dccdc666f809c3134a",
      "original_commit_id": "bb9b55f51c4d611bd79e4e29d8cb0ede59e3e487",
      "in_reply_to_id": 1767010840,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't agree it's redundant:\r\n- it's not obvious from the tests that we're not just checking error messages, but that we're ensuring no errors are thrown, which is the difference with `tfm::format()`\r\n- additional tests to try_format may be added in the future that test other aspects, so this acts as a little delineator",
      "created_at": "2024-09-19T15:37:27Z",
      "updated_at": "2024-09-19T15:37:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#discussion_r1767054801",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1767054801"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 91,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1767355895",
      "pull_request_review_id": 2316354095,
      "id": 1767355895,
      "node_id": "PRRC_kwDOABII585pV7X3",
      "diff_hunk": "@@ -83,4 +84,12 @@ BOOST_AUTO_TEST_CASE(ConstevalFormatString_NumSpec)\n     FailFmtWithError<1>(\"%1$\", err_term);\n }\n \n+BOOST_AUTO_TEST_CASE(tinyformat_try_format)\n+{\n+    // ensure invalid format strings don't throw at run-time",
      "path": "src/test/util_string_tests.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "2e33dbadcf69838c8ea591dccdc666f809c3134a",
      "original_commit_id": "bb9b55f51c4d611bd79e4e29d8cb0ede59e3e487",
      "in_reply_to_id": 1767010840,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "thanks for clarifying",
      "created_at": "2024-09-19T17:54:20Z",
      "updated_at": "2024-09-19T17:54:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#discussion_r1767355895",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1767355895"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 91,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1768582575",
      "pull_request_review_id": 2318225165,
      "id": 1768582575,
      "node_id": "PRRC_kwDOABII585pam2v",
      "diff_hunk": "@@ -235,11 +235,25 @@ template <typename T1, size_t PREFIX_LEN>\n }\n } // namespace util\n \n+/**\n+ * Safer alternative to tfm::format that does not throw string\n+ * formatting errors at run-time.\n+ *\n+ * The `fmt` format string is partially checked at compile-time. At\n+ * run-time, if any `tinyformat::format_error` occurs, the error is caught\n+ * and the error message is returned instead, so the caller doesn't need\n+ * to handle the error.\n+ */\n namespace tinyformat {\n template <typename... Args>\n-std::string format(util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)\n+std::string try_format(util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)",
      "path": "src/util/string.h",
      "position": null,
      "original_position": 16,
      "commit_id": "2e33dbadcf69838c8ea591dccdc666f809c3134a",
      "original_commit_id": "6dc6e4583c02f0d21dffeb6b2c81358b49a1f340",
      "in_reply_to_id": 1767054547,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I renamed it to `try_format` to be clear about the different behaviour compared to `tfm::format`, but agreed that avoiding merge conflicts is useful to coordinate on.\r\n\r\n> My preference would be to leave the name as-is and instead just delete the unchecked one\r\n\r\nCould you elaborate on this a bit more? We have these 4 other `format` overloads, I don't think you want to just remove them all? At least 2) and 4) would imply touching quite a bit of code to refactor, and it seems not all call sites of `format` are currently constant expressions?\r\n\r\n1) `std::string format(const std::string &fmt, const Args&... args)`\r\n2) `std::string format(const char* fmt, const Args&... args)`\r\n3) `void format(std::ostream& out, const char* fmt, const Args&... args)`\r\n4) `bilingual_str format(const bilingual_str& fmt, const Args&... args)`",
      "created_at": "2024-09-20T13:03:16Z",
      "updated_at": "2024-09-20T13:03:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#discussion_r1768582575",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1768582575"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 249,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1768605114",
      "pull_request_review_id": 2318263560,
      "id": 1768605114,
      "node_id": "PRRC_kwDOABII585pasW6",
      "diff_hunk": "@@ -235,11 +235,25 @@ template <typename T1, size_t PREFIX_LEN>\n }\n } // namespace util\n \n+/**\n+ * Safer alternative to tfm::format that does not throw string\n+ * formatting errors at run-time.\n+ *\n+ * The `fmt` format string is partially checked at compile-time. At\n+ * run-time, if any `tinyformat::format_error` occurs, the error is caught\n+ * and the error message is returned instead, so the caller doesn't need\n+ * to handle the error.\n+ */\n namespace tinyformat {\n template <typename... Args>\n-std::string format(util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)\n+std::string try_format(util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)",
      "path": "src/util/string.h",
      "position": null,
      "original_position": 16,
      "commit_id": "2e33dbadcf69838c8ea591dccdc666f809c3134a",
      "original_commit_id": "6dc6e4583c02f0d21dffeb6b2c81358b49a1f340",
      "in_reply_to_id": 1767054547,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "IIUC the compiler will lookup `format(const char*, ...)` for `format(\"%s, 1)`, so `format(const char*, ...)` would have to be deleted for the compiler to pick `format(ConstevalFormatString, ...)`. (My recommendation for this pull would be to do at least this)\r\n\r\nIIUC the remaining `format` taking a `std::string` can be left as-is for now, as they are less common anyway than the ones taking a compile-time string literal. (Possibly something can be done for them as well, but it seems fine to leave them for a follow-up)\r\n\r\nIf there is a need for the throwing format, it seems less churn to add a `throwing_format` than to switch everything else to `try_format`.\r\n\r\nBut maybe I am missing something obvious?",
      "created_at": "2024-09-20T13:20:11Z",
      "updated_at": "2024-09-20T13:22:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#discussion_r1768605114",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1768605114"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 249,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1768664595",
      "pull_request_review_id": 2318355097,
      "id": 1768664595,
      "node_id": "PRRC_kwDOABII585pa64T",
      "diff_hunk": "@@ -235,11 +235,25 @@ template <typename T1, size_t PREFIX_LEN>\n }\n } // namespace util\n \n+/**\n+ * Safer alternative to tfm::format that does not throw string\n+ * formatting errors at run-time.\n+ *\n+ * The `fmt` format string is partially checked at compile-time. At\n+ * run-time, if any `tinyformat::format_error` occurs, the error is caught\n+ * and the error message is returned instead, so the caller doesn't need\n+ * to handle the error.\n+ */\n namespace tinyformat {\n template <typename... Args>\n-std::string format(util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)\n+std::string try_format(util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)",
      "path": "src/util/string.h",
      "position": null,
      "original_position": 16,
      "commit_id": "2e33dbadcf69838c8ea591dccdc666f809c3134a",
      "original_commit_id": "6dc6e4583c02f0d21dffeb6b2c81358b49a1f340",
      "in_reply_to_id": 1767054547,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> so `format(const char*, ...)` would have to be deleted for the compiler to pick `format(ConstevalFormatString, ...)`\r\n\r\nI think just deleting `format(const char*, ...)` leads to ambiguous overloading?\r\n\r\n```\r\n../../../../src/checkqueue.h:136:36: error: call to 'format' is ambiguous\r\n                util::ThreadRename(strprintf(\"scriptch.%i\", n));\r\n                                   ^~~~~~~~~\r\n../../../../src/tinyformat.h:1151:19: note: expanded from macro 'strprintf'\r\n#define strprintf tfm::format\r\n                  ^~~~~~~~~~~\r\n../../../../src/tinyformat.h:1140:13: note: candidate function [with Args = <int>]\r\nstd::string format(const std::string &fmt, const Args&... args)\r\n            ^\r\n../../../../src/util/string.h:249:13: note: candidate function [with Args = <int>]\r\nstd::string format(util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)\r\n```\r\n\r\n> IIUC the remaining `format` taking a `std::string` can be left as-is for now\r\n\r\nThat (and keeping the `bilingual_str` overload) would be my preference too, but you also asked to remove `./test/lint/lint-format-strings.py` in this pull which I think we shouldn't do before all `tfm::format` overloads are compile-time checked? So that's why I'm a bit confused.\r\n",
      "created_at": "2024-09-20T13:49:14Z",
      "updated_at": "2024-09-20T13:49:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#discussion_r1768664595",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1768664595"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 249,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1768680022",
      "pull_request_review_id": 2318379509,
      "id": 1768680022,
      "node_id": "PRRC_kwDOABII585pa-pW",
      "diff_hunk": "@@ -235,11 +235,25 @@ template <typename T1, size_t PREFIX_LEN>\n }\n } // namespace util\n \n+/**\n+ * Safer alternative to tfm::format that does not throw string\n+ * formatting errors at run-time.\n+ *\n+ * The `fmt` format string is partially checked at compile-time. At\n+ * run-time, if any `tinyformat::format_error` occurs, the error is caught\n+ * and the error message is returned instead, so the caller doesn't need\n+ * to handle the error.\n+ */\n namespace tinyformat {\n template <typename... Args>\n-std::string format(util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)\n+std::string try_format(util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)",
      "path": "src/util/string.h",
      "position": null,
      "original_position": 16,
      "commit_id": "2e33dbadcf69838c8ea591dccdc666f809c3134a",
      "original_commit_id": "6dc6e4583c02f0d21dffeb6b2c81358b49a1f340",
      "in_reply_to_id": 1767054547,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I think just deleting `format(const char*, ...)` leads to ambiguous overloading?\r\n\r\nThanks for actually checking. I guess this means that the `std::string` overload would have to be renamed to avoid the overload problem. Hopefully only the fuzz tests and a few lines in real code use the string overload?\r\n\r\n\r\n\r\n> you also asked to remove `./test/lint/lint-format-strings.py` in this pull which I think we shouldn't do before all `tfm::format` overloads are compile-time checked? So that's why I'm a bit confused.\r\n\r\nJup, something would have to be done to the `std::string` overloads. It should be possible and I can take a look at this later, however it hopefully shouldn't be a blocker for this pull request either way, if the (temporary?) rename isn't too involved. I just have the feeling that it is easier to rename the one taking `std::string`, than the one taking the consteval literal.\r\n\r\n",
      "created_at": "2024-09-20T13:57:31Z",
      "updated_at": "2024-09-20T13:58:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#discussion_r1768680022",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1768680022"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 249,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1773705825",
      "pull_request_review_id": 2325847851,
      "id": 1773705825,
      "node_id": "PRRC_kwDOABII585puJph",
      "diff_hunk": "@@ -235,11 +235,25 @@ template <typename T1, size_t PREFIX_LEN>\n }\n } // namespace util\n \n+/**\n+ * Safer alternative to tfm::format that does not throw string\n+ * formatting errors at run-time.\n+ *\n+ * The `fmt` format string is partially checked at compile-time. At\n+ * run-time, if any `tinyformat::format_error` occurs, the error is caught\n+ * and the error message is returned instead, so the caller doesn't need\n+ * to handle the error.\n+ */\n namespace tinyformat {\n template <typename... Args>\n-std::string format(util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)\n+std::string try_format(util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)",
      "path": "src/util/string.h",
      "position": null,
      "original_position": 16,
      "commit_id": "2e33dbadcf69838c8ea591dccdc666f809c3134a",
      "original_commit_id": "6dc6e4583c02f0d21dffeb6b2c81358b49a1f340",
      "in_reply_to_id": 1767054547,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hmm, so I took a look here and the following diff seems to compile (almost):\r\n\r\n\r\n<details><summary>a diff</summary>\r\n\r\n```diff\r\ndiff --git a/src/tinyformat.h b/src/tinyformat.h\r\nindex f536306375..079b0ccbff 100644\r\n--- a/src/tinyformat.h\r\n+++ b/src/tinyformat.h\r\n@@ -142,6 +142,7 @@ namespace tfm = tinyformat;\r\n //------------------------------------------------------------------------------\r\n // Implementation details.\r\n #include <algorithm>\r\n+#include <concepts> // Added for Bitcoin Core\r\n #include <iostream>\r\n #include <sstream>\r\n #include <stdexcept> // Added for Bitcoin Core\r\n@@ -1056,7 +1057,7 @@ inline void vformat(std::ostream& out, const char* fmt, FormatListRef list)\r\n \r\n /// Format list of arguments to the stream according to given format string.\r\n template<typename... Args>\r\n-void format(std::ostream& out, const char* fmt, const Args&... args)\r\n+void format_raw(std::ostream& out, const char* fmt, const Args&... args) // Renamed for Bitcoin Core\r\n {\r\n     vformat(out, fmt, makeFormatList(args...));\r\n }\r\n@@ -1064,24 +1065,24 @@ void format(std::ostream& out, const char* fmt, const Args&... args)\r\n /// Format list of arguments according to the given format string and return\r\n /// the result as a string.\r\n template<typename... Args>\r\n-std::string format(const char* fmt, const Args&... args)\r\n+std::string format_raw(const char* fmt, const Args&... args) // Renamed for Bitcoin Core\r\n {\r\n     std::ostringstream oss;\r\n-    format(oss, fmt, args...);\r\n+    format_raw(oss, fmt, args...);\r\n     return oss.str();\r\n }\r\n \r\n /// Format list of arguments to std::cout, according to the given format string\r\n template<typename... Args>\r\n-void printf(const char* fmt, const Args&... args)\r\n+void printf_raw(const char* fmt, const Args&... args) // Renamed for Bitcoin Core\r\n {\r\n-    format(std::cout, fmt, args...);\r\n+    format_raw(std::cout, fmt, args...);\r\n }\r\n \r\n template<typename... Args>\r\n-void printfln(const char* fmt, const Args&... args)\r\n+void printfln_raw(const char* fmt, const Args&... args) // Renamed for Bitcoin Core\r\n {\r\n-    format(std::cout, fmt, args...);\r\n+    format_raw(std::cout, fmt, args...);\r\n     std::cout << '\\n';\r\n }\r\n \r\n@@ -1146,11 +1147,12 @@ TINYFORMAT_FOREACH_ARGNUM(TINYFORMAT_MAKE_FORMAT_FUNCS)\r\n #endif\r\n \r\n // Added for Bitcoin Core\r\n-template<typename... Args>\r\n-std::string format(const std::string &fmt, const Args&... args)\r\n+template <typename String, typename... Args>\r\n+    requires std::same_as<String, std::string>\r\n+std::string format(const String& fmt, const Args&... args)\r\n {\r\n     std::ostringstream oss;\r\n-    format(oss, fmt.c_str(), args...);\r\n+    format_raw(oss, fmt.c_str(), args...);\r\n     return oss.str();\r\n }\r\n \r\n@@ -1160,4 +1162,6 @@ std::string format(const std::string &fmt, const Args&... args)\r\n /** Format arguments and return the string or write to given std::ostream (see tinyformat::format doc for details) */\r\n #define strprintf tfm::format\r\n \r\n+#include <util/string.h> // Added for Bitcoin Core\r\n+\r\n #endif // TINYFORMAT_H_INCLUDED\r\ndiff --git a/src/util/string.h b/src/util/string.h\r\nindex c5183d6c80..5a9b55602f 100644\r\n--- a/src/util/string.h\r\n+++ b/src/util/string.h\r\n@@ -239,7 +239,12 @@ namespace tinyformat {\r\n template <typename... Args>\r\n std::string format(util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)\r\n {\r\n-    return format(fmt.fmt, args...);\r\n+    return tfm::format_raw(fmt.fmt, args...);\r\n+}\r\n+template <typename... Args>\r\n+void format(std::ostream& out, util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)\r\n+{\r\n+    tfm::format_raw(out, fmt.fmt, args...);\r\n }\r\n } // namespace tinyformat\r\n \r\n```\r\n\r\n</details>\r\n\r\n\r\nThe problem is that `%*s` *are* actually used in bitcoin-cli. However, in an unspecified form (`%*s` can not be used after using positional specifiers). I am not sure if it is worth it to change the format strings, or to adjust the consteval parser. So an easy fix would be to just call the unchecked c-string functions in bitcoin-cli, which I think is fine.",
      "created_at": "2024-09-24T16:47:38Z",
      "updated_at": "2024-09-24T16:59:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#discussion_r1773705825",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1773705825"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 249,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1775276096",
      "pull_request_review_id": 2328340715,
      "id": 1775276096,
      "node_id": "PRRC_kwDOABII585p0JBA",
      "diff_hunk": "@@ -235,11 +235,25 @@ template <typename T1, size_t PREFIX_LEN>\n }\n } // namespace util\n \n+/**\n+ * Safer alternative to tfm::format that does not throw string\n+ * formatting errors at run-time.\n+ *\n+ * The `fmt` format string is partially checked at compile-time. At\n+ * run-time, if any `tinyformat::format_error` occurs, the error is caught\n+ * and the error message is returned instead, so the caller doesn't need\n+ * to handle the error.\n+ */\n namespace tinyformat {\n template <typename... Args>\n-std::string format(util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)\n+std::string try_format(util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)",
      "path": "src/util/string.h",
      "position": null,
      "original_position": 16,
      "commit_id": "2e33dbadcf69838c8ea591dccdc666f809c3134a",
      "original_commit_id": "6dc6e4583c02f0d21dffeb6b2c81358b49a1f340",
      "in_reply_to_id": 1767054547,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks for looking into this further! I was also exploring the concepts route, but hadn't yet resolved all concerns.\r\n\r\n1) Re naming: having `format` overloads with significantly differently behaviour (throwing vs non-throwing) didn't quite sit right with me, so I think your `format_raw` (or `format_throw`) suggestion is preferable, and I agree it makes more sense to rename the throwing variant instead of the non-throwing variant (although the downside is that it makes reviewing this PR less straightforward).\r\n2) forcing the `util::ConstevalFormatString` overload for all string literals either requires that:\r\n    a) all callsites include `util/string.h`\r\n    b) `tinyformat.h` includes `util/string.h` (as in your suggestion, although we should probably iwyu export it too), but this introduces a circular dependency\r\n    c) the `util::ConstevalFormatString` overloads are moved to `tinyformat.h`, so the `tinyformat.h` dependency in `util/string.h` can be removed.\r\n\r\nI think c) is the preferable approach. It adds more core-specific LoC to tinyformat but I think it is the cleanest overall?\r\n\r\n> So an easy fix would be to just call the unchecked c-string functions in bitcoin-cli, which I think is fine.\r\n\r\nI agree, ~~although I think I'll clean up the incorrect `bitcoin-cli` format strings here too since that seems like an easy win.~~",
      "created_at": "2024-09-25T13:51:15Z",
      "updated_at": "2024-09-26T12:12:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#discussion_r1775276096",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1775276096"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 249,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1775314729",
      "pull_request_review_id": 2328405792,
      "id": 1775314729,
      "node_id": "PRRC_kwDOABII585p0Scp",
      "diff_hunk": "@@ -235,11 +235,25 @@ template <typename T1, size_t PREFIX_LEN>\n }\n } // namespace util\n \n+/**\n+ * Safer alternative to tfm::format that does not throw string\n+ * formatting errors at run-time.\n+ *\n+ * The `fmt` format string is partially checked at compile-time. At\n+ * run-time, if any `tinyformat::format_error` occurs, the error is caught\n+ * and the error message is returned instead, so the caller doesn't need\n+ * to handle the error.\n+ */\n namespace tinyformat {\n template <typename... Args>\n-std::string format(util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)\n+std::string try_format(util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)",
      "path": "src/util/string.h",
      "position": null,
      "original_position": 16,
      "commit_id": "2e33dbadcf69838c8ea591dccdc666f809c3134a",
      "original_commit_id": "6dc6e4583c02f0d21dffeb6b2c81358b49a1f340",
      "in_reply_to_id": 1767054547,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I think c) is the preferable approach. It adds more core-specific LoC to tinyformat but I think it is the cleanest overall?\r\n\r\nYeah, probably. Maybe a large header `// === Everything below was added for Bitcoin Core ===` in the end and then appending the Bitcoin Core stuff would be cleaner than inlining every function into the existing header with a comment by itself.",
      "created_at": "2024-09-25T14:13:00Z",
      "updated_at": "2024-09-25T14:13:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#discussion_r1775314729",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1775314729"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 249,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1776938285",
      "pull_request_review_id": 2331026444,
      "id": 1776938285,
      "node_id": "PRRC_kwDOABII585p6e0t",
      "diff_hunk": "@@ -235,11 +235,25 @@ template <typename T1, size_t PREFIX_LEN>\n }\n } // namespace util\n \n+/**\n+ * Safer alternative to tfm::format that does not throw string\n+ * formatting errors at run-time.\n+ *\n+ * The `fmt` format string is partially checked at compile-time. At\n+ * run-time, if any `tinyformat::format_error` occurs, the error is caught\n+ * and the error message is returned instead, so the caller doesn't need\n+ * to handle the error.\n+ */\n namespace tinyformat {\n template <typename... Args>\n-std::string format(util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)\n+std::string try_format(util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)",
      "path": "src/util/string.h",
      "position": null,
      "original_position": 16,
      "commit_id": "2e33dbadcf69838c8ea591dccdc666f809c3134a",
      "original_commit_id": "6dc6e4583c02f0d21dffeb6b2c81358b49a1f340",
      "in_reply_to_id": 1767054547,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Latest force-push incorporates what we've discussed here, and goes one step further by removing the `const std::string&` overload entirely. I inspected the callsites and none of them seemed necessary to have the overload (see updated PR description), so this felt like the better way forward.",
      "created_at": "2024-09-26T12:13:05Z",
      "updated_at": "2024-09-26T12:13:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#discussion_r1776938285",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1776938285"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 249,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1776965132",
      "pull_request_review_id": 2331072265,
      "id": 1776965132,
      "node_id": "PRRC_kwDOABII585p6lYM",
      "diff_hunk": "@@ -1147,15 +1147,32 @@ TINYFORMAT_FOREACH_ARGNUM(TINYFORMAT_MAKE_FORMAT_FUNCS)\n #endif\n \n // Added for Bitcoin Core\n+/**\n+ * Safer alternative to tfm::format_raw that does not throw string\n+ * formatting errors at run-time.\n+ *\n+ * The `fmt` format string is partially checked at compile-time. At\n+ * run-time, if any `tfm::format_error` occurs, the error is caught and\n+ * the error message is returned instead, so the caller doesn't need to\n+ * handle the error.\n+ */\n template <typename... Args>\n std::string format(util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)\n {\n-    return format_raw(fmt.fmt, args...);\n+    try {\n+        return tfm::format_raw(fmt.fmt, args...);\n+    } catch (tinyformat::format_error& fmterr) {\n+        return \"Error \\\"\" + std::string{fmterr.what()} + \"\\\" while formatting log message: \\\"\" + fmt.fmt + \"\\\"\";\n+    }\n }\n template <typename... Args>\n void format(std::ostream& out, util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)\n {\n-    return format_raw(out, fmt.fmt, args...);\n+    try {\n+        tfm::format_raw(out, fmt.fmt, args...);\n+    } catch (tinyformat::format_error& fmterr) {\n+        out << \"Error \\\"\" + std::string{fmterr.what()} + \"\\\" while formatting log message: \\\"\" + fmt.fmt + \"\\\"\";",
      "path": "src/tinyformat.h",
      "position": null,
      "original_position": 30,
      "commit_id": "2e33dbadcf69838c8ea591dccdc666f809c3134a",
      "original_commit_id": "ed57f6ee02d5a6ada23abaea6e2176cd4f173e4f",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit in ed57f6ee02d5a6ada23abaea6e2176cd4f173e4f: Would be nice to do it in tinyformat itself, or not at all. ConstevalFormatString is already checked, so extremely unlikely to hit. However, translated strings (which are apparently unreviewed, see https://github.com/bitcoin/bitcoin/issues/30897) are left unchecked and may throw.\r\n\r\nIt would be good to validate and review the translated strings, or remove translations completely for now, but this is probably a separate issue.\r\n\r\nHere, it would be good to apply the try-catch to them.",
      "created_at": "2024-09-26T12:21:37Z",
      "updated_at": "2024-09-26T12:22:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#discussion_r1776965132",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1776965132"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1174,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1778429402",
      "pull_request_review_id": 2333415183,
      "id": 1778429402,
      "node_id": "PRRC_kwDOABII585qAK3a",
      "diff_hunk": "@@ -1147,15 +1147,32 @@ TINYFORMAT_FOREACH_ARGNUM(TINYFORMAT_MAKE_FORMAT_FUNCS)\n #endif\n \n // Added for Bitcoin Core\n+/**\n+ * Safer alternative to tfm::format_raw that does not throw string\n+ * formatting errors at run-time.\n+ *\n+ * The `fmt` format string is partially checked at compile-time. At\n+ * run-time, if any `tfm::format_error` occurs, the error is caught and\n+ * the error message is returned instead, so the caller doesn't need to\n+ * handle the error.\n+ */\n template <typename... Args>\n std::string format(util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)\n {\n-    return format_raw(fmt.fmt, args...);\n+    try {\n+        return tfm::format_raw(fmt.fmt, args...);\n+    } catch (tinyformat::format_error& fmterr) {\n+        return \"Error \\\"\" + std::string{fmterr.what()} + \"\\\" while formatting log message: \\\"\" + fmt.fmt + \"\\\"\";\n+    }\n }\n template <typename... Args>\n void format(std::ostream& out, util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)\n {\n-    return format_raw(out, fmt.fmt, args...);\n+    try {\n+        tfm::format_raw(out, fmt.fmt, args...);\n+    } catch (tinyformat::format_error& fmterr) {\n+        out << \"Error \\\"\" + std::string{fmterr.what()} + \"\\\" while formatting log message: \\\"\" + fmt.fmt + \"\\\"\";",
      "path": "src/tinyformat.h",
      "position": null,
      "original_position": 30,
      "commit_id": "2e33dbadcf69838c8ea591dccdc666f809c3134a",
      "original_commit_id": "ed57f6ee02d5a6ada23abaea6e2176cd4f173e4f",
      "in_reply_to_id": 1776965132,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I assumed the next step would be to validate the `bilingual_str` overload at compile-time too, but I've been looking at implementing that and with the run-time translation dependency (`QCoreApplication::translate`) it doesn't really seem feasible.\r\n\r\nI hadn't considered that translations can introduce format errors too, which makes the case for `bilingual_str` format errors not throwing ever stronger indeed. I was worried that blanket catching all formatting errors at the `tfm` level could be considered controversial so went for a throwing `format_raw` and non-throwing `format`, but perhaps just never having throwing behaviour makes for a more consistent and safer interface, so I'll move the try/catch to `tfm::vformat` now.",
      "created_at": "2024-09-27T10:51:01Z",
      "updated_at": "2024-09-27T10:51:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#discussion_r1778429402",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1778429402"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1174,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1778590253",
      "pull_request_review_id": 2333689157,
      "id": 1778590253,
      "node_id": "PRRC_kwDOABII585qAyIt",
      "diff_hunk": "@@ -64,7 +64,7 @@ void ImportDescriptors(CWallet& wallet, const std::string& seed_insecure)\n \n     for (const std::string& desc_fmt : DESCS) {\n         for (bool internal : {true, false}) {\n-            const auto descriptor{(strprintf)(desc_fmt.c_str(), \"[5aa9973a/66h/4h/2h]\" + seed_insecure, int{internal})};\n+            const auto descriptor{(tfm::format_raw)(desc_fmt.c_str(), \"[5aa9973a/66h/4h/2h]\" + seed_insecure, int{internal})};",
      "path": "src/wallet/test/fuzz/notifications.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "2e33dbadcf69838c8ea591dccdc666f809c3134a",
      "original_commit_id": "5d69f2d33b64a025d0b93b81558f2f51bd54b104",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit in 5d69f2d33b64a025d0b93b81558f2f51bd54b104: I think the `()` are no longer needed to silence the linter and can be removed: `{tfm::format_raw(desc_fmt.c_str(), ...}`",
      "created_at": "2024-09-27T13:01:42Z",
      "updated_at": "2024-09-27T13:07:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#discussion_r1778590253",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1778590253"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1778745490",
      "pull_request_review_id": 2333949830,
      "id": 1778745490,
      "node_id": "PRRC_kwDOABII585qBYCS",
      "diff_hunk": "@@ -64,7 +64,7 @@ void ImportDescriptors(CWallet& wallet, const std::string& seed_insecure)\n \n     for (const std::string& desc_fmt : DESCS) {\n         for (bool internal : {true, false}) {\n-            const auto descriptor{(strprintf)(desc_fmt.c_str(), \"[5aa9973a/66h/4h/2h]\" + seed_insecure, int{internal})};\n+            const auto descriptor{(tfm::format_raw)(desc_fmt.c_str(), \"[5aa9973a/66h/4h/2h]\" + seed_insecure, int{internal})};",
      "path": "src/wallet/test/fuzz/notifications.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "2e33dbadcf69838c8ea591dccdc666f809c3134a",
      "original_commit_id": "5d69f2d33b64a025d0b93b81558f2f51bd54b104",
      "in_reply_to_id": 1778590253,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah, I wasn't sure why that was. Fuzzer compiles and linter seems happy so updated, thanks!",
      "created_at": "2024-09-27T14:49:03Z",
      "updated_at": "2024-09-27T14:49:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#discussion_r1778745490",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1778745490"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1778754066",
      "pull_request_review_id": 2333963688,
      "id": 1778754066,
      "node_id": "PRRC_kwDOABII585qBaIS",
      "diff_hunk": "@@ -950,7 +950,9 @@ Strings and formatting\n \n   - Do not use it when passing strings to `tfm::format`, `strprintf`, `LogInfo`, `LogDebug`, etc.\n \n-    - *Rationale*: This is redundant. Tinyformat handles strings.\n+    - *Rationale*: Tinyformat handles string parameters. Format strings\n+      should be known at compile-time, so using a string literal or\n+      `constexpr const char*` allows for compile-time validation.",
      "path": "doc/developer-notes.md",
      "position": 7,
      "original_position": 7,
      "commit_id": "2e33dbadcf69838c8ea591dccdc666f809c3134a",
      "original_commit_id": "2d4f82d590845f9b2ea11bbcfe9377ef14df8775",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: we could avoid mentioning compile-time twice:\r\n```suggestion\r\n    - *Rationale*: Tinyformat handles string parameters.\r\n      Using a string literal or `constexpr const char*` ensures\r\n      format strings are validated at compile time.\r\n```",
      "created_at": "2024-09-27T14:55:31Z",
      "updated_at": "2024-09-27T16:37:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#discussion_r1778754066",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1778754066"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
        }
      },
      "start_line": 953,
      "original_start_line": 953,
      "start_side": "RIGHT",
      "line": 955,
      "original_line": 955,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1778758009",
      "pull_request_review_id": 2333963688,
      "id": 1778758009,
      "node_id": "PRRC_kwDOABII585qBbF5",
      "diff_hunk": "@@ -48,35 +48,32 @@ FUZZ_TARGET(str_printf)\n     //\n     // Upstream bug report: https://github.com/c42f/tinyformat/issues/70",
      "path": "src/test/fuzz/strprintf.cpp",
      "position": 2,
      "original_position": 2,
      "commit_id": "2e33dbadcf69838c8ea591dccdc666f809c3134a",
      "original_commit_id": "2d4f82d590845f9b2ea11bbcfe9377ef14df8775",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "is this bug still possible now? If it is, consider updating the `strprintf` example in the comment",
      "created_at": "2024-09-27T14:58:21Z",
      "updated_at": "2024-09-27T16:37:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#discussion_r1778758009",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1778758009"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 49,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1778767590",
      "pull_request_review_id": 2333963688,
      "id": 1778767590,
      "node_id": "PRRC_kwDOABII585qBdbm",
      "diff_hunk": "@@ -87,15 +87,17 @@ std::string LicenseInfo()\n {\n     const std::string URL_SOURCE_CODE = \"<https://github.com/bitcoin/bitcoin>\";\n \n-    return CopyrightHolders(strprintf(_(\"Copyright (C) %i-%i\").translated, 2009, COPYRIGHT_YEAR) + \" \") + \"\\n\" +\n+    return CopyrightHolders(strprintf(_(\"Copyright (C) %i-%i\"), 2009, COPYRIGHT_YEAR).translated + \" \") + \"\\n\" +",
      "path": "src/clientversion.cpp",
      "position": 14,
      "original_position": 14,
      "commit_id": "2e33dbadcf69838c8ea591dccdc666f809c3134a",
      "original_commit_id": "9b05c64dd0fe6c4babf815617a94b13fb5d19f3d",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm not sure I understand how this change is supposed to work.\r\n\r\n`\"Copyright (C) %i-%i\"` can be translated by checking the exact string from https://github.com/bitcoin/bitcoin/blob/master/src/qt/bitcoinstrings.cpp#L280, but how is `\"Copyright (C) 2009-2024\"` supposed to have a translated counterpart?",
      "created_at": "2024-09-27T15:05:56Z",
      "updated_at": "2024-09-27T16:38:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#discussion_r1778767590",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1778767590"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 90,
      "original_line": 90,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1778768954",
      "pull_request_review_id": 2333963688,
      "id": 1778768954,
      "node_id": "PRRC_kwDOABII585qBdw6",
      "diff_hunk": "@@ -178,9 +178,9 @@ class Scenario\n             size_t real_total = runner.txrequest.Count(peer);\n             size_t real_candidates = runner.txrequest.CountCandidates(peer);\n             size_t real_inflight = runner.txrequest.CountInFlight(peer);\n-            BOOST_CHECK_MESSAGE(real_total == total, strprintf(\"[\" + comment + \"] total %i (%i expected)\", real_total, total));",
      "path": "src/test/txrequest_tests.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "2e33dbadcf69838c8ea591dccdc666f809c3134a",
      "original_commit_id": "9b05c64dd0fe6c4babf815617a94b13fb5d19f3d",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "lol",
      "created_at": "2024-09-27T15:06:42Z",
      "updated_at": "2024-09-27T16:37:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#discussion_r1778768954",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1778768954"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 181,
      "original_line": 181,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1778776885",
      "pull_request_review_id": 2333963688,
      "id": 1778776885,
      "node_id": "PRRC_kwDOABII585qBfs1",
      "diff_hunk": "@@ -145,6 +145,7 @@ namespace tfm = tinyformat;\n #include <iostream>\n #include <sstream>\n #include <stdexcept> // Added for Bitcoin Core\n+#include <util/string.h> // Added for Bitcoin Core",
      "path": "src/tinyformat.h",
      "position": 4,
      "original_position": 4,
      "commit_id": "2e33dbadcf69838c8ea591dccdc666f809c3134a",
      "original_commit_id": "1f2d0ffd5669f51e4c5a2af14d255c394b2eda28",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "👍, should have been there all along",
      "created_at": "2024-09-27T15:10:59Z",
      "updated_at": "2024-09-27T16:37:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#discussion_r1778776885",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1778776885"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 148,
      "original_line": 148,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1778783288",
      "pull_request_review_id": 2333963688,
      "id": 1778783288,
      "node_id": "PRRC_kwDOABII585qBhQ4",
      "diff_hunk": "@@ -178,9 +178,9 @@ class Scenario\n             size_t real_total = runner.txrequest.Count(peer);\n             size_t real_candidates = runner.txrequest.CountCandidates(peer);\n             size_t real_inflight = runner.txrequest.CountInFlight(peer);\n-            BOOST_CHECK_MESSAGE(real_total == total, strprintf(\"[\" + comment + \"] total %i (%i expected)\", real_total, total));\n-            BOOST_CHECK_MESSAGE(real_inflight == inflight, strprintf(\"[\" + comment + \"] inflight %i (%i expected)\", real_inflight, inflight));\n-            BOOST_CHECK_MESSAGE(real_candidates == candidates, strprintf(\"[\" + comment + \"] candidates %i (%i expected)\", real_candidates, candidates));\n+            BOOST_CHECK_MESSAGE(real_total == total, strprintf(\"[%s] total %i (%i expected)\", comment, real_total, total));\n+            BOOST_CHECK_MESSAGE(real_inflight == inflight, strprintf(\"[%s] inflight %i (%i expected)\", comment, real_inflight, inflight));\n+            BOOST_CHECK_MESSAGE(real_candidates == candidates, strprintf(\"[%s] candidates %i (%i expected)\", comment, real_candidates, candidates));\n             BOOST_CHECK_MESSAGE(ret == expected, \"[\" + comment + \"] mismatching requestables\");",
      "path": "src/test/txrequest_tests.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "2e33dbadcf69838c8ea591dccdc666f809c3134a",
      "original_commit_id": "9b05c64dd0fe6c4babf815617a94b13fb5d19f3d",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "for consistency, consider using strprintf here as well:\r\n```suggestion\r\n            BOOST_CHECK_MESSAGE(ret == expected, strprintf(\"[%s] mismatching requestables\", comment\");\r\n```\r\n\r\n----\r\n\r\n\r\nWould be cool if we could use `BOOST_CHECK_EQUAL_COLLECTIONS` instead, but may not be trivial to do, haven't investigated in detail.",
      "created_at": "2024-09-27T15:14:23Z",
      "updated_at": "2024-09-27T16:37:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#discussion_r1778783288",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1778783288"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 184,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1778855186",
      "pull_request_review_id": 2333963688,
      "id": 1778855186,
      "node_id": "PRRC_kwDOABII585qBy0S",
      "diff_hunk": "@@ -83,4 +86,15 @@ BOOST_AUTO_TEST_CASE(ConstevalFormatString_NumSpec)\n     FailFmtWithError<1>(\"%1$\", err_term);\n }\n \n+BOOST_AUTO_TEST_CASE(tinyformat_ConstevalFormatString)",
      "path": "src/test/util_string_tests.cpp",
      "position": 18,
      "original_position": 18,
      "commit_id": "2e33dbadcf69838c8ea591dccdc666f809c3134a",
      "original_commit_id": "2d4f82d590845f9b2ea11bbcfe9377ef14df8775",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Unrelated:\r\njust realized that we should eventually add a test for `\"%1\"`, since `while ('0' <= *it && *it <= '9') {` can go beyond the string and passes accidentally - but seems to fail in tinyformat, see: https://godbolt.org/z/nbTKnrqch.\r\nAdded it in the patch, feel free to use it here, not worth adding a new PR for it",
      "created_at": "2024-09-27T16:05:48Z",
      "updated_at": "2024-09-28T15:07:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#discussion_r1778855186",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1778855186"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 89,
      "original_line": 89,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1778881563",
      "pull_request_review_id": 2333963688,
      "id": 1778881563,
      "node_id": "PRRC_kwDOABII585qB5Qb",
      "diff_hunk": "@@ -540,15 +540,15 @@ class NetinfoRequestHandler : public BaseRequestHandler\n         // Report detailed peer connections list sorted by direction and minimum ping time.\n         if (DetailsRequested() && !m_peers.empty()) {\n             std::sort(m_peers.begin(), m_peers.end());\n-            result += strprintf(\"<->   type   net  v  mping   ping send recv  txn  blk  hb %*s%*s%*s \",\n-                                m_max_addr_processed_length, \"addrp\",\n-                                m_max_addr_rate_limited_length, \"addrl\",\n-                                m_max_age_length, \"age\");\n+            result += tfm::format_raw(\"<->   type   net  v  mping   ping send recv  txn  blk  hb %*s%*s%*s \",",
      "path": "src/bitcoin-cli.cpp",
      "position": 8,
      "original_position": 8,
      "commit_id": "2e33dbadcf69838c8ea591dccdc666f809c3134a",
      "original_commit_id": "2d4f82d590845f9b2ea11bbcfe9377ef14df8775",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "we could avoid formatting these by adding something like:\r\n```C++\r\nif (*it == '*' || ((*it == '_' || *it == '-') && *std::next(it) == '*')) {\r\n    return; // We can't validate format string with %* or %_\r\n}\r\n```\r\nto `Detail_CheckNumFormatSpecifiers` , which would enable us using `tfm::format` here - maybe later we'll implement full validation, but this way at least everything before the `*` format is validated properly.",
      "created_at": "2024-09-27T16:29:18Z",
      "updated_at": "2024-09-27T16:37:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#discussion_r1778881563",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1778881563"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 543,
      "original_line": 543,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1778882137",
      "pull_request_review_id": 2333963688,
      "id": 1778882137,
      "node_id": "PRRC_kwDOABII585qB5ZZ",
      "diff_hunk": "@@ -83,4 +86,15 @@ BOOST_AUTO_TEST_CASE(ConstevalFormatString_NumSpec)\n     FailFmtWithError<1>(\"%1$\", err_term);\n }\n \n+BOOST_AUTO_TEST_CASE(tinyformat_ConstevalFormatString)\n+{\n+    // ensure invalid format strings don't throw at run-time",
      "path": "src/test/util_string_tests.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "2e33dbadcf69838c8ea591dccdc666f809c3134a",
      "original_commit_id": "2d4f82d590845f9b2ea11bbcfe9377ef14df8775",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit:\r\n```suggestion\r\n    // Ensure invalid format strings don't throw at run-time\r\n```",
      "created_at": "2024-09-27T16:29:53Z",
      "updated_at": "2024-09-27T16:37:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#discussion_r1778882137",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1778882137"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 91,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1778882653",
      "pull_request_review_id": 2333963688,
      "id": 1778882653,
      "node_id": "PRRC_kwDOABII585qB5hd",
      "diff_hunk": "@@ -83,4 +86,15 @@ BOOST_AUTO_TEST_CASE(ConstevalFormatString_NumSpec)\n     FailFmtWithError<1>(\"%1$\", err_term);\n }\n ",
      "path": "src/test/util_string_tests.cpp",
      "position": 17,
      "original_position": 17,
      "commit_id": "2e33dbadcf69838c8ea591dccdc666f809c3134a",
      "original_commit_id": "2d4f82d590845f9b2ea11bbcfe9377ef14df8775",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "We could add the examples from `bitcoin-cli` here:\r\n```C++\r\nBOOST_AUTO_TEST_CASE(ConstevalFormatString_SpecificUsageTests)\r\n{\r\n    PassFmt<6>(\"<->   type   net  v  mping   ping send recv  txn  blk  hb %*s%*s%*s \");\r\n    PassFmt<5>(\"%*s %-*s%s\\n\");\r\n    PassFmt<24>(\"%3s %6s %5s %2s%7s%7s%5s%5s%5s%5s  %2s %*s%*s%*s%*i %*s %-*s%s\\n\");\r\n    PassFmt<2>(\"                        ms     ms  sec  sec  min  min                %*s\\n\\n\");\r\n    PassFmt<4>(\"\\n%-*s    port %6i    score %6i\");\r\n    PassFmt<3>(\"%*s %s\\n\");\r\n}\r\n```",
      "created_at": "2024-09-27T16:30:26Z",
      "updated_at": "2024-09-28T19:07:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#discussion_r1778882653",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1778882653"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 88,
      "original_line": 88,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1778939114",
      "pull_request_review_id": 2334272928,
      "id": 1778939114,
      "node_id": "PRRC_kwDOABII585qCHTq",
      "diff_hunk": "@@ -87,15 +87,17 @@ std::string LicenseInfo()\n {\n     const std::string URL_SOURCE_CODE = \"<https://github.com/bitcoin/bitcoin>\";\n \n-    return CopyrightHolders(strprintf(_(\"Copyright (C) %i-%i\").translated, 2009, COPYRIGHT_YEAR) + \" \") + \"\\n\" +\n+    return CopyrightHolders(strprintf(_(\"Copyright (C) %i-%i\"), 2009, COPYRIGHT_YEAR).translated + \" \") + \"\\n\" +",
      "path": "src/clientversion.cpp",
      "position": 14,
      "original_position": 14,
      "commit_id": "2e33dbadcf69838c8ea591dccdc666f809c3134a",
      "original_commit_id": "9b05c64dd0fe6c4babf815617a94b13fb5d19f3d",
      "in_reply_to_id": 1778767590,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`\"Copyright (C) %i-%i\"` remains the translateable string both before and after this change. The only difference is that we use the `bilingual_str` `format` overload instead of the `const std::string&` one.",
      "created_at": "2024-09-27T17:27:58Z",
      "updated_at": "2024-09-27T17:27:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#discussion_r1778939114",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1778939114"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 90,
      "original_line": 90,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1779498782",
      "pull_request_review_id": 2335027573,
      "id": 1779498782,
      "node_id": "PRRC_kwDOABII585qEP8e",
      "diff_hunk": "@@ -540,15 +540,15 @@ class NetinfoRequestHandler : public BaseRequestHandler\n         // Report detailed peer connections list sorted by direction and minimum ping time.\n         if (DetailsRequested() && !m_peers.empty()) {\n             std::sort(m_peers.begin(), m_peers.end());\n-            result += strprintf(\"<->   type   net  v  mping   ping send recv  txn  blk  hb %*s%*s%*s \",\n-                                m_max_addr_processed_length, \"addrp\",\n-                                m_max_addr_rate_limited_length, \"addrl\",\n-                                m_max_age_length, \"age\");\n+            result += tfm::format_raw(\"<->   type   net  v  mping   ping send recv  txn  blk  hb %*s%*s%*s \",",
      "path": "src/bitcoin-cli.cpp",
      "position": 8,
      "original_position": 8,
      "commit_id": "2e33dbadcf69838c8ea591dccdc666f809c3134a",
      "original_commit_id": "2d4f82d590845f9b2ea11bbcfe9377ef14df8775",
      "in_reply_to_id": 1778881563,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I am not sure about \"partial validation\". Either the string is fully validated, or not at all. Prepending a valid string to an invalid string doesn't make it valid.",
      "created_at": "2024-09-28T14:25:44Z",
      "updated_at": "2024-09-28T14:25:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#discussion_r1779498782",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1779498782"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 543,
      "original_line": 543,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1779584565",
      "pull_request_review_id": 2335168505,
      "id": 1779584565,
      "node_id": "PRRC_kwDOABII585qEk41",
      "diff_hunk": "@@ -540,15 +540,15 @@ class NetinfoRequestHandler : public BaseRequestHandler\n         // Report detailed peer connections list sorted by direction and minimum ping time.\n         if (DetailsRequested() && !m_peers.empty()) {\n             std::sort(m_peers.begin(), m_peers.end());\n-            result += strprintf(\"<->   type   net  v  mping   ping send recv  txn  blk  hb %*s%*s%*s \",\n-                                m_max_addr_processed_length, \"addrp\",\n-                                m_max_addr_rate_limited_length, \"addrl\",\n-                                m_max_age_length, \"age\");\n+            result += tfm::format_raw(\"<->   type   net  v  mping   ping send recv  txn  blk  hb %*s%*s%*s \",",
      "path": "src/bitcoin-cli.cpp",
      "position": 8,
      "original_position": 8,
      "commit_id": "2e33dbadcf69838c8ea591dccdc666f809c3134a",
      "original_commit_id": "2d4f82d590845f9b2ea11bbcfe9377ef14df8775",
      "in_reply_to_id": 1778881563,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Weren't we already doing partial validation?\r\nDoing a full one for these examples wouldn't be *that* difficult - do you suggest we do that instead?\r\n\r\ne.g. something like:\r\n```C++\r\nif (*it == '*' || ((*it == '_' || *it == '-') && *std::next(it) == '*')) {\r\n    count_normal += 2; // width + value\r\n    it += 2;\r\n    continue;\r\n}\r\n```",
      "created_at": "2024-09-28T15:06:56Z",
      "updated_at": "2024-09-29T17:33:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#discussion_r1779584565",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1779584565"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 543,
      "original_line": 543,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1779656652",
      "pull_request_review_id": 2335288620,
      "id": 1779656652,
      "node_id": "PRRC_kwDOABII585qE2fM",
      "diff_hunk": "@@ -87,15 +87,17 @@ std::string LicenseInfo()\n {\n     const std::string URL_SOURCE_CODE = \"<https://github.com/bitcoin/bitcoin>\";\n \n-    return CopyrightHolders(strprintf(_(\"Copyright (C) %i-%i\").translated, 2009, COPYRIGHT_YEAR) + \" \") + \"\\n\" +\n+    return CopyrightHolders(strprintf(_(\"Copyright (C) %i-%i\"), 2009, COPYRIGHT_YEAR).translated + \" \") + \"\\n\" +",
      "path": "src/clientversion.cpp",
      "position": 14,
      "original_position": 14,
      "commit_id": "2e33dbadcf69838c8ea591dccdc666f809c3134a",
      "original_commit_id": "9b05c64dd0fe6c4babf815617a94b13fb5d19f3d",
      "in_reply_to_id": 1778767590,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Got it, thanks for clarifying!",
      "created_at": "2024-09-28T15:39:11Z",
      "updated_at": "2024-09-28T15:39:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#discussion_r1779656652",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1779656652"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 90,
      "original_line": 90,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1779666783",
      "pull_request_review_id": 2335308955,
      "id": 1779666783,
      "node_id": "PRRC_kwDOABII585qE49f",
      "diff_hunk": "@@ -540,15 +540,15 @@ class NetinfoRequestHandler : public BaseRequestHandler\n         // Report detailed peer connections list sorted by direction and minimum ping time.\n         if (DetailsRequested() && !m_peers.empty()) {\n             std::sort(m_peers.begin(), m_peers.end());\n-            result += strprintf(\"<->   type   net  v  mping   ping send recv  txn  blk  hb %*s%*s%*s \",\n-                                m_max_addr_processed_length, \"addrp\",\n-                                m_max_addr_rate_limited_length, \"addrl\",\n-                                m_max_age_length, \"age\");\n+            result += tfm::format_raw(\"<->   type   net  v  mping   ping send recv  txn  blk  hb %*s%*s%*s \",",
      "path": "src/bitcoin-cli.cpp",
      "position": 8,
      "original_position": 8,
      "commit_id": "2e33dbadcf69838c8ea591dccdc666f809c3134a",
      "original_commit_id": "2d4f82d590845f9b2ea11bbcfe9377ef14df8775",
      "in_reply_to_id": 1778881563,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Alternatively, if that's not desired, what if we replaced the dynamic widths with explicit `PadLeft`/`PadRight` calls, e.g.\r\n```C++\r\nresult += tfm::format(\"<->   type   net  v  mping   ping send recv  txn  blk  hb %s%s%s \",\r\n                      PadRight(\"addrp\", m_max_addr_processed_length),\r\n                      PadRight(\"addrl\", m_max_addr_rate_limited_length),\r\n                      PadRight(\"age\", m_max_age_length));\r\n ```\r\n and\r\n ```C++\r\n result += tfm::format(\"%s %s%s\\n\",\r\n                       PadLeft(\"id\", m_max_id_length),\r\n                       IsAddressSelected() ? PadRight(\"address\", m_max_addr_length) : \"\",\r\n                       IsVersionSelected() ? \"version\" : \"\");\r\n```\r\netc.\r\nI can provide either of these in a follow-up, if the reviewers think it's a good direction.\r\n\r\n<details>\r\n<summary>PadLeft/PadRight</summary>\r\n\r\n```C++\r\n[[nodiscard]] inline std::string PadLeft(const std::string_view& str, size_t width, const char pad = ' ')\r\n{\r\n    if (str.size() >= width) return std::string(str);\r\n    return std::string(width - str.size(), pad) + std::string(str);\r\n}\r\n\r\n[[nodiscard]] inline std::string PadRight(const std::string_view& str, size_t width, const char pad = ' ')\r\n{\r\n    if (str.size() >= width) return std::string(str);\r\n    return std::string(str) + std::string(width - str.size(), pad);\r\n}\r\n```\r\n\r\n</details>",
      "created_at": "2024-09-28T16:08:32Z",
      "updated_at": "2024-09-28T21:59:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#discussion_r1779666783",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1779666783"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 543,
      "original_line": 543,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1779720533",
      "pull_request_review_id": 2335380928,
      "id": 1779720533,
      "node_id": "PRRC_kwDOABII585qFGFV",
      "diff_hunk": "@@ -540,15 +540,15 @@ class NetinfoRequestHandler : public BaseRequestHandler\n         // Report detailed peer connections list sorted by direction and minimum ping time.\n         if (DetailsRequested() && !m_peers.empty()) {\n             std::sort(m_peers.begin(), m_peers.end());\n-            result += strprintf(\"<->   type   net  v  mping   ping send recv  txn  blk  hb %*s%*s%*s \",\n-                                m_max_addr_processed_length, \"addrp\",\n-                                m_max_addr_rate_limited_length, \"addrl\",\n-                                m_max_age_length, \"age\");\n+            result += tfm::format_raw(\"<->   type   net  v  mping   ping send recv  txn  blk  hb %*s%*s%*s \",\n+                                      m_max_addr_processed_length, \"addrp\",\n+                                      m_max_addr_rate_limited_length, \"addrl\",\n+                                      m_max_age_length, \"age\");\n             if (m_is_asmap_on) result += \" asmap \";\n-            result += strprintf(\"%*s %-*s%s\\n\", m_max_id_length, \"id\", IsAddressSelected() ? m_max_addr_length : 0, IsAddressSelected() ? \"address\" : \"\", IsVersionSelected() ? \"version\" : \"\");\n+            result += tfm::format_raw(\"%*s %-*s%s\\n\", m_max_id_length, \"id\", IsAddressSelected() ? m_max_addr_length : 0, IsAddressSelected() ? \"address\" : \"\", IsVersionSelected() ? \"version\" : \"\");\n             for (const Peer& peer : m_peers) {\n                 std::string version{ToString(peer.version) + peer.sub_version};\n-                result += strprintf(\n+                result += tfm::format_raw(",
      "path": "src/bitcoin-cli.cpp",
      "position": 18,
      "original_position": 18,
      "commit_id": "2e33dbadcf69838c8ea591dccdc666f809c3134a",
      "original_commit_id": "2d4f82d590845f9b2ea11bbcfe9377ef14df8775",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "do we need to keep the `strprintf(\"%s%s\"` on line 563?",
      "created_at": "2024-09-28T17:24:20Z",
      "updated_at": "2024-09-28T17:24:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#discussion_r1779720533",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1779720533"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 551,
      "original_line": 551,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1780117724",
      "pull_request_review_id": 2335929571,
      "id": 1780117724,
      "node_id": "PRRC_kwDOABII585qGnDc",
      "diff_hunk": "@@ -540,15 +540,15 @@ class NetinfoRequestHandler : public BaseRequestHandler\n         // Report detailed peer connections list sorted by direction and minimum ping time.\n         if (DetailsRequested() && !m_peers.empty()) {\n             std::sort(m_peers.begin(), m_peers.end());\n-            result += strprintf(\"<->   type   net  v  mping   ping send recv  txn  blk  hb %*s%*s%*s \",\n-                                m_max_addr_processed_length, \"addrp\",\n-                                m_max_addr_rate_limited_length, \"addrl\",\n-                                m_max_age_length, \"age\");\n+            result += tfm::format_raw(\"<->   type   net  v  mping   ping send recv  txn  blk  hb %*s%*s%*s \",",
      "path": "src/bitcoin-cli.cpp",
      "position": 8,
      "original_position": 8,
      "commit_id": "2e33dbadcf69838c8ea591dccdc666f809c3134a",
      "original_commit_id": "2d4f82d590845f9b2ea11bbcfe9377ef14df8775",
      "in_reply_to_id": 1778881563,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Extracted it to https://github.com/bitcoin/bitcoin/pull/30999/files#diff-71badc1cc71ba46244f7841a088251bb294265f4fe9e662c0ad6b15be540eee4R45",
      "created_at": "2024-09-29T18:55:05Z",
      "updated_at": "2024-09-29T18:55:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#discussion_r1780117724",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1780117724"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 543,
      "original_line": 543,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1780764321",
      "pull_request_review_id": 2336924626,
      "id": 1780764321,
      "node_id": "PRRC_kwDOABII585qJE6h",
      "diff_hunk": "@@ -178,9 +178,9 @@ class Scenario\n             size_t real_total = runner.txrequest.Count(peer);\n             size_t real_candidates = runner.txrequest.CountCandidates(peer);\n             size_t real_inflight = runner.txrequest.CountInFlight(peer);\n-            BOOST_CHECK_MESSAGE(real_total == total, strprintf(\"[\" + comment + \"] total %i (%i expected)\", real_total, total));\n-            BOOST_CHECK_MESSAGE(real_inflight == inflight, strprintf(\"[\" + comment + \"] inflight %i (%i expected)\", real_inflight, inflight));\n-            BOOST_CHECK_MESSAGE(real_candidates == candidates, strprintf(\"[\" + comment + \"] candidates %i (%i expected)\", real_candidates, candidates));\n+            BOOST_CHECK_MESSAGE(real_total == total, strprintf(\"[%s] total %i (%i expected)\", comment, real_total, total));\n+            BOOST_CHECK_MESSAGE(real_inflight == inflight, strprintf(\"[%s] inflight %i (%i expected)\", comment, real_inflight, inflight));\n+            BOOST_CHECK_MESSAGE(real_candidates == candidates, strprintf(\"[%s] candidates %i (%i expected)\", comment, real_candidates, candidates));\n             BOOST_CHECK_MESSAGE(ret == expected, \"[\" + comment + \"] mismatching requestables\");",
      "path": "src/test/txrequest_tests.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "2e33dbadcf69838c8ea591dccdc666f809c3134a",
      "original_commit_id": "9b05c64dd0fe6c4babf815617a94b13fb5d19f3d",
      "in_reply_to_id": 1778783288,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think `BOOST_TEST_CONTEXT` would simplify this whole block quite nicely (if we add left shift support to `GenTxid`), but it's out of scope for this PR so I'm going not going to push that here. I'll update l184 with a `strprintf` as per your suggestion.\r\n\r\n<details>\r\n<summary>git diff on 2d4f82d590</summary>\r\n\r\n```diff\r\ndiff --git a/src/test/txrequest_tests.cpp b/src/test/txrequest_tests.cpp\r\nindex a6c4a3613d..e70d9aa826 100644\r\n--- a/src/test/txrequest_tests.cpp\r\n+++ b/src/test/txrequest_tests.cpp\r\n@@ -164,7 +164,6 @@ public:\r\n         size_t completed, const std::string& checkname,\r\n         std::chrono::microseconds offset = std::chrono::microseconds{0})\r\n     {\r\n-        const auto comment = m_testname + \" \" + checkname;\r\n         auto& runner = m_runner;\r\n         const auto now = m_now;\r\n         assert(offset.count() <= 0);\r\n@@ -178,10 +177,12 @@ public:\r\n             size_t real_total = runner.txrequest.Count(peer);\r\n             size_t real_candidates = runner.txrequest.CountCandidates(peer);\r\n             size_t real_inflight = runner.txrequest.CountInFlight(peer);\r\n-            BOOST_CHECK_MESSAGE(real_total == total, strprintf(\"[%s] total %i (%i expected)\", comment, real_total, total));\r\n-            BOOST_CHECK_MESSAGE(real_inflight == inflight, strprintf(\"[%s] inflight %i (%i expected)\", comment, real_inflight, inflight));\r\n-            BOOST_CHECK_MESSAGE(real_candidates == candidates, strprintf(\"[%s] candidates %i (%i expected)\", comment, real_candidates, candidates));\r\n-            BOOST_CHECK_MESSAGE(ret == expected, \"[\" + comment + \"] mismatching requestables\");\r\n+            BOOST_TEST_CONTEXT(m_testname + \" \" + checkname) {\r\n+                BOOST_CHECK_EQUAL(real_total, total);\r\n+                BOOST_CHECK_EQUAL(real_inflight, inflight);\r\n+                BOOST_CHECK_EQUAL(real_candidates, candidates);\r\n+                BOOST_CHECK_EQUAL_COLLECTIONS(ret.begin(), red.end(), expected.begin(), expected.end());\r\n+            }\r\n         });\r\n     }\r\n \r\n\r\n```\r\n</details>\r\n\r\n",
      "created_at": "2024-09-30T09:41:03Z",
      "updated_at": "2024-09-30T09:42:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#discussion_r1780764321",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1780764321"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 184,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1780781699",
      "pull_request_review_id": 2336953648,
      "id": 1780781699,
      "node_id": "PRRC_kwDOABII585qJJKD",
      "diff_hunk": "@@ -950,7 +950,9 @@ Strings and formatting\n \n   - Do not use it when passing strings to `tfm::format`, `strprintf`, `LogInfo`, `LogDebug`, etc.\n \n-    - *Rationale*: This is redundant. Tinyformat handles strings.\n+    - *Rationale*: Tinyformat handles string parameters. Format strings\n+      should be known at compile-time, so using a string literal or\n+      `constexpr const char*` allows for compile-time validation.",
      "path": "doc/developer-notes.md",
      "position": 7,
      "original_position": 7,
      "commit_id": "2e33dbadcf69838c8ea591dccdc666f809c3134a",
      "original_commit_id": "2d4f82d590845f9b2ea11bbcfe9377ef14df8775",
      "in_reply_to_id": 1778754066,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't think this is an improvement, I find it less clear about the distinction between the compile-time format string and the run-time string parameters, so I'm going to leave this as is for now.",
      "created_at": "2024-09-30T09:53:39Z",
      "updated_at": "2024-09-30T09:57:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#discussion_r1780781699",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1780781699"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
        }
      },
      "start_line": 953,
      "original_start_line": 953,
      "start_side": "RIGHT",
      "line": 955,
      "original_line": 955,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1780784357",
      "pull_request_review_id": 2336957772,
      "id": 1780784357,
      "node_id": "PRRC_kwDOABII585qJJzl",
      "diff_hunk": "@@ -48,35 +48,32 @@ FUZZ_TARGET(str_printf)\n     //\n     // Upstream bug report: https://github.com/c42f/tinyformat/issues/70",
      "path": "src/test/fuzz/strprintf.cpp",
      "position": 2,
      "original_position": 2,
      "commit_id": "2e33dbadcf69838c8ea591dccdc666f809c3134a",
      "original_commit_id": "2d4f82d590845f9b2ea11bbcfe9377ef14df8775",
      "in_reply_to_id": 1778758009,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "That seems unrelated to this PR though?",
      "created_at": "2024-09-30T09:55:31Z",
      "updated_at": "2024-09-30T09:55:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#discussion_r1780784357",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1780784357"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 49,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1780791324",
      "pull_request_review_id": 2336969284,
      "id": 1780791324,
      "node_id": "PRRC_kwDOABII585qJLgc",
      "diff_hunk": "@@ -83,4 +86,15 @@ BOOST_AUTO_TEST_CASE(ConstevalFormatString_NumSpec)\n     FailFmtWithError<1>(\"%1$\", err_term);\n }\n \n+BOOST_AUTO_TEST_CASE(tinyformat_ConstevalFormatString)",
      "path": "src/test/util_string_tests.cpp",
      "position": 18,
      "original_position": 18,
      "commit_id": "2e33dbadcf69838c8ea591dccdc666f809c3134a",
      "original_commit_id": "2d4f82d590845f9b2ea11bbcfe9377ef14df8775",
      "in_reply_to_id": 1778855186,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Looks like this is already covered in #30999, resolving this.",
      "created_at": "2024-09-30T10:00:39Z",
      "updated_at": "2024-09-30T10:00:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#discussion_r1780791324",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1780791324"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 89,
      "original_line": 89,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1780792138",
      "pull_request_review_id": 2336970495,
      "id": 1780792138,
      "node_id": "PRRC_kwDOABII585qJLtK",
      "diff_hunk": "@@ -540,15 +540,15 @@ class NetinfoRequestHandler : public BaseRequestHandler\n         // Report detailed peer connections list sorted by direction and minimum ping time.\n         if (DetailsRequested() && !m_peers.empty()) {\n             std::sort(m_peers.begin(), m_peers.end());\n-            result += strprintf(\"<->   type   net  v  mping   ping send recv  txn  blk  hb %*s%*s%*s \",\n-                                m_max_addr_processed_length, \"addrp\",\n-                                m_max_addr_rate_limited_length, \"addrl\",\n-                                m_max_age_length, \"age\");\n+            result += tfm::format_raw(\"<->   type   net  v  mping   ping send recv  txn  blk  hb %*s%*s%*s \",",
      "path": "src/bitcoin-cli.cpp",
      "position": 8,
      "original_position": 8,
      "commit_id": "2e33dbadcf69838c8ea591dccdc666f809c3134a",
      "original_commit_id": "2d4f82d590845f9b2ea11bbcfe9377ef14df8775",
      "in_reply_to_id": 1778881563,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Resolving since it has its own PR now.",
      "created_at": "2024-09-30T10:01:12Z",
      "updated_at": "2024-09-30T10:01:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#discussion_r1780792138",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1780792138"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 543,
      "original_line": 543,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1780793262",
      "pull_request_review_id": 2336972396,
      "id": 1780793262,
      "node_id": "PRRC_kwDOABII585qJL-u",
      "diff_hunk": "@@ -540,15 +540,15 @@ class NetinfoRequestHandler : public BaseRequestHandler\n         // Report detailed peer connections list sorted by direction and minimum ping time.\n         if (DetailsRequested() && !m_peers.empty()) {\n             std::sort(m_peers.begin(), m_peers.end());\n-            result += strprintf(\"<->   type   net  v  mping   ping send recv  txn  blk  hb %*s%*s%*s \",\n-                                m_max_addr_processed_length, \"addrp\",\n-                                m_max_addr_rate_limited_length, \"addrl\",\n-                                m_max_age_length, \"age\");\n+            result += tfm::format_raw(\"<->   type   net  v  mping   ping send recv  txn  blk  hb %*s%*s%*s \",\n+                                      m_max_addr_processed_length, \"addrp\",\n+                                      m_max_addr_rate_limited_length, \"addrl\",\n+                                      m_max_age_length, \"age\");\n             if (m_is_asmap_on) result += \" asmap \";\n-            result += strprintf(\"%*s %-*s%s\\n\", m_max_id_length, \"id\", IsAddressSelected() ? m_max_addr_length : 0, IsAddressSelected() ? \"address\" : \"\", IsVersionSelected() ? \"version\" : \"\");\n+            result += tfm::format_raw(\"%*s %-*s%s\\n\", m_max_id_length, \"id\", IsAddressSelected() ? m_max_addr_length : 0, IsAddressSelected() ? \"address\" : \"\", IsVersionSelected() ? \"version\" : \"\");\n             for (const Peer& peer : m_peers) {\n                 std::string version{ToString(peer.version) + peer.sub_version};\n-                result += strprintf(\n+                result += tfm::format_raw(",
      "path": "src/bitcoin-cli.cpp",
      "position": 18,
      "original_position": 18,
      "commit_id": "2e33dbadcf69838c8ea591dccdc666f809c3134a",
      "original_commit_id": "2d4f82d590845f9b2ea11bbcfe9377ef14df8775",
      "in_reply_to_id": 1779720533,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I suppose we don't, but that seems unrelated to this PR so going to leave that as is.",
      "created_at": "2024-09-30T10:02:02Z",
      "updated_at": "2024-09-30T10:02:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#discussion_r1780793262",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1780793262"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 551,
      "original_line": 551,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1780796251",
      "pull_request_review_id": 2336976558,
      "id": 1780796251,
      "node_id": "PRRC_kwDOABII585qJMtb",
      "diff_hunk": "@@ -83,4 +86,15 @@ BOOST_AUTO_TEST_CASE(ConstevalFormatString_NumSpec)\n     FailFmtWithError<1>(\"%1$\", err_term);\n }\n ",
      "path": "src/test/util_string_tests.cpp",
      "position": 17,
      "original_position": 17,
      "commit_id": "2e33dbadcf69838c8ea591dccdc666f809c3134a",
      "original_commit_id": "2d4f82d590845f9b2ea11bbcfe9377ef14df8775",
      "in_reply_to_id": 1778882653,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Addressed in #30999, resolving.",
      "created_at": "2024-09-30T10:03:08Z",
      "updated_at": "2024-09-30T10:03:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#discussion_r1780796251",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1780796251"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 88,
      "original_line": 88,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1780827733",
      "pull_request_review_id": 2337027374,
      "id": 1780827733,
      "node_id": "PRRC_kwDOABII585qJUZV",
      "diff_hunk": "@@ -48,35 +48,32 @@ FUZZ_TARGET(str_printf)\n     //\n     // Upstream bug report: https://github.com/c42f/tinyformat/issues/70",
      "path": "src/test/fuzz/strprintf.cpp",
      "position": 2,
      "original_position": 2,
      "commit_id": "2e33dbadcf69838c8ea591dccdc666f809c3134a",
      "original_commit_id": "2d4f82d590845f9b2ea11bbcfe9377ef14df8775",
      "in_reply_to_id": 1778758009,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The comment states:\r\n```\r\n    // Avoid triggering the following crash bug:\r\n    // * strprintf(\"%.1s\", (char*)nullptr);\r\n```\r\nbut we're not calling `strprintf` directly anymore, hence my comment",
      "created_at": "2024-09-30T10:26:53Z",
      "updated_at": "2024-09-30T10:26:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#discussion_r1780827733",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1780827733"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 49,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1780832127",
      "pull_request_review_id": 2337034114,
      "id": 1780832127,
      "node_id": "PRRC_kwDOABII585qJVd_",
      "diff_hunk": "@@ -178,9 +178,9 @@ class Scenario\n             size_t real_total = runner.txrequest.Count(peer);\n             size_t real_candidates = runner.txrequest.CountCandidates(peer);\n             size_t real_inflight = runner.txrequest.CountInFlight(peer);\n-            BOOST_CHECK_MESSAGE(real_total == total, strprintf(\"[\" + comment + \"] total %i (%i expected)\", real_total, total));\n-            BOOST_CHECK_MESSAGE(real_inflight == inflight, strprintf(\"[\" + comment + \"] inflight %i (%i expected)\", real_inflight, inflight));\n-            BOOST_CHECK_MESSAGE(real_candidates == candidates, strprintf(\"[\" + comment + \"] candidates %i (%i expected)\", real_candidates, candidates));\n+            BOOST_CHECK_MESSAGE(real_total == total, strprintf(\"[%s] total %i (%i expected)\", comment, real_total, total));\n+            BOOST_CHECK_MESSAGE(real_inflight == inflight, strprintf(\"[%s] inflight %i (%i expected)\", comment, real_inflight, inflight));\n+            BOOST_CHECK_MESSAGE(real_candidates == candidates, strprintf(\"[%s] candidates %i (%i expected)\", comment, real_candidates, candidates));\n             BOOST_CHECK_MESSAGE(ret == expected, \"[\" + comment + \"] mismatching requestables\");",
      "path": "src/test/txrequest_tests.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "2e33dbadcf69838c8ea591dccdc666f809c3134a",
      "original_commit_id": "9b05c64dd0fe6c4babf815617a94b13fb5d19f3d",
      "in_reply_to_id": 1778783288,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "wasn't aware of `BOOST_TEST_CONTEXT`, would indeed be an improvement here",
      "created_at": "2024-09-30T10:30:18Z",
      "updated_at": "2024-09-30T10:30:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#discussion_r1780832127",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1780832127"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 184,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1780833680",
      "pull_request_review_id": 2337036569,
      "id": 1780833680,
      "node_id": "PRRC_kwDOABII585qJV2Q",
      "diff_hunk": "@@ -950,7 +950,9 @@ Strings and formatting\n \n   - Do not use it when passing strings to `tfm::format`, `strprintf`, `LogInfo`, `LogDebug`, etc.\n \n-    - *Rationale*: This is redundant. Tinyformat handles strings.\n+    - *Rationale*: Tinyformat handles string parameters. Format strings\n+      should be known at compile-time, so using a string literal or\n+      `constexpr const char*` allows for compile-time validation.",
      "path": "doc/developer-notes.md",
      "position": 7,
      "original_position": 7,
      "commit_id": "2e33dbadcf69838c8ea591dccdc666f809c3134a",
      "original_commit_id": "2d4f82d590845f9b2ea11bbcfe9377ef14df8775",
      "in_reply_to_id": 1778754066,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not sure why it's less clear than before, but it's just a nit from my part anyway",
      "created_at": "2024-09-30T10:31:31Z",
      "updated_at": "2024-09-30T10:31:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#discussion_r1780833680",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1780833680"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
        }
      },
      "start_line": 953,
      "original_start_line": 953,
      "start_side": "RIGHT",
      "line": 955,
      "original_line": 955,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1780834719",
      "pull_request_review_id": 2337038315,
      "id": 1780834719,
      "node_id": "PRRC_kwDOABII585qJWGf",
      "diff_hunk": "@@ -48,35 +48,32 @@ FUZZ_TARGET(str_printf)\n     //\n     // Upstream bug report: https://github.com/c42f/tinyformat/issues/70",
      "path": "src/test/fuzz/strprintf.cpp",
      "position": 2,
      "original_position": 2,
      "commit_id": "2e33dbadcf69838c8ea591dccdc666f809c3134a",
      "original_commit_id": "2d4f82d590845f9b2ea11bbcfe9377ef14df8775",
      "in_reply_to_id": 1778758009,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> but we're not calling `strprintf` directly anymore, hence my comment\r\n\r\n`strprintf` is an alias for `tfm::format`, introduced by and for Bitcoin Core. This pull request does not touch the alias and does not change it. It exists before an after this pull request.",
      "created_at": "2024-09-30T10:32:24Z",
      "updated_at": "2024-09-30T10:32:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#discussion_r1780834719",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1780834719"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 49,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1780837147",
      "pull_request_review_id": 2337042440,
      "id": 1780837147,
      "node_id": "PRRC_kwDOABII585qJWsb",
      "diff_hunk": "@@ -540,15 +540,15 @@ class NetinfoRequestHandler : public BaseRequestHandler\n         // Report detailed peer connections list sorted by direction and minimum ping time.\n         if (DetailsRequested() && !m_peers.empty()) {\n             std::sort(m_peers.begin(), m_peers.end());\n-            result += strprintf(\"<->   type   net  v  mping   ping send recv  txn  blk  hb %*s%*s%*s \",\n-                                m_max_addr_processed_length, \"addrp\",\n-                                m_max_addr_rate_limited_length, \"addrl\",\n-                                m_max_age_length, \"age\");\n+            result += tfm::format_raw(\"<->   type   net  v  mping   ping send recv  txn  blk  hb %*s%*s%*s \",\n+                                      m_max_addr_processed_length, \"addrp\",\n+                                      m_max_addr_rate_limited_length, \"addrl\",\n+                                      m_max_age_length, \"age\");\n             if (m_is_asmap_on) result += \" asmap \";\n-            result += strprintf(\"%*s %-*s%s\\n\", m_max_id_length, \"id\", IsAddressSelected() ? m_max_addr_length : 0, IsAddressSelected() ? \"address\" : \"\", IsVersionSelected() ? \"version\" : \"\");\n+            result += tfm::format_raw(\"%*s %-*s%s\\n\", m_max_id_length, \"id\", IsAddressSelected() ? m_max_addr_length : 0, IsAddressSelected() ? \"address\" : \"\", IsVersionSelected() ? \"version\" : \"\");\n             for (const Peer& peer : m_peers) {\n                 std::string version{ToString(peer.version) + peer.sub_version};\n-                result += strprintf(\n+                result += tfm::format_raw(",
      "path": "src/bitcoin-cli.cpp",
      "position": 18,
      "original_position": 18,
      "commit_id": "2e33dbadcf69838c8ea591dccdc666f809c3134a",
      "original_commit_id": "2d4f82d590845f9b2ea11bbcfe9377ef14df8775",
      "in_reply_to_id": 1779720533,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can you expand on that? We've changed other `strprintf` instance here to enable compile-time validation, how come this one didn't make the cut?",
      "created_at": "2024-09-30T10:34:23Z",
      "updated_at": "2024-09-30T10:34:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#discussion_r1780837147",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1780837147"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 551,
      "original_line": 551,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1780838413",
      "pull_request_review_id": 2337044589,
      "id": 1780838413,
      "node_id": "PRRC_kwDOABII585qJXAN",
      "diff_hunk": "@@ -48,35 +48,32 @@ FUZZ_TARGET(str_printf)\n     //\n     // Upstream bug report: https://github.com/c42f/tinyformat/issues/70",
      "path": "src/test/fuzz/strprintf.cpp",
      "position": 2,
      "original_position": 2,
      "commit_id": "2e33dbadcf69838c8ea591dccdc666f809c3134a",
      "original_commit_id": "2d4f82d590845f9b2ea11bbcfe9377ef14df8775",
      "in_reply_to_id": 1778758009,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ok, it's not that important",
      "created_at": "2024-09-30T10:35:30Z",
      "updated_at": "2024-09-30T10:35:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#discussion_r1780838413",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1780838413"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 49,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1780845253",
      "pull_request_review_id": 2337055952,
      "id": 1780845253,
      "node_id": "PRRC_kwDOABII585qJYrF",
      "diff_hunk": "@@ -540,15 +540,15 @@ class NetinfoRequestHandler : public BaseRequestHandler\n         // Report detailed peer connections list sorted by direction and minimum ping time.\n         if (DetailsRequested() && !m_peers.empty()) {\n             std::sort(m_peers.begin(), m_peers.end());\n-            result += strprintf(\"<->   type   net  v  mping   ping send recv  txn  blk  hb %*s%*s%*s \",\n-                                m_max_addr_processed_length, \"addrp\",\n-                                m_max_addr_rate_limited_length, \"addrl\",\n-                                m_max_age_length, \"age\");\n+            result += tfm::format_raw(\"<->   type   net  v  mping   ping send recv  txn  blk  hb %*s%*s%*s \",\n+                                      m_max_addr_processed_length, \"addrp\",\n+                                      m_max_addr_rate_limited_length, \"addrl\",\n+                                      m_max_age_length, \"age\");\n             if (m_is_asmap_on) result += \" asmap \";\n-            result += strprintf(\"%*s %-*s%s\\n\", m_max_id_length, \"id\", IsAddressSelected() ? m_max_addr_length : 0, IsAddressSelected() ? \"address\" : \"\", IsVersionSelected() ? \"version\" : \"\");\n+            result += tfm::format_raw(\"%*s %-*s%s\\n\", m_max_id_length, \"id\", IsAddressSelected() ? m_max_addr_length : 0, IsAddressSelected() ? \"address\" : \"\", IsVersionSelected() ? \"version\" : \"\");\n             for (const Peer& peer : m_peers) {\n                 std::string version{ToString(peer.version) + peer.sub_version};\n-                result += strprintf(\n+                result += tfm::format_raw(",
      "path": "src/bitcoin-cli.cpp",
      "position": 18,
      "original_position": 18,
      "commit_id": "2e33dbadcf69838c8ea591dccdc666f809c3134a",
      "original_commit_id": "2d4f82d590845f9b2ea11bbcfe9377ef14df8775",
      "in_reply_to_id": 1779720533,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hmm, then I don't think I understand what you mean. Would you be able to provide a diff/example?",
      "created_at": "2024-09-30T10:37:38Z",
      "updated_at": "2024-09-30T10:37:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#discussion_r1780845253",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1780845253"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 551,
      "original_line": 551,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1780895517",
      "pull_request_review_id": 2337149494,
      "id": 1780895517,
      "node_id": "PRRC_kwDOABII585qJk8d",
      "diff_hunk": "@@ -1049,7 +1049,12 @@ TINYFORMAT_FOREACH_ARGNUM(TINYFORMAT_MAKE_MAKEFORMATLIST)\n /// list of format arguments is held in a single function argument.\n inline void vformat(std::ostream& out, const char* fmt, FormatListRef list)\n {\n-    detail::formatImpl(out, fmt, list.m_args, list.m_N);\n+    // Modified for Bitcoin Core to not throw for formatting errors\n+    try {\n+        detail::formatImpl(out, fmt, list.m_args, list.m_N);\n+    } catch (tinyformat::format_error& fmterr) {\n+        out << \"Error \\\"\" + std::string{fmterr.what()} + \"\\\" while formatting log message: \\\"\" + fmt + \"\\\"\";",
      "path": "src/tinyformat.h",
      "position": 9,
      "original_position": 9,
      "commit_id": "2e33dbadcf69838c8ea591dccdc666f809c3134a",
      "original_commit_id": "2e33dbadcf69838c8ea591dccdc666f809c3134a",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "last commit: Not that it matters, but my preference would be to not change behavior here and keep the previous formatting. If `fmt` has a trailing newline, it would be \"removed\" by this patch.",
      "created_at": "2024-09-30T10:55:44Z",
      "updated_at": "2024-09-30T10:55:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#discussion_r1780895517",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1780895517"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1056,
      "original_line": 1056,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1780898391",
      "pull_request_review_id": 2337154148,
      "id": 1780898391,
      "node_id": "PRRC_kwDOABII585qJlpX",
      "diff_hunk": "@@ -540,15 +540,15 @@ class NetinfoRequestHandler : public BaseRequestHandler\n         // Report detailed peer connections list sorted by direction and minimum ping time.\n         if (DetailsRequested() && !m_peers.empty()) {\n             std::sort(m_peers.begin(), m_peers.end());\n-            result += strprintf(\"<->   type   net  v  mping   ping send recv  txn  blk  hb %*s%*s%*s \",\n-                                m_max_addr_processed_length, \"addrp\",\n-                                m_max_addr_rate_limited_length, \"addrl\",\n-                                m_max_age_length, \"age\");\n+            result += tfm::format_raw(\"<->   type   net  v  mping   ping send recv  txn  blk  hb %*s%*s%*s \",\n+                                      m_max_addr_processed_length, \"addrp\",\n+                                      m_max_addr_rate_limited_length, \"addrl\",\n+                                      m_max_age_length, \"age\");\n             if (m_is_asmap_on) result += \" asmap \";\n-            result += strprintf(\"%*s %-*s%s\\n\", m_max_id_length, \"id\", IsAddressSelected() ? m_max_addr_length : 0, IsAddressSelected() ? \"address\" : \"\", IsVersionSelected() ? \"version\" : \"\");\n+            result += tfm::format_raw(\"%*s %-*s%s\\n\", m_max_id_length, \"id\", IsAddressSelected() ? m_max_addr_length : 0, IsAddressSelected() ? \"address\" : \"\", IsVersionSelected() ? \"version\" : \"\");\n             for (const Peer& peer : m_peers) {\n                 std::string version{ToString(peer.version) + peer.sub_version};\n-                result += strprintf(\n+                result += tfm::format_raw(",
      "path": "src/bitcoin-cli.cpp",
      "position": 18,
      "original_position": 18,
      "commit_id": "2e33dbadcf69838c8ea591dccdc666f809c3134a",
      "original_commit_id": "2d4f82d590845f9b2ea11bbcfe9377ef14df8775",
      "in_reply_to_id": 1779720533,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "My mistake, rereading it it's not clear what I was asking.\r\nSo I think we could simplify the nested formats by pulling up the internal pattern:\r\nHaving `%2s` in the main pattern and having a `%s%s` inside could be simplified to having `%s%s` at the parent and expand values in the parameters:\r\n```patch\r\nIndex: src/bitcoin-cli.cpp\r\n<+>UTF-8\r\n===================================================================\r\ndiff --git a/src/bitcoin-cli.cpp b/src/bitcoin-cli.cpp\r\n--- a/src/bitcoin-cli.cpp\t(revision 2e33dbadcf69838c8ea591dccdc666f809c3134a)\r\n+++ b/src/bitcoin-cli.cpp\t(date 1727693490146)\r\n@@ -549,7 +549,7 @@\r\n             for (const Peer& peer : m_peers) {\r\n                 std::string version{ToString(peer.version) + peer.sub_version};\r\n                 result += tfm::format_raw(\r\n-                    \"%3s %6s %5s %2s%7s%7s%5s%5s%5s%5s  %2s %*s%*s%*s%*i %*s %-*s%s\\n\",\r\n+                    \"%3s %6s %5s %2s%7s%7s%5s%5s%5s%5s  %s%s %*s%*s%*s%*i %*s %-*s%s\\n\",\r\n                     peer.is_outbound ? \"out\" : \"in\",\r\n                     ConnectionTypeForNetinfo(peer.conn_type),\r\n                     peer.network,\r\n@@ -560,7 +560,8 @@\r\n                     peer.last_recv ? ToString(time_now - peer.last_recv) : \"\",\r\n                     peer.last_trxn ? ToString((time_now - peer.last_trxn) / 60) : peer.is_tx_relay ? \"\" : \"*\",\r\n                     peer.last_blck ? ToString((time_now - peer.last_blck) / 60) : \"\",\r\n-                    strprintf(\"%s%s\", peer.is_bip152_hb_to ? \".\" : \" \", peer.is_bip152_hb_from ? \"*\" : \" \"),\r\n+                    peer.is_bip152_hb_to ? \".\" : \" \",\r\n+                    peer.is_bip152_hb_from ? \"*\" : \" \",\r\n                     m_max_addr_processed_length, // variable spacing\r\n                     peer.addr_processed ? ToString(peer.addr_processed) : peer.is_addr_relay_enabled ? \"\" : \".\",\r\n                     m_max_addr_rate_limited_length, // variable spacing\r\nIndex: src/test/util_string_tests.cpp\r\n<+>UTF-8\r\n===================================================================\r\ndiff --git a/src/test/util_string_tests.cpp b/src/test/util_string_tests.cpp\r\n--- a/src/test/util_string_tests.cpp\t(revision 2e33dbadcf69838c8ea591dccdc666f809c3134a)\r\n+++ b/src/test/util_string_tests.cpp\t(date 1727693570815)\r\n@@ -96,5 +96,10 @@\r\n     BOOST_CHECK_EQUAL(oss.str(), R\"(Error \"tinyformat: Too many conversion specifiers in format string\" while formatting log message: \"%.*f\")\");\r\n }\r\n \r\n+BOOST_AUTO_TEST_CASE(TwoCharFormattingTest)\r\n+{\r\n+    BOOST_CHECK_EQUAL(tfm::format(\"%2s\", strprintf(\"%s%s\", \".\", \"*\")),\r\n+                      tfm::format(\"%s%s\", \".\", \"*\"));\r\n+}\r\n \r\n BOOST_AUTO_TEST_SUITE_END()\r\n```\r\n\r\n(the dummy test was added just to make sure we're doing it correctly, I don't think it should be committed)",
      "created_at": "2024-09-30T10:58:07Z",
      "updated_at": "2024-09-30T10:58:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30928#discussion_r1780898391",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1780898391"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30928"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 551,
      "original_line": 551,
      "side": "RIGHT"
    }
  ]
}