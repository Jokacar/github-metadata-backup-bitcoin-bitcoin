{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077",
    "id": 371583398,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzcxNTgzMzk4",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18077",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/18077.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/18077.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
    "number": 18077,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "net: Add NAT-PMP port forwarding support",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Close #11902\r\nThis PR is an alternative to:\r\n- #12288\r\n- #15717\r\n\r\nTo compile with NAT-PMP support on Ubuntu [`libnatpmp-dev`](https://packages.ubuntu.com/source/bionic/libnatpmp) should be available.\r\n\r\nLog excerpt:\r\n```\r\n2020-02-05T20:12:28Z [mapport] NAT-PMP: public address = 95.164.65.194\r\n2020-02-05T20:12:28Z [mapport] AddLocal(95.164.65.194:18333,3)\r\n2020-02-05T20:12:28Z [mapport] NAT-PMP: port mapping successful.\r\n```\r\n\r\nSee: [`libnatpmp`](https://miniupnp.tuxfamily.org/libnatpmp.html)\r\n\r\n---\r\n\r\nSome follow-ups are out of this PR's scope:\r\n- mention NAT-PMP library in the version message\r\n- ~integrate NAT-PMP into the GUI~ (already [added](https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-589405068))",
    "labels": [
      {
        "id": 98298007,
        "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
        "name": "P2P",
        "color": "006b75",
        "default": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/47",
      "html_url": "https://github.com/bitcoin/bitcoin/milestone/47",
      "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/47/labels",
      "id": 5347322,
      "node_id": "MDk6TWlsZXN0b25lNTM0NzMyMg==",
      "number": 47,
      "state": "closed",
      "title": "22.0",
      "description": "",
      "creator": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 124,
      "created_at": "2020-04-25T00:14:49Z",
      "updated_at": "2021-09-14T07:16:53Z",
      "closed_at": "2021-09-09T12:47:52Z"
    },
    "active_lock_reason": "resolved",
    "created_at": "2020-02-05T21:02:12Z",
    "updated_at": "2022-08-16T17:11:57Z",
    "closed_at": "2021-01-07T18:42:38Z",
    "mergeable_state": "unknown",
    "merged_at": "2021-01-07T18:42:38Z",
    "merge_commit_sha": "d7e2401c629be3db6ceef551ee0f74deb56c02d1",
    "assignee": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "hebasto:20200130-natpmp",
      "ref": "20200130-natpmp",
      "sha": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 143212778,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDMyMTI3Nzg=",
        "name": "bitcoin",
        "full_name": "hebasto/bitcoin",
        "owner": {
          "login": "hebasto",
          "id": 32963518,
          "node_id": "MDQ6VXNlcjMyOTYzNTE4",
          "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/hebasto",
          "html_url": "https://github.com/hebasto",
          "followers_url": "https://api.github.com/users/hebasto/followers",
          "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
          "organizations_url": "https://api.github.com/users/hebasto/orgs",
          "repos_url": "https://api.github.com/users/hebasto/repos",
          "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/hebasto/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/hebasto/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/hebasto/bitcoin",
        "archive_url": "https://api.github.com/repos/hebasto/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/hebasto/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/hebasto/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/hebasto/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/hebasto/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/hebasto/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/hebasto/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/hebasto/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/hebasto/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/hebasto/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/hebasto/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/hebasto/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/hebasto/bitcoin/events",
        "forks_url": "https://api.github.com/repos/hebasto/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/hebasto/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/hebasto/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/hebasto/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/hebasto/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/hebasto/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/hebasto/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/hebasto/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/hebasto/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/hebasto/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/hebasto/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/hebasto/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/hebasto/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/hebasto/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/hebasto/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/hebasto/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:hebasto/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/hebasto/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/hebasto/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/hebasto/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/hebasto/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/hebasto/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/hebasto/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/hebasto/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/hebasto/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/hebasto/bitcoin/hooks",
        "svn_url": "https://github.com/hebasto/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 3,
        "stargazers_count": 13,
        "watchers_count": 13,
        "size": 251607,
        "default_branch": "master",
        "open_issues_count": 3,
        "is_template": false,
        "topics": [
          "bitcoin-core"
        ],
        "has_issues": true,
        "has_projects": false,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-02T18:38:17Z",
        "created_at": "2018-08-01T21:59:57Z",
        "updated_at": "2023-07-25T14:18:54Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "3a6acd1772100d71de45355381d0d6ccf1320748",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35476,
        "stargazers_count": 70608,
        "watchers_count": 70608,
        "size": 236222,
        "default_branch": "master",
        "open_issues_count": 672,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-02T19:06:37Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-08-02T18:21:18Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 547,
    "deletions": 173,
    "changed_files": 33,
    "commits": 13,
    "review_comments": 100,
    "comments": 79
  },
  "events": [
    {
      "event": "labeled",
      "id": 3011787451,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDMwMTE3ODc0NTE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3011787451",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-05T22:09:46Z",
      "label": {
        "name": "Build system",
        "color": "5319e7"
      }
    },
    {
      "event": "labeled",
      "id": 3011787452,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDMwMTE3ODc0NTI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3011787452",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-05T22:09:46Z",
      "label": {
        "name": "GUI",
        "color": "02d7e1"
      }
    },
    {
      "event": "labeled",
      "id": 3011787455,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDMwMTE3ODc0NTU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3011787455",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-05T22:09:46Z",
      "label": {
        "name": "P2P",
        "color": "006b75"
      }
    },
    {
      "event": "commented",
      "id": 582659603,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4MjY1OTYwMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/582659603",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-05T23:18:08Z",
      "updated_at": "2021-01-06T15:41:45Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20864 (net: Move SocketSendData lock annotation to header by MarcoFalke)\n* #20744 ([POC] Use std::filesystem. Remove Boost Filesystem & System by fanquake)\n* #20487 (draft: Add syscall sandboxing using seccomp-bpf (Linux secure computing mode) by practicalswift)\n* #20201 (build: pkg-config related cleanup by hebasto)\n* #20196 (net: fix GetListenPort() to derive the proper port by vasild)\n* #19683 (depends: Pin clang search paths for darwin host by dongcarl)\n* #19064 (refactor: Cleanup thread ctor calls by hebasto)\n* #17920 (guix: Build support for macOS by dongcarl)\n* #16546 (External signer support - Wallet Box edition by Sjors)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-582659603",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "commented",
      "id": 582859339,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4Mjg1OTMzOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/582859339",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-06T11:22:12Z",
      "updated_at": "2020-02-06T11:22:12Z",
      "author_association": "MEMBER",
      "body": "Thanks for picking this up again. I hope we manage to do this this time.",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-582859339",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3014799527,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzAxNDc5OTUyNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3014799527",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-06T17:28:06Z"
    },
    {
      "event": "reviewed",
      "id": 354660903,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0NjYwOTAz",
      "url": null,
      "actor": null,
      "commit_id": "60e2524c8aa0edf5ce09d842cec09065cb854bcd",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#pullrequestreview-354660903",
      "submitted_at": "2020-02-06T18:06:54Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
    },
    {
      "event": "commented",
      "id": 583039181,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4MzAzOTE4MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/583039181",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-06T18:16:15Z",
      "updated_at": "2020-02-06T18:16:15Z",
      "author_association": "MEMBER",
      "body": "Concept ACK",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-583039181",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3019022406,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzAxOTAyMjQwNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3019022406",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-07T20:38:39Z"
    },
    {
      "event": "ready_for_review",
      "id": 3019027032,
      "node_id": "MDE5OlJlYWR5Rm9yUmV2aWV3RXZlbnQzMDE5MDI3MDMy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3019027032",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-07T20:40:26Z"
    },
    {
      "event": "renamed",
      "id": 3019027471,
      "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50MzAxOTAyNzQ3MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3019027471",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-07T20:40:35Z",
      "rename": {
        "from": "[WIP] net: Add NAT-PMP port forwarding support",
        "to": "net: Add NAT-PMP port forwarding support"
      }
    },
    {
      "event": "commented",
      "id": 583606396,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4MzYwNjM5Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/583606396",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-07T20:53:20Z",
      "updated_at": "2020-02-07T20:53:31Z",
      "author_association": "MEMBER",
      "body": "It is ready for reviewing now.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-583606396",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3019197469,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzAxOTE5NzQ2OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3019197469",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-07T21:41:15Z"
    },
    {
      "event": "commented",
      "id": 583630233,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4MzYzMDIzMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/583630233",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-07T21:49:43Z",
      "updated_at": "2020-02-07T21:49:43Z",
      "author_association": "MEMBER",
      "body": "Updated 4ff5349a3172d02fceb976bf4989996c88f86680 -> cf94431e8f4bfd6636998a17e2355feb2c5c3d58 ([pr18077.03](https://github.com/hebasto/bitcoin/commits/pr18077.03) -> [pr18077.04](https://github.com/hebasto/bitcoin/commits/pr18077.04), [compare](https://github.com/hebasto/bitcoin/compare/pr18077.03..pr18077.04)):\r\n\r\nadded `libnatpmp` package to macOS 10.14 native Travis build.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-583630233",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "commented",
      "id": 583715048,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4MzcxNTA0OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/583715048",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-08T08:17:25Z",
      "updated_at": "2020-02-08T08:17:25Z",
      "author_association": "MEMBER",
      "body": "Updated cf94431e8f4bfd6636998a17e2355feb2c5c3d58 -> 88248a44241c8e3922a80729ce4a9a178ef2dbea ([pr18077.04](https://github.com/hebasto/bitcoin/commits/pr18077.04) -> [pr18077.05](https://github.com/hebasto/bitcoin/commits/pr18077.05), [compare](https://github.com/hebasto/bitcoin/compare/pr18077.04..pr18077.05)):\r\n\r\nadded:\r\n- changes to docs\r\n- release notes",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-583715048",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "labeled",
      "id": 3022432267,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDMwMjI0MzIyNjc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3022432267",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-10T12:03:01Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3023625630,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzAyMzYyNTYzMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3023625630",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-10T17:18:43Z"
    },
    {
      "event": "commented",
      "id": 584234105,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4NDIzNDEwNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/584234105",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-10T17:20:14Z",
      "updated_at": "2020-02-10T17:20:14Z",
      "author_association": "MEMBER",
      "body": "Rebased after #17398 and #18081 have been merged.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-584234105",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "unlabeled",
      "id": 3023839529,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzAyMzgzOTUyOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3023839529",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-10T18:22:19Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "assigned",
      "id": 3023983170,
      "node_id": "MDEzOkFzc2lnbmVkRXZlbnQzMDIzOTgzMTcw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3023983170",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-10T19:05:35Z",
      "assignee": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "commented",
      "id": 584307307,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4NDMwNzMwNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/584307307",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-10T19:26:14Z",
      "updated_at": "2020-02-10T19:26:14Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK, will test on my home router.",
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-584307307",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "unlabeled",
      "id": 3024081966,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzAyNDA4MTk2Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3024081966",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-10T19:36:22Z",
      "label": {
        "name": "Build system",
        "color": "5319e7"
      }
    },
    {
      "event": "unlabeled",
      "id": 3024081968,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzAyNDA4MTk2OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3024081968",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-10T19:36:22Z",
      "label": {
        "name": "GUI",
        "color": "02d7e1"
      }
    },
    {
      "event": "commented",
      "id": 584768149,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4NDc2ODE0OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/584768149",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-11T17:57:03Z",
      "updated_at": "2020-02-11T18:03:59Z",
      "author_association": "MEMBER",
      "body": "Concept ACK. Lightly tested configure / build on macOS.\r\n\r\nUnfortunately I'm behind a IPv6 DS-Lite router, I can't test the IPv4 port forward. Perhaps `-7` could be replaced by something more readable.\r\n\r\n```\r\n2020-02-11T17:48:27Z natpmp thread start\r\n2020-02-11T17:48:27Z Bound to [::]:8333\r\n2020-02-11T17:48:27Z Bound to 0.0.0.0:8333\r\n2020-02-11T17:48:27Z init message: Loading P2P addresses...\r\n2020-02-11T17:48:27Z NAT-PMP: readnatpmpresponseorretry() for public address failed with -7 error.\r\n2020-02-11T17:48:27Z NAT-PMP: readnatpmpresponseorretry() for port mapping failed with -7 error. \r\n```\r\n\r\nI looked up the error code, and it's what I would expect given my setup:\r\n```\r\n/* NATPMP_ERR_NOGATEWAYSUPPORT : the gateway does not support NAT-PMP */\r\n#define NATPMP_ERR_NOGATEWAYSUPPORT (-7)\r\n```\r\n\r\nTwo suggesitons for followups, or this PR:\r\n* add checkbox in QT Settings (above UPNP)\r\n* add support for IPv6 pinhole if the library supports it, see #17012 (looks like it doesn't)",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-584768149",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "commented",
      "id": 584801614,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4NDgwMTYxNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/584801614",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-11T19:11:03Z",
      "updated_at": "2020-02-11T19:13:01Z",
      "author_association": "MEMBER",
      "body": "@Sjors \r\n\r\nThank you for your review and testing.\r\n\r\n> I looked up the error code, and it's what I would expect given my setup:\r\n> \r\n> ```\r\n> /* NATPMP_ERR_NOGATEWAYSUPPORT : the gateway does not support NAT-PMP */\r\n> #define NATPMP_ERR_NOGATEWAYSUPPORT (-7)\r\n> ```\r\n\r\nAgree.\r\nBut in this initial PR I intentionally do not provide user-friendly error messages in order to keep `ThreadNatpmp()` dense and tight for easier reviewing ;)\r\n\r\nIn followups every library call (`initnatpmp()`, `sendpublicaddressrequest()` and `sendnewportmappingrequest()`) with the following `readnatpmpresponseorretry()` loops could be refactored out to separate functions with user-friendly error messages.\r\n\r\n> Two suggesitons for followups, or this PR:\r\n> \r\n>     * add checkbox in QT Settings (above UPNP)\r\n\r\nAgree. From the OP:\r\n> Some follow-ups are out of this PR's scope:\r\n> \r\n>     * mention NAT-PMP library in the version message\r\n> \r\n>     * integrate NAT-PMP into the GUI\r\n\r\n",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-584801614",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "mentioned",
      "id": 3027852023,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzAyNzg1MjAyMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3027852023",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-11T19:11:03Z"
    },
    {
      "event": "subscribed",
      "id": 3027852030,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMwMjc4NTIwMzA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3027852030",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-11T19:11:03Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-11T20:32:48Z",
      "updated_at": "2020-02-11T20:32:48Z",
      "source": {
        "issue": {
          "id": 543160971,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MzU3NDc1NTk2",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17812",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17812/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17812/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17812/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/17812",
          "number": 17812,
          "state": "closed",
          "state_reason": null,
          "title": "config, net, test: asmap feature refinements and functional tests",
          "body": "This PR builds on PR #16702 to add functional tests / sanity checks and user-facing refinements for passing `-asmap` to configure ASN-based IP bucketing in addrman. As per our review discussion in that PR, the idea here is to handle aspects like functional tests and config arg handling that can help the PR be merged while enabling the author to focus on the bucketing itself.\r\n\r\n- [x] add feature functional tests to verify node behaviour and debug log output when launching\r\n\r\n  - `bitcoind` with no `-asmap` arg\r\n\r\n  - `bitcoind -asmap=RELATIVE_FILENAME` to the unit test data skeleton asmap\r\n\r\n  - `bitcoind -asmap` with no filename specified using the default asmap file\r\n\r\n  - `bitcoind -asmap` with no filename specified and a missing default asmap file\r\n\r\n- [x] add the ability to pass absolute path filenames to the `-asmap` config arg in addition to datadir-relative path filenames as per https://github.com/bitcoin/bitcoin/pull/16702#discussion_r361300447, and add test coverage\r\n\r\n- [x] separate the asmap file finding and parsing checks, which allows adding tests for the case of a found but unparseable or empty asmap\r\n\r\n- [x] add test for an empty asmap\r\n\r\n- [x] various asmap fixups\r\n\r\n- [x] move the asmap init code earlier in the init process to provide immediate feedback when passing an  `-asmap` config arg. This speeds up the `feature_asmap` functional test from 60 to 5 seconds! Credit to Wladimir J. van der Laan for the suggestion.\r\n",
          "user": {
            "login": "jonatack",
            "id": 2415484,
            "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonatack",
            "html_url": "https://github.com/jonatack",
            "followers_url": "https://api.github.com/users/jonatack/followers",
            "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
            "organizations_url": "https://api.github.com/users/jonatack/orgs",
            "repos_url": "https://api.github.com/users/jonatack/repos",
            "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jonatack/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 27,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17812",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/17812",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/17812.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/17812.patch"
          },
          "closed_at": "2020-03-05T12:14:13Z",
          "created_at": "2019-12-28T13:15:44Z",
          "updated_at": "2022-02-15T11:02:19Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-11T21:34:53Z",
      "updated_at": "2020-02-11T21:34:53Z",
      "source": {
        "issue": {
          "id": 520524049,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MzM5MDk2MDg0",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17428",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17428/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17428/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17428/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/17428",
          "number": 17428,
          "state": "closed",
          "state_reason": null,
          "title": "p2p: Try to preserve outbound block-relay-only connections during restart",
          "body": "This is an implementation of #17326: \r\n- all (currently 2) outbound block-relay-only connections (#15759) are dumped to `anchors.dat` file\r\n- on restart a node tries to connect to the addresses from `anchors.dat`\r\n\r\nThis PR prevents a type of eclipse attack when an attacker exploits a victim node restart to force it to connect to new, probably adversarial, peers.",
          "user": {
            "login": "hebasto",
            "id": 32963518,
            "node_id": "MDQ6VXNlcjMyOTYzNTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hebasto",
            "html_url": "https://github.com/hebasto",
            "followers_url": "https://api.github.com/users/hebasto/followers",
            "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
            "organizations_url": "https://api.github.com/users/hebasto/orgs",
            "repos_url": "https://api.github.com/users/hebasto/repos",
            "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/hebasto/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/45",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/45",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/45/labels",
            "id": 4914019,
            "node_id": "MDk6TWlsZXN0b25lNDkxNDAxOQ==",
            "number": 45,
            "state": "closed",
            "title": "0.21.0",
            "description": "",
            "creator": {
              "login": "laanwj",
              "id": 126646,
              "node_id": "MDQ6VXNlcjEyNjY0Ng==",
              "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/laanwj",
              "html_url": "https://github.com/laanwj",
              "followers_url": "https://api.github.com/users/laanwj/followers",
              "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
              "organizations_url": "https://api.github.com/users/laanwj/orgs",
              "repos_url": "https://api.github.com/users/laanwj/repos",
              "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/laanwj/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 132,
            "created_at": "2019-12-09T08:39:58Z",
            "updated_at": "2021-01-15T19:50:53Z",
            "closed_at": "2021-01-15T19:50:53Z"
          },
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 66,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17428",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/17428",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/17428.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/17428.patch"
          },
          "closed_at": "2020-10-15T18:21:56Z",
          "created_at": "2019-11-09T22:46:25Z",
          "updated_at": "2022-08-16T17:02:21Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-11T22:16:40Z",
      "updated_at": "2020-02-11T22:16:40Z",
      "source": {
        "issue": {
          "id": 494112351,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MzE3OTMwMjM4",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16883",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16883/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16883/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16883/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/16883",
          "number": 16883,
          "state": "closed",
          "state_reason": null,
          "title": "WIP: Qt: add QML based mobile GUI",
          "body": "![qt-mobile](https://user-images.githubusercontent.com/762502/64966816-c3ed0180-d89f-11e9-9acf-4251e38fbaf8.gif)\r\n![mobile_screenshot_2](https://user-images.githubusercontent.com/762502/64966839-d109f080-d89f-11e9-8d9e-91b15b0413fe.png)\r\n![mobile_screenshot_3](https://user-images.githubusercontent.com/762502/64966851-d404e100-d89f-11e9-9634-1cee36e6580f.png)\r\n\r\nThis adds a Qt Quick Controls 2 based UI meant for mobile devices. This is work-in-progress meant to gauge interest, related to but not dependent on [#16110](https://github.com/bitcoin/bitcoin/pull/16110), i.e. one can run the \"mobile\" GUI on desktop as well. You should install `qtdeclarative5-dev` and `qtquickcontrols2-5-dev` in addition to usual Qt dependencies and configure with `--enable-mobile-gui`.\r\n\r\nAs a proof-of-concept this PR aims to be light, about 400 lines of C++ code that is meant to be a drop-in replacement for `bitcoingui` with mostly the same public functions and a couple of #ifdefs in `bitcoin.cpp`. There is also an addition of `roleNames` to the `transactiontablemodel` to make it compatible with QML stuff.\r\n\r\nReplacement class `bitcoinmobilegui` hooks up to the exact same signals, models and controllers as `bitcoingui`. At the moment the mobile GUI presented to the user is dead simple (no multi-wallet, no advanced options) but it has been tested to allow the user to send and receive.\r\n\r\nMy rationale for making this is the fact that in a couple years phones will be powerful enough to run Core without much hassle. If we add some platform code for \r\n\r\n- verifying transactions only while in foreground or charging (to preserve battery)\r\n- enabling phone to phone transactions (NFC or bluetooth for enhanced privacy)\r\n- providing services to other local apps (think Lightning wallets, they could get the blockchain state from Core, no wasting of resources)\r\n\r\nand release an official Android package I believe that this has the potential to put a full node in the pockets of millions - empowering users and improving the network.",
          "user": {
            "login": "icota",
            "id": 762502,
            "node_id": "MDQ6VXNlcjc2MjUwMg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/762502?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/icota",
            "html_url": "https://github.com/icota",
            "followers_url": "https://api.github.com/users/icota/followers",
            "following_url": "https://api.github.com/users/icota/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/icota/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/icota/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/icota/subscriptions",
            "organizations_url": "https://api.github.com/users/icota/orgs",
            "repos_url": "https://api.github.com/users/icota/repos",
            "events_url": "https://api.github.com/users/icota/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/icota/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64583,
              "node_id": "MDU6TGFiZWw2NDU4Mw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Feature",
              "name": "Feature",
              "color": "7cf575",
              "default": false
            },
            {
              "id": 135946,
              "node_id": "MDU6TGFiZWwxMzU5NDY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/GUI",
              "name": "GUI",
              "color": "02d7e1",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            },
            {
              "id": 1392286103,
              "node_id": "MDU6TGFiZWwxMzkyMjg2MTAz",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20Conceptual%20Review",
              "name": "Needs Conceptual Review",
              "description": "",
              "color": "fef2c0",
              "default": false
            },
            {
              "id": 1586491484,
              "node_id": "MDU6TGFiZWwxNTg2NDkxNDg0",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Android",
              "name": "Android",
              "description": "",
              "color": "afea5d",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "comments": 60,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16883",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/16883",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/16883.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/16883.patch"
          },
          "closed_at": "2021-12-15T11:37:53Z",
          "created_at": "2019-09-16T15:11:10Z",
          "updated_at": "2023-04-18T09:06:52Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-11T22:45:04Z",
      "updated_at": "2020-02-11T22:45:04Z",
      "source": {
        "issue": {
          "id": 466444060,
          "node_id": "MDExOlB1bGxSZXF1ZXN0Mjk2MjgyNjk4",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16367",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16367/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16367/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16367/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/16367",
          "number": 16367,
          "state": "closed",
          "state_reason": null,
          "title": "Multiprocess build support",
          "body": "This PR is part of the [process separation project](https://github.com/bitcoin/bitcoin/projects/10).\r\n\r\nThis splits autotools, depends build, and travis changes out of #10102, so code changes and build system changes can be reviewed separately.",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 148216,
              "node_id": "MDU6TGFiZWwxNDgyMTY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Docs",
              "name": "Docs",
              "color": "02d7e1",
              "default": false
            },
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 40,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16367",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/16367",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/16367.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/16367.patch"
          },
          "closed_at": "2020-04-10T16:57:39Z",
          "created_at": "2019-07-10T18:01:54Z",
          "updated_at": "2022-02-15T10:31:10Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-11T23:24:14Z",
      "updated_at": "2020-02-11T23:24:14Z",
      "source": {
        "issue": {
          "id": 396207112,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjQyNDY0NzA5",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15112",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15112/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15112/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15112/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/15112",
          "number": 15112,
          "state": "closed",
          "state_reason": null,
          "title": "build: Optionally enable -Wzero-as-null-pointer-constant",
          "body": "~~**Note:** This is based on #14920~~\r\n\r\nThis enables `-Wzero-as-null-pointer-constant`, while avoiding applying it to dependencies.\r\n\r\n~~Used [Qt::NoItemFlags](http://doc.qt.io/qt-5/qt.html#ItemFlag-enum),  [Qt::Widget](http://doc.qt.io/qt-5/qt.html#WindowType-enum) instead where applicable.~~\r\n\r\nSee #10483, #10645, #13802 for more on `nullptr`.",
          "user": {
            "login": "Empact",
            "id": 5470,
            "node_id": "MDQ6VXNlcjU0NzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Empact",
            "html_url": "https://github.com/Empact",
            "followers_url": "https://api.github.com/users/Empact/followers",
            "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
            "organizations_url": "https://api.github.com/users/Empact/orgs",
            "repos_url": "https://api.github.com/users/Empact/repos",
            "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Empact/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 30,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15112",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/15112",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/15112.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/15112.patch"
          },
          "closed_at": "2022-04-26T10:15:34Z",
          "created_at": "2019-01-05T22:47:42Z",
          "updated_at": "2022-11-18T20:47:09Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 357148016,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3MTQ4MDE2",
      "url": null,
      "actor": null,
      "commit_id": "c7e90ca40ad9b7c66f3429b792435e9279ceca6b",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#pullrequestreview-357148016",
      "submitted_at": "2020-02-12T02:12:14Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
    },
    {
      "event": "mentioned",
      "id": 3030716746,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzAzMDcxNjc0Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3030716746",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-12T13:04:21Z"
    },
    {
      "event": "subscribed",
      "id": 3030716753,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMwMzA3MTY3NTM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3030716753",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-12T13:04:21Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3041642839,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzA0MTY0MjgzOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3041642839",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-16T15:45:15Z"
    },
    {
      "event": "commented",
      "id": 586722575,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjcyMjU3NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/586722575",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-16T15:59:47Z",
      "updated_at": "2020-02-16T16:09:49Z",
      "author_association": "MEMBER",
      "body": "Updated c7e90ca40ad9b7c66f3429b792435e9279ceca6b -> dc228d6db8d2e9406d6d6e0eb04e37940b1ffb82 ([pr18077.06](https://github.com/hebasto/bitcoin/commits/pr18077.06) -> [pr18077.07](https://github.com/hebasto/bitcoin/commits/pr18077.07), [compare](https://github.com/hebasto/bitcoin/compare/pr18077.06..pr18077.07)):\r\n\r\nChanges:\r\n- added a user-friendly error message for the `NATPMP_ERR_NOGATEWAYSUPPORT` error\r\n- enable both NAT-PMP and UPnP if `-natpmp` and `-upnp` options are supplied\r\n\r\n---\r\n\r\n@Sjors \r\n> Perhaps `-7` could be replaced by something more readable.\r\n\r\nDone.\r\n\r\n> If both are enabled, would you try to open de port with NAT_PMP first and if that fails UPNP?\r\n> I wouldn't use them simultaneously, but one fails it makes sense to try the other.\r\n\r\nDone.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-586722575",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "mentioned",
      "id": 3041652473,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzA0MTY1MjQ3Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3041652473",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-16T15:59:47Z"
    },
    {
      "event": "subscribed",
      "id": 3041652474,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMwNDE2NTI0NzQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3041652474",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-16T15:59:47Z"
    },
    {
      "event": "reviewed",
      "id": 359457316,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5NDU3MzE2",
      "url": null,
      "actor": null,
      "commit_id": "dc228d6db8d2e9406d6d6e0eb04e37940b1ffb82",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#pullrequestreview-359457316",
      "submitted_at": "2020-02-17T02:09:26Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
    },
    {
      "event": "commented",
      "id": 586789305,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4Njc4OTMwNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/586789305",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-17T02:13:44Z",
      "updated_at": "2020-02-17T02:13:44Z",
      "author_association": "MEMBER",
      "body": "The logic here still seems broken. Again, consider that users may migrate between different routers each with NAT-PMP or UPnP support. So there should be a common thread main that *at each refresh* (which ideally should trigger when network availability changes, but that can be another PR) checks for which protocol to use and does the right thing.",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-586789305",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "commented",
      "id": 586837309,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjgzNzMwOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/586837309",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-17T06:28:14Z",
      "updated_at": "2020-02-17T06:28:14Z",
      "author_association": "MEMBER",
      "body": "@luke-jr \r\n> The logic here still seems broken. Again, consider that users may migrate between different routers each with NAT-PMP or UPnP support. So there should be a common thread main that _at each refresh_ (which ideally should trigger when network availability changes, but that can be another PR) checks for which protocol to use and does the right thing.\r\n\r\n`ThreadAnyAvailable()` does almost the same:\r\nif a used protocol becomes unavailable, `ThreadAnyAvailable()` switches to another one, no?",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-586837309",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "mentioned",
      "id": 3042442067,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzA0MjQ0MjA2Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3042442067",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-17T06:28:14Z"
    },
    {
      "event": "subscribed",
      "id": 3042442069,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMwNDI0NDIwNjk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3042442069",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-17T06:28:14Z"
    },
    {
      "event": "commented",
      "id": 587017420,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4NzAxNzQyMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/587017420",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-17T14:23:34Z",
      "updated_at": "2020-02-17T14:23:34Z",
      "author_association": "MEMBER",
      "body": "Yes, re-reading it, you're right, it does. I saw the loops in the per-protocol functions and missed the outer one.",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-587017420",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3044444633,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzA0NDQ0NDYzMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3044444633",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-17T16:52:32Z"
    },
    {
      "event": "commented",
      "id": 587082936,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4NzA4MjkzNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/587082936",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-17T16:55:48Z",
      "updated_at": "2020-02-17T16:55:48Z",
      "author_association": "MEMBER",
      "body": "Updated dc228d6db8d2e9406d6d6e0eb04e37940b1ffb82 -> 2d5d98ce0aa07401c6771731f4e27634629f197c ([pr18077.07](https://github.com/hebasto/bitcoin/commits/pr18077.07) -> [pr18077.08](https://github.com/hebasto/bitcoin/commits/pr18077.08), [compare](https://github.com/hebasto/bitcoin/compare/pr18077.07..pr18077.08)):\r\n\r\nChanges:\r\n- addressed @luke-jr's [comment](https://github.com/bitcoin/bitcoin/pull/18077#discussion_r379960033)",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-587082936",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "mentioned",
      "id": 3044454698,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzA0NDQ1NDY5OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3044454698",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-17T16:55:49Z"
    },
    {
      "event": "subscribed",
      "id": 3044454701,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMwNDQ0NTQ3MDE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3044454701",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-17T16:55:49Z"
    },
    {
      "event": "reviewed",
      "id": 359949105,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5OTQ5MTA1",
      "url": null,
      "actor": null,
      "commit_id": "2d5d98ce0aa07401c6771731f4e27634629f197c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#pullrequestreview-359949105",
      "submitted_at": "2020-02-17T20:17:45Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
    },
    {
      "event": "reviewed",
      "id": 359961465,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5OTYxNDY1",
      "url": null,
      "actor": null,
      "commit_id": "2d5d98ce0aa07401c6771731f4e27634629f197c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#pullrequestreview-359961465",
      "submitted_at": "2020-02-17T20:54:31Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3048981516,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzA0ODk4MTUxNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3048981516",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-18T21:56:18Z"
    },
    {
      "event": "commented",
      "id": 587924741,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4NzkyNDc0MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/587924741",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-18T22:01:10Z",
      "updated_at": "2020-02-18T22:01:10Z",
      "author_association": "MEMBER",
      "body": "Updated 2d5d98ce0aa07401c6771731f4e27634629f197c -> ccb4a7ea18c38914f084b7c070303d020adad326 ([pr18077.08](https://github.com/hebasto/bitcoin/commits/pr18077.08) -> [pr18077.09](https://github.com/hebasto/bitcoin/commits/pr18077.09), [compare](https://github.com/hebasto/bitcoin/compare/pr18077.08..pr18077.09)):\r\n\r\n- fixed a [bug](https://github.com/bitcoin/bitcoin/pull/18077#discussion_r380352965) pointed by @luke-jr ",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-587924741",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "mentioned",
      "id": 3049002839,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzA0OTAwMjgzOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3049002839",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-18T22:01:11Z"
    },
    {
      "event": "subscribed",
      "id": 3049002846,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMwNDkwMDI4NDY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3049002846",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-18T22:01:11Z"
    },
    {
      "event": "commented",
      "id": 587950934,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4Nzk1MDkzNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/587950934",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-18T23:11:08Z",
      "updated_at": "2020-02-19T01:55:18Z",
      "author_association": "CONTRIBUTOR",
      "body": "Hi all, did some testing on ccb4a7ea18c38914f084b7c070303d020adad326. What I did:\r\n\r\n1. Installed natpmpd on my OpenBSD gateway router\r\n2. Started `natpmpd`, added relevant `pf.conf` line, reloaded `pf`\r\n3. Configure and compile `bitcoind` with `--without-miniupnpc --disable-bench --disable-wallet --without-gui --with-natpmp`\r\n4. Start `bitcoind` with `-natpmp`\r\n5. Saw the following lines:\r\n```\r\n2020-02-18T22:26:26Z NAT-PMP: Public address = 108.21.84.253\r\n2020-02-18T22:26:26Z AddLocal(108.21.84.253:8333,3)\r\n2020-02-18T22:26:26Z NAT-PMP: Port mapping failed.\r\n2020-02-18T22:26:26Z NAT-PMP: Port mapping removed successfully.\r\n```\r\n6. Checked my `natpmpd` anchored `pfctl` rules:\r\n```\r\n$ doas pfctl -a natpmpd -s rules\r\npass in quick on rdomain 0 inet proto tcp from any to <my-egress-ip> port = 62774 flags any rdr-to 192.168.0.5 port 8333\r\n```\r\n\r\nI believe this means that natpmpd successfully allocated a port 62774 to `bitcoind`, but since that port does not equal our private port, this check failed: https://github.com/bitcoin/bitcoin/pull/18077/files#diff-161ad6a962291e0bbafeb83ddc8a977cR109. I believe this is because `natpmpd` ignores our \"Suggested External Port\", which is perfectly valid, and we should probably account for that possibility. ",
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-587950934",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "commented",
      "id": 587970728,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4Nzk3MDcyOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/587970728",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-19T00:19:20Z",
      "updated_at": "2020-02-19T00:19:20Z",
      "author_association": "MEMBER",
      "body": "If NAT-PMP allows ignoring the suggested port, then we probably should handle that by advertising the correct port for the external IP in addrman.",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-587970728",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "commented",
      "id": 588121365,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4ODEyMTM2NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/588121365",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-19T09:29:07Z",
      "updated_at": "2020-02-19T09:29:07Z",
      "author_association": "MEMBER",
      "body": "@dongcarl \r\nThank you for testing this PR with [`natpmpd`](https://github.com/bodgit/natpmpd) on OpenBSD (I've tested with [`miniupnpd`](https://github.com/miniupnp/miniupnp/tree/master/miniupnpd) on OpenWrt).\r\n\r\n> I believe this is because `natpmpd` ignores our \"Suggested External Port\", which is perfectly valid, and we should probably account for that possibility.\r\n\r\nCorrect. From `natpmpd` [docs](http://bodgitandscarper.co.uk/natpmpd/):\r\n> The external TCP or UDP port assigned to the client is _always_ randomised rather than giving the first client the port it actually requested and then trying to work out what to do for additional clients that want the same external port.\r\n\r\n(highlighted in italics by me).\r\n\r\nOTOH, [RFC 6886](https://tools.ietf.org/html/rfc6886) states:\r\n> If the client would prefer to have a high-numbered \"anonymous\" external port assigned, then it should set the Suggested External Port to zero, which indicates to the gateway that it should allocate a high-numbered port of its choosing.  If the client would prefer instead to have the mapped external port be the same as its local internal port if possible (e.g., a web server listening on port 80 that would ideally like to have external port 80), then it should set the Suggested External Port to the desired value.  However, the gateway is _not_ obliged to assign the port suggested, and may choose not to, either for policy reasons (e.g., port 80 is reserved and clients may not request it) or because that port has already been assigned to some other client.\r\n\r\n(highlighted in italics by me).\r\n\r\n@luke-jr \r\n> If NAT-PMP allows ignoring the suggested port, then we probably should handle that by advertising the correct port for the external IP in addrman.\r\n\r\nSure, we should.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-588121365",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "mentioned",
      "id": 3050912722,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzA1MDkxMjcyMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3050912722",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-19T09:29:08Z"
    },
    {
      "event": "subscribed",
      "id": 3050912727,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMwNTA5MTI3Mjc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3050912727",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-19T09:29:08Z"
    },
    {
      "event": "mentioned",
      "id": 3050912732,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzA1MDkxMjczMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3050912732",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-19T09:29:08Z"
    },
    {
      "event": "subscribed",
      "id": 3050912736,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMwNTA5MTI3MzY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3050912736",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-19T09:29:08Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3053195363,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzA1MzE5NTM2Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3053195363",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-19T19:59:18Z"
    },
    {
      "event": "commented",
      "id": 588422681,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4ODQyMjY4MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/588422681",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-19T20:05:31Z",
      "updated_at": "2020-02-19T20:05:31Z",
      "author_association": "MEMBER",
      "body": "Updated ccb4a7ea18c38914f084b7c070303d020adad326 -> 03e2733be1772ef69caf34e84c7b400f64a8ea9f ([pr18077.09](https://github.com/hebasto/bitcoin/commits/pr18077.09) -> [pr18077.10](https://github.com/hebasto/bitcoin/commits/pr18077.10), [compare](https://github.com/hebasto/bitcoin/compare/pr18077.09..pr18077.10)):\r\n\r\n- aligned with RFC 6886\r\n\r\n@dongcarl @luke-jr \r\nThank you for your reviews. All your comments have been addressed.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-588422681",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "mentioned",
      "id": 3053216723,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzA1MzIxNjcyMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3053216723",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-19T20:05:31Z"
    },
    {
      "event": "subscribed",
      "id": 3053216728,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMwNTMyMTY3Mjg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3053216728",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-19T20:05:31Z"
    },
    {
      "event": "mentioned",
      "id": 3053216736,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzA1MzIxNjczNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3053216736",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-19T20:05:31Z"
    },
    {
      "event": "subscribed",
      "id": 3053216740,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMwNTMyMTY3NDA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3053216740",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-19T20:05:31Z"
    },
    {
      "event": "reviewed",
      "id": 361448941,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxNDQ4OTQx",
      "url": null,
      "actor": null,
      "commit_id": "03e2733be1772ef69caf34e84c7b400f64a8ea9f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#pullrequestreview-361448941",
      "submitted_at": "2020-02-19T21:26:25Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
    },
    {
      "event": "reviewed",
      "id": 361453595,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxNDUzNTk1",
      "url": null,
      "actor": null,
      "commit_id": "03e2733be1772ef69caf34e84c7b400f64a8ea9f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#pullrequestreview-361453595",
      "submitted_at": "2020-02-19T21:33:54Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
    },
    {
      "event": "reviewed",
      "id": 361454311,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxNDU0MzEx",
      "url": null,
      "actor": null,
      "commit_id": "03e2733be1772ef69caf34e84c7b400f64a8ea9f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#pullrequestreview-361454311",
      "submitted_at": "2020-02-19T21:35:05Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
    },
    {
      "event": "reviewed",
      "id": 361454958,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxNDU0OTU4",
      "url": null,
      "actor": null,
      "commit_id": "03e2733be1772ef69caf34e84c7b400f64a8ea9f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#pullrequestreview-361454958",
      "submitted_at": "2020-02-19T21:36:09Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
    },
    {
      "event": "commented",
      "id": 588484002,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4ODQ4NDAwMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/588484002",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-19T21:37:16Z",
      "updated_at": "2020-02-19T21:37:16Z",
      "author_association": "MEMBER",
      "body": "I suggest putting the variable renames in a separate commit for easier review.\r\n\r\nAlso, since NAT-PMP apparently maps random ports often, I think we should prefer UPnP...",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-588484002",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "closed",
      "id": 3054684164,
      "node_id": "MDExOkNsb3NlZEV2ZW50MzA1NDY4NDE2NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3054684164",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-20T07:38:43Z"
    },
    {
      "event": "mentioned",
      "id": 3054684171,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzA1NDY4NDE3MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3054684171",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-20T07:38:43Z"
    },
    {
      "event": "subscribed",
      "id": 3054684174,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMwNTQ2ODQxNzQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3054684174",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-20T07:38:43Z"
    },
    {
      "event": "mentioned",
      "id": 3054684178,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzA1NDY4NDE3OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3054684178",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-20T07:38:43Z"
    },
    {
      "event": "subscribed",
      "id": 3054684183,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMwNTQ2ODQxODM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3054684183",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-20T07:38:43Z"
    },
    {
      "event": "reopened",
      "id": 3054684400,
      "node_id": "MDEzOlJlb3BlbmVkRXZlbnQzMDU0Njg0NDAw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3054684400",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-20T07:38:49Z"
    },
    {
      "event": "commented",
      "id": 588713300,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4ODcxMzMwMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/588713300",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-20T07:56:53Z",
      "updated_at": "2020-02-20T07:56:53Z",
      "author_association": "MEMBER",
      "body": "@luke-jr \r\n> I suggest putting the variable renames in a separate commit for easier review.\r\n\r\nThere is a dedicated commit \"refactor: Rename UPnP stuff\" (a2de373a96dc1b9f5374eb70d605dcaf49f9b244).\r\nWhat variable rename did I miss to put it to?",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-588713300",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "mentioned",
      "id": 3054731110,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzA1NDczMTExMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3054731110",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-20T07:56:53Z"
    },
    {
      "event": "subscribed",
      "id": 3054731113,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMwNTQ3MzExMTM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3054731113",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-20T07:56:53Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-20T10:20:15Z",
      "updated_at": "2020-02-20T10:20:15Z",
      "source": {
        "issue": {
          "id": 568194760,
          "node_id": "MDU6SXNzdWU1NjgxOTQ3NjA=",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18184",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18184/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18184/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18184/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/18184",
          "number": 18184,
          "state": "closed",
          "state_reason": "completed",
          "title": "net, gui: -upnp option -- \"override\" vs \"can be changed on-the-fly\"",
          "body": "On master (68e841e0af223a220d1f037e4c5680c1b228aa3e) the `-upnp` option being set in the command line or in the configuration file overrides the GUI option _only_ on startup.\r\n\r\nIf a user (un)checks the \"Map port using UPnP\" checkbox in the \"Network\" tab of the \"Options\" window, the client does not take into account the fact that the `-upnp` option is set in the command line or in the configuration file.\r\n\r\nThere some ways to resolve an issue:\r\n- document the current behavior\r\n- deactivate the \"Map port using UPnP\" checkbox if the `-upnp` option is set in the command line or in the configuration file\r\n- smth else\r\n\r\nThe brainstorm question is which way is the best?\r\n\r\n---\r\n\r\nThis issue was initially raised by **luke-jr** in his [review](https://github.com/bitcoin/bitcoin/pull/18077#discussion_r381553831) of #18077.",
          "user": {
            "login": "hebasto",
            "id": 32963518,
            "node_id": "MDQ6VXNlcjMyOTYzNTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hebasto",
            "html_url": "https://github.com/hebasto",
            "followers_url": "https://api.github.com/users/hebasto/followers",
            "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
            "organizations_url": "https://api.github.com/users/hebasto/orgs",
            "repos_url": "https://api.github.com/users/hebasto/repos",
            "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/hebasto/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64584,
              "node_id": "MDU6TGFiZWw2NDU4NA==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Brainstorming",
              "name": "Brainstorming",
              "color": "ebd775",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 2,
          "closed_at": "2023-02-07T14:55:39Z",
          "created_at": "2020-02-20T10:20:15Z",
          "updated_at": "2023-02-07T14:55:40Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3058630027,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzA1ODYzMDAyNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3058630027",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-20T23:13:44Z"
    },
    {
      "event": "commented",
      "id": 589405068,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4OTQwNTA2OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/589405068",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-20T23:21:05Z",
      "updated_at": "2020-02-20T23:21:05Z",
      "author_association": "MEMBER",
      "body": "Updated 03e2733be1772ef69caf34e84c7b400f64a8ea9f -> dd3229e7af8563c69d26955c4207f73ae1d3bc94 ([pr18077.10](https://github.com/hebasto/bitcoin/commits/pr18077.10) -> [pr18077.11](https://github.com/hebasto/bitcoin/commits/pr18077.11), [compare](https://github.com/hebasto/bitcoin/compare/pr18077.10..pr18077.11)):\r\n\r\n- fixed CI issues\r\n- the NAT-PMP checkbox added to the GUI (this simplifies testing a lot)\r\n- fixed a [bug](https://github.com/bitcoin/bitcoin/pull/18077#discussion_r381558152) pointed by @luke-jr",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-589405068",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "mentioned",
      "id": 3058647361,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzA1ODY0NzM2MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3058647361",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-20T23:21:05Z"
    },
    {
      "event": "subscribed",
      "id": 3058647363,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMwNTg2NDczNjM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3058647363",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-20T23:21:05Z"
    },
    {
      "event": "commented",
      "id": 589416424,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4OTQxNjQyNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/589416424",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-20T23:42:08Z",
      "updated_at": "2020-02-20T23:42:08Z",
      "author_association": "MEMBER",
      "body": "@luke-jr \r\n> Also, since NAT-PMP apparently maps random ports often, I think we should prefer UPnP...\r\n\r\nDoes this behavior of NAT-PMP gateways hurt the entire p2p network?\r\n\r\nOTOH, NAT-PMP seems more secure than UPnP (for example, one could compare numbers of CVEs for each protocol).",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-589416424",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "mentioned",
      "id": 3058690163,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzA1ODY5MDE2Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3058690163",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-20T23:42:08Z"
    },
    {
      "event": "subscribed",
      "id": 3058690164,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMwNTg2OTAxNjQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3058690164",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-20T23:42:08Z"
    },
    {
      "event": "commented",
      "id": 589428754,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4OTQyODc1NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/589428754",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-20T23:52:35Z",
      "updated_at": "2020-02-20T23:52:35Z",
      "author_association": "MEMBER",
      "body": ">Does this behavior of NAT-PMP gateways hurt the entire p2p network?\r\n\r\nDNS seeds can't provide port numbers, so using anything other than 8333 reduces the list of nodes we can advertise. Currently, mine (which is IIRC more restrictive than others) has 3090 eligible nodes, so it's not a big deal, but it'd be nicer to have a wider selection available than a narrower selection.\r\n\r\n> OTOH, NAT-PMP seems more secure than UPnP (for example, one could compare numbers of CVEs for each protocol).\r\n\r\nThe CVEs AFAIK are for the implementations, not the protocol.\r\n\r\nIn any case, when we are using either, I think we're reduced to the weakest no matter which we prefer (a hostile router could block NAT-PMP to force fallback to UPnP).",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-589428754",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "reviewed",
      "id": 362846053,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyODQ2MDUz",
      "url": null,
      "actor": null,
      "commit_id": "dd3229e7af8563c69d26955c4207f73ae1d3bc94",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#pullrequestreview-362846053",
      "submitted_at": "2020-02-21T19:00:34Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
    },
    {
      "event": "commented",
      "id": 589789757,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4OTc4OTc1Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/589789757",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-21T19:01:56Z",
      "updated_at": "2020-02-21T19:01:56Z",
      "author_association": "MEMBER",
      "body": "Re NAT-PMP preference: Also, with the port number changing every startup, it will be hard for peers to reconnect or meaningfully pass on addr messages for you...\r\n\r\nI think cd7a0f689c5 should get split up. It's too hard to follow what it's doing.",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-589789757",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-21T19:47:52Z",
      "updated_at": "2020-02-21T19:47:52Z",
      "source": {
        "issue": {
          "id": 476597057,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MzA0MDk3NTEw",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16546",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16546/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16546/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16546/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/16546",
          "number": 16546,
          "state": "closed",
          "state_reason": null,
          "title": "External signer support - Wallet Box edition",
          "body": "Big picture overview in [this gist](https://gist.github.com/Sjors/29d06728c685e6182828c1ce9b74483d).\r\n\r\nThis PR lets `bitcoind` call an arbitrary command `-signer=<cmd>`, e.g. a hardware wallet driver,  where it can fetch public keys, ask to display an address, and sign a transaction (using PSBT under the hood).\r\n\r\nIt's design to work with https://github.com/bitcoin-core/HWI, which supports multiple hardware wallets. Any command with the same arguments and return values will work. It simplifies the manual procedure described [here](https://github.com/bitcoin-core/HWI/blob/master/docs/bitcoin-core-usage.md).\r\n\r\nUsage is documented in [doc/external-signer.md](\r\nhttps://github.com/Sjors/bitcoin/blob/2019/08/hww-box2/doc/external-signer.md), which also describes what protocol a different signer binary should conform to.\r\n\r\nUse `--enable-external-signer` to opt in, requires Boost::Process:\r\n\r\n```\r\nOptions used to compile and link:\r\n  with wallet     = yes\r\n  with gui / qt   = no\r\n  external signer = yes\r\n```\r\n\r\nIt adds the following RPC methods:\r\n* `enumeratesigners`: asks <cmd> for a list of signers (e.g. devices) and their master key fingerprint\r\n* `signerdisplayaddress <address>`:  asks <cmd> to display an address\r\n\r\nIt enhances the following RPC methods:\r\n* `createwallet`: takes an additional `external_signer` argument and fetches keys from device\r\n* `send`: automatically sends transaction to device and waits \r\n\r\nUsage TL&DR:\r\n* clone HWI repo somewhere and launch `bitcoind -signer=../HWI/hwi.py`\r\n* check if you can see your hardware device: `bitcoin-cli enumeratesigners`\r\n* create wallet and auto import keys `bitcoin-cli createwallet \"hww\" true true \"\" true true true`\r\n* display address on device: `bitcoin-cli signerdisplayaddress ...`\r\n* to spend, use `send` RPC and approve transaction on device\r\n\r\nPrerequisites:\r\n- [x] #21127 load wallet flags before everything else\r\n- [x] #21182 remove mostly pointless BOOST_PROCESS macro\r\n\r\nPotentially useful followups:\r\n- GUI support: bitcoin-core/gui#4\r\n- bumpfee support\r\n- (automatically) verify (a subset of) keys on the device after import, through message signing",
          "user": {
            "login": "Sjors",
            "id": 10217,
            "node_id": "MDQ6VXNlcjEwMjE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sjors",
            "html_url": "https://github.com/Sjors",
            "followers_url": "https://api.github.com/users/Sjors/followers",
            "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
            "organizations_url": "https://api.github.com/users/Sjors/orgs",
            "repos_url": "https://api.github.com/users/Sjors/repos",
            "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Sjors/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/47",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/47",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/47/labels",
            "id": 5347322,
            "node_id": "MDk6TWlsZXN0b25lNTM0NzMyMg==",
            "number": 47,
            "state": "closed",
            "title": "22.0",
            "description": "",
            "creator": {
              "login": "MarcoFalke",
              "id": 6399679,
              "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
              "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/MarcoFalke",
              "html_url": "https://github.com/MarcoFalke",
              "followers_url": "https://api.github.com/users/MarcoFalke/followers",
              "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
              "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
              "repos_url": "https://api.github.com/users/MarcoFalke/repos",
              "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 124,
            "created_at": "2020-04-25T00:14:49Z",
            "updated_at": "2021-09-14T07:16:53Z",
            "closed_at": "2021-09-09T12:47:52Z"
          },
          "locked": true,
          "comments": 38,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16546",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/16546",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/16546.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/16546.patch"
          },
          "closed_at": "2021-02-23T16:57:10Z",
          "created_at": "2019-08-04T21:42:31Z",
          "updated_at": "2021-06-11T05:32:48Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-22T01:07:05Z",
      "updated_at": "2020-02-22T01:07:05Z",
      "source": {
        "issue": {
          "id": 476978200,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MzA0Mzk2Nzg2",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16549",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16549/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16549/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16549/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/16549",
          "number": 16549,
          "state": "closed",
          "state_reason": null,
          "title": "UI external signer support (e.g. hardware wallet)",
          "body": "Big picture overview in [this gist](https://gist.github.com/Sjors/29d06728c685e6182828c1ce9b74483d).\r\n\r\nThis PR adds GUI support for external signers. It consists of 7 commits on top of #16546 (RPC).\r\n\r\nThe UX isn't amazing - especially the blocking calls - but it works.\r\n\r\nFirst we adds a GUI setting for the signer script (e.g. path to HWI):\r\n\r\n<img width=\"625\" alt=\"Schermafbeelding 2019-08-05 om 19 32 59\" src=\"https://user-images.githubusercontent.com/10217/62483415-e1ff1680-b7b7-11e9-97ca-8d2ce54ca1cb.png\">\r\n\r\nThen we add an external signer checkbox to the wallet creation dialog:\r\n\r\n<img width=\"374\" alt=\"Schermafbeelding 2019-11-07 om 19 17 23\" src=\"https://user-images.githubusercontent.com/10217/68416387-b57ee000-0194-11ea-9730-127d60273008.png\">\r\n\r\nIt's checked by default if HWI detects a device. It also grabs the name. It then creates a fresh wallet and imports the keys.\r\n\r\nYou can verify an address on the device (blocking...):\r\n<img width=\"673\" alt=\"Schermafbeelding 2019-08-05 om 19 29 22\" src=\"https://user-images.githubusercontent.com/10217/62483560-43bf8080-b7b8-11e9-9902-8a036116dc4b.png\">\r\n\r\nSending, including coin selection, Just Works(tm) as long the device is present. It's a bit weird though: the device will prompt for signing first and the QT confirmation dialog appears after.\r\n\r\nExternal signer support is enabled by default when the GUI is configured and Boost::Process is present.",
          "user": {
            "login": "Sjors",
            "id": 10217,
            "node_id": "MDQ6VXNlcjEwMjE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sjors",
            "html_url": "https://github.com/Sjors",
            "followers_url": "https://api.github.com/users/Sjors/followers",
            "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
            "organizations_url": "https://api.github.com/users/Sjors/orgs",
            "repos_url": "https://api.github.com/users/Sjors/repos",
            "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Sjors/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135946,
              "node_id": "MDU6TGFiZWwxMzU5NDY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/GUI",
              "name": "GUI",
              "color": "02d7e1",
              "default": false
            },
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 11,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16549",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/16549",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/16549.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/16549.patch"
          },
          "closed_at": "2020-06-18T18:13:06Z",
          "created_at": "2019-08-05T17:38:26Z",
          "updated_at": "2022-08-16T17:20:17Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 589933497,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4OTkzMzQ5Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/589933497",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-22T08:43:17Z",
      "updated_at": "2020-02-22T08:43:17Z",
      "author_association": "MEMBER",
      "body": "> Re NAT-PMP preference: Also, with the port number changing every startup, it will be hard for peers to reconnect or meaningfully pass on addr messages for you...\r\n\r\nOnly [`natpmpd`](https://github.com/bodgit/natpmpd) on OpenBSD will change external port number on every startup.\r\n[`miniupnpd`](https://github.com/miniupnp/miniupnp/tree/master/miniupnpd) assigns suggested one, i.e. 8333.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-589933497",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "commented",
      "id": 589969568,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4OTk2OTU2OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/589969568",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-22T16:00:11Z",
      "updated_at": "2020-02-22T16:00:11Z",
      "author_association": "MEMBER",
      "body": "Yes, but UPnP is reliably using the same/requested port if it works.",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-589969568",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3063076679,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzA2MzA3NjY3OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3063076679",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-23T00:48:17Z"
    },
    {
      "event": "commented",
      "id": 590014625,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU5MDAxNDYyNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/590014625",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-23T01:00:57Z",
      "updated_at": "2020-02-23T01:00:57Z",
      "author_association": "MEMBER",
      "body": "Updated dd3229e7af8563c69d26955c4207f73ae1d3bc94 -> d9ecda8fa0ebce5b6da972691b19f4425164ae43 ([pr18077.11](https://github.com/hebasto/bitcoin/commits/pr18077.11) -> [pr18077.12](https://github.com/hebasto/bitcoin/commits/pr18077.12), [compare](https://github.com/hebasto/bitcoin/compare/pr18077.11..pr18077.12)):\r\n\r\n- UPnP is prioritized (as @luke-jr suggested)\r\n- a note about possible random external port number is added to the NAT-PMP tooltip\r\n- commits are split and reordered to make review easier, I hope",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-590014625",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "mentioned",
      "id": 3063081255,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzA2MzA4MTI1NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3063081255",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-23T01:00:57Z"
    },
    {
      "event": "subscribed",
      "id": 3063081257,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMwNjMwODEyNTc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3063081257",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-23T01:00:57Z"
    },
    {
      "event": "mentioned",
      "id": 3063083975,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzA2MzA4Mzk3NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3063083975",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-23T01:08:28Z"
    },
    {
      "event": "subscribed",
      "id": 3063083976,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMwNjMwODM5NzY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3063083976",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-23T01:08:28Z"
    },
    {
      "event": "reviewed",
      "id": 363059461,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzMDU5NDYx",
      "url": null,
      "actor": null,
      "commit_id": "d9ecda8fa0ebce5b6da972691b19f4425164ae43",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#pullrequestreview-363059461",
      "submitted_at": "2020-02-23T01:08:28Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
    },
    {
      "event": "reviewed",
      "id": 363061187,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzMDYxMTg3",
      "url": null,
      "actor": null,
      "commit_id": "acb567e3eecf3e63e629c4bffca2124462142352",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#pullrequestreview-363061187",
      "submitted_at": "2020-02-24T17:22:15Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3070303319,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzA3MDMwMzMxOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3070303319",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-25T17:18:26Z"
    },
    {
      "event": "commented",
      "id": 590977043,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU5MDk3NzA0Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/590977043",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-25T17:27:57Z",
      "updated_at": "2020-02-25T17:27:57Z",
      "author_association": "MEMBER",
      "body": "Updated d9ecda8fa0ebce5b6da972691b19f4425164ae43 -> 405e85c61a6690ff2f7159c51715fdbafcbf2b1e ([pr18077.12](https://github.com/hebasto/bitcoin/commits/pr18077.12) -> [pr18077.13](https://github.com/hebasto/bitcoin/commits/pr18077.13), [compare](https://github.com/hebasto/bitcoin/compare/pr18077.12..pr18077.13)):\r\n\r\n- `StartThread()` renamed to `StartThreadMapPort()` (as @luke-jr [suggested)](https://github.com/bitcoin/bitcoin/pull/18077#discussion_r383498346)\r\n- conditional operator argument types are the same now (https://github.com/bitcoin/bitcoin/pull/18077#discussion_r383034794)\r\n- renamed `MapPortProto` enum to `MapPortProtoFlag` and `g_mapport_target_proto` to `g_mapport_enabled_protos` for better semantics",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-590977043",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "mentioned",
      "id": 3070336320,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzA3MDMzNjMyMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3070336320",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-25T17:27:58Z"
    },
    {
      "event": "subscribed",
      "id": 3070336327,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMwNzAzMzYzMjc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3070336327",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-25T17:27:58Z"
    },
    {
      "event": "reviewed",
      "id": 364543841,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0NTQzODQx",
      "url": null,
      "actor": null,
      "commit_id": "f93e76ad1bb37f8c3b770312c48e7955128bab65",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK, left a few code review nits. I haven't reviewed the actual natpmp interaction code.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#pullrequestreview-364543841",
      "submitted_at": "2020-02-26T00:34:51Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-26T04:55:37Z",
      "updated_at": "2020-02-26T04:55:37Z",
      "source": {
        "issue": {
          "id": 217385623,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MTEyODQ2NDMx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10102",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10102/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10102/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10102/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/10102",
          "number": 10102,
          "state": "open",
          "state_reason": null,
          "title": "Multiprocess bitcoin",
          "body": "This PR is part of the [process separation project](https://github.com/bitcoin/bitcoin/projects/10).\r\n\r\n---\r\n\r\nThis PR adds an `--enable-multiprocess` configure option which builds new `bitcoin-node`, `bitcoin-wallet`, and `bitcoin-gui` executables with relevant functionality isolated into different processes. See [doc/design/multiprocess.md](https://github.com/ryanofsky/bitcoin/tree/pr/ipc/doc/design/multiprocess.md) for usage details and future plans.\r\n\r\nThe change is implemented by adding a new [`Init`](https://github.com/ryanofsky/bitcoin/blob/pr/ipc/src/interfaces/init.h) interface that spawns new wallet and node subprocesses that can be controlled over a [socketpair](http://man7.org/linux/man-pages/man2/socketpair.2.html) by calling [`Node`](https://github.com/ryanofsky/bitcoin/blob/pr/ipc/src/interfaces/node.h), [`Wallet`](https://github.com/ryanofsky/bitcoin/blob/pr/ipc/src/interfaces/wallet.h), and [`ChainClient`](https://github.com/ryanofsky/bitcoin/blob/pr/ipc/src/interfaces/chain.h) methods. When running with split processes, you can see the IPC messages going back and forth in `-debug=1` output. Followup PR's #19460 and #19461 add `-ipcbind` and `-ipcconnect` options that allow more flexibility in how processes are connected.\r\n\r\nThe IPC protocol used is Cap'n Proto, but this could be swapped out for another protocol. Cap'n Proto types and libraries are only accessed in the [src/ipc/capnp/](https://github.com/ryanofsky/bitcoin/tree/pr/ipc/src/ipc/capnp) directory, and not in any public headers or other parts of bitcoin code.\r\n\r\n---\r\n\r\nSlides from a presentation describing this change are available on [google drive](https://docs.google.com/presentation/d/1AeJ-7gD-dItUgs5yH-HoEzLvXaEWe_2ZiGUUxYIXcws/edit). Demo code used in the presentation was from an older version this PR (tag [ipc.21](https://github.com/ryanofsky/bitcoin/releases/tag/pr%2Fipc.21), [commits](https://github.com/ryanofsky/bitcoin/compare/master...pr/ipc.21)).\r\n",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135946,
              "node_id": "MDU6TGFiZWwxMzU5NDY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/GUI",
              "name": "GUI",
              "color": "02d7e1",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 78,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10102",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/10102",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/10102.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/10102.patch"
          },
          "created_at": "2017-03-27T21:48:26Z",
          "updated_at": "2023-06-21T07:40:44Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3072461580,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzA3MjQ2MTU4MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3072461580",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-26T07:37:31Z"
    },
    {
      "event": "commented",
      "id": 591285675,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU5MTI4NTY3NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/591285675",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-26T07:45:59Z",
      "updated_at": "2020-02-26T07:45:59Z",
      "author_association": "MEMBER",
      "body": "Updated 405e85c61a6690ff2f7159c51715fdbafcbf2b1e -> 4e7b9f03b8a3dd02bc9831e77905a8022770c846 ([pr18077.13](https://github.com/hebasto/bitcoin/commits/pr18077.13) -> [pr18077.14](https://github.com/hebasto/bitcoin/commits/pr18077.14), [compare](https://github.com/hebasto/bitcoin/compare/pr18077.13..pr18077.14)):\r\n\r\n- corrected copyright years as @sipa [suggested](https://github.com/bitcoin/bitcoin/pull/18077#discussion_r384206803)\r\n- both `ThreadUpnp()` and `ThreadNatpmp()` renamed to `ProcessUpnp()` and `ProcessNatpmp()` respectively (see @sipa's [comment](https://github.com/bitcoin/bitcoin/pull/18077#discussion_r384207039))\r\n- removed extra parens (thanks to @Empact; see https://github.com/bitcoin/bitcoin/pull/12381#discussion_r167062893)",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-591285675",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "mentioned",
      "id": 3072484236,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzA3MjQ4NDIzNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3072484236",
      "actor": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-26T07:45:59Z"
    },
    {
      "event": "subscribed",
      "id": 3072484237,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMwNzI0ODQyMzc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3072484237",
      "actor": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-26T07:45:59Z"
    },
    {
      "event": "mentioned",
      "id": 3072484245,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzA3MjQ4NDI0NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3072484245",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-26T07:45:59Z"
    },
    {
      "event": "subscribed",
      "id": 3072484246,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMwNzI0ODQyNDY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3072484246",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-26T07:45:59Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-28T07:00:03Z",
      "updated_at": "2020-02-28T07:00:03Z",
      "source": {
        "issue": {
          "id": 518981362,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MzM3ODA4Mzk4",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17399",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17399/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17399/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17399/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/17399",
          "number": 17399,
          "state": "closed",
          "state_reason": null,
          "title": "validation: Templatize ValidationState instead of subclassing",
          "body": "This removes boilerplate code in the subclasses which otherwise only\r\ndiffer by the result type.\r\n\r\nThe subclassing was introduced in a27a295.",
          "user": {
            "login": "jkczyz",
            "id": 4015903,
            "node_id": "MDQ6VXNlcjQwMTU5MDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jkczyz",
            "html_url": "https://github.com/jkczyz",
            "followers_url": "https://api.github.com/users/jkczyz/followers",
            "following_url": "https://api.github.com/users/jkczyz/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jkczyz/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jkczyz/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
            "organizations_url": "https://api.github.com/users/jkczyz/orgs",
            "repos_url": "https://api.github.com/users/jkczyz/repos",
            "events_url": "https://api.github.com/users/jkczyz/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jkczyz/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            },
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 20,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17399",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/17399",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/17399.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/17399.patch"
          },
          "closed_at": "2020-03-01T20:35:45Z",
          "created_at": "2019-11-07T01:16:11Z",
          "updated_at": "2022-02-15T10:41:41Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 3085918136,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDMwODU5MTgxMzY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3085918136",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-01T22:05:35Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3092651732,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzA5MjY1MTczMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3092651732",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-03T15:28:58Z"
    },
    {
      "event": "commented",
      "id": 594010099,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU5NDAxMDA5OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/594010099",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-03T15:29:40Z",
      "updated_at": "2020-03-03T15:29:40Z",
      "author_association": "MEMBER",
      "body": "Rebased after #17399 has been merged.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-594010099",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "unlabeled",
      "id": 3092689819,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzA5MjY4OTgxOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3092689819",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-03T15:37:49Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-05T07:18:06Z",
      "updated_at": "2020-03-05T07:18:06Z",
      "source": {
        "issue": {
          "id": 575944916,
          "node_id": "MDExOlB1bGxSZXF1ZXN0Mzg0MDI5MDE3",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18264",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18264/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18264/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18264/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/18264",
          "number": 18264,
          "state": "closed",
          "state_reason": null,
          "title": "build: Remove Boost Chrono",
          "body": "We no longer use Boost Chrono.",
          "user": {
            "login": "fanquake",
            "id": 863730,
            "node_id": "MDQ6VXNlcjg2MzczMA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fanquake",
            "html_url": "https://github.com/fanquake",
            "followers_url": "https://api.github.com/users/fanquake/followers",
            "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
            "organizations_url": "https://api.github.com/users/fanquake/orgs",
            "repos_url": "https://api.github.com/users/fanquake/repos",
            "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/fanquake/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 10,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18264",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/18264",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/18264.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/18264.patch"
          },
          "closed_at": "2020-03-10T12:24:53Z",
          "created_at": "2020-03-05T02:12:48Z",
          "updated_at": "2022-02-15T10:27:53Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-09T22:39:17Z",
      "updated_at": "2020-03-09T22:39:17Z",
      "source": {
        "issue": {
          "id": 564429464,
          "node_id": "MDExOlB1bGxSZXF1ZXN0Mzc0NjYxMDky",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18134",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18134/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18134/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18134/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/18134",
          "number": 18134,
          "state": "closed",
          "state_reason": null,
          "title": "Replace std::to_string with locale-independent alternative",
          "body": "Addresses #17866 following practicalswift's suggestion:\r\nhttps://github.com/bitcoin/bitcoin/issues/17866#issuecomment-584287299\r\n\r\n~Used ::ToString to avoid aliasing issues. Left uses in QT and test.~",
          "user": {
            "login": "Empact",
            "id": 5470,
            "node_id": "MDQ6VXNlcjU0NzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Empact",
            "html_url": "https://github.com/Empact",
            "followers_url": "https://api.github.com/users/Empact/followers",
            "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
            "organizations_url": "https://api.github.com/users/Empact/orgs",
            "repos_url": "https://api.github.com/users/Empact/repos",
            "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Empact/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 13,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18134",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/18134",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/18134.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/18134.patch"
          },
          "closed_at": "2020-03-25T19:12:28Z",
          "created_at": "2020-02-13T04:19:37Z",
          "updated_at": "2022-02-15T10:42:12Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 3114803116,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDMxMTQ4MDMxMTY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3114803116",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-10T13:54:28Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3119510109,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzExOTUxMDEwOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3119510109",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-11T16:10:46Z"
    },
    {
      "event": "commented",
      "id": 597724976,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU5NzcyNDk3Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/597724976",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-11T16:12:13Z",
      "updated_at": "2020-03-11T16:12:13Z",
      "author_association": "MEMBER",
      "body": "Rebased due to the conflict with merged #18264.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-597724976",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "unlabeled",
      "id": 3119713880,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzExOTcxMzg4MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3119713880",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-11T17:01:36Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-17T02:10:45Z",
      "updated_at": "2020-03-17T02:10:45Z",
      "source": {
        "issue": {
          "id": 354056711,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjEwOTI5MjE5",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14066",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14066/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14066/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14066/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/14066",
          "number": 14066,
          "state": "closed",
          "state_reason": null,
          "title": "gitian-linux: Build binaries for 64-bit POWER",
          "body": "A set of both big and little endian binaries, should be compatible with PowerPC 970 (Apple G5) and newer.\r\n\r\n~~Also splits libpng out of Qt (since Qt's bundled copy is broken on POWER) and disables JPEG (since we don't use it).~~\r\n\r\nTested only the little endian variant, on Gentoo.\r\n\r\n~~(Based on #14065)~~",
          "user": {
            "login": "luke-jr",
            "id": 1095675,
            "node_id": "MDQ6VXNlcjEwOTU2NzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/luke-jr",
            "html_url": "https://github.com/luke-jr",
            "followers_url": "https://api.github.com/users/luke-jr/followers",
            "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
            "organizations_url": "https://api.github.com/users/luke-jr/orgs",
            "repos_url": "https://api.github.com/users/luke-jr/repos",
            "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/luke-jr/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/47",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/47",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/47/labels",
            "id": 5347322,
            "node_id": "MDk6TWlsZXN0b25lNTM0NzMyMg==",
            "number": 47,
            "state": "closed",
            "title": "22.0",
            "description": "",
            "creator": {
              "login": "MarcoFalke",
              "id": 6399679,
              "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
              "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/MarcoFalke",
              "html_url": "https://github.com/MarcoFalke",
              "followers_url": "https://api.github.com/users/MarcoFalke/followers",
              "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
              "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
              "repos_url": "https://api.github.com/users/MarcoFalke/repos",
              "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 124,
            "created_at": "2020-04-25T00:14:49Z",
            "updated_at": "2021-09-14T07:16:53Z",
            "closed_at": "2021-09-09T12:47:52Z"
          },
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 34,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14066",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/14066",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/14066.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/14066.patch"
          },
          "closed_at": "2021-01-19T13:45:19Z",
          "created_at": "2018-08-26T01:38:23Z",
          "updated_at": "2022-08-18T17:14:10Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-18T15:23:39Z",
      "updated_at": "2020-03-18T15:23:39Z",
      "source": {
        "issue": {
          "id": 583788206,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MzkwNDg1NDgx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18377",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18377/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18377/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18377/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/18377",
          "number": 18377,
          "state": "closed",
          "state_reason": null,
          "title": "build: fix libevent linking errors for bench-only builds",
          "body": "This PR fixes the linking errors for bench-only builds by adding a **-levent** flag to EVENT_LIBS.\r\n\r\nAdditionally, it fixes a typo in **$(EVENT_CFLAGS)** and removes the double **$(LIBBITCOIN_SERVER)** linking entry, because a similar one was also fixed in the Makefile.am: https://github.com/bitcoin/bitcoin/pull/17910 \r\n\r\nFixes https://github.com/bitcoin/bitcoin/issues/18373",
          "user": {
            "login": "brakmic",
            "id": 56779,
            "node_id": "MDQ6VXNlcjU2Nzc5",
            "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brakmic",
            "html_url": "https://github.com/brakmic",
            "followers_url": "https://api.github.com/users/brakmic/followers",
            "following_url": "https://api.github.com/users/brakmic/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/brakmic/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/brakmic/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
            "organizations_url": "https://api.github.com/users/brakmic/orgs",
            "repos_url": "https://api.github.com/users/brakmic/repos",
            "events_url": "https://api.github.com/users/brakmic/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/brakmic/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 8,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18377",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/18377",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/18377.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/18377.patch"
          },
          "closed_at": "2020-03-25T08:00:30Z",
          "created_at": "2020-03-18T14:56:01Z",
          "updated_at": "2022-02-15T10:42:09Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-20T01:01:20Z",
      "updated_at": "2020-03-20T01:01:20Z",
      "source": {
        "issue": {
          "id": 575726877,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MzgzODM3MDY2",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18261",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18261/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18261/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18261/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/18261",
          "number": 18261,
          "state": "closed",
          "state_reason": null,
          "title": "Erlay: bandwidth-efficient transaction relay protocol",
          "body": "This is an implementation of [Erlay](https://arxiv.org/abs/1905.10518), using primitives in the BIP-330 (see the updated spec [here](https://github.com/naumenkogs/bips/blob/bip_0330_updates/bip-0330.mediawiki)). Please refer to these two to understand the design. My talk on the topic is [here](https://youtu.be/YxsjdIl0034?t=670).\r\n\r\nErlay uses both flooding (announcing using INV messages to all peers) and reconciliation to announce transactions. Flooding is expensive, so Erlay seeks to use it sparingly and in strategic locations - only well-connected publicly reachable nodes flood transactions to other publicly reachable nodes via outbound connections. Since every unreachable node is directly connected to several reachable nodes, this policy ensures that a transaction is quickly propagated to be within one hop from most of the nodes in the network.\r\n\r\nAll transactions not propagated through flooding are propagated through efficient set reconciliation. To do this, every node keeps a reconciliation set for each peer, in which transactions are placed which would have been announced using INV messages absent this protocol. Every 2 seconds every node chooses a peer from its outbound connections in a predetermined order to reconcile with, resulting in both sides learning the transactions known to the other side. After every reconciliation round, the corresponding reconciliation set is cleared.\r\n\r\nI think both paper and the BIP motives the changes, but I'll mention them briefly once again here:\r\n- save 40% of the bandwidth consumed by a node\r\n- increase network connectivity for almost no bandwidth or latency cost\r\n- improves privacy as a side-effect\r\n\r\nObviously looking for review, let's try to start with a high-level concerns, and keep nits for later.\r\n\r\nP.S.\r\nPlease don't be scared of 8,000 LOC added. 7,000 of them is minisketch added as a subtree.\r\n\r\nP.P.S.\r\nMy experiments of running this code live (slightly outdated) with a script to replicate the experiment: [here1](https://github.com/bitcoin/bitcoin/pull/18261#issuecomment-599241490) and [here2](https://github.com/bitcoin/bitcoin/pull/18261#issuecomment-600388543).\r\n",
          "user": {
            "login": "naumenkogs",
            "id": 7975071,
            "node_id": "MDQ6VXNlcjc5NzUwNzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/naumenkogs",
            "html_url": "https://github.com/naumenkogs",
            "followers_url": "https://api.github.com/users/naumenkogs/followers",
            "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
            "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
            "repos_url": "https://api.github.com/users/naumenkogs/repos",
            "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 38,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18261",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/18261",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/18261.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/18261.patch"
          },
          "closed_at": "2021-03-23T22:51:05Z",
          "created_at": "2020-03-04T20:01:31Z",
          "updated_at": "2022-08-16T17:22:24Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-24T16:18:07Z",
      "updated_at": "2020-03-24T16:18:07Z",
      "source": {
        "issue": {
          "id": 587071261,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MzkzMDgyODYz",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18421",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18421/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18421/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18421/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/18421",
          "number": 18421,
          "state": "closed",
          "state_reason": null,
          "title": "Periodically update DNS caches for better privacy of non-reachable nodes",
          "body": "Every time a fresh Bitcoin Core node starts, it makes a DNS query to learn about nodes in the network. This process leaks the privacy of those new nodes: every required DNS server and the corresponding infrastructure would be aware that a new node was spinned up in a particular internet segment.\r\nThe goal of this proposal is to reduce the number of those actors learning about a new node.\r\nThe way to achieve it is to keep DNS server caches updated, so that new nodes rarely hit anything past the early servers.\r\n\r\nTo keep them updated, every reachable node would periodically make all widely used DNS queries, thus, triggering DNS cache updates on the resolvers appearing on their path to the end DNS servers.\r\nThis, obviously, would leak more information about the existence of these reachable nodes. We think this is no big deal, because those nodes are already easy to find, since they are reachable.\r\n\r\nNote that this helps only to those private nodes, which share a subnet with some reachable node running this code.\r\n\r\nIn future, it would be great to analyze the results of those queries against a local AddrMan to check for anomalies.\r\n\r\nThe idea was originally proposed by Greg Maxwell.",
          "user": {
            "login": "naumenkogs",
            "id": 7975071,
            "node_id": "MDQ6VXNlcjc5NzUwNzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/naumenkogs",
            "html_url": "https://github.com/naumenkogs",
            "followers_url": "https://api.github.com/users/naumenkogs/followers",
            "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
            "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
            "repos_url": "https://api.github.com/users/naumenkogs/repos",
            "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "comments": 12,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18421",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/18421",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/18421.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/18421.patch"
          },
          "closed_at": "2021-09-29T10:35:54Z",
          "created_at": "2020-03-24T15:58:12Z",
          "updated_at": "2022-10-30T19:10:31Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 3165512925,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDMxNjU1MTI5MjU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3165512925",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-25T19:47:05Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3175223156,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzE3NTIyMzE1Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3175223156",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-28T18:48:29Z"
    },
    {
      "event": "commented",
      "id": 605503139,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYwNTUwMzEzOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/605503139",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-28T18:50:18Z",
      "updated_at": "2020-03-28T18:50:18Z",
      "author_association": "MEMBER",
      "body": "Rebased 4be5c3c72d98b616367d1aa3de22702e6f9f81ee -> 1bf61f0557637b5bedd670a4fba7bb11bf42ac6a due to the conflicts with #18134 and #18438.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-605503139",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-28T20:21:58Z",
      "updated_at": "2020-03-28T20:21:58Z",
      "source": {
        "issue": {
          "id": 589229249,
          "node_id": "MDExOlB1bGxSZXF1ZXN0Mzk0ODMyODU5",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18450",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18450/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18450/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18450/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/18450",
          "number": 18450,
          "state": "closed",
          "state_reason": null,
          "title": "util: Use locale independent ToString(…) instead of locale dependent strprintf(…) for low-level string formatting",
          "body": "Use locale independent `ToString(…)` instead of locale dependent `strprintf(…)` for low-level string formatting.\r\n\r\nContext: See sipas comment in https://github.com/bitcoin/bitcoin/pull/18147#issuecomment-604727148.\r\n\r\nExample taken from #18281:\r\n\r\n> Low level functions `ScriptToAsmStr` (`core_io`), `i64tostr` (`strencodings`) and `itostr` (`strencodings`) are locale dependent:\r\n> \r\n> ```c++\r\n> const std::vector<uint8_t> b{0x6a, 0x4, 0xff, 0xff, 0xff, 0xff};\r\n> const CScript script{b.begin(), b.end()};\r\n> for (const std::string& locale_string : {\"C\", \"de_DE\"}) {\r\n>     std::locale::global(std::locale(locale_string));\r\n>     std::cout << \"[\" << locale_string << \"] ScriptToAsmStr(script, false) == \" \r\n>         << ScriptToAsmStr(script, false) << \"\\n\";\r\n> }\r\n> ```\r\n> \r\n> ```\r\n> [C] ScriptToAsmStr(script, false) == OP_RETURN -2147483647\r\n> [de_DE] ScriptToAsmStr(script, false) == OP_RETURN -2.147.483.647\r\n> ```\r\n\r\nFixes #18281.",
          "user": {
            "login": "practicalswift",
            "id": 7826565,
            "node_id": "MDQ6VXNlcjc4MjY1NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/practicalswift",
            "html_url": "https://github.com/practicalswift",
            "followers_url": "https://api.github.com/users/practicalswift/followers",
            "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
            "organizations_url": "https://api.github.com/users/practicalswift/orgs",
            "repos_url": "https://api.github.com/users/practicalswift/repos",
            "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/practicalswift/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 12,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18450",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/18450",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/18450.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/18450.patch"
          },
          "closed_at": "2020-05-30T10:43:42Z",
          "created_at": "2020-03-27T15:52:00Z",
          "updated_at": "2022-08-16T17:19:35Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "unlabeled",
      "id": 3175315390,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzE3NTMxNTM5MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3175315390",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-28T20:45:07Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-03T19:45:39Z",
      "updated_at": "2020-04-03T19:45:39Z",
      "source": {
        "issue": {
          "id": 593315428,
          "node_id": "MDExOlB1bGxSZXF1ZXN0Mzk4MTE5MTM1",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18514",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18514/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18514/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18514/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/18514",
          "number": 18514,
          "state": "closed",
          "state_reason": null,
          "title": "test: remove rapidcheck integration and tests",
          "body": "Whilst the property tests are interesting, ultimately [rapidcheck](https://github.com/emil-e/rapidcheck) integration in this repository has not gained much traction. We have a limited number of tests, and they are rarely (if ever) run. Have discussed this with Chris Stewart.",
          "user": {
            "login": "fanquake",
            "id": 863730,
            "node_id": "MDQ6VXNlcjg2MzczMA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fanquake",
            "html_url": "https://github.com/fanquake",
            "followers_url": "https://api.github.com/users/fanquake/followers",
            "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
            "organizations_url": "https://api.github.com/users/fanquake/orgs",
            "repos_url": "https://api.github.com/users/fanquake/repos",
            "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/fanquake/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 14,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18514",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/18514",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/18514.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/18514.patch"
          },
          "closed_at": "2020-04-06T01:48:44Z",
          "created_at": "2020-04-03T11:29:37Z",
          "updated_at": "2022-02-15T10:42:25Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 3203371338,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDMyMDMzNzEzMzg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3203371338",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-06T02:10:22Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3224046261,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzIyNDA0NjI2MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3224046261",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-11T13:10:38Z"
    },
    {
      "event": "commented",
      "id": 612418519,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYxMjQxODUxOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/612418519",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-11T13:13:16Z",
      "updated_at": "2020-04-11T13:13:16Z",
      "author_association": "MEMBER",
      "body": "Rebased 1bf61f0557637b5bedd670a4fba7bb11bf42ac6a -> 607144bab1aecb8b970e17aeb145d62175d58c4c ([pr18077.17](https://github.com/hebasto/bitcoin/commits/pr18077.17) -> [pr18077.18](https://github.com/hebasto/bitcoin/commits/pr18077.18)) due to the conflicts with #18514 and #16367.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-612418519",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "unlabeled",
      "id": 3224059613,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzIyNDA1OTYxMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3224059613",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-11T13:26:50Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3224129011,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzIyNDEyOTAxMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3224129011",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-11T14:41:41Z"
    },
    {
      "event": "commented",
      "id": 612436848,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYxMjQzNjg0OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/612436848",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-11T14:43:35Z",
      "updated_at": "2020-04-11T14:43:35Z",
      "author_association": "MEMBER",
      "body": "Rebased 607144bab1aecb8b970e17aeb145d62175d58c4c -> a388fae1dca9b4983bc95d50d07503aae527f29e ([pr18077.18](https://github.com/hebasto/bitcoin/commits/pr18077.18) -> [pr18077.19](https://github.com/hebasto/bitcoin/commits/pr18077.19)) due to the conflict with #18588.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-612436848",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "milestoned",
      "id": 3224269524,
      "node_id": "MDE1Ok1pbGVzdG9uZWRFdmVudDMyMjQyNjk1MjQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3224269524",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-11T17:05:32Z",
      "milestone": {
        "title": "0.21.0"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-11T19:43:03Z",
      "updated_at": "2020-04-11T19:43:03Z",
      "source": {
        "issue": {
          "id": 596930085,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDAxMTM2MDAw",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18571",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18571/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18571/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18571/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/18571",
          "number": 18571,
          "state": "closed",
          "state_reason": null,
          "title": "fuzz: Disable debug log file",
          "body": "There are several issues with writing to a debug log file when fuzzing:\r\n\r\n* Disk access is slow, but fuzzing should be fast (Note: I could not verify this claim with data)\r\n* Disks have a limited size and will eventually run out of space, but fuzzing should run continuous\r\n\r\nFix both issues by disabling the debug log file for fuzz tests",
          "user": {
            "login": "MarcoFalke",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarcoFalke",
            "html_url": "https://github.com/MarcoFalke",
            "followers_url": "https://api.github.com/users/MarcoFalke/followers",
            "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
            "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
            "repos_url": "https://api.github.com/users/MarcoFalke/repos",
            "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 5,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18571",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/18571",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/18571.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/18571.patch"
          },
          "closed_at": "2020-04-15T21:43:50Z",
          "created_at": "2020-04-08T23:52:53Z",
          "updated_at": "2022-02-15T10:29:25Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-14T14:10:43Z",
      "updated_at": "2020-04-14T14:10:43Z",
      "source": {
        "issue": {
          "id": 573962151,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MzgyMzczOTM3",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18242",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18242/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18242/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18242/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/18242",
          "number": 18242,
          "state": "closed",
          "state_reason": null,
          "title": "Add BIP324 encrypted p2p transport de-/serializer (only used in tests)",
          "body": "BIP324 is [here](https://gist.github.com/jonasschnelli/c530ea8421b8d0e80c51486325587c52) (not submitted to the BIP repository since it's still under work).\r\n\r\nThis PR adds a message transport de-/serializer for encrypted message after BIP324.\r\n\r\n**Includes:**\r\n* correct AEAD handling\r\n* short command IDs\r\n\r\n**Excludes (to keep it reviewable):**\r\n* The handshake (pubkey exchange [subject to change due to downgrade attack prevention])\r\n* ECDH (enabling libsecp256k1 & `CKey` implementation)\r\n* service flag and a way to globally enable it\r\n\r\n**The code is exclusively used in the tests**\r\n\r\n**This is based on #20962 (please review first)**",
          "user": {
            "login": "jonasschnelli",
            "id": 178464,
            "node_id": "MDQ6VXNlcjE3ODQ2NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonasschnelli",
            "html_url": "https://github.com/jonasschnelli",
            "followers_url": "https://api.github.com/users/jonasschnelli/followers",
            "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
            "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
            "repos_url": "https://api.github.com/users/jonasschnelli/repos",
            "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignee": {
            "login": "jonasschnelli",
            "id": 178464,
            "node_id": "MDQ6VXNlcjE3ODQ2NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonasschnelli",
            "html_url": "https://github.com/jonasschnelli",
            "followers_url": "https://api.github.com/users/jonasschnelli/followers",
            "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
            "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
            "repos_url": "https://api.github.com/users/jonasschnelli/repos",
            "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
            "type": "User",
            "site_admin": false
          },
          "assignees": [
            {
              "login": "jonasschnelli",
              "id": 178464,
              "node_id": "MDQ6VXNlcjE3ODQ2NA==",
              "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/jonasschnelli",
              "html_url": "https://github.com/jonasschnelli",
              "followers_url": "https://api.github.com/users/jonasschnelli/followers",
              "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
              "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
              "repos_url": "https://api.github.com/users/jonasschnelli/repos",
              "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
              "type": "User",
              "site_admin": false
            }
          ],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "comments": 38,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18242",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/18242",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/18242.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/18242.patch"
          },
          "closed_at": "2021-08-18T12:24:18Z",
          "created_at": "2020-03-02T13:07:43Z",
          "updated_at": "2022-10-30T19:10:31Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 3237653489,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDMyMzc2NTM0ODk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3237653489",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-15T23:46:41Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3240850498,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzI0MDg1MDQ5OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3240850498",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-16T16:49:42Z"
    },
    {
      "event": "commented",
      "id": 614770003,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYxNDc3MDAwMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/614770003",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-16T16:51:20Z",
      "updated_at": "2020-04-16T16:51:20Z",
      "author_association": "MEMBER",
      "body": "Rebased a388fae1dca9b4983bc95d50d07503aae527f29e -> 95e943cb1855dca3ed5fb4fd98b357515d1a3646 ([pr18077.19](https://github.com/hebasto/bitcoin/commits/pr18077.19) -> [pr18077.20](https://github.com/hebasto/bitcoin/commits/pr18077.20)) due to the conflict with #18571.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-614770003",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "unlabeled",
      "id": 3241213243,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzI0MTIxMzI0Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3241213243",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-16T18:23:40Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-16T22:41:26Z",
      "updated_at": "2020-04-16T22:41:26Z",
      "source": {
        "issue": {
          "id": 601452816,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDA0NzEzMDky",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18677",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18677/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18677/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18677/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/18677",
          "number": 18677,
          "state": "closed",
          "state_reason": null,
          "title": "Multiprocess build support",
          "body": "This PR is part of the [process separation project](https://github.com/bitcoin/bitcoin/projects/10).\r\n\r\n---\r\n\r\nThis PR consists of build changes only. It adds an `--enable-multiprocess` autoconf option (off by default and marked experimental), that builds new `bitcoin-node` and `bitcoin-gui` binaries. These currently function the same as existing `bitcoind` and `bitcoin-qt` binaries, but are extended in #10102 with IPC features to execute node, wallet, and gui functions in separate processes.\r\n\r\nIn addition to adding the `--enable-multiprocess` config flag, it also adds a depends package and autoconf rules to build with the [libmultiprocess](https://github.com/chaincodelabs/libmultiprocess) library, and it adds new travis configuration to exercise the build code and run functional tests with the new binaries.\r\n\r\nThe changes in this PR were originally part of #10102 but were moved into #16367 to be able to develop and review the multiprocess build changes independently of the code changes. #16367 was briefly merged and then reverted in #18588. Only change since #16367 has been dropping the `native_boost.mk` depends package which was pointed out to be no longer necessary in https://github.com/bitcoin/bitcoin/pull/16367#issuecomment-596484337 and https://github.com/bitcoin/bitcoin/pull/18588#pullrequestreview-391765649",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 20,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18677",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/18677",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/18677.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/18677.patch"
          },
          "closed_at": "2020-05-21T07:35:14Z",
          "created_at": "2020-04-16T20:44:38Z",
          "updated_at": "2022-02-15T10:31:45Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-16T22:42:13Z",
      "updated_at": "2020-04-16T22:42:13Z",
      "source": {
        "issue": {
          "id": 601421283,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDA0Njg1NDM0",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18676",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18676/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18676/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18676/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/18676",
          "number": 18676,
          "state": "closed",
          "state_reason": null,
          "title": "build: Check libevent minimum version in configure script",
          "body": "The non-`pkg-config` path is ignored as there is a hope to get rid of all of them in #18307.\r\n\r\nAs xenial has [libevent 2.0.21](https://packages.ubuntu.com/xenial-updates/libevent-2.0-5) only, the default bionic Docker image is used in the _\"[no depends, only system libs, sanitizers: thread (TSan), no wallet]\"_ CI test.",
          "user": {
            "login": "hebasto",
            "id": 32963518,
            "node_id": "MDQ6VXNlcjMyOTYzNTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hebasto",
            "html_url": "https://github.com/hebasto",
            "followers_url": "https://api.github.com/users/hebasto/followers",
            "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
            "organizations_url": "https://api.github.com/users/hebasto/orgs",
            "repos_url": "https://api.github.com/users/hebasto/repos",
            "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/hebasto/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 18,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18676",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/18676",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/18676.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/18676.patch"
          },
          "closed_at": "2020-04-20T16:43:32Z",
          "created_at": "2020-04-16T20:12:17Z",
          "updated_at": "2022-02-15T10:31:08Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-19T13:09:32Z",
      "updated_at": "2020-04-19T13:09:32Z",
      "source": {
        "issue": {
          "id": 602707804,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDA1NjU5ODEw",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18705",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18705/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18705/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18705/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/18705",
          "number": 18705,
          "state": "closed",
          "state_reason": null,
          "title": "ci: Remove xenial tsan workaround",
          "body": "",
          "user": {
            "login": "MarcoFalke",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarcoFalke",
            "html_url": "https://github.com/MarcoFalke",
            "followers_url": "https://api.github.com/users/MarcoFalke/followers",
            "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
            "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
            "repos_url": "https://api.github.com/users/MarcoFalke/repos",
            "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 1,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18705",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/18705",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/18705.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/18705.patch"
          },
          "closed_at": "2020-04-20T14:19:51Z",
          "created_at": "2020-04-19T12:53:25Z",
          "updated_at": "2022-02-15T11:08:24Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 3252538383,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDMyNTI1MzgzODM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3252538383",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-20T16:21:06Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3253173917,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzI1MzE3MzkxNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3253173917",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-20T19:08:31Z"
    },
    {
      "event": "commented",
      "id": 616752414,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYxNjc1MjQxNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/616752414",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-20T19:10:31Z",
      "updated_at": "2020-04-20T19:10:31Z",
      "author_association": "MEMBER",
      "body": "Rebased 95e943cb1855dca3ed5fb4fd98b357515d1a3646 -> f4a4643712eca819a5b7ed0a143216e06125d1a9 ([pr18077.20](https://github.com/hebasto/bitcoin/commits/pr18077.20) -> [pr18077.21](https://github.com/hebasto/bitcoin/commits/pr18077.21)) due to the conflicts with #18676 and #18705.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-616752414",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "unlabeled",
      "id": 3253461095,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzI1MzQ2MTA5NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3253461095",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-20T20:30:14Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-14T12:21:16Z",
      "updated_at": "2020-05-14T12:21:16Z",
      "source": {
        "issue": {
          "id": 617645298,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDE3NTIyNDg4",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18968",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18968/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18968/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18968/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/18968",
          "number": 18968,
          "state": "closed",
          "state_reason": null,
          "title": "doc: noban precludes maxuploadtarget disconnects",
          "body": "Whitelisting has been replaced by permission flags, so properly document this. See also #10131 ",
          "user": {
            "login": "MarcoFalke",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarcoFalke",
            "html_url": "https://github.com/MarcoFalke",
            "followers_url": "https://api.github.com/users/MarcoFalke/followers",
            "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
            "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
            "repos_url": "https://api.github.com/users/MarcoFalke/repos",
            "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 148216,
              "node_id": "MDU6TGFiZWwxNDgyMTY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Docs",
              "name": "Docs",
              "color": "02d7e1",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 7,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18968",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/18968",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/18968.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/18968.patch"
          },
          "closed_at": "2020-06-06T13:53:07Z",
          "created_at": "2020-05-13T17:59:23Z",
          "updated_at": "2022-02-15T10:45:29Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-16T17:52:34Z",
      "updated_at": "2020-05-16T17:52:34Z",
      "source": {
        "issue": {
          "id": 619442451,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDE4OTUwNzA0",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18988",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18988/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18988/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18988/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/18988",
          "number": 18988,
          "state": "closed",
          "state_reason": null,
          "title": "RFC: Introducing AltNet, a pluggable framework for alternative transports",
          "body": "**As of 14/03/2022 (chain tip hash : 00000000000000000000628002621832be9281faf72c394e66a8bc8446f80c75), this project is under implementation in separate process relying on the multiprocess framework. See https://github.com/chaincodelabs/libmultiprocess/issues/56 for more information on current state.**\r\n\r\nThis PR proposes to introduce a new subsystem aiming towards providing a generic framework for integrating alternative transport communication channels inside Bitcoin Core. This PR is a functional proof-of-concept using LN transport protocol as a new link layer for header fetching. See https://github.com/bitcoin/bitcoin/issues/18989 for high-level discussion and proposal merits.\r\n\r\n## The Design \r\n\r\nPrevious [work](https://github.com/bitcoin/bitcoin/pull/17376) has been attempted to increase network security and robustness by increasing communication redundancy. While being optional and fault-tolerant, these attempt don't scale well to integrate a wide-range of alternatives such as [domain-fronting](https://www.bamsoftware.com/papers/fronting/), [orbital communications](https://github.com/Blockstream/satellite), [amateur radio](https://en.wikipedia.org/wiki/DASH7), [Tor pluggable transports](https://snowflake.torproject.org/), unlicensed UHF, Bluetooth, [I2P](https://geti2p.net/en/), Lightning[ Noise transport](http://noiseprotocol.org/), ... Each of these transports has its own availability, latency, don't bind to the Berkeley sockets model, are unidirectional, require custom peer discovery, are not suited for block traffic, ...\r\n\r\nThis proposal tries to overcome these issues by laying out a generic \"driver\" framework with its own new processing stack, thereby encapsulating per-transport oddities. It introduces:\r\n\r\n* Per-transport capabilities (`TransportCapabilities`). Originally declared by each driver, they abstract driver specifities to general flags, like directionality, protocol messages scope. They could be extended with further attributes, like max bandwidth for adjusted packing or \"privacy\"/\"trustness\" niceness of the link.\r\n* Abstract driver model (`CDriver`). Basically, it dissociate driver warmup, message preprocessing, sending and reception. Ideally you would want to load them dynamically.\r\n* \"Anycast\" header-fetching (`AltLogicValidation::BlockHeaderAnomalie`). After notification from the [watchdog module](https://github.com/bitcoin/bitcoin/pull/18987), it sends a `GETHEADERS` message to any peers supporting bidirectionality and headers processing.\r\n* Alternative processing stack (`AltLogicValidation`). Relying on its own threads, it manages drivers and may take action based on static logical capabilites instead of peer state, reducing likelihood of bugs. In the future, one could implement a more robust headers-syncing strategy like reverse-header or compressed headers. It may also leverage a [future asynchronous validation interface](https://github.com/bitcoin/bitcoin/pull/18963).\r\n\r\nThere are many advantages of this kind of design --, it is easy to integrate new drivers binding to an abstract class, it is easy to reason about due to logical capabilities and at the same time provides granular tuning due to the fine-integration with rpc. Peer discovery and policy or bandwidth/memory DoS-protection are all possible driver add-ons as well. One could envision an rpc like `sendemergencytx`, broadcasting a transaction on any transport protocol available, like a [LN's justice transaction](https://github.com/lightningnetwork/lightning-rfc/blob/master/05-onchain.md#revoked-transaction-close-handling) after detection of being eclipsed.\r\n\r\nThis module could be made entirely optional at compile-time with `--enable-altnet` even if such integration with the build system hasn't been made.\r\n\r\nObviously this is an exploratory PoC, I don't expect code here to be merged. Beyond worthiness of doing this in Rust there are a lot of open questions, including the threading/memory model, interface with existing codebase, build system, resources consumption and fault-tolerance. As next steps, I would favor building on the multiprocess work and hosting this new network stack in its own to avoid any bug contamination from introducing complex driver. I encourage those with opinions on the higher level motivation and design discussion to leave their ideas on the linked issue.\r\n\r\nHigh-level design:\r\n\r\n\r\n              ___________            ______________________\r\n             |           |          |                      |\r\n             | CWatchdog |----------|  AltLogicValidation  |\r\n             |___________|          |______________________|\r\n                                               |\r\n                                         ______|______\r\n                                        |             |\r\n                                        |  CAltstack  |                                                         \r\n                                        |_____________| \r\n                                               |\r\n                                           ____|____\r\n                                          |         |\r\n                                          | CDriver |\r\n                                          |_________|\r\n                                               |\r\n                                       ________|__________\r\n                                      |                  |\r\n                                      | ClightningDriver |\r\n                                      |__________________|\r\n                                      \r\n                                                   \r\n\r\n## The Demo\r\n\r\nThis PoC features a header-fetching round-trip, leveraging LN connection protocol. Each LN node connects to its peers through an encrypted and authenticated channel. Since your LN peer must have chain access, you could leverage this privileged link to create a redundant chain access.\r\n\r\nUsing C-lightning [custom LN message support](https://github.com/ElementsProject/lightning/pull/3315) and [plugin API](https://github.com/ElementsProject/lightning/blob/master/doc/PLUGINS.md), we could embed directly inside `HEADERS`/`GETHEADERS` and realize a round-trip between 2 disconnected bitcoin nodes through their respective C-lightning nodes.\r\n\r\nFor this to work, you need to compile and run 2 C-lightning nodes,  each with its own data directory and launched with this [custom bridge plugin](https://github.com/ariard/bridge-layer). Once those LN nodes are running, activate bridges by `lightning-cli alice_on` and `lightning-cli bob_on`. The plugin doesn't seem to accept CLI argument so I had to hardcode some node addresses.\r\n\r\nThen compile 2 bitcoin nodes with this patchset. For one of them you must change the hardcoded port in C-lightning driver and deactivate the watchdog logic. Also, it would be best if you changed `SCAN_INTERVAL` to something reasonable, for instance 1 min.\r\n\r\nHigh-level setup:\r\n\r\n\r\n                                                 -->\r\n\r\n                    __________          LN_msg(`GETHEADERS`)                   ________\r\n                   |          |                                               |        |\r\n                   | CL-Alice |-----------------------------------------------| CL-Bob |\r\n                   |__________|                                               |________|           \r\n                        |               LN_msg(`HEADERS`)                         |\r\n                    ____|_____                                                 ___|_____\r\n                   |          |                 <--                           |         |\r\n                   |  bridge  |                                               | bridge  |\r\n                   |__________|                                               |_________|\r\n                        |                                                         |\r\n                    ____|_____                                                 ___|____\r\n                   |          |                                               |        |\r\n                   | BC-Alice |                                               | BC-Bob |\r\n                   |__________|                                               |________|\r\n\r\n                      HEIGHT                                                   HEIGH + 1\r\n\r\n\r\n\r\nRunning both nodes, they should automatically connect to the bridge, and after anomaly detection realize a header exchange, if one of them is at least one block forward (run `generatetoaddress 1 $ADDR`).\r\n\r\nOtherwise you may observe past logs:\r\n\r\nAlice:\r\n```\r\nÊ0-05-16T00:55:11Z Boostrapping Altstack\r\n2020-05-16T00:55:11Z init message: Done loading\r\n2020-05-16T00:55:11Z msghand thread start\r\n2020-05-16T00:55:11Z drivers-warmup thread start\r\n2020-05-16T00:55:11Z addcon thread start\r\n2020-05-16T00:55:11Z Registered driver with 0\r\n2020-05-16T00:55:11Z net thread start\r\n2020-05-16T00:55:11Z altstack-processing thread start\r\n2020-05-16T00:55:11Z Clightning - Warmup\r\n2020-05-16T00:55:11Z dnsseed thread start\r\n2020-05-16T00:55:11Z altstack-handle thread start\r\n2020-05-16T00:55:11Z 0 addresses found from DNS seeds\r\n2020-05-16T00:55:11Z dnsseed thread exit\r\n2020-05-16T00:55:11Z Clightning - Bridge connection\r\n2020-05-16T00:55:11Z Registering node_id 0 with driver_id 0\r\n2020-05-16T00:55:11Z drivers-warmup thread exit\r\n2020-05-16T00:55:16Z Block header anomalie detected - notifying subscribers\r\n2020-05-16T00:55:16Z Block header anomalie detected - Anycasting header fetching from 0f9188f13cb7b2c71f2a335e3a4fc328bf5beb436012afca590b1a11466e2206\r\n2020-05-16T00:55:16Z Clightning - Preprocessing getheader\r\n2020-05-16T00:55:16Z Cligthning - Bridge send success 71\r\n2020-05-16T00:55:19Z Cligtning - Bridge receive success\r\n2020-05-16T00:55:19Z Receive HEADERS from 0\r\n2020-05-16T00:55:19Z Receiver header 65084efeaffe9929de0a0bb747cf48ac7f9b4edb214b2d1ad2ea468977be8e1e vs tip 0f9188f13cb7b2c71f2a335e3a4fc328bf5beb436012afca590b1a11466e2206\r\n```\r\n\r\nBob:\r\n``` \r\n2020-05-16T00:55:09Z Boostrapping Altstack\r\n2020-05-16T00:55:09Z addcon thread start\r\n2020-05-16T00:55:09Z opencon thread start\r\n2020-05-16T00:55:09Z msghand thread start\r\n2020-05-16T00:55:09Z drivers-warmup thread start\r\n2020-05-16T00:55:09Z Registered driver with 0\r\n2020-05-16T00:55:09Z Clightning - Warmup\r\n2020-05-16T00:55:09Z init message: Done loading\r\n2020-05-16T00:55:09Z dnsseed thread exit\r\n2020-05-16T00:55:09Z altstack-processing thread start\r\n2020-05-16T00:55:09Z altstack-handle thread start\r\n2020-05-16T00:55:09Z Clightning - Bridge connection\r\n2020-05-16T00:55:09Z Registering node_id 0 with driver_id 0\r\n2020-05-16T00:55:09Z drivers-warmup thread exit\r\n2020-05-16T00:55:10Z Leaving InitialBlockDownload (latching to false)\r\n2020-05-16T00:55:17Z Cligtning - Bridge receive success\r\n2020-05-16T00:55:17Z Receive GETHEADERS from 0\r\n2020-05-16T00:55:17Z Fetch header starting from 0f9188f13cb7b2c71f2a335e3a4fc328bf5beb436012afca590b1a11466e2206, tip 65084efeaffe9929de0a0bb747cf48ac7f9b4edb214b2d1ad2ea468977be8e1e\r\n2020-05-16T00:55:17Z Sending back 1 headers\r\n2020-05-16T00:55:17Z Clightning - Preprocessing header\r\n2020-05-16T00:55:17Z Cligthning - Bridge send success 84\r\n2020-05-16T00:56:10Z Adding fixed seed nodes as DNS doesn't seem to be available.\r\n```",
          "user": {
            "login": "ariard",
            "id": 23310655,
            "node_id": "MDQ6VXNlcjIzMzEwNjU1",
            "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ariard",
            "html_url": "https://github.com/ariard",
            "followers_url": "https://api.github.com/users/ariard/followers",
            "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
            "organizations_url": "https://api.github.com/users/ariard/orgs",
            "repos_url": "https://api.github.com/users/ariard/repos",
            "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ariard/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "comments": 31,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18988",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/18988",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/18988.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/18988.patch"
          },
          "closed_at": "2022-05-12T13:30:04Z",
          "created_at": "2020-05-16T10:50:02Z",
          "updated_at": "2023-05-12T10:01:25Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-16T17:54:07Z",
      "updated_at": "2020-05-16T17:54:07Z",
      "source": {
        "issue": {
          "id": 619442419,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDE4OTUwNjg1",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18987",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18987/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18987/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18987/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/18987",
          "number": 18987,
          "state": "closed",
          "state_reason": null,
          "title": "RFC: Introducing Watchdog, a cross-layer anomaly detection module",
          "body": "This PR proposes to introduce a new subsystem for anomaly detection and notifications of those for corrective behaviors. It showcases a proof-of-concept laying out the design of such a new system with a new heuristic.\r\n\r\nPrevention of eclipse-attacks and network partitions is critical for application security and user funds.  Beyond fork detection and obvious protocol misbehavior, Bitcoin Core doesn't implement any active anomalies detection. These vulnerabilities may be even more destructive for time-sensitive protocol with harder [security assumptions](https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-December/002369.html), such as those requiring real-time block processing with regards to honest majority network. Active detection at the base-layer, where it's easier to monitor, may be used in two ways:\r\na) With an application, like a payment system or a LN node, cutting its deposit flow or closing its channels in reaction or stopping HTLC processing, and therefore limiting exposure.\r\nb) With an internal Bitcoin Core module, triggering rescue header-fetching -- see the [AltNet subsystem proposal](https://github.com/bitcoin/bitcoin/pull/18988) as an example of consumer usage.\r\n\r\nEven if notifications must be interpreted according to application requirements, such _automatic_ reactions, well-implemented, would be a positive increase for their security.\r\n\r\nDetection may rely on a wide range of cross-layer heuristics, including the local clock, packets RTT, ASN distribution among addrman, abnormal peer rotation, stalling or delayed block issuance, mempool congestion and bandwidth consumption surges. You may combine heuristics to increase confidence, but due to the p2p nature of the network or Poisson block interval false positives must be taken into account. Ideally consumer would be able to fine-tune their false-positives exposure with regards to application security and the cost of their reaction.\r\n\r\nThis PR introduces a new module (`CWatchdog`), with low-reliance on other modules beyond synchronous events harvesting (`LogHeader`). Anomalie detections (`ScanAnomalie`) is scheduled each `SCAN_ANOMALIES_INTERVAL` on its own thread. Integration is done with `NodeContext`, making the module accessible to future RPCs. A subscription interface (`CWatchdogInterface`) is added, the model of `CValidationInterface`. This can host the actual fork detection in the future after refactoring `CheckForkWarningConditions`.\r\n\r\nThis new module, less intertwined with current code can be disabled by default, and only activated with `--enable-watchdog` by node operators willingly to use it.",
          "user": {
            "login": "ariard",
            "id": 23310655,
            "node_id": "MDQ6VXNlcjIzMzEwNjU1",
            "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ariard",
            "html_url": "https://github.com/ariard",
            "followers_url": "https://api.github.com/users/ariard/followers",
            "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
            "organizations_url": "https://api.github.com/users/ariard/orgs",
            "repos_url": "https://api.github.com/users/ariard/repos",
            "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ariard/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18987",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/18987",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/18987.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/18987.patch"
          },
          "closed_at": "2022-04-29T14:12:03Z",
          "created_at": "2020-05-16T10:49:51Z",
          "updated_at": "2023-04-29T09:59:24Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 629741483,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTc0MTQ4Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/629741483",
      "actor": {
        "login": "tryphe",
        "id": 8435003,
        "node_id": "MDQ6VXNlcjg0MzUwMDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8435003?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tryphe",
        "html_url": "https://github.com/tryphe",
        "followers_url": "https://api.github.com/users/tryphe/followers",
        "following_url": "https://api.github.com/users/tryphe/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tryphe/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tryphe/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tryphe/subscriptions",
        "organizations_url": "https://api.github.com/users/tryphe/orgs",
        "repos_url": "https://api.github.com/users/tryphe/repos",
        "events_url": "https://api.github.com/users/tryphe/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tryphe/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-17T04:28:26Z",
      "updated_at": "2020-05-17T04:30:56Z",
      "author_association": "CONTRIBUTOR",
      "body": "tACK f4a4643712eca819a5b7ed0a143216e06125d1a9 on Debian 9\r\n\r\n```\r\n2020-05-17T04:14:52Z NAT-PMP: Port mapping successful. External address = [redacted]:8333\r\n2020-05-17T04:22:05Z NAT-PMP: Port mapping removed successfully.\r\n```\r\n\r\nThe port is accessible externally without any other forwarding rules.",
      "user": {
        "login": "tryphe",
        "id": 8435003,
        "node_id": "MDQ6VXNlcjg0MzUwMDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8435003?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tryphe",
        "html_url": "https://github.com/tryphe",
        "followers_url": "https://api.github.com/users/tryphe/followers",
        "following_url": "https://api.github.com/users/tryphe/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tryphe/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tryphe/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tryphe/subscriptions",
        "organizations_url": "https://api.github.com/users/tryphe/orgs",
        "repos_url": "https://api.github.com/users/tryphe/repos",
        "events_url": "https://api.github.com/users/tryphe/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tryphe/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-629741483",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-19T00:00:11Z",
      "updated_at": "2020-05-19T00:00:11Z",
      "source": {
        "issue": {
          "id": 620382213,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDE5NjQwNzE4",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19008",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19008/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19008/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19008/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19008",
          "number": 19008,
          "state": "closed",
          "state_reason": null,
          "title": "ci: tsan on clang-9",
          "body": "Bump the compiler runtime library that includes the sanitizers from clang-8 to clang-9 to get a more recent version. Also, bump the system packages from xenial to bionic to test packages closer to what is commonly used in production.\r\n\r\nThe second commit is needed to install the `tzdata` package, which is missing on some operating systems. See https://travis-ci.org/github/MarcoFalke/bitcoin-core/jobs/688455828#L1727",
          "user": {
            "login": "MarcoFalke",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarcoFalke",
            "html_url": "https://github.com/MarcoFalke",
            "followers_url": "https://api.github.com/users/MarcoFalke/followers",
            "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
            "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
            "repos_url": "https://api.github.com/users/MarcoFalke/repos",
            "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 5,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19008",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19008",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19008.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19008.patch"
          },
          "closed_at": "2020-05-19T08:11:10Z",
          "created_at": "2020-05-18T17:30:41Z",
          "updated_at": "2022-02-15T10:31:01Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 3351106747,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDMzNTExMDY3NDc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3351106747",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-19T10:10:41Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3352679971,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzM1MjY3OTk3MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3352679971",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-19T16:22:53Z"
    },
    {
      "event": "commented",
      "id": 630930056,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDkzMDA1Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/630930056",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-19T16:24:10Z",
      "updated_at": "2020-05-19T16:24:10Z",
      "author_association": "MEMBER",
      "body": "Rebased f4a4643712eca819a5b7ed0a143216e06125d1a9 -> 2f7a01708482ad9f8fede1d7b7a9d59901370aa1 ([pr18077.21](https://github.com/hebasto/bitcoin/commits/pr18077.21) -> [pr18077.22](https://github.com/hebasto/bitcoin/commits/pr18077.22)) due to the conflict with #19008.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-630930056",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "unlabeled",
      "id": 3352689934,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzM1MjY4OTkzNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3352689934",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-19T16:25:20Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-19T20:18:50Z",
      "updated_at": "2020-05-19T20:18:50Z",
      "source": {
        "issue": {
          "id": 620888461,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDIwMDQ3Mjg3",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19014",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19014/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19014/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19014/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19014",
          "number": 19014,
          "state": "closed",
          "state_reason": null,
          "title": "test: Replace TEST_PREVIOUS_RELEASES env var with test_framework option",
          "body": "The \"auto-detection\" feature is kept in place, but making it an option allows to properly document it. For example, on my machine I get:\r\n\r\n```\r\n$ ./test/functional/wallet_disable.py --help | grep previous-releases\r\n  --previous-releases   Force test of previous releases (default: False)",
          "user": {
            "login": "MarcoFalke",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarcoFalke",
            "html_url": "https://github.com/MarcoFalke",
            "followers_url": "https://api.github.com/users/MarcoFalke/followers",
            "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
            "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
            "repos_url": "https://api.github.com/users/MarcoFalke/repos",
            "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 8,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19014",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19014",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19014.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19014.patch"
          },
          "closed_at": "2020-05-22T10:32:10Z",
          "created_at": "2020-05-19T11:09:55Z",
          "updated_at": "2022-02-15T10:31:22Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 3359677036,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDMzNTk2NzcwMzY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3359677036",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-21T08:02:16Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3363301868,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzM2MzMwMTg2OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3363301868",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-22T05:32:24Z"
    },
    {
      "event": "commented",
      "id": 632491960,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjQ5MTk2MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632491960",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-22T05:33:43Z",
      "updated_at": "2020-05-22T05:33:43Z",
      "author_association": "MEMBER",
      "body": "Rebased 2f7a01708482ad9f8fede1d7b7a9d59901370aa1 -> f0cf6523c9fb4c3bb0bc64af72cdcadfa7747748 ([pr18077.22](https://github.com/hebasto/bitcoin/commits/pr18077.22) -> [pr18077.23](https://github.com/hebasto/bitcoin/commits/pr18077.23)) due to the conflict with #18677.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-632491960",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "unlabeled",
      "id": 3363510385,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzM2MzUxMDM4NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3363510385",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-22T07:00:28Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 3364284606,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDMzNjQyODQ2MDY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3364284606",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-22T11:09:25Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3364364702,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzM2NDM2NDcwMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3364364702",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-22T11:37:59Z"
    },
    {
      "event": "commented",
      "id": 632647985,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjY0Nzk4NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/632647985",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-22T11:38:54Z",
      "updated_at": "2020-05-22T11:38:54Z",
      "author_association": "MEMBER",
      "body": "Rebased f0cf6523c9fb4c3bb0bc64af72cdcadfa7747748 -> 1b006d618d02eac38bd434937d6d5c42084992bf ([pr18077.23](https://github.com/hebasto/bitcoin/commits/pr18077.23) -> [pr18077.24](https://github.com/hebasto/bitcoin/commits/pr18077.24)) due to the conflict with #19014.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-632647985",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "unlabeled",
      "id": 3364647278,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzM2NDY0NzI3OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3364647278",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-22T13:14:20Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-27T19:50:17Z",
      "updated_at": "2020-05-27T19:50:17Z",
      "source": {
        "issue": {
          "id": 625332065,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDIzNTcxNDkx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19077",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19077/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19077/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19077/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19077",
          "number": 19077,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: Add sqlite as an alternative wallet database and use it for new descriptor wallets",
          "body": "This PR adds a new class `SQLiteDatabase` which is a subclass of `WalletDatabase`. This provides access to a SQLite database that is used to store the wallet records. To keep compatibility with BDB and to complexity of the change down, we don't make use of many SQLite's features. We use it strictly as a key-value store. We create a table `main` which has two columns, `key` and `value` both with the type `blob`.\r\n\r\nFor new descriptor wallets, we will create a `SQLiteDatabase` instead of a `BerkeleyDatabase`. There is no requirement that all SQLite wallets are descriptor wallets, nor is there a requirement that all descriptor wallets be SQLite wallets. This allows for existing descriptor wallets to work as well as keeping open the option to migrate existing wallets to SQLite.\r\n\r\nWe keep the name `wallet.dat` for SQLite wallets. We are able to determine which database type to use by searching for specific magic bytes in the `wallet.dat` file. SQLite begins it's files with a null terminated string `SQLite format 3`. BDB has `0x00053162` at byte 12 (note that the byte order of this integer depends on the system endianness). So when we see that there is a `wallet.dat` file that we want to open, we check for the magic bytes to determine which database system to use.\r\n\r\nI decided to keep the `wallet.dat` naming to keep things like backup script to continue to function as they won't need to be modified to look for a different file name. It also simplifies a couple of things in the implementation and the tests as `wallet.dat` is something that is specifically being looked for. If we don't want this behavior, then I do have another branch which creates `wallet.sqlite` files instead, but I find that this direction is easier.",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignee": {
            "login": "meshcollider",
            "id": 3211283,
            "node_id": "MDQ6VXNlcjMyMTEyODM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/meshcollider",
            "html_url": "https://github.com/meshcollider",
            "followers_url": "https://api.github.com/users/meshcollider/followers",
            "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
            "organizations_url": "https://api.github.com/users/meshcollider/orgs",
            "repos_url": "https://api.github.com/users/meshcollider/repos",
            "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/meshcollider/received_events",
            "type": "User",
            "site_admin": false
          },
          "assignees": [
            {
              "login": "meshcollider",
              "id": 3211283,
              "node_id": "MDQ6VXNlcjMyMTEyODM=",
              "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/meshcollider",
              "html_url": "https://github.com/meshcollider",
              "followers_url": "https://api.github.com/users/meshcollider/followers",
              "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
              "organizations_url": "https://api.github.com/users/meshcollider/orgs",
              "repos_url": "https://api.github.com/users/meshcollider/repos",
              "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/meshcollider/received_events",
              "type": "User",
              "site_admin": false
            }
          ],
          "author_association": "MEMBER",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/45",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/45",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/45/labels",
            "id": 4914019,
            "node_id": "MDk6TWlsZXN0b25lNDkxNDAxOQ==",
            "number": 45,
            "state": "closed",
            "title": "0.21.0",
            "description": "",
            "creator": {
              "login": "laanwj",
              "id": 126646,
              "node_id": "MDQ6VXNlcjEyNjY0Ng==",
              "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/laanwj",
              "html_url": "https://github.com/laanwj",
              "followers_url": "https://api.github.com/users/laanwj/followers",
              "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
              "organizations_url": "https://api.github.com/users/laanwj/orgs",
              "repos_url": "https://api.github.com/users/laanwj/repos",
              "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/laanwj/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 132,
            "created_at": "2019-12-09T08:39:58Z",
            "updated_at": "2021-01-15T19:50:53Z",
            "closed_at": "2021-01-15T19:50:53Z"
          },
          "locked": true,
          "comments": 61,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19077",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19077",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19077.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19077.patch"
          },
          "closed_at": "2020-10-15T07:13:59Z",
          "created_at": "2020-05-27T02:42:07Z",
          "updated_at": "2022-10-30T19:10:25Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-27T20:03:09Z",
      "updated_at": "2020-05-27T20:03:09Z",
      "source": {
        "issue": {
          "id": 623890117,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDIyNDMxNDk3",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19064",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19064/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19064/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19064/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19064",
          "number": 19064,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: Cleanup thread ctor calls",
          "body": "This PR does not change behavior.\r\nIts goal is to improve readability and maintainability of the code. ",
          "user": {
            "login": "hebasto",
            "id": 32963518,
            "node_id": "MDQ6VXNlcjMyOTYzNTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hebasto",
            "html_url": "https://github.com/hebasto",
            "followers_url": "https://api.github.com/users/hebasto/followers",
            "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
            "organizations_url": "https://api.github.com/users/hebasto/orgs",
            "repos_url": "https://api.github.com/users/hebasto/repos",
            "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/hebasto/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 26,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19064",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19064",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19064.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19064.patch"
          },
          "closed_at": "2021-05-12T07:01:56Z",
          "created_at": "2020-05-24T15:45:04Z",
          "updated_at": "2022-08-18T18:31:04Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-27T20:14:53Z",
      "updated_at": "2020-05-27T20:14:53Z",
      "source": {
        "issue": {
          "id": 622627618,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDIxNDU1Njgy",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19041",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19041/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19041/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19041/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19041",
          "number": 19041,
          "state": "closed",
          "state_reason": null,
          "title": "ci: tsan with -stdlib=libc++-10",
          "body": "According to the [ThreadSanitizer docs](https://clang.llvm.org/docs/ThreadSanitizer.html#current-status):\r\n>  C++11 threading is supported with **llvm libc++**.\r\n\r\nFor example, the thread sanitizer build is currently not checking for double lock of mutexes.\r\n\r\nFixes (partially) https://github.com/bitcoin/bitcoin/issues/19038#issuecomment-632138003",
          "user": {
            "login": "MarcoFalke",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarcoFalke",
            "html_url": "https://github.com/MarcoFalke",
            "followers_url": "https://api.github.com/users/MarcoFalke/followers",
            "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
            "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
            "repos_url": "https://api.github.com/users/MarcoFalke/repos",
            "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 12,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19041",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19041",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19041.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19041.patch"
          },
          "closed_at": "2020-06-03T13:56:09Z",
          "created_at": "2020-05-21T16:33:45Z",
          "updated_at": "2022-02-15T11:03:42Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-29T06:45:31Z",
      "updated_at": "2020-05-29T06:45:31Z",
      "source": {
        "issue": {
          "id": 626848421,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDI0NzYyNzE2",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19101",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19101/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19101/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19101/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19101",
          "number": 19101,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: remove ::vpwallets and related global variables",
          "body": "Get rid of global wallet list variables by moving them to WalletContext struct\r\n\r\n- [`cs_wallets`](https://github.com/bitcoin/bitcoin/blob/e638acf6970394f8eb1957366ad2d39512f33b31/src/wallet/wallet.cpp#L56) is now [`WalletContext::wallet_mutex`](https://github.com/ryanofsky/bitcoin/blob/4be544c7ec08a81952fd3f4349151cbb8bdb60e8/src/wallet/context.h#L37)\r\n- [`vpwallets`](https://github.com/bitcoin/bitcoin/blob/e638acf6970394f8eb1957366ad2d39512f33b31/src/wallet/wallet.cpp#L57) is now [`WalletContext::wallets`](https://github.com/ryanofsky/bitcoin/blob/4be544c7ec08a81952fd3f4349151cbb8bdb60e8/src/wallet/context.h#L38)\r\n- [`g_load_wallet_fns`](https://github.com/bitcoin/bitcoin/blob/e638acf6970394f8eb1957366ad2d39512f33b31/src/wallet/wallet.cpp#L58) is now [`WalletContext::wallet_load_fns`](https://github.com/ryanofsky/bitcoin/blob/4be544c7ec08a81952fd3f4349151cbb8bdb60e8/src/wallet/context.h#L39)",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "comments": 13,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19101",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19101",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19101.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19101.patch"
          },
          "closed_at": "2021-08-19T01:42:42Z",
          "created_at": "2020-05-28T22:10:51Z",
          "updated_at": "2023-01-02T10:06:09Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-29T06:48:33Z",
      "updated_at": "2020-05-29T06:48:33Z",
      "source": {
        "issue": {
          "id": 626825457,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDI0NzQ0MDA3",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19099",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19099/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19099/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19099/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19099",
          "number": 19099,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: Move wallet methods out of chain.h and node.h",
          "body": "Add WalletClient interface so node interface is cleaner and don't need wallet-specific methods.\r\n\r\nThe new NodeContext::wallet_client pointer will also be needed to eliminate global wallet variables like ::vpwallets in #19101, because createWallet(), loadWallet(), getWallets(), etc methods called by the GUI need a way to get a reference to the list of open wallets if it is no longer a global variable.",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 3,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19099",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19099",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19099.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19099.patch"
          },
          "closed_at": "2020-08-31T08:14:37Z",
          "created_at": "2020-05-28T21:25:08Z",
          "updated_at": "2022-02-15T10:36:48Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-29T06:50:04Z",
      "updated_at": "2020-05-29T06:50:04Z",
      "source": {
        "issue": {
          "id": 626812473,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDI0NzMzMTQ3",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19098",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19098/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19098/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19098/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19098",
          "number": 19098,
          "state": "closed",
          "state_reason": null,
          "title": "test: Remove duplicate NodeContext hacks",
          "body": "Qt tests currently are currently using two NodeContext structs at the same time, one in interfaces::NodeImpl::m_context, and the other in BasicTestingSetup::m_node, and the tests have hacks transferring state between them.\r\n\r\nFix this by getting rid of the NodeImpl::m_context struct and making it a pointer. This way a common BitcoinApplication object can be used for all qt tests, but they can still have their own testing setups.\r\n\r\nNon-test code is changing but non-test behavior is still the same as before.\r\n\r\nMotivation for this PR is to be able to remove the \"std::move(test.m_node.connman)\" and mempool hacks for swapping individual NodeContext members in Qt tests, because followup PR #19099 adds yet another member (wallet_client) that needs to be swapped. After this change, the whole NodeContext struct can be swapped instead of individual members, so the workarounds are less fragile and invasive.",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19098",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19098",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19098.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19098.patch"
          },
          "closed_at": "2020-08-07T06:09:27Z",
          "created_at": "2020-05-28T21:02:58Z",
          "updated_at": "2022-02-15T10:34:39Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 3402685322,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM0MDI2ODUzMjI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3402685322",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-03T15:16:09Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3405394352,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzQwNTM5NDM1Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3405394352",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-04T07:08:09Z"
    },
    {
      "event": "commented",
      "id": 638649592,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYzODY0OTU5Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/638649592",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-04T07:09:16Z",
      "updated_at": "2020-06-04T07:09:16Z",
      "author_association": "MEMBER",
      "body": "Rebased 1b006d618d02eac38bd434937d6d5c42084992bf -> 0692bed243adb8d4f3aa8192e9d1952d1de4a2ad ([pr18077.24](https://github.com/hebasto/bitcoin/commits/pr18077.24) -> [pr18077.25](https://github.com/hebasto/bitcoin/commits/pr18077.25)) due to the conflict with #19041.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-638649592",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "unlabeled",
      "id": 3405581052,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzQwNTU4MTA1Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3405581052",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-04T07:58:59Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-04T12:17:59Z",
      "updated_at": "2020-06-04T12:17:59Z",
      "source": {
        "issue": {
          "id": 630098657,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDI3Mjg0MDU3",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19160",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19160/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19160/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19160/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19160",
          "number": 19160,
          "state": "closed",
          "state_reason": null,
          "title": "multiprocess: Add basic spawn and IPC support",
          "body": "This PR is part of the [process separation project](https://github.com/bitcoin/bitcoin/projects/10).\r\n\r\n---\r\n\r\nThis PR adds basic process spawning and IPC method call support to `bitcoin-node` executables built with `--enable-multiprocess`[*].\r\n\r\nThese changes are used in https://github.com/bitcoin/bitcoin/pull/10102 to let node, gui, and wallet functionality run in different processes, and extended in https://github.com/bitcoin/bitcoin/pull/19460 and https://github.com/bitcoin/bitcoin/pull/19461 after that to allow gui and wallet processes to be started and stopped independently and connect to the node over a socket.\r\n\r\nThese changes can also be used to implement new functionality outside the `bitcoin-node` process like external indexes or pluggable transports (https://github.com/bitcoin/bitcoin/pull/18988). The `Ipc::spawnProcess` and `Ipc::serveProcess` methods added here are entry points for spawning a child process and serving a parent process, and being able to make bidirectional, multithreaded method calls between the processes. A simple example of this is implemented in commit \"Add echoipc RPC method and test.\"\r\n\r\nChanges in this PR aside from the echo test were originally part of #10102, but have been split and moved here for easier review, and so they can be used for other applications like external plugins.\r\n\r\nAdditional notes about this PR can be found at https://bitcoincore.reviews/19160\r\n\r\n[*] Note: the `--enable-multiprocess` feature is still experimental, and not enabled by default, and not yet supported on windows. More information can be found in [doc/multiprocess.md](https://github.com/bitcoin/bitcoin/blob/master/doc/multiprocess.md)",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 43,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19160",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19160",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19160.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19160.patch"
          },
          "closed_at": "2021-04-27T10:00:28Z",
          "created_at": "2020-06-03T15:35:41Z",
          "updated_at": "2023-07-13T18:00:57Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-05T09:44:43Z",
      "updated_at": "2020-06-05T09:44:43Z",
      "source": {
        "issue": {
          "id": 439339957,
          "node_id": "MDExOlB1bGxSZXF1ZXN0Mjc1MTY3ODUx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15936",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15936/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15936/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15936/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/15936",
          "number": 15936,
          "state": "closed",
          "state_reason": null,
          "title": "interfaces: Expose settings.json methods to GUI",
          "body": "Add `interfaces::Node` `updateSetting`, `forceSetting`, `resetSettings`, `isSettingIgnored`, and `getPersistentSetting` methods so GUI is able to manipulate `settings.json` file and use and modify node settings.\r\n\r\n(Originally this PR also contained GUI changes to unify bitcoin-qt and bitcoind persistent settings and call these methods, but the GUI commits have been dropped from this PR and moved to bitcoin-core/gui/pull/602)",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135946,
              "node_id": "MDU6TGFiZWwxMzU5NDY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/GUI",
              "name": "GUI",
              "color": "02d7e1",
              "default": false
            },
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "comments": 43,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15936",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/15936",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/15936.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/15936.patch"
          },
          "closed_at": "2022-05-26T15:07:20Z",
          "created_at": "2019-05-01T21:50:03Z",
          "updated_at": "2023-05-26T10:03:48Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-06T01:02:39Z",
      "updated_at": "2020-06-06T01:02:39Z",
      "source": {
        "issue": {
          "id": 631861801,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDI4Njc0Nzgx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19180",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19180/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19180/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19180/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19180",
          "number": 19180,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: Replace RecursiveMutex with Mutex in Shutdown()",
          "body": "Step by step, going to replace all of the `RecursiveMutex` instances with the `Mutex` ones throughout the code base :)\r\n\r\nNot sure if it is possible in all cases though...\r\n\r\nThis one is a low-hanging fruit.",
          "user": {
            "login": "hebasto",
            "id": 32963518,
            "node_id": "MDQ6VXNlcjMyOTYzNTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hebasto",
            "html_url": "https://github.com/hebasto",
            "followers_url": "https://api.github.com/users/hebasto/followers",
            "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
            "organizations_url": "https://api.github.com/users/hebasto/orgs",
            "repos_url": "https://api.github.com/users/hebasto/repos",
            "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/hebasto/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19180",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19180",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19180.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19180.patch"
          },
          "closed_at": "2020-06-08T10:57:13Z",
          "created_at": "2020-06-05T19:10:07Z",
          "updated_at": "2022-02-15T10:31:55Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-07T23:48:26Z",
      "updated_at": "2020-06-07T23:48:26Z",
      "source": {
        "issue": {
          "id": 632032077,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDI4ODI1MzU4",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19183",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19183/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19183/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19183/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19183",
          "number": 19183,
          "state": "closed",
          "state_reason": null,
          "title": "[WIP DONOTMERGE] Replace boost with C++17 (std::shared_mutex)",
          "body": "",
          "user": {
            "login": "MarcoFalke",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarcoFalke",
            "html_url": "https://github.com/MarcoFalke",
            "followers_url": "https://api.github.com/users/MarcoFalke/followers",
            "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
            "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
            "repos_url": "https://api.github.com/users/MarcoFalke/repos",
            "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 14,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19183",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19183",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19183.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19183.patch"
          },
          "closed_at": "2021-01-12T05:59:31Z",
          "created_at": "2020-06-05T22:49:08Z",
          "updated_at": "2022-08-16T17:11:33Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 3419764288,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM0MTk3NjQyODg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3419764288",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-08T12:17:54Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3420544742,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzQyMDU0NDc0Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3420544742",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-08T15:03:48Z"
    },
    {
      "event": "commented",
      "id": 640688912,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0MDY4ODkxMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/640688912",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-08T15:06:35Z",
      "updated_at": "2020-06-08T15:06:35Z",
      "author_association": "MEMBER",
      "body": "Rebased 0692bed243adb8d4f3aa8192e9d1952d1de4a2ad -> 5a29078b373f5ffecb452317a1bd6fb165b08b42 ([pr18077.25](https://github.com/hebasto/bitcoin/commits/pr18077.25) -> [pr18077.26](https://github.com/hebasto/bitcoin/commits/pr18077.26)) due to the conflict with #19180.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-640688912",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "unlabeled",
      "id": 3420984770,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzQyMDk4NDc3MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3420984770",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-08T16:34:10Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-09T00:08:26Z",
      "updated_at": "2020-06-09T00:08:26Z",
      "source": {
        "issue": {
          "id": 634565749,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDMxMDk2NTc2",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19207",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19207/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19207/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19207/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19207",
          "number": 19207,
          "state": "closed",
          "state_reason": null,
          "title": "doc: -whitelist/-whitebind documentation improvements",
          "body": "Result:\r\n\r\n```\r\n  -whitebind=<[permissions@]addr>\r\n       Bind to the given address and whitelist the peers connecting to it. Use\r\n       [host]:port notation for IPv6. Allowed permissions: bloomfilter\r\n       (allow requesting BIP37 filtered blocks and transactions), noban\r\n       (do not ban for misbehavior), forcerelay (relay transactions that\r\n       are already in the mempool; implies relay), relay (relay even in\r\n       -blocksonly mode), mempool (allow requesting BIP35 mempool\r\n       contents). Specify multiple permissions separated by commas\r\n       (default: noban,mempool,relay). Can be specified multiple times.\r\n\r\n  -whitelist=<[permissions@]IP address or network>\r\n       Whitelist the peers connecting from the given IP address (e.g. 1.2.3.4)\r\n       or CIDR-notated network (e.g. 1.2.3.0/24). Uses the same\r\n       permissions as -whitebind. Can be specified multiple times.\r\n```",
          "user": {
            "login": "jonatack",
            "id": 2415484,
            "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonatack",
            "html_url": "https://github.com/jonatack",
            "followers_url": "https://api.github.com/users/jonatack/followers",
            "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
            "organizations_url": "https://api.github.com/users/jonatack/orgs",
            "repos_url": "https://api.github.com/users/jonatack/repos",
            "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jonatack/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 148216,
              "node_id": "MDU6TGFiZWwxNDgyMTY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Docs",
              "name": "Docs",
              "color": "02d7e1",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 7,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19207",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19207",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19207.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19207.patch"
          },
          "closed_at": "2020-06-22T17:47:18Z",
          "created_at": "2020-06-08T12:30:28Z",
          "updated_at": "2022-02-15T11:03:48Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-13T14:48:21Z",
      "updated_at": "2020-06-13T14:48:21Z",
      "source": {
        "issue": {
          "id": 638159896,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDM0MDA0ODA3",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19267",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19267/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19267/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19267/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19267",
          "number": 19267,
          "state": "closed",
          "state_reason": null,
          "title": "ci: Upgrade most ci configs to focal",
          "body": "Generally developers compile with recent compilers, so bumping the ci configs to a recent OS should be uncontroversial. Older OSes (especially with compiler sanitizers) need workarounds that can be dropped by running on a more recent OS.\r\n\r\nThis pull changes the asan sanitizer and the experimental multiprocess build to use focal.\r\nAlso, it runs the no_wallet config on xenial to test against python 3.5, according to `doc/dependencies.md`.\r\n\r\nFinally, all configs that mimic gitian (win and mac) will stay at bionic.",
          "user": {
            "login": "MarcoFalke",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarcoFalke",
            "html_url": "https://github.com/MarcoFalke",
            "followers_url": "https://api.github.com/users/MarcoFalke/followers",
            "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
            "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
            "repos_url": "https://api.github.com/users/MarcoFalke/repos",
            "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 17,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19267",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19267",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19267.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19267.patch"
          },
          "closed_at": "2020-06-19T16:54:13Z",
          "created_at": "2020-06-13T13:12:01Z",
          "updated_at": "2022-02-15T10:45:47Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "closed",
      "id": 3445797725,
      "node_id": "MDExOkNsb3NlZEV2ZW50MzQ0NTc5NzcyNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3445797725",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-15T19:13:03Z"
    },
    {
      "event": "reopened",
      "id": 3445798941,
      "node_id": "MDEzOlJlb3BlbmVkRXZlbnQzNDQ1Nzk4OTQx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3445798941",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-15T19:13:25Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-16T22:48:04Z",
      "updated_at": "2020-06-16T22:48:04Z",
      "source": {
        "issue": {
          "id": 636944749,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDMzMDE5Nzc1",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19245",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19245/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19245/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19245/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19245",
          "number": 19245,
          "state": "closed",
          "state_reason": null,
          "title": "Replace boost::filesystem with std::filesystem",
          "body": "## Introduction\r\n\r\nC++17 has introduced the filesystem library. [cppreference.com](https://en.cppreference.com/w/cpp/filesystem) describes very well the origin of the library:\r\n\r\n> The filesystem library was originally developed as boost.filesystem, was published as the technical specification ISO/IEC TS 18822:2015, and finally merged to ISO C++ as of C++17. The boost implementation is currently available on more compilers and platforms than the C++17 library.\r\n\r\nThis draft PR was created to gain feedback and examine what would be necessary to switch from `boost::filesystem` to `std::filesystem` in bitcoin codebase.\r\n\r\nBitcoin codebase contains `src/fs.h` which is a wrapper for the [currently used filesystem library](https://github.com/bitcoin/bitcoin/blob/6762a627ecb89ba8d4ed81a049a5d802e6dd75c2/src/fs.h#L18). The first impression is that one may just replace `namespace fs = boost::filesystem;` with `namespace fs = std::filesystem;` and all will be good. Unfortunately, there are some differences between the [Boost's filesystem library](https://www.boost.org/doc/libs/1_70_0/libs/filesystem/doc/reference.html) and the [c++17 filesystem library](https://en.cppreference.com/w/cpp/filesystem). A nice summary by Davis Herring can be read [here](https://stackoverflow.com/questions/40899267/how-similar-are-boost-filesystem-and-the-c-standard-filesystem-library).\r\n\r\n## Differences between filesystem implementations that affects Bitcoin code\r\n\r\n1. `boost::filesystem::system_complete()` was renamed to `std::filesystem::absolute()` \\[[source](https://stackoverflow.com/a/46271698)\\]\r\n\r\n2. [boost::filesystem::absolute()](https://www.boost.org/doc/libs/1_70_0/libs/filesystem/doc/reference.html#absolute) has second `const path& base` parameter which was dropped in [std::filesystem::absolute](https://en.cppreference.com/w/cpp/filesystem/absolute) (see [reasoning](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/p0492r2.html#US78)).\r\n\r\n     Each such instance like [this one](https://github.com/bitcoin/bitcoin/blob/master/src/rpc/blockchain.cpp#L2284) can be fixed by changing:\r\n\r\n     `fs::path path = fs::absolute(request.params[0].get_str(), GetDataDir());`\r\n\r\n     to\r\n\r\n    `fs::path path = fs::absolute(GetDataDir() / request.params[0].get_str());` where `/` is function call of `operator/` function.\r\n\r\n     Note: Notably `path(\"foo\") / \"c:/bar\"` yields `c:/bar`. However, that's how `boost::filesystem::absolute(p, base_dir)` behaves too.\r\n\r\n3. [boost::filesystem::path::imbue()](https://www.boost.org/doc/libs/1_70_0/libs/filesystem/doc/reference.html#path-imbue) is not present in `std::filesystem::path`.\r\n\r\n4. [boost::filesystem::unique_path()](https://www.boost.org/doc/libs/1_70_0/libs/filesystem/doc/reference.html#unique_path) is not present in `std::filesystem`.\r\n\r\n5. [boost::filesystem::equivalent(path1, path2)](https://github.com/boostorg/filesystem/blob/812cb9bad3bcbb2161c7cd2c1132b51c4b29c4b9/src/operations.cpp#L1241) differs from [std::filesystem::equivalent(path1, path2)](https://github.com/llvm/llvm-project/blob/00b161b8971bc6d3cb55f13502288b8fe0dbaa42/libcxx/src/filesystem/operations.cpp#L917) as the later reports *not supported* error if one of the files does not exist whereas Boost returns `false`.\r\n    * See also [cppreference](https://en.cppreference.com/w/cpp/filesystem/equivalent).\r\n\r\n## Support for C++17 `<filesystem`>\r\n\r\n* Clang 7+ (see [[Phoronix](https://www.phoronix.com/scan.php?page=news_item&px=Filesystem-Lands-LLVM-Libcpp)][[git commit](https://github.com/llvm-mirror/libcxx/commit/a0866c5fb5020d15c69deda94d32a7f982b88dc9)])\r\n* GCC 8.1+ ([[GCC status page](https://gcc.gnu.org/onlinedocs/libstdc++/manual/status.html#status.iso.2017)] [[git commit](https://github.com/gcc-mirror/gcc/commit/3b90ed62fb848046ed7ddef07df7c806e7f3fadb)])\r\n  * GCC 8.x requires linking with `-lstdc++fs`.\r\n\r\n## Issues & PRs that may be linked with this PR\r\n\r\nhttps://github.com/bitcoin/bitcoin/issues/13103, https://github.com/bitcoin/bitcoin/pull/13787, https://github.com/google/leveldb/pull/760, https://github.com/bitcoin/bitcoin/pull/6093\r\n\r\n## TODO\r\n\r\n* [x] Remove Boost's filesystem from https://github.com/bitcoin/bitcoin/blob/master/configure.ac (help is welcome)\r\n  * Relevant PR: https://github.com/bitcoin/bitcoin/pull/7302 & https://github.com/bitcoin/bitcoin/commit/76ac35f36d87078da62f95b4a1167ec296e37363\r\n  * Done in #19667.\r\n* [ ] [Am I missing `-lstdc++fs`](https://www.bfilipek.com/2019/05/boost-to-stdfs.html)?\r\n* [ ] What about https://github.com/bitcoin/bitcoin/pull/19933?\r\n* [ ] Address this change https://github.com/bitcoin/bitcoin/pull/19960\r\n* [ ] `unicodepath` test in  `src/test/dbwrapper_tests.cpp` seems to require some UTF-8 locale.\r\n  * See also https://github.com/bitcoin/bitcoin/blob/ae9ee5bdb18c5babbfa2875ab694df118d6a1c1b/src/util/system.cpp#L1249\r\n  * https://github.com/microsoft/STL/blob/2aa944beba9af1d72537fd5e35d402c8b830a5dc/stl/src/filesystem.cpp#L266 - C++17 in Microsoft C++ standard library\r\n  * https://docs.microsoft.com/en-us/cpp/standard-library/filesystem?view=msvc-160\r\n  * https://docs.microsoft.com/en-us/cpp/standard-library/file-system-navigation?view=msvc-160\r\n\r\n## Inspiration\r\n\r\n* https://github.com/ceptontech/filesystem\r\n* https://github.com/ceztko/u8filesystem",
          "user": {
            "login": "kiminuo",
            "id": 58662979,
            "node_id": "MDQ6VXNlcjU4NjYyOTc5",
            "avatar_url": "https://avatars.githubusercontent.com/u/58662979?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kiminuo",
            "html_url": "https://github.com/kiminuo",
            "followers_url": "https://api.github.com/users/kiminuo/followers",
            "following_url": "https://api.github.com/users/kiminuo/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/kiminuo/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/kiminuo/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/kiminuo/subscriptions",
            "organizations_url": "https://api.github.com/users/kiminuo/orgs",
            "repos_url": "https://api.github.com/users/kiminuo/repos",
            "events_url": "https://api.github.com/users/kiminuo/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/kiminuo/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 10,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19245",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19245",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19245.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19245.patch"
          },
          "closed_at": "2020-12-22T14:30:23Z",
          "created_at": "2020-06-11T11:39:49Z",
          "updated_at": "2023-01-12T13:46:57Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-17T23:11:45Z",
      "updated_at": "2020-06-17T23:11:45Z",
      "source": {
        "issue": {
          "id": 640716616,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDM2MDc0ODc5",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19314",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19314/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19314/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19314/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19314",
          "number": 19314,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: Use uint16_t instead of unsigned short",
          "body": "I wanted to see if the `up for grabs` label works and looked at PR #17822 originally opend by ahook I saw it had many acks for example by jonatack and practicalswift but needed rebasing. \r\n\r\nSo I checked out the remote branch rebased it resolved three conflicts and continued the rebase. \r\n\r\nHope everything is as expected (: ",
          "user": {
            "login": "renepickhardt",
            "id": 1926816,
            "node_id": "MDQ6VXNlcjE5MjY4MTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1926816?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/renepickhardt",
            "html_url": "https://github.com/renepickhardt",
            "followers_url": "https://api.github.com/users/renepickhardt/followers",
            "following_url": "https://api.github.com/users/renepickhardt/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/renepickhardt/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/renepickhardt/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/renepickhardt/subscriptions",
            "organizations_url": "https://api.github.com/users/renepickhardt/orgs",
            "repos_url": "https://api.github.com/users/renepickhardt/repos",
            "events_url": "https://api.github.com/users/renepickhardt/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/renepickhardt/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "NONE",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 9,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19314",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19314",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19314.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19314.patch"
          },
          "closed_at": "2020-07-09T14:56:33Z",
          "created_at": "2020-06-17T20:21:04Z",
          "updated_at": "2022-02-15T10:33:27Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 3463267394,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM0NjMyNjczOTQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3463267394",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-19T17:01:57Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3464486778,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzQ2NDQ4Njc3OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3464486778",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-20T08:00:23Z"
    },
    {
      "event": "commented",
      "id": 646960469,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0Njk2MDQ2OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/646960469",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-20T08:01:49Z",
      "updated_at": "2020-06-20T08:01:49Z",
      "author_association": "MEMBER",
      "body": "Rebased 5a29078b373f5ffecb452317a1bd6fb165b08b42 -> 570c1060058d7f52286107df217b66d28d0b1f91 ([pr18077.26](https://github.com/hebasto/bitcoin/commits/pr18077.26) -> [pr18077.27](https://github.com/hebasto/bitcoin/commits/pr18077.27)) due to the conflict with #19267.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-646960469",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-20T09:15:13Z",
      "updated_at": "2020-06-20T09:15:13Z",
      "source": {
        "issue": {
          "id": 642241789,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDM3MzE0OTEz",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19331",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19331/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19331/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19331/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19331",
          "number": 19331,
          "state": "closed",
          "state_reason": null,
          "title": "build: Do not include server symbols in wallet",
          "body": "This reverts a hacky workaround from commit b83cc0f, which only happens to work due to compiler optimizations. Then, it actually fixes the linker error.\r\n\r\nThe underlying problem is that the wallet includes symbols from the server (ui_interface), which usually results in linker failures. Though, in this specific case the linker failures have not been observed (unless `-O0`) because our compilers were smart enough to strip unused symbols.\r\n\r\nFix the underlying problem by creating a new header-only with the needed symbol and move ui_interface to node to clarify that this is part of libbitcoin_server.",
          "user": {
            "login": "MarcoFalke",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarcoFalke",
            "html_url": "https://github.com/MarcoFalke",
            "followers_url": "https://api.github.com/users/MarcoFalke/followers",
            "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
            "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
            "repos_url": "https://api.github.com/users/MarcoFalke/repos",
            "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 8,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19331",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19331",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19331.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19331.patch"
          },
          "closed_at": "2020-07-01T13:38:48Z",
          "created_at": "2020-06-19T22:15:03Z",
          "updated_at": "2022-02-15T10:46:01Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "unlabeled",
      "id": 3464534134,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzQ2NDUzNDEzNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3464534134",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-20T09:23:06Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 3502730511,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM1MDI3MzA1MTE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3502730511",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-01T14:26:35Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3509876123,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzUwOTg3NjEyMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3509876123",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-03T07:15:44Z"
    },
    {
      "event": "commented",
      "id": 653393228,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzM5MzIyOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/653393228",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-03T07:16:58Z",
      "updated_at": "2020-07-03T07:16:58Z",
      "author_association": "MEMBER",
      "body": "Rebased 570c1060058d7f52286107df217b66d28d0b1f91 -> a660ecc26e691ed9b931d6fe27c26899ef66be64 ([pr18077.27](https://github.com/hebasto/bitcoin/commits/pr18077.27) -> [pr18077.28](https://github.com/hebasto/bitcoin/commits/pr18077.28)) due to the conflict with #19331.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-653393228",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "unlabeled",
      "id": 3510062226,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzUxMDA2MjIyNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3510062226",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-03T08:14:31Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3513146105,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzUxMzE0NjEwNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3513146105",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-05T08:56:06Z"
    },
    {
      "event": "commented",
      "id": 653861394,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY1Mzg2MTM5NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/653861394",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-05T09:06:20Z",
      "updated_at": "2020-07-05T09:06:20Z",
      "author_association": "MEMBER",
      "body": "Rebased a660ecc26e691ed9b931d6fe27c26899ef66be64 -> d4a143ae233fc5fd0cb3c08ce7c388434d256574 ([pr18077.28](https://github.com/hebasto/bitcoin/commits/pr18077.28) -> [pr18077.29](https://github.com/hebasto/bitcoin/commits/pr18077.29),  [diff](https://github.com/hebasto/bitcoin/compare/pr18077.28..pr18077.29)):\r\n\r\n- fixed dependency `libnatpmp` build with the custom `CC` variable.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-653861394",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-07T21:06:18Z",
      "updated_at": "2020-07-07T21:06:18Z",
      "source": {
        "issue": {
          "id": 652547610,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ1NTk1Mjk3",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19461",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19461/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19461/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19461/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19461",
          "number": 19461,
          "state": "open",
          "state_reason": null,
          "title": "multiprocess: Add bitcoin-gui -ipcconnect option",
          "body": "This PR is part of the [process separation project](https://github.com/bitcoin/bitcoin/projects/10).\r\n\r\n---\r\n\r\n**This is based on #10102 + #19460.** The non-base commits are:\r\n\r\n- [`5f91aa3d8b47` multiprocess: Add bitcoin-gui -ipcconnect option](https://github.com/bitcoin/bitcoin/pull/19461/commits/5f91aa3d8b47cee97e625c3b5689a37dbd941eff)\r\n\r\n---\r\n\r\nBuilding on #10102, this adds an `-ipcconnect` option to `bitcoin-gui` that connects the GUI to an existing `bitcoin-node` process already running in the background instead of spawning a new `bitcoin-node` process. This allows the GUI to be started and stopped independently of the node. By default with this change, `bitcoin-gui` will check if a `<datadir>/sockets/node.sock` socket exists and try to connect to that. If that doesn't work, it will spawn a new node process and start up the same way it did before this PR.\r\n\r\nThe default `bitcoin-gui` connect option is `-ipcconnect=auto`, which tries to connect if possible as described above, and spawns a new `bitcoin-node` process if not possible. Other supported options are `-noipcconnect` to never connect to an existing node and always spawn a new one, `-ipcconnect` to require a connection and fail if it can't be established, and `-ipcconnect=unix:<socket>` to require a connection and use a custom socket path.\r\n\r\nWith this PR, basic functionality works and gui instances can connect and disconnect from a running node. But there are rough edges: If a gui process doesn't shut down cleanly, the node can see unhandled IpcExceptions, and if node command line options are passed to `bitcoin-gui` and `bitcoin-gui` connects to an exiting bitcoin-node process instead of spawning a new one, the node options will be silently ignored. \r\n\r\nThese changes require multiprocess support and this PR has no effect unless bitcoin is configured with `--enable-multiprocess` as described in [doc/multiprocess.md](https://github.com/bitcoin/bitcoin/blob/master/doc/multiprocess.md)",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135946,
              "node_id": "MDU6TGFiZWwxMzU5NDY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/GUI",
              "name": "GUI",
              "color": "02d7e1",
              "default": false
            },
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 9,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19461",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19461",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19461.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19461.patch"
          },
          "created_at": "2020-07-07T19:00:11Z",
          "updated_at": "2023-05-30T16:04:49Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-07T21:07:17Z",
      "updated_at": "2020-07-07T21:07:17Z",
      "source": {
        "issue": {
          "id": 652543635,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ1NTkyMDUz",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19460",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19460/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19460/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19460/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19460",
          "number": 19460,
          "state": "open",
          "state_reason": null,
          "title": "multiprocess: Add bitcoin-wallet -ipcconnect option",
          "body": "This PR is part of the [process separation project](https://github.com/bitcoin/bitcoin/projects/10).\r\n\r\n---\r\n\r\n**This is based on #10102.** The non-base commits are:\r\n\r\n- [`bbefbd3c199b` multiprocess: Add -ipcconnect and -ipcbind options](https://github.com/bitcoin/bitcoin/pull/19460/commits/bbefbd3c199b189188d6427b4564b17477c6d50e)\r\n\r\n---\r\n\r\nBuilding on #10102, this adds an `-ipcconnect` option to `bitcoin-wallet` and an `-ipcbind` option to `bitcoin-node` (both enabled by default in multiprocess builds) so bitcoin node will listen on a `<datadir>/sockets/node.sock` unix socket, and `bitcoin-wallet` will connect to it.\r\n\r\nThe idea is that `bitcoin-wallet` can be extended in the future to have some online functionality. For example, there could be a `bitcoin-wallet sync` command that will update balances and sync latest transactions to an unloaded wallet, or a `bitcoin-wallet serve` subcommand that loads a wallet and serves RPC requests, or a `bitcoin-wallet shell` subcommand that allows running RPC methods interactively like the GUI console, or just general support for `bitcoin-wallet <rpc method> <rpc params>` invocations suggested https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-455187379.\r\n\r\nThis PR is small and doesn't do much. The only visible change is that `bitcoin-wallet` now checks whether a node socket exists on startup and prints \"Connected to IPC address\" if it can connect it it.\r\n\r\nThe default `bitcoin-wallet` connect option is `-ipcconnect=auto`, which connects if possible as described above, and proceeds offline if not possible. Other supported options are `-noipcconnect` to disable ipc, `-ipcconnect` to require a connection and fail if it can't be established, and `-ipcconnect=unix:<socket>` to require a connection and use a custom socket path.\r\n\r\nThese changes require multiprocess support and this PR has no effect unless bitcoin is configured with `--enable-multiprocess` as described in [doc/multiprocess.md](https://github.com/bitcoin/bitcoin/blob/master/doc/multiprocess.md)\r\n",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 5,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19460",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19460",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19460.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19460.patch"
          },
          "created_at": "2020-07-07T18:53:19Z",
          "updated_at": "2023-05-30T16:04:55Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-08T18:46:59Z",
      "updated_at": "2020-07-08T18:46:59Z",
      "source": {
        "issue": {
          "id": 653391626,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ2MzE5NzYy",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19471",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19471/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19471/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19471/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19471",
          "number": 19471,
          "state": "closed",
          "state_reason": null,
          "title": "util: Make default arg values more specific",
          "body": "This PR:\r\n- silents printing of the `-daemon` option for `bitcoin-qt`\r\n- prints the correct default value of the `-printtoconsole` option for `bitcoin-qt`\r\n- prints the default value of the `-server` option\r\n\r\n---\r\n\r\nOn master (abdfd2d0e3ebec7dbead89317ee9192189a35809):\r\n```\r\n$ ./src/bitcoind -help  # `bitcoin-qt -help' prints the same\r\n...\r\n  -daemon\r\n       Run in the background as a daemon and accept commands\r\n...\r\n  -printtoconsole\r\n       Send trace/debug info to console (default: 1 when no -daemon. To disable\r\n       logging to file, set -nodebuglogfile)\r\n...\r\n  -server\r\n       Accept command line and JSON-RPC commands\r\n```\r\n\r\n---\r\n\r\nWith this PR:\r\n```\r\n$ ./src/bitcoind -help\r\n...\r\n  -daemon\r\n       Run in the background as a daemon and accept commands\r\n...\r\n  -printtoconsole\r\n       Send trace/debug info to console (default: 1). Disabled when -daemon=1.\r\n       To disable logging to file, set -nodebuglogfile\r\n...\r\n  -server\r\n       Accept command line and JSON-RPC commands (default: 1)\r\n\r\n$ ./src/qt/bitcoin-qt -help\r\n...\r\n  -printtoconsole\r\n       Send trace/debug info to console (default: 0). To disable logging to\r\n       file, set -nodebuglogfile\r\n...\r\n  -server\r\n       Accept command line and JSON-RPC commands (default: 0)\r\n```",
          "user": {
            "login": "hebasto",
            "id": 32963518,
            "node_id": "MDQ6VXNlcjMyOTYzNTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hebasto",
            "html_url": "https://github.com/hebasto",
            "followers_url": "https://api.github.com/users/hebasto/followers",
            "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
            "organizations_url": "https://api.github.com/users/hebasto/orgs",
            "repos_url": "https://api.github.com/users/hebasto/repos",
            "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/hebasto/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 749416508,
              "node_id": "MDU6TGFiZWw3NDk0MTY1MDg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Up%20for%20grabs",
              "name": "Up for grabs",
              "color": "99a810",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "comments": 21,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19471",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19471",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19471.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19471.patch"
          },
          "closed_at": "2022-04-22T14:32:53Z",
          "created_at": "2020-07-08T15:28:52Z",
          "updated_at": "2023-04-22T14:45:02Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-09T16:23:46Z",
      "updated_at": "2020-07-09T16:23:46Z",
      "source": {
        "issue": {
          "id": 632519068,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDI5MjUyMTg5",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19191",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19191/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19191/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19191/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19191",
          "number": 19191,
          "state": "closed",
          "state_reason": null,
          "title": "net: Extract download permission from noban",
          "body": "It should be possible to grant nodes in a local network (e.g. home, university, enterprise, ...) permission to download blocks even after the maxuploadtarget is hit.\r\n\r\nCurrently this is only possible by setting the `noban` permission, which has some adverse effects, especially if the peers can't be fully trusted.\r\n\r\nFix this by extracting a `download` permission from `noban`.",
          "user": {
            "login": "MarcoFalke",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarcoFalke",
            "html_url": "https://github.com/MarcoFalke",
            "followers_url": "https://api.github.com/users/MarcoFalke/followers",
            "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
            "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
            "repos_url": "https://api.github.com/users/MarcoFalke/repos",
            "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 10,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19191",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19191",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19191.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19191.patch"
          },
          "closed_at": "2020-07-09T15:05:30Z",
          "created_at": "2020-06-06T15:05:23Z",
          "updated_at": "2022-02-15T10:33:30Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 3530536622,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM1MzA1MzY2MjI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3530536622",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-09T16:33:42Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3532770649,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzUzMjc3MDY0OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3532770649",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-10T07:53:01Z"
    },
    {
      "event": "commented",
      "id": 656540518,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY1NjU0MDUxOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/656540518",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-10T07:55:51Z",
      "updated_at": "2020-07-10T07:55:51Z",
      "author_association": "MEMBER",
      "body": "Rebased d4a143ae233fc5fd0cb3c08ce7c388434d256574 -> b61233d7ab4afe6cd7875b178e923fab59f0534a ([pr18077.29](https://github.com/hebasto/bitcoin/commits/pr18077.29) -> [pr18077.30](https://github.com/hebasto/bitcoin/commits/pr18077.30)) due to the conflicts with #19191 and #19314.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-656540518",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "unlabeled",
      "id": 3533100805,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzUzMzEwMDgwNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3533100805",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-10T09:21:11Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-11T13:46:15Z",
      "updated_at": "2020-07-11T13:46:15Z",
      "source": {
        "issue": {
          "id": 549156945,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MzYyMzAxMzEz",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17919",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17919/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17919/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17919/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/17919",
          "number": 17919,
          "state": "closed",
          "state_reason": null,
          "title": "depends: Allow building with system clang",
          "body": "This replaces: #17099\r\n\r\n-----\r\n\r\nThis patchset allows us to force depends to use system clang.\r\n\r\nPreviously, #17099 removes our dependency on a specific clang we download from llvm.org, but theuni pointed out that since OSX builds are only ever built with a version of clang that is chosen and \"blessed\" by Apple, it is more likely that the user will encounter problems if they use their system clang. This patchset forces the user to set `FORCE_USE_SYSTEM_CLANG=1` in order to use their system clang (when they know what they're doing)",
          "user": {
            "login": "dongcarl",
            "id": 3445290,
            "node_id": "MDQ6VXNlcjM0NDUyOTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dongcarl",
            "html_url": "https://github.com/dongcarl",
            "followers_url": "https://api.github.com/users/dongcarl/followers",
            "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
            "organizations_url": "https://api.github.com/users/dongcarl/orgs",
            "repos_url": "https://api.github.com/users/dongcarl/repos",
            "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/dongcarl/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 20,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17919",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/17919",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/17919.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/17919.patch"
          },
          "closed_at": "2020-07-16T14:42:58Z",
          "created_at": "2020-01-13T20:16:31Z",
          "updated_at": "2022-02-15T10:47:12Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-11T19:25:03Z",
      "updated_at": "2020-07-11T19:25:03Z",
      "source": {
        "issue": {
          "id": 655249645,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ3Nzk2MjY3",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19495",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19495/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19495/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19495/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19495",
          "number": 19495,
          "state": "closed",
          "state_reason": null,
          "title": "ci: Disable macOS functional tests on forked repos to avoid timeouts",
          "body": "See: https://github.com/bitcoin-core/gui/issues/5#issuecomment-656819184\r\n\r\nAdditionally, this PR:\r\n- updates macOS image to the recent 10.15.5 version\r\n- drops Homebrew caching as the Travis Homebrew addon have been used since #18438\r\n\r\nMy forked repo build: https://travis-ci.org/github/hebasto/bitcoin/jobs/707200431",
          "user": {
            "login": "hebasto",
            "id": 32963518,
            "node_id": "MDQ6VXNlcjMyOTYzNTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hebasto",
            "html_url": "https://github.com/hebasto",
            "followers_url": "https://api.github.com/users/hebasto/followers",
            "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
            "organizations_url": "https://api.github.com/users/hebasto/orgs",
            "repos_url": "https://api.github.com/users/hebasto/repos",
            "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/hebasto/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19495",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19495",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19495.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19495.patch"
          },
          "closed_at": "2020-07-14T06:42:34Z",
          "created_at": "2020-07-11T17:42:17Z",
          "updated_at": "2022-02-15T10:33:37Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 3542818265,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM1NDI4MTgyNjU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3542818265",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-14T07:19:46Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3543021940,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzU0MzAyMTk0MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3543021940",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-14T08:15:55Z"
    },
    {
      "event": "commented",
      "id": 658041248,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY1ODA0MTI0OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/658041248",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-14T08:17:47Z",
      "updated_at": "2020-07-14T08:17:47Z",
      "author_association": "MEMBER",
      "body": "Rebased b61233d7ab4afe6cd7875b178e923fab59f0534a -> 1c4bfdb46d48fed6c3f43bbdd7973069cdd21baf ([pr18077.30](https://github.com/hebasto/bitcoin/commits/pr18077.30) -> [pr18077.31](https://github.com/hebasto/bitcoin/commits/pr18077.31)) due to the conflict with #19495.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-658041248",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "unlabeled",
      "id": 3543302517,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzU0MzMwMjUxNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3543302517",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-14T09:24:45Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 3553975136,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM1NTM5NzUxMzY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3553975136",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-16T16:01:37Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3554618845,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzU1NDYxODg0NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3554618845",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-16T18:41:11Z"
    },
    {
      "event": "commented",
      "id": 659598396,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY1OTU5ODM5Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/659598396",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-16T18:42:43Z",
      "updated_at": "2020-07-16T18:42:43Z",
      "author_association": "MEMBER",
      "body": "Rebased 1c4bfdb46d48fed6c3f43bbdd7973069cdd21baf -> 155d87877c11a32abe1ed91799776691b5977a31 ([pr18077.31](https://github.com/hebasto/bitcoin/commits/pr18077.31) -> [pr18077.32](https://github.com/hebasto/bitcoin/commits/pr18077.32)) due to the conflict with #17919.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-659598396",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "unlabeled",
      "id": 3554964464,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzU1NDk2NDQ2NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3554964464",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-16T20:11:56Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-20T08:16:23Z",
      "updated_at": "2020-07-20T08:16:23Z",
      "source": {
        "issue": {
          "id": 661506016,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDUzMTcwODM0",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19558",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19558/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19558/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19558/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19558",
          "number": 19558,
          "state": "closed",
          "state_reason": null,
          "title": "build: split pthread flags out of ldflags and dont use when building libconsensus",
          "body": "TLDR: Split pthread flags out of ldflags, and stop using them when building libconsensus.\r\n\r\nBuilding libconsensus on Linux using Clang currently warns. i.e:\r\n```bash\r\n./autogen.sh\r\n./configure --disable-tests --disable-bench --with-utils=no --with-daemon=no --with-gui=no --disable-wallet --with-libs=yes CC=clang CXX=clang++\r\nmake V=1 -j6\r\n... -Wl,-z -Wl,relro -Wl,-z -Wl,now   -pthread -Wl,-soname -Wl,libbitcoinconsensus.so.0 -o .libs/libbitcoinconsensus.so.0.0.0\r\nclang: warning: argument unused during compilation: '-pthread' [-Wunused-command-line-argument]\r\nclang: warning: argument unused during compilation: '-pthread' [-Wunused-command-line-argument]\r\n```\r\n\r\nBesides wanting to quiet the warnings, after digging into this it seemed we could clean up how we are passing around the pthread flags. I also learnt a bit more about how libtools builds shared libraries, and that passing `-pthread` on the link line wouldn't be enough to link against pthreads anyways, due to libtools usage of -nostdlib (see [related discussion where we build DLLs](https://github.com/bitcoin/bitcoin/blob/476436b2dec254bb988f8c7a6cbec1d7bb7cecfd/configure.ac#L603)).\r\n\r\nThis can be demonstrated with a patch to libconsensus:\r\n```patch\r\ndiff --git a/src/script/bitcoinconsensus.cpp b/src/script/bitcoinconsensus.cpp\r\nindex 15e204062..10bf3582f 100644\r\n--- a/src/script/bitcoinconsensus.cpp\r\n+++ b/src/script/bitcoinconsensus.cpp\r\n@@ -10,6 +10,8 @@\r\n #include <script/interpreter.h>\r\n #include <version.h>\r\n \r\n+#include <pthread.h>\r\n+\r\n namespace {\r\n \r\n /** A class that deserializes a single CTransaction one time. */\r\n@@ -127,3 +129,10 @@ unsigned int bitcoinconsensus_version()\r\n     // Just use the API version for now\r\n     return BITCOINCONSENSUS_API_VER;\r\n }\r\n+\r\n+void *func_pthread(void *x) { return x; }\r\n+\r\n+void f() {\r\n+\tpthread_t t;\r\n+\tpthread_create(&t,0,func_pthread,0);\r\n+}\r\n```\r\n\r\nAfter building,  you'll find you have a `libbitcoinconsensus.so` using pthread symbols, but which isn't linked against libpthread:\r\n```bash\r\nldd -r src/.libs/libbitcoinconsensus.so\r\n\tlinux-vdso.so.1 (0x00007ffe49378000)\r\n\tlibstdc++.so.6 => /usr/lib/x86_64-linux-gnu/libstdc++.so.6 (0x00007f553cee7000)\r\n\tlibm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007f553cda2000)\r\n\tlibgcc_s.so.1 => /lib/x86_64-linux-gnu/libgcc_s.so.1 (0x00007f553cd88000)\r\n\tlibc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f553cbc5000)\r\n\t/lib64/ld-linux-x86-64.so.2 (0x00007f553d15d000)\r\nundefined symbol: pthread_create\t(src/.libs/libbitcoinconsensus.so)\r\n```\r\n\r\nThis libtool behaviour has been known about for some time, i.e this [thread from 2005](https://gcc.gnu.org/bugzilla/show_bug.cgi?id=25460),  describes the same issue. The suggestion from libtool maintainers at the time is to add `-lpthread` to LDFLAGS.\r\n\r\nAlso worth noting is that some of the users in those threads were also using the `AX_PTHREADS` macro, same as us, to determine how to compile with/link against pthreads. This macro has [recently been updated](https://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=commitdiff;h=2fb904589643eb6ca6122f834891b58d1d51b347), with reference to this issue. You can compare the output from the version we currently use, to the new version:\r\n```bash\r\n# our ax_pthread macro:\r\n  PTHREAD_CFLAGS = -pthread\r\n  PTHREAD_LIBS  = \r\n  PTHREAD_CC    = gcc / clang\r\n\r\n# the new ax_pthread macro\r\n  PTHREAD_CFLAGS = -pthread\r\n  PTHREAD_LIBS  = -lpthread\r\n  PTHREAD_CC    = gcc / clang\r\n```\r\n\r\nNote that as part of this PR I've also added `PTHREAD_LIBS` to the split out flags. Although we weren't using it anywhere previously (and wouldn't have seemed to matter for the most part, given it was likely empty for most builders), the macro assumes it's use. i.e:\r\n> NOTE: You are assumed to not only compile your program with these flags,\r\n> but also to link with them as well. For example, you might link with\r\n> $PTHREAD_CC $CFLAGS $PTHREAD_CFLAGS $LDFLAGS ... $PTHREAD_LIBS $LIBS",
          "user": {
            "login": "fanquake",
            "id": 863730,
            "node_id": "MDQ6VXNlcjg2MzczMA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fanquake",
            "html_url": "https://github.com/fanquake",
            "followers_url": "https://api.github.com/users/fanquake/followers",
            "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
            "organizations_url": "https://api.github.com/users/fanquake/orgs",
            "repos_url": "https://api.github.com/users/fanquake/repos",
            "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/fanquake/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 12,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19558",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19558",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19558.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19558.patch"
          },
          "closed_at": "2020-09-15T11:04:56Z",
          "created_at": "2020-07-20T08:01:22Z",
          "updated_at": "2022-02-15T10:47:33Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-21T12:14:03Z",
      "updated_at": "2020-07-21T12:14:03Z",
      "source": {
        "issue": {
          "id": 662889934,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDU0Mzk0NzEx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19561",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19561/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19561/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19561/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19561",
          "number": 19561,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: Pass ArgsManager into functions that register args",
          "body": "Rationale: reduce use of gArgs to decouple code and simplify future maintenance and easier unit testing.\r\n\r\nThis PR is continuation of work started in  #18926 and #18662\r\nIt covers only places that register args in ArgsManager with `AddArgs()` or `AddHiddenArgs()`.\r\n\r\nCloses #19511 ",
          "user": {
            "login": "S3RK",
            "id": 1466284,
            "node_id": "MDQ6VXNlcjE0NjYyODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/S3RK",
            "html_url": "https://github.com/S3RK",
            "followers_url": "https://api.github.com/users/S3RK/followers",
            "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
            "organizations_url": "https://api.github.com/users/S3RK/orgs",
            "repos_url": "https://api.github.com/users/S3RK/repos",
            "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/S3RK/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 5,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19561",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19561",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19561.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19561.patch"
          },
          "closed_at": "2020-07-30T15:10:09Z",
          "created_at": "2020-07-21T11:08:27Z",
          "updated_at": "2022-02-15T10:36:20Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-23T21:03:03Z",
      "updated_at": "2020-07-23T21:03:03Z",
      "source": {
        "issue": {
          "id": 620849702,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDIwMDE0OTMw",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19013",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19013/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19013/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19013/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19013",
          "number": 19013,
          "state": "closed",
          "state_reason": null,
          "title": "test: add v0.20.1, v0.21.0 and v22.0 to backwards compatibility test ",
          "body": "This also simplifies the tests a bit.",
          "user": {
            "login": "Sjors",
            "id": 10217,
            "node_id": "MDQ6VXNlcjEwMjE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sjors",
            "html_url": "https://github.com/Sjors",
            "followers_url": "https://api.github.com/users/Sjors/followers",
            "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
            "organizations_url": "https://api.github.com/users/Sjors/orgs",
            "repos_url": "https://api.github.com/users/Sjors/repos",
            "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Sjors/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "comments": 26,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19013",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19013",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19013.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19013.patch"
          },
          "closed_at": "2022-02-24T16:44:13Z",
          "created_at": "2020-05-19T10:08:00Z",
          "updated_at": "2023-02-24T10:14:31Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-26T18:33:08Z",
      "updated_at": "2020-07-26T18:33:08Z",
      "source": {
        "issue": {
          "id": 665535301,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDU2NTgwNzIz",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19588",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19588/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19588/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19588/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19588",
          "number": 19588,
          "state": "closed",
          "state_reason": null,
          "title": "test: Add random interval upper bound in regtest",
          "body": "Actually, the exponential distribution is unbounded that causes intermittent timeout errors in functional tests.\r\n\r\nFix #18832\r\nFix #18969\r\nFix #19265\r\nFix #19311",
          "user": {
            "login": "hebasto",
            "id": 32963518,
            "node_id": "MDQ6VXNlcjMyOTYzNTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hebasto",
            "html_url": "https://github.com/hebasto",
            "followers_url": "https://api.github.com/users/hebasto/followers",
            "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
            "organizations_url": "https://api.github.com/users/hebasto/orgs",
            "repos_url": "https://api.github.com/users/hebasto/repos",
            "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/hebasto/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19588",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19588",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19588.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19588.patch"
          },
          "closed_at": "2020-08-15T18:43:03Z",
          "created_at": "2020-07-25T07:24:27Z",
          "updated_at": "2022-02-15T10:35:00Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-27T06:14:46Z",
      "updated_at": "2020-07-27T06:14:46Z",
      "source": {
        "issue": {
          "id": 627993794,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDI1NjMzOTI5",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19124",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19124/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19124/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19124/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19124",
          "number": 19124,
          "state": "closed",
          "state_reason": null,
          "title": "doc: Document ALLOW_HOST_PACKAGES dependency option",
          "body": "Provided entry in depends, README.md to ensure that ALLOW_HOST_PACKAGES dependency option is documented, #19113 ",
          "user": {
            "login": "skmcontrib",
            "id": 20492282,
            "node_id": "MDQ6VXNlcjIwNDkyMjgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/20492282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skmcontrib",
            "html_url": "https://github.com/skmcontrib",
            "followers_url": "https://api.github.com/users/skmcontrib/followers",
            "following_url": "https://api.github.com/users/skmcontrib/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/skmcontrib/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/skmcontrib/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/skmcontrib/subscriptions",
            "organizations_url": "https://api.github.com/users/skmcontrib/orgs",
            "repos_url": "https://api.github.com/users/skmcontrib/repos",
            "events_url": "https://api.github.com/users/skmcontrib/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/skmcontrib/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 148216,
              "node_id": "MDU6TGFiZWwxNDgyMTY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Docs",
              "name": "Docs",
              "color": "02d7e1",
              "default": false
            },
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "NONE",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 12,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19124",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19124",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19124.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19124.patch"
          },
          "closed_at": "2020-10-27T09:18:50Z",
          "created_at": "2020-05-31T16:12:28Z",
          "updated_at": "2022-02-15T10:48:21Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 3604725909,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM2MDQ3MjU5MDk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3604725909",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-30T16:26:56Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3608240662,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzYwODI0MDY2Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3608240662",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-31T12:12:55Z"
    },
    {
      "event": "commented",
      "id": 667089839,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY2NzA4OTgzOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/667089839",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-31T12:14:16Z",
      "updated_at": "2020-07-31T12:14:16Z",
      "author_association": "MEMBER",
      "body": "Rebased 155d87877c11a32abe1ed91799776691b5977a31 -> 88b1f0357c332bc67fa20450dda9f77fa449576e ([pr18077.32](https://github.com/hebasto/bitcoin/commits/pr18077.32) -> [pr18077.33](https://github.com/hebasto/bitcoin/commits/pr18077.33)) due to the conflict with #19561.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-667089839",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "unlabeled",
      "id": 3608503435,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzYwODUwMzQzNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3608503435",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-31T13:24:48Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 3632630492,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM2MzI2MzA0OTI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3632630492",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-07T10:09:15Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3635441358,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzYzNTQ0MTM1OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3635441358",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-08T07:18:46Z"
    },
    {
      "event": "commented",
      "id": 670837706,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3MDgzNzcwNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/670837706",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-08T07:19:53Z",
      "updated_at": "2020-08-08T07:19:53Z",
      "author_association": "MEMBER",
      "body": "Rebased 88b1f0357c332bc67fa20450dda9f77fa449576e -> 225f512438f4391f6af255f851131358e3c466a2 ([pr18077.33](https://github.com/hebasto/bitcoin/commits/pr18077.33) -> [pr18077.34](https://github.com/hebasto/bitcoin/commits/pr18077.34)) due to the conflict with #19098.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-670837706",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "unlabeled",
      "id": 3635497691,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzYzNTQ5NzY5MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3635497691",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-08T09:01:43Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 671373132,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3MTM3MzEzMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/671373132",
      "actor": {
        "login": "adamjonas",
        "id": 755825,
        "node_id": "MDQ6VXNlcjc1NTgyNQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/755825?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/adamjonas",
        "html_url": "https://github.com/adamjonas",
        "followers_url": "https://api.github.com/users/adamjonas/followers",
        "following_url": "https://api.github.com/users/adamjonas/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/adamjonas/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/adamjonas/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/adamjonas/subscriptions",
        "organizations_url": "https://api.github.com/users/adamjonas/orgs",
        "repos_url": "https://api.github.com/users/adamjonas/repos",
        "events_url": "https://api.github.com/users/adamjonas/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/adamjonas/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-10T14:02:08Z",
      "updated_at": "2020-08-20T19:20:45Z",
      "author_association": "MEMBER",
      "body": "For those looking to review or revisit:\r\n\r\n(All pre-rebase)\r\nThere are concept ACKs from: luke-jr, dongcarl, Sjors, Sipa\r\na tACK from tryphe\r\nwith no NACKs or blocking issues",
      "user": {
        "login": "adamjonas",
        "id": 755825,
        "node_id": "MDQ6VXNlcjc1NTgyNQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/755825?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/adamjonas",
        "html_url": "https://github.com/adamjonas",
        "followers_url": "https://api.github.com/users/adamjonas/followers",
        "following_url": "https://api.github.com/users/adamjonas/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/adamjonas/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/adamjonas/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/adamjonas/subscriptions",
        "organizations_url": "https://api.github.com/users/adamjonas/orgs",
        "repos_url": "https://api.github.com/users/adamjonas/repos",
        "events_url": "https://api.github.com/users/adamjonas/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/adamjonas/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-671373132",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "commented",
      "id": 677847589,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3Nzg0NzU4OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/677847589",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-20T19:11:10Z",
      "updated_at": "2020-08-20T19:11:25Z",
      "author_association": "CONTRIBUTOR",
      "body": "Tested 225f512438f4391f6af255f851131358e3c466a2, works:\r\n```\r\n2020-08-20T19:07:08Z NAT-PMP: Port mapping successful. External address = <redacted>\r\n```\r\n\r\n---\r\n\r\nDid not read code yet",
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-677847589",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-20T20:09:54Z",
      "updated_at": "2020-08-20T20:09:54Z",
      "source": {
        "issue": {
          "id": 680400279,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDY4OTY2ODIy",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19751",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19751/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19751/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19751/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19751",
          "number": 19751,
          "state": "closed",
          "state_reason": null,
          "title": "depends: Split libpng out of Qt",
          "body": "Just using upstream libpng from #14066\r\n\r\nThis should be testable/reviewable without a PPC64 machine (and once merged should avoid needing to rebuild Qt for #14066).",
          "user": {
            "login": "luke-jr",
            "id": 1095675,
            "node_id": "MDQ6VXNlcjEwOTU2NzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/luke-jr",
            "html_url": "https://github.com/luke-jr",
            "followers_url": "https://api.github.com/users/luke-jr/followers",
            "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
            "organizations_url": "https://api.github.com/users/luke-jr/orgs",
            "repos_url": "https://api.github.com/users/luke-jr/repos",
            "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/luke-jr/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 12,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19751",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19751",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19751.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19751.patch"
          },
          "closed_at": "2020-09-22T23:41:17Z",
          "created_at": "2020-08-17T17:24:14Z",
          "updated_at": "2022-02-15T11:04:25Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-20T21:14:19Z",
      "updated_at": "2020-08-20T21:14:19Z",
      "source": {
        "issue": {
          "id": 668937036,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDU5MzY3NjM3",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19629",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19629/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19629/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19629/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19629",
          "number": 19629,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: Keep mempool interface in validation ",
          "body": "Next step toward #19556 \r\n\r\nInstead of relying on the mempool global, each chainstate is given an optional mempool to keep up to date with the tip (block connections, disconnections, reorgs, ...)",
          "user": {
            "login": "MarcoFalke",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarcoFalke",
            "html_url": "https://github.com/MarcoFalke",
            "followers_url": "https://api.github.com/users/MarcoFalke/followers",
            "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
            "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
            "repos_url": "https://api.github.com/users/MarcoFalke/repos",
            "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 27,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19629",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19629",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19629.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19629.patch"
          },
          "closed_at": "2020-08-28T07:43:24Z",
          "created_at": "2020-07-30T16:26:58Z",
          "updated_at": "2022-02-15T10:35:32Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-22T11:48:40Z",
      "updated_at": "2020-08-22T11:48:40Z",
      "source": {
        "issue": {
          "id": 683958416,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDcxOTU5MTA5",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19779",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19779/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19779/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19779/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19779",
          "number": 19779,
          "state": "closed",
          "state_reason": null,
          "title": "Remove gArgs global from init",
          "body": "The gArgs global has several issues:\r\n\r\n* gArgs is used by each process (bitcoind, bitcoin-qt, bitcoin-wallet, bitcoin-cli, bitcoin-tx, ...), but it is hard to determine which arguments are actually used by each process. For example arguments that have never been registered, but are still used, will always return the fallback value.\r\n* Tests may run several sub-tests, which need different settings. So globals will have to be overwritten, but that is fragile on its own: e.g. https://github.com/bitcoin/bitcoin/pull/19704#issuecomment-678259092 or #19511\r\n\r\nThe goal is to remove gArgs, but as a first step in that direction this pull will change gArgs in init to use a passed-in reference instead.\r\n\r\n",
          "user": {
            "login": "MarcoFalke",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarcoFalke",
            "html_url": "https://github.com/MarcoFalke",
            "followers_url": "https://api.github.com/users/MarcoFalke/followers",
            "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
            "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
            "repos_url": "https://api.github.com/users/MarcoFalke/repos",
            "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19779",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19779",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19779.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19779.patch"
          },
          "closed_at": "2020-08-26T07:19:04Z",
          "created_at": "2020-08-22T08:41:39Z",
          "updated_at": "2022-02-15T10:35:21Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-22T21:17:09Z",
      "updated_at": "2020-08-22T21:17:09Z",
      "source": {
        "issue": {
          "id": 684024102,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDcyMDA3MTc0",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19780",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19780/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19780/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19780/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19780",
          "number": 19780,
          "state": "closed",
          "state_reason": null,
          "title": "build, qt: Add SVG support, and replace bitcoin PNG image with SVG one",
          "body": "This PR adds SVG support, and replaces `bitcoin.png` with `bitcoin.svg`.\r\nHere are the benefits:\r\n- no more icon scaling issues on Linux desktops (fixes #14992, an alternative to #14990)\r\n- ability to drop PNG support, after replacement of all icons (as possible alternative to #19751)\r\n\r\nFedora 32:\r\n![Screenshot from 2020-08-22 19-44-45](https://user-images.githubusercontent.com/32963518/90961244-2ab36b80-e4b0-11ea-855f-f92347080699.png)\r\n\r\nUbuntu Focal 20.04:\r\n![DeepinScreenshot_select-area_20200822224245](https://user-images.githubusercontent.com/32963518/90964410-f13b2a00-e4c8-11ea-97aa-855ca2aba91f.png)\r\n\r\n\"About Bitcoin Core\" dialog with this PR:\r\n![Screenshot from 2020-08-22 22-47-19](https://user-images.githubusercontent.com/32963518/90964466-8b9b6d80-e4c9-11ea-9b64-2929606f2b8d.png)\r\n\r\n---\r\n\r\nhttps://github.com/bitcoin-core/packaging/pull/27#issuecomment-519515227:\r\n> I slighly remember that the png I made where slighly different then the SVG (optimized shadows, etc.). But not sure if this is still the case and if it matters. Just something to dbl-check.\r\n\r\nWith Qt 5.9.8 (our gitian builds) difference in shadows is observed. No differences with newer Qt versions.",
          "user": {
            "login": "hebasto",
            "id": 32963518,
            "node_id": "MDQ6VXNlcjMyOTYzNTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hebasto",
            "html_url": "https://github.com/hebasto",
            "followers_url": "https://api.github.com/users/hebasto/followers",
            "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
            "organizations_url": "https://api.github.com/users/hebasto/orgs",
            "repos_url": "https://api.github.com/users/hebasto/repos",
            "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/hebasto/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135946,
              "node_id": "MDU6TGFiZWwxMzU5NDY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/GUI",
              "name": "GUI",
              "color": "02d7e1",
              "default": false
            },
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "comments": 13,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19780",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19780",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19780.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19780.patch"
          },
          "closed_at": "2020-08-23T08:14:25Z",
          "created_at": "2020-08-22T16:23:52Z",
          "updated_at": "2022-10-30T19:10:22Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 3693769133,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM2OTM3NjkxMzM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3693769133",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-26T09:03:23Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3693809438,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzY5MzgwOTQzOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3693809438",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-26T09:12:21Z"
    },
    {
      "event": "commented",
      "id": 680760631,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY4MDc2MDYzMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/680760631",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-26T09:13:31Z",
      "updated_at": "2020-08-26T09:13:31Z",
      "author_association": "MEMBER",
      "body": "Rebased 225f512438f4391f6af255f851131358e3c466a2 -> 22cbf4eefaa7333a3e2bf94fbf4d3e7b4bf379cb ([pr18077.34](https://github.com/hebasto/bitcoin/commits/pr18077.34) -> [pr18077.35](https://github.com/hebasto/bitcoin/commits/pr18077.35)) due to the conflict with #19779.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-680760631",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "unlabeled",
      "id": 3694286638,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzY5NDI4NjYzOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3694286638",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-26T11:13:09Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 3695361018,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM2OTUzNjEwMTg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3695361018",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-26T15:23:23Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3695769392,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzY5NTc2OTM5Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3695769392",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-26T17:00:28Z"
    },
    {
      "event": "commented",
      "id": 681005079,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY4MTAwNTA3OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/681005079",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-26T17:01:18Z",
      "updated_at": "2020-08-26T17:01:18Z",
      "author_association": "MEMBER",
      "body": "Rebased 22cbf4eefaa7333a3e2bf94fbf4d3e7b4bf379cb -> 2b6bd32e915d13928577b038c18194ac4024fc10 ([pr18077.35](https://github.com/hebasto/bitcoin/commits/pr18077.35) -> [pr18077.36](https://github.com/hebasto/bitcoin/commits/pr18077.36)) due to the conflict with https://github.com/bitcoin-core/gui/pull/35.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-681005079",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "unlabeled",
      "id": 3695875684,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzY5NTg3NTY4NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3695875684",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-26T17:28:29Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-31T14:47:48Z",
      "updated_at": "2020-08-31T14:47:48Z",
      "source": {
        "issue": {
          "id": 689199411,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDc2MjkxOTM1",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19845",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19845/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19845/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19845/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19845",
          "number": 19845,
          "state": "closed",
          "state_reason": null,
          "title": "net: CNetAddr: add support to (un)serialize as ADDRv2",
          "body": "(chopped off from #19031 to ease review)\r\n\r\nAdd an optional support to serialize/unserialize `CNetAddr` in ADDRv2 format (BIP155). The new serialization is engaged by ORing a flag into the stream version.\r\n\r\nSo far this is only used in tests to ensure the new code works as expected.",
          "user": {
            "login": "vasild",
            "id": 266751,
            "node_id": "MDQ6VXNlcjI2Njc1MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vasild",
            "html_url": "https://github.com/vasild",
            "followers_url": "https://api.github.com/users/vasild/followers",
            "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
            "organizations_url": "https://api.github.com/users/vasild/orgs",
            "repos_url": "https://api.github.com/users/vasild/repos",
            "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/vasild/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 23,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19845",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19845.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19845.patch"
          },
          "closed_at": "2020-09-28T19:27:51Z",
          "created_at": "2020-08-31T13:15:49Z",
          "updated_at": "2022-02-15T10:36:33Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-31T21:08:19Z",
      "updated_at": "2020-08-31T21:08:19Z",
      "source": {
        "issue": {
          "id": 621891785,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDIwODU2NDcz",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19031",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19031/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19031/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19031/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19031",
          "number": 19031,
          "state": "closed",
          "state_reason": null,
          "title": "Implement ADDRv2 support (part of BIP155)",
          "body": "An implementation of [BIP155](https://github.com/bitcoin/bips/blob/master/bip-0155.mediawiki) `addrv2` messages. To ease review it is split in a few logical changes and submitted as separate, smaller, PRs.\r\n\r\nThe current one for review is: https://github.com/bitcoin/bitcoin/pull/19954\r\n\r\nPreparation changes\r\n---\r\nCommits:\r\n* [x] `test: add an edge case test for CSubNet` (merged via https://github.com/bitcoin/bitcoin/pull/19351)\r\n* [x] `net: improve encapsulation of CNetAddr` (merged via https://github.com/bitcoin/bitcoin/pull/19360)\r\n* [x] `net: document enum Network` (merged via https://github.com/bitcoin/bitcoin/pull/19534)\r\n* [x] `net: save the network type explicitly in CNetAddr` (merged via https://github.com/bitcoin/bitcoin/pull/19534)\r\n\r\nChange `CNetAddr::ip` to have flexible size\r\n---\r\nCommits:\r\n* [x] `net: change CNetAddr::ip to have flexible size` (merged via https://github.com/bitcoin/bitcoin/pull/19628)\r\n\r\nImplement `addrv2` (un)serializing\r\n---\r\nAdd support to serialize `CNetAddr` and `CAddress` in [ADDRv2](https://github.com/bitcoin/bips/blob/master/bip-0155.mediawiki#specification) format. Invoke that from `CAddrMan` serialization methods. Commits:\r\n* [x] `net: move HasPrefix() so it can be reused` (merged via https://github.com/bitcoin/bitcoin/pull/19845)\r\n* [x] `test: move HasReason() so it can be reused` (merged via https://github.com/bitcoin/bitcoin/pull/19845)\r\n* [x] `net: CNetAddr: add support to (un)serialize as ADDRv2` (merged via https://github.com/bitcoin/bitcoin/pull/19845)\r\n* [x] `net: recognize TORv3/I2P/CJDNS networks` (merged via https://github.com/bitcoin/bitcoin/pull/19845)\r\n* [x] `net: CAddress & CAddrMan: (un)serialize as ADDRv2` (merged via https://github.com/bitcoin/bitcoin/pull/19954)\r\n\r\nAdvertise support\r\n---\r\nAdvertise `ADDRv2` support to peers, handle incoming `ADDRv2` messages and send to peers in that format if they have advertised support. Commits:\r\n* [x] `net: advertise support for ADDRv2 via new message` (merged via https://github.com/bitcoin/bitcoin/pull/19954)\r\n\r\nAll the steps to get Tor v3 support are outlined in [issue#18884 Tor v3 support](https://github.com/bitcoin/bitcoin/issues/18884), this PR is one of them.",
          "user": {
            "login": "vasild",
            "id": 266751,
            "node_id": "MDQ6VXNlcjI2Njc1MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vasild",
            "html_url": "https://github.com/vasild",
            "followers_url": "https://api.github.com/users/vasild/followers",
            "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
            "organizations_url": "https://api.github.com/users/vasild/orgs",
            "repos_url": "https://api.github.com/users/vasild/repos",
            "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/vasild/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            },
            {
              "id": 1648013533,
              "node_id": "MDU6TGFiZWwxNjQ4MDEzNTMz",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Review%20club",
              "name": "Review club",
              "description": "",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 42,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19031",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19031",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19031.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19031.patch"
          },
          "closed_at": "2020-09-29T08:53:28Z",
          "created_at": "2020-05-20T16:16:33Z",
          "updated_at": "2022-02-15T10:36:50Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 3767896808,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM3Njc4OTY4MDg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3767896808",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-15T11:40:25Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3768676499,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mzc2ODY3NjQ5OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3768676499",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-15T14:32:17Z"
    },
    {
      "event": "commented",
      "id": 692756420,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY5Mjc1NjQyMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/692756420",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-15T14:34:20Z",
      "updated_at": "2020-09-15T14:34:20Z",
      "author_association": "MEMBER",
      "body": "Rebased 2b6bd32e915d13928577b038c18194ac4024fc10 -> 62601a5a158b8c3710fde7cac8aadaa71a72f110 ([pr18077.36](https://github.com/hebasto/bitcoin/commits/pr18077.36) -> [pr18077.37](https://github.com/hebasto/bitcoin/commits/pr18077.37)) due to the conflict with #19558.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-692756420",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "unlabeled",
      "id": 3769089977,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50Mzc2OTA4OTk3Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3769089977",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-15T15:50:59Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 694135151,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY5NDEzNTE1MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/694135151",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-17T10:09:46Z",
      "updated_at": "2020-09-17T10:09:46Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-694135151",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-19T14:03:27Z",
      "updated_at": "2020-09-19T14:03:27Z",
      "source": {
        "issue": {
          "id": 692676629,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDc5MjUzMjgw",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19866",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19866/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19866/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19866/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19866",
          "number": 19866,
          "state": "closed",
          "state_reason": null,
          "title": "eBPF Linux tracepoints",
          "body": "Instead of writing ad-hoc logging everywhere (eg: #19509), we can take advantage of linux user static defined traces, aka. USDTs ( not the stablecoin :sweat_smile: )\r\n\r\nThe linux kernel can hook into these tracepoints at runtime, but otherwise they have little to no performance impact. Traces can pass data which can be printed externally via tools such as bpftrace. For example, here's one that prints incoming and outgoing network messages:\r\n\r\n# Examples\r\n\r\n## Network Messages\r\n\r\n\r\n```\r\n#!/usr/bin/env bpftrace\r\n\r\nBEGIN\r\n{\r\n  printf(\"bitcoin net msgs\\n\");\r\n  @start = nsecs;\r\n}\r\n\r\nusdt:./src/bitcoind:net:push_message\r\n{\r\n  $ip = str(arg0);\r\n  $peer_id = (int64)arg1;\r\n  $command = str(arg2);\r\n  $data_len = arg3;\r\n  $data = buf(arg3,arg4);\r\n  $t = (nsecs - @start) / 100000;\r\n\r\n  printf(\"%zu outbound %s %s %zu %d %r\\n\", $t, $command, $ip, $peer_id, $data_len, $data);\r\n\r\n  @outbound[$command]++;\r\n}\r\n\r\nusdt:./src/bitcoind:net:process_message\r\n{\r\n  $ip = str(arg0);\r\n  $peer_id = (int64)arg1;\r\n  $command = str(arg2);\r\n  $data_len = arg3;\r\n  $data = buf(arg3,arg4);\r\n  $t = (nsecs - @start) / 100000;\r\n\r\n  printf(\"%zu inbound %s %s %zu %d %r\\n\", $t, $command, $ip, $peer_id, $data_len, $data);\r\n\r\n  @inbound[$ip, $command]++;\r\n}\r\n\r\n```\r\n\r\n    $ sudo bpftrace netmsg.bt\r\n\r\noutput: https://jb55.com/s/b11312484b601fb3.txt\r\n\r\nif you look at the bottom of the output you can see a histogram of all the messages grouped by message type and IP. nice!\r\n\r\n## IBD Benchmarking\r\n\r\n```\r\n#!/usr/bin/env bpftrace\r\nBEGIN\r\n{\r\n  printf(\"IBD to 500,000 bench\\n\");\r\n}\r\n\r\nusdt:./src/bitcoind:CChainState:ConnectBlock\r\n{\r\n  $height = (uint32)arg0;\r\n\r\n  if ($height == 1) {\r\n    printf(\"block 1 found, starting benchmark\\n\");\r\n    @start = nsecs;\r\n  }\r\n\r\n  if ($height >= 500000) {\r\n    @end = nsecs;\r\n    @duration = @end - @start;\r\n    exit();\r\n  }\r\n}\r\n\r\nEND {\r\n  printf(\"duration %d ms\\n\", @duration / 1000000)\r\n}\r\n```\r\nThis one hooks into ConnectBlock and prints the IBD time to height 500,000 starting from the first call to ConnectBlock\r\n\r\nUserspace static tracepoints give lots of flexibility without invasive logging code. It's also more flexible than ad-hoc logging code, allowing you to instrument many different aspects of the system without having to enable per-subsystem logging.\r\n\r\nOther ideas: tracepoints for lock contention, threads, what else?\r\n\r\nLet me know what ya'll think and if this is worth adding to bitcoin.\r\n\r\n## TODO\r\n\r\n- [ ] docs?\r\n- [x] Integrate systemtap-std-dev/libsystemtap into build (provides the <sys/sdt.h> header)\r\n- [x] ~dtrace macos support? (is this still a thing?)~ going to focus on linux for now",
          "user": {
            "login": "jb55",
            "id": 45598,
            "node_id": "MDQ6VXNlcjQ1NTk4",
            "avatar_url": "https://avatars.githubusercontent.com/u/45598?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jb55",
            "html_url": "https://github.com/jb55",
            "followers_url": "https://api.github.com/users/jb55/followers",
            "following_url": "https://api.github.com/users/jb55/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jb55/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jb55/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jb55/subscriptions",
            "organizations_url": "https://api.github.com/users/jb55/orgs",
            "repos_url": "https://api.github.com/users/jb55/repos",
            "events_url": "https://api.github.com/users/jb55/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jb55/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/47",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/47",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/47/labels",
            "id": 5347322,
            "node_id": "MDk6TWlsZXN0b25lNTM0NzMyMg==",
            "number": 47,
            "state": "closed",
            "title": "22.0",
            "description": "",
            "creator": {
              "login": "MarcoFalke",
              "id": 6399679,
              "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
              "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/MarcoFalke",
              "html_url": "https://github.com/MarcoFalke",
              "followers_url": "https://api.github.com/users/MarcoFalke/followers",
              "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
              "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
              "repos_url": "https://api.github.com/users/MarcoFalke/repos",
              "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 124,
            "created_at": "2020-04-25T00:14:49Z",
            "updated_at": "2021-09-14T07:16:53Z",
            "closed_at": "2021-09-09T12:47:52Z"
          },
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 30,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19866",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19866",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19866.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19866.patch"
          },
          "closed_at": "2021-01-18T21:09:30Z",
          "created_at": "2020-09-04T03:54:06Z",
          "updated_at": "2022-08-18T18:19:03Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-30T19:39:24Z",
      "updated_at": "2020-09-30T19:39:24Z",
      "source": {
        "issue": {
          "id": 706699677,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDkxMjAwNDAw",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19998",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19998/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19998/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19998/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19998",
          "number": 19998,
          "state": "closed",
          "state_reason": null,
          "title": "net: Add CNode::ConnectedThroughNetwork member function",
          "body": "This PR:\r\n- adds `CNode::ConnectedThroughNetwork` member function\r\n- is based on #19991, and only last two commits belong to it\r\n- is required for https://github.com/bitcoin-core/gui/pull/86 and #20002",
          "user": {
            "login": "hebasto",
            "id": 32963518,
            "node_id": "MDQ6VXNlcjMyOTYzNTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hebasto",
            "html_url": "https://github.com/hebasto",
            "followers_url": "https://api.github.com/users/hebasto/followers",
            "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
            "organizations_url": "https://api.github.com/users/hebasto/orgs",
            "repos_url": "https://api.github.com/users/hebasto/repos",
            "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/hebasto/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 24,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19998",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19998",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19998.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19998.patch"
          },
          "closed_at": "2020-10-12T16:41:52Z",
          "created_at": "2020-09-22T21:17:34Z",
          "updated_at": "2022-02-15T10:36:53Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-02T19:48:15Z",
      "updated_at": "2020-10-02T19:48:15Z",
      "source": {
        "issue": {
          "id": 707291265,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDkxNzE3NTkx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20002",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20002/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20002/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20002/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/20002",
          "number": 20002,
          "state": "closed",
          "state_reason": null,
          "title": "net, rpc, cli: expose peer network in getpeerinfo; simplify/improve -netinfo",
          "body": "This PR:\r\n\r\n- builds on #19991 and #19998\r\n- exposes peer networks via a new getpeerinfo `network` field (\"ipv4\", \"ipv6\", or \"onion\"), and adds functional tests\r\n- updates -netinfo to use getpeerinfo `network` rather than detecting the peer networks client-side\r\n- refactors -netinfo to easily add future networks",
          "user": {
            "login": "jonatack",
            "id": 2415484,
            "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonatack",
            "html_url": "https://github.com/jonatack",
            "followers_url": "https://api.github.com/users/jonatack/followers",
            "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
            "organizations_url": "https://api.github.com/users/jonatack/orgs",
            "repos_url": "https://api.github.com/users/jonatack/repos",
            "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jonatack/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/45",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/45",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/45/labels",
            "id": 4914019,
            "node_id": "MDk6TWlsZXN0b25lNDkxNDAxOQ==",
            "number": 45,
            "state": "closed",
            "title": "0.21.0",
            "description": "",
            "creator": {
              "login": "laanwj",
              "id": 126646,
              "node_id": "MDQ6VXNlcjEyNjY0Ng==",
              "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/laanwj",
              "html_url": "https://github.com/laanwj",
              "followers_url": "https://api.github.com/users/laanwj/followers",
              "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
              "organizations_url": "https://api.github.com/users/laanwj/orgs",
              "repos_url": "https://api.github.com/users/laanwj/repos",
              "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/laanwj/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 132,
            "created_at": "2019-12-09T08:39:58Z",
            "updated_at": "2021-01-15T19:50:53Z",
            "closed_at": "2021-01-15T19:50:53Z"
          },
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 10,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20002",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/20002",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/20002.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/20002.patch"
          },
          "closed_at": "2020-10-15T15:45:17Z",
          "created_at": "2020-09-23T11:47:46Z",
          "updated_at": "2022-02-15T10:37:29Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-03T20:28:28Z",
      "updated_at": "2020-10-03T20:28:28Z",
      "source": {
        "issue": {
          "id": 714139470,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDk3MzEyNTcz",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20073",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20073/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20073/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20073/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/20073",
          "number": 20073,
          "state": "closed",
          "state_reason": null,
          "title": "[DO NOT MERGE] ci: Print TRAVIS_COMMIT_RANGE before fail",
          "body": "",
          "user": {
            "login": "hebasto",
            "id": 32963518,
            "node_id": "MDQ6VXNlcjMyOTYzNTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hebasto",
            "html_url": "https://github.com/hebasto",
            "followers_url": "https://api.github.com/users/hebasto/followers",
            "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
            "organizations_url": "https://api.github.com/users/hebasto/orgs",
            "repos_url": "https://api.github.com/users/hebasto/repos",
            "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/hebasto/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "comments": 1,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20073",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/20073",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/20073.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/20073.patch"
          },
          "closed_at": "2020-10-04T07:25:59Z",
          "created_at": "2020-10-03T17:42:22Z",
          "updated_at": "2020-10-11T02:17:35Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "demilestoned",
      "id": 3856961528,
      "node_id": "MDE3OkRlbWlsZXN0b25lZEV2ZW50Mzg1Njk2MTUyOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3856961528",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-08T19:08:34Z",
      "milestone": {
        "title": "0.21.0"
      }
    },
    {
      "event": "milestoned",
      "id": 3856961530,
      "node_id": "MDE1Ok1pbGVzdG9uZWRFdmVudDM4NTY5NjE1MzA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3856961530",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-08T19:08:34Z",
      "milestone": {
        "title": "0.22.0"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-12T06:31:43Z",
      "updated_at": "2020-10-12T06:31:43Z",
      "source": {
        "issue": {
          "id": 718940319,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NTAxMjE2Mzgx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20125",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20125/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20125/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20125/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/20125",
          "number": 20125,
          "state": "closed",
          "state_reason": null,
          "title": "rpc, wallet: Expose database format in getwalletinfo",
          "body": "Support for sqlite based wallets was added in #19077. This PR adds the `format` key in `getwalletinfo` response, that can be `bdb` or  `sqlite`.",
          "user": {
            "login": "promag",
            "id": 3534524,
            "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/promag",
            "html_url": "https://github.com/promag",
            "followers_url": "https://api.github.com/users/promag/followers",
            "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
            "organizations_url": "https://api.github.com/users/promag/orgs",
            "repos_url": "https://api.github.com/users/promag/repos",
            "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/promag/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/45",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/45",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/45/labels",
            "id": 4914019,
            "node_id": "MDk6TWlsZXN0b25lNDkxNDAxOQ==",
            "number": 45,
            "state": "closed",
            "title": "0.21.0",
            "description": "",
            "creator": {
              "login": "laanwj",
              "id": 126646,
              "node_id": "MDQ6VXNlcjEyNjY0Ng==",
              "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/laanwj",
              "html_url": "https://github.com/laanwj",
              "followers_url": "https://api.github.com/users/laanwj/followers",
              "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
              "organizations_url": "https://api.github.com/users/laanwj/orgs",
              "repos_url": "https://api.github.com/users/laanwj/repos",
              "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/laanwj/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 132,
            "created_at": "2019-12-09T08:39:58Z",
            "updated_at": "2021-01-15T19:50:53Z",
            "closed_at": "2021-01-15T19:50:53Z"
          },
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 14,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20125",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/20125",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/20125.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/20125.patch"
          },
          "closed_at": "2020-10-19T23:35:58Z",
          "created_at": "2020-10-11T22:26:36Z",
          "updated_at": "2022-02-15T10:37:10Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 3867778570,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM4Njc3Nzg1NzA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3867778570",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-12T18:13:03Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 707294191,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcwNzI5NDE5MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/707294191",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-12T19:03:23Z",
      "updated_at": "2020-10-12T19:07:27Z",
      "author_association": "CONTRIBUTOR",
      "body": "I performed basic functional testing against this branch (but not master with this applied due to rebase hell) against http://www.nongnu.org/natpmp/.\r\n\r\nI don't really like the natpmp default being set by configure. I see the UPNP is currently handled that way, but I think that is an artefact of the fact that UPNP is disabled for implementation specific security reasons. Otherwise, no other bitcoin setting has its default set by configure.  That said, this could easily be something changed after getting the functionality merged or even in a subsequent release.\r\n\r\nI found that it successfully mapped 8333 and released the mapping on shutdown.\r\n\r\nI restricted the port range at the pmp-daemon and found that it successfully mapped a different port and correctly learned the other port number.\r\n\r\nI killed the pmp-daemon while bitcoind was running then shutdown and verified that it didn't hang up waiting for some unmap confirmation or anything like that.\r\n\r\nI did not change my external IP to confirm that it learned about the IP change (as I couldn't do that without disrupting other people). I think this would be a useful thing to test, but even if it didn't work right I don't think it would block merging this.\r\n\r\nLooks to me like it works!\r\n",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-707294191",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3869391162,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mzg2OTM5MTE2Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3869391162",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-13T05:47:09Z"
    },
    {
      "event": "commented",
      "id": 707504201,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcwNzUwNDIwMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/707504201",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-13T05:47:36Z",
      "updated_at": "2020-10-13T05:47:36Z",
      "author_association": "MEMBER",
      "body": "Rebased 62601a5a158b8c3710fde7cac8aadaa71a72f110 -> 44a697619d3fc3d9311c3d099cae04b21de071f3 ([pr18077.37](https://github.com/hebasto/bitcoin/commits/pr18077.37) -> [pr18077.38](https://github.com/hebasto/bitcoin/commits/pr18077.38)) due to the conflict with #19998.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-707504201",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "unlabeled",
      "id": 3869579156,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50Mzg2OTU3OTE1Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3869579156",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-13T06:47:14Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 709047605,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcwOTA0NzYwNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/709047605",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-15T09:41:40Z",
      "updated_at": "2020-10-15T09:41:40Z",
      "author_association": "CONTRIBUTOR",
      "body": "ultra minor nit, ignore if you like:  I didn't like that the logs calls it \"NAT-PMP\" but the configuration option is natpmp, so I had to go read the code to figure out what I should be looking for. I'd prefer to see logs say \"natpmp\" for optimum greppability.",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-709047605",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3880758615,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mzg4MDc1ODYxNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3880758615",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-15T10:23:48Z"
    },
    {
      "event": "commented",
      "id": 709111256,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcwOTExMTI1Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/709111256",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-15T10:26:12Z",
      "updated_at": "2020-10-15T10:26:12Z",
      "author_association": "MEMBER",
      "body": "Rebased 44a697619d3fc3d9311c3d099cae04b21de071f3 -> 81a791d88d68e64968e52d8ff6ec20879bd5fad1 ([pr18077.38](https://github.com/hebasto/bitcoin/commits/pr18077.38) -> [pr18077.39](https://github.com/hebasto/bitcoin/commits/pr18077.39)) due to the conflict with #19077, and addressed @gmaxwell's [comment](https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-709047605): \r\n> ultra minor nit, ignore if you like: I didn't like that the logs calls it \"NAT-PMP\" but the configuration option is natpmp, so I had to go read the code to figure out what I should be looking for. I'd prefer to see logs say \"natpmp\" for optimum greppability.\r\n",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-709111256",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "mentioned",
      "id": 3880768560,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mzg4MDc2ODU2MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3880768560",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-15T10:26:13Z"
    },
    {
      "event": "subscribed",
      "id": 3880768565,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM4ODA3Njg1NjU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3880768565",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-15T10:26:13Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-15T16:26:01Z",
      "updated_at": "2020-10-15T16:26:01Z",
      "source": {
        "issue": {
          "id": 722358468,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NTA0MTIyNjU1",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20156",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20156/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20156/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20156/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/20156",
          "number": 20156,
          "state": "closed",
          "state_reason": null,
          "title": "build: Make sqlite support optional (compile-time)",
          "body": "As a new requirement, sqlite support should be optional. This PR aims to be only minimum/blocker changes for 0.21.\r\n\r\nPotential follow-up PRs after this:\r\n* Make BDB support optional\r\n* Nicer error messages when user tries to load an unsupported wallet\r\n* Don't compile descriptor wallet code if sqlite disabled",
          "user": {
            "login": "luke-jr",
            "id": 1095675,
            "node_id": "MDQ6VXNlcjEwOTU2NzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/luke-jr",
            "html_url": "https://github.com/luke-jr",
            "followers_url": "https://api.github.com/users/luke-jr/followers",
            "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
            "organizations_url": "https://api.github.com/users/luke-jr/orgs",
            "repos_url": "https://api.github.com/users/luke-jr/repos",
            "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/luke-jr/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/45",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/45",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/45/labels",
            "id": 4914019,
            "node_id": "MDk6TWlsZXN0b25lNDkxNDAxOQ==",
            "number": 45,
            "state": "closed",
            "title": "0.21.0",
            "description": "",
            "creator": {
              "login": "laanwj",
              "id": 126646,
              "node_id": "MDQ6VXNlcjEyNjY0Ng==",
              "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/laanwj",
              "html_url": "https://github.com/laanwj",
              "followers_url": "https://api.github.com/users/laanwj/followers",
              "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
              "organizations_url": "https://api.github.com/users/laanwj/orgs",
              "repos_url": "https://api.github.com/users/laanwj/repos",
              "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/laanwj/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 132,
            "created_at": "2019-12-09T08:39:58Z",
            "updated_at": "2021-01-15T19:50:53Z",
            "closed_at": "2021-01-15T19:50:53Z"
          },
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 15,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20156",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/20156",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/20156.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/20156.patch"
          },
          "closed_at": "2020-10-29T11:04:16Z",
          "created_at": "2020-10-15T13:53:31Z",
          "updated_at": "2022-02-15T11:01:12Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 709610568,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcwOTYxMDU2OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/709610568",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-15T21:54:06Z",
      "updated_at": "2020-10-15T21:54:06Z",
      "author_association": "CONTRIBUTOR",
      "body": "Still works. Looks good to me.",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-709610568",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "commented",
      "id": 712296249,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcxMjI5NjI0OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/712296249",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-19T16:52:02Z",
      "updated_at": "2020-10-19T16:52:02Z",
      "author_association": "MEMBER",
      "body": "Concept ACK - reviewing this shortly",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-712296249",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-20T14:37:33Z",
      "updated_at": "2020-10-20T14:37:33Z",
      "source": {
        "issue": {
          "id": 725419229,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NTA2NjU0NTY1",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20196",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20196/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20196/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20196/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/20196",
          "number": 20196,
          "state": "closed",
          "state_reason": null,
          "title": "net: fix GetListenPort() to derive the proper port",
          "body": "`GetListenPort()` uses a simple logic: \"if `-port=P` is given, then we\r\nmust be listening on `P`, otherwise we must be listening on `8333`\".\r\nThis is however not true if `-bind=` has been provided with `:port` part\r\nor if `-whitebind=` has been provided. Thus, extend `GetListenPort()` to\r\nreturn the port from `-bind=` or `-whitebind=`, if any.\r\n\r\nAlso, if `-bind=` is provided then we would bind only to a particular address\r\nand should not add all the other addresses of the machine to the list of\r\nlocal addresses.\r\n\r\nFixes https://github.com/bitcoin/bitcoin/issues/20184\r\n",
          "user": {
            "login": "vasild",
            "id": 266751,
            "node_id": "MDQ6VXNlcjI2Njc1MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vasild",
            "html_url": "https://github.com/vasild",
            "followers_url": "https://api.github.com/users/vasild/followers",
            "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
            "organizations_url": "https://api.github.com/users/vasild/orgs",
            "repos_url": "https://api.github.com/users/vasild/repos",
            "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/vasild/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/52",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/52",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/52/labels",
            "id": 6179837,
            "node_id": "MDk6TWlsZXN0b25lNjE3OTgzNw==",
            "number": 52,
            "state": "closed",
            "title": "23.0",
            "description": "",
            "creator": {
              "login": "MarcoFalke",
              "id": 6399679,
              "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
              "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/MarcoFalke",
              "html_url": "https://github.com/MarcoFalke",
              "followers_url": "https://api.github.com/users/MarcoFalke/followers",
              "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
              "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
              "repos_url": "https://api.github.com/users/MarcoFalke/repos",
              "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 123,
            "created_at": "2020-12-04T08:54:20Z",
            "updated_at": "2022-04-25T20:51:00Z",
            "closed_at": "2022-04-22T18:08:30Z"
          },
          "locked": true,
          "comments": 51,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20196",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/20196",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/20196.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/20196.patch"
          },
          "closed_at": "2022-03-03T12:49:26Z",
          "created_at": "2020-10-20T10:01:49Z",
          "updated_at": "2023-03-03T10:15:30Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 512819049,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyODE5MDQ5",
      "url": null,
      "actor": null,
      "commit_id": "81a791d88d68e64968e52d8ff6ec20879bd5fad1",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code review ACK 81a791d88d68e64968e52d8ff6ec20879bd5fad1\r\n\r\nReally worthwhile change; all else equal the easier we can make offering inbound conn capacity the better.\r\n\r\nI've reviewed and built locally, though my router doesn't support NAT-PMP out of the box. I'll see what I can do in the meantime in terms of more comprehensive testing.",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#pullrequestreview-512819049",
      "submitted_at": "2020-10-20T21:14:26Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-21T01:24:38Z",
      "updated_at": "2020-10-21T01:24:38Z",
      "source": {
        "issue": {
          "id": 725760036,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NTA2OTQ0NTAz",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20202",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20202/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20202/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20202/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/20202",
          "number": 20202,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: Make BDB support optional",
          "body": "Adds a `--without-bdb` option to `configure` which disables the compilation of the BDB stuff. Legacy wallets will not be created when BDB is not compiled. A legacy-sqlite wallet can be loaded, but we will not create them.\r\n\r\nBased on #20156 to resolve the situation where both `--without-sqlite` and `--without-bdb` are provided. In that case, the wallet is disabled and `--disable-wallet` is effectively set.",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 12,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20202",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/20202",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/20202.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/20202.patch"
          },
          "closed_at": "2020-11-23T09:30:30Z",
          "created_at": "2020-10-20T16:31:12Z",
          "updated_at": "2022-08-16T17:12:47Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3910563387,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzkxMDU2MzM4Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3910563387",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-22T18:31:06Z"
    },
    {
      "event": "commented",
      "id": 714683741,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcxNDY4Mzc0MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/714683741",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-22T18:37:39Z",
      "updated_at": "2020-10-23T08:19:30Z",
      "author_association": "MEMBER",
      "body": "Updated 81a791d88d68e64968e52d8ff6ec20879bd5fad1 -> cb4060686155c011cbece84fd551dfa000277d51 ([pr18077.39](https://github.com/hebasto/bitcoin/commits/pr18077.39) -> [pr18077.40](https://github.com/hebasto/bitcoin/commits/pr18077.40), [diff](https://github.com/hebasto/bitcoin/compare/pr18077.39..pr18077.40)).\r\n\r\nAddressed @jamesob's comments:\r\n-  https://github.com/bitcoin/bitcoin/pull/18077#discussion_r508829874:\r\n> (Note on [1bf23f2](https://github.com/bitcoin/bitcoin/commit/1bf23f291d7c053538245f1a7f6f7699daf4a3b9) as a whole:) could be a scripteddiff AFAICT, but not a huge deal.\r\n\r\n- https://github.com/bitcoin/bitcoin/pull/18077#discussion_r508839477:\r\n> Nit: linebreak would be nice.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-714683741",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "mentioned",
      "id": 3910589076,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzkxMDU4OTA3Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3910589076",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-22T18:37:40Z"
    },
    {
      "event": "subscribed",
      "id": 3910589079,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM5MTA1ODkwNzk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3910589079",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-22T18:37:40Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3911295129,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzkxMTI5NTEyOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3911295129",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-22T21:54:46Z"
    },
    {
      "event": "commented",
      "id": 715155281,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcxNTE1NTI4MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/715155281",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-23T08:19:05Z",
      "updated_at": "2020-10-23T08:19:19Z",
      "author_association": "MEMBER",
      "body": "Updated cb4060686155c011cbece84fd551dfa000277d51 -> bddfeade1e7740f04002f6d88e6e9840ed985bea ([pr18077.40](https://github.com/hebasto/bitcoin/commits/pr18077.40) -> [pr18077.41](https://github.com/hebasto/bitcoin/commits/pr18077.41), [diff](https://github.com/hebasto/bitcoin/compare/pr18077.40..pr18077.41)): https://github.com/bitcoin/bitcoin/pull/18077#discussion_r510714033",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-715155281",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "labeled",
      "id": 3925026765,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM5MjUwMjY3NjU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3925026765",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-27T10:05:04Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3925122233,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzkyNTEyMjIzMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3925122233",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-27T10:25:41Z"
    },
    {
      "event": "commented",
      "id": 717142998,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcxNzE0Mjk5OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/717142998",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-27T10:27:07Z",
      "updated_at": "2020-10-27T10:27:07Z",
      "author_association": "MEMBER",
      "body": "Rebased bddfeade1e7740f04002f6d88e6e9840ed985bea -> 5fd127243f452827dab3b4f4f47b6e96816fdfb8 ([pr18077.41](https://github.com/hebasto/bitcoin/commits/pr18077.41) -> [pr18077.42](https://github.com/hebasto/bitcoin/commits/pr18077.42)) due to the conflict with #19124.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-717142998",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "unlabeled",
      "id": 3925571325,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzkyNTU3MTMyNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3925571325",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-27T12:10:53Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 518032623,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4MDMyNjIz",
      "url": null,
      "actor": null,
      "commit_id": "5fd127243f452827dab3b4f4f47b6e96816fdfb8",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK https://github.com/bitcoin/bitcoin/commit/5fd127243f452827dab3b4f4f47b6e96816fdfb8\r\n\r\nRe-reviewed diffs after rebase. Built locally with NAT-PMP enabled. My gateway doesn't support NAT-PMP, but regular IBD works okay.",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#pullrequestreview-518032623",
      "submitted_at": "2020-10-27T18:45:52Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
    },
    {
      "event": "labeled",
      "id": 3936597458,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM5MzY1OTc0NTg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3936597458",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-29T14:21:07Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3936789925,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzkzNjc4OTkyNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3936789925",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-29T14:57:30Z"
    },
    {
      "event": "commented",
      "id": 718810195,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcxODgxMDE5NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/718810195",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-29T14:58:46Z",
      "updated_at": "2020-10-29T14:58:46Z",
      "author_association": "MEMBER",
      "body": "Rebased 5fd127243f452827dab3b4f4f47b6e96816fdfb8 -> 90d9547f135ef0ffc00dd790072c3ae307f053ad ([pr18077.42](https://github.com/hebasto/bitcoin/commits/pr18077.42) -> [pr18077.43](https://github.com/hebasto/bitcoin/commits/pr18077.43)) due to the conflict with #20156.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-718810195",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "unlabeled",
      "id": 3937263623,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzkzNzI2MzYyMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3937263623",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-29T16:27:12Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-30T01:15:07Z",
      "updated_at": "2020-10-30T01:15:07Z",
      "source": {
        "issue": {
          "id": 732761071,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NTEyNjU1MzUz",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20267",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20267/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20267/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20267/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/20267",
          "number": 20267,
          "state": "closed",
          "state_reason": null,
          "title": "Disable and fix tests for when BDB is not compiled",
          "body": "This PR fixes tests for when BDB is not compiled. Tests which rely on or test legacy wallet behavior are disabled and skipped when BDB is not compiled. For the components of some tests that are for legacy wallet things, those parts of the tests are skipped.\r\n\r\nFor the majority of tests, changes are made so that they can be run with either legacy wallets or descriptor wallets without materially effecting the test. Most tests only need the wallet for balance and transactions, so the type of wallet is not an important part of those tests. Additionally, some tests are wallet agnostic and modified to instead use the test framework's MiniWallet.",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 18,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20267",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/20267",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/20267.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/20267.patch"
          },
          "closed_at": "2021-02-05T13:26:34Z",
          "created_at": "2020-10-29T23:56:06Z",
          "updated_at": "2022-08-16T17:03:53Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-30T01:18:52Z",
      "updated_at": "2020-10-30T01:18:52Z",
      "source": {
        "issue": {
          "id": 732611137,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NTEyNTI1NjAy",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20264",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20264/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20264/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20264/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/20264",
          "number": 20264,
          "state": "closed",
          "state_reason": null,
          "title": "test: Make secp tests optional in `make check`",
          "body": "Add a configure flag to disable running secp tests with every `make check`.\r\n\r\nHopefully this isn't too controversial -- I recognize the importance of testing libsecp, and obviously those tests will remain enabled by default. But this flag is useful when doing automated repeated runs of the bitcoin core test suite, to avoid repeatedly re-running the (somewhat expensive) libsecp test suite when libsecp is not changing (since it only gets re-vendored occasionally.)",
          "user": {
            "login": "gwillen",
            "id": 458997,
            "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gwillen",
            "html_url": "https://github.com/gwillen",
            "followers_url": "https://api.github.com/users/gwillen/followers",
            "following_url": "https://api.github.com/users/gwillen/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/gwillen/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/gwillen/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
            "organizations_url": "https://api.github.com/users/gwillen/orgs",
            "repos_url": "https://api.github.com/users/gwillen/repos",
            "events_url": "https://api.github.com/users/gwillen/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/gwillen/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 8,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20264",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/20264",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/20264.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/20264.patch"
          },
          "closed_at": "2020-10-30T08:34:59Z",
          "created_at": "2020-10-29T19:50:24Z",
          "updated_at": "2022-02-15T11:00:50Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "closed",
      "id": 3940382276,
      "node_id": "MDExOkNsb3NlZEV2ZW50Mzk0MDM4MjI3Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3940382276",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-30T09:45:43Z"
    },
    {
      "event": "reopened",
      "id": 3940383396,
      "node_id": "MDEzOlJlb3BlbmVkRXZlbnQzOTQwMzgzMzk2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3940383396",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-30T09:46:00Z"
    },
    {
      "event": "reviewed",
      "id": 520878706,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwODc4NzA2",
      "url": null,
      "actor": null,
      "commit_id": "90d9547f135ef0ffc00dd790072c3ae307f053ad",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#pullrequestreview-520878706",
      "submitted_at": "2020-10-30T17:20:45Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3942375212,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mzk0MjM3NTIxMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3942375212",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-30T17:36:23Z"
    },
    {
      "event": "commented",
      "id": 719697155,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcxOTY5NzE1NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/719697155",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-30T17:38:39Z",
      "updated_at": "2020-10-30T17:38:39Z",
      "author_association": "MEMBER",
      "body": "Updated 90d9547f135ef0ffc00dd790072c3ae307f053ad -> 29fb5708ca04da9ca0c25c1b801887354eb714bc ([pr18077.43](https://github.com/hebasto/bitcoin/commits/pr18077.43) -> [pr18077.44](https://github.com/hebasto/bitcoin/commits/pr18077.44), [diff](https://github.com/hebasto/bitcoin/compare/pr18077.43..pr18077.44)):\r\n\r\n- addressed @dongcarl's [comment](https://github.com/bitcoin/bitcoin/pull/18077#discussion_r515256116):\r\n> Perhaps I'm reading the code wrong, but it seems like \"If both UPnP and NAT-PMP are enabled, a successful allocation from UPnP prevails over one from NAT-PMP\" is a more accurate description her",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-719697155",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "mentioned",
      "id": 3942386286,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mzk0MjM4NjI4Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3942386286",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-30T17:38:40Z"
    },
    {
      "event": "subscribed",
      "id": 3942386298,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM5NDIzODYyOTg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3942386298",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-30T17:38:40Z"
    },
    {
      "event": "reviewed",
      "id": 471997437,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxOTk3NDM3",
      "url": null,
      "actor": null,
      "commit_id": "225f512438f4391f6af255f851131358e3c466a2",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#pullrequestreview-471997437",
      "submitted_at": "2020-10-30T22:51:58Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-03T17:47:10Z",
      "updated_at": "2020-11-03T17:47:10Z",
      "source": {
        "issue": {
          "id": 735327352,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NTE0NzQwMTM1",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20295",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20295/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20295/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20295/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/20295",
          "number": 20295,
          "state": "closed",
          "state_reason": null,
          "title": "rpc: getblockfrompeer",
          "body": "This adds an RPC method to fetch a block directly from a peer. This can used to fetch stale blocks with lower proof of work that are normally ignored by the node (`headers-only` in `getchaintips`).\r\n\r\nUsage:\r\n```\r\nbitcoin-cli getblockfrompeer HASH peer_n\r\n```\r\n\r\nCloses #20155\r\n\r\nLimitations:\r\n* you have to specify which peer to fetch the block from\r\n* the node must already have the header",
          "user": {
            "login": "Sjors",
            "id": 10217,
            "node_id": "MDQ6VXNlcjEwMjE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sjors",
            "html_url": "https://github.com/Sjors",
            "followers_url": "https://api.github.com/users/Sjors/followers",
            "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
            "organizations_url": "https://api.github.com/users/Sjors/orgs",
            "repos_url": "https://api.github.com/users/Sjors/repos",
            "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Sjors/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "comments": 57,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20295",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/20295",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/20295.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/20295.patch"
          },
          "closed_at": "2021-12-08T09:41:03Z",
          "created_at": "2020-11-03T13:39:24Z",
          "updated_at": "2023-01-15T10:07:56Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-08T15:24:29Z",
      "updated_at": "2020-11-08T15:24:29Z",
      "source": {
        "issue": {
          "id": 738452528,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NTE3Mjk2MDky",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20339",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20339/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20339/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20339/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/20339",
          "number": 20339,
          "state": "closed",
          "state_reason": null,
          "title": "ci: Run more ci configs on cirrus",
          "body": "",
          "user": {
            "login": "MarcoFalke",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarcoFalke",
            "html_url": "https://github.com/MarcoFalke",
            "followers_url": "https://api.github.com/users/MarcoFalke/followers",
            "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
            "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
            "repos_url": "https://api.github.com/users/MarcoFalke/repos",
            "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 3,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20339",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/20339",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/20339.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/20339.patch"
          },
          "closed_at": "2020-11-09T14:33:13Z",
          "created_at": "2020-11-08T12:15:25Z",
          "updated_at": "2022-02-15T10:48:42Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-08T20:24:11Z",
      "updated_at": "2020-11-08T20:24:11Z",
      "source": {
        "issue": {
          "id": 631814289,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDI4NjM0Mjc2",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19179",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19179/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19179/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19179/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19179",
          "number": 19179,
          "state": "closed",
          "state_reason": null,
          "title": "ci: Run ci configs on cirrus",
          "body": "Travis CI Org is shutting down, so move the configs to cirrus ci",
          "user": {
            "login": "MarcoFalke",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarcoFalke",
            "html_url": "https://github.com/MarcoFalke",
            "followers_url": "https://api.github.com/users/MarcoFalke/followers",
            "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
            "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
            "repos_url": "https://api.github.com/users/MarcoFalke/repos",
            "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19179",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19179",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19179.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19179.patch"
          },
          "closed_at": "2020-11-23T20:04:03Z",
          "created_at": "2020-06-05T18:07:27Z",
          "updated_at": "2022-02-15T10:38:20Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 3974136360,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM5NzQxMzYzNjA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3974136360",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-09T14:48:27Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4079021461,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDA3OTAyMTQ2MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4079021461",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-07T10:59:50Z"
    },
    {
      "event": "commented",
      "id": 739845253,
      "node_id": "MDEyOklzc3VlQ29tbWVudDczOTg0NTI1Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/739845253",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-07T11:02:28Z",
      "updated_at": "2020-12-07T11:02:28Z",
      "author_association": "MEMBER",
      "body": "Rebased 29fb5708ca04da9ca0c25c1b801887354eb714bc -> 3c26d53f538442363834178a45bc8b459b5b334d ([pr18077.44](https://github.com/hebasto/bitcoin/commits/pr18077.44) -> [pr18077.45](https://github.com/hebasto/bitcoin/commits/pr18077.45)) due to the conflicts with #20202, #20494 and the recent CI changes.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-739845253",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-07T12:08:03Z",
      "updated_at": "2020-12-07T12:08:03Z",
      "source": {
        "issue": {
          "id": 752896891,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NTI5MDk2MjAz",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20527",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20527/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20527/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20527/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/20527",
          "number": 20527,
          "state": "closed",
          "state_reason": null,
          "title": "build: Do not ignore Homebrew's SQLite on macOS",
          "body": "On master (7ae86b3c6845873ca96650fc69beb4ae5285c801) installed Homebrew `sqlite` package is ignored during build on macOS.\r\n\r\nThis PR fixes this issue and update macOS build docs.\r\n\r\nCloses #20498.",
          "user": {
            "login": "hebasto",
            "id": 32963518,
            "node_id": "MDQ6VXNlcjMyOTYzNTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hebasto",
            "html_url": "https://github.com/hebasto",
            "followers_url": "https://api.github.com/users/hebasto/followers",
            "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
            "organizations_url": "https://api.github.com/users/hebasto/orgs",
            "repos_url": "https://api.github.com/users/hebasto/repos",
            "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/hebasto/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 17,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20527",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/20527",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/20527.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/20527.patch"
          },
          "closed_at": "2020-12-10T12:18:57Z",
          "created_at": "2020-11-29T11:39:34Z",
          "updated_at": "2022-02-15T10:39:33Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-07T12:15:38Z",
      "updated_at": "2020-12-07T12:15:38Z",
      "source": {
        "issue": {
          "id": 750646536,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NTI3MzAzNjY4",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20487",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20487/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20487/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20487/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/20487",
          "number": 20487,
          "state": "closed",
          "state_reason": null,
          "title": "Add syscall sandboxing using seccomp-bpf (Linux secure computing mode)",
          "body": "Add experimental syscall sandboxing using seccomp-bpf (Linux secure computing mode).\r\n\r\nEnable filtering of system calls using seccomp-bpf: allow only explicitly allowlisted (expected) syscalls to be called. \r\n\r\nThe syscall sandboxing implemented in this PR is an experimental feature currently available only under Linux x86-64.\r\n\r\nTo enable the experimental syscall sandbox the `-sandbox=<mode>` option must be passed to `bitcoind`:\r\n\r\n```\r\n  -sandbox=<mode>\r\n       Use the experimental syscall sandbox in the specified mode\r\n       (-sandbox=log-and-abort or -sandbox=abort). Allow only expected\r\n       syscalls to be used by bitcoind. Note that this is an\r\n       experimental new feature that may cause bitcoind to exit or crash\r\n       unexpectedly: use with caution. In the \"log-and-abort\" mode the\r\n       invocation of an unexpected syscall results in a debug handler\r\n       being invoked which will log the incident and terminate the\r\n       program (without executing the unexpected syscall). In the\r\n       \"abort\" mode the invocation of an unexpected syscall results in\r\n       the entire process being killed immediately by the kernel without\r\n       executing the unexpected syscall.\r\n```\r\n\r\nThe allowed syscalls are defined on a per thread basis.\r\n\r\nI've used this feature since summer 2020 and I find it to be a helpful testing/debugging addition which makes it much easier to reason about the actual capabilities required of each type of thread in Bitcoin Core.\r\n\r\n---\r\n\r\nQuick start guide:\r\n\r\n```\r\n$ ./configure\r\n$ src/bitcoind -regtest -debug=util -sandbox=log-and-abort\r\n…\r\n2021-06-09T12:34:56Z Experimental syscall sandbox enabled (-sandbox=log-and-abort): bitcoind will terminate if an unexpected (not allowlisted) syscall is invoked.\r\n…\r\n2021-06-09T12:34:56Z Syscall filter installed for thread \"addcon\"\r\n2021-06-09T12:34:56Z Syscall filter installed for thread \"dnsseed\"\r\n2021-06-09T12:34:56Z Syscall filter installed for thread \"net\"\r\n2021-06-09T12:34:56Z Syscall filter installed for thread \"msghand\"\r\n2021-06-09T12:34:56Z Syscall filter installed for thread \"opencon\"\r\n2021-06-09T12:34:56Z Syscall filter installed for thread \"init\"\r\n…\r\n# A simulated execve call to show the sandbox in action:\r\n2021-06-09T12:34:56Z ERROR: The syscall \"execve\" (syscall number 59) is not allowed by the syscall sandbox in thread \"msghand\". Please report.\r\n…\r\nAborted (core dumped)\r\n$\r\n```\r\n\r\n---\r\n\r\n[About seccomp and seccomp-bpf](https://en.wikipedia.org/wiki/Seccomp):\r\n\r\n> In computer security, seccomp (short for secure computing mode) is a facility in the Linux kernel. seccomp allows a process to make a one-way transition into a \"secure\" state where it cannot make any system calls except exit(), sigreturn(), and read() and write() to already-open file descriptors. Should it attempt any other system calls, the kernel will terminate the process with SIGKILL or SIGSYS. In this sense, it does not virtualize the system's resources but isolates the process from them entirely.\r\n>\r\n> […]\r\n> \r\n> seccomp-bpf is an extension to seccomp that allows filtering of system calls using a configurable policy implemented using Berkeley Packet Filter rules. It is used by OpenSSH and vsftpd as well as the Google Chrome/Chromium web browsers on Chrome OS and Linux. (In this regard seccomp-bpf achieves similar functionality, but with more flexibility and higher performance, to the older systrace—which seems to be no longer supported for Linux.)",
          "user": {
            "login": "practicalswift",
            "id": 7826565,
            "node_id": "MDQ6VXNlcjc4MjY1NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/practicalswift",
            "html_url": "https://github.com/practicalswift",
            "followers_url": "https://api.github.com/users/practicalswift/followers",
            "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
            "organizations_url": "https://api.github.com/users/practicalswift/orgs",
            "repos_url": "https://api.github.com/users/practicalswift/repos",
            "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/practicalswift/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "comments": 27,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20487",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/20487",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/20487.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/20487.patch"
          },
          "closed_at": "2021-10-04T20:46:15Z",
          "created_at": "2020-11-25T09:27:44Z",
          "updated_at": "2022-11-15T13:10:39Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "unlabeled",
      "id": 4079531496,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50NDA3OTUzMTQ5Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4079531496",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-07T13:05:36Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-07T13:05:47Z",
      "updated_at": "2020-12-07T13:05:47Z",
      "source": {
        "issue": {
          "id": 725759111,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NTA2OTQzNzQ5",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20201",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20201/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20201/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20201/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/20201",
          "number": 20201,
          "state": "closed",
          "state_reason": null,
          "title": "build: pkg-config related cleanup",
          "body": "This PR:\r\n- does not change behavior\r\n- drops redundant `AC_SUBST` macros\r\n\r\nAlso checks of PKG_CHECK_MODULES presence are removed because they are redundant due to the following code https://github.com/bitcoin/bitcoin/blob/ab1feadf4e6cd4f5f2c7e74cea1c7baad61458ba/configure.ac#L16-L20",
          "user": {
            "login": "hebasto",
            "id": 32963518,
            "node_id": "MDQ6VXNlcjMyOTYzNTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hebasto",
            "html_url": "https://github.com/hebasto",
            "followers_url": "https://api.github.com/users/hebasto/followers",
            "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
            "organizations_url": "https://api.github.com/users/hebasto/orgs",
            "repos_url": "https://api.github.com/users/hebasto/repos",
            "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/hebasto/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "comments": 25,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20201",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/20201",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/20201.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/20201.patch"
          },
          "closed_at": "2021-12-30T03:08:49Z",
          "created_at": "2020-10-20T16:29:57Z",
          "updated_at": "2022-12-30T10:05:11Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 4094894326,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQwOTQ4OTQzMjY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4094894326",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-10T12:38:36Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4096591047,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDA5NjU5MTA0Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4096591047",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-10T18:28:30Z"
    },
    {
      "event": "commented",
      "id": 742709774,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc0MjcwOTc3NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/742709774",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-10T18:30:04Z",
      "updated_at": "2020-12-10T18:30:22Z",
      "author_association": "MEMBER",
      "body": "Rebased 3c26d53f538442363834178a45bc8b459b5b334d -> cc68169e72c5b28fe53466a86eeac9fd214cd0d1 ([pr18077.45](https://github.com/hebasto/bitcoin/commits/pr18077.45) -> [pr18077.46](https://github.com/hebasto/bitcoin/commits/pr18077.46)) due to the conflict with #20527.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-742709774",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "unlabeled",
      "id": 4096738508,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50NDA5NjczODUwOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4096738508",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-10T19:01:49Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-12T03:17:47Z",
      "updated_at": "2020-12-12T03:17:47Z",
      "source": {
        "issue": {
          "id": 675170037,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDY0NzM0MDMw",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19683",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19683/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19683/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19683/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19683",
          "number": 19683,
          "state": "closed",
          "state_reason": null,
          "title": "depends: Pin clang search paths for darwin host",
          "body": "> Hello clang/lib/frontend,\r\n> I search your headers once again.\r\n> Because it's time for some housekeeping,\r\n> Within the code I was tweaking,\r\n> And the targets I was making with my build,\r\n> Are unfulfilled,\r\n> It's just language compliance.\r\n> \r\n> In reference works I scroll alone\r\n> Pages cribbed from holy tomes\r\n> In the details of a template\r\n> My code's behaviour has now found its fate\r\n> When my hopes were dashed as a note left it as described:\r\n> As undefined\r\n> It's not in compliance\r\n> \r\n> And from the standard text I saw\r\n> Ten thousand errors, maybe more\r\n> Threading used without locking\r\n> Pointers referenced after freeing\r\n> Linters writing warnings that coders will never fix\r\n> But still they tick\r\n> The box that claims compliance\r\n> \r\n> \"Fools,\" said I, \"you do not know\"\r\n> Errors, like a cancer, grow\r\n> Hear my words that I might reach you\r\n> Use -Wall and it might teach you\r\n> But my words and compiler errors fade.\r\n> Schedules forbade compliance.\r\n> \r\n> And the people bowed and prayed\r\n> With static checking torn and frayed\r\n> The markets flashed out their warning\r\n> In the words that they were forming\r\n> As recruiters said \"The search for more profits leads to writing stuff in CSS,\r\n> And node.js.\r\n> Without a need for compliance\"\r\n\r\nMany thanks to ajtowns for the above contribution!\r\n\r\n-----\r\n\r\nThis PR is ready for review!\r\n\r\nWhen cross-compiling for macOS, the SDK gives us the entire context/sysroot on which we should base the build. This means that we can be extremely specific w/re our search path ordering in order to avoid build problems that arise out of a user's specific environment/system setup and improve the robustness of our macOS toolchain. This PR does 2 things to this end:\r\n\r\n1. Unset environment variables which are known to alter search paths.\r\n1. Makes us (in the case of macOS builds) explicitly specify the list of system include search paths and its ordering, rather than rely on `clang`'s unreliable autodetection routine. Here is the [rabbit-hole gist](https://gist.github.com/dongcarl/5cdc6990b7599e8a5bf6d2a9c70e82f9).\r\n\r\n    See the added comments in `depends/hosts/darwin.mk` for more details:\r\n\r\n    https://github.com/bitcoin/bitcoin/blob/8b8296dc70a0aa5ca86d11ba5d3151fc56208e25/depends/hosts/darwin.mk#L37-L60\r\n\r\nWe can be this specific _only_ because macOS builds are neatly contained in an SDK, **and** we are cross-compiling. Native toolchains should rely on the environment/distro/user to know how best to build for the running system.\r\n\r\nNote: Although the `-u` flag of `env` is not a POSIX standard flag, it seems like it is useful enough to be implemented in [coreutils](https://www.gnu.org/software/coreutils/manual/html_node/env-invocation.html), [busybox](https://busybox.net/downloads/BusyBox.html#env), [FreeBSD](https://www.freebsd.org/cgi/man.cgi?env).",
          "user": {
            "login": "dongcarl",
            "id": 3445290,
            "node_id": "MDQ6VXNlcjM0NDUyOTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dongcarl",
            "html_url": "https://github.com/dongcarl",
            "followers_url": "https://api.github.com/users/dongcarl/followers",
            "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
            "organizations_url": "https://api.github.com/users/dongcarl/orgs",
            "repos_url": "https://api.github.com/users/dongcarl/repos",
            "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/dongcarl/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 14,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19683",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19683",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19683.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19683.patch"
          },
          "closed_at": "2021-01-08T05:12:26Z",
          "created_at": "2020-08-07T17:41:36Z",
          "updated_at": "2022-08-16T17:07:26Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 4113756447,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQxMTM3NTY0NDc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4113756447",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-15T10:10:25Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4116035379,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDExNjAzNTM3OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4116035379",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-15T18:27:54Z"
    },
    {
      "event": "commented",
      "id": 745479342,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc0NTQ3OTM0Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/745479342",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-15T18:29:09Z",
      "updated_at": "2020-12-15T18:29:09Z",
      "author_association": "MEMBER",
      "body": "Rebased cc68169e72c5b28fe53466a86eeac9fd214cd0d1 -> 93ff21a929ba3036d6cd5d822f300cf036ff939f ([pr18077.46](https://github.com/hebasto/bitcoin/commits/pr18077.46) -> [pr18077.47](https://github.com/hebasto/bitcoin/commits/pr18077.47)) due to the conflict with https://github.com/bitcoin-core/gui/pull/115.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-745479342",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "unlabeled",
      "id": 4116092972,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50NDExNjA5Mjk3Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4116092972",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-15T18:42:26Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 746986174,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc0Njk4NjE3NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/746986174",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-16T20:44:34Z",
      "updated_at": "2020-12-16T20:44:34Z",
      "author_association": "CONTRIBUTOR",
      "body": "In case any of this is helpful... I wanted to try running this, I'm running Ubuntu 18.04 as a Virtualbox guest on a Windows 10 host running at home (Xfinity-Comcast, nothing unusual), I checked out branch `pr18077.47`, ran\r\n```\r\n$ sudo apt install libminiupnpc-dev libnatpmp-dev\r\n(... successful)\r\n$ ./autogen.sh && ./configure --disable-wallet --without-miniupnpc --enable-natpmp-default && make\r\n(...)\r\nchecking whether to build with support for UPnP... no\r\nchecking whether to build with support for NAT-PMP... yes\r\nchecking whether to build with NAT-PMP enabled by default... yes\r\n(...)\r\n$ src/bitcoind\r\n```\r\nStarts up normally, but this prints to `debug.log` every 5 minutes:\r\n```\r\n2020-12-16T19:14:17Z natpmp: The gateway does not support NAT-PMP.\r\n```\r\nand `bitcoin-cli -netstat` shows that I have no incoming peers. I think this is all as expected, but I'm not testing much. I don't know how to change my gateway to support NAT-PMP (I'd appreciate any help). I did change my cable modem router's firewall to allow P2P applications on both IPv4 and IPv6, but that didn't make any difference.",
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-746986174",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-17T01:40:34Z",
      "updated_at": "2020-12-17T01:40:34Z",
      "source": {
        "issue": {
          "id": 769369474,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NTQxNTE2NTkw",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20678",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20678/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20678/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20678/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/20678",
          "number": 20678,
          "state": "closed",
          "state_reason": null,
          "title": "Add on autoconf as a dependency when building on macOS",
          "body": "When trying to build the project locally on the latest version of macOS Big Sur, we need `autoconf` in order to successfully run `./autogen.sh`.\r\n\r\nBelow is when I first saw the error when trying to build Bitcoin Core locally:\r\n\r\n```\r\nbitcoin % ./autogen.sh \r\nconfiguration failed, please install autoconf first\r\n```\r\n\r\nThis is a nonfunctional change; only updated the `build-osx.md` file that way all the dependencies are acquired in the first place.",
          "user": {
            "login": "sh-abhi",
            "id": 6554853,
            "node_id": "MDQ6VXNlcjY1NTQ4NTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6554853?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sh-abhi",
            "html_url": "https://github.com/sh-abhi",
            "followers_url": "https://api.github.com/users/sh-abhi/followers",
            "following_url": "https://api.github.com/users/sh-abhi/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sh-abhi/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sh-abhi/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sh-abhi/subscriptions",
            "organizations_url": "https://api.github.com/users/sh-abhi/orgs",
            "repos_url": "https://api.github.com/users/sh-abhi/repos",
            "events_url": "https://api.github.com/users/sh-abhi/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sh-abhi/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 148216,
              "node_id": "MDU6TGFiZWwxNDgyMTY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Docs",
              "name": "Docs",
              "color": "02d7e1",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "NONE",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 5,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20678",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/20678",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/20678.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/20678.patch"
          },
          "closed_at": "2020-12-19T11:32:03Z",
          "created_at": "2020-12-17T00:17:27Z",
          "updated_at": "2022-02-15T10:39:54Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 747323211,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc0NzMyMzIxMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/747323211",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-17T09:32:10Z",
      "updated_at": "2020-12-17T09:32:10Z",
      "author_association": "MEMBER",
      "body": "@LarryRuane \r\n\r\nThanks for testing!\r\n\r\n> I don't know how to change my gateway to support NAT-PMP (I'd appreciate any help).\r\n\r\nYour gateway s/w manual (if available) could help. My TP-Link Archer C6  does not have NAT-PMP support with stock s/w, so I've flashed the OpenWrt on it.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-747323211",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "mentioned",
      "id": 4124142657,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDEyNDE0MjY1Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4124142657",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-17T09:32:11Z"
    },
    {
      "event": "subscribed",
      "id": 4124142663,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQxMjQxNDI2NjM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4124142663",
      "actor": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-17T09:32:11Z"
    },
    {
      "event": "commented",
      "id": 747429639,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc0NzQyOTYzOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/747429639",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-17T13:10:10Z",
      "updated_at": "2020-12-17T13:10:10Z",
      "author_association": "MEMBER",
      "body": "Looked over the overall changes, they look reasonable to me.\r\nWill test.",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-747429639",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "reviewed",
      "id": 554588978,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0NTg4OTc4",
      "url": null,
      "actor": null,
      "commit_id": "93ff21a929ba3036d6cd5d822f300cf036ff939f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#pullrequestreview-554588978",
      "submitted_at": "2020-12-17T13:11:45Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
    },
    {
      "event": "commented",
      "id": 747500131,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc0NzUwMDEzMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/747500131",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-17T15:14:51Z",
      "updated_at": "2020-12-17T15:21:32Z",
      "author_association": "MEMBER",
      "body": "It works !\r\n\r\n- On Ubuntu 20.04 I installed the `libnatpmp-dev` package, re-ran configure, it was detected correctly and enabled\r\n- I run bitcoind with `-natpmp -regtest`\r\n\r\nI see the following in my log\r\n```\r\n2020-12-17T15:06:10Z natpmp: Port mapping successful. External address = x.x.x.x:18444\r\n```\r\nMy router's admin interface show the redirect:\r\n```\r\nProtocol | External Port | Client Address | Client Port |  \r\n-- | -- | -- | -- | --\r\nTCP | 18444 | 192.168.x.x | 18444\r\n```\r\nI have verified that I can connect to the host/port from a remote server.",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-747500131",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "reviewed",
      "id": 554717639,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0NzE3NjM5",
      "url": null,
      "actor": null,
      "commit_id": "93ff21a929ba3036d6cd5d822f300cf036ff939f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#pullrequestreview-554717639",
      "submitted_at": "2020-12-17T15:32:14Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
    },
    {
      "event": "reviewed",
      "id": 554735167,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0NzM1MTY3",
      "url": null,
      "actor": null,
      "commit_id": "93ff21a929ba3036d6cd5d822f300cf036ff939f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#pullrequestreview-554735167",
      "submitted_at": "2020-12-17T15:49:32Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
    },
    {
      "event": "reviewed",
      "id": 554739336,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0NzM5MzM2",
      "url": null,
      "actor": null,
      "commit_id": "93ff21a929ba3036d6cd5d822f300cf036ff939f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#pullrequestreview-554739336",
      "submitted_at": "2020-12-17T15:53:45Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
    },
    {
      "event": "reviewed",
      "id": 554828804,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0ODI4ODA0",
      "url": null,
      "actor": null,
      "commit_id": "93ff21a929ba3036d6cd5d822f300cf036ff939f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#pullrequestreview-554828804",
      "submitted_at": "2020-12-17T17:31:28Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
    },
    {
      "event": "labeled",
      "id": 4126701996,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQxMjY3MDE5OTY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4126701996",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-17T19:31:28Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4131763863,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDEzMTc2Mzg2Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4131763863",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-18T23:00:19Z"
    },
    {
      "event": "commented",
      "id": 748361576,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc0ODM2MTU3Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/748361576",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-18T23:03:12Z",
      "updated_at": "2020-12-18T23:03:12Z",
      "author_association": "MEMBER",
      "body": "Updated 93ff21a929ba3036d6cd5d822f300cf036ff939f -> 890e59c64d62fd39778ede620a70fe6bc60d9993 ([pr18077.47](https://github.com/hebasto/bitcoin/commits/pr18077.47) -> [pr18077.48](https://github.com/hebasto/bitcoin/commits/pr18077.48)):\r\n\r\n- rebased due to the conflict with #20681\r\n- addressed the recent @laanwj's comments\r\n- used C++14 chrono literal",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-748361576",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "mentioned",
      "id": 4131771629,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDEzMTc3MTYyOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4131771629",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-18T23:03:12Z"
    },
    {
      "event": "subscribed",
      "id": 4131771631,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQxMzE3NzE2MzE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4131771631",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-18T23:03:12Z"
    },
    {
      "event": "unlabeled",
      "id": 4131955022,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50NDEzMTk1NTAyMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4131955022",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-19T00:53:06Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-19T03:32:57Z",
      "updated_at": "2020-12-19T03:32:57Z",
      "source": {
        "issue": {
          "id": 769987532,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NTQxODQzNTI5",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20685",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20685/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20685/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20685/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/20685",
          "number": 20685,
          "state": "closed",
          "state_reason": null,
          "title": "Add I2P support using I2P SAM",
          "body": "Add I2P support by using the [I2P SAM](https://geti2p.net/en/docs/api/samv3) protocol. Unlike Tor, for incoming connections we get the I2P address of the peer (and they also receive ours when we are the connection initiator).\r\n\r\nTwo new options are added:\r\n\r\n```\r\n  -i2psam=<ip:port>\r\n       I2P SAM proxy to reach I2P peers and accept I2P connections (default:\r\n       none)\r\n\r\n  -i2pacceptincoming\r\n       If set and -i2psam is also set then incoming I2P connections are\r\n       accepted via the SAM proxy. If this is not set but -i2psam is set\r\n       then only outgoing connections will be made to the I2P network.\r\n       Ignored if -i2psam is not set. Notice that listening for incoming\r\n       I2P connections is done through the SAM proxy, not by binding to\r\n       a local address and port (default: true)\r\n```\r\n\r\n# Overview of the changes\r\n\r\n## Make `ReadBinary()` and `WriteBinary()` reusable\r\n\r\nWe would need to dump the I2P private key to a file and read it back later. Move those two functions out of `torcontrol.cpp`.\r\n\r\n```\r\nutil: extract {Read,Write}BinaryFile() to its own files\r\nutil: fix ReadBinaryFile() returning partial contents\r\nutil: fix WriteBinaryFile() claiming success even if error occurred\r\n```\r\n\r\n## Split `CConnman::AcceptConnection()`\r\n\r\nMost of `CConnman::AcceptConnection()` is agnostic of how the socket was accepted. The other part of it deals with the details of the `accept(2)` system call. Split those so that the protocol-agnostic part can be reused if we accept a socket by other means.\r\n\r\n```\r\nnet: check for invalid socket earlier in CConnman::AcceptConnection()\r\nnet: get the bind address earlier in CConnman::AcceptConnection()\r\nnet: isolate the protocol-agnostic part of CConnman::AcceptConnection()\r\nnet: avoid unnecessary GetBindAddress() call\r\n```\r\n\r\n## Implement the I2P [SAM](https://geti2p.net/en/docs/api/samv3) protocol (not all of it)\r\n\r\nJust the parts that would enable us to make outgoing and accept incoming I2P connections.\r\n\r\n```\r\nnet: extend CNetAddr::SetSpecial() to support I2P\r\nnet: move the constant maxWait out of InterruptibleRecv()\r\nnet: dedup MSG_NOSIGNAL and MSG_DONTWAIT definitions\r\nnet: extend Sock::Wait() to report a timeout\r\nnet: extend Sock with methods for robust send & read until terminator\r\nnet: extend Sock with a method to check whether connected\r\nnet: implement the necessary parts of the I2P SAM protocol\r\n```\r\n\r\n## Use I2P SAM to connect to and accept connections from I2P peers\r\n\r\nProfit from all of the preceding commits.\r\n\r\n```\r\ninit: introduce I2P connectivity options\r\nnet: add I2P to the reachability map\r\nnet: make outgoing I2P connections from CConnman\r\nnet: accept incoming I2P connections from CConnman\r\nnet: recognize I2P from ParseNetwork() so that -onlynet=i2p works\r\nnet: Do not skip the I2P network from GetNetworkNames()\r\n```",
          "user": {
            "login": "vasild",
            "id": 266751,
            "node_id": "MDQ6VXNlcjI2Njc1MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vasild",
            "html_url": "https://github.com/vasild",
            "followers_url": "https://api.github.com/users/vasild/followers",
            "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
            "organizations_url": "https://api.github.com/users/vasild/orgs",
            "repos_url": "https://api.github.com/users/vasild/repos",
            "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/vasild/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64583,
              "node_id": "MDU6TGFiZWw2NDU4Mw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Feature",
              "name": "Feature",
              "color": "7cf575",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/47",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/47",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/47/labels",
            "id": 5347322,
            "node_id": "MDk6TWlsZXN0b25lNTM0NzMyMg==",
            "number": 47,
            "state": "closed",
            "title": "22.0",
            "description": "",
            "creator": {
              "login": "MarcoFalke",
              "id": 6399679,
              "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
              "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/MarcoFalke",
              "html_url": "https://github.com/MarcoFalke",
              "followers_url": "https://api.github.com/users/MarcoFalke/followers",
              "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
              "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
              "repos_url": "https://api.github.com/users/MarcoFalke/repos",
              "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 124,
            "created_at": "2020-04-25T00:14:49Z",
            "updated_at": "2021-09-14T07:16:53Z",
            "closed_at": "2021-09-09T12:47:52Z"
          },
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 79,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20685",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/20685",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/20685.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/20685.patch"
          },
          "closed_at": "2021-03-02T10:50:39Z",
          "created_at": "2020-12-17T12:49:55Z",
          "updated_at": "2022-08-18T18:30:57Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-22T20:43:43Z",
      "updated_at": "2020-12-22T20:43:43Z",
      "source": {
        "issue": {
          "id": 772987536,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NTQ0MTU4MDYz",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20744",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20744/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20744/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20744/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/20744",
          "number": 20744,
          "state": "closed",
          "state_reason": null,
          "title": "Use std::filesystem. Remove Boost Filesystem & System",
          "body": "This PR replaces our Boost Filesystem usage with [`std::filesystem`](https://en.cppreference.com/w/cpp/filesystem) and includes dropping Boost System as a dependency. It includes a squashed down version of the changes from #19245. \r\n\r\n[A macro has been added](https://github.com/bitcoin/bitcoin/commit/7002c4ade0148c3273659208ae517b79822b289d), modelling how we check for `-latomic` to facilitate linking with `-lstdc++fs` when required. This is  ~GCC < 9.1 & ~Clang < 9.0, however not always. i.e you could be using Clang 7 on top of a GCC 9 installation (i.e Ubuntu Focal) and use `<filesystem>` without passing any additional arguments. I've tested this with GCC 8 on Bionic, Clang 7 on Focal & with Apple Clang 12.0.0 on macOS.\r\n\r\nGuix build:\r\n```bash\r\nbash-5.1# find guix-build-$(git rev-parse --short=12 HEAD)/output/ -type f -print0 | env LC_ALL=C sort -z | xargs -r0 sha256sum\r\nc1f9b326f9be4140f00cebeae5ff8de428a2fb8ecced539fcc36c53f53bfecf4  guix-build-07269321f38e/output/aarch64-linux-gnu/SHA256SUMS.part\r\nb44aca3bcf5ea92a3a6c48c24d6f85576f425f59b73528d4d00c20e950cf2128  guix-build-07269321f38e/output/aarch64-linux-gnu/bitcoin-07269321f38e-aarch64-linux-gnu-debug.tar.gz\r\n27a5553f7bd14797293fc40c5fb131c91e98a61d5481a283f13a1d0497eb5ed8  guix-build-07269321f38e/output/aarch64-linux-gnu/bitcoin-07269321f38e-aarch64-linux-gnu.tar.gz\r\n99e55a88823f6095864a09c9eaa824e24d9ec527380eb394f751c7205b930f69  guix-build-07269321f38e/output/arm-linux-gnueabihf/SHA256SUMS.part\r\nb720b2724fa47fde584f58ed3b587f1d1183523540777fd367ab7e582605cfea  guix-build-07269321f38e/output/arm-linux-gnueabihf/bitcoin-07269321f38e-arm-linux-gnueabihf-debug.tar.gz\r\nc19c247f4e9e0d7f888ac8ba9de1c12d382f48fa828a685d4fe02818a18abd1f  guix-build-07269321f38e/output/arm-linux-gnueabihf/bitcoin-07269321f38e-arm-linux-gnueabihf.tar.gz\r\n55b49ccb38de03bb95101354a16fd8d2190abede5ccc0d9b00b40c0cd526a2f6  guix-build-07269321f38e/output/arm64-apple-darwin/SHA256SUMS.part\r\nbaa44752470a6be9acae1c2f8fd1b9bc37afb00971787ea11fbaeddc9ab7c4aa  guix-build-07269321f38e/output/arm64-apple-darwin/bitcoin-07269321f38e-arm64-apple-darwin.tar.gz\r\nad7df4d8026d5bcce1321cdccc2e1820e8a8bb7e1064ed16e20a7ea354057fd2  guix-build-07269321f38e/output/arm64-apple-darwin/bitcoin-07269321f38e-osx-unsigned.dmg\r\nf342066dc34a14d67c47779a2413a14633a996e8e7ddca89ae0184e23ef99efd  guix-build-07269321f38e/output/arm64-apple-darwin/bitcoin-07269321f38e-osx-unsigned.tar.gz\r\nf6905346a5d48f57805fb062d0247ab5007c89047070a0b3125941dd1a2b8aa6  guix-build-07269321f38e/output/dist-archive/bitcoin-07269321f38e.tar.gz\r\na1f6c4b2b118dbd89770801f0bcffd2218b82df408cd227e34c40493469bb7a2  guix-build-07269321f38e/output/powerpc64-linux-gnu/SHA256SUMS.part\r\nba8359426e523bf013d93579c1bedc57380214c8170a9743b64ec1a8a3bbccbf  guix-build-07269321f38e/output/powerpc64-linux-gnu/bitcoin-07269321f38e-powerpc64-linux-gnu-debug.tar.gz\r\nb0bb500c274a683ea28ecbc1e8f18c618a9f8acb00045f80ae43c515288402c0  guix-build-07269321f38e/output/powerpc64-linux-gnu/bitcoin-07269321f38e-powerpc64-linux-gnu.tar.gz\r\n38c85e9589e092cd3aa08996aa383c0ccd5c73208943389741355a6eb7f72537  guix-build-07269321f38e/output/powerpc64le-linux-gnu/SHA256SUMS.part\r\n50fcba7942ff48d91e84c093fda0affc17e46167fe1d5137c6e14c5c41f289d1  guix-build-07269321f38e/output/powerpc64le-linux-gnu/bitcoin-07269321f38e-powerpc64le-linux-gnu-debug.tar.gz\r\nfa08ef1ceca072e014faa95ffee945954b2976fa28f90926b87ab0e5f15f8ca5  guix-build-07269321f38e/output/powerpc64le-linux-gnu/bitcoin-07269321f38e-powerpc64le-linux-gnu.tar.gz\r\ne52dd80a9c306d6aeb544acaa1f4ed560b6b92b5184764a05026d45451aa2e94  guix-build-07269321f38e/output/riscv64-linux-gnu/SHA256SUMS.part\r\n864e0a16c485b4159cec3ee0a83b046f1b1c3bc821670011c5ac5cd09ddfb91f  guix-build-07269321f38e/output/riscv64-linux-gnu/bitcoin-07269321f38e-riscv64-linux-gnu-debug.tar.gz\r\n4a061172181322e7ad0cf06405bf74f4c8683eaba3a67ecfd46158cba7627f62  guix-build-07269321f38e/output/riscv64-linux-gnu/bitcoin-07269321f38e-riscv64-linux-gnu.tar.gz\r\n876d82251853205420dffe7237523fc6ee3d09f78bf74cc03dc71f548446f335  guix-build-07269321f38e/output/x86_64-apple-darwin/SHA256SUMS.part\r\n3f82b2e62c60eee68e7b8fc28e4792e069e3c2cd780ee2d67290ca422cdbc47c  guix-build-07269321f38e/output/x86_64-apple-darwin/bitcoin-07269321f38e-osx-unsigned.dmg\r\n4ccdd4c410cac9d627e54ce83ee4816608681735da3cb93c60c5eb70ca86337a  guix-build-07269321f38e/output/x86_64-apple-darwin/bitcoin-07269321f38e-osx-unsigned.tar.gz\r\n2179d36b2f60e28c15262d4e51f27465b5ae077f60e550345e125683ca611066  guix-build-07269321f38e/output/x86_64-apple-darwin/bitcoin-07269321f38e-osx64.tar.gz\r\nb377e72fe84b6a982b8d414d60c85e6319523dff50dc852a0ba907f6d850ddd0  guix-build-07269321f38e/output/x86_64-linux-gnu/SHA256SUMS.part\r\n8547e2f582ce05ae6a6224793b64efb2eb63f2816bf0bed5d53fcc4786274597  guix-build-07269321f38e/output/x86_64-linux-gnu/bitcoin-07269321f38e-x86_64-linux-gnu-debug.tar.gz\r\n83b64805aa39f31a6fa4c2ed41e029c3be084e6dea06b90fac1ebca5c95bce29  guix-build-07269321f38e/output/x86_64-linux-gnu/bitcoin-07269321f38e-x86_64-linux-gnu.tar.gz\r\n```",
          "user": {
            "login": "fanquake",
            "id": 863730,
            "node_id": "MDQ6VXNlcjg2MzczMA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fanquake",
            "html_url": "https://github.com/fanquake",
            "followers_url": "https://api.github.com/users/fanquake/followers",
            "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
            "organizations_url": "https://api.github.com/users/fanquake/orgs",
            "repos_url": "https://api.github.com/users/fanquake/repos",
            "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/fanquake/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/52",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/52",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/52/labels",
            "id": 6179837,
            "node_id": "MDk6TWlsZXN0b25lNjE3OTgzNw==",
            "number": 52,
            "state": "closed",
            "title": "23.0",
            "description": "",
            "creator": {
              "login": "MarcoFalke",
              "id": 6399679,
              "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
              "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/MarcoFalke",
              "html_url": "https://github.com/MarcoFalke",
              "followers_url": "https://api.github.com/users/MarcoFalke/followers",
              "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
              "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
              "repos_url": "https://api.github.com/users/MarcoFalke/repos",
              "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 123,
            "created_at": "2020-12-04T08:54:20Z",
            "updated_at": "2022-04-25T20:51:00Z",
            "closed_at": "2022-04-22T18:08:30Z"
          },
          "locked": true,
          "comments": 130,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20744",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/20744",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/20744.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/20744.patch"
          },
          "closed_at": "2022-02-03T14:53:03Z",
          "created_at": "2020-12-22T14:27:54Z",
          "updated_at": "2023-06-17T10:06:54Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-24T00:58:18Z",
      "updated_at": "2020-12-24T00:58:18Z",
      "source": {
        "issue": {
          "id": 549178400,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MzYyMzE4OTM0",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17920",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17920/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17920/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17920/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/17920",
          "number": 17920,
          "state": "closed",
          "state_reason": null,
          "title": "guix: Build support for macOS",
          "body": "This PR brings our Guix builds on par with Gitian in terms of supported architectures.\r\n\r\nReviewers: if you run a build, please submit:\r\n\r\n```\r\nfind output/ -type f -print0 | env LC_ALL=C sort -z | xargs -r0 sha256sum\r\n```\r\n\r\nSo that we can compare hashes and ensure reproducibility!",
          "user": {
            "login": "dongcarl",
            "id": 3445290,
            "node_id": "MDQ6VXNlcjM0NDUyOTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dongcarl",
            "html_url": "https://github.com/dongcarl",
            "followers_url": "https://api.github.com/users/dongcarl/followers",
            "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
            "organizations_url": "https://api.github.com/users/dongcarl/orgs",
            "repos_url": "https://api.github.com/users/dongcarl/repos",
            "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/dongcarl/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/47",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/47",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/47/labels",
            "id": 5347322,
            "node_id": "MDk6TWlsZXN0b25lNTM0NzMyMg==",
            "number": 47,
            "state": "closed",
            "title": "22.0",
            "description": "",
            "creator": {
              "login": "MarcoFalke",
              "id": 6399679,
              "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
              "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/MarcoFalke",
              "html_url": "https://github.com/MarcoFalke",
              "followers_url": "https://api.github.com/users/MarcoFalke/followers",
              "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
              "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
              "repos_url": "https://api.github.com/users/MarcoFalke/repos",
              "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 124,
            "created_at": "2020-04-25T00:14:49Z",
            "updated_at": "2021-09-14T07:16:53Z",
            "closed_at": "2021-09-09T12:47:52Z"
          },
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 15,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17920",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/17920",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/17920.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/17920.patch"
          },
          "closed_at": "2021-01-22T04:17:34Z",
          "created_at": "2020-01-13T20:59:51Z",
          "updated_at": "2022-08-18T17:14:23Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-06T12:03:19Z",
      "updated_at": "2021-01-06T12:03:19Z",
      "source": {
        "issue": {
          "id": 780197917,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NTUwMTEwMTg1",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20864",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20864/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20864/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20864/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/20864",
          "number": 20864,
          "state": "closed",
          "state_reason": null,
          "title": "net: Move SocketSendData lock annotation to header",
          "body": "Lock annotations must be in the header, otherwise the will have limited or no effect",
          "user": {
            "login": "MarcoFalke",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarcoFalke",
            "html_url": "https://github.com/MarcoFalke",
            "followers_url": "https://api.github.com/users/MarcoFalke/followers",
            "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
            "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
            "repos_url": "https://api.github.com/users/MarcoFalke/repos",
            "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20864",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/20864",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/20864.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/20864.patch"
          },
          "closed_at": "2021-01-07T13:58:52Z",
          "created_at": "2021-01-06T07:44:50Z",
          "updated_at": "2022-08-16T17:02:12Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 4180294258,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQxODAyOTQyNTg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4180294258",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-07T15:07:36Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMmNjZjY5ZGQ2Yjc3MjQyM2FjYjM0M2QxNmVmMmJkYmIzZTNkYTAz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/02ccf69dd6b772423acb343d16ef2bdbb3e3da03",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/02ccf69dd6b772423acb343d16ef2bdbb3e3da03",
      "tree": {
        "sha": "105a82f38003a255a4c9df8e713155455a2e130f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/105a82f38003a255a4c9df8e713155455a2e130f"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 105a82f38003a255a4c9df8e713155455a2e130f\nparent 4b8b71e630415647c75fa95d5407690b372bceff\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1581008426 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1610035618 +0200\n\nrefactor: Move port mapping code to its own module\n\nThis commit does not change behavior.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl/3MaIACgkQQQEIES5+\nqB/vWg/9FDBHM8JeDfa3+eKrRBVeneSySfcZsz52N0hx08wEvK6A09pYHj2Pz34Z\n055zlkrStaK204qzrTQTkPiHMDlcF+eFUdzCWlNQzkBp9lWVJ82eTFCu47kLBZCz\nlDqwUKz6GNjNhx/slNTtU4l6RA2pupWWGUCvxG5xzR85plQaxkn9psH9a+rHy6y3\n+8C7y7MTeZO6/yktngCGjoO62Rw50zzBkX3T873BfyvgDzziL60GQGo3K6UsqBFh\n1bzIqmxqmOKJGbPzAr9YeeasGNM7SzR1Lq/YKrsp3HlxHDU9JIZht9GXhtS07Ao5\nfS1rqPiXnThGlCQPUDqnETY6gmVh8oO8d7TpZOEMCTRNgDaiRuacSA6qkm7h4PAk\nbE+EJmgmvhcRAMJVlKw82yBd/hB2+wuUFJ5thVRWwaXZhgEaGlOyE47mo1WNBk/E\neNlueQ+SGdtRbCr0udbPkg8eR3eXjy7T+VgyVQWSHYFgS9HdvQ6JnnTwblSs7ChK\nRELlnNXU3QJFre10mnkRQvG3czyTuNfqnO2eOyW0A0TandCgO3Gs1/Wqay/E16aU\nhdPhh6sOVWcVd27bkYu+bKSfOidj9x9H9cBABhcWTlexjh1oS3dS6ALS64++ULrB\nCfTp6jq8tT79lE0jKI0FHtxEn19ypUecTx/Q9T+lJzCm0HFDjfA=\n=hN6R\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4b8b71e630415647c75fa95d5407690b372bceff",
          "sha": "4b8b71e630415647c75fa95d5407690b372bceff",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4b8b71e630415647c75fa95d5407690b372bceff"
        }
      ],
      "message": "refactor: Move port mapping code to its own module\n\nThis commit does not change behavior.",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-01-07T16:06:58Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-02-06T17:00:26Z"
      },
      "sha": "02ccf69dd6b772423acb343d16ef2bdbb3e3da03"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyOGUyOTYxZmQ2YTJhOTEwMWZjMDhmYjc0ODQzMDk4OTI5MWFhZjdl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/28e2961fd6a2a9101fc08fb748430989291aaf7e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/28e2961fd6a2a9101fc08fb748430989291aaf7e",
      "tree": {
        "sha": "c3fe71dbb68c12822cbf4a9a7fd3dab92756266c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c3fe71dbb68c12822cbf4a9a7fd3dab92756266c"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree c3fe71dbb68c12822cbf4a9a7fd3dab92756266c\nparent 02ccf69dd6b772423acb343d16ef2bdbb3e3da03\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1581863866 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1610035627 +0200\n\nrefactor: Replace magic number with named constant\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl/3MasACgkQQQEIES5+\nqB94XhAAnHIEINe0lV4BYpOjfMo92c7egmBF0qkwzxs/cMus6os7Y98+WfMcu6Wc\n7CvyozR0Xtrcee4QuN7tzKqvY+yzn8Qepicsom0UVhjijEvU/ukbxu2tIDnVkDMq\nZYqwrLTJu1+1wjYizVJyQoqXHkwXoyqYt314y1jq20qEFWrVSfkvppcDdkvV8yzT\ninK8TEFttMeMHDrBbXJWyZAI/ZE1UbeZZqBOFfLFPz9jBdXf9ofzggeCiqpHHW7G\nQH36vlnInXz/vfDk1b2vVXe5dg4orNwuEYmBT3WZ41AFFBK2Chbxy0CTFIiDhmNr\nyzLYvDDBU3mi2DhYCpZ3wJgz63uT5AdJ27azfFgJzjBdGHaARoBsam4ZM1t5kUWQ\naxoX60rg1cfonMw+vxMbg1EdZsVMI/zMQR3R0yCHSSYdcKK+w667GOl4ucYstIpP\nNLNyDO0ZMHArDAoL7581R667IWFVafd4CFrBvQLz/93pHkOx8R1RQhYRNZiGw0UG\nVwd+VSafGxIm6H2Sx0/9XhS10GWkSWaZDHlJ+Cw9JAcksuoWcf6LaSnaBoHqlHkI\n8xYjMQVxQy7VxQlWr7ymJC3nk/Bvdh6B2mFaTcrE1pg8RuEa6JpLacbs84HwUhQH\n2yGc0msRJmu6vLgfLlItlhYJEoHAMzgQsEqa/qjziPDhXANVvoE=\n=HDaq\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/02ccf69dd6b772423acb343d16ef2bdbb3e3da03",
          "sha": "02ccf69dd6b772423acb343d16ef2bdbb3e3da03",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/02ccf69dd6b772423acb343d16ef2bdbb3e3da03"
        }
      ],
      "message": "refactor: Replace magic number with named constant",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-01-07T16:07:07Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-02-16T14:37:46Z"
      },
      "sha": "28e2961fd6a2a9101fc08fb748430989291aaf7e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4YjUwZDFiNWJiMjliN2QxZWEwMjQ1YmE3NWE4ZGYzMTQ0ZTMxMmRj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8b50d1b5bb29b7d1ea0245ba75a8df3144e312dc",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8b50d1b5bb29b7d1ea0245ba75a8df3144e312dc",
      "tree": {
        "sha": "e00bef9a28115a324be84547f39ef7e84884e81f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e00bef9a28115a324be84547f39ef7e84884e81f"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree e00bef9a28115a324be84547f39ef7e84884e81f\nparent 28e2961fd6a2a9101fc08fb748430989291aaf7e\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1582061010 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1610035627 +0200\n\nnet: Keep trying to use UPnP when -upnp=1\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl/3MasACgkQQQEIES5+\nqB9QrxAAlS0SoGdCwDLgJhKdG39LBBvgU5ITJJ0D5Eya642Xb7PjkqujisT7dkI/\ni808t9bIBrI4BrjCPxBrLQlmnAn3F/6CL4/+jyI1qQL+5CFVIiEejOUUa+5go2d0\nlbr+ja/B//J5wHxsftDqTh0CnhH9iSMEu9BHgYC2U18fMosGm6cNfPVhegnkjO1q\nlztH3n9Q+3mLW+xcORmOx7G8xWyTPc6KAXq8CrIX4lcjE/WrDyIZGlJCnbAtEmwg\nb5AoT2GtlmobfeRTSoSRXS58Xvu6W8UBHpqnuVbNFh/P1fEAMVJC088N8FTQ7VaI\nQVtajjuuvjHaJQ+7lMgXiPq7dRypaLSqDyb90+WXhQXNx+uSyYe9/sQhfS4xOIH8\nlbaeTe3TleMxYRyqihTLVKNDjPch6L/+XekSknN5zU77RSvcbvcnmUGaR/m+V0R5\nQS+lobpTyH2/kauFdbGCkuAhYbNhq6sVloGz0PmVoNs01jECBCLrVKLceFN6HRU2\nhFhUnRk2lh66ApQQ0ZOeD/2t7R4ohXQ0Sm09HMsfXAOZlwES6k9v/AZSVw0u8BaE\njZLsW3z8ilv7LjTOmDOgjZ0oDBWGTgIYiVrvwsfSrkhxMeAQHy0XOcwB2TYGxDIS\nCbUdIX5lymQLVv58vtqoKd7esJZHEG/zGzeFU6KXVgRWULpIj+8=\n=bdEC\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/28e2961fd6a2a9101fc08fb748430989291aaf7e",
          "sha": "28e2961fd6a2a9101fc08fb748430989291aaf7e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/28e2961fd6a2a9101fc08fb748430989291aaf7e"
        }
      ],
      "message": "net: Keep trying to use UPnP when -upnp=1",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-01-07T16:07:07Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-02-18T21:23:30Z"
      },
      "sha": "8b50d1b5bb29b7d1ea0245ba75a8df3144e312dc"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZTkxYjFlMjRkOTZlMGNkY2NkZDJhM2VkMDM0NDEzZjNiYTZiYWU2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4e91b1e24d96e0cdccdd2a3ed034413f3ba6bae6",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4e91b1e24d96e0cdccdd2a3ed034413f3ba6bae6",
      "tree": {
        "sha": "01f7e01ff0f66e58d98b5f3805780f571570476c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/01f7e01ff0f66e58d98b5f3805780f571570476c"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 01f7e01ff0f66e58d98b5f3805780f571570476c\nparent 8b50d1b5bb29b7d1ea0245ba75a8df3144e312dc\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1582409448 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1610035628 +0200\n\nnet: Add flags for port mapping protocols\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl/3MawACgkQQQEIES5+\nqB8D+xAAl72vEy8yKzQrJmDVnBS0rg8t729wwVQPTErvu6dyAqSQwZ8iOPfVapWL\n3OX5+DKgJlI+75dh4/Lld4e7I3VrleKpm8jhrbbKdIDuvanxaHFLM5hXWK72b+f/\nmON62rOuWF0FmCKB3HYvxGYw7oCdeuONw0ckRgKBlSHhseThNRqngy7SCHEDHp+K\nhnunTspiL6qRfjHdC3eE76mXEhCWBX0UDEwyuKm7zgO6JDNHG2vSVKfgn0UfW/ZH\n19BVDk01ihE9yqF8pdd7lSB4iYygPtt3zw2UguyaS294Z2kmbRhj9h2fqKSAvj8c\nRdE2sJWt5wHdIeeqxoHjT9I9JlnnyG1OFGlyjpAU8K+sj4OCWRFTIZaf1kA7SDS9\nwM8cCkISPznozOEf1rmFnOW3ii6sp1mR6iX+0PiJUpWf6ETQRzYn/pBa7V0QB0Pu\nH5aDQE5HXDU/B6Dz/0RhZcCeNSx/GyykrLV1+RjaGGB6k1ClRZqmhj4f7Z6tzwZ0\nldhhsWBkQulhnDjfBRLrZv8Et4IRvDRoArsMiERIymjAcoKJ1qqUGTHe3dy7Pr2a\nNeSXHeLt2rKQmAuUP8VaWHaPxV34Ac8039EcNLxPuZchsjHqwH+8D8bzTZuPocc5\npoa5loKlBXaxH1PhrilF/GXdTqdnHsTcX8Annmf/5ckylvdyvrQ=\n=Bf1P\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8b50d1b5bb29b7d1ea0245ba75a8df3144e312dc",
          "sha": "8b50d1b5bb29b7d1ea0245ba75a8df3144e312dc",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8b50d1b5bb29b7d1ea0245ba75a8df3144e312dc"
        }
      ],
      "message": "net: Add flags for port mapping protocols",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-01-07T16:07:08Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-02-22T22:10:48Z"
      },
      "sha": "4e91b1e24d96e0cdccdd2a3ed034413f3ba6bae6"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZjE1MWNjNjhjOTVhODk0M2U0M2UzZmE0MDYxZTE3NjI2Mjc3OWU3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cf151cc68c95a8943e43e3fa4061e176262779e7",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/cf151cc68c95a8943e43e3fa4061e176262779e7",
      "tree": {
        "sha": "acae4c5db77ebd79648dad54806f3b02caf8e6d9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/acae4c5db77ebd79648dad54806f3b02caf8e6d9"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree acae4c5db77ebd79648dad54806f3b02caf8e6d9\nparent 4e91b1e24d96e0cdccdd2a3ed034413f3ba6bae6\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1582412267 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1610035628 +0200\n\nscripted-diff: Rename UPnP stuff\n\n-BEGIN VERIFY SCRIPT-\nsed -i 's/g_upnp_interrupt/g_mapport_interrupt/' src/mapport.cpp\nsed -i 's/if(g_upnp_thread/if (g_mapport_thread/' src/mapport.cpp\nsed -i 's/g_upnp_thread/g_mapport_thread/' src/mapport.cpp\nsed -i 's/LOCAL_UPNP/LOCAL_MAPPED/' src/mapport.cpp\nsed -i 's/\\bupnp\\b/mapport/' src/mapport.cpp\nsed -i 's/LOCAL_UPNP,  /LOCAL_MAPPED,/' src/net.h\n-END VERIFY SCRIPT-\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl/3MawACgkQQQEIES5+\nqB8n1Q//RCwIL2AZonyaGnznJU78UY6e3G6GflB13zQaaL8TBN1iPyl8aIxa73T/\n/fDXBer6wYnJmtB0DfmzaTaFbv0qnOFK7qwyTk8DDk2/GLwFDgq+oxPyaOOmf1p+\nwDGG2eFzH1/uF+/i2KeZGBXXnGknwXCWRYfjPHMBUjDUtfn4/SZYREb2V3AQBrNy\nNdgJEhewlbpI4bR9LoPJ3r97Bi30NMIKkwLg+82TDH9yzlnsnlKShLrqC/RK6qff\ndhsWg5vCdP7Q3PijTf+jOOv5k5B8U4xx7ahqycyb45qQvfnspJrYrRw7l3RX/12g\nEfNfwfdV66FTtCETTDVedlorNwrsIHjjMYPs6SRpE4jtcayjAt3KN8J+IDC9ofkN\nG/QeHYEJIl6aCgRhMe2nGD7bpshDpGRdet9Ub/v6vmnxeujFzGKX1FuoouTWqYvT\n+xVZjUyBlOIfZxpMVMnKwMuDL+5fodakEJM/zf8mdcSP/typOE+PfiZ2eegms40h\nO9KLdXtAuHC7Bu5er5hfpqxaTI+jAFqXaGFyaw7swX+ZWBJdFByFvRBR8oIwWMYF\nIz/6YydI+7vFh0tt7VpBF22C9pCJDNEEmuuhZLe9jkCPotLo1m8cbM5VDKcQyWkq\nn7v8Oema91qQHBy8g1+B1BwA26FOIvJPmm3iuudHIpkahYnSV6c=\n=VU2i\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4e91b1e24d96e0cdccdd2a3ed034413f3ba6bae6",
          "sha": "4e91b1e24d96e0cdccdd2a3ed034413f3ba6bae6",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4e91b1e24d96e0cdccdd2a3ed034413f3ba6bae6"
        }
      ],
      "message": "scripted-diff: Rename UPnP stuff\n\n-BEGIN VERIFY SCRIPT-\nsed -i 's/g_upnp_interrupt/g_mapport_interrupt/' src/mapport.cpp\nsed -i 's/if(g_upnp_thread/if (g_mapport_thread/' src/mapport.cpp\nsed -i 's/g_upnp_thread/g_mapport_thread/' src/mapport.cpp\nsed -i 's/LOCAL_UPNP/LOCAL_MAPPED/' src/mapport.cpp\nsed -i 's/\\bupnp\\b/mapport/' src/mapport.cpp\nsed -i 's/LOCAL_UPNP,  /LOCAL_MAPPED,/' src/net.h\n-END VERIFY SCRIPT-",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-01-07T16:07:08Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-02-22T22:57:47Z"
      },
      "sha": "cf151cc68c95a8943e43e3fa4061e176262779e7"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1OGU4MzY0ZGNkYzRlNTdiMGNhYWMwOWY4NDAyZTY1MzUzMDFkZTli",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/58e8364dcdc4e57b0caac09f8402e6535301de9b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/58e8364dcdc4e57b0caac09f8402e6535301de9b",
      "tree": {
        "sha": "dcfc4960eeb31b81c6fbcaedc31bd2424d4ecb28",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dcfc4960eeb31b81c6fbcaedc31bd2424d4ecb28"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree dcfc4960eeb31b81c6fbcaedc31bd2424d4ecb28\nparent cf151cc68c95a8943e43e3fa4061e176262779e7\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1582413876 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1610035628 +0200\n\ngui: Apply port mapping changes on dialog exit\n\nThis commit does not change behavior. It is a prerequisite for NAT-PMP\nsupport adding.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl/3MawACgkQQQEIES5+\nqB/bIg/+NDNRlsrw6g+cCEjIrD30KxLN1qX7c3gUcurfDaI1mC9CM3tDbOy1vCdN\n67bbBMrj5CtgJ8KGZGSU6bqBy2ASw3IYukP80b+R7g5f3+Km3fKkXl1cHltS0mqp\n58dqK8U5dw8cdtSNS04+5gYykUZ0pxY3Kl9iAS7bA66+527EQkVEB5d2KVtTelHl\nS7hGK5BWFp8gH9o4qFGl3Dm6duCZjM0Aff+BFBTKejm0m09gV4JRtmRi7BwgYS2v\ncaWj+vWojPJF/WKYSt3WggLRMRtw4gfJ2N6dZ8E5wFqLj/WoHgWfFKzzTzNpZUUi\neHM5VfiJK889/+bwAhjITewKEQQp/GJWNemmkC/ci4zWVDIvYe0wRky0YW3aTe3f\n4Kq3z9/EMN1OhsyC/givXuqilrUMqjvNYLy12WqExyvNP4KA/aYQIm8QdfpeT5Zn\nuEtRP7DJwbaMiiUx38S/AOXIkJpy8fmHgOI78ijOC0M25RjtSkFSxL4Dk4fp1ITX\nYXilxmjLTh509Thdo/Eq4JJU7SqOin/XyRXIjHI9rKd5f3tFWZhvJNA29jzYFSiN\neluJPcBSW6woP8fD5VVyHjDnYJ4dW64ooQgO3W7BqTPcU79GrOxbUDXSki6WFZVz\nFYklftNuyk3nREOTo5E3KX1Xbivf/7M4koztepe0dhk8iEcFhq8=\n=o7eZ\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cf151cc68c95a8943e43e3fa4061e176262779e7",
          "sha": "cf151cc68c95a8943e43e3fa4061e176262779e7",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/cf151cc68c95a8943e43e3fa4061e176262779e7"
        }
      ],
      "message": "gui: Apply port mapping changes on dialog exit\n\nThis commit does not change behavior. It is a prerequisite for NAT-PMP\nsupport adding.",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-01-07T16:07:08Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-02-22T23:24:36Z"
      },
      "sha": "58e8364dcdc4e57b0caac09f8402e6535301de9b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzphOGQ5ZjI3NWQwY2E2NDc5N2NjODk2MjdmODAwM2I0OGIzZWZlZjYz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a8d9f275d0ca64797cc89627f8003b48b3efef63",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a8d9f275d0ca64797cc89627f8003b48b3efef63",
      "tree": {
        "sha": "69742a6269aad2f4b51d25410db8135726292e3e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/69742a6269aad2f4b51d25410db8135726292e3e"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 69742a6269aad2f4b51d25410db8135726292e3e\nparent 58e8364dcdc4e57b0caac09f8402e6535301de9b\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1582414453 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1610035629 +0200\n\nnet: Add libnatpmp support\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl/3Ma0ACgkQQQEIES5+\nqB97kBAAkO4ecFjUqUFUxQmRFbDgZ7eS0dUwF51kpZMEUTuPoaRvwqXVTXv/9+64\nB+AKgFdu71lYIkAowoyyop56frG3X5SJqVZJmu4mNILKVQGJP81WBECpsPhbxr98\nTQCerhwmYvVqidNpOT5DFHxqEpvhR6pzkl9286dMNNWZxHath71odPqrX3VSo32S\nsfyZXegwVo7K1WlGSUdsVgldOt09AmNpG1dYw2DhooXDPRcI7AWpCBOhT9gSOSvf\nYWwICcYGTKPOH+7s7CvjefzfFnqWidWkEOG+OcNPVMJxY09U0ggGQWTa/58EvdAX\naNq2C5ijFN+qhPk+lDAGJUzEglPlDJ3gRXmt0FYJQ17CjpjZsIWzRBSt1esrdzPt\nOFMcpbf2wgDxRvBBqPzt6XeBA1wN02elwj1vOgyswlB9DFMa1D1XhhywM60YRPDw\noStdcoWTkDymik8viZxtbjPie8dBRGcc95VLKkhsw5tqxDhxRJ78bsIRzSQAVjTY\nGnQuNb5OSzqOlsPjuBlYJzQKbvuEp3iKKyqqKA+pLfY7FTq8DM1K/ahg6HSQLAfZ\n65a8DXc2eFPYj1nQ/4VylK/sFW+lIHoEREruqL2mCxRKGBo8fihFKhTimr6YhHdy\nZZSWS+uizki02uyT1bx3GuFj7AEl2BY6ZK/0QY9zWHgAqo9kFgs=\n=0jsT\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/58e8364dcdc4e57b0caac09f8402e6535301de9b",
          "sha": "58e8364dcdc4e57b0caac09f8402e6535301de9b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/58e8364dcdc4e57b0caac09f8402e6535301de9b"
        }
      ],
      "message": "net: Add libnatpmp support",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-01-07T16:07:09Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-02-22T23:34:13Z"
      },
      "sha": "a8d9f275d0ca64797cc89627f8003b48b3efef63"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyOGFjZmZkOWQ1M2VjNDM3ZTkwOGFiYjhjODQ0OTdhNGY0MWI5MWVk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/28acffd9d53ec437e908abb8c84497a4f41b91ed",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/28acffd9d53ec437e908abb8c84497a4f41b91ed",
      "tree": {
        "sha": "642ae90c83a0afc5ba32c4445d553aa0486192a9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/642ae90c83a0afc5ba32c4445d553aa0486192a9"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 642ae90c83a0afc5ba32c4445d553aa0486192a9\nparent a8d9f275d0ca64797cc89627f8003b48b3efef63\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1582415505 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1610035629 +0200\n\nnet: Add NAT-PMP to port mapping loop\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl/3Ma0ACgkQQQEIES5+\nqB+8hQ/+NQWa/B6o10or0lGBKYIDdCdObZ2FlCJJ+wIatMDeNA+2Gm+ZYqOCDpMm\nxbJ1/NV0BvkXge/4demA2B4u6aN4OBTVBEihjetXxg/00O1B39O3OC/Ru6UxQjKg\nwMWIiMnl2k0FDz4SsuyoeKLtGk79EKv2JPv5YmG8u1XuvQrqCAtr3Oh8L5jaGNr9\npU509HU6bE/v/RP8Df6QyrLITS7Gp0aF4fLpOgoRkKLxVzBTy0cDILoG7qnZxF26\nBIoJw+m11M0Tf1xZNeK892+by+wbvTDfp1ad+pS/pjpgk1HtOrdI5Gbyit9iJgpD\nQ44UIHDQr+E51yMzuAIOQ2kYwxdbOpULgYkDSjLnMirtHa6di8YqSUduxydTcm7N\nqFuPhpO6p9xCgSWqtU5rW7Dc0M7vFN0emjL09TebTj2efIBrnPvRbfArdjmEP+/c\n3cqJdopJagGfcjG5EnSWHiwZ+0+O+oKSEO4mXBUvhJiHaX1VjmfogRVYTiPHaiAp\n5PWxvZLdMeDWX1Sj6yarStjylbJakjrVvMDIxGDOjCkJwyhpaPBmjEa7FLJvKMLR\nqf1/n41csntA2YL0SQQKXJVPN6vsWRokA1RE1VfQh1wV/Myj2nRSnPUJDTYdbFFP\nPQjBOkg2R4WnIs5lJgvfVjrbhUb2JX2gSfdGtV4UCofkFsCxpeI=\n=5pX4\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a8d9f275d0ca64797cc89627f8003b48b3efef63",
          "sha": "a8d9f275d0ca64797cc89627f8003b48b3efef63",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a8d9f275d0ca64797cc89627f8003b48b3efef63"
        }
      ],
      "message": "net: Add NAT-PMP to port mapping loop",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-01-07T16:07:09Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-02-22T23:51:45Z"
      },
      "sha": "28acffd9d53ec437e908abb8c84497a4f41b91ed"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMzlmNzMzNmEzYjQ5M2Q0NmE0NDg2YzRjOTRmZGNhMWIzMTUxMzcw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a39f7336a3b493d46a4486c4c94fdca1b3151370",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a39f7336a3b493d46a4486c4c94fdca1b3151370",
      "tree": {
        "sha": "4adf1ae61b5b02f5081b5dbcee09b64503b0947f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4adf1ae61b5b02f5081b5dbcee09b64503b0947f"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 4adf1ae61b5b02f5081b5dbcee09b64503b0947f\nparent 28acffd9d53ec437e908abb8c84497a4f41b91ed\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1582416739 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1610035629 +0200\n\nnet: Add -natpmp command line option\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl/3Ma0ACgkQQQEIES5+\nqB/MkA/8D7FUJBJNNr/NY81W15LLBe/G+SrBiZZnsDxguToENusVgDBRlrP4fjL/\nio3kv8mhNXj9mv78ON37zuNbqHE1gnDUsM9SyjifNatPjNUSEufwuBvF45Ptw+eN\njO4/t6O2gx24Ehlaam/0mrnBxs//CulITSu/KNSwXoU7+Z46r8Uv8QRRhVDtW7D0\nHCPFPEFqRk3SDnFerEZZROPI/4K6PU0h5me29gNy9rR16/Dy4wIVM4oVHUAsSdX6\npkjPfF1xv3JpaX3/oGurzFn406r5oOiR8Bs4rKrwXGGTZH027G8v5cpNYu2YbbWN\n2xYzhZrdxGOgIllmQg1XAjOEw0e1ELprxAh+NxtFXjOgtPNjqHxNTY0FcknLwgCu\nM11/2FQU5wfjPdkYGPL+Hbu2QTyESTZXBi6xKr4QZNcX58bcP3Jxui/eZwgSWxGA\neaCSkpcIwTXi5ak7PCJPriWR1csEVwL8JrZJtiGXvakr+GlgDXG46icemtBtDWnh\nZ73o3NkPE1cYloyX+XrZ6uG7Ooqq4s7nZBfLgnw08XnnZaniON1iKSZT+E9Y6R+w\ntkcIQ4tGPB3D4UmnTfNdHFoStE4W71wLUMDwSGDLootiuiJnIIrjIvJEhVtLao1i\nJ21M3Q/jGfiYP0OhsGEsxxcO/RvumdWs557GOaGiPCQBc10dHIY=\n=VU45\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/28acffd9d53ec437e908abb8c84497a4f41b91ed",
          "sha": "28acffd9d53ec437e908abb8c84497a4f41b91ed",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/28acffd9d53ec437e908abb8c84497a4f41b91ed"
        }
      ],
      "message": "net: Add -natpmp command line option",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-01-07T16:07:09Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-02-23T00:12:19Z"
      },
      "sha": "a39f7336a3b493d46a4486c4c94fdca1b3151370"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1YTAxODViNmM5YzgzODI5MDEwMzMxNDkxNjE5MGEwMzMwZWQ5YTgy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5a0185b6c9c838290103314916190a0330ed9a82",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5a0185b6c9c838290103314916190a0330ed9a82",
      "tree": {
        "sha": "eeb3e1eec3249d4fc22080604a5dc004af554057",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/eeb3e1eec3249d4fc22080604a5dc004af554057"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree eeb3e1eec3249d4fc22080604a5dc004af554057\nparent a39f7336a3b493d46a4486c4c94fdca1b3151370\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1582417521 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1610035630 +0200\n\ngui: Add NAT-PMP network option\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl/3Ma4ACgkQQQEIES5+\nqB9jig/+Jz/MBFSG79YrUCI1h3aAiZIEZGmHk5GE26v7ZZlY+zsfPU7M9m1Bv7IC\nwrNVsuOwylILFT0d4e98bWkz131y5j8EI2ymf6VX+FBS02qZcWBgmIogq1fuMkZR\nP4KKt2f96hjGGJyS9YhzkOZCmCyhlC1sqt84yfmSfMNWQZxmQR12JuoRSz/q6Trt\n4zhnQYoOkfJDMpWm07JqjrKZv+eNLYYBb9sDdpcmhfCx10xHWP1d3YIuHyQtRntw\nW8xw2TQyjfNuh7xzwNv2Lpc4HkjL8QS+U2fz3MPsGHloKTREfCmiBgmGiZPqjG8o\n9MpDjUezNDPz5ZQzLngTHGFukCZB+rupGDA3MU12DeCuegTeUQxr51KwurXjxXsW\nUcLIs3zuzA5H+b0ZEaNl9MZKhHLNeBdRVDEGYpJH+j7A4fjH/CDDMznPmiUJW6Ux\nS7s3pid7OjuSVWbeHoovILeLPU91ezs6+QKj3ELowmBSF3RshaB3zvXlwUpRCvSJ\n5zGwf1O9kUS5EDelI9jj4Tc9/eis90gma9Zxr8axptsbErUvBreXb4EU9joLzd7r\nuuAPaCOqoCa7R4kILGbYHHvIoLBARi6ssXeWyoYnBUXFZzxVde1k0JeDzk747Gfk\nj/HanrVuK4Ba1U+GpItQAo8sXVhG8bB+VQqp3hfgIMjTt/iukgo=\n=fcIW\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a39f7336a3b493d46a4486c4c94fdca1b3151370",
          "sha": "a39f7336a3b493d46a4486c4c94fdca1b3151370",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a39f7336a3b493d46a4486c4c94fdca1b3151370"
        }
      ],
      "message": "gui: Add NAT-PMP network option",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-01-07T16:07:10Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-02-23T00:25:21Z"
      },
      "sha": "5a0185b6c9c838290103314916190a0330ed9a82"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMjhmOWJlODdhMGYzYzU5YTkxODRkNjAyZmU3OTQ3NTI2ZGY2YTk3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e28f9be87a0f3c59a9184d602fe7947526df6a97",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e28f9be87a0f3c59a9184d602fe7947526df6a97",
      "tree": {
        "sha": "a6c0a3195611144bdb6474caed1f8cdd8f728982",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a6c0a3195611144bdb6474caed1f8cdd8f728982"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree a6c0a3195611144bdb6474caed1f8cdd8f728982\nparent 5a0185b6c9c838290103314916190a0330ed9a82\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1582418015 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1610035630 +0200\n\nci: Add libnatpmp-dev package to some builds\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl/3Ma4ACgkQQQEIES5+\nqB+O0Q//ZrhhZ7/QDh2n7F7GuoC9vaLgMjhZQZUxkDFd82srWGT+U4Xr2+PQ91uJ\nbCQBCL57O+wGEvXPpNWvWtxhAdo/nD6b4WKnR59HY3VoPHUY7VPlaaNls5Oqq6I3\nglx1gRJoviTWTaRYJIlI0YmpUwy2Cv33QlxHxj8kxj5tiEtpWNnNnU/oEHbKh5pS\n6z+b8X+1CPR95NUStjn6pMpUUE56ymr1i/XKYuXJ2H2Cj1x1eWeWFgQapgDx2B5Y\nKCNl/l9Dacpn5zbxfiUTtUs50/yozeR9z/8rt+xxMa02/lP/pC1tddLFrl1rREMX\nfW8r++N7KrInj3nsOV/RxxRH3tG/oXw94QNEFBmfbc6zjpL00+MJLe5M2W/fEk4e\nxxEVPeVyVbyUI6zx4tkBMQckB23MDO/mn82RW/vd7dhHq9dNUQRhlSF4GZCEizCn\nSLxY+4X7vGMJKJIKQfMLgrj0CGK8FgBEtkSv1WkE8aEFofmZa2wqShZFmLWHjmW3\nGXeWLswTBZ9Xcd2WZUrTP+CTMlIh3C3Dj2jCfjkiFJghCjB3bi9A1QD+m4pKaJuO\nsZZAnRdZlL96kzkEIm5a5xdtC6wjyq9IQDuocI0jph7xpNyM/jg5wePuTi5Y8Oae\nVK6304mA+lLU/0LeW5/QH05v5zTThj5tiBxxQSdJkZsyzTHtn3w=\n=OcGq\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5a0185b6c9c838290103314916190a0330ed9a82",
          "sha": "5a0185b6c9c838290103314916190a0330ed9a82",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5a0185b6c9c838290103314916190a0330ed9a82"
        }
      ],
      "message": "ci: Add libnatpmp-dev package to some builds",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-01-07T16:07:10Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-02-23T00:33:35Z"
      },
      "sha": "e28f9be87a0f3c59a9184d602fe7947526df6a97"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZTc0OWQxMmRkYmFmNTkyZmJkYjY1ZDk4Y2EzNWEwZmY1NTY2OTky",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ae749d12ddbaf592fbdb65d98ca35a0ff5566992",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ae749d12ddbaf592fbdb65d98ca35a0ff5566992",
      "tree": {
        "sha": "9c26ef361bee1b59d7911f7ffcd072873a4cbeb1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9c26ef361bee1b59d7911f7ffcd072873a4cbeb1"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 9c26ef361bee1b59d7911f7ffcd072873a4cbeb1\nparent e28f9be87a0f3c59a9184d602fe7947526df6a97\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1582418110 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1610035630 +0200\n\ndoc: Add libnatpmp stuff\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl/3Ma4ACgkQQQEIES5+\nqB91NxAAoWzul7W8DZb5VOh5HqcI7hs7PHsZ+7MLbEvxyFBR7TiIDOMYCTXyY4rF\n4Irrv1nyFaLP3AbFWCHyXHECuiclOGcJGh14H+O9XcYqeaWPYGaMvnBm1P6+giSF\nPBC8lmtsPqaQId48aKyeeOugFJUvwHoskbCoYYhm8PvmDda4O1t94KqxJlsApDuX\nsV2y37DWmS8XHT5myWOs5d46YSEMdtpcpIEL52IS5Zk8VNAVHZ1R3E1Vjr3Qn62D\nRSR5+qDOMXQQ9vurigw8M6ydDhSJef0oYBWibxpbybz1WObMx0880/riqKGa2gj4\nC+Opm3blvoq4+GSShciGE2nzrgZfhUrVCHbbEzOt/qnBXtaJellIizkmyJh9gRWe\nj1x6MEfNYR6FNn6mbRLh7p7CkqWNJZvbHQamqXe5xdgJ+zMddjJIXTPRnRUNJBQT\nKU48Y4NlzeIjN+aX6v/MitHgfcxZ2xi31kUyliuzaNHvl8qsrZNxC5zs4Ejphnj+\nnWwDE/27/ZIXUvn47NweBFiafQKzXYwuVGuhbO092bw636I14f5g2eFydvXta15w\nNYFYJ2sovG4PqT1aN2IoMgVVTBDT46zxXTrdhczXxFbNeGmnpTb6gXiBc8DoD99I\nirXgL5Teu47zKctZnot47EElbO/ubOmxGBOxl86zOncScnRuFXI=\n=HBg6\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e28f9be87a0f3c59a9184d602fe7947526df6a97",
          "sha": "e28f9be87a0f3c59a9184d602fe7947526df6a97",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e28f9be87a0f3c59a9184d602fe7947526df6a97"
        }
      ],
      "message": "doc: Add libnatpmp stuff",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-01-07T16:07:10Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-02-23T00:35:10Z"
      },
      "sha": "ae749d12ddbaf592fbdb65d98ca35a0ff5566992"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMTkxZTIzYjhlN2YwZTE5ZmMwMzU5ODI1ZWI3Y2EwZDQ3OTY2ZmE5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "tree": {
        "sha": "bb2146f62a0f0659c60b844d388d5996f4f9f4e8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bb2146f62a0f0659c60b844d388d5996f4f9f4e8"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree bb2146f62a0f0659c60b844d388d5996f4f9f4e8\nparent ae749d12ddbaf592fbdb65d98ca35a0ff5566992\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1582418180 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1610035631 +0200\n\ndoc: Add release notes\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl/3Ma8ACgkQQQEIES5+\nqB8Tag/9HlKQ1q6cdxyMYY001J/E8EEQAQoo2l/oj8Bj+SH8LU1py/TTKmvIZK2z\nIBURE+N26Z2kuLRe+gyV2Hr9VURgIRlEDjDXKVe4FWOd0AbMPxy+AEuo7L6lnpOD\nxk1ZDzBrS2Mi6BF+DPHzM1v6uKc7HA644UgYTOsv1y3KplDZfVA88esI613eKCTB\nglMwE2y7gPs8qPEy/7nXY9rOs0vRXCwfzjDX5ukhKD1IeJvTz4SWv/0Us5zAixIF\nW552ZzuJfbb9NKSP5vt56nvLpH/chiTBGenMLwNEzgle2SLtQ1rhy//wBk2KaIj7\n2SeWZTCYHNlCQLC/S6jMjmJmlVpjYY/OmbITarYSLtSzzO/Wp6xL0m0No+kNYG6N\ntHHW81UFm4CXp+DmQPTtpjCWFCC59QpWQJstfC7ZYU/YG0EdBevDyR0beGDcFe/Y\npztO3Gi6pLW5wH7EG2oJrCeEl+jHJbTct5DrDHJKPP8PyUS2uGPRfqNt4Pv8ahzg\nEFa5Bc2R5rZZwGB6L38vbsgzPUk7XqnFUCqV75TTnRZIKioj2xGYeovn4XhnDdMN\nTbIZDNRkPMQwLAue6Mn7upIqa6KX5JKvs9kCVM91r+cvzQxGZcMHl4cGg6JugOeV\nceOEZQjXuzwmHNUmUssGeSFf1Twe72NEwil5HhsOc/H1/CJGBBo=\n=g9t3\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ae749d12ddbaf592fbdb65d98ca35a0ff5566992",
          "sha": "ae749d12ddbaf592fbdb65d98ca35a0ff5566992",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ae749d12ddbaf592fbdb65d98ca35a0ff5566992"
        }
      ],
      "message": "doc: Add release notes",
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-01-07T16:07:11Z"
      },
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-02-23T00:36:20Z"
      },
      "sha": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4180636632,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDE4MDYzNjYzMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4180636632",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-07T16:23:09Z"
    },
    {
      "event": "commented",
      "id": 756222455,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc1NjIyMjQ1NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/756222455",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-07T16:25:47Z",
      "updated_at": "2021-01-07T16:25:47Z",
      "author_association": "MEMBER",
      "body": "Rebased 890e59c64d62fd39778ede620a70fe6bc60d9993 -> a191e23b8e7f0e19fc0359825eb7ca0d47966fa9 ([pr18077.48](https://github.com/hebasto/bitcoin/commits/pr18077.48) -> [pr18077.49](https://github.com/hebasto/bitcoin/commits/pr18077.49)) due to the conflict with #20864.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-756222455",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "unlabeled",
      "id": 4180858699,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50NDE4MDg1ODY5OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4180858699",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-07T17:13:35Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 756303002,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc1NjMwMzAwMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/756303002",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-07T18:39:41Z",
      "updated_at": "2021-01-07T18:39:41Z",
      "author_association": "MEMBER",
      "body": "Tested and code review ACK a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-756303002",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18077"
    },
    {
      "event": "merged",
      "id": 4181196071,
      "node_id": "MDExOk1lcmdlZEV2ZW50NDE4MTE5NjA3MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4181196071",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "d7e2401c629be3db6ceef551ee0f74deb56c02d1",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d7e2401c629be3db6ceef551ee0f74deb56c02d1",
      "created_at": "2021-01-07T18:42:38Z"
    },
    {
      "event": "closed",
      "id": 4181196095,
      "node_id": "MDExOkNsb3NlZEV2ZW50NDE4MTE5NjA5NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4181196095",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-07T18:42:38Z"
    },
    {
      "event": "head_ref_deleted",
      "id": 4181206837,
      "node_id": "MDE5OkhlYWRSZWZEZWxldGVkRXZlbnQ0MTgxMjA2ODM3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4181206837",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-07T18:45:34Z"
    },
    {
      "event": "referenced",
      "id": 4181998279,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQxODE5OTgyNzk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4181998279",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "8d8f45119e1a6cc10274c1c5a1849fa5e9d1573a",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/8d8f45119e1a6cc10274c1c5a1849fa5e9d1573a",
      "created_at": "2021-01-07T22:37:05Z"
    },
    {
      "event": "reviewed",
      "id": 571516086,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcxNTE2MDg2",
      "url": null,
      "actor": null,
      "commit_id": "58e8364dcdc4e57b0caac09f8402e6535301de9b",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#pullrequestreview-571516086",
      "submitted_at": "2021-01-19T18:09:44Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "Fuzzbawls",
        "id": 7393257,
        "node_id": "MDQ6VXNlcjczOTMyNTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7393257?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fuzzbawls",
        "html_url": "https://github.com/Fuzzbawls",
        "followers_url": "https://api.github.com/users/Fuzzbawls/followers",
        "following_url": "https://api.github.com/users/Fuzzbawls/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Fuzzbawls/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Fuzzbawls/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Fuzzbawls/subscriptions",
        "organizations_url": "https://api.github.com/users/Fuzzbawls/orgs",
        "repos_url": "https://api.github.com/users/Fuzzbawls/repos",
        "events_url": "https://api.github.com/users/Fuzzbawls/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Fuzzbawls/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-24T04:22:59Z",
      "updated_at": "2021-04-24T04:22:59Z",
      "source": {
        "issue": {
          "id": 866594567,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NjIyNDYyNDky",
          "url": "https://api.github.com/repos/PIVX-Project/PIVX/issues/2338",
          "repository_url": "https://api.github.com/repos/PIVX-Project/PIVX",
          "labels_url": "https://api.github.com/repos/PIVX-Project/PIVX/issues/2338/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/PIVX-Project/PIVX/issues/2338/comments",
          "events_url": "https://api.github.com/repos/PIVX-Project/PIVX/issues/2338/events",
          "html_url": "https://github.com/PIVX-Project/PIVX/pull/2338",
          "number": 2338,
          "state": "closed",
          "state_reason": null,
          "title": "[Net] Add NAT-PMP port forwarding support",
          "body": "Built on top of #2330, this backports https://github.com/bitcoin/bitcoin/pull/18077 and https://github.com/bitcoin/bitcoin/pull/21209 to add NAT-PMP port forwarding support, which can function along side of or instead of UPnP.\r\n\r\nSimilar to how UPnP is treated, NAT-PMP support will be compiled in if the library is found, but the functionality is disabled by default unless passing `--enable-natpmp-default` to `configure`, or by using the `-natpmp` command line option at startup.\r\n\r\nA checkbox has also been added to the settings area of the GUI that allows for on-the-fly enabling/disabling of the port mapping features when saving the settings.\r\n\r\n- [x] #2330 to be merged first.",
          "user": {
            "login": "Fuzzbawls",
            "id": 7393257,
            "node_id": "MDQ6VXNlcjczOTMyNTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7393257?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Fuzzbawls",
            "html_url": "https://github.com/Fuzzbawls",
            "followers_url": "https://api.github.com/users/Fuzzbawls/followers",
            "following_url": "https://api.github.com/users/Fuzzbawls/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Fuzzbawls/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Fuzzbawls/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Fuzzbawls/subscriptions",
            "organizations_url": "https://api.github.com/users/Fuzzbawls/orgs",
            "repos_url": "https://api.github.com/users/Fuzzbawls/repos",
            "events_url": "https://api.github.com/users/Fuzzbawls/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Fuzzbawls/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 560926919,
              "node_id": "MDU6TGFiZWw1NjA5MjY5MTk=",
              "url": "https://api.github.com/repos/PIVX-Project/PIVX/labels/Build%20System",
              "name": "Build System",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 566256651,
              "node_id": "MDU6TGFiZWw1NjYyNTY2NTE=",
              "url": "https://api.github.com/repos/PIVX-Project/PIVX/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 566257187,
              "node_id": "MDU6TGFiZWw1NjYyNTcxODc=",
              "url": "https://api.github.com/repos/PIVX-Project/PIVX/labels/Upstream",
              "name": "Upstream",
              "color": "bfd4f2",
              "default": false
            },
            {
              "id": 816679263,
              "node_id": "MDU6TGFiZWw4MTY2NzkyNjM=",
              "url": "https://api.github.com/repos/PIVX-Project/PIVX/labels/Network",
              "name": "Network",
              "color": "f9d0c4",
              "default": false
            }
          ],
          "assignee": {
            "login": "Fuzzbawls",
            "id": 7393257,
            "node_id": "MDQ6VXNlcjczOTMyNTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7393257?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Fuzzbawls",
            "html_url": "https://github.com/Fuzzbawls",
            "followers_url": "https://api.github.com/users/Fuzzbawls/followers",
            "following_url": "https://api.github.com/users/Fuzzbawls/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Fuzzbawls/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Fuzzbawls/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Fuzzbawls/subscriptions",
            "organizations_url": "https://api.github.com/users/Fuzzbawls/orgs",
            "repos_url": "https://api.github.com/users/Fuzzbawls/repos",
            "events_url": "https://api.github.com/users/Fuzzbawls/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Fuzzbawls/received_events",
            "type": "User",
            "site_admin": false
          },
          "assignees": [
            {
              "login": "Fuzzbawls",
              "id": 7393257,
              "node_id": "MDQ6VXNlcjczOTMyNTc=",
              "avatar_url": "https://avatars.githubusercontent.com/u/7393257?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/Fuzzbawls",
              "html_url": "https://github.com/Fuzzbawls",
              "followers_url": "https://api.github.com/users/Fuzzbawls/followers",
              "following_url": "https://api.github.com/users/Fuzzbawls/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/Fuzzbawls/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/Fuzzbawls/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/Fuzzbawls/subscriptions",
              "organizations_url": "https://api.github.com/users/Fuzzbawls/orgs",
              "repos_url": "https://api.github.com/users/Fuzzbawls/repos",
              "events_url": "https://api.github.com/users/Fuzzbawls/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/Fuzzbawls/received_events",
              "type": "User",
              "site_admin": false
            }
          ],
          "author_association": "COLLABORATOR",
          "milestone": {
            "url": "https://api.github.com/repos/PIVX-Project/PIVX/milestones/32",
            "html_url": "https://github.com/PIVX-Project/PIVX/milestone/32",
            "labels_url": "https://api.github.com/repos/PIVX-Project/PIVX/milestones/32/labels",
            "id": 6590958,
            "node_id": "MDk6TWlsZXN0b25lNjU5MDk1OA==",
            "number": 32,
            "state": "closed",
            "title": "5.3.0",
            "description": "",
            "creator": {
              "login": "random-zebra",
              "id": 18186894,
              "node_id": "MDQ6VXNlcjE4MTg2ODk0",
              "avatar_url": "https://avatars.githubusercontent.com/u/18186894?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/random-zebra",
              "html_url": "https://github.com/random-zebra",
              "followers_url": "https://api.github.com/users/random-zebra/followers",
              "following_url": "https://api.github.com/users/random-zebra/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/random-zebra/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/random-zebra/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/random-zebra/subscriptions",
              "organizations_url": "https://api.github.com/users/random-zebra/orgs",
              "repos_url": "https://api.github.com/users/random-zebra/repos",
              "events_url": "https://api.github.com/users/random-zebra/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/random-zebra/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 187,
            "created_at": "2021-03-25T15:12:45Z",
            "updated_at": "2021-08-30T19:28:54Z",
            "closed_at": "2021-08-30T19:28:54Z",
            "due_on": "2021-08-15T07:00:00Z"
          },
          "locked": false,
          "comments": 3,
          "pull_request": {
            "url": "https://api.github.com/repos/PIVX-Project/PIVX/pulls/2338",
            "html_url": "https://github.com/PIVX-Project/PIVX/pull/2338",
            "diff_url": "https://github.com/PIVX-Project/PIVX/pull/2338.diff",
            "patch_url": "https://github.com/PIVX-Project/PIVX/pull/2338.patch"
          },
          "closed_at": "2021-06-24T08:47:19Z",
          "created_at": "2021-04-24T04:22:59Z",
          "updated_at": "2021-07-25T22:54:29Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 4933214640,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ5MzMyMTQ2NDA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4933214640",
      "actor": {
        "login": "random-zebra",
        "id": 18186894,
        "node_id": "MDQ6VXNlcjE4MTg2ODk0",
        "avatar_url": "https://avatars.githubusercontent.com/u/18186894?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/random-zebra",
        "html_url": "https://github.com/random-zebra",
        "followers_url": "https://api.github.com/users/random-zebra/followers",
        "following_url": "https://api.github.com/users/random-zebra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/random-zebra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/random-zebra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/random-zebra/subscriptions",
        "organizations_url": "https://api.github.com/users/random-zebra/orgs",
        "repos_url": "https://api.github.com/users/random-zebra/repos",
        "events_url": "https://api.github.com/users/random-zebra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/random-zebra/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "fce12cf6c357d8284ee913cceb02c04567772ab3",
      "commit_url": "https://api.github.com/repos/PIVX-Project/PIVX/commits/fce12cf6c357d8284ee913cceb02c04567772ab3",
      "created_at": "2021-06-24T08:47:19Z"
    },
    {
      "event": "referenced",
      "id": 5004445417,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDUwMDQ0NDU0MTc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5004445417",
      "actor": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "fdfc18125509fcb9023e95d9da2f155fdd92f4cd",
      "commit_url": "https://api.github.com/repos/apoelstra/elements/commits/fdfc18125509fcb9023e95d9da2f155fdd92f4cd",
      "created_at": "2021-07-11T19:13:00Z"
    },
    {
      "event": "referenced",
      "id": 5004469232,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDUwMDQ0NjkyMzI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5004469232",
      "actor": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "8964d4c5e1daac7b2c6fcaf0d5858a0114dc1dc0",
      "commit_url": "https://api.github.com/repos/apoelstra/elements/commits/8964d4c5e1daac7b2c6fcaf0d5858a0114dc1dc0",
      "created_at": "2021-07-11T19:50:17Z"
    },
    {
      "event": "referenced",
      "id": 5004478126,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDUwMDQ0NzgxMjY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5004478126",
      "actor": {
        "login": "apoelstra",
        "id": 1351933,
        "node_id": "MDQ6VXNlcjEzNTE5MzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/apoelstra",
        "html_url": "https://github.com/apoelstra",
        "followers_url": "https://api.github.com/users/apoelstra/followers",
        "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
        "organizations_url": "https://api.github.com/users/apoelstra/orgs",
        "repos_url": "https://api.github.com/users/apoelstra/repos",
        "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/apoelstra/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "4f33ba757d0db7b1a3306535c774315238556e7c",
      "commit_url": "https://api.github.com/repos/apoelstra/elements/commits/4f33ba757d0db7b1a3306535c774315238556e7c",
      "created_at": "2021-07-11T20:02:39Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-06T00:06:45Z",
      "updated_at": "2021-08-06T00:06:45Z",
      "source": {
        "issue": {
          "id": 962283392,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NzA1MDk4NDQ2",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22644",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22644/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22644/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22644/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/22644",
          "number": 22644,
          "state": "open",
          "state_reason": null,
          "title": "build: deprecate UPnP support",
          "body": "#18077 introduced support for [NAT-PMP](https://github.com/miniupnp/libnatpmp), but didn't present any sort of deprecation plan for moving away from UPNP. This means we are supporting both. I don't think Bitcoin Core should be actively supporting two different mechanisms (and thus two different dependencies) to essentially achieve the same outcome (NAT traversal); especially given our history with miniupnpc.\r\n\r\nUsing UPPp by default has been disabled since [0.11.1](https://bitcoin.org/en/release/v0.11.1), which was released with an updated version of miniupnp, to fix a buffer overflow in its XML parsing. At the same time, using UPnP was disabled by default to prevent future vulnerabilities from potentially effecting the network at large. Note that even recent versions of miniupnpc contain (public) bugs that could be used to detrimentally effect a Bitcoin Core node.\r\n\r\nminiupnp - implementation of [UPnP](https://en.wikipedia.org/wiki/Universal_Plug_and_Play) (Universal Plug and Play)\r\n- NAT traversal implemented via [IGD](https://en.wikipedia.org/wiki/Internet_Gateway_Device_Protocol) (Internet Gateway Device Standardised Control Protocol)\r\n- Not only does UPnP in have many issues in general, IGD has some issues of it's own.\r\n\r\nlibnatpmp - implementation of [NAT-PMP](https://datatracker.ietf.org/doc/html/rfc6886) (alternative to IGD)\r\n- NAT traversal\r\n- Maintained by the same author as miniupnp.\r\n\r\nNAT-PMP has been succeeded by PCP ([Port Control Protocol](https://datatracker.ietf.org/doc/html/rfc6887)). However the two protocols share similar semantics, and thus, devices that implement PCP are interoperable with devices using NAT-PMP. See [NAT-PMP Transition](https://datatracker.ietf.org/doc/html/rfc6887#appendix-A).\r\n\r\nIt's an unfortunate combination of how distros work, and the upstream maintainership of libnatpmp, that most distros are using a version of the source released in 2015, which is missing a number of bug fixes and improvements, and they may actually be using an even earlier version of the source, unknowingly, due to tarball mis-naming (see #21209).",
          "user": {
            "login": "fanquake",
            "id": 863730,
            "node_id": "MDQ6VXNlcjg2MzczMA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fanquake",
            "html_url": "https://github.com/fanquake",
            "followers_url": "https://api.github.com/users/fanquake/followers",
            "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
            "organizations_url": "https://api.github.com/users/fanquake/orgs",
            "repos_url": "https://api.github.com/users/fanquake/repos",
            "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/fanquake/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 9,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22644",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/22644",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/22644.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/22644.patch"
          },
          "created_at": "2021-08-06T00:06:45Z",
          "updated_at": "2023-06-30T13:22:51Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 6145255587,
      "node_id": "REFE_lADOABII584hanvkzwAAAAFuSSij",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6145255587",
      "actor": {
        "login": "kwvg",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kwvg",
        "html_url": "https://github.com/kwvg",
        "followers_url": "https://api.github.com/users/kwvg/followers",
        "following_url": "https://api.github.com/users/kwvg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kwvg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kwvg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kwvg/subscriptions",
        "organizations_url": "https://api.github.com/users/kwvg/orgs",
        "repos_url": "https://api.github.com/users/kwvg/repos",
        "events_url": "https://api.github.com/users/kwvg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kwvg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "687c7d4a5d6849fe2fcf6e16ac3ae81b095c28dd",
      "commit_url": "https://api.github.com/repos/kwvg/dash/commits/687c7d4a5d6849fe2fcf6e16ac3ae81b095c28dd",
      "created_at": "2022-02-26T12:23:15Z"
    },
    {
      "event": "referenced",
      "id": 6189652381,
      "node_id": "REFE_lADOABII584hanvkzwAAAAFw7pmd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6189652381",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "47ad9ab1467505a41890be96595bb6429bfc7f80",
      "commit_url": "https://api.github.com/repos/dashpay/dash/commits/47ad9ab1467505a41890be96595bb6429bfc7f80",
      "created_at": "2022-03-05T17:03:47Z"
    },
    {
      "event": "referenced",
      "id": 6451183612,
      "node_id": "REFE_lADOABII584hanvkzwAAAAGAhT_8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6451183612",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "101ea8668cda880725fde67d7aa3328e200c93b8",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/101ea8668cda880725fde67d7aa3328e200c93b8",
      "created_at": "2022-04-19T00:56:00Z"
    },
    {
      "event": "referenced",
      "id": 6482531162,
      "node_id": "REFE_lADOABII584hanvkzwAAAAGCY5Na",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6482531162",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "236bede111cd84acdf8a81dcbd645283e33912dc",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/236bede111cd84acdf8a81dcbd645283e33912dc",
      "created_at": "2022-04-23T00:47:22Z"
    },
    {
      "event": "referenced",
      "id": 6535262205,
      "node_id": "REFE_lADOABII584hanvkzwAAAAGFiC_9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6535262205",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "d50e50ef671df705d91dfc2b5fd9e9f32765bb2c",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/d50e50ef671df705d91dfc2b5fd9e9f32765bb2c",
      "created_at": "2022-05-02T18:03:27Z"
    },
    {
      "event": "referenced",
      "id": 6618721190,
      "node_id": "REFE_lADOABII584hanvkzwAAAAGKgaum",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6618721190",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "4954e358089fa360c351bafa3b37f06e672b52d0",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/4954e358089fa360c351bafa3b37f06e672b52d0",
      "created_at": "2022-05-16T19:10:05Z"
    },
    {
      "event": "referenced",
      "id": 6620887821,
      "node_id": "REFE_lADOABII584hanvkzwAAAAGKorsN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6620887821",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "7962bbd4708cf6d5adfe0e4d8781c7299cedc39a",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/7962bbd4708cf6d5adfe0e4d8781c7299cedc39a",
      "created_at": "2022-05-17T03:55:02Z"
    },
    {
      "event": "referenced",
      "id": 6645062363,
      "node_id": "REFE_lADOABII584hanvkzwAAAAGME5rb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6645062363",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "dc43c4fc0135fd6a777de78396a9bb21f23f2b73",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/dc43c4fc0135fd6a777de78396a9bb21f23f2b73",
      "created_at": "2022-05-19T18:51:08Z"
    },
    {
      "event": "referenced",
      "id": 6645062735,
      "node_id": "REFE_lADOABII584hanvkzwAAAAGME5xP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6645062735",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "4848368071de04b2e1e8ceb2a0405a7cb6aa3978",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/4848368071de04b2e1e8ceb2a0405a7cb6aa3978",
      "created_at": "2022-05-19T18:51:11Z"
    },
    {
      "event": "referenced",
      "id": 6645529998,
      "node_id": "REFE_lADOABII584hanvkzwAAAAGMGr2O",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6645529998",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "29e371de75a5eedfa665c1841591245f1a812f60",
      "commit_url": "https://api.github.com/repos/ryanofsky/gui/commits/29e371de75a5eedfa665c1841591245f1a812f60",
      "created_at": "2022-05-19T20:04:22Z"
    },
    {
      "event": "referenced",
      "id": 6649410496,
      "node_id": "REFE_lADOABII584hanvkzwAAAAGMVfPA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6649410496",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "69ebadd5f3804510b0b1954de23efde42801a1aa",
      "commit_url": "https://api.github.com/repos/ryanofsky/gui/commits/69ebadd5f3804510b0b1954de23efde42801a1aa",
      "created_at": "2022-05-20T10:11:14Z"
    },
    {
      "event": "referenced",
      "id": 6649410713,
      "node_id": "REFE_lADOABII584hanvkzwAAAAGMVfSZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6649410713",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "da33f2d8feebaf4f4a0e4b33f23249c5b9584d37",
      "commit_url": "https://api.github.com/repos/ryanofsky/gui/commits/da33f2d8feebaf4f4a0e4b33f23249c5b9584d37",
      "created_at": "2022-05-20T10:11:16Z"
    },
    {
      "event": "referenced",
      "id": 6652616267,
      "node_id": "REFE_lADOABII584hanvkzwAAAAGMht5L",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6652616267",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "fc30d78f105661d2f7586debb6a2918f4e18e907",
      "commit_url": "https://api.github.com/repos/ryanofsky/gui/commits/fc30d78f105661d2f7586debb6a2918f4e18e907",
      "created_at": "2022-05-20T18:06:28Z"
    },
    {
      "event": "referenced",
      "id": 6652616362,
      "node_id": "REFE_lADOABII584hanvkzwAAAAGMht6q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6652616362",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "56590dc8f08300df838ce8107e5db0626c41c994",
      "commit_url": "https://api.github.com/repos/ryanofsky/gui/commits/56590dc8f08300df838ce8107e5db0626c41c994",
      "created_at": "2022-05-20T18:06:29Z"
    },
    {
      "event": "referenced",
      "id": 6663535794,
      "node_id": "REFE_lADOABII584hanvkzwAAAAGNLXyy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6663535794",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "1821316f8fe5e04fe428ff50438fa1c6bfad668b",
      "commit_url": "https://api.github.com/repos/ryanofsky/gui/commits/1821316f8fe5e04fe428ff50438fa1c6bfad668b",
      "created_at": "2022-05-23T19:05:35Z"
    },
    {
      "event": "referenced",
      "id": 6663535948,
      "node_id": "REFE_lADOABII584hanvkzwAAAAGNLX1M",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6663535948",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "f299e1210465ec594f79ebfbf565312beb75c683",
      "commit_url": "https://api.github.com/repos/ryanofsky/gui/commits/f299e1210465ec594f79ebfbf565312beb75c683",
      "created_at": "2022-05-23T19:05:37Z"
    },
    {
      "event": "referenced",
      "id": 6686489689,
      "node_id": "REFE_lADOABII584hanvkzwAAAAGOi7xZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6686489689",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "f854ab8ee0520e7301ed3af2049630c606efa1e7",
      "commit_url": "https://api.github.com/repos/ryanofsky/gui/commits/f854ab8ee0520e7301ed3af2049630c606efa1e7",
      "created_at": "2022-05-26T15:23:42Z"
    },
    {
      "event": "referenced",
      "id": 6686489976,
      "node_id": "REFE_lADOABII584hanvkzwAAAAGOi714",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6686489976",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "b2c8fc344fc4fd40b455a04de764d742f641a16b",
      "commit_url": "https://api.github.com/repos/ryanofsky/gui/commits/b2c8fc344fc4fd40b455a04de764d742f641a16b",
      "created_at": "2022-05-26T15:23:45Z"
    },
    {
      "event": "referenced",
      "id": 6712767748,
      "node_id": "REFE_lADOABII584hanvkzwAAAAGQHLUE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6712767748",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "383aee6ba243a13d2526db831ddc2e96619e3a6a",
      "commit_url": "https://api.github.com/repos/ryanofsky/gui/commits/383aee6ba243a13d2526db831ddc2e96619e3a6a",
      "created_at": "2022-05-31T20:00:53Z"
    },
    {
      "event": "referenced",
      "id": 6754195014,
      "node_id": "REFE_lADOABII584hanvkzwAAAAGSlNZG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6754195014",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "13ce75171892b9b24d9cef0e43a5ad1d9c21d14a",
      "commit_url": "https://api.github.com/repos/ryanofsky/gui/commits/13ce75171892b9b24d9cef0e43a5ad1d9c21d14a",
      "created_at": "2022-06-06T15:55:21Z"
    },
    {
      "event": "referenced",
      "id": 6780597958,
      "node_id": "REFE_lADOABII584hanvkzwAAAAGUJ7bG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6780597958",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "d2ada6e63583cad91e92b49c4dbf8c7ff086a758",
      "commit_url": "https://api.github.com/repos/ryanofsky/gui/commits/d2ada6e63583cad91e92b49c4dbf8c7ff086a758",
      "created_at": "2022-06-09T19:38:58Z"
    },
    {
      "event": "referenced",
      "id": 7125520849,
      "node_id": "REFE_lADOABII584hanvkzwAAAAGottHR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7125520849",
      "actor": {
        "login": "janus",
        "id": 6726,
        "node_id": "MDQ6VXNlcjY3MjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6726?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janus",
        "html_url": "https://github.com/janus",
        "followers_url": "https://api.github.com/users/janus/followers",
        "following_url": "https://api.github.com/users/janus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/janus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/janus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/janus/subscriptions",
        "organizations_url": "https://api.github.com/users/janus/orgs",
        "repos_url": "https://api.github.com/users/janus/repos",
        "events_url": "https://api.github.com/users/janus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/janus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "4e8d5017010c2d6a2549850d475e2d4418b319cf",
      "commit_url": "https://api.github.com/repos/BitgesellOfficial/bitgesell/commits/4e8d5017010c2d6a2549850d475e2d4418b319cf",
      "created_at": "2022-08-04T08:12:02Z"
    },
    {
      "event": "locked",
      "id": 7199065980,
      "node_id": "LOE_lADOABII584hanvkzwAAAAGtGQd8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7199065980",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-16T17:11:57Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375996088",
      "pull_request_review_id": 354660903,
      "id": 375996088,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk5NjA4OA==",
      "diff_hunk": "@@ -0,0 +1,221 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <mapport.h>\n+\n+#include <clientversion.h>\n+#include <logging.h>\n+#include <net.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <threadinterrupt.h>\n+#include <util/system.h>\n+\n+#ifdef WIN32\n+#include <winsock2.h>\n+#else\n+#include <arpa/inet.h>\n+#include <netinet/in.h>\n+#endif\n+\n+#ifdef USE_NATPMP\n+#include <natpmp.h>\n+#endif\n+#ifdef USE_UPNP\n+#include <miniupnpc/miniupnpc.h>\n+#include <miniupnpc/upnpcommands.h>\n+#include <miniupnpc/upnperrors.h>\n+// The minimum supported miniUPnPc API version is set to 10. This keeps compatibility\n+// with Ubuntu 16.04 LTS and Debian 8 libminiupnpc-dev packages.\n+static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\");\n+#endif\n+\n+#include <cassert>\n+#include <chrono>\n+#include <functional>\n+#include <string>\n+#include <thread>\n+\n+#if defined(USE_NATPMP) || defined(USE_UPNP)\n+static CThreadInterrupt g_upnp_interrupt;\n+static std::thread g_upnp_thread;\n+\n+#ifdef USE_NATPMP\n+static void ThreadMapPort()\n+{\n+    int r;\n+    natpmp_t natpmp;\n+    natpmpresp_t response;\n+\n+    r = initnatpmp(&natpmp, /* detect gateway automatically */ 0, /* forced gateway - NOT APPLIED*/ 0);\n+    if (r < 0) {\n+        LogPrintf(\"NAT-PMP: initnatpmp() failed with %d error.\\n\", r);\n+        closenatpmp(&natpmp);\n+        return;\n+    }\n+\n+    if (fDiscover) {\n+        r = sendpublicaddressrequest(&natpmp);\n+        if (r < 0) {\n+            LogPrintf(\"NAT-PMP: sendpublicaddressrequest() failed with %d error.\\n\", r);\n+        } else {\n+            do {\n+                r = readnatpmpresponseorretry(&natpmp, &response);\n+            } while (r == NATPMP_TRYAGAIN);\n+            if (r < 0 || response.type != NATPMP_RESPTYPE_PUBLICADDRESS) {\n+                LogPrintf(\"NAT-PMP: readnatpmpresponseorretry() for public address failed with %d error.\\n\", r);\n+            } else {\n+                const char* public_address = inet_ntoa(response.pnu.publicaddress.addr);\n+                if (public_address[0]) {\n+                    CNetAddr resolved;\n+                    if (LookupHost(public_address, resolved, false)) {\n+                        LogPrintf(\"NAT-PMP: public address = %s\\n\", resolved.ToString());\n+                        AddLocal(resolved, LOCAL_UPNP);\n+                    }\n+                } else {\n+                    LogPrintf(\"NAT-PMP: sendpublicaddressrequest() failed.\\n\");\n+                }\n+            }\n+        }\n+    }\n+\n+    const uint16_t port = GetListenPort();\n+    do {\n+        r = sendnewportmappingrequest(&natpmp, NATPMP_PROTOCOL_TCP, port, port, 3600 /*seconds*/);\n+        if (r < 0) {\n+            LogPrintf(\"NAT-PMP: sendnewportmappingrequest() failed with %d error.\\n\", r);\n+            break;\n+        }\n+\n+        do {\n+            r = readnatpmpresponseorretry(&natpmp, &response);\n+        } while (r == NATPMP_TRYAGAIN);\n+        if (r < 0 || response.type != NATPMP_RESPTYPE_TCPPORTMAPPING) {\n+            LogPrintf(\"NAT-PMP: readnatpmpresponseorretry() for port mapping failed with %d error.\\n\", r);\n+        } else {\n+            auto pm = response.pnu.newportmapping;\n+            if (port == pm.privateport && port == pm.mappedpublicport && pm.lifetime > 0) {\n+                LogPrintf(\"NAT-PMP: port mapping successful.\\n\");\n+            } else {\n+                LogPrintf(\"NAT-PMP: sendnewportmappingrequest() failed.\\n\");\n+            }\n+        }\n+\n+    } while (g_upnp_interrupt.sleep_for(std::chrono::minutes(20)));\n+\n+    r = sendnewportmappingrequest(&natpmp, NATPMP_PROTOCOL_TCP, port, port, /* remove a port mapping */ 0);\n+    if (r < 0) {\n+        LogPrintf(\"NAT-PMP: sendnewportmappingrequest(0) failed with %d error.\\n\", r);\n+    }\n+\n+    closenatpmp(&natpmp);\n+}\n+\n+#else // USE_UPNP",
      "path": "src/mapport.cpp",
      "position": null,
      "original_position": 119,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "60e2524c8aa0edf5ce09d842cec09065cb854bcd",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This will break building with both NAT-PMP and UPnP support...",
      "created_at": "2020-02-06T18:06:53Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r375996088",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375996088"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 119,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375999662",
      "pull_request_review_id": 354665487,
      "id": 375999662,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk5OTY2Mg==",
      "diff_hunk": "@@ -0,0 +1,221 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <mapport.h>\n+\n+#include <clientversion.h>\n+#include <logging.h>\n+#include <net.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <threadinterrupt.h>\n+#include <util/system.h>\n+\n+#ifdef WIN32\n+#include <winsock2.h>\n+#else\n+#include <arpa/inet.h>\n+#include <netinet/in.h>\n+#endif\n+\n+#ifdef USE_NATPMP\n+#include <natpmp.h>\n+#endif\n+#ifdef USE_UPNP\n+#include <miniupnpc/miniupnpc.h>\n+#include <miniupnpc/upnpcommands.h>\n+#include <miniupnpc/upnperrors.h>\n+// The minimum supported miniUPnPc API version is set to 10. This keeps compatibility\n+// with Ubuntu 16.04 LTS and Debian 8 libminiupnpc-dev packages.\n+static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\");\n+#endif\n+\n+#include <cassert>\n+#include <chrono>\n+#include <functional>\n+#include <string>\n+#include <thread>\n+\n+#if defined(USE_NATPMP) || defined(USE_UPNP)\n+static CThreadInterrupt g_upnp_interrupt;\n+static std::thread g_upnp_thread;\n+\n+#ifdef USE_NATPMP\n+static void ThreadMapPort()\n+{\n+    int r;\n+    natpmp_t natpmp;\n+    natpmpresp_t response;\n+\n+    r = initnatpmp(&natpmp, /* detect gateway automatically */ 0, /* forced gateway - NOT APPLIED*/ 0);\n+    if (r < 0) {\n+        LogPrintf(\"NAT-PMP: initnatpmp() failed with %d error.\\n\", r);\n+        closenatpmp(&natpmp);\n+        return;\n+    }\n+\n+    if (fDiscover) {\n+        r = sendpublicaddressrequest(&natpmp);\n+        if (r < 0) {\n+            LogPrintf(\"NAT-PMP: sendpublicaddressrequest() failed with %d error.\\n\", r);\n+        } else {\n+            do {\n+                r = readnatpmpresponseorretry(&natpmp, &response);\n+            } while (r == NATPMP_TRYAGAIN);\n+            if (r < 0 || response.type != NATPMP_RESPTYPE_PUBLICADDRESS) {\n+                LogPrintf(\"NAT-PMP: readnatpmpresponseorretry() for public address failed with %d error.\\n\", r);\n+            } else {\n+                const char* public_address = inet_ntoa(response.pnu.publicaddress.addr);\n+                if (public_address[0]) {\n+                    CNetAddr resolved;\n+                    if (LookupHost(public_address, resolved, false)) {\n+                        LogPrintf(\"NAT-PMP: public address = %s\\n\", resolved.ToString());\n+                        AddLocal(resolved, LOCAL_UPNP);\n+                    }\n+                } else {\n+                    LogPrintf(\"NAT-PMP: sendpublicaddressrequest() failed.\\n\");\n+                }\n+            }\n+        }\n+    }\n+\n+    const uint16_t port = GetListenPort();\n+    do {\n+        r = sendnewportmappingrequest(&natpmp, NATPMP_PROTOCOL_TCP, port, port, 3600 /*seconds*/);\n+        if (r < 0) {\n+            LogPrintf(\"NAT-PMP: sendnewportmappingrequest() failed with %d error.\\n\", r);\n+            break;\n+        }\n+\n+        do {\n+            r = readnatpmpresponseorretry(&natpmp, &response);\n+        } while (r == NATPMP_TRYAGAIN);\n+        if (r < 0 || response.type != NATPMP_RESPTYPE_TCPPORTMAPPING) {\n+            LogPrintf(\"NAT-PMP: readnatpmpresponseorretry() for port mapping failed with %d error.\\n\", r);\n+        } else {\n+            auto pm = response.pnu.newportmapping;\n+            if (port == pm.privateport && port == pm.mappedpublicport && pm.lifetime > 0) {\n+                LogPrintf(\"NAT-PMP: port mapping successful.\\n\");\n+            } else {\n+                LogPrintf(\"NAT-PMP: sendnewportmappingrequest() failed.\\n\");\n+            }\n+        }\n+\n+    } while (g_upnp_interrupt.sleep_for(std::chrono::minutes(20)));\n+\n+    r = sendnewportmappingrequest(&natpmp, NATPMP_PROTOCOL_TCP, port, port, /* remove a port mapping */ 0);\n+    if (r < 0) {\n+        LogPrintf(\"NAT-PMP: sendnewportmappingrequest(0) failed with %d error.\\n\", r);\n+    }\n+\n+    closenatpmp(&natpmp);\n+}\n+\n+#else // USE_UPNP",
      "path": "src/mapport.cpp",
      "position": null,
      "original_position": 119,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "60e2524c8aa0edf5ce09d842cec09065cb854bcd",
      "in_reply_to_id": 375996088,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> This will break building with both NAT-PMP and UPnP support...\r\n\r\nYes, I'm aware of that. This PR in its current state is intended for NAT-PMP functionality tests and concept (N)ACKs.",
      "created_at": "2020-02-06T18:14:29Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r375999662",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375999662"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 119,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378006285",
      "pull_request_review_id": 357148016,
      "id": 378006285,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODAwNjI4NQ==",
      "diff_hunk": "@@ -0,0 +1,236 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <mapport.h>\n+\n+#include <clientversion.h>\n+#include <logging.h>\n+#include <net.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <threadinterrupt.h>\n+#include <util/system.h>\n+\n+#ifdef USE_NATPMP\n+#include <natpmp.h>\n+#ifdef WIN32\n+#include <winsock2.h>\n+#else\n+#include <arpa/inet.h>\n+#include <netinet/in.h>\n+#endif // #ifdef WIN32\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+#include <miniupnpc/miniupnpc.h>\n+#include <miniupnpc/upnpcommands.h>\n+#include <miniupnpc/upnperrors.h>\n+// The minimum supported miniUPnPc API version is set to 10. This keeps compatibility\n+// with Ubuntu 16.04 LTS and Debian 8 libminiupnpc-dev packages.\n+static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\");\n+#endif // #ifdef USE_UPNP\n+\n+#include <cassert>\n+#include <chrono>\n+#include <functional>\n+#include <string>\n+#include <thread>\n+\n+#if defined(USE_NATPMP) || defined(USE_UPNP)\n+static CThreadInterrupt g_mapport_interrupt;\n+static std::thread g_mapport_thread;\n+\n+#ifdef USE_NATPMP\n+static void ThreadNatpmp()\n+{\n+    int r;\n+    natpmp_t natpmp;\n+    natpmpresp_t response;\n+\n+    r = initnatpmp(&natpmp, /* detect gateway automatically */ 0, /* forced gateway - NOT APPLIED*/ 0);\n+    if (r < 0) {\n+        LogPrintf(\"NAT-PMP: initnatpmp() failed with %d error.\\n\", r);\n+        closenatpmp(&natpmp);\n+        return;\n+    }\n+\n+    if (fDiscover) {\n+        r = sendpublicaddressrequest(&natpmp);\n+        if (r < 0) {\n+            LogPrintf(\"NAT-PMP: sendpublicaddressrequest() failed with %d error.\\n\", r);\n+        } else {\n+            do {\n+                r = readnatpmpresponseorretry(&natpmp, &response);\n+            } while (r == NATPMP_TRYAGAIN);\n+            if (r < 0 || response.type != NATPMP_RESPTYPE_PUBLICADDRESS) {\n+                LogPrintf(\"NAT-PMP: readnatpmpresponseorretry() for public address failed with %d error.\\n\", r);\n+            } else {\n+                const char* public_address = inet_ntoa(response.pnu.publicaddress.addr);\n+                if (public_address[0]) {\n+                    CNetAddr resolved;\n+                    if (LookupHost(public_address, resolved, false)) {\n+                        LogPrintf(\"NAT-PMP: public address = %s\\n\", resolved.ToString());\n+                        AddLocal(resolved, LOCAL_MAPPED);\n+                    }\n+                } else {\n+                    LogPrintf(\"NAT-PMP: sendpublicaddressrequest() failed.\\n\");\n+                }\n+            }\n+        }\n+    }\n+\n+    const uint16_t port = GetListenPort();\n+    do {\n+        r = sendnewportmappingrequest(&natpmp, NATPMP_PROTOCOL_TCP, port, port, 3600 /*seconds*/);\n+        if (r < 0) {\n+            LogPrintf(\"NAT-PMP: sendnewportmappingrequest() failed with %d error.\\n\", r);\n+            break;\n+        }\n+\n+        do {\n+            r = readnatpmpresponseorretry(&natpmp, &response);\n+        } while (r == NATPMP_TRYAGAIN);\n+        if (r < 0 || response.type != NATPMP_RESPTYPE_TCPPORTMAPPING) {\n+            LogPrintf(\"NAT-PMP: readnatpmpresponseorretry() for port mapping failed with %d error.\\n\", r);\n+        } else {\n+            auto pm = response.pnu.newportmapping;\n+            if (port == pm.privateport && port == pm.mappedpublicport && pm.lifetime > 0) {\n+                LogPrintf(\"NAT-PMP: port mapping successful.\\n\");\n+            } else {\n+                LogPrintf(\"NAT-PMP: sendnewportmappingrequest() failed.\\n\");\n+            }\n+        }\n+\n+    } while (g_mapport_interrupt.sleep_for(std::chrono::minutes(20)));\n+\n+    r = sendnewportmappingrequest(&natpmp, NATPMP_PROTOCOL_TCP, port, port, /* remove a port mapping */ 0);\n+    if (r < 0) {\n+        LogPrintf(\"NAT-PMP: sendnewportmappingrequest(0) failed with %d error.\\n\", r);\n+    }\n+\n+    closenatpmp(&natpmp);\n+}\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+static void ThreadUpnp()\n+{\n+    std::string port = strprintf(\"%u\", GetListenPort());\n+    const char * multicastif = nullptr;\n+    const char * minissdpdpath = nullptr;\n+    struct UPNPDev * devlist = nullptr;\n+    char lanaddr[64];\n+\n+    int error = 0;\n+#if MINIUPNPC_API_VERSION < 14\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, &error);\n+#else\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, 2, &error);\n+#endif\n+\n+    struct UPNPUrls urls;\n+    struct IGDdatas data;\n+    int r;\n+\n+    r = UPNP_GetValidIGD(devlist, &urls, &data, lanaddr, sizeof(lanaddr));\n+    if (r == 1)\n+    {\n+        if (fDiscover) {\n+            char externalIPAddress[40];\n+            r = UPNP_GetExternalIPAddress(urls.controlURL, data.first.servicetype, externalIPAddress);\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                LogPrintf(\"UPnP: GetExternalIPAddress() returned %d\\n\", r);\n+            } else {\n+                if (externalIPAddress[0]) {\n+                    CNetAddr resolved;\n+                    if (LookupHost(externalIPAddress, resolved, false)) {\n+                        LogPrintf(\"UPnP: ExternalIPAddress = %s\\n\", resolved.ToString());\n+                        AddLocal(resolved, LOCAL_MAPPED);\n+                    }\n+                } else {\n+                    LogPrintf(\"UPnP: GetExternalIPAddress failed.\\n\");\n+                }\n+            }\n+        }\n+\n+        std::string strDesc = PACKAGE_NAME \" \" + FormatFullVersion();\n+\n+        do {\n+            r = UPNP_AddPortMapping(urls.controlURL, data.first.servicetype, port.c_str(), port.c_str(), lanaddr, strDesc.c_str(), \"TCP\", 0, \"0\");\n+\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                LogPrintf(\"AddPortMapping(%s, %s, %s) failed with code %d (%s)\\n\", port, port, lanaddr, r, strupnperror(r));\n+            } else {\n+                LogPrintf(\"UPnP Port Mapping successful.\\n\");\n+            }\n+        } while (g_mapport_interrupt.sleep_for(std::chrono::minutes(20)));\n+\n+        r = UPNP_DeletePortMapping(urls.controlURL, data.first.servicetype, port.c_str(), \"TCP\", 0);\n+        LogPrintf(\"UPNP_DeletePortMapping() returned: %d\\n\", r);\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        FreeUPNPUrls(&urls);\n+    } else {\n+        LogPrintf(\"No valid UPnP IGDs found\\n\");\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        if (r != 0)\n+            FreeUPNPUrls(&urls);\n+    }\n+}\n+#endif // #ifdef USE_UPNP\n+\n+void StartMapPort(MapPort proto)\n+{\n+    if (!g_mapport_thread.joinable()) {\n+        assert(!g_mapport_interrupt);\n+        switch (proto) {\n+        case MapPort::NAT_PMP: {\n+#ifdef USE_NATPMP\n+            g_mapport_thread = std::thread((std::bind(&TraceThread<void (*)()>, \"natpmp\", &ThreadNatpmp)));\n+#endif // #ifdef USE_NATPMP\n+            return;\n+        }\n+        case MapPort::UPNP: {\n+#ifdef USE_UPNP\n+            g_mapport_thread = std::thread((std::bind(&TraceThread<void (*)()>, \"upnp\", &ThreadUpnp)));",
      "path": "src/mapport.cpp",
      "position": null,
      "original_position": 199,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "c7e90ca40ad9b7c66f3429b792435e9279ceca6b",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Won't this overwrite the `g_mapport_thread` set above if both are enabled?",
      "created_at": "2020-02-12T02:12:13Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r378006285",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378006285"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 242,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378072197",
      "pull_request_review_id": 357227561,
      "id": 378072197,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA3MjE5Nw==",
      "diff_hunk": "@@ -0,0 +1,236 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <mapport.h>\n+\n+#include <clientversion.h>\n+#include <logging.h>\n+#include <net.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <threadinterrupt.h>\n+#include <util/system.h>\n+\n+#ifdef USE_NATPMP\n+#include <natpmp.h>\n+#ifdef WIN32\n+#include <winsock2.h>\n+#else\n+#include <arpa/inet.h>\n+#include <netinet/in.h>\n+#endif // #ifdef WIN32\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+#include <miniupnpc/miniupnpc.h>\n+#include <miniupnpc/upnpcommands.h>\n+#include <miniupnpc/upnperrors.h>\n+// The minimum supported miniUPnPc API version is set to 10. This keeps compatibility\n+// with Ubuntu 16.04 LTS and Debian 8 libminiupnpc-dev packages.\n+static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\");\n+#endif // #ifdef USE_UPNP\n+\n+#include <cassert>\n+#include <chrono>\n+#include <functional>\n+#include <string>\n+#include <thread>\n+\n+#if defined(USE_NATPMP) || defined(USE_UPNP)\n+static CThreadInterrupt g_mapport_interrupt;\n+static std::thread g_mapport_thread;\n+\n+#ifdef USE_NATPMP\n+static void ThreadNatpmp()\n+{\n+    int r;\n+    natpmp_t natpmp;\n+    natpmpresp_t response;\n+\n+    r = initnatpmp(&natpmp, /* detect gateway automatically */ 0, /* forced gateway - NOT APPLIED*/ 0);\n+    if (r < 0) {\n+        LogPrintf(\"NAT-PMP: initnatpmp() failed with %d error.\\n\", r);\n+        closenatpmp(&natpmp);\n+        return;\n+    }\n+\n+    if (fDiscover) {\n+        r = sendpublicaddressrequest(&natpmp);\n+        if (r < 0) {\n+            LogPrintf(\"NAT-PMP: sendpublicaddressrequest() failed with %d error.\\n\", r);\n+        } else {\n+            do {\n+                r = readnatpmpresponseorretry(&natpmp, &response);\n+            } while (r == NATPMP_TRYAGAIN);\n+            if (r < 0 || response.type != NATPMP_RESPTYPE_PUBLICADDRESS) {\n+                LogPrintf(\"NAT-PMP: readnatpmpresponseorretry() for public address failed with %d error.\\n\", r);\n+            } else {\n+                const char* public_address = inet_ntoa(response.pnu.publicaddress.addr);\n+                if (public_address[0]) {\n+                    CNetAddr resolved;\n+                    if (LookupHost(public_address, resolved, false)) {\n+                        LogPrintf(\"NAT-PMP: public address = %s\\n\", resolved.ToString());\n+                        AddLocal(resolved, LOCAL_MAPPED);\n+                    }\n+                } else {\n+                    LogPrintf(\"NAT-PMP: sendpublicaddressrequest() failed.\\n\");\n+                }\n+            }\n+        }\n+    }\n+\n+    const uint16_t port = GetListenPort();\n+    do {\n+        r = sendnewportmappingrequest(&natpmp, NATPMP_PROTOCOL_TCP, port, port, 3600 /*seconds*/);\n+        if (r < 0) {\n+            LogPrintf(\"NAT-PMP: sendnewportmappingrequest() failed with %d error.\\n\", r);\n+            break;\n+        }\n+\n+        do {\n+            r = readnatpmpresponseorretry(&natpmp, &response);\n+        } while (r == NATPMP_TRYAGAIN);\n+        if (r < 0 || response.type != NATPMP_RESPTYPE_TCPPORTMAPPING) {\n+            LogPrintf(\"NAT-PMP: readnatpmpresponseorretry() for port mapping failed with %d error.\\n\", r);\n+        } else {\n+            auto pm = response.pnu.newportmapping;\n+            if (port == pm.privateport && port == pm.mappedpublicport && pm.lifetime > 0) {\n+                LogPrintf(\"NAT-PMP: port mapping successful.\\n\");\n+            } else {\n+                LogPrintf(\"NAT-PMP: sendnewportmappingrequest() failed.\\n\");\n+            }\n+        }\n+\n+    } while (g_mapport_interrupt.sleep_for(std::chrono::minutes(20)));\n+\n+    r = sendnewportmappingrequest(&natpmp, NATPMP_PROTOCOL_TCP, port, port, /* remove a port mapping */ 0);\n+    if (r < 0) {\n+        LogPrintf(\"NAT-PMP: sendnewportmappingrequest(0) failed with %d error.\\n\", r);\n+    }\n+\n+    closenatpmp(&natpmp);\n+}\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+static void ThreadUpnp()\n+{\n+    std::string port = strprintf(\"%u\", GetListenPort());\n+    const char * multicastif = nullptr;\n+    const char * minissdpdpath = nullptr;\n+    struct UPNPDev * devlist = nullptr;\n+    char lanaddr[64];\n+\n+    int error = 0;\n+#if MINIUPNPC_API_VERSION < 14\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, &error);\n+#else\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, 2, &error);\n+#endif\n+\n+    struct UPNPUrls urls;\n+    struct IGDdatas data;\n+    int r;\n+\n+    r = UPNP_GetValidIGD(devlist, &urls, &data, lanaddr, sizeof(lanaddr));\n+    if (r == 1)\n+    {\n+        if (fDiscover) {\n+            char externalIPAddress[40];\n+            r = UPNP_GetExternalIPAddress(urls.controlURL, data.first.servicetype, externalIPAddress);\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                LogPrintf(\"UPnP: GetExternalIPAddress() returned %d\\n\", r);\n+            } else {\n+                if (externalIPAddress[0]) {\n+                    CNetAddr resolved;\n+                    if (LookupHost(externalIPAddress, resolved, false)) {\n+                        LogPrintf(\"UPnP: ExternalIPAddress = %s\\n\", resolved.ToString());\n+                        AddLocal(resolved, LOCAL_MAPPED);\n+                    }\n+                } else {\n+                    LogPrintf(\"UPnP: GetExternalIPAddress failed.\\n\");\n+                }\n+            }\n+        }\n+\n+        std::string strDesc = PACKAGE_NAME \" \" + FormatFullVersion();\n+\n+        do {\n+            r = UPNP_AddPortMapping(urls.controlURL, data.first.servicetype, port.c_str(), port.c_str(), lanaddr, strDesc.c_str(), \"TCP\", 0, \"0\");\n+\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                LogPrintf(\"AddPortMapping(%s, %s, %s) failed with code %d (%s)\\n\", port, port, lanaddr, r, strupnperror(r));\n+            } else {\n+                LogPrintf(\"UPnP Port Mapping successful.\\n\");\n+            }\n+        } while (g_mapport_interrupt.sleep_for(std::chrono::minutes(20)));\n+\n+        r = UPNP_DeletePortMapping(urls.controlURL, data.first.servicetype, port.c_str(), \"TCP\", 0);\n+        LogPrintf(\"UPNP_DeletePortMapping() returned: %d\\n\", r);\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        FreeUPNPUrls(&urls);\n+    } else {\n+        LogPrintf(\"No valid UPnP IGDs found\\n\");\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        if (r != 0)\n+            FreeUPNPUrls(&urls);\n+    }\n+}\n+#endif // #ifdef USE_UPNP\n+\n+void StartMapPort(MapPort proto)\n+{\n+    if (!g_mapport_thread.joinable()) {\n+        assert(!g_mapport_interrupt);\n+        switch (proto) {\n+        case MapPort::NAT_PMP: {\n+#ifdef USE_NATPMP\n+            g_mapport_thread = std::thread((std::bind(&TraceThread<void (*)()>, \"natpmp\", &ThreadNatpmp)));\n+#endif // #ifdef USE_NATPMP\n+            return;\n+        }\n+        case MapPort::UPNP: {\n+#ifdef USE_UPNP\n+            g_mapport_thread = std::thread((std::bind(&TraceThread<void (*)()>, \"upnp\", &ThreadUpnp)));",
      "path": "src/mapport.cpp",
      "position": null,
      "original_position": 199,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "c7e90ca40ad9b7c66f3429b792435e9279ceca6b",
      "in_reply_to_id": 378006285,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I believe that the both port mapping protocols shouldn't be enabled simultaneously:\r\nhttps://github.com/bitcoin/bitcoin/blob/c7e90ca40ad9b7c66f3429b792435e9279ceca6b/src/init.cpp#L1781-L1786",
      "created_at": "2020-02-12T07:10:35Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r378072197",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378072197"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 242,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378210260",
      "pull_request_review_id": 357399634,
      "id": 378210260,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODIxMDI2MA==",
      "diff_hunk": "@@ -0,0 +1,236 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <mapport.h>\n+\n+#include <clientversion.h>\n+#include <logging.h>\n+#include <net.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <threadinterrupt.h>\n+#include <util/system.h>\n+\n+#ifdef USE_NATPMP\n+#include <natpmp.h>\n+#ifdef WIN32\n+#include <winsock2.h>\n+#else\n+#include <arpa/inet.h>\n+#include <netinet/in.h>\n+#endif // #ifdef WIN32\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+#include <miniupnpc/miniupnpc.h>\n+#include <miniupnpc/upnpcommands.h>\n+#include <miniupnpc/upnperrors.h>\n+// The minimum supported miniUPnPc API version is set to 10. This keeps compatibility\n+// with Ubuntu 16.04 LTS and Debian 8 libminiupnpc-dev packages.\n+static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\");\n+#endif // #ifdef USE_UPNP\n+\n+#include <cassert>\n+#include <chrono>\n+#include <functional>\n+#include <string>\n+#include <thread>\n+\n+#if defined(USE_NATPMP) || defined(USE_UPNP)\n+static CThreadInterrupt g_mapport_interrupt;\n+static std::thread g_mapport_thread;\n+\n+#ifdef USE_NATPMP\n+static void ThreadNatpmp()\n+{\n+    int r;\n+    natpmp_t natpmp;\n+    natpmpresp_t response;\n+\n+    r = initnatpmp(&natpmp, /* detect gateway automatically */ 0, /* forced gateway - NOT APPLIED*/ 0);\n+    if (r < 0) {\n+        LogPrintf(\"NAT-PMP: initnatpmp() failed with %d error.\\n\", r);\n+        closenatpmp(&natpmp);\n+        return;\n+    }\n+\n+    if (fDiscover) {\n+        r = sendpublicaddressrequest(&natpmp);\n+        if (r < 0) {\n+            LogPrintf(\"NAT-PMP: sendpublicaddressrequest() failed with %d error.\\n\", r);\n+        } else {\n+            do {\n+                r = readnatpmpresponseorretry(&natpmp, &response);\n+            } while (r == NATPMP_TRYAGAIN);\n+            if (r < 0 || response.type != NATPMP_RESPTYPE_PUBLICADDRESS) {\n+                LogPrintf(\"NAT-PMP: readnatpmpresponseorretry() for public address failed with %d error.\\n\", r);\n+            } else {\n+                const char* public_address = inet_ntoa(response.pnu.publicaddress.addr);\n+                if (public_address[0]) {\n+                    CNetAddr resolved;\n+                    if (LookupHost(public_address, resolved, false)) {\n+                        LogPrintf(\"NAT-PMP: public address = %s\\n\", resolved.ToString());\n+                        AddLocal(resolved, LOCAL_MAPPED);\n+                    }\n+                } else {\n+                    LogPrintf(\"NAT-PMP: sendpublicaddressrequest() failed.\\n\");\n+                }\n+            }\n+        }\n+    }\n+\n+    const uint16_t port = GetListenPort();\n+    do {\n+        r = sendnewportmappingrequest(&natpmp, NATPMP_PROTOCOL_TCP, port, port, 3600 /*seconds*/);\n+        if (r < 0) {\n+            LogPrintf(\"NAT-PMP: sendnewportmappingrequest() failed with %d error.\\n\", r);\n+            break;\n+        }\n+\n+        do {\n+            r = readnatpmpresponseorretry(&natpmp, &response);\n+        } while (r == NATPMP_TRYAGAIN);\n+        if (r < 0 || response.type != NATPMP_RESPTYPE_TCPPORTMAPPING) {\n+            LogPrintf(\"NAT-PMP: readnatpmpresponseorretry() for port mapping failed with %d error.\\n\", r);\n+        } else {\n+            auto pm = response.pnu.newportmapping;\n+            if (port == pm.privateport && port == pm.mappedpublicport && pm.lifetime > 0) {\n+                LogPrintf(\"NAT-PMP: port mapping successful.\\n\");\n+            } else {\n+                LogPrintf(\"NAT-PMP: sendnewportmappingrequest() failed.\\n\");\n+            }\n+        }\n+\n+    } while (g_mapport_interrupt.sleep_for(std::chrono::minutes(20)));\n+\n+    r = sendnewportmappingrequest(&natpmp, NATPMP_PROTOCOL_TCP, port, port, /* remove a port mapping */ 0);\n+    if (r < 0) {\n+        LogPrintf(\"NAT-PMP: sendnewportmappingrequest(0) failed with %d error.\\n\", r);\n+    }\n+\n+    closenatpmp(&natpmp);\n+}\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+static void ThreadUpnp()\n+{\n+    std::string port = strprintf(\"%u\", GetListenPort());\n+    const char * multicastif = nullptr;\n+    const char * minissdpdpath = nullptr;\n+    struct UPNPDev * devlist = nullptr;\n+    char lanaddr[64];\n+\n+    int error = 0;\n+#if MINIUPNPC_API_VERSION < 14\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, &error);\n+#else\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, 2, &error);\n+#endif\n+\n+    struct UPNPUrls urls;\n+    struct IGDdatas data;\n+    int r;\n+\n+    r = UPNP_GetValidIGD(devlist, &urls, &data, lanaddr, sizeof(lanaddr));\n+    if (r == 1)\n+    {\n+        if (fDiscover) {\n+            char externalIPAddress[40];\n+            r = UPNP_GetExternalIPAddress(urls.controlURL, data.first.servicetype, externalIPAddress);\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                LogPrintf(\"UPnP: GetExternalIPAddress() returned %d\\n\", r);\n+            } else {\n+                if (externalIPAddress[0]) {\n+                    CNetAddr resolved;\n+                    if (LookupHost(externalIPAddress, resolved, false)) {\n+                        LogPrintf(\"UPnP: ExternalIPAddress = %s\\n\", resolved.ToString());\n+                        AddLocal(resolved, LOCAL_MAPPED);\n+                    }\n+                } else {\n+                    LogPrintf(\"UPnP: GetExternalIPAddress failed.\\n\");\n+                }\n+            }\n+        }\n+\n+        std::string strDesc = PACKAGE_NAME \" \" + FormatFullVersion();\n+\n+        do {\n+            r = UPNP_AddPortMapping(urls.controlURL, data.first.servicetype, port.c_str(), port.c_str(), lanaddr, strDesc.c_str(), \"TCP\", 0, \"0\");\n+\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                LogPrintf(\"AddPortMapping(%s, %s, %s) failed with code %d (%s)\\n\", port, port, lanaddr, r, strupnperror(r));\n+            } else {\n+                LogPrintf(\"UPnP Port Mapping successful.\\n\");\n+            }\n+        } while (g_mapport_interrupt.sleep_for(std::chrono::minutes(20)));\n+\n+        r = UPNP_DeletePortMapping(urls.controlURL, data.first.servicetype, port.c_str(), \"TCP\", 0);\n+        LogPrintf(\"UPNP_DeletePortMapping() returned: %d\\n\", r);\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        FreeUPNPUrls(&urls);\n+    } else {\n+        LogPrintf(\"No valid UPnP IGDs found\\n\");\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        if (r != 0)\n+            FreeUPNPUrls(&urls);\n+    }\n+}\n+#endif // #ifdef USE_UPNP\n+\n+void StartMapPort(MapPort proto)\n+{\n+    if (!g_mapport_thread.joinable()) {\n+        assert(!g_mapport_interrupt);\n+        switch (proto) {\n+        case MapPort::NAT_PMP: {\n+#ifdef USE_NATPMP\n+            g_mapport_thread = std::thread((std::bind(&TraceThread<void (*)()>, \"natpmp\", &ThreadNatpmp)));\n+#endif // #ifdef USE_NATPMP\n+            return;\n+        }\n+        case MapPort::UPNP: {\n+#ifdef USE_UPNP\n+            g_mapport_thread = std::thread((std::bind(&TraceThread<void (*)()>, \"upnp\", &ThreadUpnp)));",
      "path": "src/mapport.cpp",
      "position": null,
      "original_position": 199,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "c7e90ca40ad9b7c66f3429b792435e9279ceca6b",
      "in_reply_to_id": 378006285,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It should be possible to enable both.",
      "created_at": "2020-02-12T12:05:22Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r378210260",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378210260"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 242,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378219481",
      "pull_request_review_id": 357411424,
      "id": 378219481,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODIxOTQ4MQ==",
      "diff_hunk": "@@ -0,0 +1,236 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <mapport.h>\n+\n+#include <clientversion.h>\n+#include <logging.h>\n+#include <net.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <threadinterrupt.h>\n+#include <util/system.h>\n+\n+#ifdef USE_NATPMP\n+#include <natpmp.h>\n+#ifdef WIN32\n+#include <winsock2.h>\n+#else\n+#include <arpa/inet.h>\n+#include <netinet/in.h>\n+#endif // #ifdef WIN32\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+#include <miniupnpc/miniupnpc.h>\n+#include <miniupnpc/upnpcommands.h>\n+#include <miniupnpc/upnperrors.h>\n+// The minimum supported miniUPnPc API version is set to 10. This keeps compatibility\n+// with Ubuntu 16.04 LTS and Debian 8 libminiupnpc-dev packages.\n+static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\");\n+#endif // #ifdef USE_UPNP\n+\n+#include <cassert>\n+#include <chrono>\n+#include <functional>\n+#include <string>\n+#include <thread>\n+\n+#if defined(USE_NATPMP) || defined(USE_UPNP)\n+static CThreadInterrupt g_mapport_interrupt;\n+static std::thread g_mapport_thread;\n+\n+#ifdef USE_NATPMP\n+static void ThreadNatpmp()\n+{\n+    int r;\n+    natpmp_t natpmp;\n+    natpmpresp_t response;\n+\n+    r = initnatpmp(&natpmp, /* detect gateway automatically */ 0, /* forced gateway - NOT APPLIED*/ 0);\n+    if (r < 0) {\n+        LogPrintf(\"NAT-PMP: initnatpmp() failed with %d error.\\n\", r);\n+        closenatpmp(&natpmp);\n+        return;\n+    }\n+\n+    if (fDiscover) {\n+        r = sendpublicaddressrequest(&natpmp);\n+        if (r < 0) {\n+            LogPrintf(\"NAT-PMP: sendpublicaddressrequest() failed with %d error.\\n\", r);\n+        } else {\n+            do {\n+                r = readnatpmpresponseorretry(&natpmp, &response);\n+            } while (r == NATPMP_TRYAGAIN);\n+            if (r < 0 || response.type != NATPMP_RESPTYPE_PUBLICADDRESS) {\n+                LogPrintf(\"NAT-PMP: readnatpmpresponseorretry() for public address failed with %d error.\\n\", r);\n+            } else {\n+                const char* public_address = inet_ntoa(response.pnu.publicaddress.addr);\n+                if (public_address[0]) {\n+                    CNetAddr resolved;\n+                    if (LookupHost(public_address, resolved, false)) {\n+                        LogPrintf(\"NAT-PMP: public address = %s\\n\", resolved.ToString());\n+                        AddLocal(resolved, LOCAL_MAPPED);\n+                    }\n+                } else {\n+                    LogPrintf(\"NAT-PMP: sendpublicaddressrequest() failed.\\n\");\n+                }\n+            }\n+        }\n+    }\n+\n+    const uint16_t port = GetListenPort();\n+    do {\n+        r = sendnewportmappingrequest(&natpmp, NATPMP_PROTOCOL_TCP, port, port, 3600 /*seconds*/);\n+        if (r < 0) {\n+            LogPrintf(\"NAT-PMP: sendnewportmappingrequest() failed with %d error.\\n\", r);\n+            break;\n+        }\n+\n+        do {\n+            r = readnatpmpresponseorretry(&natpmp, &response);\n+        } while (r == NATPMP_TRYAGAIN);\n+        if (r < 0 || response.type != NATPMP_RESPTYPE_TCPPORTMAPPING) {\n+            LogPrintf(\"NAT-PMP: readnatpmpresponseorretry() for port mapping failed with %d error.\\n\", r);\n+        } else {\n+            auto pm = response.pnu.newportmapping;\n+            if (port == pm.privateport && port == pm.mappedpublicport && pm.lifetime > 0) {\n+                LogPrintf(\"NAT-PMP: port mapping successful.\\n\");\n+            } else {\n+                LogPrintf(\"NAT-PMP: sendnewportmappingrequest() failed.\\n\");\n+            }\n+        }\n+\n+    } while (g_mapport_interrupt.sleep_for(std::chrono::minutes(20)));\n+\n+    r = sendnewportmappingrequest(&natpmp, NATPMP_PROTOCOL_TCP, port, port, /* remove a port mapping */ 0);\n+    if (r < 0) {\n+        LogPrintf(\"NAT-PMP: sendnewportmappingrequest(0) failed with %d error.\\n\", r);\n+    }\n+\n+    closenatpmp(&natpmp);\n+}\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+static void ThreadUpnp()\n+{\n+    std::string port = strprintf(\"%u\", GetListenPort());\n+    const char * multicastif = nullptr;\n+    const char * minissdpdpath = nullptr;\n+    struct UPNPDev * devlist = nullptr;\n+    char lanaddr[64];\n+\n+    int error = 0;\n+#if MINIUPNPC_API_VERSION < 14\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, &error);\n+#else\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, 2, &error);\n+#endif\n+\n+    struct UPNPUrls urls;\n+    struct IGDdatas data;\n+    int r;\n+\n+    r = UPNP_GetValidIGD(devlist, &urls, &data, lanaddr, sizeof(lanaddr));\n+    if (r == 1)\n+    {\n+        if (fDiscover) {\n+            char externalIPAddress[40];\n+            r = UPNP_GetExternalIPAddress(urls.controlURL, data.first.servicetype, externalIPAddress);\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                LogPrintf(\"UPnP: GetExternalIPAddress() returned %d\\n\", r);\n+            } else {\n+                if (externalIPAddress[0]) {\n+                    CNetAddr resolved;\n+                    if (LookupHost(externalIPAddress, resolved, false)) {\n+                        LogPrintf(\"UPnP: ExternalIPAddress = %s\\n\", resolved.ToString());\n+                        AddLocal(resolved, LOCAL_MAPPED);\n+                    }\n+                } else {\n+                    LogPrintf(\"UPnP: GetExternalIPAddress failed.\\n\");\n+                }\n+            }\n+        }\n+\n+        std::string strDesc = PACKAGE_NAME \" \" + FormatFullVersion();\n+\n+        do {\n+            r = UPNP_AddPortMapping(urls.controlURL, data.first.servicetype, port.c_str(), port.c_str(), lanaddr, strDesc.c_str(), \"TCP\", 0, \"0\");\n+\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                LogPrintf(\"AddPortMapping(%s, %s, %s) failed with code %d (%s)\\n\", port, port, lanaddr, r, strupnperror(r));\n+            } else {\n+                LogPrintf(\"UPnP Port Mapping successful.\\n\");\n+            }\n+        } while (g_mapport_interrupt.sleep_for(std::chrono::minutes(20)));\n+\n+        r = UPNP_DeletePortMapping(urls.controlURL, data.first.servicetype, port.c_str(), \"TCP\", 0);\n+        LogPrintf(\"UPNP_DeletePortMapping() returned: %d\\n\", r);\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        FreeUPNPUrls(&urls);\n+    } else {\n+        LogPrintf(\"No valid UPnP IGDs found\\n\");\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        if (r != 0)\n+            FreeUPNPUrls(&urls);\n+    }\n+}\n+#endif // #ifdef USE_UPNP\n+\n+void StartMapPort(MapPort proto)\n+{\n+    if (!g_mapport_thread.joinable()) {\n+        assert(!g_mapport_interrupt);\n+        switch (proto) {\n+        case MapPort::NAT_PMP: {\n+#ifdef USE_NATPMP\n+            g_mapport_thread = std::thread((std::bind(&TraceThread<void (*)()>, \"natpmp\", &ThreadNatpmp)));\n+#endif // #ifdef USE_NATPMP\n+            return;\n+        }\n+        case MapPort::UPNP: {\n+#ifdef USE_UPNP\n+            g_mapport_thread = std::thread((std::bind(&TraceThread<void (*)()>, \"upnp\", &ThreadUpnp)));",
      "path": "src/mapport.cpp",
      "position": null,
      "original_position": 199,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "c7e90ca40ad9b7c66f3429b792435e9279ceca6b",
      "in_reply_to_id": 378006285,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If both are enabled, would you try to open de port with NAT_PMP first and if that fails UPNP?",
      "created_at": "2020-02-12T12:26:31Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r378219481",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378219481"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 242,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378221757",
      "pull_request_review_id": 357414425,
      "id": 378221757,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODIyMTc1Nw==",
      "diff_hunk": "@@ -0,0 +1,236 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <mapport.h>\n+\n+#include <clientversion.h>\n+#include <logging.h>\n+#include <net.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <threadinterrupt.h>\n+#include <util/system.h>\n+\n+#ifdef USE_NATPMP\n+#include <natpmp.h>\n+#ifdef WIN32\n+#include <winsock2.h>\n+#else\n+#include <arpa/inet.h>\n+#include <netinet/in.h>\n+#endif // #ifdef WIN32\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+#include <miniupnpc/miniupnpc.h>\n+#include <miniupnpc/upnpcommands.h>\n+#include <miniupnpc/upnperrors.h>\n+// The minimum supported miniUPnPc API version is set to 10. This keeps compatibility\n+// with Ubuntu 16.04 LTS and Debian 8 libminiupnpc-dev packages.\n+static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\");\n+#endif // #ifdef USE_UPNP\n+\n+#include <cassert>\n+#include <chrono>\n+#include <functional>\n+#include <string>\n+#include <thread>\n+\n+#if defined(USE_NATPMP) || defined(USE_UPNP)\n+static CThreadInterrupt g_mapport_interrupt;\n+static std::thread g_mapport_thread;\n+\n+#ifdef USE_NATPMP\n+static void ThreadNatpmp()\n+{\n+    int r;\n+    natpmp_t natpmp;\n+    natpmpresp_t response;\n+\n+    r = initnatpmp(&natpmp, /* detect gateway automatically */ 0, /* forced gateway - NOT APPLIED*/ 0);\n+    if (r < 0) {\n+        LogPrintf(\"NAT-PMP: initnatpmp() failed with %d error.\\n\", r);\n+        closenatpmp(&natpmp);\n+        return;\n+    }\n+\n+    if (fDiscover) {\n+        r = sendpublicaddressrequest(&natpmp);\n+        if (r < 0) {\n+            LogPrintf(\"NAT-PMP: sendpublicaddressrequest() failed with %d error.\\n\", r);\n+        } else {\n+            do {\n+                r = readnatpmpresponseorretry(&natpmp, &response);\n+            } while (r == NATPMP_TRYAGAIN);\n+            if (r < 0 || response.type != NATPMP_RESPTYPE_PUBLICADDRESS) {\n+                LogPrintf(\"NAT-PMP: readnatpmpresponseorretry() for public address failed with %d error.\\n\", r);\n+            } else {\n+                const char* public_address = inet_ntoa(response.pnu.publicaddress.addr);\n+                if (public_address[0]) {\n+                    CNetAddr resolved;\n+                    if (LookupHost(public_address, resolved, false)) {\n+                        LogPrintf(\"NAT-PMP: public address = %s\\n\", resolved.ToString());\n+                        AddLocal(resolved, LOCAL_MAPPED);\n+                    }\n+                } else {\n+                    LogPrintf(\"NAT-PMP: sendpublicaddressrequest() failed.\\n\");\n+                }\n+            }\n+        }\n+    }\n+\n+    const uint16_t port = GetListenPort();\n+    do {\n+        r = sendnewportmappingrequest(&natpmp, NATPMP_PROTOCOL_TCP, port, port, 3600 /*seconds*/);\n+        if (r < 0) {\n+            LogPrintf(\"NAT-PMP: sendnewportmappingrequest() failed with %d error.\\n\", r);\n+            break;\n+        }\n+\n+        do {\n+            r = readnatpmpresponseorretry(&natpmp, &response);\n+        } while (r == NATPMP_TRYAGAIN);\n+        if (r < 0 || response.type != NATPMP_RESPTYPE_TCPPORTMAPPING) {\n+            LogPrintf(\"NAT-PMP: readnatpmpresponseorretry() for port mapping failed with %d error.\\n\", r);\n+        } else {\n+            auto pm = response.pnu.newportmapping;\n+            if (port == pm.privateport && port == pm.mappedpublicport && pm.lifetime > 0) {\n+                LogPrintf(\"NAT-PMP: port mapping successful.\\n\");\n+            } else {\n+                LogPrintf(\"NAT-PMP: sendnewportmappingrequest() failed.\\n\");\n+            }\n+        }\n+\n+    } while (g_mapport_interrupt.sleep_for(std::chrono::minutes(20)));\n+\n+    r = sendnewportmappingrequest(&natpmp, NATPMP_PROTOCOL_TCP, port, port, /* remove a port mapping */ 0);\n+    if (r < 0) {\n+        LogPrintf(\"NAT-PMP: sendnewportmappingrequest(0) failed with %d error.\\n\", r);\n+    }\n+\n+    closenatpmp(&natpmp);\n+}\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+static void ThreadUpnp()\n+{\n+    std::string port = strprintf(\"%u\", GetListenPort());\n+    const char * multicastif = nullptr;\n+    const char * minissdpdpath = nullptr;\n+    struct UPNPDev * devlist = nullptr;\n+    char lanaddr[64];\n+\n+    int error = 0;\n+#if MINIUPNPC_API_VERSION < 14\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, &error);\n+#else\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, 2, &error);\n+#endif\n+\n+    struct UPNPUrls urls;\n+    struct IGDdatas data;\n+    int r;\n+\n+    r = UPNP_GetValidIGD(devlist, &urls, &data, lanaddr, sizeof(lanaddr));\n+    if (r == 1)\n+    {\n+        if (fDiscover) {\n+            char externalIPAddress[40];\n+            r = UPNP_GetExternalIPAddress(urls.controlURL, data.first.servicetype, externalIPAddress);\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                LogPrintf(\"UPnP: GetExternalIPAddress() returned %d\\n\", r);\n+            } else {\n+                if (externalIPAddress[0]) {\n+                    CNetAddr resolved;\n+                    if (LookupHost(externalIPAddress, resolved, false)) {\n+                        LogPrintf(\"UPnP: ExternalIPAddress = %s\\n\", resolved.ToString());\n+                        AddLocal(resolved, LOCAL_MAPPED);\n+                    }\n+                } else {\n+                    LogPrintf(\"UPnP: GetExternalIPAddress failed.\\n\");\n+                }\n+            }\n+        }\n+\n+        std::string strDesc = PACKAGE_NAME \" \" + FormatFullVersion();\n+\n+        do {\n+            r = UPNP_AddPortMapping(urls.controlURL, data.first.servicetype, port.c_str(), port.c_str(), lanaddr, strDesc.c_str(), \"TCP\", 0, \"0\");\n+\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                LogPrintf(\"AddPortMapping(%s, %s, %s) failed with code %d (%s)\\n\", port, port, lanaddr, r, strupnperror(r));\n+            } else {\n+                LogPrintf(\"UPnP Port Mapping successful.\\n\");\n+            }\n+        } while (g_mapport_interrupt.sleep_for(std::chrono::minutes(20)));\n+\n+        r = UPNP_DeletePortMapping(urls.controlURL, data.first.servicetype, port.c_str(), \"TCP\", 0);\n+        LogPrintf(\"UPNP_DeletePortMapping() returned: %d\\n\", r);\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        FreeUPNPUrls(&urls);\n+    } else {\n+        LogPrintf(\"No valid UPnP IGDs found\\n\");\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        if (r != 0)\n+            FreeUPNPUrls(&urls);\n+    }\n+}\n+#endif // #ifdef USE_UPNP\n+\n+void StartMapPort(MapPort proto)\n+{\n+    if (!g_mapport_thread.joinable()) {\n+        assert(!g_mapport_interrupt);\n+        switch (proto) {\n+        case MapPort::NAT_PMP: {\n+#ifdef USE_NATPMP\n+            g_mapport_thread = std::thread((std::bind(&TraceThread<void (*)()>, \"natpmp\", &ThreadNatpmp)));\n+#endif // #ifdef USE_NATPMP\n+            return;\n+        }\n+        case MapPort::UPNP: {\n+#ifdef USE_UPNP\n+            g_mapport_thread = std::thread((std::bind(&TraceThread<void (*)()>, \"upnp\", &ThreadUpnp)));",
      "path": "src/mapport.cpp",
      "position": null,
      "original_position": 199,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "c7e90ca40ad9b7c66f3429b792435e9279ceca6b",
      "in_reply_to_id": 378006285,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> It should be possible to enable both.\r\n\r\nDo you mean that a router could do port mapping using both NAT-PMP and UPnP simultaneously? What is the reason for that?",
      "created_at": "2020-02-12T12:31:52Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r378221757",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378221757"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 242,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378227115",
      "pull_request_review_id": 357421173,
      "id": 378227115,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODIyNzExNQ==",
      "diff_hunk": "@@ -0,0 +1,236 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <mapport.h>\n+\n+#include <clientversion.h>\n+#include <logging.h>\n+#include <net.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <threadinterrupt.h>\n+#include <util/system.h>\n+\n+#ifdef USE_NATPMP\n+#include <natpmp.h>\n+#ifdef WIN32\n+#include <winsock2.h>\n+#else\n+#include <arpa/inet.h>\n+#include <netinet/in.h>\n+#endif // #ifdef WIN32\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+#include <miniupnpc/miniupnpc.h>\n+#include <miniupnpc/upnpcommands.h>\n+#include <miniupnpc/upnperrors.h>\n+// The minimum supported miniUPnPc API version is set to 10. This keeps compatibility\n+// with Ubuntu 16.04 LTS and Debian 8 libminiupnpc-dev packages.\n+static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\");\n+#endif // #ifdef USE_UPNP\n+\n+#include <cassert>\n+#include <chrono>\n+#include <functional>\n+#include <string>\n+#include <thread>\n+\n+#if defined(USE_NATPMP) || defined(USE_UPNP)\n+static CThreadInterrupt g_mapport_interrupt;\n+static std::thread g_mapport_thread;\n+\n+#ifdef USE_NATPMP\n+static void ThreadNatpmp()\n+{\n+    int r;\n+    natpmp_t natpmp;\n+    natpmpresp_t response;\n+\n+    r = initnatpmp(&natpmp, /* detect gateway automatically */ 0, /* forced gateway - NOT APPLIED*/ 0);\n+    if (r < 0) {\n+        LogPrintf(\"NAT-PMP: initnatpmp() failed with %d error.\\n\", r);\n+        closenatpmp(&natpmp);\n+        return;\n+    }\n+\n+    if (fDiscover) {\n+        r = sendpublicaddressrequest(&natpmp);\n+        if (r < 0) {\n+            LogPrintf(\"NAT-PMP: sendpublicaddressrequest() failed with %d error.\\n\", r);\n+        } else {\n+            do {\n+                r = readnatpmpresponseorretry(&natpmp, &response);\n+            } while (r == NATPMP_TRYAGAIN);\n+            if (r < 0 || response.type != NATPMP_RESPTYPE_PUBLICADDRESS) {\n+                LogPrintf(\"NAT-PMP: readnatpmpresponseorretry() for public address failed with %d error.\\n\", r);\n+            } else {\n+                const char* public_address = inet_ntoa(response.pnu.publicaddress.addr);\n+                if (public_address[0]) {\n+                    CNetAddr resolved;\n+                    if (LookupHost(public_address, resolved, false)) {\n+                        LogPrintf(\"NAT-PMP: public address = %s\\n\", resolved.ToString());\n+                        AddLocal(resolved, LOCAL_MAPPED);\n+                    }\n+                } else {\n+                    LogPrintf(\"NAT-PMP: sendpublicaddressrequest() failed.\\n\");\n+                }\n+            }\n+        }\n+    }\n+\n+    const uint16_t port = GetListenPort();\n+    do {\n+        r = sendnewportmappingrequest(&natpmp, NATPMP_PROTOCOL_TCP, port, port, 3600 /*seconds*/);\n+        if (r < 0) {\n+            LogPrintf(\"NAT-PMP: sendnewportmappingrequest() failed with %d error.\\n\", r);\n+            break;\n+        }\n+\n+        do {\n+            r = readnatpmpresponseorretry(&natpmp, &response);\n+        } while (r == NATPMP_TRYAGAIN);\n+        if (r < 0 || response.type != NATPMP_RESPTYPE_TCPPORTMAPPING) {\n+            LogPrintf(\"NAT-PMP: readnatpmpresponseorretry() for port mapping failed with %d error.\\n\", r);\n+        } else {\n+            auto pm = response.pnu.newportmapping;\n+            if (port == pm.privateport && port == pm.mappedpublicport && pm.lifetime > 0) {\n+                LogPrintf(\"NAT-PMP: port mapping successful.\\n\");\n+            } else {\n+                LogPrintf(\"NAT-PMP: sendnewportmappingrequest() failed.\\n\");\n+            }\n+        }\n+\n+    } while (g_mapport_interrupt.sleep_for(std::chrono::minutes(20)));\n+\n+    r = sendnewportmappingrequest(&natpmp, NATPMP_PROTOCOL_TCP, port, port, /* remove a port mapping */ 0);\n+    if (r < 0) {\n+        LogPrintf(\"NAT-PMP: sendnewportmappingrequest(0) failed with %d error.\\n\", r);\n+    }\n+\n+    closenatpmp(&natpmp);\n+}\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+static void ThreadUpnp()\n+{\n+    std::string port = strprintf(\"%u\", GetListenPort());\n+    const char * multicastif = nullptr;\n+    const char * minissdpdpath = nullptr;\n+    struct UPNPDev * devlist = nullptr;\n+    char lanaddr[64];\n+\n+    int error = 0;\n+#if MINIUPNPC_API_VERSION < 14\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, &error);\n+#else\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, 2, &error);\n+#endif\n+\n+    struct UPNPUrls urls;\n+    struct IGDdatas data;\n+    int r;\n+\n+    r = UPNP_GetValidIGD(devlist, &urls, &data, lanaddr, sizeof(lanaddr));\n+    if (r == 1)\n+    {\n+        if (fDiscover) {\n+            char externalIPAddress[40];\n+            r = UPNP_GetExternalIPAddress(urls.controlURL, data.first.servicetype, externalIPAddress);\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                LogPrintf(\"UPnP: GetExternalIPAddress() returned %d\\n\", r);\n+            } else {\n+                if (externalIPAddress[0]) {\n+                    CNetAddr resolved;\n+                    if (LookupHost(externalIPAddress, resolved, false)) {\n+                        LogPrintf(\"UPnP: ExternalIPAddress = %s\\n\", resolved.ToString());\n+                        AddLocal(resolved, LOCAL_MAPPED);\n+                    }\n+                } else {\n+                    LogPrintf(\"UPnP: GetExternalIPAddress failed.\\n\");\n+                }\n+            }\n+        }\n+\n+        std::string strDesc = PACKAGE_NAME \" \" + FormatFullVersion();\n+\n+        do {\n+            r = UPNP_AddPortMapping(urls.controlURL, data.first.servicetype, port.c_str(), port.c_str(), lanaddr, strDesc.c_str(), \"TCP\", 0, \"0\");\n+\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                LogPrintf(\"AddPortMapping(%s, %s, %s) failed with code %d (%s)\\n\", port, port, lanaddr, r, strupnperror(r));\n+            } else {\n+                LogPrintf(\"UPnP Port Mapping successful.\\n\");\n+            }\n+        } while (g_mapport_interrupt.sleep_for(std::chrono::minutes(20)));\n+\n+        r = UPNP_DeletePortMapping(urls.controlURL, data.first.servicetype, port.c_str(), \"TCP\", 0);\n+        LogPrintf(\"UPNP_DeletePortMapping() returned: %d\\n\", r);\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        FreeUPNPUrls(&urls);\n+    } else {\n+        LogPrintf(\"No valid UPnP IGDs found\\n\");\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        if (r != 0)\n+            FreeUPNPUrls(&urls);\n+    }\n+}\n+#endif // #ifdef USE_UPNP\n+\n+void StartMapPort(MapPort proto)\n+{\n+    if (!g_mapport_thread.joinable()) {\n+        assert(!g_mapport_interrupt);\n+        switch (proto) {\n+        case MapPort::NAT_PMP: {\n+#ifdef USE_NATPMP\n+            g_mapport_thread = std::thread((std::bind(&TraceThread<void (*)()>, \"natpmp\", &ThreadNatpmp)));\n+#endif // #ifdef USE_NATPMP\n+            return;\n+        }\n+        case MapPort::UPNP: {\n+#ifdef USE_UPNP\n+            g_mapport_thread = std::thread((std::bind(&TraceThread<void (*)()>, \"upnp\", &ThreadUpnp)));",
      "path": "src/mapport.cpp",
      "position": null,
      "original_position": 199,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "c7e90ca40ad9b7c66f3429b792435e9279ceca6b",
      "in_reply_to_id": 378006285,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I wouldn't use them simultaneously, but one fails it makes sense to try the other. Though I believe our long plan is to remove UPnP, if NAT-PMP does the job.",
      "created_at": "2020-02-12T12:43:39Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r378227115",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378227115"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 242,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378235158",
      "pull_request_review_id": 357431400,
      "id": 378235158,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODIzNTE1OA==",
      "diff_hunk": "@@ -0,0 +1,236 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <mapport.h>\n+\n+#include <clientversion.h>\n+#include <logging.h>\n+#include <net.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <threadinterrupt.h>\n+#include <util/system.h>\n+\n+#ifdef USE_NATPMP\n+#include <natpmp.h>\n+#ifdef WIN32\n+#include <winsock2.h>\n+#else\n+#include <arpa/inet.h>\n+#include <netinet/in.h>\n+#endif // #ifdef WIN32\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+#include <miniupnpc/miniupnpc.h>\n+#include <miniupnpc/upnpcommands.h>\n+#include <miniupnpc/upnperrors.h>\n+// The minimum supported miniUPnPc API version is set to 10. This keeps compatibility\n+// with Ubuntu 16.04 LTS and Debian 8 libminiupnpc-dev packages.\n+static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\");\n+#endif // #ifdef USE_UPNP\n+\n+#include <cassert>\n+#include <chrono>\n+#include <functional>\n+#include <string>\n+#include <thread>\n+\n+#if defined(USE_NATPMP) || defined(USE_UPNP)\n+static CThreadInterrupt g_mapport_interrupt;\n+static std::thread g_mapport_thread;\n+\n+#ifdef USE_NATPMP\n+static void ThreadNatpmp()\n+{\n+    int r;\n+    natpmp_t natpmp;\n+    natpmpresp_t response;\n+\n+    r = initnatpmp(&natpmp, /* detect gateway automatically */ 0, /* forced gateway - NOT APPLIED*/ 0);\n+    if (r < 0) {\n+        LogPrintf(\"NAT-PMP: initnatpmp() failed with %d error.\\n\", r);\n+        closenatpmp(&natpmp);\n+        return;\n+    }\n+\n+    if (fDiscover) {\n+        r = sendpublicaddressrequest(&natpmp);\n+        if (r < 0) {\n+            LogPrintf(\"NAT-PMP: sendpublicaddressrequest() failed with %d error.\\n\", r);\n+        } else {\n+            do {\n+                r = readnatpmpresponseorretry(&natpmp, &response);\n+            } while (r == NATPMP_TRYAGAIN);\n+            if (r < 0 || response.type != NATPMP_RESPTYPE_PUBLICADDRESS) {\n+                LogPrintf(\"NAT-PMP: readnatpmpresponseorretry() for public address failed with %d error.\\n\", r);\n+            } else {\n+                const char* public_address = inet_ntoa(response.pnu.publicaddress.addr);\n+                if (public_address[0]) {\n+                    CNetAddr resolved;\n+                    if (LookupHost(public_address, resolved, false)) {\n+                        LogPrintf(\"NAT-PMP: public address = %s\\n\", resolved.ToString());\n+                        AddLocal(resolved, LOCAL_MAPPED);\n+                    }\n+                } else {\n+                    LogPrintf(\"NAT-PMP: sendpublicaddressrequest() failed.\\n\");\n+                }\n+            }\n+        }\n+    }\n+\n+    const uint16_t port = GetListenPort();\n+    do {\n+        r = sendnewportmappingrequest(&natpmp, NATPMP_PROTOCOL_TCP, port, port, 3600 /*seconds*/);\n+        if (r < 0) {\n+            LogPrintf(\"NAT-PMP: sendnewportmappingrequest() failed with %d error.\\n\", r);\n+            break;\n+        }\n+\n+        do {\n+            r = readnatpmpresponseorretry(&natpmp, &response);\n+        } while (r == NATPMP_TRYAGAIN);\n+        if (r < 0 || response.type != NATPMP_RESPTYPE_TCPPORTMAPPING) {\n+            LogPrintf(\"NAT-PMP: readnatpmpresponseorretry() for port mapping failed with %d error.\\n\", r);\n+        } else {\n+            auto pm = response.pnu.newportmapping;\n+            if (port == pm.privateport && port == pm.mappedpublicport && pm.lifetime > 0) {\n+                LogPrintf(\"NAT-PMP: port mapping successful.\\n\");\n+            } else {\n+                LogPrintf(\"NAT-PMP: sendnewportmappingrequest() failed.\\n\");\n+            }\n+        }\n+\n+    } while (g_mapport_interrupt.sleep_for(std::chrono::minutes(20)));\n+\n+    r = sendnewportmappingrequest(&natpmp, NATPMP_PROTOCOL_TCP, port, port, /* remove a port mapping */ 0);\n+    if (r < 0) {\n+        LogPrintf(\"NAT-PMP: sendnewportmappingrequest(0) failed with %d error.\\n\", r);\n+    }\n+\n+    closenatpmp(&natpmp);\n+}\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+static void ThreadUpnp()\n+{\n+    std::string port = strprintf(\"%u\", GetListenPort());\n+    const char * multicastif = nullptr;\n+    const char * minissdpdpath = nullptr;\n+    struct UPNPDev * devlist = nullptr;\n+    char lanaddr[64];\n+\n+    int error = 0;\n+#if MINIUPNPC_API_VERSION < 14\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, &error);\n+#else\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, 2, &error);\n+#endif\n+\n+    struct UPNPUrls urls;\n+    struct IGDdatas data;\n+    int r;\n+\n+    r = UPNP_GetValidIGD(devlist, &urls, &data, lanaddr, sizeof(lanaddr));\n+    if (r == 1)\n+    {\n+        if (fDiscover) {\n+            char externalIPAddress[40];\n+            r = UPNP_GetExternalIPAddress(urls.controlURL, data.first.servicetype, externalIPAddress);\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                LogPrintf(\"UPnP: GetExternalIPAddress() returned %d\\n\", r);\n+            } else {\n+                if (externalIPAddress[0]) {\n+                    CNetAddr resolved;\n+                    if (LookupHost(externalIPAddress, resolved, false)) {\n+                        LogPrintf(\"UPnP: ExternalIPAddress = %s\\n\", resolved.ToString());\n+                        AddLocal(resolved, LOCAL_MAPPED);\n+                    }\n+                } else {\n+                    LogPrintf(\"UPnP: GetExternalIPAddress failed.\\n\");\n+                }\n+            }\n+        }\n+\n+        std::string strDesc = PACKAGE_NAME \" \" + FormatFullVersion();\n+\n+        do {\n+            r = UPNP_AddPortMapping(urls.controlURL, data.first.servicetype, port.c_str(), port.c_str(), lanaddr, strDesc.c_str(), \"TCP\", 0, \"0\");\n+\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                LogPrintf(\"AddPortMapping(%s, %s, %s) failed with code %d (%s)\\n\", port, port, lanaddr, r, strupnperror(r));\n+            } else {\n+                LogPrintf(\"UPnP Port Mapping successful.\\n\");\n+            }\n+        } while (g_mapport_interrupt.sleep_for(std::chrono::minutes(20)));\n+\n+        r = UPNP_DeletePortMapping(urls.controlURL, data.first.servicetype, port.c_str(), \"TCP\", 0);\n+        LogPrintf(\"UPNP_DeletePortMapping() returned: %d\\n\", r);\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        FreeUPNPUrls(&urls);\n+    } else {\n+        LogPrintf(\"No valid UPnP IGDs found\\n\");\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        if (r != 0)\n+            FreeUPNPUrls(&urls);\n+    }\n+}\n+#endif // #ifdef USE_UPNP\n+\n+void StartMapPort(MapPort proto)\n+{\n+    if (!g_mapport_thread.joinable()) {\n+        assert(!g_mapport_interrupt);\n+        switch (proto) {\n+        case MapPort::NAT_PMP: {\n+#ifdef USE_NATPMP\n+            g_mapport_thread = std::thread((std::bind(&TraceThread<void (*)()>, \"natpmp\", &ThreadNatpmp)));\n+#endif // #ifdef USE_NATPMP\n+            return;\n+        }\n+        case MapPort::UPNP: {\n+#ifdef USE_UPNP\n+            g_mapport_thread = std::thread((std::bind(&TraceThread<void (*)()>, \"upnp\", &ThreadUpnp)));",
      "path": "src/mapport.cpp",
      "position": null,
      "original_position": 199,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "c7e90ca40ad9b7c66f3429b792435e9279ceca6b",
      "in_reply_to_id": 378006285,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I wouldn't use them simultaneously, but one fails it makes sense to try the other.\r\n\r\nGood suggestion for a followup.\r\n\r\n> Though I believe our long plan is to remove UPnP, if NAT-PMP does the job.\r\n\r\nNot all routers with stock software have NAT-PMP port mapping feature.",
      "created_at": "2020-02-12T13:01:00Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r378235158",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378235158"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 242,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378236713",
      "pull_request_review_id": 357433454,
      "id": 378236713,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODIzNjcxMw==",
      "diff_hunk": "@@ -0,0 +1,236 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <mapport.h>\n+\n+#include <clientversion.h>\n+#include <logging.h>\n+#include <net.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <threadinterrupt.h>\n+#include <util/system.h>\n+\n+#ifdef USE_NATPMP\n+#include <natpmp.h>\n+#ifdef WIN32\n+#include <winsock2.h>\n+#else\n+#include <arpa/inet.h>\n+#include <netinet/in.h>\n+#endif // #ifdef WIN32\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+#include <miniupnpc/miniupnpc.h>\n+#include <miniupnpc/upnpcommands.h>\n+#include <miniupnpc/upnperrors.h>\n+// The minimum supported miniUPnPc API version is set to 10. This keeps compatibility\n+// with Ubuntu 16.04 LTS and Debian 8 libminiupnpc-dev packages.\n+static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\");\n+#endif // #ifdef USE_UPNP\n+\n+#include <cassert>\n+#include <chrono>\n+#include <functional>\n+#include <string>\n+#include <thread>\n+\n+#if defined(USE_NATPMP) || defined(USE_UPNP)\n+static CThreadInterrupt g_mapport_interrupt;\n+static std::thread g_mapport_thread;\n+\n+#ifdef USE_NATPMP\n+static void ThreadNatpmp()\n+{\n+    int r;\n+    natpmp_t natpmp;\n+    natpmpresp_t response;\n+\n+    r = initnatpmp(&natpmp, /* detect gateway automatically */ 0, /* forced gateway - NOT APPLIED*/ 0);\n+    if (r < 0) {\n+        LogPrintf(\"NAT-PMP: initnatpmp() failed with %d error.\\n\", r);\n+        closenatpmp(&natpmp);\n+        return;\n+    }\n+\n+    if (fDiscover) {\n+        r = sendpublicaddressrequest(&natpmp);\n+        if (r < 0) {\n+            LogPrintf(\"NAT-PMP: sendpublicaddressrequest() failed with %d error.\\n\", r);\n+        } else {\n+            do {\n+                r = readnatpmpresponseorretry(&natpmp, &response);\n+            } while (r == NATPMP_TRYAGAIN);\n+            if (r < 0 || response.type != NATPMP_RESPTYPE_PUBLICADDRESS) {\n+                LogPrintf(\"NAT-PMP: readnatpmpresponseorretry() for public address failed with %d error.\\n\", r);\n+            } else {\n+                const char* public_address = inet_ntoa(response.pnu.publicaddress.addr);\n+                if (public_address[0]) {\n+                    CNetAddr resolved;\n+                    if (LookupHost(public_address, resolved, false)) {\n+                        LogPrintf(\"NAT-PMP: public address = %s\\n\", resolved.ToString());\n+                        AddLocal(resolved, LOCAL_MAPPED);\n+                    }\n+                } else {\n+                    LogPrintf(\"NAT-PMP: sendpublicaddressrequest() failed.\\n\");\n+                }\n+            }\n+        }\n+    }\n+\n+    const uint16_t port = GetListenPort();\n+    do {\n+        r = sendnewportmappingrequest(&natpmp, NATPMP_PROTOCOL_TCP, port, port, 3600 /*seconds*/);\n+        if (r < 0) {\n+            LogPrintf(\"NAT-PMP: sendnewportmappingrequest() failed with %d error.\\n\", r);\n+            break;\n+        }\n+\n+        do {\n+            r = readnatpmpresponseorretry(&natpmp, &response);\n+        } while (r == NATPMP_TRYAGAIN);\n+        if (r < 0 || response.type != NATPMP_RESPTYPE_TCPPORTMAPPING) {\n+            LogPrintf(\"NAT-PMP: readnatpmpresponseorretry() for port mapping failed with %d error.\\n\", r);\n+        } else {\n+            auto pm = response.pnu.newportmapping;\n+            if (port == pm.privateport && port == pm.mappedpublicport && pm.lifetime > 0) {\n+                LogPrintf(\"NAT-PMP: port mapping successful.\\n\");\n+            } else {\n+                LogPrintf(\"NAT-PMP: sendnewportmappingrequest() failed.\\n\");\n+            }\n+        }\n+\n+    } while (g_mapport_interrupt.sleep_for(std::chrono::minutes(20)));\n+\n+    r = sendnewportmappingrequest(&natpmp, NATPMP_PROTOCOL_TCP, port, port, /* remove a port mapping */ 0);\n+    if (r < 0) {\n+        LogPrintf(\"NAT-PMP: sendnewportmappingrequest(0) failed with %d error.\\n\", r);\n+    }\n+\n+    closenatpmp(&natpmp);\n+}\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+static void ThreadUpnp()\n+{\n+    std::string port = strprintf(\"%u\", GetListenPort());\n+    const char * multicastif = nullptr;\n+    const char * minissdpdpath = nullptr;\n+    struct UPNPDev * devlist = nullptr;\n+    char lanaddr[64];\n+\n+    int error = 0;\n+#if MINIUPNPC_API_VERSION < 14\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, &error);\n+#else\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, 2, &error);\n+#endif\n+\n+    struct UPNPUrls urls;\n+    struct IGDdatas data;\n+    int r;\n+\n+    r = UPNP_GetValidIGD(devlist, &urls, &data, lanaddr, sizeof(lanaddr));\n+    if (r == 1)\n+    {\n+        if (fDiscover) {\n+            char externalIPAddress[40];\n+            r = UPNP_GetExternalIPAddress(urls.controlURL, data.first.servicetype, externalIPAddress);\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                LogPrintf(\"UPnP: GetExternalIPAddress() returned %d\\n\", r);\n+            } else {\n+                if (externalIPAddress[0]) {\n+                    CNetAddr resolved;\n+                    if (LookupHost(externalIPAddress, resolved, false)) {\n+                        LogPrintf(\"UPnP: ExternalIPAddress = %s\\n\", resolved.ToString());\n+                        AddLocal(resolved, LOCAL_MAPPED);\n+                    }\n+                } else {\n+                    LogPrintf(\"UPnP: GetExternalIPAddress failed.\\n\");\n+                }\n+            }\n+        }\n+\n+        std::string strDesc = PACKAGE_NAME \" \" + FormatFullVersion();\n+\n+        do {\n+            r = UPNP_AddPortMapping(urls.controlURL, data.first.servicetype, port.c_str(), port.c_str(), lanaddr, strDesc.c_str(), \"TCP\", 0, \"0\");\n+\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                LogPrintf(\"AddPortMapping(%s, %s, %s) failed with code %d (%s)\\n\", port, port, lanaddr, r, strupnperror(r));\n+            } else {\n+                LogPrintf(\"UPnP Port Mapping successful.\\n\");\n+            }\n+        } while (g_mapport_interrupt.sleep_for(std::chrono::minutes(20)));\n+\n+        r = UPNP_DeletePortMapping(urls.controlURL, data.first.servicetype, port.c_str(), \"TCP\", 0);\n+        LogPrintf(\"UPNP_DeletePortMapping() returned: %d\\n\", r);\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        FreeUPNPUrls(&urls);\n+    } else {\n+        LogPrintf(\"No valid UPnP IGDs found\\n\");\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        if (r != 0)\n+            FreeUPNPUrls(&urls);\n+    }\n+}\n+#endif // #ifdef USE_UPNP\n+\n+void StartMapPort(MapPort proto)\n+{\n+    if (!g_mapport_thread.joinable()) {\n+        assert(!g_mapport_interrupt);\n+        switch (proto) {\n+        case MapPort::NAT_PMP: {\n+#ifdef USE_NATPMP\n+            g_mapport_thread = std::thread((std::bind(&TraceThread<void (*)()>, \"natpmp\", &ThreadNatpmp)));\n+#endif // #ifdef USE_NATPMP\n+            return;\n+        }\n+        case MapPort::UPNP: {\n+#ifdef USE_UPNP\n+            g_mapport_thread = std::thread((std::bind(&TraceThread<void (*)()>, \"upnp\", &ThreadUpnp)));",
      "path": "src/mapport.cpp",
      "position": null,
      "original_position": 199,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "c7e90ca40ad9b7c66f3429b792435e9279ceca6b",
      "in_reply_to_id": 378006285,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Users who don't know what their router supports should be able to just flip both on. And laptops might very well migrate between different routers using each protocol.\r\n\r\nAgree with @hebasto that NAT-PMP can't be a complete substitute for UPnP since routers might not support both.",
      "created_at": "2020-02-12T13:04:21Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r378236713",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378236713"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 242,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379913637",
      "pull_request_review_id": 359412797,
      "id": 379913637,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkxMzYzNw==",
      "diff_hunk": "@@ -0,0 +1,236 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <mapport.h>\n+\n+#include <clientversion.h>\n+#include <logging.h>\n+#include <net.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <threadinterrupt.h>\n+#include <util/system.h>\n+\n+#ifdef USE_NATPMP\n+#include <natpmp.h>\n+#ifdef WIN32\n+#include <winsock2.h>\n+#else\n+#include <arpa/inet.h>\n+#include <netinet/in.h>\n+#endif // #ifdef WIN32\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+#include <miniupnpc/miniupnpc.h>\n+#include <miniupnpc/upnpcommands.h>\n+#include <miniupnpc/upnperrors.h>\n+// The minimum supported miniUPnPc API version is set to 10. This keeps compatibility\n+// with Ubuntu 16.04 LTS and Debian 8 libminiupnpc-dev packages.\n+static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\");\n+#endif // #ifdef USE_UPNP\n+\n+#include <cassert>\n+#include <chrono>\n+#include <functional>\n+#include <string>\n+#include <thread>\n+\n+#if defined(USE_NATPMP) || defined(USE_UPNP)\n+static CThreadInterrupt g_mapport_interrupt;\n+static std::thread g_mapport_thread;\n+\n+#ifdef USE_NATPMP\n+static void ThreadNatpmp()\n+{\n+    int r;\n+    natpmp_t natpmp;\n+    natpmpresp_t response;\n+\n+    r = initnatpmp(&natpmp, /* detect gateway automatically */ 0, /* forced gateway - NOT APPLIED*/ 0);\n+    if (r < 0) {\n+        LogPrintf(\"NAT-PMP: initnatpmp() failed with %d error.\\n\", r);\n+        closenatpmp(&natpmp);\n+        return;\n+    }\n+\n+    if (fDiscover) {\n+        r = sendpublicaddressrequest(&natpmp);\n+        if (r < 0) {\n+            LogPrintf(\"NAT-PMP: sendpublicaddressrequest() failed with %d error.\\n\", r);\n+        } else {\n+            do {\n+                r = readnatpmpresponseorretry(&natpmp, &response);\n+            } while (r == NATPMP_TRYAGAIN);\n+            if (r < 0 || response.type != NATPMP_RESPTYPE_PUBLICADDRESS) {\n+                LogPrintf(\"NAT-PMP: readnatpmpresponseorretry() for public address failed with %d error.\\n\", r);\n+            } else {\n+                const char* public_address = inet_ntoa(response.pnu.publicaddress.addr);\n+                if (public_address[0]) {\n+                    CNetAddr resolved;\n+                    if (LookupHost(public_address, resolved, false)) {\n+                        LogPrintf(\"NAT-PMP: public address = %s\\n\", resolved.ToString());\n+                        AddLocal(resolved, LOCAL_MAPPED);\n+                    }\n+                } else {\n+                    LogPrintf(\"NAT-PMP: sendpublicaddressrequest() failed.\\n\");\n+                }\n+            }\n+        }\n+    }\n+\n+    const uint16_t port = GetListenPort();\n+    do {\n+        r = sendnewportmappingrequest(&natpmp, NATPMP_PROTOCOL_TCP, port, port, 3600 /*seconds*/);\n+        if (r < 0) {\n+            LogPrintf(\"NAT-PMP: sendnewportmappingrequest() failed with %d error.\\n\", r);\n+            break;\n+        }\n+\n+        do {\n+            r = readnatpmpresponseorretry(&natpmp, &response);\n+        } while (r == NATPMP_TRYAGAIN);\n+        if (r < 0 || response.type != NATPMP_RESPTYPE_TCPPORTMAPPING) {\n+            LogPrintf(\"NAT-PMP: readnatpmpresponseorretry() for port mapping failed with %d error.\\n\", r);\n+        } else {\n+            auto pm = response.pnu.newportmapping;\n+            if (port == pm.privateport && port == pm.mappedpublicport && pm.lifetime > 0) {\n+                LogPrintf(\"NAT-PMP: port mapping successful.\\n\");\n+            } else {\n+                LogPrintf(\"NAT-PMP: sendnewportmappingrequest() failed.\\n\");\n+            }\n+        }\n+\n+    } while (g_mapport_interrupt.sleep_for(std::chrono::minutes(20)));\n+\n+    r = sendnewportmappingrequest(&natpmp, NATPMP_PROTOCOL_TCP, port, port, /* remove a port mapping */ 0);\n+    if (r < 0) {\n+        LogPrintf(\"NAT-PMP: sendnewportmappingrequest(0) failed with %d error.\\n\", r);\n+    }\n+\n+    closenatpmp(&natpmp);\n+}\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+static void ThreadUpnp()\n+{\n+    std::string port = strprintf(\"%u\", GetListenPort());\n+    const char * multicastif = nullptr;\n+    const char * minissdpdpath = nullptr;\n+    struct UPNPDev * devlist = nullptr;\n+    char lanaddr[64];\n+\n+    int error = 0;\n+#if MINIUPNPC_API_VERSION < 14\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, &error);\n+#else\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, 2, &error);\n+#endif\n+\n+    struct UPNPUrls urls;\n+    struct IGDdatas data;\n+    int r;\n+\n+    r = UPNP_GetValidIGD(devlist, &urls, &data, lanaddr, sizeof(lanaddr));\n+    if (r == 1)\n+    {\n+        if (fDiscover) {\n+            char externalIPAddress[40];\n+            r = UPNP_GetExternalIPAddress(urls.controlURL, data.first.servicetype, externalIPAddress);\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                LogPrintf(\"UPnP: GetExternalIPAddress() returned %d\\n\", r);\n+            } else {\n+                if (externalIPAddress[0]) {\n+                    CNetAddr resolved;\n+                    if (LookupHost(externalIPAddress, resolved, false)) {\n+                        LogPrintf(\"UPnP: ExternalIPAddress = %s\\n\", resolved.ToString());\n+                        AddLocal(resolved, LOCAL_MAPPED);\n+                    }\n+                } else {\n+                    LogPrintf(\"UPnP: GetExternalIPAddress failed.\\n\");\n+                }\n+            }\n+        }\n+\n+        std::string strDesc = PACKAGE_NAME \" \" + FormatFullVersion();\n+\n+        do {\n+            r = UPNP_AddPortMapping(urls.controlURL, data.first.servicetype, port.c_str(), port.c_str(), lanaddr, strDesc.c_str(), \"TCP\", 0, \"0\");\n+\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                LogPrintf(\"AddPortMapping(%s, %s, %s) failed with code %d (%s)\\n\", port, port, lanaddr, r, strupnperror(r));\n+            } else {\n+                LogPrintf(\"UPnP Port Mapping successful.\\n\");\n+            }\n+        } while (g_mapport_interrupt.sleep_for(std::chrono::minutes(20)));\n+\n+        r = UPNP_DeletePortMapping(urls.controlURL, data.first.servicetype, port.c_str(), \"TCP\", 0);\n+        LogPrintf(\"UPNP_DeletePortMapping() returned: %d\\n\", r);\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        FreeUPNPUrls(&urls);\n+    } else {\n+        LogPrintf(\"No valid UPnP IGDs found\\n\");\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        if (r != 0)\n+            FreeUPNPUrls(&urls);\n+    }\n+}\n+#endif // #ifdef USE_UPNP\n+\n+void StartMapPort(MapPort proto)\n+{\n+    if (!g_mapport_thread.joinable()) {\n+        assert(!g_mapport_interrupt);\n+        switch (proto) {\n+        case MapPort::NAT_PMP: {\n+#ifdef USE_NATPMP\n+            g_mapport_thread = std::thread((std::bind(&TraceThread<void (*)()>, \"natpmp\", &ThreadNatpmp)));\n+#endif // #ifdef USE_NATPMP\n+            return;\n+        }\n+        case MapPort::UPNP: {\n+#ifdef USE_UPNP\n+            g_mapport_thread = std::thread((std::bind(&TraceThread<void (*)()>, \"upnp\", &ThreadUpnp)));",
      "path": "src/mapport.cpp",
      "position": null,
      "original_position": 199,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "c7e90ca40ad9b7c66f3429b792435e9279ceca6b",
      "in_reply_to_id": 378006285,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Addressed in the latest push.",
      "created_at": "2020-02-16T16:00:20Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r379913637",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379913637"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 242,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379960033",
      "pull_request_review_id": 359457316,
      "id": 379960033,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTk2MDAzMw==",
      "diff_hunk": "@@ -438,15 +439,24 @@ void SetupServerArgs()\n     gArgs.AddArg(\"-torcontrol=<ip>:<port>\", strprintf(\"Tor control port to use if onion listening enabled (default: %s)\", DEFAULT_TOR_CONTROL), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     gArgs.AddArg(\"-torpassword=<pass>\", \"Tor control port password (default: empty)\", ArgsManager::ALLOW_ANY | ArgsManager::SENSITIVE, OptionsCategory::CONNECTION);\n     gArgs.AddArg(\"-asmap=<file>\", \"Specify asn mapping used for bucketing of the peers. Path should be relative to the -datadir path.\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n+#ifdef USE_NATPMP\n+#if USE_NATPMP\n+    gArgs.AddArg(\"-natpmp\", \"Use NAT-PMP to map the listening port (default: 1 when listening and no -proxy)\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n+#else\n+    gArgs.AddArg(\"-natpmp\", \"Use NAT-PMP to map the listening port (default: 0)\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n+#endif\n+#else\n+    hidden_args.emplace_back(\"-natpmp\");\n+#endif // #ifdef USE_NATPMP\n #ifdef USE_UPNP\n #if USE_UPNP\n     gArgs.AddArg(\"-upnp\", \"Use UPnP to map the listening port (default: 1 when listening and no -proxy)\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n #else\n-    gArgs.AddArg(\"-upnp\", strprintf(\"Use UPnP to map the listening port (default: %u)\", 0), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n+    gArgs.AddArg(\"-upnp\", \"Use UPnP to map the listening port (default: 0)\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 49,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "dc228d6db8d2e9406d6d6e0eb04e37940b1ffb82",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Prefer to leave this alone (and use `%s` in the new options)",
      "created_at": "2020-02-17T02:09:25Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r379960033",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379960033"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 455,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/380002423",
      "pull_request_review_id": 359509336,
      "id": 380002423,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDAwMjQyMw==",
      "diff_hunk": "@@ -438,15 +439,24 @@ void SetupServerArgs()\n     gArgs.AddArg(\"-torcontrol=<ip>:<port>\", strprintf(\"Tor control port to use if onion listening enabled (default: %s)\", DEFAULT_TOR_CONTROL), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     gArgs.AddArg(\"-torpassword=<pass>\", \"Tor control port password (default: empty)\", ArgsManager::ALLOW_ANY | ArgsManager::SENSITIVE, OptionsCategory::CONNECTION);\n     gArgs.AddArg(\"-asmap=<file>\", \"Specify asn mapping used for bucketing of the peers. Path should be relative to the -datadir path.\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n+#ifdef USE_NATPMP\n+#if USE_NATPMP\n+    gArgs.AddArg(\"-natpmp\", \"Use NAT-PMP to map the listening port (default: 1 when listening and no -proxy)\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n+#else\n+    gArgs.AddArg(\"-natpmp\", \"Use NAT-PMP to map the listening port (default: 0)\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n+#endif\n+#else\n+    hidden_args.emplace_back(\"-natpmp\");\n+#endif // #ifdef USE_NATPMP\n #ifdef USE_UPNP\n #if USE_UPNP\n     gArgs.AddArg(\"-upnp\", \"Use UPnP to map the listening port (default: 1 when listening and no -proxy)\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n #else\n-    gArgs.AddArg(\"-upnp\", strprintf(\"Use UPnP to map the listening port (default: %u)\", 0), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n+    gArgs.AddArg(\"-upnp\", \"Use UPnP to map the listening port (default: 0)\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 49,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "dc228d6db8d2e9406d6d6e0eb04e37940b1ffb82",
      "in_reply_to_id": 379960033,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Agree. It will be fixed.",
      "created_at": "2020-02-17T06:25:09Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r380002423",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/380002423"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 455,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/380289414",
      "pull_request_review_id": 359871878,
      "id": 380289414,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI4OTQxNA==",
      "diff_hunk": "@@ -438,15 +439,24 @@ void SetupServerArgs()\n     gArgs.AddArg(\"-torcontrol=<ip>:<port>\", strprintf(\"Tor control port to use if onion listening enabled (default: %s)\", DEFAULT_TOR_CONTROL), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     gArgs.AddArg(\"-torpassword=<pass>\", \"Tor control port password (default: empty)\", ArgsManager::ALLOW_ANY | ArgsManager::SENSITIVE, OptionsCategory::CONNECTION);\n     gArgs.AddArg(\"-asmap=<file>\", \"Specify asn mapping used for bucketing of the peers. Path should be relative to the -datadir path.\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n+#ifdef USE_NATPMP\n+#if USE_NATPMP\n+    gArgs.AddArg(\"-natpmp\", \"Use NAT-PMP to map the listening port (default: 1 when listening and no -proxy)\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n+#else\n+    gArgs.AddArg(\"-natpmp\", \"Use NAT-PMP to map the listening port (default: 0)\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n+#endif\n+#else\n+    hidden_args.emplace_back(\"-natpmp\");\n+#endif // #ifdef USE_NATPMP\n #ifdef USE_UPNP\n #if USE_UPNP\n     gArgs.AddArg(\"-upnp\", \"Use UPnP to map the listening port (default: 1 when listening and no -proxy)\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n #else\n-    gArgs.AddArg(\"-upnp\", strprintf(\"Use UPnP to map the listening port (default: %u)\", 0), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n+    gArgs.AddArg(\"-upnp\", \"Use UPnP to map the listening port (default: 0)\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 49,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "dc228d6db8d2e9406d6d6e0eb04e37940b1ffb82",
      "in_reply_to_id": 379960033,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2020-02-17T16:56:03Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r380289414",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/380289414"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 455,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/380352723",
      "pull_request_review_id": 359949105,
      "id": 380352723,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM1MjcyMw==",
      "diff_hunk": "@@ -1764,9 +1778,17 @@ bool AppInitMain(NodeContext& node)\n \n     Discover();\n \n-    // Map ports with UPnP\n-    if (gArgs.GetBoolArg(\"-upnp\", DEFAULT_UPNP)) {\n-        StartMapPort();\n+    // Map ports with NAT-PMP (preferable) or UPnP.\n+    {\n+        const bool natpmp = gArgs.GetBoolArg(\"-natpmp\", DEFAULT_NATPMP);\n+        const bool upnp = gArgs.GetBoolArg(\"-upnp\", DEFAULT_UPNP);\n+        if (natpmp && upnp) {\n+            StartMapPort(MapPort::ANY_AVAILABLE);",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 89,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "2d5d98ce0aa07401c6771731f4e27634629f197c",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Suggest just making this `StartMapPort(bool use_upnp, bool use_natpmp)`",
      "created_at": "2020-02-17T20:16:34Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r380352723",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/380352723"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1786,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/380352965",
      "pull_request_review_id": 359949105,
      "id": 380352965,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM1Mjk2NQ==",
      "diff_hunk": "@@ -350,9 +362,13 @@ bool OptionsModel::setData(const QModelIndex & index, const QVariant & value, in\n             fMinimizeToTray = value.toBool();\n             settings.setValue(\"fMinimizeToTray\", fMinimizeToTray);\n             break;\n+        case MapPortNatpmp: // core option - can be changed on-the-fly\n+            settings.setValue(\"fUseNatpmp\", value.toBool());\n+            m_node.mapPort(value.toBool(), MapPort::NAT_PMP);",
      "path": "src/qt/optionsmodel.cpp",
      "position": null,
      "original_position": 45,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "2d5d98ce0aa07401c6771731f4e27634629f197c",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This logic won't work if the thread is already running...",
      "created_at": "2020-02-17T20:17:38Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r380352965",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/380352965"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 367,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/380362646",
      "pull_request_review_id": 359961465,
      "id": 380362646,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM2MjY0Ng==",
      "diff_hunk": "@@ -438,6 +439,15 @@ void SetupServerArgs()\n     gArgs.AddArg(\"-torcontrol=<ip>:<port>\", strprintf(\"Tor control port to use if onion listening enabled (default: %s)\", DEFAULT_TOR_CONTROL), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     gArgs.AddArg(\"-torpassword=<pass>\", \"Tor control port password (default: empty)\", ArgsManager::ALLOW_ANY | ArgsManager::SENSITIVE, OptionsCategory::CONNECTION);\n     gArgs.AddArg(\"-asmap=<file>\", \"Specify asn mapping used for bucketing of the peers. Path should be relative to the -datadir path.\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n+#ifdef USE_NATPMP\n+#if USE_NATPMP\n+    gArgs.AddArg(\"-natpmp\", \"Use NAT-PMP to map the listening port (default: 1 when listening and no -proxy)\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n+#else\n+    gArgs.AddArg(\"-natpmp\", strprintf(\"Use NAT-PMP to map the listening port (default: %u)\", 0), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 39,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "2d5d98ce0aa07401c6771731f4e27634629f197c",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`%s` > `%u`",
      "created_at": "2020-02-17T20:54:31Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r380362646",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/380362646"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 446,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/380371070",
      "pull_request_review_id": 359971764,
      "id": 380371070,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM3MTA3MA==",
      "diff_hunk": "@@ -1764,9 +1778,17 @@ bool AppInitMain(NodeContext& node)\n \n     Discover();\n \n-    // Map ports with UPnP\n-    if (gArgs.GetBoolArg(\"-upnp\", DEFAULT_UPNP)) {\n-        StartMapPort();\n+    // Map ports with NAT-PMP (preferable) or UPnP.\n+    {\n+        const bool natpmp = gArgs.GetBoolArg(\"-natpmp\", DEFAULT_NATPMP);\n+        const bool upnp = gArgs.GetBoolArg(\"-upnp\", DEFAULT_UPNP);\n+        if (natpmp && upnp) {\n+            StartMapPort(MapPort::ANY_AVAILABLE);",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 89,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "2d5d98ce0aa07401c6771731f4e27634629f197c",
      "in_reply_to_id": 380352723,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Or better yet: Just check gArgs inside StartMapPort...",
      "created_at": "2020-02-17T21:26:59Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r380371070",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/380371070"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1786,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/380525759",
      "pull_request_review_id": 360151983,
      "id": 380525759,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDUyNTc1OQ==",
      "diff_hunk": "@@ -350,9 +362,13 @@ bool OptionsModel::setData(const QModelIndex & index, const QVariant & value, in\n             fMinimizeToTray = value.toBool();\n             settings.setValue(\"fMinimizeToTray\", fMinimizeToTray);\n             break;\n+        case MapPortNatpmp: // core option - can be changed on-the-fly\n+            settings.setValue(\"fUseNatpmp\", value.toBool());\n+            m_node.mapPort(value.toBool(), MapPort::NAT_PMP);",
      "path": "src/qt/optionsmodel.cpp",
      "position": null,
      "original_position": 45,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "2d5d98ce0aa07401c6771731f4e27634629f197c",
      "in_reply_to_id": 380352965,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Going to fix it.",
      "created_at": "2020-02-18T08:42:29Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r380525759",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/380525759"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 367,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/380527819",
      "pull_request_review_id": 360154539,
      "id": 380527819,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDUyNzgxOQ==",
      "diff_hunk": "@@ -438,6 +439,15 @@ void SetupServerArgs()\n     gArgs.AddArg(\"-torcontrol=<ip>:<port>\", strprintf(\"Tor control port to use if onion listening enabled (default: %s)\", DEFAULT_TOR_CONTROL), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     gArgs.AddArg(\"-torpassword=<pass>\", \"Tor control port password (default: empty)\", ArgsManager::ALLOW_ANY | ArgsManager::SENSITIVE, OptionsCategory::CONNECTION);\n     gArgs.AddArg(\"-asmap=<file>\", \"Specify asn mapping used for bucketing of the peers. Path should be relative to the -datadir path.\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n+#ifdef USE_NATPMP\n+#if USE_NATPMP\n+    gArgs.AddArg(\"-natpmp\", \"Use NAT-PMP to map the listening port (default: 1 when listening and no -proxy)\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n+#else\n+    gArgs.AddArg(\"-natpmp\", strprintf(\"Use NAT-PMP to map the listening port (default: %u)\", 0), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 39,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "2d5d98ce0aa07401c6771731f4e27634629f197c",
      "in_reply_to_id": 380362646,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> `%s` > `%u`\r\n\r\nWhat is the rationale? We already use the `%u` specifier for unsigned integers in `tfm::format()`.",
      "created_at": "2020-02-18T08:46:44Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r380527819",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/380527819"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 446,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/380961736",
      "pull_request_review_id": 360705700,
      "id": 380961736,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDk2MTczNg==",
      "diff_hunk": "@@ -350,9 +362,13 @@ bool OptionsModel::setData(const QModelIndex & index, const QVariant & value, in\n             fMinimizeToTray = value.toBool();\n             settings.setValue(\"fMinimizeToTray\", fMinimizeToTray);\n             break;\n+        case MapPortNatpmp: // core option - can be changed on-the-fly\n+            settings.setValue(\"fUseNatpmp\", value.toBool());\n+            m_node.mapPort(value.toBool(), MapPort::NAT_PMP);",
      "path": "src/qt/optionsmodel.cpp",
      "position": null,
      "original_position": 45,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "2d5d98ce0aa07401c6771731f4e27634629f197c",
      "in_reply_to_id": 380352965,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed in the latest push.",
      "created_at": "2020-02-18T22:01:34Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r380961736",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/380961736"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 367,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/380961933",
      "pull_request_review_id": 360705933,
      "id": 380961933,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDk2MTkzMw==",
      "diff_hunk": "@@ -1764,9 +1778,17 @@ bool AppInitMain(NodeContext& node)\n \n     Discover();\n \n-    // Map ports with UPnP\n-    if (gArgs.GetBoolArg(\"-upnp\", DEFAULT_UPNP)) {\n-        StartMapPort();\n+    // Map ports with NAT-PMP (preferable) or UPnP.\n+    {\n+        const bool natpmp = gArgs.GetBoolArg(\"-natpmp\", DEFAULT_NATPMP);\n+        const bool upnp = gArgs.GetBoolArg(\"-upnp\", DEFAULT_UPNP);\n+        if (natpmp && upnp) {\n+            StartMapPort(MapPort::ANY_AVAILABLE);",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 89,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "2d5d98ce0aa07401c6771731f4e27634629f197c",
      "in_reply_to_id": 380352723,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Reworked in the latest push.",
      "created_at": "2020-02-18T22:01:57Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r380961933",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/380961933"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1786,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/381008856",
      "pull_request_review_id": 360762594,
      "id": 381008856,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTAwODg1Ng==",
      "diff_hunk": "@@ -438,6 +439,15 @@ void SetupServerArgs()\n     gArgs.AddArg(\"-torcontrol=<ip>:<port>\", strprintf(\"Tor control port to use if onion listening enabled (default: %s)\", DEFAULT_TOR_CONTROL), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     gArgs.AddArg(\"-torpassword=<pass>\", \"Tor control port password (default: empty)\", ArgsManager::ALLOW_ANY | ArgsManager::SENSITIVE, OptionsCategory::CONNECTION);\n     gArgs.AddArg(\"-asmap=<file>\", \"Specify asn mapping used for bucketing of the peers. Path should be relative to the -datadir path.\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n+#ifdef USE_NATPMP\n+#if USE_NATPMP\n+    gArgs.AddArg(\"-natpmp\", \"Use NAT-PMP to map the listening port (default: 1 when listening and no -proxy)\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n+#else\n+    gArgs.AddArg(\"-natpmp\", strprintf(\"Use NAT-PMP to map the listening port (default: %u)\", 0), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 39,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "2d5d98ce0aa07401c6771731f4e27634629f197c",
      "in_reply_to_id": 380362646,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`%s` doesn't care what type the value is.\r\n\r\nYou can use the same format string above, with a value of `\"1 when listening and no -proxy\"`",
      "created_at": "2020-02-19T00:08:21Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r381008856",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/381008856"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 446,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/381514731",
      "pull_request_review_id": 361399235,
      "id": 381514731,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTUxNDczMQ==",
      "diff_hunk": "@@ -438,6 +439,15 @@ void SetupServerArgs()\n     gArgs.AddArg(\"-torcontrol=<ip>:<port>\", strprintf(\"Tor control port to use if onion listening enabled (default: %s)\", DEFAULT_TOR_CONTROL), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     gArgs.AddArg(\"-torpassword=<pass>\", \"Tor control port password (default: empty)\", ArgsManager::ALLOW_ANY | ArgsManager::SENSITIVE, OptionsCategory::CONNECTION);\n     gArgs.AddArg(\"-asmap=<file>\", \"Specify asn mapping used for bucketing of the peers. Path should be relative to the -datadir path.\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n+#ifdef USE_NATPMP\n+#if USE_NATPMP\n+    gArgs.AddArg(\"-natpmp\", \"Use NAT-PMP to map the listening port (default: 1 when listening and no -proxy)\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n+#else\n+    gArgs.AddArg(\"-natpmp\", strprintf(\"Use NAT-PMP to map the listening port (default: %u)\", 0), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 39,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "2d5d98ce0aa07401c6771731f4e27634629f197c",
      "in_reply_to_id": 380362646,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in the latest push.",
      "created_at": "2020-02-19T20:05:53Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r381514731",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/381514731"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 446,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/381553831",
      "pull_request_review_id": 361448941,
      "id": 381553831,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTU1MzgzMQ==",
      "diff_hunk": "@@ -344,15 +356,19 @@ bool OptionsModel::setData(const QModelIndex & index, const QVariant & value, in\n         case HideTrayIcon:\n             fHideTrayIcon = value.toBool();\n             settings.setValue(\"fHideTrayIcon\", fHideTrayIcon);\n-    \t\tQ_EMIT hideTrayIconChanged(fHideTrayIcon);\n+            Q_EMIT hideTrayIconChanged(fHideTrayIcon);\n             break;\n         case MinimizeToTray:\n             fMinimizeToTray = value.toBool();\n             settings.setValue(\"fMinimizeToTray\", fMinimizeToTray);\n             break;\n+        case MapPortNatpmp: // core option - can be changed on-the-fly\n+            settings.setValue(\"fUseNatpmp\", value.toBool());\n+            m_node.mapPort(value.toBool(), settings.value(\"fUseUPnP\").toBool());",
      "path": "src/qt/optionsmodel.cpp",
      "position": null,
      "original_position": 52,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "03e2733be1772ef69caf34e84c7b400f64a8ea9f",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This logic breaks the \"command line overrides GUI options\" stuff above (see `addOverriddenOption`)...\r\n\r\nNot really sure what the best solution here is.",
      "created_at": "2020-02-19T21:26:25Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r381553831",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/381553831"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 367,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/381557545",
      "pull_request_review_id": 361453595,
      "id": 381557545,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTU1NzU0NQ==",
      "diff_hunk": "@@ -0,0 +1,320 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <mapport.h>\n+\n+#include <clientversion.h>\n+#include <logging.h>\n+#include <net.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <threadinterrupt.h>\n+#include <util/system.h>\n+\n+#ifdef USE_NATPMP\n+#include <natpmp.h>\n+#ifdef WIN32\n+#include <winsock2.h>\n+#else\n+#include <netinet/in.h>\n+#endif // #ifdef WIN32\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+#include <miniupnpc/miniupnpc.h>\n+#include <miniupnpc/upnpcommands.h>\n+#include <miniupnpc/upnperrors.h>\n+// The minimum supported miniUPnPc API version is set to 10. This keeps compatibility\n+// with Ubuntu 16.04 LTS and Debian 8 libminiupnpc-dev packages.\n+static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\");\n+#endif // #ifdef USE_UPNP\n+\n+#include <cassert>\n+#include <chrono>\n+#include <functional>\n+#include <string>\n+#include <thread>\n+\n+#if defined(USE_NATPMP) || defined(USE_UPNP)\n+static CThreadInterrupt g_mapport_interrupt;\n+static std::thread g_mapport_thread;\n+static MapPortProto g_mapport_current_proto = MapPortProto::NONE;\n+static unsigned int g_mapport_target_proto = g_mapport_current_proto;\n+static uint16_t g_mapport_external_port = 0;\n+static constexpr auto PORT_MAPPING_REANNOUNCE_PERIOD = std::chrono::minutes(20);\n+static constexpr auto PORT_MAPPING_RETRY_PERIOD = std::chrono::minutes(5);\n+\n+#ifdef USE_NATPMP\n+static bool NatpmpInit(natpmp_t* natpmp)\n+{\n+    const int r_init = initnatpmp(natpmp, /* detect gateway automatically */ 0, /* forced gateway - NOT APPLIED*/ 0);\n+    if (r_init == 0) return true;\n+    LogPrintf(\"NAT-PMP: initnatpmp() failed with %d error.\\n\", r_init);\n+    return false;\n+}\n+\n+static bool NatpmpDiscover(natpmp_t* natpmp, struct in_addr& external_ipv4_addr)\n+{\n+    const int r_send = sendpublicaddressrequest(natpmp);\n+    if (r_send == 2 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            external_ipv4_addr = response.pnu.publicaddress.addr;\n+            return true;\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"NAT-PMP: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"NAT-PMP: readnatpmpresponseorretry() for public address failed with %d error.\\n\", r_read);\n+        }\n+\n+    } else {\n+        LogPrintf(\"NAT-PMP: sendpublicaddressrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool NatpmpMapping(natpmp_t* natpmp, const struct in_addr& external_ipv4_addr, uint16_t private_port, bool& external_ip_discovered)\n+{\n+    const uint16_t suggested_external_port = g_mapport_external_port ? g_mapport_external_port : private_port;\n+    const int r_send = sendnewportmappingrequest(natpmp, NATPMP_PROTOCOL_TCP, private_port, suggested_external_port, 3600 /*seconds*/);\n+    if (r_send == 12 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            auto pm = response.pnu.newportmapping;\n+            if (private_port == pm.privateport && pm.lifetime > 0) {\n+                g_mapport_current_proto = MapPortProto::NAT_PMP;\n+                g_mapport_external_port = pm.mappedpublicport;\n+                const CService external{external_ipv4_addr, pm.mappedpublicport};\n+                if (!external_ip_discovered && fDiscover) {\n+                    AddLocal(external, LOCAL_MAPPED);\n+                    external_ip_discovered = true;\n+                }\n+\n+                LogPrintf(\"NAT-PMP: Port mapping successful. External address = %s\\n\", external.ToString());\n+                return true;\n+            } else {\n+                LogPrintf(\"NAT-PMP: Port mapping failed.\\n\");\n+            }\n+\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"NAT-PMP: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"NAT-PMP: readnatpmpresponseorretry() for port mapping failed with %d error.\\n\", r_read);\n+        }\n+\n+    } else {\n+        LogPrintf(\"NAT-PMP: sendnewportmappingrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool ThreadNatpmp()\n+{\n+    bool ret = false;\n+    natpmp_t natpmp;\n+    struct in_addr external_ipv4_addr;\n+    if (NatpmpInit(&natpmp) && NatpmpDiscover(&natpmp, external_ipv4_addr)) {\n+        bool external_ip_discovered = false;\n+        const uint16_t private_port = GetListenPort();\n+        do {\n+            ret = NatpmpMapping(&natpmp, external_ipv4_addr, private_port, external_ip_discovered);\n+        } while (ret && g_mapport_interrupt.sleep_for(PORT_MAPPING_REANNOUNCE_PERIOD));\n+\n+        const int r_send = sendnewportmappingrequest(&natpmp, NATPMP_PROTOCOL_TCP, private_port, g_mapport_external_port, /* remove a port mapping */ 0);\n+        g_mapport_external_port = 0;\n+        if (r_send == 12 /* OK */) {\n+            LogPrintf(\"NAT-PMP: Port mapping removed successfully.\\n\");\n+        } else {\n+            LogPrintf(\"NAT-PMP: sendnewportmappingrequest(0) failed with %d error.\\n\", r_send);\n+        }\n+    }\n+\n+    closenatpmp(&natpmp);\n+    return ret;\n+}\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+static bool ThreadUpnp()\n+{\n+    bool ret = false;\n+    std::string port = strprintf(\"%u\", GetListenPort());\n+    const char * multicastif = nullptr;\n+    const char * minissdpdpath = nullptr;\n+    struct UPNPDev * devlist = nullptr;\n+    char lanaddr[64];\n+\n+    int error = 0;\n+#if MINIUPNPC_API_VERSION < 14\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, &error);\n+#else\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, 2, &error);\n+#endif\n+\n+    struct UPNPUrls urls;\n+    struct IGDdatas data;\n+    int r;\n+\n+    r = UPNP_GetValidIGD(devlist, &urls, &data, lanaddr, sizeof(lanaddr));\n+    if (r == 1)\n+    {\n+        if (fDiscover) {\n+            char externalIPAddress[40];\n+            r = UPNP_GetExternalIPAddress(urls.controlURL, data.first.servicetype, externalIPAddress);\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                LogPrintf(\"UPnP: GetExternalIPAddress() returned %d\\n\", r);\n+            } else {\n+                if (externalIPAddress[0]) {\n+                    CNetAddr resolved;\n+                    if (LookupHost(externalIPAddress, resolved, false)) {\n+                        LogPrintf(\"UPnP: ExternalIPAddress = %s\\n\", resolved.ToString());\n+                        AddLocal(resolved, LOCAL_MAPPED);\n+                    }\n+                } else {\n+                    LogPrintf(\"UPnP: GetExternalIPAddress failed.\\n\");\n+                }\n+            }\n+        }\n+\n+        std::string strDesc = PACKAGE_NAME \" \" + FormatFullVersion();\n+\n+        do {\n+            r = UPNP_AddPortMapping(urls.controlURL, data.first.servicetype, port.c_str(), port.c_str(), lanaddr, strDesc.c_str(), \"TCP\", 0, \"0\");\n+\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                ret = false;\n+                LogPrintf(\"AddPortMapping(%s, %s, %s) failed with code %d (%s)\\n\", port, port, lanaddr, r, strupnperror(r));\n+                break;\n+            } else {\n+                ret = true;\n+                g_mapport_current_proto = MapPortProto::UPNP;\n+                LogPrintf(\"UPnP Port Mapping successful.\\n\");\n+            }\n+        } while (g_mapport_interrupt.sleep_for(PORT_MAPPING_REANNOUNCE_PERIOD));\n+\n+        r = UPNP_DeletePortMapping(urls.controlURL, data.first.servicetype, port.c_str(), \"TCP\", 0);\n+        LogPrintf(\"UPNP_DeletePortMapping() returned: %d\\n\", r);\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        FreeUPNPUrls(&urls);\n+    } else {\n+        LogPrintf(\"No valid UPnP IGDs found\\n\");\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        if (r != 0)\n+            FreeUPNPUrls(&urls);\n+    }\n+\n+    return ret;\n+}\n+#endif // #ifdef USE_UPNP\n+\n+static void ThreadMapPort()\n+{\n+    bool ok;\n+    do {\n+        ok = false;\n+\n+#ifdef USE_NATPMP\n+        if (g_mapport_target_proto & MapPortProto::NAT_PMP) {\n+            ok = ThreadNatpmp();\n+            if (ok) continue;\n+        }\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+        if (g_mapport_target_proto & MapPortProto::UPNP) {\n+            ok = ThreadUpnp();\n+            if (ok) continue;\n+        }\n+#endif // #ifdef USE_UPNP\n+\n+        if (g_mapport_target_proto == MapPortProto::NONE) {\n+            g_mapport_current_proto = MapPortProto::NONE;\n+            return;\n+        }\n+\n+    } while (ok || g_mapport_interrupt.sleep_for(PORT_MAPPING_RETRY_PERIOD));\n+}\n+\n+void StartMapPort(bool use_natpmp, bool use_upnp)\n+{\n+    if (use_natpmp) {\n+        g_mapport_target_proto |= MapPortProto::NAT_PMP;\n+    } else {\n+        g_mapport_target_proto &= ~MapPortProto::NAT_PMP;\n+    }\n+\n+    if (use_upnp) {\n+        g_mapport_target_proto |= MapPortProto::UPNP;\n+    } else {\n+        g_mapport_target_proto &= ~MapPortProto::UPNP;\n+    }\n+\n+    if (g_mapport_current_proto == MapPortProto::NONE) {\n+        if (g_mapport_target_proto == MapPortProto::NONE) {\n+            return;\n+        }\n+    } else if (g_mapport_target_proto & g_mapport_current_proto) {",
      "path": "src/mapport.cpp",
      "position": null,
      "original_position": 273,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "03e2733be1772ef69caf34e84c7b400f64a8ea9f",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This won't work if we used to have both protocols enabled, are currently using UPnP, but want to disable UPnP.",
      "created_at": "2020-02-19T21:33:54Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r381557545",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/381557545"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 275,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/381558152",
      "pull_request_review_id": 361454311,
      "id": 381558152,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTU1ODE1Mg==",
      "diff_hunk": "@@ -0,0 +1,320 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <mapport.h>\n+\n+#include <clientversion.h>\n+#include <logging.h>\n+#include <net.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <threadinterrupt.h>\n+#include <util/system.h>\n+\n+#ifdef USE_NATPMP\n+#include <natpmp.h>\n+#ifdef WIN32\n+#include <winsock2.h>\n+#else\n+#include <netinet/in.h>\n+#endif // #ifdef WIN32\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+#include <miniupnpc/miniupnpc.h>\n+#include <miniupnpc/upnpcommands.h>\n+#include <miniupnpc/upnperrors.h>\n+// The minimum supported miniUPnPc API version is set to 10. This keeps compatibility\n+// with Ubuntu 16.04 LTS and Debian 8 libminiupnpc-dev packages.\n+static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\");\n+#endif // #ifdef USE_UPNP\n+\n+#include <cassert>\n+#include <chrono>\n+#include <functional>\n+#include <string>\n+#include <thread>\n+\n+#if defined(USE_NATPMP) || defined(USE_UPNP)\n+static CThreadInterrupt g_mapport_interrupt;\n+static std::thread g_mapport_thread;\n+static MapPortProto g_mapport_current_proto = MapPortProto::NONE;\n+static unsigned int g_mapport_target_proto = g_mapport_current_proto;\n+static uint16_t g_mapport_external_port = 0;\n+static constexpr auto PORT_MAPPING_REANNOUNCE_PERIOD = std::chrono::minutes(20);\n+static constexpr auto PORT_MAPPING_RETRY_PERIOD = std::chrono::minutes(5);\n+\n+#ifdef USE_NATPMP\n+static bool NatpmpInit(natpmp_t* natpmp)\n+{\n+    const int r_init = initnatpmp(natpmp, /* detect gateway automatically */ 0, /* forced gateway - NOT APPLIED*/ 0);\n+    if (r_init == 0) return true;\n+    LogPrintf(\"NAT-PMP: initnatpmp() failed with %d error.\\n\", r_init);\n+    return false;\n+}\n+\n+static bool NatpmpDiscover(natpmp_t* natpmp, struct in_addr& external_ipv4_addr)\n+{\n+    const int r_send = sendpublicaddressrequest(natpmp);\n+    if (r_send == 2 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            external_ipv4_addr = response.pnu.publicaddress.addr;\n+            return true;\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"NAT-PMP: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"NAT-PMP: readnatpmpresponseorretry() for public address failed with %d error.\\n\", r_read);\n+        }\n+\n+    } else {\n+        LogPrintf(\"NAT-PMP: sendpublicaddressrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool NatpmpMapping(natpmp_t* natpmp, const struct in_addr& external_ipv4_addr, uint16_t private_port, bool& external_ip_discovered)\n+{\n+    const uint16_t suggested_external_port = g_mapport_external_port ? g_mapport_external_port : private_port;\n+    const int r_send = sendnewportmappingrequest(natpmp, NATPMP_PROTOCOL_TCP, private_port, suggested_external_port, 3600 /*seconds*/);\n+    if (r_send == 12 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            auto pm = response.pnu.newportmapping;\n+            if (private_port == pm.privateport && pm.lifetime > 0) {\n+                g_mapport_current_proto = MapPortProto::NAT_PMP;\n+                g_mapport_external_port = pm.mappedpublicport;\n+                const CService external{external_ipv4_addr, pm.mappedpublicport};\n+                if (!external_ip_discovered && fDiscover) {\n+                    AddLocal(external, LOCAL_MAPPED);\n+                    external_ip_discovered = true;\n+                }\n+\n+                LogPrintf(\"NAT-PMP: Port mapping successful. External address = %s\\n\", external.ToString());\n+                return true;\n+            } else {\n+                LogPrintf(\"NAT-PMP: Port mapping failed.\\n\");\n+            }\n+\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"NAT-PMP: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"NAT-PMP: readnatpmpresponseorretry() for port mapping failed with %d error.\\n\", r_read);\n+        }\n+\n+    } else {\n+        LogPrintf(\"NAT-PMP: sendnewportmappingrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool ThreadNatpmp()\n+{\n+    bool ret = false;\n+    natpmp_t natpmp;\n+    struct in_addr external_ipv4_addr;\n+    if (NatpmpInit(&natpmp) && NatpmpDiscover(&natpmp, external_ipv4_addr)) {\n+        bool external_ip_discovered = false;\n+        const uint16_t private_port = GetListenPort();\n+        do {\n+            ret = NatpmpMapping(&natpmp, external_ipv4_addr, private_port, external_ip_discovered);\n+        } while (ret && g_mapport_interrupt.sleep_for(PORT_MAPPING_REANNOUNCE_PERIOD));\n+\n+        const int r_send = sendnewportmappingrequest(&natpmp, NATPMP_PROTOCOL_TCP, private_port, g_mapport_external_port, /* remove a port mapping */ 0);\n+        g_mapport_external_port = 0;\n+        if (r_send == 12 /* OK */) {\n+            LogPrintf(\"NAT-PMP: Port mapping removed successfully.\\n\");\n+        } else {\n+            LogPrintf(\"NAT-PMP: sendnewportmappingrequest(0) failed with %d error.\\n\", r_send);\n+        }\n+    }\n+\n+    closenatpmp(&natpmp);\n+    return ret;\n+}\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+static bool ThreadUpnp()\n+{\n+    bool ret = false;\n+    std::string port = strprintf(\"%u\", GetListenPort());\n+    const char * multicastif = nullptr;\n+    const char * minissdpdpath = nullptr;\n+    struct UPNPDev * devlist = nullptr;\n+    char lanaddr[64];\n+\n+    int error = 0;\n+#if MINIUPNPC_API_VERSION < 14\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, &error);\n+#else\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, 2, &error);\n+#endif\n+\n+    struct UPNPUrls urls;\n+    struct IGDdatas data;\n+    int r;\n+\n+    r = UPNP_GetValidIGD(devlist, &urls, &data, lanaddr, sizeof(lanaddr));\n+    if (r == 1)\n+    {\n+        if (fDiscover) {\n+            char externalIPAddress[40];\n+            r = UPNP_GetExternalIPAddress(urls.controlURL, data.first.servicetype, externalIPAddress);\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                LogPrintf(\"UPnP: GetExternalIPAddress() returned %d\\n\", r);\n+            } else {\n+                if (externalIPAddress[0]) {\n+                    CNetAddr resolved;\n+                    if (LookupHost(externalIPAddress, resolved, false)) {\n+                        LogPrintf(\"UPnP: ExternalIPAddress = %s\\n\", resolved.ToString());\n+                        AddLocal(resolved, LOCAL_MAPPED);\n+                    }\n+                } else {\n+                    LogPrintf(\"UPnP: GetExternalIPAddress failed.\\n\");\n+                }\n+            }\n+        }\n+\n+        std::string strDesc = PACKAGE_NAME \" \" + FormatFullVersion();\n+\n+        do {\n+            r = UPNP_AddPortMapping(urls.controlURL, data.first.servicetype, port.c_str(), port.c_str(), lanaddr, strDesc.c_str(), \"TCP\", 0, \"0\");\n+\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                ret = false;\n+                LogPrintf(\"AddPortMapping(%s, %s, %s) failed with code %d (%s)\\n\", port, port, lanaddr, r, strupnperror(r));\n+                break;\n+            } else {\n+                ret = true;\n+                g_mapport_current_proto = MapPortProto::UPNP;\n+                LogPrintf(\"UPnP Port Mapping successful.\\n\");\n+            }\n+        } while (g_mapport_interrupt.sleep_for(PORT_MAPPING_REANNOUNCE_PERIOD));\n+\n+        r = UPNP_DeletePortMapping(urls.controlURL, data.first.servicetype, port.c_str(), \"TCP\", 0);\n+        LogPrintf(\"UPNP_DeletePortMapping() returned: %d\\n\", r);\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        FreeUPNPUrls(&urls);\n+    } else {\n+        LogPrintf(\"No valid UPnP IGDs found\\n\");\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        if (r != 0)\n+            FreeUPNPUrls(&urls);\n+    }\n+\n+    return ret;\n+}\n+#endif // #ifdef USE_UPNP\n+\n+static void ThreadMapPort()\n+{\n+    bool ok;\n+    do {\n+        ok = false;\n+\n+#ifdef USE_NATPMP\n+        if (g_mapport_target_proto & MapPortProto::NAT_PMP) {\n+            ok = ThreadNatpmp();\n+            if (ok) continue;\n+        }\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+        if (g_mapport_target_proto & MapPortProto::UPNP) {\n+            ok = ThreadUpnp();\n+            if (ok) continue;\n+        }\n+#endif // #ifdef USE_UPNP\n+\n+        if (g_mapport_target_proto == MapPortProto::NONE) {\n+            g_mapport_current_proto = MapPortProto::NONE;\n+            return;\n+        }\n+\n+    } while (ok || g_mapport_interrupt.sleep_for(PORT_MAPPING_RETRY_PERIOD));\n+}\n+\n+void StartMapPort(bool use_natpmp, bool use_upnp)\n+{\n+    if (use_natpmp) {\n+        g_mapport_target_proto |= MapPortProto::NAT_PMP;\n+    } else {\n+        g_mapport_target_proto &= ~MapPortProto::NAT_PMP;\n+    }\n+\n+    if (use_upnp) {\n+        g_mapport_target_proto |= MapPortProto::UPNP;\n+    } else {\n+        g_mapport_target_proto &= ~MapPortProto::UPNP;\n+    }\n+\n+    if (g_mapport_current_proto == MapPortProto::NONE) {\n+        if (g_mapport_target_proto == MapPortProto::NONE) {\n+            return;\n+        }\n+    } else if (g_mapport_target_proto & g_mapport_current_proto) {\n+        return;\n+    }\n+\n+    if (g_mapport_target_proto == MapPortProto::NONE) {\n+        InterruptMapPort();\n+        StopMapPort();\n+        return;\n+    }\n+\n+    if (g_mapport_thread.joinable()) {\n+        g_mapport_interrupt();",
      "path": "src/mapport.cpp",
      "position": null,
      "original_position": 284,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "03e2733be1772ef69caf34e84c7b400f64a8ea9f",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Won't this cause the thread to shut down?",
      "created_at": "2020-02-19T21:35:05Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r381558152",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/381558152"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 286,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/381558659",
      "pull_request_review_id": 361454958,
      "id": 381558659,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTU1ODY1OQ==",
      "diff_hunk": "@@ -0,0 +1,320 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <mapport.h>\n+\n+#include <clientversion.h>\n+#include <logging.h>\n+#include <net.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <threadinterrupt.h>\n+#include <util/system.h>\n+\n+#ifdef USE_NATPMP\n+#include <natpmp.h>\n+#ifdef WIN32\n+#include <winsock2.h>\n+#else\n+#include <netinet/in.h>\n+#endif // #ifdef WIN32\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+#include <miniupnpc/miniupnpc.h>\n+#include <miniupnpc/upnpcommands.h>\n+#include <miniupnpc/upnperrors.h>\n+// The minimum supported miniUPnPc API version is set to 10. This keeps compatibility\n+// with Ubuntu 16.04 LTS and Debian 8 libminiupnpc-dev packages.\n+static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\");\n+#endif // #ifdef USE_UPNP\n+\n+#include <cassert>\n+#include <chrono>\n+#include <functional>\n+#include <string>\n+#include <thread>\n+\n+#if defined(USE_NATPMP) || defined(USE_UPNP)\n+static CThreadInterrupt g_mapport_interrupt;\n+static std::thread g_mapport_thread;\n+static MapPortProto g_mapport_current_proto = MapPortProto::NONE;\n+static unsigned int g_mapport_target_proto = g_mapport_current_proto;\n+static uint16_t g_mapport_external_port = 0;\n+static constexpr auto PORT_MAPPING_REANNOUNCE_PERIOD = std::chrono::minutes(20);\n+static constexpr auto PORT_MAPPING_RETRY_PERIOD = std::chrono::minutes(5);\n+\n+#ifdef USE_NATPMP\n+static bool NatpmpInit(natpmp_t* natpmp)\n+{\n+    const int r_init = initnatpmp(natpmp, /* detect gateway automatically */ 0, /* forced gateway - NOT APPLIED*/ 0);\n+    if (r_init == 0) return true;\n+    LogPrintf(\"NAT-PMP: initnatpmp() failed with %d error.\\n\", r_init);\n+    return false;\n+}\n+\n+static bool NatpmpDiscover(natpmp_t* natpmp, struct in_addr& external_ipv4_addr)\n+{\n+    const int r_send = sendpublicaddressrequest(natpmp);\n+    if (r_send == 2 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            external_ipv4_addr = response.pnu.publicaddress.addr;\n+            return true;\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"NAT-PMP: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"NAT-PMP: readnatpmpresponseorretry() for public address failed with %d error.\\n\", r_read);\n+        }\n+\n+    } else {\n+        LogPrintf(\"NAT-PMP: sendpublicaddressrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool NatpmpMapping(natpmp_t* natpmp, const struct in_addr& external_ipv4_addr, uint16_t private_port, bool& external_ip_discovered)\n+{\n+    const uint16_t suggested_external_port = g_mapport_external_port ? g_mapport_external_port : private_port;\n+    const int r_send = sendnewportmappingrequest(natpmp, NATPMP_PROTOCOL_TCP, private_port, suggested_external_port, 3600 /*seconds*/);\n+    if (r_send == 12 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            auto pm = response.pnu.newportmapping;\n+            if (private_port == pm.privateport && pm.lifetime > 0) {\n+                g_mapport_current_proto = MapPortProto::NAT_PMP;\n+                g_mapport_external_port = pm.mappedpublicport;\n+                const CService external{external_ipv4_addr, pm.mappedpublicport};\n+                if (!external_ip_discovered && fDiscover) {\n+                    AddLocal(external, LOCAL_MAPPED);\n+                    external_ip_discovered = true;\n+                }\n+\n+                LogPrintf(\"NAT-PMP: Port mapping successful. External address = %s\\n\", external.ToString());\n+                return true;\n+            } else {\n+                LogPrintf(\"NAT-PMP: Port mapping failed.\\n\");\n+            }\n+\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"NAT-PMP: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"NAT-PMP: readnatpmpresponseorretry() for port mapping failed with %d error.\\n\", r_read);\n+        }\n+\n+    } else {\n+        LogPrintf(\"NAT-PMP: sendnewportmappingrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool ThreadNatpmp()\n+{\n+    bool ret = false;\n+    natpmp_t natpmp;\n+    struct in_addr external_ipv4_addr;\n+    if (NatpmpInit(&natpmp) && NatpmpDiscover(&natpmp, external_ipv4_addr)) {\n+        bool external_ip_discovered = false;\n+        const uint16_t private_port = GetListenPort();\n+        do {\n+            ret = NatpmpMapping(&natpmp, external_ipv4_addr, private_port, external_ip_discovered);",
      "path": "src/mapport.cpp",
      "position": 131,
      "original_position": 137,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "03e2733be1772ef69caf34e84c7b400f64a8ea9f",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't see the logic here to handle being assigned a different port number.",
      "created_at": "2020-02-19T21:36:08Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r381558659",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/381558659"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 131,
      "original_line": 131,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/381830792",
      "pull_request_review_id": 361688719,
      "id": 381830792,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTgzMDc5Mg==",
      "diff_hunk": "@@ -0,0 +1,320 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <mapport.h>\n+\n+#include <clientversion.h>\n+#include <logging.h>\n+#include <net.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <threadinterrupt.h>\n+#include <util/system.h>\n+\n+#ifdef USE_NATPMP\n+#include <natpmp.h>\n+#ifdef WIN32\n+#include <winsock2.h>\n+#else\n+#include <netinet/in.h>\n+#endif // #ifdef WIN32\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+#include <miniupnpc/miniupnpc.h>\n+#include <miniupnpc/upnpcommands.h>\n+#include <miniupnpc/upnperrors.h>\n+// The minimum supported miniUPnPc API version is set to 10. This keeps compatibility\n+// with Ubuntu 16.04 LTS and Debian 8 libminiupnpc-dev packages.\n+static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\");\n+#endif // #ifdef USE_UPNP\n+\n+#include <cassert>\n+#include <chrono>\n+#include <functional>\n+#include <string>\n+#include <thread>\n+\n+#if defined(USE_NATPMP) || defined(USE_UPNP)\n+static CThreadInterrupt g_mapport_interrupt;\n+static std::thread g_mapport_thread;\n+static MapPortProto g_mapport_current_proto = MapPortProto::NONE;\n+static unsigned int g_mapport_target_proto = g_mapport_current_proto;\n+static uint16_t g_mapport_external_port = 0;\n+static constexpr auto PORT_MAPPING_REANNOUNCE_PERIOD = std::chrono::minutes(20);\n+static constexpr auto PORT_MAPPING_RETRY_PERIOD = std::chrono::minutes(5);\n+\n+#ifdef USE_NATPMP\n+static bool NatpmpInit(natpmp_t* natpmp)\n+{\n+    const int r_init = initnatpmp(natpmp, /* detect gateway automatically */ 0, /* forced gateway - NOT APPLIED*/ 0);\n+    if (r_init == 0) return true;\n+    LogPrintf(\"NAT-PMP: initnatpmp() failed with %d error.\\n\", r_init);\n+    return false;\n+}\n+\n+static bool NatpmpDiscover(natpmp_t* natpmp, struct in_addr& external_ipv4_addr)\n+{\n+    const int r_send = sendpublicaddressrequest(natpmp);\n+    if (r_send == 2 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            external_ipv4_addr = response.pnu.publicaddress.addr;\n+            return true;\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"NAT-PMP: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"NAT-PMP: readnatpmpresponseorretry() for public address failed with %d error.\\n\", r_read);\n+        }\n+\n+    } else {\n+        LogPrintf(\"NAT-PMP: sendpublicaddressrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool NatpmpMapping(natpmp_t* natpmp, const struct in_addr& external_ipv4_addr, uint16_t private_port, bool& external_ip_discovered)\n+{\n+    const uint16_t suggested_external_port = g_mapport_external_port ? g_mapport_external_port : private_port;\n+    const int r_send = sendnewportmappingrequest(natpmp, NATPMP_PROTOCOL_TCP, private_port, suggested_external_port, 3600 /*seconds*/);\n+    if (r_send == 12 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            auto pm = response.pnu.newportmapping;\n+            if (private_port == pm.privateport && pm.lifetime > 0) {\n+                g_mapport_current_proto = MapPortProto::NAT_PMP;\n+                g_mapport_external_port = pm.mappedpublicport;\n+                const CService external{external_ipv4_addr, pm.mappedpublicport};\n+                if (!external_ip_discovered && fDiscover) {\n+                    AddLocal(external, LOCAL_MAPPED);\n+                    external_ip_discovered = true;\n+                }\n+\n+                LogPrintf(\"NAT-PMP: Port mapping successful. External address = %s\\n\", external.ToString());\n+                return true;\n+            } else {\n+                LogPrintf(\"NAT-PMP: Port mapping failed.\\n\");\n+            }\n+\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"NAT-PMP: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"NAT-PMP: readnatpmpresponseorretry() for port mapping failed with %d error.\\n\", r_read);\n+        }\n+\n+    } else {\n+        LogPrintf(\"NAT-PMP: sendnewportmappingrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool ThreadNatpmp()\n+{\n+    bool ret = false;\n+    natpmp_t natpmp;\n+    struct in_addr external_ipv4_addr;\n+    if (NatpmpInit(&natpmp) && NatpmpDiscover(&natpmp, external_ipv4_addr)) {\n+        bool external_ip_discovered = false;\n+        const uint16_t private_port = GetListenPort();\n+        do {\n+            ret = NatpmpMapping(&natpmp, external_ipv4_addr, private_port, external_ip_discovered);",
      "path": "src/mapport.cpp",
      "position": 131,
      "original_position": 137,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "03e2733be1772ef69caf34e84c7b400f64a8ea9f",
      "in_reply_to_id": 381558659,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The logic to handle being assigned a different external port number by the gateway uses the `g_mapport_external_port` variable.",
      "created_at": "2020-02-20T07:49:34Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r381830792",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/381830792"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 131,
      "original_line": 131,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/381908006",
      "pull_request_review_id": 361785165,
      "id": 381908006,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkwODAwNg==",
      "diff_hunk": "@@ -344,15 +356,19 @@ bool OptionsModel::setData(const QModelIndex & index, const QVariant & value, in\n         case HideTrayIcon:\n             fHideTrayIcon = value.toBool();\n             settings.setValue(\"fHideTrayIcon\", fHideTrayIcon);\n-    \t\tQ_EMIT hideTrayIconChanged(fHideTrayIcon);\n+            Q_EMIT hideTrayIconChanged(fHideTrayIcon);\n             break;\n         case MinimizeToTray:\n             fMinimizeToTray = value.toBool();\n             settings.setValue(\"fMinimizeToTray\", fMinimizeToTray);\n             break;\n+        case MapPortNatpmp: // core option - can be changed on-the-fly\n+            settings.setValue(\"fUseNatpmp\", value.toBool());\n+            m_node.mapPort(value.toBool(), settings.value(\"fUseUPnP\").toBool());",
      "path": "src/qt/optionsmodel.cpp",
      "position": null,
      "original_position": 52,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "03e2733be1772ef69caf34e84c7b400f64a8ea9f",
      "in_reply_to_id": 381553831,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The separate issue #18184 has been submitted.",
      "created_at": "2020-02-20T10:21:34Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r381908006",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/381908006"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 367,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/382315043",
      "pull_request_review_id": 362306083,
      "id": 382315043,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjMxNTA0Mw==",
      "diff_hunk": "@@ -0,0 +1,320 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <mapport.h>\n+\n+#include <clientversion.h>\n+#include <logging.h>\n+#include <net.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <threadinterrupt.h>\n+#include <util/system.h>\n+\n+#ifdef USE_NATPMP\n+#include <natpmp.h>\n+#ifdef WIN32\n+#include <winsock2.h>\n+#else\n+#include <netinet/in.h>\n+#endif // #ifdef WIN32\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+#include <miniupnpc/miniupnpc.h>\n+#include <miniupnpc/upnpcommands.h>\n+#include <miniupnpc/upnperrors.h>\n+// The minimum supported miniUPnPc API version is set to 10. This keeps compatibility\n+// with Ubuntu 16.04 LTS and Debian 8 libminiupnpc-dev packages.\n+static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\");\n+#endif // #ifdef USE_UPNP\n+\n+#include <cassert>\n+#include <chrono>\n+#include <functional>\n+#include <string>\n+#include <thread>\n+\n+#if defined(USE_NATPMP) || defined(USE_UPNP)\n+static CThreadInterrupt g_mapport_interrupt;\n+static std::thread g_mapport_thread;\n+static MapPortProto g_mapport_current_proto = MapPortProto::NONE;\n+static unsigned int g_mapport_target_proto = g_mapport_current_proto;\n+static uint16_t g_mapport_external_port = 0;\n+static constexpr auto PORT_MAPPING_REANNOUNCE_PERIOD = std::chrono::minutes(20);\n+static constexpr auto PORT_MAPPING_RETRY_PERIOD = std::chrono::minutes(5);\n+\n+#ifdef USE_NATPMP\n+static bool NatpmpInit(natpmp_t* natpmp)\n+{\n+    const int r_init = initnatpmp(natpmp, /* detect gateway automatically */ 0, /* forced gateway - NOT APPLIED*/ 0);\n+    if (r_init == 0) return true;\n+    LogPrintf(\"NAT-PMP: initnatpmp() failed with %d error.\\n\", r_init);\n+    return false;\n+}\n+\n+static bool NatpmpDiscover(natpmp_t* natpmp, struct in_addr& external_ipv4_addr)\n+{\n+    const int r_send = sendpublicaddressrequest(natpmp);\n+    if (r_send == 2 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            external_ipv4_addr = response.pnu.publicaddress.addr;\n+            return true;\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"NAT-PMP: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"NAT-PMP: readnatpmpresponseorretry() for public address failed with %d error.\\n\", r_read);\n+        }\n+\n+    } else {\n+        LogPrintf(\"NAT-PMP: sendpublicaddressrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool NatpmpMapping(natpmp_t* natpmp, const struct in_addr& external_ipv4_addr, uint16_t private_port, bool& external_ip_discovered)\n+{\n+    const uint16_t suggested_external_port = g_mapport_external_port ? g_mapport_external_port : private_port;\n+    const int r_send = sendnewportmappingrequest(natpmp, NATPMP_PROTOCOL_TCP, private_port, suggested_external_port, 3600 /*seconds*/);\n+    if (r_send == 12 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            auto pm = response.pnu.newportmapping;\n+            if (private_port == pm.privateport && pm.lifetime > 0) {\n+                g_mapport_current_proto = MapPortProto::NAT_PMP;\n+                g_mapport_external_port = pm.mappedpublicport;\n+                const CService external{external_ipv4_addr, pm.mappedpublicport};\n+                if (!external_ip_discovered && fDiscover) {\n+                    AddLocal(external, LOCAL_MAPPED);\n+                    external_ip_discovered = true;\n+                }\n+\n+                LogPrintf(\"NAT-PMP: Port mapping successful. External address = %s\\n\", external.ToString());\n+                return true;\n+            } else {\n+                LogPrintf(\"NAT-PMP: Port mapping failed.\\n\");\n+            }\n+\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"NAT-PMP: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"NAT-PMP: readnatpmpresponseorretry() for port mapping failed with %d error.\\n\", r_read);\n+        }\n+\n+    } else {\n+        LogPrintf(\"NAT-PMP: sendnewportmappingrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool ThreadNatpmp()\n+{\n+    bool ret = false;\n+    natpmp_t natpmp;\n+    struct in_addr external_ipv4_addr;\n+    if (NatpmpInit(&natpmp) && NatpmpDiscover(&natpmp, external_ipv4_addr)) {\n+        bool external_ip_discovered = false;\n+        const uint16_t private_port = GetListenPort();\n+        do {\n+            ret = NatpmpMapping(&natpmp, external_ipv4_addr, private_port, external_ip_discovered);\n+        } while (ret && g_mapport_interrupt.sleep_for(PORT_MAPPING_REANNOUNCE_PERIOD));\n+\n+        const int r_send = sendnewportmappingrequest(&natpmp, NATPMP_PROTOCOL_TCP, private_port, g_mapport_external_port, /* remove a port mapping */ 0);\n+        g_mapport_external_port = 0;\n+        if (r_send == 12 /* OK */) {\n+            LogPrintf(\"NAT-PMP: Port mapping removed successfully.\\n\");\n+        } else {\n+            LogPrintf(\"NAT-PMP: sendnewportmappingrequest(0) failed with %d error.\\n\", r_send);\n+        }\n+    }\n+\n+    closenatpmp(&natpmp);\n+    return ret;\n+}\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+static bool ThreadUpnp()\n+{\n+    bool ret = false;\n+    std::string port = strprintf(\"%u\", GetListenPort());\n+    const char * multicastif = nullptr;\n+    const char * minissdpdpath = nullptr;\n+    struct UPNPDev * devlist = nullptr;\n+    char lanaddr[64];\n+\n+    int error = 0;\n+#if MINIUPNPC_API_VERSION < 14\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, &error);\n+#else\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, 2, &error);\n+#endif\n+\n+    struct UPNPUrls urls;\n+    struct IGDdatas data;\n+    int r;\n+\n+    r = UPNP_GetValidIGD(devlist, &urls, &data, lanaddr, sizeof(lanaddr));\n+    if (r == 1)\n+    {\n+        if (fDiscover) {\n+            char externalIPAddress[40];\n+            r = UPNP_GetExternalIPAddress(urls.controlURL, data.first.servicetype, externalIPAddress);\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                LogPrintf(\"UPnP: GetExternalIPAddress() returned %d\\n\", r);\n+            } else {\n+                if (externalIPAddress[0]) {\n+                    CNetAddr resolved;\n+                    if (LookupHost(externalIPAddress, resolved, false)) {\n+                        LogPrintf(\"UPnP: ExternalIPAddress = %s\\n\", resolved.ToString());\n+                        AddLocal(resolved, LOCAL_MAPPED);\n+                    }\n+                } else {\n+                    LogPrintf(\"UPnP: GetExternalIPAddress failed.\\n\");\n+                }\n+            }\n+        }\n+\n+        std::string strDesc = PACKAGE_NAME \" \" + FormatFullVersion();\n+\n+        do {\n+            r = UPNP_AddPortMapping(urls.controlURL, data.first.servicetype, port.c_str(), port.c_str(), lanaddr, strDesc.c_str(), \"TCP\", 0, \"0\");\n+\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                ret = false;\n+                LogPrintf(\"AddPortMapping(%s, %s, %s) failed with code %d (%s)\\n\", port, port, lanaddr, r, strupnperror(r));\n+                break;\n+            } else {\n+                ret = true;\n+                g_mapport_current_proto = MapPortProto::UPNP;\n+                LogPrintf(\"UPnP Port Mapping successful.\\n\");\n+            }\n+        } while (g_mapport_interrupt.sleep_for(PORT_MAPPING_REANNOUNCE_PERIOD));\n+\n+        r = UPNP_DeletePortMapping(urls.controlURL, data.first.servicetype, port.c_str(), \"TCP\", 0);\n+        LogPrintf(\"UPNP_DeletePortMapping() returned: %d\\n\", r);\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        FreeUPNPUrls(&urls);\n+    } else {\n+        LogPrintf(\"No valid UPnP IGDs found\\n\");\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        if (r != 0)\n+            FreeUPNPUrls(&urls);\n+    }\n+\n+    return ret;\n+}\n+#endif // #ifdef USE_UPNP\n+\n+static void ThreadMapPort()\n+{\n+    bool ok;\n+    do {\n+        ok = false;\n+\n+#ifdef USE_NATPMP\n+        if (g_mapport_target_proto & MapPortProto::NAT_PMP) {\n+            ok = ThreadNatpmp();\n+            if (ok) continue;\n+        }\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+        if (g_mapport_target_proto & MapPortProto::UPNP) {\n+            ok = ThreadUpnp();\n+            if (ok) continue;\n+        }\n+#endif // #ifdef USE_UPNP\n+\n+        if (g_mapport_target_proto == MapPortProto::NONE) {\n+            g_mapport_current_proto = MapPortProto::NONE;\n+            return;\n+        }\n+\n+    } while (ok || g_mapport_interrupt.sleep_for(PORT_MAPPING_RETRY_PERIOD));\n+}\n+\n+void StartMapPort(bool use_natpmp, bool use_upnp)\n+{\n+    if (use_natpmp) {\n+        g_mapport_target_proto |= MapPortProto::NAT_PMP;\n+    } else {\n+        g_mapport_target_proto &= ~MapPortProto::NAT_PMP;\n+    }\n+\n+    if (use_upnp) {\n+        g_mapport_target_proto |= MapPortProto::UPNP;\n+    } else {\n+        g_mapport_target_proto &= ~MapPortProto::UPNP;\n+    }\n+\n+    if (g_mapport_current_proto == MapPortProto::NONE) {\n+        if (g_mapport_target_proto == MapPortProto::NONE) {\n+            return;\n+        }\n+    } else if (g_mapport_target_proto & g_mapport_current_proto) {\n+        return;\n+    }\n+\n+    if (g_mapport_target_proto == MapPortProto::NONE) {\n+        InterruptMapPort();\n+        StopMapPort();\n+        return;\n+    }\n+\n+    if (g_mapport_thread.joinable()) {\n+        g_mapport_interrupt();",
      "path": "src/mapport.cpp",
      "position": null,
      "original_position": 284,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "03e2733be1772ef69caf34e84c7b400f64a8ea9f",
      "in_reply_to_id": 381558152,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed in the latest [push](https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-589405068).",
      "created_at": "2020-02-20T23:24:10Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r382315043",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/382315043"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 286,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/382316994",
      "pull_request_review_id": 362308336,
      "id": 382316994,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjMxNjk5NA==",
      "diff_hunk": "@@ -0,0 +1,320 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <mapport.h>\n+\n+#include <clientversion.h>\n+#include <logging.h>\n+#include <net.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <threadinterrupt.h>\n+#include <util/system.h>\n+\n+#ifdef USE_NATPMP\n+#include <natpmp.h>\n+#ifdef WIN32\n+#include <winsock2.h>\n+#else\n+#include <netinet/in.h>\n+#endif // #ifdef WIN32\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+#include <miniupnpc/miniupnpc.h>\n+#include <miniupnpc/upnpcommands.h>\n+#include <miniupnpc/upnperrors.h>\n+// The minimum supported miniUPnPc API version is set to 10. This keeps compatibility\n+// with Ubuntu 16.04 LTS and Debian 8 libminiupnpc-dev packages.\n+static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\");\n+#endif // #ifdef USE_UPNP\n+\n+#include <cassert>\n+#include <chrono>\n+#include <functional>\n+#include <string>\n+#include <thread>\n+\n+#if defined(USE_NATPMP) || defined(USE_UPNP)\n+static CThreadInterrupt g_mapport_interrupt;\n+static std::thread g_mapport_thread;\n+static MapPortProto g_mapport_current_proto = MapPortProto::NONE;\n+static unsigned int g_mapport_target_proto = g_mapport_current_proto;\n+static uint16_t g_mapport_external_port = 0;\n+static constexpr auto PORT_MAPPING_REANNOUNCE_PERIOD = std::chrono::minutes(20);\n+static constexpr auto PORT_MAPPING_RETRY_PERIOD = std::chrono::minutes(5);\n+\n+#ifdef USE_NATPMP\n+static bool NatpmpInit(natpmp_t* natpmp)\n+{\n+    const int r_init = initnatpmp(natpmp, /* detect gateway automatically */ 0, /* forced gateway - NOT APPLIED*/ 0);\n+    if (r_init == 0) return true;\n+    LogPrintf(\"NAT-PMP: initnatpmp() failed with %d error.\\n\", r_init);\n+    return false;\n+}\n+\n+static bool NatpmpDiscover(natpmp_t* natpmp, struct in_addr& external_ipv4_addr)\n+{\n+    const int r_send = sendpublicaddressrequest(natpmp);\n+    if (r_send == 2 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            external_ipv4_addr = response.pnu.publicaddress.addr;\n+            return true;\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"NAT-PMP: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"NAT-PMP: readnatpmpresponseorretry() for public address failed with %d error.\\n\", r_read);\n+        }\n+\n+    } else {\n+        LogPrintf(\"NAT-PMP: sendpublicaddressrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool NatpmpMapping(natpmp_t* natpmp, const struct in_addr& external_ipv4_addr, uint16_t private_port, bool& external_ip_discovered)\n+{\n+    const uint16_t suggested_external_port = g_mapport_external_port ? g_mapport_external_port : private_port;\n+    const int r_send = sendnewportmappingrequest(natpmp, NATPMP_PROTOCOL_TCP, private_port, suggested_external_port, 3600 /*seconds*/);\n+    if (r_send == 12 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            auto pm = response.pnu.newportmapping;\n+            if (private_port == pm.privateport && pm.lifetime > 0) {\n+                g_mapport_current_proto = MapPortProto::NAT_PMP;\n+                g_mapport_external_port = pm.mappedpublicport;\n+                const CService external{external_ipv4_addr, pm.mappedpublicport};\n+                if (!external_ip_discovered && fDiscover) {\n+                    AddLocal(external, LOCAL_MAPPED);\n+                    external_ip_discovered = true;\n+                }\n+\n+                LogPrintf(\"NAT-PMP: Port mapping successful. External address = %s\\n\", external.ToString());\n+                return true;\n+            } else {\n+                LogPrintf(\"NAT-PMP: Port mapping failed.\\n\");\n+            }\n+\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"NAT-PMP: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"NAT-PMP: readnatpmpresponseorretry() for port mapping failed with %d error.\\n\", r_read);\n+        }\n+\n+    } else {\n+        LogPrintf(\"NAT-PMP: sendnewportmappingrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool ThreadNatpmp()\n+{\n+    bool ret = false;\n+    natpmp_t natpmp;\n+    struct in_addr external_ipv4_addr;\n+    if (NatpmpInit(&natpmp) && NatpmpDiscover(&natpmp, external_ipv4_addr)) {\n+        bool external_ip_discovered = false;\n+        const uint16_t private_port = GetListenPort();\n+        do {\n+            ret = NatpmpMapping(&natpmp, external_ipv4_addr, private_port, external_ip_discovered);\n+        } while (ret && g_mapport_interrupt.sleep_for(PORT_MAPPING_REANNOUNCE_PERIOD));\n+\n+        const int r_send = sendnewportmappingrequest(&natpmp, NATPMP_PROTOCOL_TCP, private_port, g_mapport_external_port, /* remove a port mapping */ 0);\n+        g_mapport_external_port = 0;\n+        if (r_send == 12 /* OK */) {\n+            LogPrintf(\"NAT-PMP: Port mapping removed successfully.\\n\");\n+        } else {\n+            LogPrintf(\"NAT-PMP: sendnewportmappingrequest(0) failed with %d error.\\n\", r_send);\n+        }\n+    }\n+\n+    closenatpmp(&natpmp);\n+    return ret;\n+}\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+static bool ThreadUpnp()\n+{\n+    bool ret = false;\n+    std::string port = strprintf(\"%u\", GetListenPort());\n+    const char * multicastif = nullptr;\n+    const char * minissdpdpath = nullptr;\n+    struct UPNPDev * devlist = nullptr;\n+    char lanaddr[64];\n+\n+    int error = 0;\n+#if MINIUPNPC_API_VERSION < 14\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, &error);\n+#else\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, 2, &error);\n+#endif\n+\n+    struct UPNPUrls urls;\n+    struct IGDdatas data;\n+    int r;\n+\n+    r = UPNP_GetValidIGD(devlist, &urls, &data, lanaddr, sizeof(lanaddr));\n+    if (r == 1)\n+    {\n+        if (fDiscover) {\n+            char externalIPAddress[40];\n+            r = UPNP_GetExternalIPAddress(urls.controlURL, data.first.servicetype, externalIPAddress);\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                LogPrintf(\"UPnP: GetExternalIPAddress() returned %d\\n\", r);\n+            } else {\n+                if (externalIPAddress[0]) {\n+                    CNetAddr resolved;\n+                    if (LookupHost(externalIPAddress, resolved, false)) {\n+                        LogPrintf(\"UPnP: ExternalIPAddress = %s\\n\", resolved.ToString());\n+                        AddLocal(resolved, LOCAL_MAPPED);\n+                    }\n+                } else {\n+                    LogPrintf(\"UPnP: GetExternalIPAddress failed.\\n\");\n+                }\n+            }\n+        }\n+\n+        std::string strDesc = PACKAGE_NAME \" \" + FormatFullVersion();\n+\n+        do {\n+            r = UPNP_AddPortMapping(urls.controlURL, data.first.servicetype, port.c_str(), port.c_str(), lanaddr, strDesc.c_str(), \"TCP\", 0, \"0\");\n+\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                ret = false;\n+                LogPrintf(\"AddPortMapping(%s, %s, %s) failed with code %d (%s)\\n\", port, port, lanaddr, r, strupnperror(r));\n+                break;\n+            } else {\n+                ret = true;\n+                g_mapport_current_proto = MapPortProto::UPNP;\n+                LogPrintf(\"UPnP Port Mapping successful.\\n\");\n+            }\n+        } while (g_mapport_interrupt.sleep_for(PORT_MAPPING_REANNOUNCE_PERIOD));\n+\n+        r = UPNP_DeletePortMapping(urls.controlURL, data.first.servicetype, port.c_str(), \"TCP\", 0);\n+        LogPrintf(\"UPNP_DeletePortMapping() returned: %d\\n\", r);\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        FreeUPNPUrls(&urls);\n+    } else {\n+        LogPrintf(\"No valid UPnP IGDs found\\n\");\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        if (r != 0)\n+            FreeUPNPUrls(&urls);\n+    }\n+\n+    return ret;\n+}\n+#endif // #ifdef USE_UPNP\n+\n+static void ThreadMapPort()\n+{\n+    bool ok;\n+    do {\n+        ok = false;\n+\n+#ifdef USE_NATPMP\n+        if (g_mapport_target_proto & MapPortProto::NAT_PMP) {\n+            ok = ThreadNatpmp();\n+            if (ok) continue;\n+        }\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+        if (g_mapport_target_proto & MapPortProto::UPNP) {\n+            ok = ThreadUpnp();\n+            if (ok) continue;\n+        }\n+#endif // #ifdef USE_UPNP\n+\n+        if (g_mapport_target_proto == MapPortProto::NONE) {\n+            g_mapport_current_proto = MapPortProto::NONE;\n+            return;\n+        }\n+\n+    } while (ok || g_mapport_interrupt.sleep_for(PORT_MAPPING_RETRY_PERIOD));\n+}\n+\n+void StartMapPort(bool use_natpmp, bool use_upnp)\n+{\n+    if (use_natpmp) {\n+        g_mapport_target_proto |= MapPortProto::NAT_PMP;\n+    } else {\n+        g_mapport_target_proto &= ~MapPortProto::NAT_PMP;\n+    }\n+\n+    if (use_upnp) {\n+        g_mapport_target_proto |= MapPortProto::UPNP;\n+    } else {\n+        g_mapport_target_proto &= ~MapPortProto::UPNP;\n+    }\n+\n+    if (g_mapport_current_proto == MapPortProto::NONE) {\n+        if (g_mapport_target_proto == MapPortProto::NONE) {\n+            return;\n+        }\n+    } else if (g_mapport_target_proto & g_mapport_current_proto) {",
      "path": "src/mapport.cpp",
      "position": null,
      "original_position": 273,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "03e2733be1772ef69caf34e84c7b400f64a8ea9f",
      "in_reply_to_id": 381557545,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Sure it works.\r\nThe log excerpt for the mentioned case:\r\n```\r\n2020-02-20T23:26:30Z [mapport] UPNP_DeletePortMapping() returned: 0\r\n2020-02-20T23:26:30Z [mapport] AddLocal(95.164.65.194:18333,3)\r\n2020-02-20T23:26:30Z [mapport] NAT-PMP: Port mapping successful. External address = 95.164.65.194:18333\r\n\r\n```",
      "created_at": "2020-02-20T23:29:52Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r382316994",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/382316994"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 275,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/382325993",
      "pull_request_review_id": 362319026,
      "id": 382325993,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjMyNTk5Mw==",
      "diff_hunk": "@@ -0,0 +1,320 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <mapport.h>\n+\n+#include <clientversion.h>\n+#include <logging.h>\n+#include <net.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <threadinterrupt.h>\n+#include <util/system.h>\n+\n+#ifdef USE_NATPMP\n+#include <natpmp.h>\n+#ifdef WIN32\n+#include <winsock2.h>\n+#else\n+#include <netinet/in.h>\n+#endif // #ifdef WIN32\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+#include <miniupnpc/miniupnpc.h>\n+#include <miniupnpc/upnpcommands.h>\n+#include <miniupnpc/upnperrors.h>\n+// The minimum supported miniUPnPc API version is set to 10. This keeps compatibility\n+// with Ubuntu 16.04 LTS and Debian 8 libminiupnpc-dev packages.\n+static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\");\n+#endif // #ifdef USE_UPNP\n+\n+#include <cassert>\n+#include <chrono>\n+#include <functional>\n+#include <string>\n+#include <thread>\n+\n+#if defined(USE_NATPMP) || defined(USE_UPNP)\n+static CThreadInterrupt g_mapport_interrupt;\n+static std::thread g_mapport_thread;\n+static MapPortProto g_mapport_current_proto = MapPortProto::NONE;\n+static unsigned int g_mapport_target_proto = g_mapport_current_proto;\n+static uint16_t g_mapport_external_port = 0;\n+static constexpr auto PORT_MAPPING_REANNOUNCE_PERIOD = std::chrono::minutes(20);\n+static constexpr auto PORT_MAPPING_RETRY_PERIOD = std::chrono::minutes(5);\n+\n+#ifdef USE_NATPMP\n+static bool NatpmpInit(natpmp_t* natpmp)\n+{\n+    const int r_init = initnatpmp(natpmp, /* detect gateway automatically */ 0, /* forced gateway - NOT APPLIED*/ 0);\n+    if (r_init == 0) return true;\n+    LogPrintf(\"NAT-PMP: initnatpmp() failed with %d error.\\n\", r_init);\n+    return false;\n+}\n+\n+static bool NatpmpDiscover(natpmp_t* natpmp, struct in_addr& external_ipv4_addr)\n+{\n+    const int r_send = sendpublicaddressrequest(natpmp);\n+    if (r_send == 2 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            external_ipv4_addr = response.pnu.publicaddress.addr;\n+            return true;\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"NAT-PMP: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"NAT-PMP: readnatpmpresponseorretry() for public address failed with %d error.\\n\", r_read);\n+        }\n+\n+    } else {\n+        LogPrintf(\"NAT-PMP: sendpublicaddressrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool NatpmpMapping(natpmp_t* natpmp, const struct in_addr& external_ipv4_addr, uint16_t private_port, bool& external_ip_discovered)\n+{\n+    const uint16_t suggested_external_port = g_mapport_external_port ? g_mapport_external_port : private_port;\n+    const int r_send = sendnewportmappingrequest(natpmp, NATPMP_PROTOCOL_TCP, private_port, suggested_external_port, 3600 /*seconds*/);\n+    if (r_send == 12 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            auto pm = response.pnu.newportmapping;\n+            if (private_port == pm.privateport && pm.lifetime > 0) {\n+                g_mapport_current_proto = MapPortProto::NAT_PMP;\n+                g_mapport_external_port = pm.mappedpublicport;\n+                const CService external{external_ipv4_addr, pm.mappedpublicport};\n+                if (!external_ip_discovered && fDiscover) {\n+                    AddLocal(external, LOCAL_MAPPED);\n+                    external_ip_discovered = true;\n+                }\n+\n+                LogPrintf(\"NAT-PMP: Port mapping successful. External address = %s\\n\", external.ToString());\n+                return true;\n+            } else {\n+                LogPrintf(\"NAT-PMP: Port mapping failed.\\n\");\n+            }\n+\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"NAT-PMP: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"NAT-PMP: readnatpmpresponseorretry() for port mapping failed with %d error.\\n\", r_read);\n+        }\n+\n+    } else {\n+        LogPrintf(\"NAT-PMP: sendnewportmappingrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool ThreadNatpmp()\n+{\n+    bool ret = false;\n+    natpmp_t natpmp;\n+    struct in_addr external_ipv4_addr;\n+    if (NatpmpInit(&natpmp) && NatpmpDiscover(&natpmp, external_ipv4_addr)) {\n+        bool external_ip_discovered = false;\n+        const uint16_t private_port = GetListenPort();\n+        do {\n+            ret = NatpmpMapping(&natpmp, external_ipv4_addr, private_port, external_ip_discovered);\n+        } while (ret && g_mapport_interrupt.sleep_for(PORT_MAPPING_REANNOUNCE_PERIOD));\n+\n+        const int r_send = sendnewportmappingrequest(&natpmp, NATPMP_PROTOCOL_TCP, private_port, g_mapport_external_port, /* remove a port mapping */ 0);\n+        g_mapport_external_port = 0;\n+        if (r_send == 12 /* OK */) {\n+            LogPrintf(\"NAT-PMP: Port mapping removed successfully.\\n\");\n+        } else {\n+            LogPrintf(\"NAT-PMP: sendnewportmappingrequest(0) failed with %d error.\\n\", r_send);\n+        }\n+    }\n+\n+    closenatpmp(&natpmp);\n+    return ret;\n+}\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+static bool ThreadUpnp()\n+{\n+    bool ret = false;\n+    std::string port = strprintf(\"%u\", GetListenPort());\n+    const char * multicastif = nullptr;\n+    const char * minissdpdpath = nullptr;\n+    struct UPNPDev * devlist = nullptr;\n+    char lanaddr[64];\n+\n+    int error = 0;\n+#if MINIUPNPC_API_VERSION < 14\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, &error);\n+#else\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, 2, &error);\n+#endif\n+\n+    struct UPNPUrls urls;\n+    struct IGDdatas data;\n+    int r;\n+\n+    r = UPNP_GetValidIGD(devlist, &urls, &data, lanaddr, sizeof(lanaddr));\n+    if (r == 1)\n+    {\n+        if (fDiscover) {\n+            char externalIPAddress[40];\n+            r = UPNP_GetExternalIPAddress(urls.controlURL, data.first.servicetype, externalIPAddress);\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                LogPrintf(\"UPnP: GetExternalIPAddress() returned %d\\n\", r);\n+            } else {\n+                if (externalIPAddress[0]) {\n+                    CNetAddr resolved;\n+                    if (LookupHost(externalIPAddress, resolved, false)) {\n+                        LogPrintf(\"UPnP: ExternalIPAddress = %s\\n\", resolved.ToString());\n+                        AddLocal(resolved, LOCAL_MAPPED);\n+                    }\n+                } else {\n+                    LogPrintf(\"UPnP: GetExternalIPAddress failed.\\n\");\n+                }\n+            }\n+        }\n+\n+        std::string strDesc = PACKAGE_NAME \" \" + FormatFullVersion();\n+\n+        do {\n+            r = UPNP_AddPortMapping(urls.controlURL, data.first.servicetype, port.c_str(), port.c_str(), lanaddr, strDesc.c_str(), \"TCP\", 0, \"0\");\n+\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                ret = false;\n+                LogPrintf(\"AddPortMapping(%s, %s, %s) failed with code %d (%s)\\n\", port, port, lanaddr, r, strupnperror(r));\n+                break;\n+            } else {\n+                ret = true;\n+                g_mapport_current_proto = MapPortProto::UPNP;\n+                LogPrintf(\"UPnP Port Mapping successful.\\n\");\n+            }\n+        } while (g_mapport_interrupt.sleep_for(PORT_MAPPING_REANNOUNCE_PERIOD));\n+\n+        r = UPNP_DeletePortMapping(urls.controlURL, data.first.servicetype, port.c_str(), \"TCP\", 0);\n+        LogPrintf(\"UPNP_DeletePortMapping() returned: %d\\n\", r);\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        FreeUPNPUrls(&urls);\n+    } else {\n+        LogPrintf(\"No valid UPnP IGDs found\\n\");\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        if (r != 0)\n+            FreeUPNPUrls(&urls);\n+    }\n+\n+    return ret;\n+}\n+#endif // #ifdef USE_UPNP\n+\n+static void ThreadMapPort()\n+{\n+    bool ok;\n+    do {\n+        ok = false;\n+\n+#ifdef USE_NATPMP\n+        if (g_mapport_target_proto & MapPortProto::NAT_PMP) {\n+            ok = ThreadNatpmp();\n+            if (ok) continue;\n+        }\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+        if (g_mapport_target_proto & MapPortProto::UPNP) {\n+            ok = ThreadUpnp();\n+            if (ok) continue;\n+        }\n+#endif // #ifdef USE_UPNP\n+\n+        if (g_mapport_target_proto == MapPortProto::NONE) {\n+            g_mapport_current_proto = MapPortProto::NONE;\n+            return;\n+        }\n+\n+    } while (ok || g_mapport_interrupt.sleep_for(PORT_MAPPING_RETRY_PERIOD));\n+}\n+\n+void StartMapPort(bool use_natpmp, bool use_upnp)\n+{\n+    if (use_natpmp) {\n+        g_mapport_target_proto |= MapPortProto::NAT_PMP;\n+    } else {\n+        g_mapport_target_proto &= ~MapPortProto::NAT_PMP;\n+    }\n+\n+    if (use_upnp) {\n+        g_mapport_target_proto |= MapPortProto::UPNP;\n+    } else {\n+        g_mapport_target_proto &= ~MapPortProto::UPNP;\n+    }\n+\n+    if (g_mapport_current_proto == MapPortProto::NONE) {\n+        if (g_mapport_target_proto == MapPortProto::NONE) {\n+            return;\n+        }\n+    } else if (g_mapport_target_proto & g_mapport_current_proto) {",
      "path": "src/mapport.cpp",
      "position": null,
      "original_position": 273,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "03e2733be1772ef69caf34e84c7b400f64a8ea9f",
      "in_reply_to_id": 381557545,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why would it? You'd return early here without making the change...",
      "created_at": "2020-02-20T23:55:02Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r382325993",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/382325993"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 275,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/382327259",
      "pull_request_review_id": 362320522,
      "id": 382327259,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjMyNzI1OQ==",
      "diff_hunk": "@@ -0,0 +1,320 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <mapport.h>\n+\n+#include <clientversion.h>\n+#include <logging.h>\n+#include <net.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <threadinterrupt.h>\n+#include <util/system.h>\n+\n+#ifdef USE_NATPMP\n+#include <natpmp.h>\n+#ifdef WIN32\n+#include <winsock2.h>\n+#else\n+#include <netinet/in.h>\n+#endif // #ifdef WIN32\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+#include <miniupnpc/miniupnpc.h>\n+#include <miniupnpc/upnpcommands.h>\n+#include <miniupnpc/upnperrors.h>\n+// The minimum supported miniUPnPc API version is set to 10. This keeps compatibility\n+// with Ubuntu 16.04 LTS and Debian 8 libminiupnpc-dev packages.\n+static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\");\n+#endif // #ifdef USE_UPNP\n+\n+#include <cassert>\n+#include <chrono>\n+#include <functional>\n+#include <string>\n+#include <thread>\n+\n+#if defined(USE_NATPMP) || defined(USE_UPNP)\n+static CThreadInterrupt g_mapport_interrupt;\n+static std::thread g_mapport_thread;\n+static MapPortProto g_mapport_current_proto = MapPortProto::NONE;\n+static unsigned int g_mapport_target_proto = g_mapport_current_proto;\n+static uint16_t g_mapport_external_port = 0;\n+static constexpr auto PORT_MAPPING_REANNOUNCE_PERIOD = std::chrono::minutes(20);\n+static constexpr auto PORT_MAPPING_RETRY_PERIOD = std::chrono::minutes(5);\n+\n+#ifdef USE_NATPMP\n+static bool NatpmpInit(natpmp_t* natpmp)\n+{\n+    const int r_init = initnatpmp(natpmp, /* detect gateway automatically */ 0, /* forced gateway - NOT APPLIED*/ 0);\n+    if (r_init == 0) return true;\n+    LogPrintf(\"NAT-PMP: initnatpmp() failed with %d error.\\n\", r_init);\n+    return false;\n+}\n+\n+static bool NatpmpDiscover(natpmp_t* natpmp, struct in_addr& external_ipv4_addr)\n+{\n+    const int r_send = sendpublicaddressrequest(natpmp);\n+    if (r_send == 2 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            external_ipv4_addr = response.pnu.publicaddress.addr;\n+            return true;\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"NAT-PMP: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"NAT-PMP: readnatpmpresponseorretry() for public address failed with %d error.\\n\", r_read);\n+        }\n+\n+    } else {\n+        LogPrintf(\"NAT-PMP: sendpublicaddressrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool NatpmpMapping(natpmp_t* natpmp, const struct in_addr& external_ipv4_addr, uint16_t private_port, bool& external_ip_discovered)\n+{\n+    const uint16_t suggested_external_port = g_mapport_external_port ? g_mapport_external_port : private_port;\n+    const int r_send = sendnewportmappingrequest(natpmp, NATPMP_PROTOCOL_TCP, private_port, suggested_external_port, 3600 /*seconds*/);\n+    if (r_send == 12 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            auto pm = response.pnu.newportmapping;\n+            if (private_port == pm.privateport && pm.lifetime > 0) {\n+                g_mapport_current_proto = MapPortProto::NAT_PMP;\n+                g_mapport_external_port = pm.mappedpublicport;\n+                const CService external{external_ipv4_addr, pm.mappedpublicport};\n+                if (!external_ip_discovered && fDiscover) {\n+                    AddLocal(external, LOCAL_MAPPED);\n+                    external_ip_discovered = true;\n+                }\n+\n+                LogPrintf(\"NAT-PMP: Port mapping successful. External address = %s\\n\", external.ToString());\n+                return true;\n+            } else {\n+                LogPrintf(\"NAT-PMP: Port mapping failed.\\n\");\n+            }\n+\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"NAT-PMP: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"NAT-PMP: readnatpmpresponseorretry() for port mapping failed with %d error.\\n\", r_read);\n+        }\n+\n+    } else {\n+        LogPrintf(\"NAT-PMP: sendnewportmappingrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool ThreadNatpmp()\n+{\n+    bool ret = false;\n+    natpmp_t natpmp;\n+    struct in_addr external_ipv4_addr;\n+    if (NatpmpInit(&natpmp) && NatpmpDiscover(&natpmp, external_ipv4_addr)) {\n+        bool external_ip_discovered = false;\n+        const uint16_t private_port = GetListenPort();\n+        do {\n+            ret = NatpmpMapping(&natpmp, external_ipv4_addr, private_port, external_ip_discovered);\n+        } while (ret && g_mapport_interrupt.sleep_for(PORT_MAPPING_REANNOUNCE_PERIOD));\n+\n+        const int r_send = sendnewportmappingrequest(&natpmp, NATPMP_PROTOCOL_TCP, private_port, g_mapport_external_port, /* remove a port mapping */ 0);\n+        g_mapport_external_port = 0;\n+        if (r_send == 12 /* OK */) {\n+            LogPrintf(\"NAT-PMP: Port mapping removed successfully.\\n\");\n+        } else {\n+            LogPrintf(\"NAT-PMP: sendnewportmappingrequest(0) failed with %d error.\\n\", r_send);\n+        }\n+    }\n+\n+    closenatpmp(&natpmp);\n+    return ret;\n+}\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+static bool ThreadUpnp()\n+{\n+    bool ret = false;\n+    std::string port = strprintf(\"%u\", GetListenPort());\n+    const char * multicastif = nullptr;\n+    const char * minissdpdpath = nullptr;\n+    struct UPNPDev * devlist = nullptr;\n+    char lanaddr[64];\n+\n+    int error = 0;\n+#if MINIUPNPC_API_VERSION < 14\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, &error);\n+#else\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, 2, &error);\n+#endif\n+\n+    struct UPNPUrls urls;\n+    struct IGDdatas data;\n+    int r;\n+\n+    r = UPNP_GetValidIGD(devlist, &urls, &data, lanaddr, sizeof(lanaddr));\n+    if (r == 1)\n+    {\n+        if (fDiscover) {\n+            char externalIPAddress[40];\n+            r = UPNP_GetExternalIPAddress(urls.controlURL, data.first.servicetype, externalIPAddress);\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                LogPrintf(\"UPnP: GetExternalIPAddress() returned %d\\n\", r);\n+            } else {\n+                if (externalIPAddress[0]) {\n+                    CNetAddr resolved;\n+                    if (LookupHost(externalIPAddress, resolved, false)) {\n+                        LogPrintf(\"UPnP: ExternalIPAddress = %s\\n\", resolved.ToString());\n+                        AddLocal(resolved, LOCAL_MAPPED);\n+                    }\n+                } else {\n+                    LogPrintf(\"UPnP: GetExternalIPAddress failed.\\n\");\n+                }\n+            }\n+        }\n+\n+        std::string strDesc = PACKAGE_NAME \" \" + FormatFullVersion();\n+\n+        do {\n+            r = UPNP_AddPortMapping(urls.controlURL, data.first.servicetype, port.c_str(), port.c_str(), lanaddr, strDesc.c_str(), \"TCP\", 0, \"0\");\n+\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                ret = false;\n+                LogPrintf(\"AddPortMapping(%s, %s, %s) failed with code %d (%s)\\n\", port, port, lanaddr, r, strupnperror(r));\n+                break;\n+            } else {\n+                ret = true;\n+                g_mapport_current_proto = MapPortProto::UPNP;\n+                LogPrintf(\"UPnP Port Mapping successful.\\n\");\n+            }\n+        } while (g_mapport_interrupt.sleep_for(PORT_MAPPING_REANNOUNCE_PERIOD));\n+\n+        r = UPNP_DeletePortMapping(urls.controlURL, data.first.servicetype, port.c_str(), \"TCP\", 0);\n+        LogPrintf(\"UPNP_DeletePortMapping() returned: %d\\n\", r);\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        FreeUPNPUrls(&urls);\n+    } else {\n+        LogPrintf(\"No valid UPnP IGDs found\\n\");\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        if (r != 0)\n+            FreeUPNPUrls(&urls);\n+    }\n+\n+    return ret;\n+}\n+#endif // #ifdef USE_UPNP\n+\n+static void ThreadMapPort()\n+{\n+    bool ok;\n+    do {\n+        ok = false;\n+\n+#ifdef USE_NATPMP\n+        if (g_mapport_target_proto & MapPortProto::NAT_PMP) {\n+            ok = ThreadNatpmp();\n+            if (ok) continue;\n+        }\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+        if (g_mapport_target_proto & MapPortProto::UPNP) {\n+            ok = ThreadUpnp();\n+            if (ok) continue;\n+        }\n+#endif // #ifdef USE_UPNP\n+\n+        if (g_mapport_target_proto == MapPortProto::NONE) {\n+            g_mapport_current_proto = MapPortProto::NONE;\n+            return;\n+        }\n+\n+    } while (ok || g_mapport_interrupt.sleep_for(PORT_MAPPING_RETRY_PERIOD));\n+}\n+\n+void StartMapPort(bool use_natpmp, bool use_upnp)\n+{\n+    if (use_natpmp) {\n+        g_mapport_target_proto |= MapPortProto::NAT_PMP;\n+    } else {\n+        g_mapport_target_proto &= ~MapPortProto::NAT_PMP;\n+    }\n+\n+    if (use_upnp) {\n+        g_mapport_target_proto |= MapPortProto::UPNP;\n+    } else {\n+        g_mapport_target_proto &= ~MapPortProto::UPNP;\n+    }\n+\n+    if (g_mapport_current_proto == MapPortProto::NONE) {\n+        if (g_mapport_target_proto == MapPortProto::NONE) {\n+            return;\n+        }\n+    } else if (g_mapport_target_proto & g_mapport_current_proto) {",
      "path": "src/mapport.cpp",
      "position": null,
      "original_position": 273,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "03e2733be1772ef69caf34e84c7b400f64a8ea9f",
      "in_reply_to_id": 381557545,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If both protocols were enabled, `g_mapport_target_proto != MapPortProto::NONE`",
      "created_at": "2020-02-20T23:59:05Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r382327259",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/382327259"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 275,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/382377105",
      "pull_request_review_id": 362376836,
      "id": 382377105,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjM3NzEwNQ==",
      "diff_hunk": "@@ -0,0 +1,320 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <mapport.h>\n+\n+#include <clientversion.h>\n+#include <logging.h>\n+#include <net.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <threadinterrupt.h>\n+#include <util/system.h>\n+\n+#ifdef USE_NATPMP\n+#include <natpmp.h>\n+#ifdef WIN32\n+#include <winsock2.h>\n+#else\n+#include <netinet/in.h>\n+#endif // #ifdef WIN32\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+#include <miniupnpc/miniupnpc.h>\n+#include <miniupnpc/upnpcommands.h>\n+#include <miniupnpc/upnperrors.h>\n+// The minimum supported miniUPnPc API version is set to 10. This keeps compatibility\n+// with Ubuntu 16.04 LTS and Debian 8 libminiupnpc-dev packages.\n+static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\");\n+#endif // #ifdef USE_UPNP\n+\n+#include <cassert>\n+#include <chrono>\n+#include <functional>\n+#include <string>\n+#include <thread>\n+\n+#if defined(USE_NATPMP) || defined(USE_UPNP)\n+static CThreadInterrupt g_mapport_interrupt;\n+static std::thread g_mapport_thread;\n+static MapPortProto g_mapport_current_proto = MapPortProto::NONE;\n+static unsigned int g_mapport_target_proto = g_mapport_current_proto;\n+static uint16_t g_mapport_external_port = 0;\n+static constexpr auto PORT_MAPPING_REANNOUNCE_PERIOD = std::chrono::minutes(20);\n+static constexpr auto PORT_MAPPING_RETRY_PERIOD = std::chrono::minutes(5);\n+\n+#ifdef USE_NATPMP\n+static bool NatpmpInit(natpmp_t* natpmp)\n+{\n+    const int r_init = initnatpmp(natpmp, /* detect gateway automatically */ 0, /* forced gateway - NOT APPLIED*/ 0);\n+    if (r_init == 0) return true;\n+    LogPrintf(\"NAT-PMP: initnatpmp() failed with %d error.\\n\", r_init);\n+    return false;\n+}\n+\n+static bool NatpmpDiscover(natpmp_t* natpmp, struct in_addr& external_ipv4_addr)\n+{\n+    const int r_send = sendpublicaddressrequest(natpmp);\n+    if (r_send == 2 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            external_ipv4_addr = response.pnu.publicaddress.addr;\n+            return true;\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"NAT-PMP: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"NAT-PMP: readnatpmpresponseorretry() for public address failed with %d error.\\n\", r_read);\n+        }\n+\n+    } else {\n+        LogPrintf(\"NAT-PMP: sendpublicaddressrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool NatpmpMapping(natpmp_t* natpmp, const struct in_addr& external_ipv4_addr, uint16_t private_port, bool& external_ip_discovered)\n+{\n+    const uint16_t suggested_external_port = g_mapport_external_port ? g_mapport_external_port : private_port;\n+    const int r_send = sendnewportmappingrequest(natpmp, NATPMP_PROTOCOL_TCP, private_port, suggested_external_port, 3600 /*seconds*/);\n+    if (r_send == 12 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            auto pm = response.pnu.newportmapping;\n+            if (private_port == pm.privateport && pm.lifetime > 0) {\n+                g_mapport_current_proto = MapPortProto::NAT_PMP;\n+                g_mapport_external_port = pm.mappedpublicport;\n+                const CService external{external_ipv4_addr, pm.mappedpublicport};\n+                if (!external_ip_discovered && fDiscover) {\n+                    AddLocal(external, LOCAL_MAPPED);\n+                    external_ip_discovered = true;\n+                }\n+\n+                LogPrintf(\"NAT-PMP: Port mapping successful. External address = %s\\n\", external.ToString());\n+                return true;\n+            } else {\n+                LogPrintf(\"NAT-PMP: Port mapping failed.\\n\");\n+            }\n+\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"NAT-PMP: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"NAT-PMP: readnatpmpresponseorretry() for port mapping failed with %d error.\\n\", r_read);\n+        }\n+\n+    } else {\n+        LogPrintf(\"NAT-PMP: sendnewportmappingrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool ThreadNatpmp()\n+{\n+    bool ret = false;\n+    natpmp_t natpmp;\n+    struct in_addr external_ipv4_addr;\n+    if (NatpmpInit(&natpmp) && NatpmpDiscover(&natpmp, external_ipv4_addr)) {\n+        bool external_ip_discovered = false;\n+        const uint16_t private_port = GetListenPort();\n+        do {\n+            ret = NatpmpMapping(&natpmp, external_ipv4_addr, private_port, external_ip_discovered);\n+        } while (ret && g_mapport_interrupt.sleep_for(PORT_MAPPING_REANNOUNCE_PERIOD));\n+\n+        const int r_send = sendnewportmappingrequest(&natpmp, NATPMP_PROTOCOL_TCP, private_port, g_mapport_external_port, /* remove a port mapping */ 0);\n+        g_mapport_external_port = 0;\n+        if (r_send == 12 /* OK */) {\n+            LogPrintf(\"NAT-PMP: Port mapping removed successfully.\\n\");\n+        } else {\n+            LogPrintf(\"NAT-PMP: sendnewportmappingrequest(0) failed with %d error.\\n\", r_send);\n+        }\n+    }\n+\n+    closenatpmp(&natpmp);\n+    return ret;\n+}\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+static bool ThreadUpnp()\n+{\n+    bool ret = false;\n+    std::string port = strprintf(\"%u\", GetListenPort());\n+    const char * multicastif = nullptr;\n+    const char * minissdpdpath = nullptr;\n+    struct UPNPDev * devlist = nullptr;\n+    char lanaddr[64];\n+\n+    int error = 0;\n+#if MINIUPNPC_API_VERSION < 14\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, &error);\n+#else\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, 2, &error);\n+#endif\n+\n+    struct UPNPUrls urls;\n+    struct IGDdatas data;\n+    int r;\n+\n+    r = UPNP_GetValidIGD(devlist, &urls, &data, lanaddr, sizeof(lanaddr));\n+    if (r == 1)\n+    {\n+        if (fDiscover) {\n+            char externalIPAddress[40];\n+            r = UPNP_GetExternalIPAddress(urls.controlURL, data.first.servicetype, externalIPAddress);\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                LogPrintf(\"UPnP: GetExternalIPAddress() returned %d\\n\", r);\n+            } else {\n+                if (externalIPAddress[0]) {\n+                    CNetAddr resolved;\n+                    if (LookupHost(externalIPAddress, resolved, false)) {\n+                        LogPrintf(\"UPnP: ExternalIPAddress = %s\\n\", resolved.ToString());\n+                        AddLocal(resolved, LOCAL_MAPPED);\n+                    }\n+                } else {\n+                    LogPrintf(\"UPnP: GetExternalIPAddress failed.\\n\");\n+                }\n+            }\n+        }\n+\n+        std::string strDesc = PACKAGE_NAME \" \" + FormatFullVersion();\n+\n+        do {\n+            r = UPNP_AddPortMapping(urls.controlURL, data.first.servicetype, port.c_str(), port.c_str(), lanaddr, strDesc.c_str(), \"TCP\", 0, \"0\");\n+\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                ret = false;\n+                LogPrintf(\"AddPortMapping(%s, %s, %s) failed with code %d (%s)\\n\", port, port, lanaddr, r, strupnperror(r));\n+                break;\n+            } else {\n+                ret = true;\n+                g_mapport_current_proto = MapPortProto::UPNP;\n+                LogPrintf(\"UPnP Port Mapping successful.\\n\");\n+            }\n+        } while (g_mapport_interrupt.sleep_for(PORT_MAPPING_REANNOUNCE_PERIOD));\n+\n+        r = UPNP_DeletePortMapping(urls.controlURL, data.first.servicetype, port.c_str(), \"TCP\", 0);\n+        LogPrintf(\"UPNP_DeletePortMapping() returned: %d\\n\", r);\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        FreeUPNPUrls(&urls);\n+    } else {\n+        LogPrintf(\"No valid UPnP IGDs found\\n\");\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        if (r != 0)\n+            FreeUPNPUrls(&urls);\n+    }\n+\n+    return ret;\n+}\n+#endif // #ifdef USE_UPNP\n+\n+static void ThreadMapPort()\n+{\n+    bool ok;\n+    do {\n+        ok = false;\n+\n+#ifdef USE_NATPMP\n+        if (g_mapport_target_proto & MapPortProto::NAT_PMP) {\n+            ok = ThreadNatpmp();\n+            if (ok) continue;\n+        }\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+        if (g_mapport_target_proto & MapPortProto::UPNP) {\n+            ok = ThreadUpnp();\n+            if (ok) continue;\n+        }\n+#endif // #ifdef USE_UPNP\n+\n+        if (g_mapport_target_proto == MapPortProto::NONE) {\n+            g_mapport_current_proto = MapPortProto::NONE;\n+            return;\n+        }\n+\n+    } while (ok || g_mapport_interrupt.sleep_for(PORT_MAPPING_RETRY_PERIOD));\n+}\n+\n+void StartMapPort(bool use_natpmp, bool use_upnp)\n+{\n+    if (use_natpmp) {\n+        g_mapport_target_proto |= MapPortProto::NAT_PMP;\n+    } else {\n+        g_mapport_target_proto &= ~MapPortProto::NAT_PMP;\n+    }\n+\n+    if (use_upnp) {\n+        g_mapport_target_proto |= MapPortProto::UPNP;\n+    } else {\n+        g_mapport_target_proto &= ~MapPortProto::UPNP;\n+    }\n+\n+    if (g_mapport_current_proto == MapPortProto::NONE) {\n+        if (g_mapport_target_proto == MapPortProto::NONE) {\n+            return;\n+        }\n+    } else if (g_mapport_target_proto & g_mapport_current_proto) {",
      "path": "src/mapport.cpp",
      "position": null,
      "original_position": 273,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "03e2733be1772ef69caf34e84c7b400f64a8ea9f",
      "in_reply_to_id": 381557545,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The conditional here is `(g_mapport_target_proto & g_mapport_current_proto)`",
      "created_at": "2020-02-21T03:13:33Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r382377105",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/382377105"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 275,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/382547566",
      "pull_request_review_id": 362585478,
      "id": 382547566,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjU0NzU2Ng==",
      "diff_hunk": "@@ -0,0 +1,320 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <mapport.h>\n+\n+#include <clientversion.h>\n+#include <logging.h>\n+#include <net.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <threadinterrupt.h>\n+#include <util/system.h>\n+\n+#ifdef USE_NATPMP\n+#include <natpmp.h>\n+#ifdef WIN32\n+#include <winsock2.h>\n+#else\n+#include <netinet/in.h>\n+#endif // #ifdef WIN32\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+#include <miniupnpc/miniupnpc.h>\n+#include <miniupnpc/upnpcommands.h>\n+#include <miniupnpc/upnperrors.h>\n+// The minimum supported miniUPnPc API version is set to 10. This keeps compatibility\n+// with Ubuntu 16.04 LTS and Debian 8 libminiupnpc-dev packages.\n+static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\");\n+#endif // #ifdef USE_UPNP\n+\n+#include <cassert>\n+#include <chrono>\n+#include <functional>\n+#include <string>\n+#include <thread>\n+\n+#if defined(USE_NATPMP) || defined(USE_UPNP)\n+static CThreadInterrupt g_mapport_interrupt;\n+static std::thread g_mapport_thread;\n+static MapPortProto g_mapport_current_proto = MapPortProto::NONE;\n+static unsigned int g_mapport_target_proto = g_mapport_current_proto;\n+static uint16_t g_mapport_external_port = 0;\n+static constexpr auto PORT_MAPPING_REANNOUNCE_PERIOD = std::chrono::minutes(20);\n+static constexpr auto PORT_MAPPING_RETRY_PERIOD = std::chrono::minutes(5);\n+\n+#ifdef USE_NATPMP\n+static bool NatpmpInit(natpmp_t* natpmp)\n+{\n+    const int r_init = initnatpmp(natpmp, /* detect gateway automatically */ 0, /* forced gateway - NOT APPLIED*/ 0);\n+    if (r_init == 0) return true;\n+    LogPrintf(\"NAT-PMP: initnatpmp() failed with %d error.\\n\", r_init);\n+    return false;\n+}\n+\n+static bool NatpmpDiscover(natpmp_t* natpmp, struct in_addr& external_ipv4_addr)\n+{\n+    const int r_send = sendpublicaddressrequest(natpmp);\n+    if (r_send == 2 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            external_ipv4_addr = response.pnu.publicaddress.addr;\n+            return true;\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"NAT-PMP: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"NAT-PMP: readnatpmpresponseorretry() for public address failed with %d error.\\n\", r_read);\n+        }\n+\n+    } else {\n+        LogPrintf(\"NAT-PMP: sendpublicaddressrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool NatpmpMapping(natpmp_t* natpmp, const struct in_addr& external_ipv4_addr, uint16_t private_port, bool& external_ip_discovered)\n+{\n+    const uint16_t suggested_external_port = g_mapport_external_port ? g_mapport_external_port : private_port;\n+    const int r_send = sendnewportmappingrequest(natpmp, NATPMP_PROTOCOL_TCP, private_port, suggested_external_port, 3600 /*seconds*/);\n+    if (r_send == 12 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            auto pm = response.pnu.newportmapping;\n+            if (private_port == pm.privateport && pm.lifetime > 0) {\n+                g_mapport_current_proto = MapPortProto::NAT_PMP;\n+                g_mapport_external_port = pm.mappedpublicport;\n+                const CService external{external_ipv4_addr, pm.mappedpublicport};\n+                if (!external_ip_discovered && fDiscover) {\n+                    AddLocal(external, LOCAL_MAPPED);\n+                    external_ip_discovered = true;\n+                }\n+\n+                LogPrintf(\"NAT-PMP: Port mapping successful. External address = %s\\n\", external.ToString());\n+                return true;\n+            } else {\n+                LogPrintf(\"NAT-PMP: Port mapping failed.\\n\");\n+            }\n+\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"NAT-PMP: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"NAT-PMP: readnatpmpresponseorretry() for port mapping failed with %d error.\\n\", r_read);\n+        }\n+\n+    } else {\n+        LogPrintf(\"NAT-PMP: sendnewportmappingrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool ThreadNatpmp()\n+{\n+    bool ret = false;\n+    natpmp_t natpmp;\n+    struct in_addr external_ipv4_addr;\n+    if (NatpmpInit(&natpmp) && NatpmpDiscover(&natpmp, external_ipv4_addr)) {\n+        bool external_ip_discovered = false;\n+        const uint16_t private_port = GetListenPort();\n+        do {\n+            ret = NatpmpMapping(&natpmp, external_ipv4_addr, private_port, external_ip_discovered);\n+        } while (ret && g_mapport_interrupt.sleep_for(PORT_MAPPING_REANNOUNCE_PERIOD));\n+\n+        const int r_send = sendnewportmappingrequest(&natpmp, NATPMP_PROTOCOL_TCP, private_port, g_mapport_external_port, /* remove a port mapping */ 0);\n+        g_mapport_external_port = 0;\n+        if (r_send == 12 /* OK */) {\n+            LogPrintf(\"NAT-PMP: Port mapping removed successfully.\\n\");\n+        } else {\n+            LogPrintf(\"NAT-PMP: sendnewportmappingrequest(0) failed with %d error.\\n\", r_send);\n+        }\n+    }\n+\n+    closenatpmp(&natpmp);\n+    return ret;\n+}\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+static bool ThreadUpnp()\n+{\n+    bool ret = false;\n+    std::string port = strprintf(\"%u\", GetListenPort());\n+    const char * multicastif = nullptr;\n+    const char * minissdpdpath = nullptr;\n+    struct UPNPDev * devlist = nullptr;\n+    char lanaddr[64];\n+\n+    int error = 0;\n+#if MINIUPNPC_API_VERSION < 14\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, &error);\n+#else\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, 2, &error);\n+#endif\n+\n+    struct UPNPUrls urls;\n+    struct IGDdatas data;\n+    int r;\n+\n+    r = UPNP_GetValidIGD(devlist, &urls, &data, lanaddr, sizeof(lanaddr));\n+    if (r == 1)\n+    {\n+        if (fDiscover) {\n+            char externalIPAddress[40];\n+            r = UPNP_GetExternalIPAddress(urls.controlURL, data.first.servicetype, externalIPAddress);\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                LogPrintf(\"UPnP: GetExternalIPAddress() returned %d\\n\", r);\n+            } else {\n+                if (externalIPAddress[0]) {\n+                    CNetAddr resolved;\n+                    if (LookupHost(externalIPAddress, resolved, false)) {\n+                        LogPrintf(\"UPnP: ExternalIPAddress = %s\\n\", resolved.ToString());\n+                        AddLocal(resolved, LOCAL_MAPPED);\n+                    }\n+                } else {\n+                    LogPrintf(\"UPnP: GetExternalIPAddress failed.\\n\");\n+                }\n+            }\n+        }\n+\n+        std::string strDesc = PACKAGE_NAME \" \" + FormatFullVersion();\n+\n+        do {\n+            r = UPNP_AddPortMapping(urls.controlURL, data.first.servicetype, port.c_str(), port.c_str(), lanaddr, strDesc.c_str(), \"TCP\", 0, \"0\");\n+\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                ret = false;\n+                LogPrintf(\"AddPortMapping(%s, %s, %s) failed with code %d (%s)\\n\", port, port, lanaddr, r, strupnperror(r));\n+                break;\n+            } else {\n+                ret = true;\n+                g_mapport_current_proto = MapPortProto::UPNP;\n+                LogPrintf(\"UPnP Port Mapping successful.\\n\");\n+            }\n+        } while (g_mapport_interrupt.sleep_for(PORT_MAPPING_REANNOUNCE_PERIOD));\n+\n+        r = UPNP_DeletePortMapping(urls.controlURL, data.first.servicetype, port.c_str(), \"TCP\", 0);\n+        LogPrintf(\"UPNP_DeletePortMapping() returned: %d\\n\", r);\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        FreeUPNPUrls(&urls);\n+    } else {\n+        LogPrintf(\"No valid UPnP IGDs found\\n\");\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        if (r != 0)\n+            FreeUPNPUrls(&urls);\n+    }\n+\n+    return ret;\n+}\n+#endif // #ifdef USE_UPNP\n+\n+static void ThreadMapPort()\n+{\n+    bool ok;\n+    do {\n+        ok = false;\n+\n+#ifdef USE_NATPMP\n+        if (g_mapport_target_proto & MapPortProto::NAT_PMP) {\n+            ok = ThreadNatpmp();\n+            if (ok) continue;\n+        }\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+        if (g_mapport_target_proto & MapPortProto::UPNP) {\n+            ok = ThreadUpnp();\n+            if (ok) continue;\n+        }\n+#endif // #ifdef USE_UPNP\n+\n+        if (g_mapport_target_proto == MapPortProto::NONE) {\n+            g_mapport_current_proto = MapPortProto::NONE;\n+            return;\n+        }\n+\n+    } while (ok || g_mapport_interrupt.sleep_for(PORT_MAPPING_RETRY_PERIOD));\n+}\n+\n+void StartMapPort(bool use_natpmp, bool use_upnp)\n+{\n+    if (use_natpmp) {\n+        g_mapport_target_proto |= MapPortProto::NAT_PMP;\n+    } else {\n+        g_mapport_target_proto &= ~MapPortProto::NAT_PMP;\n+    }\n+\n+    if (use_upnp) {\n+        g_mapport_target_proto |= MapPortProto::UPNP;\n+    } else {\n+        g_mapport_target_proto &= ~MapPortProto::UPNP;\n+    }\n+\n+    if (g_mapport_current_proto == MapPortProto::NONE) {\n+        if (g_mapport_target_proto == MapPortProto::NONE) {\n+            return;\n+        }\n+    } else if (g_mapport_target_proto & g_mapport_current_proto) {",
      "path": "src/mapport.cpp",
      "position": null,
      "original_position": 273,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "03e2733be1772ef69caf34e84c7b400f64a8ea9f",
      "in_reply_to_id": 381557545,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```C++\r\nvoid StartMapPort(bool use_natpmp, bool use_upnp)\r\n{\r\n    // Both protocols are enabled, so\r\n    // g_mapport_target_proto == MapPortProto::NAT_PMP | MapPortProto::UPNP\r\n    //\r\n    // UPnP is currently using, so\r\n    // g_mapport_current_proto == MapPortProto::UPNP\r\n    //\r\n    // A user disables UPnP then passed arguments are:\r\n    // use_natpmp == true, use_upnp = false\r\n\r\n    if (use_natpmp) {\r\n        // Effectively noop here as MapPortProto::NAT_PMP is set already.\r\n        g_mapport_target_proto |= MapPortProto::NAT_PMP;\r\n    } else {\r\n        g_mapport_target_proto &= ~MapPortProto::NAT_PMP;\r\n    }\r\n\r\n    if (use_upnp) {\r\n        g_mapport_target_proto |= MapPortProto::UPNP;\r\n    } else {\r\n        // Unset MapPortProto::UPNP bit.\r\n        g_mapport_target_proto &= ~MapPortProto::UPNP;\r\n    }\r\n\r\n    // At this point variables are set to the following values:\r\n    // g_mapport_target_proto == MapPortProto::NAT_PMP\r\n    // g_mapport_current_proto == MapPortProto::UPNP\r\n    // ...\r\n    if (g_mapport_current_proto == MapPortProto::NONE) {\r\n        if (g_mapport_target_proto == MapPortProto::NONE) {\r\n            return;\r\n        }\r\n    // ... and the next condition evaluates to false.\r\n    } else if (g_mapport_target_proto & g_mapport_current_proto) {\r\n        return;\r\n    }\r\n\r\n    // Making the changes...\r\n    ...\r\n}\r\n```\r\n\r\nAnd logs confirm this logic.",
      "created_at": "2020-02-21T12:06:51Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r382547566",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/382547566"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 275,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/382571364",
      "pull_request_review_id": 362615449,
      "id": 382571364,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjU3MTM2NA==",
      "diff_hunk": "@@ -0,0 +1,320 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <mapport.h>\n+\n+#include <clientversion.h>\n+#include <logging.h>\n+#include <net.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <threadinterrupt.h>\n+#include <util/system.h>\n+\n+#ifdef USE_NATPMP\n+#include <natpmp.h>\n+#ifdef WIN32\n+#include <winsock2.h>\n+#else\n+#include <netinet/in.h>\n+#endif // #ifdef WIN32\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+#include <miniupnpc/miniupnpc.h>\n+#include <miniupnpc/upnpcommands.h>\n+#include <miniupnpc/upnperrors.h>\n+// The minimum supported miniUPnPc API version is set to 10. This keeps compatibility\n+// with Ubuntu 16.04 LTS and Debian 8 libminiupnpc-dev packages.\n+static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\");\n+#endif // #ifdef USE_UPNP\n+\n+#include <cassert>\n+#include <chrono>\n+#include <functional>\n+#include <string>\n+#include <thread>\n+\n+#if defined(USE_NATPMP) || defined(USE_UPNP)\n+static CThreadInterrupt g_mapport_interrupt;\n+static std::thread g_mapport_thread;\n+static MapPortProto g_mapport_current_proto = MapPortProto::NONE;\n+static unsigned int g_mapport_target_proto = g_mapport_current_proto;\n+static uint16_t g_mapport_external_port = 0;\n+static constexpr auto PORT_MAPPING_REANNOUNCE_PERIOD = std::chrono::minutes(20);\n+static constexpr auto PORT_MAPPING_RETRY_PERIOD = std::chrono::minutes(5);\n+\n+#ifdef USE_NATPMP\n+static bool NatpmpInit(natpmp_t* natpmp)\n+{\n+    const int r_init = initnatpmp(natpmp, /* detect gateway automatically */ 0, /* forced gateway - NOT APPLIED*/ 0);\n+    if (r_init == 0) return true;\n+    LogPrintf(\"NAT-PMP: initnatpmp() failed with %d error.\\n\", r_init);\n+    return false;\n+}\n+\n+static bool NatpmpDiscover(natpmp_t* natpmp, struct in_addr& external_ipv4_addr)\n+{\n+    const int r_send = sendpublicaddressrequest(natpmp);\n+    if (r_send == 2 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            external_ipv4_addr = response.pnu.publicaddress.addr;\n+            return true;\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"NAT-PMP: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"NAT-PMP: readnatpmpresponseorretry() for public address failed with %d error.\\n\", r_read);\n+        }\n+\n+    } else {\n+        LogPrintf(\"NAT-PMP: sendpublicaddressrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool NatpmpMapping(natpmp_t* natpmp, const struct in_addr& external_ipv4_addr, uint16_t private_port, bool& external_ip_discovered)\n+{\n+    const uint16_t suggested_external_port = g_mapport_external_port ? g_mapport_external_port : private_port;\n+    const int r_send = sendnewportmappingrequest(natpmp, NATPMP_PROTOCOL_TCP, private_port, suggested_external_port, 3600 /*seconds*/);\n+    if (r_send == 12 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            auto pm = response.pnu.newportmapping;\n+            if (private_port == pm.privateport && pm.lifetime > 0) {\n+                g_mapport_current_proto = MapPortProto::NAT_PMP;\n+                g_mapport_external_port = pm.mappedpublicport;\n+                const CService external{external_ipv4_addr, pm.mappedpublicport};\n+                if (!external_ip_discovered && fDiscover) {\n+                    AddLocal(external, LOCAL_MAPPED);\n+                    external_ip_discovered = true;\n+                }\n+\n+                LogPrintf(\"NAT-PMP: Port mapping successful. External address = %s\\n\", external.ToString());\n+                return true;\n+            } else {\n+                LogPrintf(\"NAT-PMP: Port mapping failed.\\n\");\n+            }\n+\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"NAT-PMP: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"NAT-PMP: readnatpmpresponseorretry() for port mapping failed with %d error.\\n\", r_read);\n+        }\n+\n+    } else {\n+        LogPrintf(\"NAT-PMP: sendnewportmappingrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool ThreadNatpmp()\n+{\n+    bool ret = false;\n+    natpmp_t natpmp;\n+    struct in_addr external_ipv4_addr;\n+    if (NatpmpInit(&natpmp) && NatpmpDiscover(&natpmp, external_ipv4_addr)) {\n+        bool external_ip_discovered = false;\n+        const uint16_t private_port = GetListenPort();\n+        do {\n+            ret = NatpmpMapping(&natpmp, external_ipv4_addr, private_port, external_ip_discovered);\n+        } while (ret && g_mapport_interrupt.sleep_for(PORT_MAPPING_REANNOUNCE_PERIOD));\n+\n+        const int r_send = sendnewportmappingrequest(&natpmp, NATPMP_PROTOCOL_TCP, private_port, g_mapport_external_port, /* remove a port mapping */ 0);\n+        g_mapport_external_port = 0;\n+        if (r_send == 12 /* OK */) {\n+            LogPrintf(\"NAT-PMP: Port mapping removed successfully.\\n\");\n+        } else {\n+            LogPrintf(\"NAT-PMP: sendnewportmappingrequest(0) failed with %d error.\\n\", r_send);\n+        }\n+    }\n+\n+    closenatpmp(&natpmp);\n+    return ret;\n+}\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+static bool ThreadUpnp()\n+{\n+    bool ret = false;\n+    std::string port = strprintf(\"%u\", GetListenPort());\n+    const char * multicastif = nullptr;\n+    const char * minissdpdpath = nullptr;\n+    struct UPNPDev * devlist = nullptr;\n+    char lanaddr[64];\n+\n+    int error = 0;\n+#if MINIUPNPC_API_VERSION < 14\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, &error);\n+#else\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, 2, &error);\n+#endif\n+\n+    struct UPNPUrls urls;\n+    struct IGDdatas data;\n+    int r;\n+\n+    r = UPNP_GetValidIGD(devlist, &urls, &data, lanaddr, sizeof(lanaddr));\n+    if (r == 1)\n+    {\n+        if (fDiscover) {\n+            char externalIPAddress[40];\n+            r = UPNP_GetExternalIPAddress(urls.controlURL, data.first.servicetype, externalIPAddress);\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                LogPrintf(\"UPnP: GetExternalIPAddress() returned %d\\n\", r);\n+            } else {\n+                if (externalIPAddress[0]) {\n+                    CNetAddr resolved;\n+                    if (LookupHost(externalIPAddress, resolved, false)) {\n+                        LogPrintf(\"UPnP: ExternalIPAddress = %s\\n\", resolved.ToString());\n+                        AddLocal(resolved, LOCAL_MAPPED);\n+                    }\n+                } else {\n+                    LogPrintf(\"UPnP: GetExternalIPAddress failed.\\n\");\n+                }\n+            }\n+        }\n+\n+        std::string strDesc = PACKAGE_NAME \" \" + FormatFullVersion();\n+\n+        do {\n+            r = UPNP_AddPortMapping(urls.controlURL, data.first.servicetype, port.c_str(), port.c_str(), lanaddr, strDesc.c_str(), \"TCP\", 0, \"0\");\n+\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                ret = false;\n+                LogPrintf(\"AddPortMapping(%s, %s, %s) failed with code %d (%s)\\n\", port, port, lanaddr, r, strupnperror(r));\n+                break;\n+            } else {\n+                ret = true;\n+                g_mapport_current_proto = MapPortProto::UPNP;\n+                LogPrintf(\"UPnP Port Mapping successful.\\n\");\n+            }\n+        } while (g_mapport_interrupt.sleep_for(PORT_MAPPING_REANNOUNCE_PERIOD));\n+\n+        r = UPNP_DeletePortMapping(urls.controlURL, data.first.servicetype, port.c_str(), \"TCP\", 0);\n+        LogPrintf(\"UPNP_DeletePortMapping() returned: %d\\n\", r);\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        FreeUPNPUrls(&urls);\n+    } else {\n+        LogPrintf(\"No valid UPnP IGDs found\\n\");\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        if (r != 0)\n+            FreeUPNPUrls(&urls);\n+    }\n+\n+    return ret;\n+}\n+#endif // #ifdef USE_UPNP\n+\n+static void ThreadMapPort()\n+{\n+    bool ok;\n+    do {\n+        ok = false;\n+\n+#ifdef USE_NATPMP\n+        if (g_mapport_target_proto & MapPortProto::NAT_PMP) {\n+            ok = ThreadNatpmp();\n+            if (ok) continue;\n+        }\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+        if (g_mapport_target_proto & MapPortProto::UPNP) {\n+            ok = ThreadUpnp();\n+            if (ok) continue;\n+        }\n+#endif // #ifdef USE_UPNP\n+\n+        if (g_mapport_target_proto == MapPortProto::NONE) {\n+            g_mapport_current_proto = MapPortProto::NONE;\n+            return;\n+        }\n+\n+    } while (ok || g_mapport_interrupt.sleep_for(PORT_MAPPING_RETRY_PERIOD));\n+}\n+\n+void StartMapPort(bool use_natpmp, bool use_upnp)\n+{\n+    if (use_natpmp) {\n+        g_mapport_target_proto |= MapPortProto::NAT_PMP;\n+    } else {\n+        g_mapport_target_proto &= ~MapPortProto::NAT_PMP;\n+    }\n+\n+    if (use_upnp) {\n+        g_mapport_target_proto |= MapPortProto::UPNP;\n+    } else {\n+        g_mapport_target_proto &= ~MapPortProto::UPNP;\n+    }\n+\n+    if (g_mapport_current_proto == MapPortProto::NONE) {\n+        if (g_mapport_target_proto == MapPortProto::NONE) {\n+            return;\n+        }\n+    } else if (g_mapport_target_proto & g_mapport_current_proto) {",
      "path": "src/mapport.cpp",
      "position": null,
      "original_position": 273,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "03e2733be1772ef69caf34e84c7b400f64a8ea9f",
      "in_reply_to_id": 381557545,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Got it. I was confusing it with (target & new_target)",
      "created_at": "2020-02-21T13:07:25Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r382571364",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/382571364"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 275,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/382750749",
      "pull_request_review_id": 362846053,
      "id": 382750749,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc1MDc0OQ==",
      "diff_hunk": "@@ -0,0 +1,322 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <mapport.h>\n+\n+#include <clientversion.h>\n+#include <logging.h>\n+#include <net.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <threadinterrupt.h>\n+#include <util/system.h>\n+\n+#ifdef USE_NATPMP\n+#include <natpmp.h>\n+#ifdef WIN32\n+#include <winsock2.h>\n+#else\n+#include <netinet/in.h>\n+#endif // #ifdef WIN32\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+#include <miniupnpc/miniupnpc.h>\n+#include <miniupnpc/upnpcommands.h>\n+#include <miniupnpc/upnperrors.h>\n+// The minimum supported miniUPnPc API version is set to 10. This keeps compatibility\n+// with Ubuntu 16.04 LTS and Debian 8 libminiupnpc-dev packages.\n+static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\");\n+#endif // #ifdef USE_UPNP\n+\n+#include <cassert>\n+#include <chrono>\n+#include <functional>\n+#include <string>\n+#include <thread>\n+\n+#if defined(USE_NATPMP) || defined(USE_UPNP)\n+static CThreadInterrupt g_mapport_interrupt;\n+static std::thread g_mapport_thread;\n+static MapPortProto g_mapport_current_proto = MapPortProto::NONE;\n+static unsigned int g_mapport_target_proto = g_mapport_current_proto;\n+static constexpr auto PORT_MAPPING_REANNOUNCE_PERIOD = std::chrono::minutes(20);\n+static constexpr auto PORT_MAPPING_RETRY_PERIOD = std::chrono::minutes(5);\n+\n+#ifdef USE_NATPMP\n+static uint16_t g_mapport_external_port = 0;\n+static bool NatpmpInit(natpmp_t* natpmp)\n+{\n+    const int r_init = initnatpmp(natpmp, /* detect gateway automatically */ 0, /* forced gateway - NOT APPLIED*/ 0);\n+    if (r_init == 0) return true;\n+    LogPrintf(\"NAT-PMP: initnatpmp() failed with %d error.\\n\", r_init);\n+    return false;\n+}\n+\n+static bool NatpmpDiscover(natpmp_t* natpmp, struct in_addr& external_ipv4_addr)\n+{\n+    const int r_send = sendpublicaddressrequest(natpmp);\n+    if (r_send == 2 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            external_ipv4_addr = response.pnu.publicaddress.addr;\n+            return true;\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"NAT-PMP: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"NAT-PMP: readnatpmpresponseorretry() for public address failed with %d error.\\n\", r_read);\n+        }\n+\n+    } else {\n+        LogPrintf(\"NAT-PMP: sendpublicaddressrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool NatpmpMapping(natpmp_t* natpmp, const struct in_addr& external_ipv4_addr, uint16_t private_port, bool& external_ip_discovered)\n+{\n+    const uint16_t suggested_external_port = g_mapport_external_port ? g_mapport_external_port : private_port;\n+    const int r_send = sendnewportmappingrequest(natpmp, NATPMP_PROTOCOL_TCP, private_port, suggested_external_port, 3600 /*seconds*/);\n+    if (r_send == 12 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            auto pm = response.pnu.newportmapping;\n+            if (private_port == pm.privateport && pm.lifetime > 0) {\n+                g_mapport_current_proto = MapPortProto::NAT_PMP;\n+                g_mapport_external_port = pm.mappedpublicport;\n+                const CService external{external_ipv4_addr, pm.mappedpublicport};\n+                if (!external_ip_discovered && fDiscover) {\n+                    AddLocal(external, LOCAL_MAPPED);\n+                    external_ip_discovered = true;\n+                }\n+\n+                LogPrintf(\"NAT-PMP: Port mapping successful. External address = %s\\n\", external.ToString());\n+                return true;\n+            } else {\n+                LogPrintf(\"NAT-PMP: Port mapping failed.\\n\");\n+            }\n+\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"NAT-PMP: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"NAT-PMP: readnatpmpresponseorretry() for port mapping failed with %d error.\\n\", r_read);\n+        }\n+\n+    } else {\n+        LogPrintf(\"NAT-PMP: sendnewportmappingrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool ThreadNatpmp()\n+{\n+    bool ret = false;\n+    natpmp_t natpmp;\n+    struct in_addr external_ipv4_addr;\n+    if (NatpmpInit(&natpmp) && NatpmpDiscover(&natpmp, external_ipv4_addr)) {\n+        bool external_ip_discovered = false;\n+        const uint16_t private_port = GetListenPort();\n+        g_mapport_interrupt.reset();",
      "path": "src/mapport.cpp",
      "position": null,
      "original_position": 136,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "dd3229e7af8563c69d26955c4207f73ae1d3bc94",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This should be reset outside of the protocol-specific functions, or else we could end up with a race.",
      "created_at": "2020-02-21T18:58:20Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r382750749",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/382750749"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 136,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/382751074",
      "pull_request_review_id": 362846053,
      "id": 382751074,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc1MTA3NA==",
      "diff_hunk": "@@ -0,0 +1,322 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <mapport.h>\n+\n+#include <clientversion.h>\n+#include <logging.h>\n+#include <net.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <threadinterrupt.h>\n+#include <util/system.h>\n+\n+#ifdef USE_NATPMP\n+#include <natpmp.h>\n+#ifdef WIN32\n+#include <winsock2.h>\n+#else\n+#include <netinet/in.h>\n+#endif // #ifdef WIN32\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+#include <miniupnpc/miniupnpc.h>\n+#include <miniupnpc/upnpcommands.h>\n+#include <miniupnpc/upnperrors.h>\n+// The minimum supported miniUPnPc API version is set to 10. This keeps compatibility\n+// with Ubuntu 16.04 LTS and Debian 8 libminiupnpc-dev packages.\n+static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\");\n+#endif // #ifdef USE_UPNP\n+\n+#include <cassert>\n+#include <chrono>\n+#include <functional>\n+#include <string>\n+#include <thread>\n+\n+#if defined(USE_NATPMP) || defined(USE_UPNP)\n+static CThreadInterrupt g_mapport_interrupt;\n+static std::thread g_mapport_thread;\n+static MapPortProto g_mapport_current_proto = MapPortProto::NONE;\n+static unsigned int g_mapport_target_proto = g_mapport_current_proto;\n+static constexpr auto PORT_MAPPING_REANNOUNCE_PERIOD = std::chrono::minutes(20);\n+static constexpr auto PORT_MAPPING_RETRY_PERIOD = std::chrono::minutes(5);\n+\n+#ifdef USE_NATPMP\n+static uint16_t g_mapport_external_port = 0;\n+static bool NatpmpInit(natpmp_t* natpmp)\n+{\n+    const int r_init = initnatpmp(natpmp, /* detect gateway automatically */ 0, /* forced gateway - NOT APPLIED*/ 0);\n+    if (r_init == 0) return true;\n+    LogPrintf(\"NAT-PMP: initnatpmp() failed with %d error.\\n\", r_init);\n+    return false;\n+}\n+\n+static bool NatpmpDiscover(natpmp_t* natpmp, struct in_addr& external_ipv4_addr)\n+{\n+    const int r_send = sendpublicaddressrequest(natpmp);\n+    if (r_send == 2 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            external_ipv4_addr = response.pnu.publicaddress.addr;\n+            return true;\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"NAT-PMP: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"NAT-PMP: readnatpmpresponseorretry() for public address failed with %d error.\\n\", r_read);\n+        }\n+\n+    } else {\n+        LogPrintf(\"NAT-PMP: sendpublicaddressrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool NatpmpMapping(natpmp_t* natpmp, const struct in_addr& external_ipv4_addr, uint16_t private_port, bool& external_ip_discovered)\n+{\n+    const uint16_t suggested_external_port = g_mapport_external_port ? g_mapport_external_port : private_port;\n+    const int r_send = sendnewportmappingrequest(natpmp, NATPMP_PROTOCOL_TCP, private_port, suggested_external_port, 3600 /*seconds*/);\n+    if (r_send == 12 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            auto pm = response.pnu.newportmapping;\n+            if (private_port == pm.privateport && pm.lifetime > 0) {\n+                g_mapport_current_proto = MapPortProto::NAT_PMP;\n+                g_mapport_external_port = pm.mappedpublicport;\n+                const CService external{external_ipv4_addr, pm.mappedpublicport};\n+                if (!external_ip_discovered && fDiscover) {\n+                    AddLocal(external, LOCAL_MAPPED);\n+                    external_ip_discovered = true;\n+                }\n+\n+                LogPrintf(\"NAT-PMP: Port mapping successful. External address = %s\\n\", external.ToString());\n+                return true;\n+            } else {\n+                LogPrintf(\"NAT-PMP: Port mapping failed.\\n\");\n+            }\n+\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"NAT-PMP: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"NAT-PMP: readnatpmpresponseorretry() for port mapping failed with %d error.\\n\", r_read);\n+        }\n+\n+    } else {\n+        LogPrintf(\"NAT-PMP: sendnewportmappingrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool ThreadNatpmp()\n+{\n+    bool ret = false;\n+    natpmp_t natpmp;\n+    struct in_addr external_ipv4_addr;\n+    if (NatpmpInit(&natpmp) && NatpmpDiscover(&natpmp, external_ipv4_addr)) {\n+        bool external_ip_discovered = false;\n+        const uint16_t private_port = GetListenPort();\n+        g_mapport_interrupt.reset();\n+        do {\n+            ret = NatpmpMapping(&natpmp, external_ipv4_addr, private_port, external_ip_discovered);\n+        } while (ret && g_mapport_interrupt.sleep_for(PORT_MAPPING_REANNOUNCE_PERIOD));\n+\n+        const int r_send = sendnewportmappingrequest(&natpmp, NATPMP_PROTOCOL_TCP, private_port, g_mapport_external_port, /* remove a port mapping */ 0);\n+        g_mapport_external_port = 0;\n+        if (r_send == 12 /* OK */) {\n+            LogPrintf(\"NAT-PMP: Port mapping removed successfully.\\n\");\n+        } else {\n+            LogPrintf(\"NAT-PMP: sendnewportmappingrequest(0) failed with %d error.\\n\", r_send);\n+        }\n+    }\n+\n+    closenatpmp(&natpmp);\n+    return ret;\n+}\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+static bool ThreadUpnp()\n+{\n+    bool ret = false;\n+    std::string port = strprintf(\"%u\", GetListenPort());\n+    const char * multicastif = nullptr;\n+    const char * minissdpdpath = nullptr;\n+    struct UPNPDev * devlist = nullptr;\n+    char lanaddr[64];\n+\n+    int error = 0;\n+#if MINIUPNPC_API_VERSION < 14\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, &error);\n+#else\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, 2, &error);\n+#endif\n+\n+    struct UPNPUrls urls;\n+    struct IGDdatas data;\n+    int r;\n+\n+    r = UPNP_GetValidIGD(devlist, &urls, &data, lanaddr, sizeof(lanaddr));\n+    if (r == 1)\n+    {\n+        if (fDiscover) {\n+            char externalIPAddress[40];\n+            r = UPNP_GetExternalIPAddress(urls.controlURL, data.first.servicetype, externalIPAddress);\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                LogPrintf(\"UPnP: GetExternalIPAddress() returned %d\\n\", r);\n+            } else {\n+                if (externalIPAddress[0]) {\n+                    CNetAddr resolved;\n+                    if (LookupHost(externalIPAddress, resolved, false)) {\n+                        LogPrintf(\"UPnP: ExternalIPAddress = %s\\n\", resolved.ToString());\n+                        AddLocal(resolved, LOCAL_MAPPED);\n+                    }\n+                } else {\n+                    LogPrintf(\"UPnP: GetExternalIPAddress failed.\\n\");\n+                }\n+            }\n+        }\n+\n+        std::string strDesc = PACKAGE_NAME \" \" + FormatFullVersion();\n+\n+        g_mapport_interrupt.reset();\n+        do {\n+            r = UPNP_AddPortMapping(urls.controlURL, data.first.servicetype, port.c_str(), port.c_str(), lanaddr, strDesc.c_str(), \"TCP\", 0, \"0\");\n+\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                ret = false;\n+                LogPrintf(\"AddPortMapping(%s, %s, %s) failed with code %d (%s)\\n\", port, port, lanaddr, r, strupnperror(r));\n+                break;\n+            } else {\n+                ret = true;\n+                g_mapport_current_proto = MapPortProto::UPNP;\n+                LogPrintf(\"UPnP Port Mapping successful.\\n\");\n+            }\n+        } while (g_mapport_interrupt.sleep_for(PORT_MAPPING_REANNOUNCE_PERIOD));\n+\n+        r = UPNP_DeletePortMapping(urls.controlURL, data.first.servicetype, port.c_str(), \"TCP\", 0);\n+        LogPrintf(\"UPNP_DeletePortMapping() returned: %d\\n\", r);\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        FreeUPNPUrls(&urls);\n+    } else {\n+        LogPrintf(\"No valid UPnP IGDs found\\n\");\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        if (r != 0)\n+            FreeUPNPUrls(&urls);\n+    }\n+\n+    return ret;\n+}\n+#endif // #ifdef USE_UPNP\n+\n+static void ThreadMapPort()\n+{\n+    bool ok;\n+    do {\n+        ok = false;\n+\n+#ifdef USE_NATPMP\n+        if (g_mapport_target_proto & MapPortProto::NAT_PMP) {\n+            ok = ThreadNatpmp();\n+            if (ok) continue;\n+        }\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+        if (g_mapport_target_proto & MapPortProto::UPNP) {\n+            ok = ThreadUpnp();\n+            if (ok) continue;\n+        }\n+#endif // #ifdef USE_UPNP\n+\n+        if (g_mapport_target_proto == MapPortProto::NONE) {\n+            g_mapport_current_proto = MapPortProto::NONE;\n+            return;\n+        }\n+\n+    } while (ok || g_mapport_interrupt.sleep_for(PORT_MAPPING_RETRY_PERIOD));",
      "path": "src/mapport.cpp",
      "position": 251,
      "original_position": 254,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "dd3229e7af8563c69d26955c4207f73ae1d3bc94",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This will exit if it get the interrupt, causing target changes to shut off port mapping entirely.",
      "created_at": "2020-02-21T18:59:02Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r382751074",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/382751074"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 251,
      "original_line": 251,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/382904239",
      "pull_request_review_id": 363022932,
      "id": 382904239,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjkwNDIzOQ==",
      "diff_hunk": "@@ -0,0 +1,322 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <mapport.h>\n+\n+#include <clientversion.h>\n+#include <logging.h>\n+#include <net.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <threadinterrupt.h>\n+#include <util/system.h>\n+\n+#ifdef USE_NATPMP\n+#include <natpmp.h>\n+#ifdef WIN32\n+#include <winsock2.h>\n+#else\n+#include <netinet/in.h>\n+#endif // #ifdef WIN32\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+#include <miniupnpc/miniupnpc.h>\n+#include <miniupnpc/upnpcommands.h>\n+#include <miniupnpc/upnperrors.h>\n+// The minimum supported miniUPnPc API version is set to 10. This keeps compatibility\n+// with Ubuntu 16.04 LTS and Debian 8 libminiupnpc-dev packages.\n+static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\");\n+#endif // #ifdef USE_UPNP\n+\n+#include <cassert>\n+#include <chrono>\n+#include <functional>\n+#include <string>\n+#include <thread>\n+\n+#if defined(USE_NATPMP) || defined(USE_UPNP)\n+static CThreadInterrupt g_mapport_interrupt;\n+static std::thread g_mapport_thread;\n+static MapPortProto g_mapport_current_proto = MapPortProto::NONE;\n+static unsigned int g_mapport_target_proto = g_mapport_current_proto;\n+static constexpr auto PORT_MAPPING_REANNOUNCE_PERIOD = std::chrono::minutes(20);\n+static constexpr auto PORT_MAPPING_RETRY_PERIOD = std::chrono::minutes(5);\n+\n+#ifdef USE_NATPMP\n+static uint16_t g_mapport_external_port = 0;\n+static bool NatpmpInit(natpmp_t* natpmp)\n+{\n+    const int r_init = initnatpmp(natpmp, /* detect gateway automatically */ 0, /* forced gateway - NOT APPLIED*/ 0);\n+    if (r_init == 0) return true;\n+    LogPrintf(\"NAT-PMP: initnatpmp() failed with %d error.\\n\", r_init);\n+    return false;\n+}\n+\n+static bool NatpmpDiscover(natpmp_t* natpmp, struct in_addr& external_ipv4_addr)\n+{\n+    const int r_send = sendpublicaddressrequest(natpmp);\n+    if (r_send == 2 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            external_ipv4_addr = response.pnu.publicaddress.addr;\n+            return true;\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"NAT-PMP: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"NAT-PMP: readnatpmpresponseorretry() for public address failed with %d error.\\n\", r_read);\n+        }\n+\n+    } else {\n+        LogPrintf(\"NAT-PMP: sendpublicaddressrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool NatpmpMapping(natpmp_t* natpmp, const struct in_addr& external_ipv4_addr, uint16_t private_port, bool& external_ip_discovered)\n+{\n+    const uint16_t suggested_external_port = g_mapport_external_port ? g_mapport_external_port : private_port;\n+    const int r_send = sendnewportmappingrequest(natpmp, NATPMP_PROTOCOL_TCP, private_port, suggested_external_port, 3600 /*seconds*/);\n+    if (r_send == 12 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            auto pm = response.pnu.newportmapping;\n+            if (private_port == pm.privateport && pm.lifetime > 0) {\n+                g_mapport_current_proto = MapPortProto::NAT_PMP;\n+                g_mapport_external_port = pm.mappedpublicport;\n+                const CService external{external_ipv4_addr, pm.mappedpublicport};\n+                if (!external_ip_discovered && fDiscover) {\n+                    AddLocal(external, LOCAL_MAPPED);\n+                    external_ip_discovered = true;\n+                }\n+\n+                LogPrintf(\"NAT-PMP: Port mapping successful. External address = %s\\n\", external.ToString());\n+                return true;\n+            } else {\n+                LogPrintf(\"NAT-PMP: Port mapping failed.\\n\");\n+            }\n+\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"NAT-PMP: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"NAT-PMP: readnatpmpresponseorretry() for port mapping failed with %d error.\\n\", r_read);\n+        }\n+\n+    } else {\n+        LogPrintf(\"NAT-PMP: sendnewportmappingrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool ThreadNatpmp()\n+{\n+    bool ret = false;\n+    natpmp_t natpmp;\n+    struct in_addr external_ipv4_addr;\n+    if (NatpmpInit(&natpmp) && NatpmpDiscover(&natpmp, external_ipv4_addr)) {\n+        bool external_ip_discovered = false;\n+        const uint16_t private_port = GetListenPort();\n+        g_mapport_interrupt.reset();\n+        do {\n+            ret = NatpmpMapping(&natpmp, external_ipv4_addr, private_port, external_ip_discovered);\n+        } while (ret && g_mapport_interrupt.sleep_for(PORT_MAPPING_REANNOUNCE_PERIOD));\n+\n+        const int r_send = sendnewportmappingrequest(&natpmp, NATPMP_PROTOCOL_TCP, private_port, g_mapport_external_port, /* remove a port mapping */ 0);\n+        g_mapport_external_port = 0;\n+        if (r_send == 12 /* OK */) {\n+            LogPrintf(\"NAT-PMP: Port mapping removed successfully.\\n\");\n+        } else {\n+            LogPrintf(\"NAT-PMP: sendnewportmappingrequest(0) failed with %d error.\\n\", r_send);\n+        }\n+    }\n+\n+    closenatpmp(&natpmp);\n+    return ret;\n+}\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+static bool ThreadUpnp()\n+{\n+    bool ret = false;\n+    std::string port = strprintf(\"%u\", GetListenPort());\n+    const char * multicastif = nullptr;\n+    const char * minissdpdpath = nullptr;\n+    struct UPNPDev * devlist = nullptr;\n+    char lanaddr[64];\n+\n+    int error = 0;\n+#if MINIUPNPC_API_VERSION < 14\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, &error);\n+#else\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, 2, &error);\n+#endif\n+\n+    struct UPNPUrls urls;\n+    struct IGDdatas data;\n+    int r;\n+\n+    r = UPNP_GetValidIGD(devlist, &urls, &data, lanaddr, sizeof(lanaddr));\n+    if (r == 1)\n+    {\n+        if (fDiscover) {\n+            char externalIPAddress[40];\n+            r = UPNP_GetExternalIPAddress(urls.controlURL, data.first.servicetype, externalIPAddress);\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                LogPrintf(\"UPnP: GetExternalIPAddress() returned %d\\n\", r);\n+            } else {\n+                if (externalIPAddress[0]) {\n+                    CNetAddr resolved;\n+                    if (LookupHost(externalIPAddress, resolved, false)) {\n+                        LogPrintf(\"UPnP: ExternalIPAddress = %s\\n\", resolved.ToString());\n+                        AddLocal(resolved, LOCAL_MAPPED);\n+                    }\n+                } else {\n+                    LogPrintf(\"UPnP: GetExternalIPAddress failed.\\n\");\n+                }\n+            }\n+        }\n+\n+        std::string strDesc = PACKAGE_NAME \" \" + FormatFullVersion();\n+\n+        g_mapport_interrupt.reset();\n+        do {\n+            r = UPNP_AddPortMapping(urls.controlURL, data.first.servicetype, port.c_str(), port.c_str(), lanaddr, strDesc.c_str(), \"TCP\", 0, \"0\");\n+\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                ret = false;\n+                LogPrintf(\"AddPortMapping(%s, %s, %s) failed with code %d (%s)\\n\", port, port, lanaddr, r, strupnperror(r));\n+                break;\n+            } else {\n+                ret = true;\n+                g_mapport_current_proto = MapPortProto::UPNP;\n+                LogPrintf(\"UPnP Port Mapping successful.\\n\");\n+            }\n+        } while (g_mapport_interrupt.sleep_for(PORT_MAPPING_REANNOUNCE_PERIOD));\n+\n+        r = UPNP_DeletePortMapping(urls.controlURL, data.first.servicetype, port.c_str(), \"TCP\", 0);\n+        LogPrintf(\"UPNP_DeletePortMapping() returned: %d\\n\", r);\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        FreeUPNPUrls(&urls);\n+    } else {\n+        LogPrintf(\"No valid UPnP IGDs found\\n\");\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        if (r != 0)\n+            FreeUPNPUrls(&urls);\n+    }\n+\n+    return ret;\n+}\n+#endif // #ifdef USE_UPNP\n+\n+static void ThreadMapPort()\n+{\n+    bool ok;\n+    do {\n+        ok = false;\n+\n+#ifdef USE_NATPMP\n+        if (g_mapport_target_proto & MapPortProto::NAT_PMP) {\n+            ok = ThreadNatpmp();\n+            if (ok) continue;\n+        }\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+        if (g_mapport_target_proto & MapPortProto::UPNP) {\n+            ok = ThreadUpnp();\n+            if (ok) continue;\n+        }\n+#endif // #ifdef USE_UPNP\n+\n+        if (g_mapport_target_proto == MapPortProto::NONE) {\n+            g_mapport_current_proto = MapPortProto::NONE;\n+            return;\n+        }\n+\n+    } while (ok || g_mapport_interrupt.sleep_for(PORT_MAPPING_RETRY_PERIOD));",
      "path": "src/mapport.cpp",
      "position": 251,
      "original_position": 254,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "dd3229e7af8563c69d26955c4207f73ae1d3bc94",
      "in_reply_to_id": 382751074,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If the protocol switch is initiated by a user, the `g_mapport_interrupt()` call will end the internal protocol-specific loop in the `ThreadNatpmp()` or in the `ThreadUpnp()`, `ok == true` and `g_mapport_interrupt.sleep_for(PORT_MAPPING_RETRY_PERIOD)` will not call at all.\r\n\r\nIf the protocol switch is initiated by a protocol failure, `ok == false` and `g_mapport_interrupt.sleep_for(PORT_MAPPING_RETRY_PERIOD)` will behave as intended.\r\n\r\nSetting `g_mapport_target_proto` variable to `MapPortProto::NONE` also causes shutting off port mapping entirely.\r\n\r\n",
      "created_at": "2020-02-22T10:51:02Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r382904239",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/382904239"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 251,
      "original_line": 251,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/382954341",
      "pull_request_review_id": 363059461,
      "id": 382954341,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk1NDM0MQ==",
      "diff_hunk": "@@ -0,0 +1,342 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <mapport.h>\n+\n+#include <clientversion.h>\n+#include <logging.h>\n+#include <net.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <threadinterrupt.h>\n+#include <util/system.h>\n+\n+#ifdef USE_NATPMP\n+#include <natpmp.h>\n+#ifdef WIN32\n+#include <winsock2.h>\n+#else\n+#include <netinet/in.h>\n+#endif // #ifdef WIN32\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+#include <miniupnpc/miniupnpc.h>\n+#include <miniupnpc/upnpcommands.h>\n+#include <miniupnpc/upnperrors.h>\n+// The minimum supported miniUPnPc API version is set to 10. This keeps compatibility\n+// with Ubuntu 16.04 LTS and Debian 8 libminiupnpc-dev packages.\n+static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\");\n+#endif // #ifdef USE_UPNP\n+\n+#include <atomic>\n+#include <cassert>\n+#include <chrono>\n+#include <functional>\n+#include <string>\n+#include <thread>\n+\n+#if defined(USE_NATPMP) || defined(USE_UPNP)\n+static CThreadInterrupt g_mapport_interrupt;\n+static std::thread g_mapport_thread;\n+static std::atomic_uint g_mapport_target_proto{MapPortProto::NONE};\n+static std::atomic<MapPortProto> g_mapport_current_proto{MapPortProto::NONE};\n+static constexpr auto PORT_MAPPING_REANNOUNCE_PERIOD = std::chrono::minutes(20);\n+static constexpr auto PORT_MAPPING_RETRY_PERIOD = std::chrono::minutes(5);\n+\n+#ifdef USE_NATPMP\n+static uint16_t g_mapport_external_port = 0;\n+static bool NatpmpInit(natpmp_t* natpmp)\n+{\n+    const int r_init = initnatpmp(natpmp, /* detect gateway automatically */ 0, /* forced gateway - NOT APPLIED*/ 0);\n+    if (r_init == 0) return true;\n+    LogPrintf(\"NAT-PMP: initnatpmp() failed with %d error.\\n\", r_init);\n+    return false;\n+}\n+\n+static bool NatpmpDiscover(natpmp_t* natpmp, struct in_addr& external_ipv4_addr)\n+{\n+    const int r_send = sendpublicaddressrequest(natpmp);\n+    if (r_send == 2 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            external_ipv4_addr = response.pnu.publicaddress.addr;\n+            return true;\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"NAT-PMP: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"NAT-PMP: readnatpmpresponseorretry() for public address failed with %d error.\\n\", r_read);\n+        }\n+\n+    } else {\n+        LogPrintf(\"NAT-PMP: sendpublicaddressrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool NatpmpMapping(natpmp_t* natpmp, const struct in_addr& external_ipv4_addr, uint16_t private_port, bool& external_ip_discovered)\n+{\n+    const uint16_t suggested_external_port = g_mapport_external_port ? g_mapport_external_port : private_port;\n+    const int r_send = sendnewportmappingrequest(natpmp, NATPMP_PROTOCOL_TCP, private_port, suggested_external_port, 3600 /*seconds*/);\n+    if (r_send == 12 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            auto pm = response.pnu.newportmapping;\n+            if (private_port == pm.privateport && pm.lifetime > 0) {\n+                g_mapport_external_port = pm.mappedpublicport;\n+                const CService external{external_ipv4_addr, pm.mappedpublicport};\n+                if (!external_ip_discovered && fDiscover) {\n+                    AddLocal(external, LOCAL_MAPPED);\n+                    external_ip_discovered = true;\n+                }\n+\n+                LogPrintf(\"NAT-PMP: Port mapping successful. External address = %s\\n\", external.ToString());\n+                return true;\n+            } else {\n+                LogPrintf(\"NAT-PMP: Port mapping failed.\\n\");\n+            }\n+\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"NAT-PMP: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"NAT-PMP: readnatpmpresponseorretry() for port mapping failed with %d error.\\n\", r_read);\n+        }\n+\n+    } else {\n+        LogPrintf(\"NAT-PMP: sendnewportmappingrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool ThreadNatpmp()\n+{\n+    bool ret = false;\n+    natpmp_t natpmp;\n+    struct in_addr external_ipv4_addr;\n+    if (NatpmpInit(&natpmp) && NatpmpDiscover(&natpmp, external_ipv4_addr)) {\n+        bool external_ip_discovered = false;\n+        const uint16_t private_port = GetListenPort();\n+        do {\n+            ret = NatpmpMapping(&natpmp, external_ipv4_addr, private_port, external_ip_discovered);\n+        } while (ret && g_mapport_interrupt.sleep_for(PORT_MAPPING_REANNOUNCE_PERIOD));\n+        g_mapport_interrupt.reset();",
      "path": "src/mapport.cpp",
      "position": 133,
      "original_position": 139,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "d9ecda8fa0ebce5b6da972691b19f4425164ae43",
      "in_reply_to_id": null,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@luke-jr \r\n> This should be reset outside of the protocol-specific functions, or else we could end up with a race.\r\n\r\nLooking into the `CThreadInterrupt` class implementation I couldn't see possibilities for a race.\r\n\r\nWhat did I miss?",
      "created_at": "2020-02-23T01:08:27Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r382954341",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/382954341"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 133,
      "original_line": 133,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/382957249",
      "pull_request_review_id": 363061187,
      "id": 382957249,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk1NzI0OQ==",
      "diff_hunk": "@@ -115,14 +117,39 @@ static void ThreadMapPort()\n     } while (g_upnp_interrupt.sleep_for(PORT_MAPPING_RETRY_PERIOD));\n }\n \n-void StartMapPort()\n+void StartThread()",
      "path": "src/mapport.cpp",
      "position": null,
      "original_position": 21,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "acb567e3eecf3e63e629c4bffca2124462142352",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This name is way too vague...",
      "created_at": "2020-02-23T02:11:59Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r382957249",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/382957249"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 120,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/382957368",
      "pull_request_review_id": 363061187,
      "id": 382957368,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk1NzM2OA==",
      "diff_hunk": "@@ -12,7 +12,12 @@ static const bool DEFAULT_UPNP = USE_UPNP;\n static const bool DEFAULT_UPNP = false;\n #endif\n \n-void StartMapPort();\n+enum MapPortProto : unsigned int {",
      "path": "src/mapport.h",
      "position": null,
      "original_position": 5,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "acb567e3eecf3e63e629c4bffca2124462142352",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`enum class`",
      "created_at": "2020-02-23T02:14:54Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r382957368",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/382957368"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 15,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/382959771",
      "pull_request_review_id": 363061187,
      "id": 382959771,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk1OTc3MQ==",
      "diff_hunk": "@@ -50,6 +51,10 @@ OptionsDialog::OptionsDialog(QWidget *parent, bool enableWallet) :\n #ifndef USE_UPNP\n     ui->mapPortUpnp->setEnabled(false);\n #endif\n+    connect(this, &QDialog::accepted, [this](){\n+        QSettings settings;\n+        model->node().mapPort(settings.value(\"fUseUPnP\").toBool());",
      "path": "src/qt/optionsdialog.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "2b0ba0cfe41a1260c75497114e5932d2b9da0d1c",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Are we sure the settings are changed *before* the signal? Or could it be in parallel and therefore a race?",
      "created_at": "2020-02-23T03:09:27Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r382959771",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/382959771"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 56,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383034794",
      "pull_request_review_id": 363061187,
      "id": 383034794,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzAzNDc5NA==",
      "diff_hunk": "@@ -447,7 +447,12 @@ void SetupServerArgs()\n #endif\n #else\n     hidden_args.emplace_back(\"-upnp\");\n-#endif\n+#endif // #ifdef USE_UPNP\n+#ifdef USE_NATPMP\n+    gArgs.AddArg(\"-natpmp\", strprintf(\"Use NAT-PMP to map the listening port (default: %s)\", DEFAULT_NATPMP ? \"1 when listening and no -proxy\" : 0), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "de19f109c77790c06a3b92527a4780aa5d11b532",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Pretty sure `a?b:c` requires `b` and `c` to have the same type.",
      "created_at": "2020-02-23T20:14:40Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r383034794",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383034794"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 452,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383035036",
      "pull_request_review_id": 363061187,
      "id": 383035036,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzAzNTAzNg==",
      "diff_hunk": "@@ -447,7 +447,12 @@ void SetupServerArgs()\n #endif\n #else\n     hidden_args.emplace_back(\"-upnp\");\n-#endif\n+#endif // #ifdef USE_UPNP\n+#ifdef USE_NATPMP\n+    gArgs.AddArg(\"-natpmp\", strprintf(\"Use NAT-PMP to map the listening port (default: %s)\", DEFAULT_NATPMP ? \"1 when listening and no -proxy\" : 0), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "de19f109c77790c06a3b92527a4780aa5d11b532",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Pretty sure `a?b:c` requires `b` and `c` to have the same type.",
      "created_at": "2020-02-23T20:18:07Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r383035036",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383035036"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 452,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383494027",
      "pull_request_review_id": 363675606,
      "id": 383494027,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQ5NDAyNw==",
      "diff_hunk": "@@ -115,14 +117,39 @@ static void ThreadMapPort()\n     } while (g_upnp_interrupt.sleep_for(PORT_MAPPING_RETRY_PERIOD));\n }\n \n-void StartMapPort()\n+void StartThread()",
      "path": "src/mapport.cpp",
      "position": null,
      "original_position": 21,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "acb567e3eecf3e63e629c4bffca2124462142352",
      "in_reply_to_id": 382957249,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> This name is way too vague...\r\n\r\nYeah... I'm not good at choosing English names, and will appreciate your suggestion.",
      "created_at": "2020-02-24T20:23:07Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r383494027",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383494027"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 120,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383496750",
      "pull_request_review_id": 363678930,
      "id": 383496750,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQ5Njc1MA==",
      "diff_hunk": "@@ -12,7 +12,12 @@ static const bool DEFAULT_UPNP = USE_UPNP;\n static const bool DEFAULT_UPNP = false;\n #endif\n \n-void StartMapPort();\n+enum MapPortProto : unsigned int {",
      "path": "src/mapport.h",
      "position": null,
      "original_position": 5,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "acb567e3eecf3e63e629c4bffca2124462142352",
      "in_reply_to_id": 382957368,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It will require to define bitwise operators which are used here:\r\nhttps://github.com/bitcoin/bitcoin/blob/d9ecda8fa0ebce5b6da972691b19f4425164ae43/src/mapport.cpp#L297-L304\r\n\r\nMaybe in follow-up?",
      "created_at": "2020-02-24T20:29:09Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r383496750",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383496750"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 15,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383498346",
      "pull_request_review_id": 363680997,
      "id": 383498346,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQ5ODM0Ng==",
      "diff_hunk": "@@ -115,14 +117,39 @@ static void ThreadMapPort()\n     } while (g_upnp_interrupt.sleep_for(PORT_MAPPING_RETRY_PERIOD));\n }\n \n-void StartMapPort()\n+void StartThread()",
      "path": "src/mapport.cpp",
      "position": null,
      "original_position": 21,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "acb567e3eecf3e63e629c4bffca2124462142352",
      "in_reply_to_id": 382957249,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "StartThreadMapPort maybe",
      "created_at": "2020-02-24T20:32:51Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r383498346",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383498346"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 120,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383571052",
      "pull_request_review_id": 363769445,
      "id": 383571052,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzU3MTA1Mg==",
      "diff_hunk": "@@ -12,7 +12,12 @@ static const bool DEFAULT_UPNP = USE_UPNP;\n static const bool DEFAULT_UPNP = false;\n #endif\n \n-void StartMapPort();\n+enum MapPortProto : unsigned int {",
      "path": "src/mapport.h",
      "position": null,
      "original_position": 5,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "acb567e3eecf3e63e629c4bffca2124462142352",
      "in_reply_to_id": 382957368,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I wish there was a C++ standard QFlags...",
      "created_at": "2020-02-24T23:15:27Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r383571052",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383571052"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 15,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383889887",
      "pull_request_review_id": 364154273,
      "id": 383889887,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzg4OTg4Nw==",
      "diff_hunk": "@@ -50,6 +51,10 @@ OptionsDialog::OptionsDialog(QWidget *parent, bool enableWallet) :\n #ifndef USE_UPNP\n     ui->mapPortUpnp->setEnabled(false);\n #endif\n+    connect(this, &QDialog::accepted, [this](){\n+        QSettings settings;\n+        model->node().mapPort(settings.value(\"fUseUPnP\").toBool());",
      "path": "src/qt/optionsdialog.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "2b0ba0cfe41a1260c75497114e5932d2b9da0d1c",
      "in_reply_to_id": 382959771,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Are we sure the settings are changed _before_ the signal? Or could it be in parallel and therefore a race?\r\n\r\nYes, we are. Please consider the following slot:\r\nhttps://github.com/bitcoin/bitcoin/blob/d9ecda8fa0ebce5b6da972691b19f4425164ae43/src/qt/optionsdialog.cpp#L284-L289\r\n\r\nAll changes are submitted to the model in the `mapper->submit()` call _before_ the `QDialog::accepted()` signal is emitted when the dialog has been accepted by calling `accept()`.\r\n\r\nThen the following connection:\r\nhttps://github.com/bitcoin/bitcoin/blob/d9ecda8fa0ebce5b6da972691b19f4425164ae43/src/qt/optionsdialog.cpp#L57-L60\r\ndoes its work.",
      "created_at": "2020-02-25T13:51:23Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r383889887",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/383889887"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 56,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384020701",
      "pull_request_review_id": 364318059,
      "id": 384020701,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDAyMDcwMQ==",
      "diff_hunk": "@@ -447,7 +447,12 @@ void SetupServerArgs()\n #endif\n #else\n     hidden_args.emplace_back(\"-upnp\");\n-#endif\n+#endif // #ifdef USE_UPNP\n+#ifdef USE_NATPMP\n+    gArgs.AddArg(\"-natpmp\", strprintf(\"Use NAT-PMP to map the listening port (default: %s)\", DEFAULT_NATPMP ? \"1 when listening and no -proxy\" : 0), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "de19f109c77790c06a3b92527a4780aa5d11b532",
      "in_reply_to_id": 383034794,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2020-02-25T17:30:00Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r384020701",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384020701"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 452,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384020937",
      "pull_request_review_id": 364318333,
      "id": 384020937,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDAyMDkzNw==",
      "diff_hunk": "@@ -447,7 +447,12 @@ void SetupServerArgs()\n #endif\n #else\n     hidden_args.emplace_back(\"-upnp\");\n-#endif\n+#endif // #ifdef USE_UPNP\n+#ifdef USE_NATPMP\n+    gArgs.AddArg(\"-natpmp\", strprintf(\"Use NAT-PMP to map the listening port (default: %s)\", DEFAULT_NATPMP ? \"1 when listening and no -proxy\" : 0), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "de19f109c77790c06a3b92527a4780aa5d11b532",
      "in_reply_to_id": 383035036,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2020-02-25T17:30:24Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r384020937",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384020937"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 452,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384021154",
      "pull_request_review_id": 364318559,
      "id": 384021154,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDAyMTE1NA==",
      "diff_hunk": "@@ -115,14 +117,39 @@ static void ThreadMapPort()\n     } while (g_upnp_interrupt.sleep_for(PORT_MAPPING_RETRY_PERIOD));\n }\n \n-void StartMapPort()\n+void StartThread()",
      "path": "src/mapport.cpp",
      "position": null,
      "original_position": 21,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "acb567e3eecf3e63e629c4bffca2124462142352",
      "in_reply_to_id": 382957249,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2020-02-25T17:30:44Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r384021154",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384021154"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 120,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384206803",
      "pull_request_review_id": 364543841,
      "id": 384206803,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDIwNjgwMw==",
      "diff_hunk": "@@ -0,0 +1,137 @@\n+// Copyright (c) 2020 The Bitcoin Core developers",
      "path": "src/mapport.cpp",
      "position": null,
      "original_position": 1,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "f93e76ad1bb37f8c3b770312c48e7955128bab65",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"refactor: Move port mapping code to own files\"\r\n\r\nNit: when you're copying/moving code, retain the copyright years of the original code.",
      "created_at": "2020-02-26T00:17:15Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r384206803",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384206803"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384207039",
      "pull_request_review_id": 364543841,
      "id": 384207039,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDIwNzAzOQ==",
      "diff_hunk": "@@ -35,9 +35,11 @@ static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\"\n static CThreadInterrupt g_upnp_interrupt;\n static std::thread g_upnp_thread;\n static constexpr auto PORT_MAPPING_REANNOUNCE_PERIOD = std::chrono::minutes(20);\n+static constexpr auto PORT_MAPPING_RETRY_PERIOD = std::chrono::minutes(5);\n \n-static void ThreadMapPort()\n+static bool ThreadUpnp()",
      "path": "src/mapport.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "9945c2e19311c3b566050cf7adb0864ed1620c79",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"net: Keep trying to use UPnP when -upnp=1\"\r\n\r\nThis is confusingly named when it isn't actually a thread on its own anymore.\r\n",
      "created_at": "2020-02-26T00:17:59Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r384207039",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384207039"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384310915",
      "pull_request_review_id": 364667484,
      "id": 384310915,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMxMDkxNQ==",
      "diff_hunk": "@@ -0,0 +1,137 @@\n+// Copyright (c) 2020 The Bitcoin Core developers",
      "path": "src/mapport.cpp",
      "position": null,
      "original_position": 1,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "f93e76ad1bb37f8c3b770312c48e7955128bab65",
      "in_reply_to_id": 384206803,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The UPnP support code has been added in 2011 (see #133).\r\nIs it correct to retain pre-2011 copyright years?\r\n\r\nCould it be \"2011-2020\" in new files?",
      "created_at": "2020-02-26T07:22:56Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r384310915",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384310915"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384318840",
      "pull_request_review_id": 364677293,
      "id": 384318840,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMxODg0MA==",
      "diff_hunk": "@@ -0,0 +1,137 @@\n+// Copyright (c) 2020 The Bitcoin Core developers",
      "path": "src/mapport.cpp",
      "position": null,
      "original_position": 1,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "f93e76ad1bb37f8c3b770312c48e7955128bab65",
      "in_reply_to_id": 384206803,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "See the latest [push](https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-591285675).",
      "created_at": "2020-02-26T07:46:46Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r384318840",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384318840"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384318974",
      "pull_request_review_id": 364677480,
      "id": 384318974,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMxODk3NA==",
      "diff_hunk": "@@ -35,9 +35,11 @@ static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\"\n static CThreadInterrupt g_upnp_interrupt;\n static std::thread g_upnp_thread;\n static constexpr auto PORT_MAPPING_REANNOUNCE_PERIOD = std::chrono::minutes(20);\n+static constexpr auto PORT_MAPPING_RETRY_PERIOD = std::chrono::minutes(5);\n \n-static void ThreadMapPort()\n+static bool ThreadUpnp()",
      "path": "src/mapport.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "9945c2e19311c3b566050cf7adb0864ed1620c79",
      "in_reply_to_id": 384207039,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "[Renamed](https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-591285675).",
      "created_at": "2020-02-26T07:47:09Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r384318974",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/384318974"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474281799",
      "pull_request_review_id": 471997437,
      "id": 474281799,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI4MTc5OQ==",
      "diff_hunk": "@@ -0,0 +1,9 @@\n+P2P and network changes\n+-----------------------\n+\n+- Added NAT-PMP port mapping support via [`libnatpmp`](https://miniupnp.tuxfamily.org/libnatpmp.html)\n+\n+Command-line options\n+--------------------\n+\n+-  The `-natpmp` option has been added to use NAT-PMP to map the listening port. If both `-upnp` and `-natpmp` options are provided, the former prevails.",
      "path": "doc/release-notes-18077.md",
      "position": null,
      "original_position": 9,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "225f512438f4391f6af255f851131358e3c466a2",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Neither should prevail - one should be attempted before the other, but both should work.",
      "created_at": "2020-08-20T21:26:06Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r474281799",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474281799"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 9,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/508586206",
      "pull_request_review_id": 512819049,
      "id": 508586206,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODU4NjIwNg==",
      "diff_hunk": "@@ -0,0 +1,19 @@\n+package=libnatpmp\n+$(package)_version=20150609\n+$(package)_download_path=https://miniupnp.tuxfamily.org/files/\n+$(package)_file_name=$(package)-$($(package)_version).tar.gz\n+$(package)_sha256_hash=e1aa9c4c4219bc06943d6b2130f664daee213fb262fcb94dd355815b8f4536b0",
      "path": "depends/packages/libnatpmp.mk",
      "position": 5,
      "original_position": 5,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "81a791d88d68e64968e52d8ff6ec20879bd5fad1",
      "in_reply_to_id": null,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Verified this locally.\r\n```\r\n% curl -O https://miniupnp.tuxfamily.org/files/libnatpmp-20150609.tar.gz\r\n% sha256sum libnatpmp-20150609.tar.gz\r\ne1aa9c4c4219bc06943d6b2130f664daee213fb262fcb94dd355815b8f4536b0  libnatpmp-20150609.tar.gz\r\n```",
      "created_at": "2020-10-20T15:01:58Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r508586206",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/508586206"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5,
      "original_line": 5,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/508821208",
      "pull_request_review_id": 512819049,
      "id": 508821208,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODgyMTIwOA==",
      "diff_hunk": "@@ -0,0 +1,137 @@\n+// Copyright (c) 2011-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <mapport.h>\n+\n+#include <clientversion.h>\n+#include <logging.h>\n+#include <net.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <threadinterrupt.h>\n+#include <util/system.h>\n+\n+#ifdef USE_UPNP\n+#include <miniupnpc/miniupnpc.h>\n+#include <miniupnpc/upnpcommands.h>\n+#include <miniupnpc/upnperrors.h>\n+// The minimum supported miniUPnPc API version is set to 10. This keeps compatibility\n+// with Ubuntu 16.04 LTS and Debian 8 libminiupnpc-dev packages.\n+static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\");\n+#endif\n+\n+#include <cassert>\n+#include <chrono>\n+#include <functional>\n+#include <string>\n+#include <thread>\n+\n+#ifdef USE_UPNP",
      "path": "src/mapport.cpp",
      "position": 149,
      "original_position": 34,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "035a41ca371675d0cb0fbfa8177553ec19068663",
      "in_reply_to_id": null,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "https://github.com/bitcoin/bitcoin/pull/18077/commits/035a41ca371675d0cb0fbfa8177553ec19068663\r\n\r\nVerified this is move-only from here on down.",
      "created_at": "2020-10-20T20:33:47Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r508821208",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/508821208"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 149,
      "original_line": 149,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/508822897",
      "pull_request_review_id": 512819049,
      "id": 508822897,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODgyMjg5Nw==",
      "diff_hunk": "@@ -33,11 +33,6 @@\n #include <memory>\n #include <condition_variable>\n \n-#ifndef WIN32\n-#include <arpa/inet.h>",
      "path": "src/net.h",
      "position": null,
      "original_position": 5,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "035a41ca371675d0cb0fbfa8177553ec19068663",
      "in_reply_to_id": null,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "https://github.com/bitcoin/bitcoin/pull/18077/commits/035a41ca371675d0cb0fbfa8177553ec19068663\r\n\r\nSo this was just unnecessary in the first place?",
      "created_at": "2020-10-20T20:36:45Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r508822897",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/508822897"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 37,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/508826548",
      "pull_request_review_id": 512819049,
      "id": 508826548,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODgyNjU0OA==",
      "diff_hunk": "@@ -35,9 +35,11 @@ static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\"\n static CThreadInterrupt g_upnp_interrupt;",
      "path": "src/mapport.cpp",
      "position": null,
      "original_position": 1,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "5b6af780967c428ec38fa18ae68a193d2d036f57",
      "in_reply_to_id": null,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "(Note on https://github.com/bitcoin/bitcoin/pull/18077/commits/5b6af780967c428ec38fa18ae68a193d2d036f57 as a whole)\r\n\r\nI certainly don't have qualms with this change but it seems orthogonal to NAT-PMP per se. Is it necessary for NAT-PMP somehow? Just curious.",
      "created_at": "2020-10-20T20:43:19Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r508826548",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/508826548"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 35,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/508829278",
      "pull_request_review_id": 512819049,
      "id": 508829278,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODgyOTI3OA==",
      "diff_hunk": "@@ -115,14 +117,39 @@ static void ThreadMapPort()\n     } while (g_upnp_interrupt.sleep_for(PORT_MAPPING_RETRY_PERIOD));\n }\n \n-void StartMapPort()\n+void StartThreadMapPort()\n {\n     if (!g_upnp_thread.joinable()) {\n         assert(!g_upnp_interrupt);\n         g_upnp_thread = std::thread((std::bind(&TraceThread<void (*)()>, \"upnp\", &ThreadMapPort)));\n     }\n }\n \n+static void DispatchMapPort()\n+{\n+    if (g_mapport_target_proto == MapPortProtoFlag::UPNP) {\n+        StartThreadMapPort();\n+    } else {\n+        InterruptMapPort();\n+        StopMapPort();\n+    }\n+}\n+\n+static void MapPortProtoSetEnabled(MapPortProtoFlag proto, bool enabled)",
      "path": "src/mapport.cpp",
      "position": 291,
      "original_position": 39,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "ea445ad4bc5b4d2904cbe234a627700a6d22d32e",
      "in_reply_to_id": null,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "https://github.com/bitcoin/bitcoin/pull/18077/commits/ea445ad4bc5b4d2904cbe234a627700a6d22d32e\r\n\r\nNote: simultaneous use of either NAT-PMP or upnp enabled in a later commit.",
      "created_at": "2020-10-20T20:48:14Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r508829278",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/508829278"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 291,
      "original_line": 291,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/508829874",
      "pull_request_review_id": 512819049,
      "id": 508829874,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODgyOTg3NA==",
      "diff_hunk": "@@ -33,8 +33,8 @@ static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\"\n #include <thread>\n \n #ifdef USE_UPNP\n-static CThreadInterrupt g_upnp_interrupt;\n-static std::thread g_upnp_thread;\n+static CThreadInterrupt g_mapport_interrupt;",
      "path": "src/mapport.cpp",
      "position": 41,
      "original_position": 6,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "1bf23f291d7c053538245f1a7f6f7699daf4a3b9",
      "in_reply_to_id": null,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "(Note on https://github.com/bitcoin/bitcoin/pull/18077/commits/1bf23f291d7c053538245f1a7f6f7699daf4a3b9 as a whole:) could be a scripteddiff AFAICT, but not a huge deal.",
      "created_at": "2020-10-20T20:49:17Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r508829874",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/508829874"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 41,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/508835955",
      "pull_request_review_id": 512819049,
      "id": 508835955,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODgzNTk1NQ==",
      "diff_hunk": "@@ -32,13 +41,117 @@ static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\"\n #include <string>\n #include <thread>\n \n-#ifdef USE_UPNP\n+#if defined(USE_NATPMP) || defined(USE_UPNP)\n static CThreadInterrupt g_mapport_interrupt;\n static std::thread g_mapport_thread;\n static std::atomic_uint g_mapport_target_proto{MapPortProtoFlag::NONE};\n static constexpr auto PORT_MAPPING_REANNOUNCE_PERIOD = std::chrono::minutes(20);\n static constexpr auto PORT_MAPPING_RETRY_PERIOD = std::chrono::minutes(5);\n \n+#ifdef USE_NATPMP\n+static uint16_t g_mapport_external_port = 0;\n+static bool NatpmpInit(natpmp_t* natpmp)\n+{\n+    const int r_init = initnatpmp(natpmp, /* detect gateway automatically */ 0, /* forced gateway - NOT APPLIED*/ 0);\n+    if (r_init == 0) return true;\n+    LogPrintf(\"natpmp: initnatpmp() failed with %d error.\\n\", r_init);\n+    return false;\n+}\n+\n+static bool NatpmpDiscover(natpmp_t* natpmp, struct in_addr& external_ipv4_addr)\n+{\n+    const int r_send = sendpublicaddressrequest(natpmp);\n+    if (r_send == 2 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            external_ipv4_addr = response.pnu.publicaddress.addr;\n+            return true;\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"natpmp: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"natpmp: readnatpmpresponseorretry() for public address failed with %d error.\\n\", r_read);\n+        }\n+\n+    } else {\n+        LogPrintf(\"natpmp: sendpublicaddressrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool NatpmpMapping(natpmp_t* natpmp, const struct in_addr& external_ipv4_addr, uint16_t private_port, bool& external_ip_discovered)\n+{\n+    const uint16_t suggested_external_port = g_mapport_external_port ? g_mapport_external_port : private_port;\n+    const int r_send = sendnewportmappingrequest(natpmp, NATPMP_PROTOCOL_TCP, private_port, suggested_external_port, 3600 /*seconds*/);\n+    if (r_send == 12 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            auto pm = response.pnu.newportmapping;\n+            if (private_port == pm.privateport && pm.lifetime > 0) {\n+                g_mapport_external_port = pm.mappedpublicport;\n+                const CService external{external_ipv4_addr, pm.mappedpublicport};\n+                if (!external_ip_discovered && fDiscover) {\n+                    AddLocal(external, LOCAL_MAPPED);\n+                    external_ip_discovered = true;\n+                }\n+\n+                LogPrintf(\"natpmp: Port mapping successful. External address = %s\\n\", external.ToString());\n+                return true;\n+            } else {\n+                LogPrintf(\"natpmp: Port mapping failed.\\n\");\n+            }\n+\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"natpmp: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"natpmp: readnatpmpresponseorretry() for port mapping failed with %d error.\\n\", r_read);\n+        }\n+\n+    } else {\n+        LogPrintf(\"natpmp: sendnewportmappingrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool ProcessNatpmp()\n+{\n+    bool ret = false;\n+    natpmp_t natpmp;\n+    struct in_addr external_ipv4_addr;\n+    if (NatpmpInit(&natpmp) && NatpmpDiscover(&natpmp, external_ipv4_addr)) {\n+        bool external_ip_discovered = false;",
      "path": "src/mapport.cpp",
      "position": 128,
      "original_position": 119,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "f6bd717f3f44f2a167ce2e548df1132789d0ea98",
      "in_reply_to_id": null,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "https://github.com/bitcoin/bitcoin/pull/18077/commits/f6bd717f3f44f2a167ce2e548df1132789d0ea98\r\n\r\nHm, I see we're explicitly setting this in `NetpmpMapping` but then it goes unused. No big deal, just curious.",
      "created_at": "2020-10-20T21:00:04Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r508835955",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/508835955"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 128,
      "original_line": 128,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/508839477",
      "pull_request_review_id": 512819049,
      "id": 508839477,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODgzOTQ3Nw==",
      "diff_hunk": "@@ -479,7 +479,12 @@ void SetupServerArgs(NodeContext& node)\n #endif\n #else\n     hidden_args.emplace_back(\"-upnp\");\n-#endif\n+#endif // #ifdef USE_UPNP\n+#ifdef USE_NATPMP\n+    argsman.AddArg(\"-natpmp\", strprintf(\"Use NAT-PMP to map the listening port (default: %s)\", DEFAULT_NATPMP ? \"1 when listening and no -proxy\" : \"0\"), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "ea022f30db70a8541f07243c41d5f7d0401d0a35",
      "in_reply_to_id": null,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: linebreak would be nice.",
      "created_at": "2020-10-20T21:06:31Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r508839477",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/508839477"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 484,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/508841927",
      "pull_request_review_id": 512819049,
      "id": 508841927,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODg0MTkyNw==",
      "diff_hunk": "@@ -50,6 +50,9 @@ OptionsDialog::OptionsDialog(QWidget *parent, bool enableWallet) :\n     /* Network elements init */\n #ifndef USE_UPNP\n     ui->mapPortUpnp->setEnabled(false);\n+#endif\n+#ifndef USE_NATPMP\n+    ui->mapPortNatpmp->setEnabled(false);",
      "path": "src/qt/optionsdialog.cpp",
      "position": 13,
      "original_position": 6,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "1f93ddff189a8201699a3d52ef4546b93aa0e948",
      "in_reply_to_id": null,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: not s/false/USE_NATPMP ?",
      "created_at": "2020-10-20T21:10:58Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r508841927",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/508841927"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 55,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/510322172",
      "pull_request_review_id": 514942815,
      "id": 510322172,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDMyMjE3Mg==",
      "diff_hunk": "@@ -33,11 +33,6 @@\n #include <memory>\n #include <condition_variable>\n \n-#ifndef WIN32\n-#include <arpa/inet.h>",
      "path": "src/net.h",
      "position": null,
      "original_position": 5,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "035a41ca371675d0cb0fbfa8177553ec19068663",
      "in_reply_to_id": 508822897,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes. I've submitted a dedicated #20221.",
      "created_at": "2020-10-22T17:05:44Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r510322172",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/510322172"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 37,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/510329265",
      "pull_request_review_id": 514952560,
      "id": 510329265,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDMyOTI2NQ==",
      "diff_hunk": "@@ -35,9 +35,11 @@ static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\"\n static CThreadInterrupt g_upnp_interrupt;",
      "path": "src/mapport.cpp",
      "position": null,
      "original_position": 1,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "5b6af780967c428ec38fa18ae68a193d2d036f57",
      "in_reply_to_id": 508826548,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The _\"net: Keep trying to use UPnP when -upnp=1\"_ commit (5b6af780967c428ec38fa18ae68a193d2d036f57) is a prerequisite for the _\"net: Add NAT-PMP to port mapping loop\"_ commit (c329ae5b6834e8dae6d178bc84321c7dc6e3c6fc).\r\nBoth commits make possible to switch port forwarding method at runtime.",
      "created_at": "2020-10-22T17:17:38Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r510329265",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/510329265"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 35,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/510337604",
      "pull_request_review_id": 514963255,
      "id": 510337604,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDMzNzYwNA==",
      "diff_hunk": "@@ -32,13 +41,117 @@ static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\"\n #include <string>\n #include <thread>\n \n-#ifdef USE_UPNP\n+#if defined(USE_NATPMP) || defined(USE_UPNP)\n static CThreadInterrupt g_mapport_interrupt;\n static std::thread g_mapport_thread;\n static std::atomic_uint g_mapport_target_proto{MapPortProtoFlag::NONE};\n static constexpr auto PORT_MAPPING_REANNOUNCE_PERIOD = std::chrono::minutes(20);\n static constexpr auto PORT_MAPPING_RETRY_PERIOD = std::chrono::minutes(5);\n \n+#ifdef USE_NATPMP\n+static uint16_t g_mapport_external_port = 0;\n+static bool NatpmpInit(natpmp_t* natpmp)\n+{\n+    const int r_init = initnatpmp(natpmp, /* detect gateway automatically */ 0, /* forced gateway - NOT APPLIED*/ 0);\n+    if (r_init == 0) return true;\n+    LogPrintf(\"natpmp: initnatpmp() failed with %d error.\\n\", r_init);\n+    return false;\n+}\n+\n+static bool NatpmpDiscover(natpmp_t* natpmp, struct in_addr& external_ipv4_addr)\n+{\n+    const int r_send = sendpublicaddressrequest(natpmp);\n+    if (r_send == 2 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            external_ipv4_addr = response.pnu.publicaddress.addr;\n+            return true;\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"natpmp: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"natpmp: readnatpmpresponseorretry() for public address failed with %d error.\\n\", r_read);\n+        }\n+\n+    } else {\n+        LogPrintf(\"natpmp: sendpublicaddressrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool NatpmpMapping(natpmp_t* natpmp, const struct in_addr& external_ipv4_addr, uint16_t private_port, bool& external_ip_discovered)\n+{\n+    const uint16_t suggested_external_port = g_mapport_external_port ? g_mapport_external_port : private_port;\n+    const int r_send = sendnewportmappingrequest(natpmp, NATPMP_PROTOCOL_TCP, private_port, suggested_external_port, 3600 /*seconds*/);\n+    if (r_send == 12 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            auto pm = response.pnu.newportmapping;\n+            if (private_port == pm.privateport && pm.lifetime > 0) {\n+                g_mapport_external_port = pm.mappedpublicport;\n+                const CService external{external_ipv4_addr, pm.mappedpublicport};\n+                if (!external_ip_discovered && fDiscover) {\n+                    AddLocal(external, LOCAL_MAPPED);\n+                    external_ip_discovered = true;\n+                }\n+\n+                LogPrintf(\"natpmp: Port mapping successful. External address = %s\\n\", external.ToString());\n+                return true;\n+            } else {\n+                LogPrintf(\"natpmp: Port mapping failed.\\n\");\n+            }\n+\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"natpmp: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"natpmp: readnatpmpresponseorretry() for port mapping failed with %d error.\\n\", r_read);\n+        }\n+\n+    } else {\n+        LogPrintf(\"natpmp: sendnewportmappingrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool ProcessNatpmp()\n+{\n+    bool ret = false;\n+    natpmp_t natpmp;\n+    struct in_addr external_ipv4_addr;\n+    if (NatpmpInit(&natpmp) && NatpmpDiscover(&natpmp, external_ipv4_addr)) {\n+        bool external_ip_discovered = false;",
      "path": "src/mapport.cpp",
      "position": 128,
      "original_position": 119,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "f6bd717f3f44f2a167ce2e548df1132789d0ea98",
      "in_reply_to_id": 508835955,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "As an in-out parameter, `external_ip_discovered` is used here https://github.com/bitcoin/bitcoin/blob/81a791d88d68e64968e52d8ff6ec20879bd5fad1/src/mapport.cpp#L104-L107 to prevent consecutive `AddLocal` calls. ",
      "created_at": "2020-10-22T17:31:11Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r510337604",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/510337604"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 128,
      "original_line": 128,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/510344800",
      "pull_request_review_id": 514972531,
      "id": 510344800,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM0NDgwMA==",
      "diff_hunk": "@@ -50,6 +50,9 @@ OptionsDialog::OptionsDialog(QWidget *parent, bool enableWallet) :\n     /* Network elements init */\n #ifndef USE_UPNP\n     ui->mapPortUpnp->setEnabled(false);\n+#endif\n+#ifndef USE_NATPMP\n+    ui->mapPortNatpmp->setEnabled(false);",
      "path": "src/qt/optionsdialog.cpp",
      "position": 13,
      "original_position": 6,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "1f93ddff189a8201699a3d52ef4546b93aa0e948",
      "in_reply_to_id": 508841927,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It won't compile if `USE_NATPMP` is undefined. Did I understand you correctly?",
      "created_at": "2020-10-22T17:43:04Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r510344800",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/510344800"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 55,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/510347832",
      "pull_request_review_id": 514976265,
      "id": 510347832,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM0NzgzMg==",
      "diff_hunk": "@@ -50,6 +50,9 @@ OptionsDialog::OptionsDialog(QWidget *parent, bool enableWallet) :\n     /* Network elements init */\n #ifndef USE_UPNP\n     ui->mapPortUpnp->setEnabled(false);\n+#endif\n+#ifndef USE_NATPMP\n+    ui->mapPortNatpmp->setEnabled(false);",
      "path": "src/qt/optionsdialog.cpp",
      "position": 13,
      "original_position": 6,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "1f93ddff189a8201699a3d52ef4546b93aa0e948",
      "in_reply_to_id": 508841927,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oh my mistake; I read that as ifdef.",
      "created_at": "2020-10-22T17:47:59Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r510347832",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/510347832"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 55,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/510376824",
      "pull_request_review_id": 515014330,
      "id": 510376824,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM3NjgyNA==",
      "diff_hunk": "@@ -33,8 +33,8 @@ static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\"\n #include <thread>\n \n #ifdef USE_UPNP\n-static CThreadInterrupt g_upnp_interrupt;\n-static std::thread g_upnp_thread;\n+static CThreadInterrupt g_mapport_interrupt;",
      "path": "src/mapport.cpp",
      "position": 41,
      "original_position": 6,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "1bf23f291d7c053538245f1a7f6f7699daf4a3b9",
      "in_reply_to_id": 508829874,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks! [Updated](https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-714683741).",
      "created_at": "2020-10-22T18:38:13Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r510376824",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/510376824"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 41,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/510377046",
      "pull_request_review_id": 515014633,
      "id": 510377046,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM3NzA0Ng==",
      "diff_hunk": "@@ -479,7 +479,12 @@ void SetupServerArgs(NodeContext& node)\n #endif\n #else\n     hidden_args.emplace_back(\"-upnp\");\n-#endif\n+#endif // #ifdef USE_UPNP\n+#ifdef USE_NATPMP\n+    argsman.AddArg(\"-natpmp\", strprintf(\"Use NAT-PMP to map the listening port (default: %s)\", DEFAULT_NATPMP ? \"1 when listening and no -proxy\" : \"0\"), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "ea022f30db70a8541f07243c41d5f7d0401d0a35",
      "in_reply_to_id": 508839477,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "[Updated](https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-714683741).",
      "created_at": "2020-10-22T18:38:40Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r510377046",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/510377046"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 484,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/510714033",
      "pull_request_review_id": 515442196,
      "id": 510714033,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDcxNDAzMw==",
      "diff_hunk": "@@ -479,7 +479,12 @@ void SetupServerArgs(NodeContext& node)\n #endif\n #else\n     hidden_args.emplace_back(\"-upnp\");\n-#endif\n+#endif // #ifdef USE_UPNP\n+#ifdef USE_NATPMP\n+    argsman.AddArg(\"-natpmp\", strprintf(\"Use NAT-PMP to map the listening port (default: %s)\", DEFAULT_NATPMP ? \"1 when listening and no -proxy\" : \"0\"), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "ea022f30db70a8541f07243c41d5f7d0401d0a35",
      "in_reply_to_id": 508839477,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Reverted back as a linebreak breaks `test/lint/check-doc.py` linter: https://travis-ci.org/github/bitcoin/bitcoin/jobs/738110074",
      "created_at": "2020-10-23T08:17:07Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r510714033",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/510714033"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 484,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/512074064",
      "pull_request_review_id": 516928142,
      "id": 512074064,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjA3NDA2NA==",
      "diff_hunk": "@@ -32,13 +41,117 @@ static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\"\n #include <string>\n #include <thread>\n \n-#ifdef USE_UPNP\n+#if defined(USE_NATPMP) || defined(USE_UPNP)\n static CThreadInterrupt g_mapport_interrupt;\n static std::thread g_mapport_thread;\n static std::atomic_uint g_mapport_target_proto{MapPortProtoFlag::NONE};\n static constexpr auto PORT_MAPPING_REANNOUNCE_PERIOD = std::chrono::minutes(20);\n static constexpr auto PORT_MAPPING_RETRY_PERIOD = std::chrono::minutes(5);\n \n+#ifdef USE_NATPMP\n+static uint16_t g_mapport_external_port = 0;\n+static bool NatpmpInit(natpmp_t* natpmp)\n+{\n+    const int r_init = initnatpmp(natpmp, /* detect gateway automatically */ 0, /* forced gateway - NOT APPLIED*/ 0);\n+    if (r_init == 0) return true;\n+    LogPrintf(\"natpmp: initnatpmp() failed with %d error.\\n\", r_init);\n+    return false;\n+}\n+\n+static bool NatpmpDiscover(natpmp_t* natpmp, struct in_addr& external_ipv4_addr)\n+{\n+    const int r_send = sendpublicaddressrequest(natpmp);\n+    if (r_send == 2 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            external_ipv4_addr = response.pnu.publicaddress.addr;\n+            return true;\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"natpmp: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"natpmp: readnatpmpresponseorretry() for public address failed with %d error.\\n\", r_read);\n+        }\n+\n+    } else {\n+        LogPrintf(\"natpmp: sendpublicaddressrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool NatpmpMapping(natpmp_t* natpmp, const struct in_addr& external_ipv4_addr, uint16_t private_port, bool& external_ip_discovered)\n+{\n+    const uint16_t suggested_external_port = g_mapport_external_port ? g_mapport_external_port : private_port;\n+    const int r_send = sendnewportmappingrequest(natpmp, NATPMP_PROTOCOL_TCP, private_port, suggested_external_port, 3600 /*seconds*/);\n+    if (r_send == 12 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            auto pm = response.pnu.newportmapping;\n+            if (private_port == pm.privateport && pm.lifetime > 0) {\n+                g_mapport_external_port = pm.mappedpublicport;\n+                const CService external{external_ipv4_addr, pm.mappedpublicport};\n+                if (!external_ip_discovered && fDiscover) {\n+                    AddLocal(external, LOCAL_MAPPED);\n+                    external_ip_discovered = true;\n+                }\n+\n+                LogPrintf(\"natpmp: Port mapping successful. External address = %s\\n\", external.ToString());\n+                return true;\n+            } else {\n+                LogPrintf(\"natpmp: Port mapping failed.\\n\");\n+            }\n+\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"natpmp: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"natpmp: readnatpmpresponseorretry() for port mapping failed with %d error.\\n\", r_read);\n+        }\n+\n+    } else {\n+        LogPrintf(\"natpmp: sendnewportmappingrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool ProcessNatpmp()\n+{\n+    bool ret = false;\n+    natpmp_t natpmp;\n+    struct in_addr external_ipv4_addr;\n+    if (NatpmpInit(&natpmp) && NatpmpDiscover(&natpmp, external_ipv4_addr)) {\n+        bool external_ip_discovered = false;",
      "path": "src/mapport.cpp",
      "position": 128,
      "original_position": 119,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "f6bd717f3f44f2a167ce2e548df1132789d0ea98",
      "in_reply_to_id": 508835955,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oh I see, thanks.",
      "created_at": "2020-10-26T15:58:13Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r512074064",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/512074064"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 128,
      "original_line": 128,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515256116",
      "pull_request_review_id": 520878706,
      "id": 515256116,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI1NjExNg==",
      "diff_hunk": "@@ -0,0 +1,9 @@\n+P2P and network changes\n+-----------------------\n+\n+- Added NAT-PMP port mapping support via [`libnatpmp`](https://miniupnp.tuxfamily.org/libnatpmp.html)\n+\n+Command-line options\n+--------------------\n+\n+-  The `-natpmp` option has been added to use NAT-PMP to map the listening port. If both `-upnp` and `-natpmp` options are provided, the former prevails.",
      "path": "doc/release-notes-18077.md",
      "position": null,
      "original_position": 9,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "90d9547f135ef0ffc00dd790072c3ae307f053ad",
      "in_reply_to_id": null,
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Perhaps I'm reading the code wrong, but it seems like \"If both UPnP and NAT-PMP are enabled, a successful allocation from UPnP prevails over one from NAT-PMP\" is a more accurate description here?\r\n\r\nI'm thinking about the case where both UPnP and NAT-PMP are enabled, but the gateway box is not responding to UPnP, in that case, a NAT-PMP allocation would still be accepted, right?",
      "created_at": "2020-10-30T17:20:45Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r515256116",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515256116"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 9,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515271554",
      "pull_request_review_id": 520896161,
      "id": 515271554,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI3MTU1NA==",
      "diff_hunk": "@@ -0,0 +1,9 @@\n+P2P and network changes\n+-----------------------\n+\n+- Added NAT-PMP port mapping support via [`libnatpmp`](https://miniupnp.tuxfamily.org/libnatpmp.html)\n+\n+Command-line options\n+--------------------\n+\n+-  The `-natpmp` option has been added to use NAT-PMP to map the listening port. If both `-upnp` and `-natpmp` options are provided, the former prevails.",
      "path": "doc/release-notes-18077.md",
      "position": null,
      "original_position": 9,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "90d9547f135ef0ffc00dd790072c3ae307f053ad",
      "in_reply_to_id": 515256116,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Perhaps I'm reading the code wrong, but it seems like \"If both UPnP and NAT-PMP are enabled, a successful allocation from UPnP prevails over one from NAT-PMP\" is a more accurate description here?\r\n\r\nThanks! It remained from the initial version of the PR :)\r\n[Updated](https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-719697155).",
      "created_at": "2020-10-30T17:39:37Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r515271554",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515271554"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 9,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515272813",
      "pull_request_review_id": 520897721,
      "id": 515272813,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI3MjgxMw==",
      "diff_hunk": "@@ -0,0 +1,9 @@\n+P2P and network changes\n+-----------------------\n+\n+- Added NAT-PMP port mapping support via [`libnatpmp`](https://miniupnp.tuxfamily.org/libnatpmp.html)\n+\n+Command-line options\n+--------------------\n+\n+-  The `-natpmp` option has been added to use NAT-PMP to map the listening port. If both `-upnp` and `-natpmp` options are provided, the former prevails.",
      "path": "doc/release-notes-18077.md",
      "position": null,
      "original_position": 9,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "90d9547f135ef0ffc00dd790072c3ae307f053ad",
      "in_reply_to_id": 515256116,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I'm thinking about the case where both UPnP and NAT-PMP are enabled, but the gateway box is not responding to UPnP, in that case, a NAT-PMP allocation would still be accepted, right\r\n\r\nThe `do` loop introduced in the c01073db04e94a8d67f29de3daead0e2574b1c26 commit is responsible for that.",
      "created_at": "2020-10-30T17:41:50Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r515272813",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515272813"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 9,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515414822",
      "pull_request_review_id": 471997437,
      "id": 515414822,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQxNDgyMg==",
      "diff_hunk": "@@ -0,0 +1,342 @@\n+// Copyright (c) 2011-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <mapport.h>\n+\n+#include <clientversion.h>\n+#include <logging.h>\n+#include <net.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <threadinterrupt.h>\n+#include <util/system.h>\n+\n+#ifdef USE_NATPMP\n+#include <natpmp.h>\n+#ifdef WIN32\n+#include <winsock2.h>\n+#else\n+#include <netinet/in.h>\n+#endif // #ifdef WIN32\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+#include <miniupnpc/miniupnpc.h>\n+#include <miniupnpc/upnpcommands.h>\n+#include <miniupnpc/upnperrors.h>\n+// The minimum supported miniUPnPc API version is set to 10. This keeps compatibility\n+// with Ubuntu 16.04 LTS and Debian 8 libminiupnpc-dev packages.\n+static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\");\n+#endif // #ifdef USE_UPNP\n+\n+#include <atomic>\n+#include <cassert>\n+#include <chrono>\n+#include <functional>\n+#include <string>\n+#include <thread>\n+\n+#if defined(USE_NATPMP) || defined(USE_UPNP)\n+static CThreadInterrupt g_mapport_interrupt;\n+static std::thread g_mapport_thread;\n+static std::atomic_uint g_mapport_enabled_protos{MapPortProtoFlag::NONE};\n+static std::atomic<MapPortProtoFlag> g_mapport_current_proto{MapPortProtoFlag::NONE};\n+static constexpr auto PORT_MAPPING_REANNOUNCE_PERIOD = std::chrono::minutes(20);\n+static constexpr auto PORT_MAPPING_RETRY_PERIOD = std::chrono::minutes(5);\n+\n+#ifdef USE_NATPMP\n+static uint16_t g_mapport_external_port = 0;\n+static bool NatpmpInit(natpmp_t* natpmp)\n+{\n+    const int r_init = initnatpmp(natpmp, /* detect gateway automatically */ 0, /* forced gateway - NOT APPLIED*/ 0);\n+    if (r_init == 0) return true;\n+    LogPrintf(\"natpmp: initnatpmp() failed with %d error.\\n\", r_init);\n+    return false;\n+}\n+\n+static bool NatpmpDiscover(natpmp_t* natpmp, struct in_addr& external_ipv4_addr)\n+{\n+    const int r_send = sendpublicaddressrequest(natpmp);\n+    if (r_send == 2 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            external_ipv4_addr = response.pnu.publicaddress.addr;\n+            return true;\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"natpmp: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"natpmp: readnatpmpresponseorretry() for public address failed with %d error.\\n\", r_read);\n+        }\n+\n+    } else {\n+        LogPrintf(\"natpmp: sendpublicaddressrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool NatpmpMapping(natpmp_t* natpmp, const struct in_addr& external_ipv4_addr, uint16_t private_port, bool& external_ip_discovered)\n+{\n+    const uint16_t suggested_external_port = g_mapport_external_port ? g_mapport_external_port : private_port;\n+    const int r_send = sendnewportmappingrequest(natpmp, NATPMP_PROTOCOL_TCP, private_port, suggested_external_port, 3600 /*seconds*/);\n+    if (r_send == 12 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            auto pm = response.pnu.newportmapping;\n+            if (private_port == pm.privateport && pm.lifetime > 0) {\n+                g_mapport_external_port = pm.mappedpublicport;\n+                const CService external{external_ipv4_addr, pm.mappedpublicport};\n+                if (!external_ip_discovered && fDiscover) {\n+                    AddLocal(external, LOCAL_MAPPED);\n+                    external_ip_discovered = true;\n+                }\n+\n+                LogPrintf(\"natpmp: Port mapping successful. External address = %s\\n\", external.ToString());\n+                return true;\n+            } else {\n+                LogPrintf(\"natpmp: Port mapping failed.\\n\");\n+            }\n+\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"natpmp: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"natpmp: readnatpmpresponseorretry() for port mapping failed with %d error.\\n\", r_read);\n+        }\n+\n+    } else {\n+        LogPrintf(\"natpmp: sendnewportmappingrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool ProcessNatpmp()\n+{\n+    bool ret = false;\n+    natpmp_t natpmp;\n+    struct in_addr external_ipv4_addr;\n+    if (NatpmpInit(&natpmp) && NatpmpDiscover(&natpmp, external_ipv4_addr)) {\n+        bool external_ip_discovered = false;\n+        const uint16_t private_port = GetListenPort();\n+        do {\n+            ret = NatpmpMapping(&natpmp, external_ipv4_addr, private_port, external_ip_discovered);\n+        } while (ret && g_mapport_interrupt.sleep_for(PORT_MAPPING_REANNOUNCE_PERIOD));\n+        g_mapport_interrupt.reset();\n+\n+        const int r_send = sendnewportmappingrequest(&natpmp, NATPMP_PROTOCOL_TCP, private_port, g_mapport_external_port, /* remove a port mapping */ 0);\n+        g_mapport_external_port = 0;\n+        if (r_send == 12 /* OK */) {\n+            LogPrintf(\"natpmp: Port mapping removed successfully.\\n\");\n+        } else {\n+            LogPrintf(\"natpmp: sendnewportmappingrequest(0) failed with %d error.\\n\", r_send);\n+        }\n+    }\n+\n+    closenatpmp(&natpmp);\n+    return ret;\n+}\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+static bool ProcessUpnp()\n+{\n+    bool ret = false;\n+    std::string port = strprintf(\"%u\", GetListenPort());\n+    const char * multicastif = nullptr;\n+    const char * minissdpdpath = nullptr;\n+    struct UPNPDev * devlist = nullptr;\n+    char lanaddr[64];\n+\n+    int error = 0;\n+#if MINIUPNPC_API_VERSION < 14\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, &error);\n+#else\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, 2, &error);\n+#endif\n+\n+    struct UPNPUrls urls;\n+    struct IGDdatas data;\n+    int r;\n+\n+    r = UPNP_GetValidIGD(devlist, &urls, &data, lanaddr, sizeof(lanaddr));\n+    if (r == 1)\n+    {\n+        if (fDiscover) {\n+            char externalIPAddress[40];\n+            r = UPNP_GetExternalIPAddress(urls.controlURL, data.first.servicetype, externalIPAddress);\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                LogPrintf(\"UPnP: GetExternalIPAddress() returned %d\\n\", r);\n+            } else {\n+                if (externalIPAddress[0]) {\n+                    CNetAddr resolved;\n+                    if (LookupHost(externalIPAddress, resolved, false)) {\n+                        LogPrintf(\"UPnP: ExternalIPAddress = %s\\n\", resolved.ToString());\n+                        AddLocal(resolved, LOCAL_MAPPED);\n+                    }\n+                } else {\n+                    LogPrintf(\"UPnP: GetExternalIPAddress failed.\\n\");\n+                }\n+            }\n+        }\n+\n+        std::string strDesc = PACKAGE_NAME \" \" + FormatFullVersion();\n+\n+        do {\n+            r = UPNP_AddPortMapping(urls.controlURL, data.first.servicetype, port.c_str(), port.c_str(), lanaddr, strDesc.c_str(), \"TCP\", 0, \"0\");\n+\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                ret = false;\n+                LogPrintf(\"AddPortMapping(%s, %s, %s) failed with code %d (%s)\\n\", port, port, lanaddr, r, strupnperror(r));\n+                break;\n+            } else {\n+                ret = true;\n+                LogPrintf(\"UPnP Port Mapping successful.\\n\");\n+            }\n+        } while (g_mapport_interrupt.sleep_for(PORT_MAPPING_REANNOUNCE_PERIOD));\n+        g_mapport_interrupt.reset();\n+\n+        r = UPNP_DeletePortMapping(urls.controlURL, data.first.servicetype, port.c_str(), \"TCP\", 0);\n+        LogPrintf(\"UPNP_DeletePortMapping() returned: %d\\n\", r);\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        FreeUPNPUrls(&urls);\n+    } else {\n+        LogPrintf(\"No valid UPnP IGDs found\\n\");\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        if (r != 0)\n+            FreeUPNPUrls(&urls);\n+    }\n+\n+    return ret;\n+}\n+#endif // #ifdef USE_UPNP\n+\n+static void ThreadMapPort()\n+{\n+    bool ok;\n+    do {\n+        ok = false;\n+\n+#ifdef USE_UPNP\n+        // High priority protocol.\n+        if (g_mapport_enabled_protos & MapPortProtoFlag::UPNP) {\n+            g_mapport_current_proto = MapPortProtoFlag::UPNP;\n+            ok = ProcessUpnp();\n+            if (ok) continue;\n+        }\n+#endif // #ifdef USE_UPNP\n+\n+#ifdef USE_NATPMP\n+        // Low priority protocol.\n+        if (g_mapport_enabled_protos & MapPortProtoFlag::NAT_PMP) {\n+            g_mapport_current_proto = MapPortProtoFlag::NAT_PMP;\n+            ok = ProcessNatpmp();\n+            if (ok) continue;\n+        }\n+#endif // #ifdef USE_NATPMP\n+\n+        g_mapport_current_proto = MapPortProtoFlag::NONE;\n+        if (g_mapport_enabled_protos == MapPortProtoFlag::NONE) {\n+            return;\n+        }\n+\n+    } while (ok || g_mapport_interrupt.sleep_for(PORT_MAPPING_RETRY_PERIOD));\n+}\n+\n+void StartThreadMapPort()\n+{\n+    if (!g_mapport_thread.joinable()) {\n+        assert(!g_mapport_interrupt);\n+        g_mapport_thread = std::thread(std::bind(&TraceThread<void (*)()>, \"mapport\", &ThreadMapPort));\n+    }\n+}\n+\n+static void DispatchMapPort()\n+{\n+    if (g_mapport_current_proto == MapPortProtoFlag::NONE && g_mapport_enabled_protos == MapPortProtoFlag::NONE) {\n+        return;\n+    }\n+\n+    if (g_mapport_current_proto == MapPortProtoFlag::NONE && g_mapport_enabled_protos != MapPortProtoFlag::NONE) {\n+        StartThreadMapPort();\n+        return;\n+    }\n+\n+    if (g_mapport_current_proto != MapPortProtoFlag::NONE && g_mapport_enabled_protos == MapPortProtoFlag::NONE) {\n+        InterruptMapPort();\n+        StopMapPort();\n+        return;\n+    }\n+\n+    if (g_mapport_enabled_protos & g_mapport_current_proto) {\n+        // Enabling another protocol does not cause switching from the currently used one.\n+        return;\n+    }\n+\n+    assert(g_mapport_thread.joinable());\n+    assert(!g_mapport_interrupt);",
      "path": "src/mapport.cpp",
      "position": 285,
      "original_position": 291,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "29fb5708ca04da9ca0c25c1b801887354eb714bc",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Couldn't this be true if the user is impossibly fast?",
      "created_at": "2020-10-30T22:51:58Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r515414822",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515414822"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 285,
      "original_line": 285,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515428173",
      "pull_request_review_id": 521090651,
      "id": 515428173,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQyODE3Mw==",
      "diff_hunk": "@@ -0,0 +1,9 @@\n+P2P and network changes\n+-----------------------\n+\n+- Added NAT-PMP port mapping support via [`libnatpmp`](https://miniupnp.tuxfamily.org/libnatpmp.html)\n+\n+Command-line options\n+--------------------\n+\n+-  The `-natpmp` option has been added to use NAT-PMP to map the listening port. If both `-upnp` and `-natpmp` options are provided, the former prevails.",
      "path": "doc/release-notes-18077.md",
      "position": null,
      "original_position": 9,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "225f512438f4391f6af255f851131358e3c466a2",
      "in_reply_to_id": 474281799,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Simultaneously? ",
      "created_at": "2020-10-30T23:59:17Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r515428173",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/515428173"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 9,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537609030",
      "pull_request_review_id": 546274855,
      "id": 537609030,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzYwOTAzMA==",
      "diff_hunk": "@@ -0,0 +1,342 @@\n+// Copyright (c) 2011-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <mapport.h>\n+\n+#include <clientversion.h>\n+#include <logging.h>\n+#include <net.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <threadinterrupt.h>\n+#include <util/system.h>\n+\n+#ifdef USE_NATPMP\n+#include <natpmp.h>\n+#ifdef WIN32\n+#include <winsock2.h>\n+#else\n+#include <netinet/in.h>\n+#endif // #ifdef WIN32\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+#include <miniupnpc/miniupnpc.h>\n+#include <miniupnpc/upnpcommands.h>\n+#include <miniupnpc/upnperrors.h>\n+// The minimum supported miniUPnPc API version is set to 10. This keeps compatibility\n+// with Ubuntu 16.04 LTS and Debian 8 libminiupnpc-dev packages.\n+static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\");\n+#endif // #ifdef USE_UPNP\n+\n+#include <atomic>\n+#include <cassert>\n+#include <chrono>\n+#include <functional>\n+#include <string>\n+#include <thread>\n+\n+#if defined(USE_NATPMP) || defined(USE_UPNP)\n+static CThreadInterrupt g_mapport_interrupt;\n+static std::thread g_mapport_thread;\n+static std::atomic_uint g_mapport_enabled_protos{MapPortProtoFlag::NONE};\n+static std::atomic<MapPortProtoFlag> g_mapport_current_proto{MapPortProtoFlag::NONE};\n+static constexpr auto PORT_MAPPING_REANNOUNCE_PERIOD = std::chrono::minutes(20);\n+static constexpr auto PORT_MAPPING_RETRY_PERIOD = std::chrono::minutes(5);\n+\n+#ifdef USE_NATPMP\n+static uint16_t g_mapport_external_port = 0;\n+static bool NatpmpInit(natpmp_t* natpmp)\n+{\n+    const int r_init = initnatpmp(natpmp, /* detect gateway automatically */ 0, /* forced gateway - NOT APPLIED*/ 0);\n+    if (r_init == 0) return true;\n+    LogPrintf(\"natpmp: initnatpmp() failed with %d error.\\n\", r_init);\n+    return false;\n+}\n+\n+static bool NatpmpDiscover(natpmp_t* natpmp, struct in_addr& external_ipv4_addr)\n+{\n+    const int r_send = sendpublicaddressrequest(natpmp);\n+    if (r_send == 2 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            external_ipv4_addr = response.pnu.publicaddress.addr;\n+            return true;\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"natpmp: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"natpmp: readnatpmpresponseorretry() for public address failed with %d error.\\n\", r_read);\n+        }\n+\n+    } else {\n+        LogPrintf(\"natpmp: sendpublicaddressrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool NatpmpMapping(natpmp_t* natpmp, const struct in_addr& external_ipv4_addr, uint16_t private_port, bool& external_ip_discovered)\n+{\n+    const uint16_t suggested_external_port = g_mapport_external_port ? g_mapport_external_port : private_port;\n+    const int r_send = sendnewportmappingrequest(natpmp, NATPMP_PROTOCOL_TCP, private_port, suggested_external_port, 3600 /*seconds*/);\n+    if (r_send == 12 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            auto pm = response.pnu.newportmapping;\n+            if (private_port == pm.privateport && pm.lifetime > 0) {\n+                g_mapport_external_port = pm.mappedpublicport;\n+                const CService external{external_ipv4_addr, pm.mappedpublicport};\n+                if (!external_ip_discovered && fDiscover) {\n+                    AddLocal(external, LOCAL_MAPPED);\n+                    external_ip_discovered = true;\n+                }\n+\n+                LogPrintf(\"natpmp: Port mapping successful. External address = %s\\n\", external.ToString());\n+                return true;\n+            } else {\n+                LogPrintf(\"natpmp: Port mapping failed.\\n\");\n+            }\n+\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"natpmp: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"natpmp: readnatpmpresponseorretry() for port mapping failed with %d error.\\n\", r_read);\n+        }\n+\n+    } else {\n+        LogPrintf(\"natpmp: sendnewportmappingrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool ProcessNatpmp()\n+{\n+    bool ret = false;\n+    natpmp_t natpmp;\n+    struct in_addr external_ipv4_addr;\n+    if (NatpmpInit(&natpmp) && NatpmpDiscover(&natpmp, external_ipv4_addr)) {\n+        bool external_ip_discovered = false;\n+        const uint16_t private_port = GetListenPort();\n+        do {\n+            ret = NatpmpMapping(&natpmp, external_ipv4_addr, private_port, external_ip_discovered);\n+        } while (ret && g_mapport_interrupt.sleep_for(PORT_MAPPING_REANNOUNCE_PERIOD));\n+        g_mapport_interrupt.reset();\n+\n+        const int r_send = sendnewportmappingrequest(&natpmp, NATPMP_PROTOCOL_TCP, private_port, g_mapport_external_port, /* remove a port mapping */ 0);\n+        g_mapport_external_port = 0;\n+        if (r_send == 12 /* OK */) {\n+            LogPrintf(\"natpmp: Port mapping removed successfully.\\n\");\n+        } else {\n+            LogPrintf(\"natpmp: sendnewportmappingrequest(0) failed with %d error.\\n\", r_send);\n+        }\n+    }\n+\n+    closenatpmp(&natpmp);\n+    return ret;\n+}\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+static bool ProcessUpnp()\n+{\n+    bool ret = false;\n+    std::string port = strprintf(\"%u\", GetListenPort());\n+    const char * multicastif = nullptr;\n+    const char * minissdpdpath = nullptr;\n+    struct UPNPDev * devlist = nullptr;\n+    char lanaddr[64];\n+\n+    int error = 0;\n+#if MINIUPNPC_API_VERSION < 14\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, &error);\n+#else\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, 2, &error);\n+#endif\n+\n+    struct UPNPUrls urls;\n+    struct IGDdatas data;\n+    int r;\n+\n+    r = UPNP_GetValidIGD(devlist, &urls, &data, lanaddr, sizeof(lanaddr));\n+    if (r == 1)\n+    {\n+        if (fDiscover) {\n+            char externalIPAddress[40];\n+            r = UPNP_GetExternalIPAddress(urls.controlURL, data.first.servicetype, externalIPAddress);\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                LogPrintf(\"UPnP: GetExternalIPAddress() returned %d\\n\", r);\n+            } else {\n+                if (externalIPAddress[0]) {\n+                    CNetAddr resolved;\n+                    if (LookupHost(externalIPAddress, resolved, false)) {\n+                        LogPrintf(\"UPnP: ExternalIPAddress = %s\\n\", resolved.ToString());\n+                        AddLocal(resolved, LOCAL_MAPPED);\n+                    }\n+                } else {\n+                    LogPrintf(\"UPnP: GetExternalIPAddress failed.\\n\");\n+                }\n+            }\n+        }\n+\n+        std::string strDesc = PACKAGE_NAME \" \" + FormatFullVersion();\n+\n+        do {\n+            r = UPNP_AddPortMapping(urls.controlURL, data.first.servicetype, port.c_str(), port.c_str(), lanaddr, strDesc.c_str(), \"TCP\", 0, \"0\");\n+\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                ret = false;\n+                LogPrintf(\"AddPortMapping(%s, %s, %s) failed with code %d (%s)\\n\", port, port, lanaddr, r, strupnperror(r));\n+                break;\n+            } else {\n+                ret = true;\n+                LogPrintf(\"UPnP Port Mapping successful.\\n\");\n+            }\n+        } while (g_mapport_interrupt.sleep_for(PORT_MAPPING_REANNOUNCE_PERIOD));\n+        g_mapport_interrupt.reset();\n+\n+        r = UPNP_DeletePortMapping(urls.controlURL, data.first.servicetype, port.c_str(), \"TCP\", 0);\n+        LogPrintf(\"UPNP_DeletePortMapping() returned: %d\\n\", r);\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        FreeUPNPUrls(&urls);\n+    } else {\n+        LogPrintf(\"No valid UPnP IGDs found\\n\");\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        if (r != 0)\n+            FreeUPNPUrls(&urls);\n+    }\n+\n+    return ret;\n+}\n+#endif // #ifdef USE_UPNP\n+\n+static void ThreadMapPort()\n+{\n+    bool ok;\n+    do {\n+        ok = false;\n+\n+#ifdef USE_UPNP\n+        // High priority protocol.\n+        if (g_mapport_enabled_protos & MapPortProtoFlag::UPNP) {\n+            g_mapport_current_proto = MapPortProtoFlag::UPNP;\n+            ok = ProcessUpnp();\n+            if (ok) continue;\n+        }\n+#endif // #ifdef USE_UPNP\n+\n+#ifdef USE_NATPMP\n+        // Low priority protocol.\n+        if (g_mapport_enabled_protos & MapPortProtoFlag::NAT_PMP) {\n+            g_mapport_current_proto = MapPortProtoFlag::NAT_PMP;\n+            ok = ProcessNatpmp();\n+            if (ok) continue;\n+        }\n+#endif // #ifdef USE_NATPMP\n+\n+        g_mapport_current_proto = MapPortProtoFlag::NONE;\n+        if (g_mapport_enabled_protos == MapPortProtoFlag::NONE) {\n+            return;\n+        }\n+\n+    } while (ok || g_mapport_interrupt.sleep_for(PORT_MAPPING_RETRY_PERIOD));\n+}\n+\n+void StartThreadMapPort()\n+{\n+    if (!g_mapport_thread.joinable()) {\n+        assert(!g_mapport_interrupt);\n+        g_mapport_thread = std::thread(std::bind(&TraceThread<void (*)()>, \"mapport\", &ThreadMapPort));\n+    }\n+}\n+\n+static void DispatchMapPort()\n+{\n+    if (g_mapport_current_proto == MapPortProtoFlag::NONE && g_mapport_enabled_protos == MapPortProtoFlag::NONE) {\n+        return;\n+    }\n+\n+    if (g_mapport_current_proto == MapPortProtoFlag::NONE && g_mapport_enabled_protos != MapPortProtoFlag::NONE) {\n+        StartThreadMapPort();\n+        return;\n+    }\n+\n+    if (g_mapport_current_proto != MapPortProtoFlag::NONE && g_mapport_enabled_protos == MapPortProtoFlag::NONE) {\n+        InterruptMapPort();\n+        StopMapPort();\n+        return;\n+    }\n+\n+    if (g_mapport_enabled_protos & g_mapport_current_proto) {\n+        // Enabling another protocol does not cause switching from the currently used one.\n+        return;\n+    }\n+\n+    assert(g_mapport_thread.joinable());\n+    assert(!g_mapport_interrupt);",
      "path": "src/mapport.cpp",
      "position": 285,
      "original_position": 291,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "29fb5708ca04da9ca0c25c1b801887354eb714bc",
      "in_reply_to_id": 515414822,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't think so due to the `CThreadInterrupt` class implementation.",
      "created_at": "2020-12-07T15:44:36Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r537609030",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537609030"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 285,
      "original_line": 285,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/545078633",
      "pull_request_review_id": 554588978,
      "id": 545078633,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTA3ODYzMw==",
      "diff_hunk": "@@ -0,0 +1,342 @@\n+// Copyright (c) 2011-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <mapport.h>\n+\n+#include <clientversion.h>\n+#include <logging.h>\n+#include <net.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <threadinterrupt.h>\n+#include <util/system.h>\n+\n+#ifdef USE_NATPMP\n+#include <natpmp.h>\n+#ifdef WIN32\n+#include <winsock2.h>\n+#else\n+#include <netinet/in.h>\n+#endif // #ifdef WIN32\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+#include <miniupnpc/miniupnpc.h>\n+#include <miniupnpc/upnpcommands.h>\n+#include <miniupnpc/upnperrors.h>\n+// The minimum supported miniUPnPc API version is set to 10. This keeps compatibility\n+// with Ubuntu 16.04 LTS and Debian 8 libminiupnpc-dev packages.\n+static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\");\n+#endif // #ifdef USE_UPNP\n+\n+#include <atomic>\n+#include <cassert>\n+#include <chrono>\n+#include <functional>\n+#include <string>\n+#include <thread>\n+\n+#if defined(USE_NATPMP) || defined(USE_UPNP)\n+static CThreadInterrupt g_mapport_interrupt;\n+static std::thread g_mapport_thread;\n+static std::atomic_uint g_mapport_enabled_protos{MapPortProtoFlag::NONE};\n+static std::atomic<MapPortProtoFlag> g_mapport_current_proto{MapPortProtoFlag::NONE};\n+static constexpr auto PORT_MAPPING_REANNOUNCE_PERIOD = std::chrono::minutes(20);\n+static constexpr auto PORT_MAPPING_RETRY_PERIOD = std::chrono::minutes(5);\n+\n+#ifdef USE_NATPMP\n+static uint16_t g_mapport_external_port = 0;\n+static bool NatpmpInit(natpmp_t* natpmp)\n+{\n+    const int r_init = initnatpmp(natpmp, /* detect gateway automatically */ 0, /* forced gateway - NOT APPLIED*/ 0);\n+    if (r_init == 0) return true;\n+    LogPrintf(\"natpmp: initnatpmp() failed with %d error.\\n\", r_init);\n+    return false;\n+}\n+\n+static bool NatpmpDiscover(natpmp_t* natpmp, struct in_addr& external_ipv4_addr)\n+{\n+    const int r_send = sendpublicaddressrequest(natpmp);\n+    if (r_send == 2 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            external_ipv4_addr = response.pnu.publicaddress.addr;\n+            return true;\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"natpmp: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"natpmp: readnatpmpresponseorretry() for public address failed with %d error.\\n\", r_read);\n+        }\n+\n+    } else {\n+        LogPrintf(\"natpmp: sendpublicaddressrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool NatpmpMapping(natpmp_t* natpmp, const struct in_addr& external_ipv4_addr, uint16_t private_port, bool& external_ip_discovered)\n+{\n+    const uint16_t suggested_external_port = g_mapport_external_port ? g_mapport_external_port : private_port;\n+    const int r_send = sendnewportmappingrequest(natpmp, NATPMP_PROTOCOL_TCP, private_port, suggested_external_port, 3600 /*seconds*/);\n+    if (r_send == 12 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            auto pm = response.pnu.newportmapping;\n+            if (private_port == pm.privateport && pm.lifetime > 0) {\n+                g_mapport_external_port = pm.mappedpublicport;\n+                const CService external{external_ipv4_addr, pm.mappedpublicport};\n+                if (!external_ip_discovered && fDiscover) {\n+                    AddLocal(external, LOCAL_MAPPED);\n+                    external_ip_discovered = true;\n+                }\n+\n+                LogPrintf(\"natpmp: Port mapping successful. External address = %s\\n\", external.ToString());\n+                return true;\n+            } else {\n+                LogPrintf(\"natpmp: Port mapping failed.\\n\");\n+            }\n+\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"natpmp: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"natpmp: readnatpmpresponseorretry() for port mapping failed with %d error.\\n\", r_read);\n+        }\n+\n+    } else {\n+        LogPrintf(\"natpmp: sendnewportmappingrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool ProcessNatpmp()\n+{\n+    bool ret = false;\n+    natpmp_t natpmp;\n+    struct in_addr external_ipv4_addr;\n+    if (NatpmpInit(&natpmp) && NatpmpDiscover(&natpmp, external_ipv4_addr)) {\n+        bool external_ip_discovered = false;\n+        const uint16_t private_port = GetListenPort();\n+        do {\n+            ret = NatpmpMapping(&natpmp, external_ipv4_addr, private_port, external_ip_discovered);\n+        } while (ret && g_mapport_interrupt.sleep_for(PORT_MAPPING_REANNOUNCE_PERIOD));\n+        g_mapport_interrupt.reset();\n+\n+        const int r_send = sendnewportmappingrequest(&natpmp, NATPMP_PROTOCOL_TCP, private_port, g_mapport_external_port, /* remove a port mapping */ 0);\n+        g_mapport_external_port = 0;\n+        if (r_send == 12 /* OK */) {\n+            LogPrintf(\"natpmp: Port mapping removed successfully.\\n\");\n+        } else {\n+            LogPrintf(\"natpmp: sendnewportmappingrequest(0) failed with %d error.\\n\", r_send);\n+        }\n+    }\n+\n+    closenatpmp(&natpmp);\n+    return ret;\n+}\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+static bool ProcessUpnp()\n+{\n+    bool ret = false;\n+    std::string port = strprintf(\"%u\", GetListenPort());\n+    const char * multicastif = nullptr;\n+    const char * minissdpdpath = nullptr;\n+    struct UPNPDev * devlist = nullptr;\n+    char lanaddr[64];\n+\n+    int error = 0;\n+#if MINIUPNPC_API_VERSION < 14\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, &error);\n+#else\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, 2, &error);\n+#endif\n+\n+    struct UPNPUrls urls;\n+    struct IGDdatas data;\n+    int r;\n+\n+    r = UPNP_GetValidIGD(devlist, &urls, &data, lanaddr, sizeof(lanaddr));\n+    if (r == 1)\n+    {\n+        if (fDiscover) {\n+            char externalIPAddress[40];\n+            r = UPNP_GetExternalIPAddress(urls.controlURL, data.first.servicetype, externalIPAddress);\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                LogPrintf(\"UPnP: GetExternalIPAddress() returned %d\\n\", r);\n+            } else {\n+                if (externalIPAddress[0]) {\n+                    CNetAddr resolved;\n+                    if (LookupHost(externalIPAddress, resolved, false)) {\n+                        LogPrintf(\"UPnP: ExternalIPAddress = %s\\n\", resolved.ToString());\n+                        AddLocal(resolved, LOCAL_MAPPED);\n+                    }\n+                } else {\n+                    LogPrintf(\"UPnP: GetExternalIPAddress failed.\\n\");\n+                }\n+            }\n+        }\n+\n+        std::string strDesc = PACKAGE_NAME \" \" + FormatFullVersion();\n+\n+        do {\n+            r = UPNP_AddPortMapping(urls.controlURL, data.first.servicetype, port.c_str(), port.c_str(), lanaddr, strDesc.c_str(), \"TCP\", 0, \"0\");\n+\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                ret = false;\n+                LogPrintf(\"AddPortMapping(%s, %s, %s) failed with code %d (%s)\\n\", port, port, lanaddr, r, strupnperror(r));\n+                break;\n+            } else {\n+                ret = true;\n+                LogPrintf(\"UPnP Port Mapping successful.\\n\");\n+            }\n+        } while (g_mapport_interrupt.sleep_for(PORT_MAPPING_REANNOUNCE_PERIOD));\n+        g_mapport_interrupt.reset();\n+\n+        r = UPNP_DeletePortMapping(urls.controlURL, data.first.servicetype, port.c_str(), \"TCP\", 0);\n+        LogPrintf(\"UPNP_DeletePortMapping() returned: %d\\n\", r);\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        FreeUPNPUrls(&urls);\n+    } else {\n+        LogPrintf(\"No valid UPnP IGDs found\\n\");\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        if (r != 0)\n+            FreeUPNPUrls(&urls);\n+    }\n+\n+    return ret;\n+}\n+#endif // #ifdef USE_UPNP\n+\n+static void ThreadMapPort()\n+{\n+    bool ok;\n+    do {\n+        ok = false;\n+\n+#ifdef USE_UPNP\n+        // High priority protocol.\n+        if (g_mapport_enabled_protos & MapPortProtoFlag::UPNP) {\n+            g_mapport_current_proto = MapPortProtoFlag::UPNP;\n+            ok = ProcessUpnp();\n+            if (ok) continue;\n+        }\n+#endif // #ifdef USE_UPNP\n+\n+#ifdef USE_NATPMP\n+        // Low priority protocol.",
      "path": "src/mapport.cpp",
      "position": 238,
      "original_position": 244,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "93ff21a929ba3036d6cd5d822f300cf036ff939f",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why is NATPMP \"low priority\"? I think NATPMP is the preferred protocol? (for one, it's simpler so less prone to exploitation)",
      "created_at": "2020-12-17T13:11:45Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r545078633",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/545078633"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 238,
      "original_line": 238,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/545080902",
      "pull_request_review_id": 554591662,
      "id": 545080902,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTA4MDkwMg==",
      "diff_hunk": "@@ -0,0 +1,342 @@\n+// Copyright (c) 2011-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <mapport.h>\n+\n+#include <clientversion.h>\n+#include <logging.h>\n+#include <net.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <threadinterrupt.h>\n+#include <util/system.h>\n+\n+#ifdef USE_NATPMP\n+#include <natpmp.h>\n+#ifdef WIN32\n+#include <winsock2.h>\n+#else\n+#include <netinet/in.h>\n+#endif // #ifdef WIN32\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+#include <miniupnpc/miniupnpc.h>\n+#include <miniupnpc/upnpcommands.h>\n+#include <miniupnpc/upnperrors.h>\n+// The minimum supported miniUPnPc API version is set to 10. This keeps compatibility\n+// with Ubuntu 16.04 LTS and Debian 8 libminiupnpc-dev packages.\n+static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\");\n+#endif // #ifdef USE_UPNP\n+\n+#include <atomic>\n+#include <cassert>\n+#include <chrono>\n+#include <functional>\n+#include <string>\n+#include <thread>\n+\n+#if defined(USE_NATPMP) || defined(USE_UPNP)\n+static CThreadInterrupt g_mapport_interrupt;\n+static std::thread g_mapport_thread;\n+static std::atomic_uint g_mapport_enabled_protos{MapPortProtoFlag::NONE};\n+static std::atomic<MapPortProtoFlag> g_mapport_current_proto{MapPortProtoFlag::NONE};\n+static constexpr auto PORT_MAPPING_REANNOUNCE_PERIOD = std::chrono::minutes(20);\n+static constexpr auto PORT_MAPPING_RETRY_PERIOD = std::chrono::minutes(5);\n+\n+#ifdef USE_NATPMP\n+static uint16_t g_mapport_external_port = 0;\n+static bool NatpmpInit(natpmp_t* natpmp)\n+{\n+    const int r_init = initnatpmp(natpmp, /* detect gateway automatically */ 0, /* forced gateway - NOT APPLIED*/ 0);\n+    if (r_init == 0) return true;\n+    LogPrintf(\"natpmp: initnatpmp() failed with %d error.\\n\", r_init);\n+    return false;\n+}\n+\n+static bool NatpmpDiscover(natpmp_t* natpmp, struct in_addr& external_ipv4_addr)\n+{\n+    const int r_send = sendpublicaddressrequest(natpmp);\n+    if (r_send == 2 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            external_ipv4_addr = response.pnu.publicaddress.addr;\n+            return true;\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"natpmp: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"natpmp: readnatpmpresponseorretry() for public address failed with %d error.\\n\", r_read);\n+        }\n+\n+    } else {\n+        LogPrintf(\"natpmp: sendpublicaddressrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool NatpmpMapping(natpmp_t* natpmp, const struct in_addr& external_ipv4_addr, uint16_t private_port, bool& external_ip_discovered)\n+{\n+    const uint16_t suggested_external_port = g_mapport_external_port ? g_mapport_external_port : private_port;\n+    const int r_send = sendnewportmappingrequest(natpmp, NATPMP_PROTOCOL_TCP, private_port, suggested_external_port, 3600 /*seconds*/);\n+    if (r_send == 12 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            auto pm = response.pnu.newportmapping;\n+            if (private_port == pm.privateport && pm.lifetime > 0) {\n+                g_mapport_external_port = pm.mappedpublicport;\n+                const CService external{external_ipv4_addr, pm.mappedpublicport};\n+                if (!external_ip_discovered && fDiscover) {\n+                    AddLocal(external, LOCAL_MAPPED);\n+                    external_ip_discovered = true;\n+                }\n+\n+                LogPrintf(\"natpmp: Port mapping successful. External address = %s\\n\", external.ToString());\n+                return true;\n+            } else {\n+                LogPrintf(\"natpmp: Port mapping failed.\\n\");\n+            }\n+\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"natpmp: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"natpmp: readnatpmpresponseorretry() for port mapping failed with %d error.\\n\", r_read);\n+        }\n+\n+    } else {\n+        LogPrintf(\"natpmp: sendnewportmappingrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool ProcessNatpmp()\n+{\n+    bool ret = false;\n+    natpmp_t natpmp;\n+    struct in_addr external_ipv4_addr;\n+    if (NatpmpInit(&natpmp) && NatpmpDiscover(&natpmp, external_ipv4_addr)) {\n+        bool external_ip_discovered = false;\n+        const uint16_t private_port = GetListenPort();\n+        do {\n+            ret = NatpmpMapping(&natpmp, external_ipv4_addr, private_port, external_ip_discovered);\n+        } while (ret && g_mapport_interrupt.sleep_for(PORT_MAPPING_REANNOUNCE_PERIOD));\n+        g_mapport_interrupt.reset();\n+\n+        const int r_send = sendnewportmappingrequest(&natpmp, NATPMP_PROTOCOL_TCP, private_port, g_mapport_external_port, /* remove a port mapping */ 0);\n+        g_mapport_external_port = 0;\n+        if (r_send == 12 /* OK */) {\n+            LogPrintf(\"natpmp: Port mapping removed successfully.\\n\");\n+        } else {\n+            LogPrintf(\"natpmp: sendnewportmappingrequest(0) failed with %d error.\\n\", r_send);\n+        }\n+    }\n+\n+    closenatpmp(&natpmp);\n+    return ret;\n+}\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+static bool ProcessUpnp()\n+{\n+    bool ret = false;\n+    std::string port = strprintf(\"%u\", GetListenPort());\n+    const char * multicastif = nullptr;\n+    const char * minissdpdpath = nullptr;\n+    struct UPNPDev * devlist = nullptr;\n+    char lanaddr[64];\n+\n+    int error = 0;\n+#if MINIUPNPC_API_VERSION < 14\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, &error);\n+#else\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, 2, &error);\n+#endif\n+\n+    struct UPNPUrls urls;\n+    struct IGDdatas data;\n+    int r;\n+\n+    r = UPNP_GetValidIGD(devlist, &urls, &data, lanaddr, sizeof(lanaddr));\n+    if (r == 1)\n+    {\n+        if (fDiscover) {\n+            char externalIPAddress[40];\n+            r = UPNP_GetExternalIPAddress(urls.controlURL, data.first.servicetype, externalIPAddress);\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                LogPrintf(\"UPnP: GetExternalIPAddress() returned %d\\n\", r);\n+            } else {\n+                if (externalIPAddress[0]) {\n+                    CNetAddr resolved;\n+                    if (LookupHost(externalIPAddress, resolved, false)) {\n+                        LogPrintf(\"UPnP: ExternalIPAddress = %s\\n\", resolved.ToString());\n+                        AddLocal(resolved, LOCAL_MAPPED);\n+                    }\n+                } else {\n+                    LogPrintf(\"UPnP: GetExternalIPAddress failed.\\n\");\n+                }\n+            }\n+        }\n+\n+        std::string strDesc = PACKAGE_NAME \" \" + FormatFullVersion();\n+\n+        do {\n+            r = UPNP_AddPortMapping(urls.controlURL, data.first.servicetype, port.c_str(), port.c_str(), lanaddr, strDesc.c_str(), \"TCP\", 0, \"0\");\n+\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                ret = false;\n+                LogPrintf(\"AddPortMapping(%s, %s, %s) failed with code %d (%s)\\n\", port, port, lanaddr, r, strupnperror(r));\n+                break;\n+            } else {\n+                ret = true;\n+                LogPrintf(\"UPnP Port Mapping successful.\\n\");\n+            }\n+        } while (g_mapport_interrupt.sleep_for(PORT_MAPPING_REANNOUNCE_PERIOD));\n+        g_mapport_interrupt.reset();\n+\n+        r = UPNP_DeletePortMapping(urls.controlURL, data.first.servicetype, port.c_str(), \"TCP\", 0);\n+        LogPrintf(\"UPNP_DeletePortMapping() returned: %d\\n\", r);\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        FreeUPNPUrls(&urls);\n+    } else {\n+        LogPrintf(\"No valid UPnP IGDs found\\n\");\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        if (r != 0)\n+            FreeUPNPUrls(&urls);\n+    }\n+\n+    return ret;\n+}\n+#endif // #ifdef USE_UPNP\n+\n+static void ThreadMapPort()\n+{\n+    bool ok;\n+    do {\n+        ok = false;\n+\n+#ifdef USE_UPNP\n+        // High priority protocol.\n+        if (g_mapport_enabled_protos & MapPortProtoFlag::UPNP) {\n+            g_mapport_current_proto = MapPortProtoFlag::UPNP;\n+            ok = ProcessUpnp();\n+            if (ok) continue;\n+        }\n+#endif // #ifdef USE_UPNP\n+\n+#ifdef USE_NATPMP\n+        // Low priority protocol.",
      "path": "src/mapport.cpp",
      "position": 238,
      "original_position": 244,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "93ff21a929ba3036d6cd5d822f300cf036ff939f",
      "in_reply_to_id": 545078633,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-588484002 by @luke-jr ",
      "created_at": "2020-12-17T13:15:17Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r545080902",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/545080902"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 238,
      "original_line": 238,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/545081619",
      "pull_request_review_id": 554592553,
      "id": 545081619,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTA4MTYxOQ==",
      "diff_hunk": "@@ -0,0 +1,342 @@\n+// Copyright (c) 2011-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <mapport.h>\n+\n+#include <clientversion.h>\n+#include <logging.h>\n+#include <net.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <threadinterrupt.h>\n+#include <util/system.h>\n+\n+#ifdef USE_NATPMP\n+#include <natpmp.h>\n+#ifdef WIN32\n+#include <winsock2.h>\n+#else\n+#include <netinet/in.h>\n+#endif // #ifdef WIN32\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+#include <miniupnpc/miniupnpc.h>\n+#include <miniupnpc/upnpcommands.h>\n+#include <miniupnpc/upnperrors.h>\n+// The minimum supported miniUPnPc API version is set to 10. This keeps compatibility\n+// with Ubuntu 16.04 LTS and Debian 8 libminiupnpc-dev packages.\n+static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\");\n+#endif // #ifdef USE_UPNP\n+\n+#include <atomic>\n+#include <cassert>\n+#include <chrono>\n+#include <functional>\n+#include <string>\n+#include <thread>\n+\n+#if defined(USE_NATPMP) || defined(USE_UPNP)\n+static CThreadInterrupt g_mapport_interrupt;\n+static std::thread g_mapport_thread;\n+static std::atomic_uint g_mapport_enabled_protos{MapPortProtoFlag::NONE};\n+static std::atomic<MapPortProtoFlag> g_mapport_current_proto{MapPortProtoFlag::NONE};\n+static constexpr auto PORT_MAPPING_REANNOUNCE_PERIOD = std::chrono::minutes(20);\n+static constexpr auto PORT_MAPPING_RETRY_PERIOD = std::chrono::minutes(5);\n+\n+#ifdef USE_NATPMP\n+static uint16_t g_mapport_external_port = 0;\n+static bool NatpmpInit(natpmp_t* natpmp)\n+{\n+    const int r_init = initnatpmp(natpmp, /* detect gateway automatically */ 0, /* forced gateway - NOT APPLIED*/ 0);\n+    if (r_init == 0) return true;\n+    LogPrintf(\"natpmp: initnatpmp() failed with %d error.\\n\", r_init);\n+    return false;\n+}\n+\n+static bool NatpmpDiscover(natpmp_t* natpmp, struct in_addr& external_ipv4_addr)\n+{\n+    const int r_send = sendpublicaddressrequest(natpmp);\n+    if (r_send == 2 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            external_ipv4_addr = response.pnu.publicaddress.addr;\n+            return true;\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"natpmp: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"natpmp: readnatpmpresponseorretry() for public address failed with %d error.\\n\", r_read);\n+        }\n+\n+    } else {\n+        LogPrintf(\"natpmp: sendpublicaddressrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool NatpmpMapping(natpmp_t* natpmp, const struct in_addr& external_ipv4_addr, uint16_t private_port, bool& external_ip_discovered)\n+{\n+    const uint16_t suggested_external_port = g_mapport_external_port ? g_mapport_external_port : private_port;\n+    const int r_send = sendnewportmappingrequest(natpmp, NATPMP_PROTOCOL_TCP, private_port, suggested_external_port, 3600 /*seconds*/);\n+    if (r_send == 12 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            auto pm = response.pnu.newportmapping;\n+            if (private_port == pm.privateport && pm.lifetime > 0) {\n+                g_mapport_external_port = pm.mappedpublicport;\n+                const CService external{external_ipv4_addr, pm.mappedpublicport};\n+                if (!external_ip_discovered && fDiscover) {\n+                    AddLocal(external, LOCAL_MAPPED);\n+                    external_ip_discovered = true;\n+                }\n+\n+                LogPrintf(\"natpmp: Port mapping successful. External address = %s\\n\", external.ToString());\n+                return true;\n+            } else {\n+                LogPrintf(\"natpmp: Port mapping failed.\\n\");\n+            }\n+\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"natpmp: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"natpmp: readnatpmpresponseorretry() for port mapping failed with %d error.\\n\", r_read);\n+        }\n+\n+    } else {\n+        LogPrintf(\"natpmp: sendnewportmappingrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool ProcessNatpmp()\n+{\n+    bool ret = false;\n+    natpmp_t natpmp;\n+    struct in_addr external_ipv4_addr;\n+    if (NatpmpInit(&natpmp) && NatpmpDiscover(&natpmp, external_ipv4_addr)) {\n+        bool external_ip_discovered = false;\n+        const uint16_t private_port = GetListenPort();\n+        do {\n+            ret = NatpmpMapping(&natpmp, external_ipv4_addr, private_port, external_ip_discovered);\n+        } while (ret && g_mapport_interrupt.sleep_for(PORT_MAPPING_REANNOUNCE_PERIOD));\n+        g_mapport_interrupt.reset();\n+\n+        const int r_send = sendnewportmappingrequest(&natpmp, NATPMP_PROTOCOL_TCP, private_port, g_mapport_external_port, /* remove a port mapping */ 0);\n+        g_mapport_external_port = 0;\n+        if (r_send == 12 /* OK */) {\n+            LogPrintf(\"natpmp: Port mapping removed successfully.\\n\");\n+        } else {\n+            LogPrintf(\"natpmp: sendnewportmappingrequest(0) failed with %d error.\\n\", r_send);\n+        }\n+    }\n+\n+    closenatpmp(&natpmp);\n+    return ret;\n+}\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+static bool ProcessUpnp()\n+{\n+    bool ret = false;\n+    std::string port = strprintf(\"%u\", GetListenPort());\n+    const char * multicastif = nullptr;\n+    const char * minissdpdpath = nullptr;\n+    struct UPNPDev * devlist = nullptr;\n+    char lanaddr[64];\n+\n+    int error = 0;\n+#if MINIUPNPC_API_VERSION < 14\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, &error);\n+#else\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, 2, &error);\n+#endif\n+\n+    struct UPNPUrls urls;\n+    struct IGDdatas data;\n+    int r;\n+\n+    r = UPNP_GetValidIGD(devlist, &urls, &data, lanaddr, sizeof(lanaddr));\n+    if (r == 1)\n+    {\n+        if (fDiscover) {\n+            char externalIPAddress[40];\n+            r = UPNP_GetExternalIPAddress(urls.controlURL, data.first.servicetype, externalIPAddress);\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                LogPrintf(\"UPnP: GetExternalIPAddress() returned %d\\n\", r);\n+            } else {\n+                if (externalIPAddress[0]) {\n+                    CNetAddr resolved;\n+                    if (LookupHost(externalIPAddress, resolved, false)) {\n+                        LogPrintf(\"UPnP: ExternalIPAddress = %s\\n\", resolved.ToString());\n+                        AddLocal(resolved, LOCAL_MAPPED);\n+                    }\n+                } else {\n+                    LogPrintf(\"UPnP: GetExternalIPAddress failed.\\n\");\n+                }\n+            }\n+        }\n+\n+        std::string strDesc = PACKAGE_NAME \" \" + FormatFullVersion();\n+\n+        do {\n+            r = UPNP_AddPortMapping(urls.controlURL, data.first.servicetype, port.c_str(), port.c_str(), lanaddr, strDesc.c_str(), \"TCP\", 0, \"0\");\n+\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                ret = false;\n+                LogPrintf(\"AddPortMapping(%s, %s, %s) failed with code %d (%s)\\n\", port, port, lanaddr, r, strupnperror(r));\n+                break;\n+            } else {\n+                ret = true;\n+                LogPrintf(\"UPnP Port Mapping successful.\\n\");\n+            }\n+        } while (g_mapport_interrupt.sleep_for(PORT_MAPPING_REANNOUNCE_PERIOD));\n+        g_mapport_interrupt.reset();\n+\n+        r = UPNP_DeletePortMapping(urls.controlURL, data.first.servicetype, port.c_str(), \"TCP\", 0);\n+        LogPrintf(\"UPNP_DeletePortMapping() returned: %d\\n\", r);\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        FreeUPNPUrls(&urls);\n+    } else {\n+        LogPrintf(\"No valid UPnP IGDs found\\n\");\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        if (r != 0)\n+            FreeUPNPUrls(&urls);\n+    }\n+\n+    return ret;\n+}\n+#endif // #ifdef USE_UPNP\n+\n+static void ThreadMapPort()\n+{\n+    bool ok;\n+    do {\n+        ok = false;\n+\n+#ifdef USE_UPNP\n+        // High priority protocol.\n+        if (g_mapport_enabled_protos & MapPortProtoFlag::UPNP) {\n+            g_mapport_current_proto = MapPortProtoFlag::UPNP;\n+            ok = ProcessUpnp();\n+            if (ok) continue;\n+        }\n+#endif // #ifdef USE_UPNP\n+\n+#ifdef USE_NATPMP\n+        // Low priority protocol.",
      "path": "src/mapport.cpp",
      "position": 238,
      "original_position": 244,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "93ff21a929ba3036d6cd5d822f300cf036ff939f",
      "in_reply_to_id": 545078633,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "FWIW, I disagree. I think we should prefer NATPMP and phase out UPnP in the longer run when it has proven to be stable.\r\n(of course, if a lot of issues actually come up it's different, but I wouldn't do this based on one comment)",
      "created_at": "2020-12-17T13:16:27Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r545081619",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/545081619"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 238,
      "original_line": 238,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/545181363",
      "pull_request_review_id": 554717639,
      "id": 545181363,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE4MTM2Mw==",
      "diff_hunk": "@@ -0,0 +1,342 @@\n+// Copyright (c) 2011-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <mapport.h>\n+\n+#include <clientversion.h>\n+#include <logging.h>\n+#include <net.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <threadinterrupt.h>\n+#include <util/system.h>\n+\n+#ifdef USE_NATPMP\n+#include <natpmp.h>\n+#ifdef WIN32\n+#include <winsock2.h>",
      "path": "src/mapport.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "93ff21a929ba3036d6cd5d822f300cf036ff939f",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think we can avoid this platform dependent include dance by including `<compat.h>`.",
      "created_at": "2020-12-17T15:32:13Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r545181363",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/545181363"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 22,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/545195115",
      "pull_request_review_id": 554735167,
      "id": 545195115,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE5NTExNQ==",
      "diff_hunk": "@@ -0,0 +1,342 @@\n+// Copyright (c) 2011-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <mapport.h>\n+\n+#include <clientversion.h>\n+#include <logging.h>\n+#include <net.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <threadinterrupt.h>\n+#include <util/system.h>\n+\n+#ifdef USE_NATPMP\n+#include <natpmp.h>\n+#ifdef WIN32\n+#include <winsock2.h>\n+#else\n+#include <netinet/in.h>\n+#endif // #ifdef WIN32\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+#include <miniupnpc/miniupnpc.h>\n+#include <miniupnpc/upnpcommands.h>\n+#include <miniupnpc/upnperrors.h>\n+// The minimum supported miniUPnPc API version is set to 10. This keeps compatibility\n+// with Ubuntu 16.04 LTS and Debian 8 libminiupnpc-dev packages.\n+static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\");\n+#endif // #ifdef USE_UPNP\n+\n+#include <atomic>\n+#include <cassert>\n+#include <chrono>\n+#include <functional>\n+#include <string>\n+#include <thread>\n+\n+#if defined(USE_NATPMP) || defined(USE_UPNP)\n+static CThreadInterrupt g_mapport_interrupt;\n+static std::thread g_mapport_thread;\n+static std::atomic_uint g_mapport_enabled_protos{MapPortProtoFlag::NONE};\n+static std::atomic<MapPortProtoFlag> g_mapport_current_proto{MapPortProtoFlag::NONE};\n+static constexpr auto PORT_MAPPING_REANNOUNCE_PERIOD = std::chrono::minutes(20);\n+static constexpr auto PORT_MAPPING_RETRY_PERIOD = std::chrono::minutes(5);\n+\n+#ifdef USE_NATPMP\n+static uint16_t g_mapport_external_port = 0;\n+static bool NatpmpInit(natpmp_t* natpmp)\n+{\n+    const int r_init = initnatpmp(natpmp, /* detect gateway automatically */ 0, /* forced gateway - NOT APPLIED*/ 0);\n+    if (r_init == 0) return true;\n+    LogPrintf(\"natpmp: initnatpmp() failed with %d error.\\n\", r_init);\n+    return false;\n+}\n+\n+static bool NatpmpDiscover(natpmp_t* natpmp, struct in_addr& external_ipv4_addr)\n+{\n+    const int r_send = sendpublicaddressrequest(natpmp);\n+    if (r_send == 2 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            external_ipv4_addr = response.pnu.publicaddress.addr;\n+            return true;\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"natpmp: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"natpmp: readnatpmpresponseorretry() for public address failed with %d error.\\n\", r_read);\n+        }\n+",
      "path": "src/mapport.cpp",
      "position": null,
      "original_position": 80,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "93ff21a929ba3036d6cd5d822f300cf036ff939f",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Spurious newline?",
      "created_at": "2020-12-17T15:49:32Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r545195115",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/545195115"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 80,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/545198538",
      "pull_request_review_id": 554739336,
      "id": 545198538,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE5ODUzOA==",
      "diff_hunk": "@@ -0,0 +1,342 @@\n+// Copyright (c) 2011-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <mapport.h>\n+\n+#include <clientversion.h>\n+#include <logging.h>\n+#include <net.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <threadinterrupt.h>\n+#include <util/system.h>\n+\n+#ifdef USE_NATPMP\n+#include <natpmp.h>\n+#ifdef WIN32\n+#include <winsock2.h>\n+#else\n+#include <netinet/in.h>\n+#endif // #ifdef WIN32\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+#include <miniupnpc/miniupnpc.h>\n+#include <miniupnpc/upnpcommands.h>\n+#include <miniupnpc/upnperrors.h>\n+// The minimum supported miniUPnPc API version is set to 10. This keeps compatibility\n+// with Ubuntu 16.04 LTS and Debian 8 libminiupnpc-dev packages.\n+static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\");\n+#endif // #ifdef USE_UPNP\n+\n+#include <atomic>\n+#include <cassert>\n+#include <chrono>\n+#include <functional>\n+#include <string>\n+#include <thread>\n+\n+#if defined(USE_NATPMP) || defined(USE_UPNP)\n+static CThreadInterrupt g_mapport_interrupt;\n+static std::thread g_mapport_thread;\n+static std::atomic_uint g_mapport_enabled_protos{MapPortProtoFlag::NONE};\n+static std::atomic<MapPortProtoFlag> g_mapport_current_proto{MapPortProtoFlag::NONE};\n+static constexpr auto PORT_MAPPING_REANNOUNCE_PERIOD = std::chrono::minutes(20);\n+static constexpr auto PORT_MAPPING_RETRY_PERIOD = std::chrono::minutes(5);\n+\n+#ifdef USE_NATPMP\n+static uint16_t g_mapport_external_port = 0;\n+static bool NatpmpInit(natpmp_t* natpmp)\n+{\n+    const int r_init = initnatpmp(natpmp, /* detect gateway automatically */ 0, /* forced gateway - NOT APPLIED*/ 0);\n+    if (r_init == 0) return true;\n+    LogPrintf(\"natpmp: initnatpmp() failed with %d error.\\n\", r_init);\n+    return false;\n+}\n+\n+static bool NatpmpDiscover(natpmp_t* natpmp, struct in_addr& external_ipv4_addr)\n+{\n+    const int r_send = sendpublicaddressrequest(natpmp);\n+    if (r_send == 2 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            external_ipv4_addr = response.pnu.publicaddress.addr;\n+            return true;\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"natpmp: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"natpmp: readnatpmpresponseorretry() for public address failed with %d error.\\n\", r_read);\n+        }\n+\n+    } else {\n+        LogPrintf(\"natpmp: sendpublicaddressrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool NatpmpMapping(natpmp_t* natpmp, const struct in_addr& external_ipv4_addr, uint16_t private_port, bool& external_ip_discovered)\n+{\n+    const uint16_t suggested_external_port = g_mapport_external_port ? g_mapport_external_port : private_port;\n+    const int r_send = sendnewportmappingrequest(natpmp, NATPMP_PROTOCOL_TCP, private_port, suggested_external_port, 3600 /*seconds*/);\n+    if (r_send == 12 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            auto pm = response.pnu.newportmapping;\n+            if (private_port == pm.privateport && pm.lifetime > 0) {\n+                g_mapport_external_port = pm.mappedpublicport;\n+                const CService external{external_ipv4_addr, pm.mappedpublicport};\n+                if (!external_ip_discovered && fDiscover) {\n+                    AddLocal(external, LOCAL_MAPPED);\n+                    external_ip_discovered = true;\n+                }\n+\n+                LogPrintf(\"natpmp: Port mapping successful. External address = %s\\n\", external.ToString());\n+                return true;\n+            } else {\n+                LogPrintf(\"natpmp: Port mapping failed.\\n\");\n+            }\n+\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"natpmp: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"natpmp: readnatpmpresponseorretry() for port mapping failed with %d error.\\n\", r_read);\n+        }\n+\n+    } else {\n+        LogPrintf(\"natpmp: sendnewportmappingrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool ProcessNatpmp()\n+{\n+    bool ret = false;\n+    natpmp_t natpmp;\n+    struct in_addr external_ipv4_addr;\n+    if (NatpmpInit(&natpmp) && NatpmpDiscover(&natpmp, external_ipv4_addr)) {\n+        bool external_ip_discovered = false;\n+        const uint16_t private_port = GetListenPort();\n+        do {\n+            ret = NatpmpMapping(&natpmp, external_ipv4_addr, private_port, external_ip_discovered);\n+        } while (ret && g_mapport_interrupt.sleep_for(PORT_MAPPING_REANNOUNCE_PERIOD));\n+        g_mapport_interrupt.reset();\n+\n+        const int r_send = sendnewportmappingrequest(&natpmp, NATPMP_PROTOCOL_TCP, private_port, g_mapport_external_port, /* remove a port mapping */ 0);\n+        g_mapport_external_port = 0;\n+        if (r_send == 12 /* OK */) {\n+            LogPrintf(\"natpmp: Port mapping removed successfully.\\n\");\n+        } else {\n+            LogPrintf(\"natpmp: sendnewportmappingrequest(0) failed with %d error.\\n\", r_send);\n+        }\n+    }\n+\n+    closenatpmp(&natpmp);\n+    return ret;\n+}\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+static bool ProcessUpnp()\n+{\n+    bool ret = false;\n+    std::string port = strprintf(\"%u\", GetListenPort());\n+    const char * multicastif = nullptr;\n+    const char * minissdpdpath = nullptr;\n+    struct UPNPDev * devlist = nullptr;\n+    char lanaddr[64];\n+\n+    int error = 0;\n+#if MINIUPNPC_API_VERSION < 14\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, &error);\n+#else\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, 2, &error);\n+#endif\n+\n+    struct UPNPUrls urls;\n+    struct IGDdatas data;\n+    int r;\n+\n+    r = UPNP_GetValidIGD(devlist, &urls, &data, lanaddr, sizeof(lanaddr));\n+    if (r == 1)\n+    {\n+        if (fDiscover) {\n+            char externalIPAddress[40];\n+            r = UPNP_GetExternalIPAddress(urls.controlURL, data.first.servicetype, externalIPAddress);\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                LogPrintf(\"UPnP: GetExternalIPAddress() returned %d\\n\", r);\n+            } else {\n+                if (externalIPAddress[0]) {\n+                    CNetAddr resolved;\n+                    if (LookupHost(externalIPAddress, resolved, false)) {\n+                        LogPrintf(\"UPnP: ExternalIPAddress = %s\\n\", resolved.ToString());\n+                        AddLocal(resolved, LOCAL_MAPPED);\n+                    }\n+                } else {\n+                    LogPrintf(\"UPnP: GetExternalIPAddress failed.\\n\");\n+                }\n+            }\n+        }\n+\n+        std::string strDesc = PACKAGE_NAME \" \" + FormatFullVersion();\n+\n+        do {\n+            r = UPNP_AddPortMapping(urls.controlURL, data.first.servicetype, port.c_str(), port.c_str(), lanaddr, strDesc.c_str(), \"TCP\", 0, \"0\");\n+\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                ret = false;\n+                LogPrintf(\"AddPortMapping(%s, %s, %s) failed with code %d (%s)\\n\", port, port, lanaddr, r, strupnperror(r));\n+                break;\n+            } else {\n+                ret = true;\n+                LogPrintf(\"UPnP Port Mapping successful.\\n\");\n+            }\n+        } while (g_mapport_interrupt.sleep_for(PORT_MAPPING_REANNOUNCE_PERIOD));\n+        g_mapport_interrupt.reset();\n+\n+        r = UPNP_DeletePortMapping(urls.controlURL, data.first.servicetype, port.c_str(), \"TCP\", 0);\n+        LogPrintf(\"UPNP_DeletePortMapping() returned: %d\\n\", r);\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        FreeUPNPUrls(&urls);\n+    } else {\n+        LogPrintf(\"No valid UPnP IGDs found\\n\");\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        if (r != 0)\n+            FreeUPNPUrls(&urls);",
      "path": "src/mapport.cpp",
      "position": 215,
      "original_position": 221,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "93ff21a929ba3036d6cd5d822f300cf036ff939f",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n        if (r != 0) FreeUPNPUrls(&urls);\r\n```",
      "created_at": "2020-12-17T15:53:45Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r545198538",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/545198538"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": 214,
      "original_start_line": 220,
      "start_side": "RIGHT",
      "line": 215,
      "original_line": 215,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/545199678",
      "pull_request_review_id": 554740689,
      "id": 545199678,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTE5OTY3OA==",
      "diff_hunk": "@@ -0,0 +1,342 @@\n+// Copyright (c) 2011-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <mapport.h>\n+\n+#include <clientversion.h>\n+#include <logging.h>\n+#include <net.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <threadinterrupt.h>\n+#include <util/system.h>\n+\n+#ifdef USE_NATPMP\n+#include <natpmp.h>\n+#ifdef WIN32\n+#include <winsock2.h>\n+#else\n+#include <netinet/in.h>\n+#endif // #ifdef WIN32\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+#include <miniupnpc/miniupnpc.h>\n+#include <miniupnpc/upnpcommands.h>\n+#include <miniupnpc/upnperrors.h>\n+// The minimum supported miniUPnPc API version is set to 10. This keeps compatibility\n+// with Ubuntu 16.04 LTS and Debian 8 libminiupnpc-dev packages.\n+static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\");\n+#endif // #ifdef USE_UPNP\n+\n+#include <atomic>\n+#include <cassert>\n+#include <chrono>\n+#include <functional>\n+#include <string>\n+#include <thread>\n+\n+#if defined(USE_NATPMP) || defined(USE_UPNP)\n+static CThreadInterrupt g_mapport_interrupt;\n+static std::thread g_mapport_thread;\n+static std::atomic_uint g_mapport_enabled_protos{MapPortProtoFlag::NONE};\n+static std::atomic<MapPortProtoFlag> g_mapport_current_proto{MapPortProtoFlag::NONE};\n+static constexpr auto PORT_MAPPING_REANNOUNCE_PERIOD = std::chrono::minutes(20);\n+static constexpr auto PORT_MAPPING_RETRY_PERIOD = std::chrono::minutes(5);\n+\n+#ifdef USE_NATPMP\n+static uint16_t g_mapport_external_port = 0;\n+static bool NatpmpInit(natpmp_t* natpmp)\n+{\n+    const int r_init = initnatpmp(natpmp, /* detect gateway automatically */ 0, /* forced gateway - NOT APPLIED*/ 0);\n+    if (r_init == 0) return true;\n+    LogPrintf(\"natpmp: initnatpmp() failed with %d error.\\n\", r_init);\n+    return false;\n+}\n+\n+static bool NatpmpDiscover(natpmp_t* natpmp, struct in_addr& external_ipv4_addr)\n+{\n+    const int r_send = sendpublicaddressrequest(natpmp);\n+    if (r_send == 2 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            external_ipv4_addr = response.pnu.publicaddress.addr;\n+            return true;\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"natpmp: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"natpmp: readnatpmpresponseorretry() for public address failed with %d error.\\n\", r_read);\n+        }\n+\n+    } else {\n+        LogPrintf(\"natpmp: sendpublicaddressrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool NatpmpMapping(natpmp_t* natpmp, const struct in_addr& external_ipv4_addr, uint16_t private_port, bool& external_ip_discovered)\n+{\n+    const uint16_t suggested_external_port = g_mapport_external_port ? g_mapport_external_port : private_port;\n+    const int r_send = sendnewportmappingrequest(natpmp, NATPMP_PROTOCOL_TCP, private_port, suggested_external_port, 3600 /*seconds*/);\n+    if (r_send == 12 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            auto pm = response.pnu.newportmapping;\n+            if (private_port == pm.privateport && pm.lifetime > 0) {\n+                g_mapport_external_port = pm.mappedpublicport;\n+                const CService external{external_ipv4_addr, pm.mappedpublicport};\n+                if (!external_ip_discovered && fDiscover) {\n+                    AddLocal(external, LOCAL_MAPPED);\n+                    external_ip_discovered = true;\n+                }\n+\n+                LogPrintf(\"natpmp: Port mapping successful. External address = %s\\n\", external.ToString());\n+                return true;\n+            } else {\n+                LogPrintf(\"natpmp: Port mapping failed.\\n\");\n+            }\n+\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"natpmp: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"natpmp: readnatpmpresponseorretry() for port mapping failed with %d error.\\n\", r_read);\n+        }\n+\n+    } else {\n+        LogPrintf(\"natpmp: sendnewportmappingrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool ProcessNatpmp()\n+{\n+    bool ret = false;\n+    natpmp_t natpmp;\n+    struct in_addr external_ipv4_addr;\n+    if (NatpmpInit(&natpmp) && NatpmpDiscover(&natpmp, external_ipv4_addr)) {\n+        bool external_ip_discovered = false;\n+        const uint16_t private_port = GetListenPort();\n+        do {\n+            ret = NatpmpMapping(&natpmp, external_ipv4_addr, private_port, external_ip_discovered);\n+        } while (ret && g_mapport_interrupt.sleep_for(PORT_MAPPING_REANNOUNCE_PERIOD));\n+        g_mapport_interrupt.reset();\n+\n+        const int r_send = sendnewportmappingrequest(&natpmp, NATPMP_PROTOCOL_TCP, private_port, g_mapport_external_port, /* remove a port mapping */ 0);\n+        g_mapport_external_port = 0;\n+        if (r_send == 12 /* OK */) {\n+            LogPrintf(\"natpmp: Port mapping removed successfully.\\n\");\n+        } else {\n+            LogPrintf(\"natpmp: sendnewportmappingrequest(0) failed with %d error.\\n\", r_send);\n+        }\n+    }\n+\n+    closenatpmp(&natpmp);\n+    return ret;\n+}\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+static bool ProcessUpnp()\n+{\n+    bool ret = false;\n+    std::string port = strprintf(\"%u\", GetListenPort());\n+    const char * multicastif = nullptr;\n+    const char * minissdpdpath = nullptr;\n+    struct UPNPDev * devlist = nullptr;\n+    char lanaddr[64];\n+\n+    int error = 0;\n+#if MINIUPNPC_API_VERSION < 14\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, &error);\n+#else\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, 2, &error);\n+#endif\n+\n+    struct UPNPUrls urls;\n+    struct IGDdatas data;\n+    int r;\n+\n+    r = UPNP_GetValidIGD(devlist, &urls, &data, lanaddr, sizeof(lanaddr));\n+    if (r == 1)\n+    {\n+        if (fDiscover) {\n+            char externalIPAddress[40];\n+            r = UPNP_GetExternalIPAddress(urls.controlURL, data.first.servicetype, externalIPAddress);\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                LogPrintf(\"UPnP: GetExternalIPAddress() returned %d\\n\", r);\n+            } else {\n+                if (externalIPAddress[0]) {\n+                    CNetAddr resolved;\n+                    if (LookupHost(externalIPAddress, resolved, false)) {\n+                        LogPrintf(\"UPnP: ExternalIPAddress = %s\\n\", resolved.ToString());\n+                        AddLocal(resolved, LOCAL_MAPPED);\n+                    }\n+                } else {\n+                    LogPrintf(\"UPnP: GetExternalIPAddress failed.\\n\");\n+                }\n+            }\n+        }\n+\n+        std::string strDesc = PACKAGE_NAME \" \" + FormatFullVersion();\n+\n+        do {\n+            r = UPNP_AddPortMapping(urls.controlURL, data.first.servicetype, port.c_str(), port.c_str(), lanaddr, strDesc.c_str(), \"TCP\", 0, \"0\");\n+\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                ret = false;\n+                LogPrintf(\"AddPortMapping(%s, %s, %s) failed with code %d (%s)\\n\", port, port, lanaddr, r, strupnperror(r));\n+                break;\n+            } else {\n+                ret = true;\n+                LogPrintf(\"UPnP Port Mapping successful.\\n\");\n+            }\n+        } while (g_mapport_interrupt.sleep_for(PORT_MAPPING_REANNOUNCE_PERIOD));\n+        g_mapport_interrupt.reset();\n+\n+        r = UPNP_DeletePortMapping(urls.controlURL, data.first.servicetype, port.c_str(), \"TCP\", 0);\n+        LogPrintf(\"UPNP_DeletePortMapping() returned: %d\\n\", r);\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        FreeUPNPUrls(&urls);\n+    } else {\n+        LogPrintf(\"No valid UPnP IGDs found\\n\");\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        if (r != 0)\n+            FreeUPNPUrls(&urls);",
      "path": "src/mapport.cpp",
      "position": 215,
      "original_position": 221,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "93ff21a929ba3036d6cd5d822f300cf036ff939f",
      "in_reply_to_id": 545198538,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oh, this is a move-only part, ok.",
      "created_at": "2020-12-17T15:55:06Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r545199678",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/545199678"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": 214,
      "original_start_line": 220,
      "start_side": "RIGHT",
      "line": 215,
      "original_line": 215,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/545270674",
      "pull_request_review_id": 554828804,
      "id": 545270674,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTI3MDY3NA==",
      "diff_hunk": "@@ -0,0 +1,342 @@\n+// Copyright (c) 2011-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <mapport.h>\n+\n+#include <clientversion.h>\n+#include <logging.h>\n+#include <net.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <threadinterrupt.h>\n+#include <util/system.h>\n+\n+#ifdef USE_NATPMP\n+#include <natpmp.h>\n+#ifdef WIN32\n+#include <winsock2.h>\n+#else\n+#include <netinet/in.h>\n+#endif // #ifdef WIN32\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+#include <miniupnpc/miniupnpc.h>\n+#include <miniupnpc/upnpcommands.h>\n+#include <miniupnpc/upnperrors.h>\n+// The minimum supported miniUPnPc API version is set to 10. This keeps compatibility\n+// with Ubuntu 16.04 LTS and Debian 8 libminiupnpc-dev packages.\n+static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\");\n+#endif // #ifdef USE_UPNP\n+\n+#include <atomic>\n+#include <cassert>\n+#include <chrono>\n+#include <functional>\n+#include <string>\n+#include <thread>\n+\n+#if defined(USE_NATPMP) || defined(USE_UPNP)\n+static CThreadInterrupt g_mapport_interrupt;\n+static std::thread g_mapport_thread;\n+static std::atomic_uint g_mapport_enabled_protos{MapPortProtoFlag::NONE};\n+static std::atomic<MapPortProtoFlag> g_mapport_current_proto{MapPortProtoFlag::NONE};\n+static constexpr auto PORT_MAPPING_REANNOUNCE_PERIOD = std::chrono::minutes(20);\n+static constexpr auto PORT_MAPPING_RETRY_PERIOD = std::chrono::minutes(5);\n+\n+#ifdef USE_NATPMP\n+static uint16_t g_mapport_external_port = 0;\n+static bool NatpmpInit(natpmp_t* natpmp)\n+{\n+    const int r_init = initnatpmp(natpmp, /* detect gateway automatically */ 0, /* forced gateway - NOT APPLIED*/ 0);\n+    if (r_init == 0) return true;\n+    LogPrintf(\"natpmp: initnatpmp() failed with %d error.\\n\", r_init);\n+    return false;\n+}\n+\n+static bool NatpmpDiscover(natpmp_t* natpmp, struct in_addr& external_ipv4_addr)\n+{\n+    const int r_send = sendpublicaddressrequest(natpmp);\n+    if (r_send == 2 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            external_ipv4_addr = response.pnu.publicaddress.addr;\n+            return true;\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"natpmp: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"natpmp: readnatpmpresponseorretry() for public address failed with %d error.\\n\", r_read);\n+        }\n+\n+    } else {\n+        LogPrintf(\"natpmp: sendpublicaddressrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool NatpmpMapping(natpmp_t* natpmp, const struct in_addr& external_ipv4_addr, uint16_t private_port, bool& external_ip_discovered)\n+{\n+    const uint16_t suggested_external_port = g_mapport_external_port ? g_mapport_external_port : private_port;\n+    const int r_send = sendnewportmappingrequest(natpmp, NATPMP_PROTOCOL_TCP, private_port, suggested_external_port, 3600 /*seconds*/);\n+    if (r_send == 12 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            auto pm = response.pnu.newportmapping;\n+            if (private_port == pm.privateport && pm.lifetime > 0) {\n+                g_mapport_external_port = pm.mappedpublicport;\n+                const CService external{external_ipv4_addr, pm.mappedpublicport};\n+                if (!external_ip_discovered && fDiscover) {\n+                    AddLocal(external, LOCAL_MAPPED);\n+                    external_ip_discovered = true;\n+                }\n+\n+                LogPrintf(\"natpmp: Port mapping successful. External address = %s\\n\", external.ToString());\n+                return true;\n+            } else {\n+                LogPrintf(\"natpmp: Port mapping failed.\\n\");\n+            }\n+\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"natpmp: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"natpmp: readnatpmpresponseorretry() for port mapping failed with %d error.\\n\", r_read);\n+        }\n+\n+    } else {\n+        LogPrintf(\"natpmp: sendnewportmappingrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool ProcessNatpmp()\n+{\n+    bool ret = false;\n+    natpmp_t natpmp;\n+    struct in_addr external_ipv4_addr;\n+    if (NatpmpInit(&natpmp) && NatpmpDiscover(&natpmp, external_ipv4_addr)) {\n+        bool external_ip_discovered = false;\n+        const uint16_t private_port = GetListenPort();\n+        do {\n+            ret = NatpmpMapping(&natpmp, external_ipv4_addr, private_port, external_ip_discovered);\n+        } while (ret && g_mapport_interrupt.sleep_for(PORT_MAPPING_REANNOUNCE_PERIOD));\n+        g_mapport_interrupt.reset();\n+\n+        const int r_send = sendnewportmappingrequest(&natpmp, NATPMP_PROTOCOL_TCP, private_port, g_mapport_external_port, /* remove a port mapping */ 0);\n+        g_mapport_external_port = 0;\n+        if (r_send == 12 /* OK */) {\n+            LogPrintf(\"natpmp: Port mapping removed successfully.\\n\");\n+        } else {\n+            LogPrintf(\"natpmp: sendnewportmappingrequest(0) failed with %d error.\\n\", r_send);\n+        }\n+    }\n+\n+    closenatpmp(&natpmp);\n+    return ret;\n+}\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+static bool ProcessUpnp()\n+{\n+    bool ret = false;\n+    std::string port = strprintf(\"%u\", GetListenPort());\n+    const char * multicastif = nullptr;\n+    const char * minissdpdpath = nullptr;\n+    struct UPNPDev * devlist = nullptr;\n+    char lanaddr[64];\n+\n+    int error = 0;\n+#if MINIUPNPC_API_VERSION < 14\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, &error);\n+#else\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, 2, &error);\n+#endif\n+\n+    struct UPNPUrls urls;\n+    struct IGDdatas data;\n+    int r;\n+\n+    r = UPNP_GetValidIGD(devlist, &urls, &data, lanaddr, sizeof(lanaddr));\n+    if (r == 1)\n+    {\n+        if (fDiscover) {\n+            char externalIPAddress[40];\n+            r = UPNP_GetExternalIPAddress(urls.controlURL, data.first.servicetype, externalIPAddress);\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                LogPrintf(\"UPnP: GetExternalIPAddress() returned %d\\n\", r);\n+            } else {\n+                if (externalIPAddress[0]) {\n+                    CNetAddr resolved;\n+                    if (LookupHost(externalIPAddress, resolved, false)) {\n+                        LogPrintf(\"UPnP: ExternalIPAddress = %s\\n\", resolved.ToString());\n+                        AddLocal(resolved, LOCAL_MAPPED);\n+                    }\n+                } else {\n+                    LogPrintf(\"UPnP: GetExternalIPAddress failed.\\n\");\n+                }\n+            }\n+        }\n+\n+        std::string strDesc = PACKAGE_NAME \" \" + FormatFullVersion();\n+\n+        do {\n+            r = UPNP_AddPortMapping(urls.controlURL, data.first.servicetype, port.c_str(), port.c_str(), lanaddr, strDesc.c_str(), \"TCP\", 0, \"0\");\n+\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                ret = false;\n+                LogPrintf(\"AddPortMapping(%s, %s, %s) failed with code %d (%s)\\n\", port, port, lanaddr, r, strupnperror(r));\n+                break;\n+            } else {\n+                ret = true;\n+                LogPrintf(\"UPnP Port Mapping successful.\\n\");\n+            }\n+        } while (g_mapport_interrupt.sleep_for(PORT_MAPPING_REANNOUNCE_PERIOD));\n+        g_mapport_interrupt.reset();\n+\n+        r = UPNP_DeletePortMapping(urls.controlURL, data.first.servicetype, port.c_str(), \"TCP\", 0);\n+        LogPrintf(\"UPNP_DeletePortMapping() returned: %d\\n\", r);\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        FreeUPNPUrls(&urls);\n+    } else {\n+        LogPrintf(\"No valid UPnP IGDs found\\n\");\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        if (r != 0)\n+            FreeUPNPUrls(&urls);\n+    }\n+\n+    return ret;\n+}\n+#endif // #ifdef USE_UPNP\n+\n+static void ThreadMapPort()",
      "path": "src/mapport.cpp",
      "position": 222,
      "original_position": 228,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "93ff21a929ba3036d6cd5d822f300cf036ff939f",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I guess at some point in the future we could replace this thread (which does nothing but waiting and periodically run stuff) with scheduler runnables instead? (not in this PR)",
      "created_at": "2020-12-17T17:31:28Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r545270674",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/545270674"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 222,
      "original_line": 222,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/545689768",
      "pull_request_review_id": 555316641,
      "id": 545689768,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTY4OTc2OA==",
      "diff_hunk": "@@ -0,0 +1,342 @@\n+// Copyright (c) 2011-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <mapport.h>\n+\n+#include <clientversion.h>\n+#include <logging.h>\n+#include <net.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <threadinterrupt.h>\n+#include <util/system.h>\n+\n+#ifdef USE_NATPMP\n+#include <natpmp.h>\n+#ifdef WIN32\n+#include <winsock2.h>\n+#else\n+#include <netinet/in.h>\n+#endif // #ifdef WIN32\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+#include <miniupnpc/miniupnpc.h>\n+#include <miniupnpc/upnpcommands.h>\n+#include <miniupnpc/upnperrors.h>\n+// The minimum supported miniUPnPc API version is set to 10. This keeps compatibility\n+// with Ubuntu 16.04 LTS and Debian 8 libminiupnpc-dev packages.\n+static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\");\n+#endif // #ifdef USE_UPNP\n+\n+#include <atomic>\n+#include <cassert>\n+#include <chrono>\n+#include <functional>\n+#include <string>\n+#include <thread>\n+\n+#if defined(USE_NATPMP) || defined(USE_UPNP)\n+static CThreadInterrupt g_mapport_interrupt;\n+static std::thread g_mapport_thread;\n+static std::atomic_uint g_mapport_enabled_protos{MapPortProtoFlag::NONE};\n+static std::atomic<MapPortProtoFlag> g_mapport_current_proto{MapPortProtoFlag::NONE};\n+static constexpr auto PORT_MAPPING_REANNOUNCE_PERIOD = std::chrono::minutes(20);\n+static constexpr auto PORT_MAPPING_RETRY_PERIOD = std::chrono::minutes(5);\n+\n+#ifdef USE_NATPMP\n+static uint16_t g_mapport_external_port = 0;\n+static bool NatpmpInit(natpmp_t* natpmp)\n+{\n+    const int r_init = initnatpmp(natpmp, /* detect gateway automatically */ 0, /* forced gateway - NOT APPLIED*/ 0);\n+    if (r_init == 0) return true;\n+    LogPrintf(\"natpmp: initnatpmp() failed with %d error.\\n\", r_init);\n+    return false;\n+}\n+\n+static bool NatpmpDiscover(natpmp_t* natpmp, struct in_addr& external_ipv4_addr)\n+{\n+    const int r_send = sendpublicaddressrequest(natpmp);\n+    if (r_send == 2 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            external_ipv4_addr = response.pnu.publicaddress.addr;\n+            return true;\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"natpmp: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"natpmp: readnatpmpresponseorretry() for public address failed with %d error.\\n\", r_read);\n+        }\n+\n+    } else {\n+        LogPrintf(\"natpmp: sendpublicaddressrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool NatpmpMapping(natpmp_t* natpmp, const struct in_addr& external_ipv4_addr, uint16_t private_port, bool& external_ip_discovered)\n+{\n+    const uint16_t suggested_external_port = g_mapport_external_port ? g_mapport_external_port : private_port;\n+    const int r_send = sendnewportmappingrequest(natpmp, NATPMP_PROTOCOL_TCP, private_port, suggested_external_port, 3600 /*seconds*/);\n+    if (r_send == 12 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            auto pm = response.pnu.newportmapping;\n+            if (private_port == pm.privateport && pm.lifetime > 0) {\n+                g_mapport_external_port = pm.mappedpublicport;\n+                const CService external{external_ipv4_addr, pm.mappedpublicport};\n+                if (!external_ip_discovered && fDiscover) {\n+                    AddLocal(external, LOCAL_MAPPED);\n+                    external_ip_discovered = true;\n+                }\n+\n+                LogPrintf(\"natpmp: Port mapping successful. External address = %s\\n\", external.ToString());\n+                return true;\n+            } else {\n+                LogPrintf(\"natpmp: Port mapping failed.\\n\");\n+            }\n+\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"natpmp: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"natpmp: readnatpmpresponseorretry() for port mapping failed with %d error.\\n\", r_read);\n+        }\n+\n+    } else {\n+        LogPrintf(\"natpmp: sendnewportmappingrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool ProcessNatpmp()\n+{\n+    bool ret = false;\n+    natpmp_t natpmp;\n+    struct in_addr external_ipv4_addr;\n+    if (NatpmpInit(&natpmp) && NatpmpDiscover(&natpmp, external_ipv4_addr)) {\n+        bool external_ip_discovered = false;\n+        const uint16_t private_port = GetListenPort();\n+        do {\n+            ret = NatpmpMapping(&natpmp, external_ipv4_addr, private_port, external_ip_discovered);\n+        } while (ret && g_mapport_interrupt.sleep_for(PORT_MAPPING_REANNOUNCE_PERIOD));\n+        g_mapport_interrupt.reset();\n+\n+        const int r_send = sendnewportmappingrequest(&natpmp, NATPMP_PROTOCOL_TCP, private_port, g_mapport_external_port, /* remove a port mapping */ 0);\n+        g_mapport_external_port = 0;\n+        if (r_send == 12 /* OK */) {\n+            LogPrintf(\"natpmp: Port mapping removed successfully.\\n\");\n+        } else {\n+            LogPrintf(\"natpmp: sendnewportmappingrequest(0) failed with %d error.\\n\", r_send);\n+        }\n+    }\n+\n+    closenatpmp(&natpmp);\n+    return ret;\n+}\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+static bool ProcessUpnp()\n+{\n+    bool ret = false;\n+    std::string port = strprintf(\"%u\", GetListenPort());\n+    const char * multicastif = nullptr;\n+    const char * minissdpdpath = nullptr;\n+    struct UPNPDev * devlist = nullptr;\n+    char lanaddr[64];\n+\n+    int error = 0;\n+#if MINIUPNPC_API_VERSION < 14\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, &error);\n+#else\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, 2, &error);\n+#endif\n+\n+    struct UPNPUrls urls;\n+    struct IGDdatas data;\n+    int r;\n+\n+    r = UPNP_GetValidIGD(devlist, &urls, &data, lanaddr, sizeof(lanaddr));\n+    if (r == 1)\n+    {\n+        if (fDiscover) {\n+            char externalIPAddress[40];\n+            r = UPNP_GetExternalIPAddress(urls.controlURL, data.first.servicetype, externalIPAddress);\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                LogPrintf(\"UPnP: GetExternalIPAddress() returned %d\\n\", r);\n+            } else {\n+                if (externalIPAddress[0]) {\n+                    CNetAddr resolved;\n+                    if (LookupHost(externalIPAddress, resolved, false)) {\n+                        LogPrintf(\"UPnP: ExternalIPAddress = %s\\n\", resolved.ToString());\n+                        AddLocal(resolved, LOCAL_MAPPED);\n+                    }\n+                } else {\n+                    LogPrintf(\"UPnP: GetExternalIPAddress failed.\\n\");\n+                }\n+            }\n+        }\n+\n+        std::string strDesc = PACKAGE_NAME \" \" + FormatFullVersion();\n+\n+        do {\n+            r = UPNP_AddPortMapping(urls.controlURL, data.first.servicetype, port.c_str(), port.c_str(), lanaddr, strDesc.c_str(), \"TCP\", 0, \"0\");\n+\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                ret = false;\n+                LogPrintf(\"AddPortMapping(%s, %s, %s) failed with code %d (%s)\\n\", port, port, lanaddr, r, strupnperror(r));\n+                break;\n+            } else {\n+                ret = true;\n+                LogPrintf(\"UPnP Port Mapping successful.\\n\");\n+            }\n+        } while (g_mapport_interrupt.sleep_for(PORT_MAPPING_REANNOUNCE_PERIOD));\n+        g_mapport_interrupt.reset();\n+\n+        r = UPNP_DeletePortMapping(urls.controlURL, data.first.servicetype, port.c_str(), \"TCP\", 0);\n+        LogPrintf(\"UPNP_DeletePortMapping() returned: %d\\n\", r);\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        FreeUPNPUrls(&urls);\n+    } else {\n+        LogPrintf(\"No valid UPnP IGDs found\\n\");\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        if (r != 0)\n+            FreeUPNPUrls(&urls);\n+    }\n+\n+    return ret;\n+}\n+#endif // #ifdef USE_UPNP\n+\n+static void ThreadMapPort()\n+{\n+    bool ok;\n+    do {\n+        ok = false;\n+\n+#ifdef USE_UPNP\n+        // High priority protocol.\n+        if (g_mapport_enabled_protos & MapPortProtoFlag::UPNP) {\n+            g_mapport_current_proto = MapPortProtoFlag::UPNP;\n+            ok = ProcessUpnp();\n+            if (ok) continue;\n+        }\n+#endif // #ifdef USE_UPNP\n+\n+#ifdef USE_NATPMP\n+        // Low priority protocol.",
      "path": "src/mapport.cpp",
      "position": 238,
      "original_position": 244,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "93ff21a929ba3036d6cd5d822f300cf036ff939f",
      "in_reply_to_id": 545078633,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@luke-jr, what do you mean by \"maps random ports often\"? Some implementation of natpmp has bugs? Can you give an example?\r\n\r\nMaybe just remove this comment \"// Low priority protocol.\" -- it is unclear what is meant by it and is missing in other places where `#ifdef USE_NATPMP` is used.",
      "created_at": "2020-12-18T09:11:16Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r545689768",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/545689768"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 238,
      "original_line": 238,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546112557",
      "pull_request_review_id": 555841283,
      "id": 546112557,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjExMjU1Nw==",
      "diff_hunk": "@@ -0,0 +1,342 @@\n+// Copyright (c) 2011-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <mapport.h>\n+\n+#include <clientversion.h>\n+#include <logging.h>\n+#include <net.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <threadinterrupt.h>\n+#include <util/system.h>\n+\n+#ifdef USE_NATPMP\n+#include <natpmp.h>\n+#ifdef WIN32\n+#include <winsock2.h>\n+#else\n+#include <netinet/in.h>\n+#endif // #ifdef WIN32\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+#include <miniupnpc/miniupnpc.h>\n+#include <miniupnpc/upnpcommands.h>\n+#include <miniupnpc/upnperrors.h>\n+// The minimum supported miniUPnPc API version is set to 10. This keeps compatibility\n+// with Ubuntu 16.04 LTS and Debian 8 libminiupnpc-dev packages.\n+static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\");\n+#endif // #ifdef USE_UPNP\n+\n+#include <atomic>\n+#include <cassert>\n+#include <chrono>\n+#include <functional>\n+#include <string>\n+#include <thread>\n+\n+#if defined(USE_NATPMP) || defined(USE_UPNP)\n+static CThreadInterrupt g_mapport_interrupt;\n+static std::thread g_mapport_thread;\n+static std::atomic_uint g_mapport_enabled_protos{MapPortProtoFlag::NONE};\n+static std::atomic<MapPortProtoFlag> g_mapport_current_proto{MapPortProtoFlag::NONE};\n+static constexpr auto PORT_MAPPING_REANNOUNCE_PERIOD = std::chrono::minutes(20);\n+static constexpr auto PORT_MAPPING_RETRY_PERIOD = std::chrono::minutes(5);\n+\n+#ifdef USE_NATPMP\n+static uint16_t g_mapport_external_port = 0;\n+static bool NatpmpInit(natpmp_t* natpmp)\n+{\n+    const int r_init = initnatpmp(natpmp, /* detect gateway automatically */ 0, /* forced gateway - NOT APPLIED*/ 0);\n+    if (r_init == 0) return true;\n+    LogPrintf(\"natpmp: initnatpmp() failed with %d error.\\n\", r_init);\n+    return false;\n+}\n+\n+static bool NatpmpDiscover(natpmp_t* natpmp, struct in_addr& external_ipv4_addr)\n+{\n+    const int r_send = sendpublicaddressrequest(natpmp);\n+    if (r_send == 2 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            external_ipv4_addr = response.pnu.publicaddress.addr;\n+            return true;\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"natpmp: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"natpmp: readnatpmpresponseorretry() for public address failed with %d error.\\n\", r_read);\n+        }\n+\n+    } else {\n+        LogPrintf(\"natpmp: sendpublicaddressrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool NatpmpMapping(natpmp_t* natpmp, const struct in_addr& external_ipv4_addr, uint16_t private_port, bool& external_ip_discovered)\n+{\n+    const uint16_t suggested_external_port = g_mapport_external_port ? g_mapport_external_port : private_port;\n+    const int r_send = sendnewportmappingrequest(natpmp, NATPMP_PROTOCOL_TCP, private_port, suggested_external_port, 3600 /*seconds*/);\n+    if (r_send == 12 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            auto pm = response.pnu.newportmapping;\n+            if (private_port == pm.privateport && pm.lifetime > 0) {\n+                g_mapport_external_port = pm.mappedpublicport;\n+                const CService external{external_ipv4_addr, pm.mappedpublicport};\n+                if (!external_ip_discovered && fDiscover) {\n+                    AddLocal(external, LOCAL_MAPPED);\n+                    external_ip_discovered = true;\n+                }\n+\n+                LogPrintf(\"natpmp: Port mapping successful. External address = %s\\n\", external.ToString());\n+                return true;\n+            } else {\n+                LogPrintf(\"natpmp: Port mapping failed.\\n\");\n+            }\n+\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"natpmp: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"natpmp: readnatpmpresponseorretry() for port mapping failed with %d error.\\n\", r_read);\n+        }\n+\n+    } else {\n+        LogPrintf(\"natpmp: sendnewportmappingrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool ProcessNatpmp()\n+{\n+    bool ret = false;\n+    natpmp_t natpmp;\n+    struct in_addr external_ipv4_addr;\n+    if (NatpmpInit(&natpmp) && NatpmpDiscover(&natpmp, external_ipv4_addr)) {\n+        bool external_ip_discovered = false;\n+        const uint16_t private_port = GetListenPort();\n+        do {\n+            ret = NatpmpMapping(&natpmp, external_ipv4_addr, private_port, external_ip_discovered);\n+        } while (ret && g_mapport_interrupt.sleep_for(PORT_MAPPING_REANNOUNCE_PERIOD));\n+        g_mapport_interrupt.reset();\n+\n+        const int r_send = sendnewportmappingrequest(&natpmp, NATPMP_PROTOCOL_TCP, private_port, g_mapport_external_port, /* remove a port mapping */ 0);\n+        g_mapport_external_port = 0;\n+        if (r_send == 12 /* OK */) {\n+            LogPrintf(\"natpmp: Port mapping removed successfully.\\n\");\n+        } else {\n+            LogPrintf(\"natpmp: sendnewportmappingrequest(0) failed with %d error.\\n\", r_send);\n+        }\n+    }\n+\n+    closenatpmp(&natpmp);\n+    return ret;\n+}\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+static bool ProcessUpnp()\n+{\n+    bool ret = false;\n+    std::string port = strprintf(\"%u\", GetListenPort());\n+    const char * multicastif = nullptr;\n+    const char * minissdpdpath = nullptr;\n+    struct UPNPDev * devlist = nullptr;\n+    char lanaddr[64];\n+\n+    int error = 0;\n+#if MINIUPNPC_API_VERSION < 14\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, &error);\n+#else\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, 2, &error);\n+#endif\n+\n+    struct UPNPUrls urls;\n+    struct IGDdatas data;\n+    int r;\n+\n+    r = UPNP_GetValidIGD(devlist, &urls, &data, lanaddr, sizeof(lanaddr));\n+    if (r == 1)\n+    {\n+        if (fDiscover) {\n+            char externalIPAddress[40];\n+            r = UPNP_GetExternalIPAddress(urls.controlURL, data.first.servicetype, externalIPAddress);\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                LogPrintf(\"UPnP: GetExternalIPAddress() returned %d\\n\", r);\n+            } else {\n+                if (externalIPAddress[0]) {\n+                    CNetAddr resolved;\n+                    if (LookupHost(externalIPAddress, resolved, false)) {\n+                        LogPrintf(\"UPnP: ExternalIPAddress = %s\\n\", resolved.ToString());\n+                        AddLocal(resolved, LOCAL_MAPPED);\n+                    }\n+                } else {\n+                    LogPrintf(\"UPnP: GetExternalIPAddress failed.\\n\");\n+                }\n+            }\n+        }\n+\n+        std::string strDesc = PACKAGE_NAME \" \" + FormatFullVersion();\n+\n+        do {\n+            r = UPNP_AddPortMapping(urls.controlURL, data.first.servicetype, port.c_str(), port.c_str(), lanaddr, strDesc.c_str(), \"TCP\", 0, \"0\");\n+\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                ret = false;\n+                LogPrintf(\"AddPortMapping(%s, %s, %s) failed with code %d (%s)\\n\", port, port, lanaddr, r, strupnperror(r));\n+                break;\n+            } else {\n+                ret = true;\n+                LogPrintf(\"UPnP Port Mapping successful.\\n\");\n+            }\n+        } while (g_mapport_interrupt.sleep_for(PORT_MAPPING_REANNOUNCE_PERIOD));\n+        g_mapport_interrupt.reset();\n+\n+        r = UPNP_DeletePortMapping(urls.controlURL, data.first.servicetype, port.c_str(), \"TCP\", 0);\n+        LogPrintf(\"UPNP_DeletePortMapping() returned: %d\\n\", r);\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        FreeUPNPUrls(&urls);\n+    } else {\n+        LogPrintf(\"No valid UPnP IGDs found\\n\");\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        if (r != 0)\n+            FreeUPNPUrls(&urls);\n+    }\n+\n+    return ret;\n+}\n+#endif // #ifdef USE_UPNP\n+\n+static void ThreadMapPort()\n+{\n+    bool ok;\n+    do {\n+        ok = false;\n+\n+#ifdef USE_UPNP\n+        // High priority protocol.\n+        if (g_mapport_enabled_protos & MapPortProtoFlag::UPNP) {\n+            g_mapport_current_proto = MapPortProtoFlag::UPNP;\n+            ok = ProcessUpnp();\n+            if (ok) continue;\n+        }\n+#endif // #ifdef USE_UPNP\n+\n+#ifdef USE_NATPMP\n+        // Low priority protocol.",
      "path": "src/mapport.cpp",
      "position": 238,
      "original_position": 244,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "93ff21a929ba3036d6cd5d822f300cf036ff939f",
      "in_reply_to_id": 545078633,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@vasild \r\n> @luke-jr, what do you mean by \"maps random ports often\"? Some implementation of natpmp has bugs? Can you give an example?\r\n\r\nSome NAT-PMP daemon implementations do randomize an external port. For example, see https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-588121365 and http://bodgitandscarper.co.uk/natpmpd/:\r\n> The external TCP or UDP port assigned to the client is always randomised rather than giving the first client the port it actually requested and then trying to work out what to do for additional clients that want the same external port.",
      "created_at": "2020-12-18T22:04:39Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r546112557",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546112557"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 238,
      "original_line": 238,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546135778",
      "pull_request_review_id": 555870107,
      "id": 546135778,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjEzNTc3OA==",
      "diff_hunk": "@@ -0,0 +1,342 @@\n+// Copyright (c) 2011-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <mapport.h>\n+\n+#include <clientversion.h>\n+#include <logging.h>\n+#include <net.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <threadinterrupt.h>\n+#include <util/system.h>\n+\n+#ifdef USE_NATPMP\n+#include <natpmp.h>\n+#ifdef WIN32\n+#include <winsock2.h>",
      "path": "src/mapport.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "93ff21a929ba3036d6cd5d822f300cf036ff939f",
      "in_reply_to_id": 545181363,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks! [Updated](https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-748361576).",
      "created_at": "2020-12-18T23:04:16Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r546135778",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546135778"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 22,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546135940",
      "pull_request_review_id": 555870166,
      "id": 546135940,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjEzNTk0MA==",
      "diff_hunk": "@@ -0,0 +1,342 @@\n+// Copyright (c) 2011-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <mapport.h>\n+\n+#include <clientversion.h>\n+#include <logging.h>\n+#include <net.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <threadinterrupt.h>\n+#include <util/system.h>\n+\n+#ifdef USE_NATPMP\n+#include <natpmp.h>\n+#ifdef WIN32\n+#include <winsock2.h>\n+#else\n+#include <netinet/in.h>\n+#endif // #ifdef WIN32\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+#include <miniupnpc/miniupnpc.h>\n+#include <miniupnpc/upnpcommands.h>\n+#include <miniupnpc/upnperrors.h>\n+// The minimum supported miniUPnPc API version is set to 10. This keeps compatibility\n+// with Ubuntu 16.04 LTS and Debian 8 libminiupnpc-dev packages.\n+static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\");\n+#endif // #ifdef USE_UPNP\n+\n+#include <atomic>\n+#include <cassert>\n+#include <chrono>\n+#include <functional>\n+#include <string>\n+#include <thread>\n+\n+#if defined(USE_NATPMP) || defined(USE_UPNP)\n+static CThreadInterrupt g_mapport_interrupt;\n+static std::thread g_mapport_thread;\n+static std::atomic_uint g_mapport_enabled_protos{MapPortProtoFlag::NONE};\n+static std::atomic<MapPortProtoFlag> g_mapport_current_proto{MapPortProtoFlag::NONE};\n+static constexpr auto PORT_MAPPING_REANNOUNCE_PERIOD = std::chrono::minutes(20);\n+static constexpr auto PORT_MAPPING_RETRY_PERIOD = std::chrono::minutes(5);\n+\n+#ifdef USE_NATPMP\n+static uint16_t g_mapport_external_port = 0;\n+static bool NatpmpInit(natpmp_t* natpmp)\n+{\n+    const int r_init = initnatpmp(natpmp, /* detect gateway automatically */ 0, /* forced gateway - NOT APPLIED*/ 0);\n+    if (r_init == 0) return true;\n+    LogPrintf(\"natpmp: initnatpmp() failed with %d error.\\n\", r_init);\n+    return false;\n+}\n+\n+static bool NatpmpDiscover(natpmp_t* natpmp, struct in_addr& external_ipv4_addr)\n+{\n+    const int r_send = sendpublicaddressrequest(natpmp);\n+    if (r_send == 2 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            external_ipv4_addr = response.pnu.publicaddress.addr;\n+            return true;\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"natpmp: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"natpmp: readnatpmpresponseorretry() for public address failed with %d error.\\n\", r_read);\n+        }\n+",
      "path": "src/mapport.cpp",
      "position": null,
      "original_position": 80,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "93ff21a929ba3036d6cd5d822f300cf036ff939f",
      "in_reply_to_id": 545195115,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "[Updated](https://github.com/bitcoin/bitcoin/pull/18077#issuecomment-748361576).",
      "created_at": "2020-12-18T23:04:28Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r546135940",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546135940"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 80,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546581515",
      "pull_request_review_id": 556219089,
      "id": 546581515,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU4MTUxNQ==",
      "diff_hunk": "@@ -0,0 +1,342 @@\n+// Copyright (c) 2011-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <mapport.h>\n+\n+#include <clientversion.h>\n+#include <logging.h>\n+#include <net.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <threadinterrupt.h>\n+#include <util/system.h>\n+\n+#ifdef USE_NATPMP\n+#include <natpmp.h>\n+#ifdef WIN32\n+#include <winsock2.h>\n+#else\n+#include <netinet/in.h>\n+#endif // #ifdef WIN32\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+#include <miniupnpc/miniupnpc.h>\n+#include <miniupnpc/upnpcommands.h>\n+#include <miniupnpc/upnperrors.h>\n+// The minimum supported miniUPnPc API version is set to 10. This keeps compatibility\n+// with Ubuntu 16.04 LTS and Debian 8 libminiupnpc-dev packages.\n+static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\");\n+#endif // #ifdef USE_UPNP\n+\n+#include <atomic>\n+#include <cassert>\n+#include <chrono>\n+#include <functional>\n+#include <string>\n+#include <thread>\n+\n+#if defined(USE_NATPMP) || defined(USE_UPNP)\n+static CThreadInterrupt g_mapport_interrupt;\n+static std::thread g_mapport_thread;\n+static std::atomic_uint g_mapport_enabled_protos{MapPortProtoFlag::NONE};\n+static std::atomic<MapPortProtoFlag> g_mapport_current_proto{MapPortProtoFlag::NONE};\n+static constexpr auto PORT_MAPPING_REANNOUNCE_PERIOD = std::chrono::minutes(20);\n+static constexpr auto PORT_MAPPING_RETRY_PERIOD = std::chrono::minutes(5);\n+\n+#ifdef USE_NATPMP\n+static uint16_t g_mapport_external_port = 0;\n+static bool NatpmpInit(natpmp_t* natpmp)\n+{\n+    const int r_init = initnatpmp(natpmp, /* detect gateway automatically */ 0, /* forced gateway - NOT APPLIED*/ 0);\n+    if (r_init == 0) return true;\n+    LogPrintf(\"natpmp: initnatpmp() failed with %d error.\\n\", r_init);\n+    return false;\n+}\n+\n+static bool NatpmpDiscover(natpmp_t* natpmp, struct in_addr& external_ipv4_addr)\n+{\n+    const int r_send = sendpublicaddressrequest(natpmp);\n+    if (r_send == 2 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            external_ipv4_addr = response.pnu.publicaddress.addr;\n+            return true;\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"natpmp: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"natpmp: readnatpmpresponseorretry() for public address failed with %d error.\\n\", r_read);\n+        }\n+\n+    } else {\n+        LogPrintf(\"natpmp: sendpublicaddressrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool NatpmpMapping(natpmp_t* natpmp, const struct in_addr& external_ipv4_addr, uint16_t private_port, bool& external_ip_discovered)\n+{\n+    const uint16_t suggested_external_port = g_mapport_external_port ? g_mapport_external_port : private_port;\n+    const int r_send = sendnewportmappingrequest(natpmp, NATPMP_PROTOCOL_TCP, private_port, suggested_external_port, 3600 /*seconds*/);\n+    if (r_send == 12 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            auto pm = response.pnu.newportmapping;\n+            if (private_port == pm.privateport && pm.lifetime > 0) {\n+                g_mapport_external_port = pm.mappedpublicport;\n+                const CService external{external_ipv4_addr, pm.mappedpublicport};\n+                if (!external_ip_discovered && fDiscover) {\n+                    AddLocal(external, LOCAL_MAPPED);\n+                    external_ip_discovered = true;\n+                }\n+\n+                LogPrintf(\"natpmp: Port mapping successful. External address = %s\\n\", external.ToString());\n+                return true;\n+            } else {\n+                LogPrintf(\"natpmp: Port mapping failed.\\n\");\n+            }\n+\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"natpmp: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"natpmp: readnatpmpresponseorretry() for port mapping failed with %d error.\\n\", r_read);\n+        }\n+\n+    } else {\n+        LogPrintf(\"natpmp: sendnewportmappingrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool ProcessNatpmp()\n+{\n+    bool ret = false;\n+    natpmp_t natpmp;\n+    struct in_addr external_ipv4_addr;\n+    if (NatpmpInit(&natpmp) && NatpmpDiscover(&natpmp, external_ipv4_addr)) {\n+        bool external_ip_discovered = false;\n+        const uint16_t private_port = GetListenPort();\n+        do {\n+            ret = NatpmpMapping(&natpmp, external_ipv4_addr, private_port, external_ip_discovered);\n+        } while (ret && g_mapport_interrupt.sleep_for(PORT_MAPPING_REANNOUNCE_PERIOD));\n+        g_mapport_interrupt.reset();\n+\n+        const int r_send = sendnewportmappingrequest(&natpmp, NATPMP_PROTOCOL_TCP, private_port, g_mapport_external_port, /* remove a port mapping */ 0);\n+        g_mapport_external_port = 0;\n+        if (r_send == 12 /* OK */) {\n+            LogPrintf(\"natpmp: Port mapping removed successfully.\\n\");\n+        } else {\n+            LogPrintf(\"natpmp: sendnewportmappingrequest(0) failed with %d error.\\n\", r_send);\n+        }\n+    }\n+\n+    closenatpmp(&natpmp);\n+    return ret;\n+}\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+static bool ProcessUpnp()\n+{\n+    bool ret = false;\n+    std::string port = strprintf(\"%u\", GetListenPort());\n+    const char * multicastif = nullptr;\n+    const char * minissdpdpath = nullptr;\n+    struct UPNPDev * devlist = nullptr;\n+    char lanaddr[64];\n+\n+    int error = 0;\n+#if MINIUPNPC_API_VERSION < 14\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, &error);\n+#else\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, 2, &error);\n+#endif\n+\n+    struct UPNPUrls urls;\n+    struct IGDdatas data;\n+    int r;\n+\n+    r = UPNP_GetValidIGD(devlist, &urls, &data, lanaddr, sizeof(lanaddr));\n+    if (r == 1)\n+    {\n+        if (fDiscover) {\n+            char externalIPAddress[40];\n+            r = UPNP_GetExternalIPAddress(urls.controlURL, data.first.servicetype, externalIPAddress);\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                LogPrintf(\"UPnP: GetExternalIPAddress() returned %d\\n\", r);\n+            } else {\n+                if (externalIPAddress[0]) {\n+                    CNetAddr resolved;\n+                    if (LookupHost(externalIPAddress, resolved, false)) {\n+                        LogPrintf(\"UPnP: ExternalIPAddress = %s\\n\", resolved.ToString());\n+                        AddLocal(resolved, LOCAL_MAPPED);\n+                    }\n+                } else {\n+                    LogPrintf(\"UPnP: GetExternalIPAddress failed.\\n\");\n+                }\n+            }\n+        }\n+\n+        std::string strDesc = PACKAGE_NAME \" \" + FormatFullVersion();\n+\n+        do {\n+            r = UPNP_AddPortMapping(urls.controlURL, data.first.servicetype, port.c_str(), port.c_str(), lanaddr, strDesc.c_str(), \"TCP\", 0, \"0\");\n+\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                ret = false;\n+                LogPrintf(\"AddPortMapping(%s, %s, %s) failed with code %d (%s)\\n\", port, port, lanaddr, r, strupnperror(r));\n+                break;\n+            } else {\n+                ret = true;\n+                LogPrintf(\"UPnP Port Mapping successful.\\n\");\n+            }\n+        } while (g_mapport_interrupt.sleep_for(PORT_MAPPING_REANNOUNCE_PERIOD));\n+        g_mapport_interrupt.reset();\n+\n+        r = UPNP_DeletePortMapping(urls.controlURL, data.first.servicetype, port.c_str(), \"TCP\", 0);\n+        LogPrintf(\"UPNP_DeletePortMapping() returned: %d\\n\", r);\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        FreeUPNPUrls(&urls);\n+    } else {\n+        LogPrintf(\"No valid UPnP IGDs found\\n\");\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        if (r != 0)\n+            FreeUPNPUrls(&urls);\n+    }\n+\n+    return ret;\n+}\n+#endif // #ifdef USE_UPNP\n+\n+static void ThreadMapPort()\n+{\n+    bool ok;\n+    do {\n+        ok = false;\n+\n+#ifdef USE_UPNP\n+        // High priority protocol.\n+        if (g_mapport_enabled_protos & MapPortProtoFlag::UPNP) {\n+            g_mapport_current_proto = MapPortProtoFlag::UPNP;\n+            ok = ProcessUpnp();\n+            if (ok) continue;\n+        }\n+#endif // #ifdef USE_UPNP\n+\n+#ifdef USE_NATPMP\n+        // Low priority protocol.",
      "path": "src/mapport.cpp",
      "position": 238,
      "original_position": 244,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "93ff21a929ba3036d6cd5d822f300cf036ff939f",
      "in_reply_to_id": 545078633,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@hebasto, Thanks for the clarification! IMO the nat-pmp implementation overriding the desired external port is fine as long as we advertise the overriden one instead of the desired one (I guess we do). That should also be expected as it is allowed by the RFC.\r\n\r\nI guess something like that happens with UPnP too if the desired port is already used?",
      "created_at": "2020-12-21T08:52:55Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r546581515",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/546581515"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 238,
      "original_line": 238,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/548844201",
      "pull_request_review_id": 558794397,
      "id": 548844201,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODg0NDIwMQ==",
      "diff_hunk": "@@ -0,0 +1,342 @@\n+// Copyright (c) 2011-2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <mapport.h>\n+\n+#include <clientversion.h>\n+#include <logging.h>\n+#include <net.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <threadinterrupt.h>\n+#include <util/system.h>\n+\n+#ifdef USE_NATPMP\n+#include <natpmp.h>\n+#ifdef WIN32\n+#include <winsock2.h>\n+#else\n+#include <netinet/in.h>\n+#endif // #ifdef WIN32\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+#include <miniupnpc/miniupnpc.h>\n+#include <miniupnpc/upnpcommands.h>\n+#include <miniupnpc/upnperrors.h>\n+// The minimum supported miniUPnPc API version is set to 10. This keeps compatibility\n+// with Ubuntu 16.04 LTS and Debian 8 libminiupnpc-dev packages.\n+static_assert(MINIUPNPC_API_VERSION >= 10, \"miniUPnPc API version >= 10 assumed\");\n+#endif // #ifdef USE_UPNP\n+\n+#include <atomic>\n+#include <cassert>\n+#include <chrono>\n+#include <functional>\n+#include <string>\n+#include <thread>\n+\n+#if defined(USE_NATPMP) || defined(USE_UPNP)\n+static CThreadInterrupt g_mapport_interrupt;\n+static std::thread g_mapport_thread;\n+static std::atomic_uint g_mapport_enabled_protos{MapPortProtoFlag::NONE};\n+static std::atomic<MapPortProtoFlag> g_mapport_current_proto{MapPortProtoFlag::NONE};\n+static constexpr auto PORT_MAPPING_REANNOUNCE_PERIOD = std::chrono::minutes(20);\n+static constexpr auto PORT_MAPPING_RETRY_PERIOD = std::chrono::minutes(5);\n+\n+#ifdef USE_NATPMP\n+static uint16_t g_mapport_external_port = 0;\n+static bool NatpmpInit(natpmp_t* natpmp)\n+{\n+    const int r_init = initnatpmp(natpmp, /* detect gateway automatically */ 0, /* forced gateway - NOT APPLIED*/ 0);\n+    if (r_init == 0) return true;\n+    LogPrintf(\"natpmp: initnatpmp() failed with %d error.\\n\", r_init);\n+    return false;\n+}\n+\n+static bool NatpmpDiscover(natpmp_t* natpmp, struct in_addr& external_ipv4_addr)\n+{\n+    const int r_send = sendpublicaddressrequest(natpmp);\n+    if (r_send == 2 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            external_ipv4_addr = response.pnu.publicaddress.addr;\n+            return true;\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"natpmp: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"natpmp: readnatpmpresponseorretry() for public address failed with %d error.\\n\", r_read);\n+        }\n+\n+    } else {\n+        LogPrintf(\"natpmp: sendpublicaddressrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool NatpmpMapping(natpmp_t* natpmp, const struct in_addr& external_ipv4_addr, uint16_t private_port, bool& external_ip_discovered)\n+{\n+    const uint16_t suggested_external_port = g_mapport_external_port ? g_mapport_external_port : private_port;\n+    const int r_send = sendnewportmappingrequest(natpmp, NATPMP_PROTOCOL_TCP, private_port, suggested_external_port, 3600 /*seconds*/);\n+    if (r_send == 12 /* OK */) {\n+        int r_read;\n+        natpmpresp_t response;\n+        do {\n+            r_read = readnatpmpresponseorretry(natpmp, &response);\n+        } while (r_read == NATPMP_TRYAGAIN);\n+\n+        if (r_read == 0) {\n+            auto pm = response.pnu.newportmapping;\n+            if (private_port == pm.privateport && pm.lifetime > 0) {\n+                g_mapport_external_port = pm.mappedpublicport;\n+                const CService external{external_ipv4_addr, pm.mappedpublicport};\n+                if (!external_ip_discovered && fDiscover) {\n+                    AddLocal(external, LOCAL_MAPPED);\n+                    external_ip_discovered = true;\n+                }\n+\n+                LogPrintf(\"natpmp: Port mapping successful. External address = %s\\n\", external.ToString());\n+                return true;\n+            } else {\n+                LogPrintf(\"natpmp: Port mapping failed.\\n\");\n+            }\n+\n+        } else if (r_read == NATPMP_ERR_NOGATEWAYSUPPORT) {\n+            LogPrintf(\"natpmp: The gateway does not support NAT-PMP.\\n\");\n+        } else {\n+            LogPrintf(\"natpmp: readnatpmpresponseorretry() for port mapping failed with %d error.\\n\", r_read);\n+        }\n+\n+    } else {\n+        LogPrintf(\"natpmp: sendnewportmappingrequest() failed with %d error.\\n\", r_send);\n+    }\n+\n+    return false;\n+}\n+\n+static bool ProcessNatpmp()\n+{\n+    bool ret = false;\n+    natpmp_t natpmp;\n+    struct in_addr external_ipv4_addr;\n+    if (NatpmpInit(&natpmp) && NatpmpDiscover(&natpmp, external_ipv4_addr)) {\n+        bool external_ip_discovered = false;\n+        const uint16_t private_port = GetListenPort();\n+        do {\n+            ret = NatpmpMapping(&natpmp, external_ipv4_addr, private_port, external_ip_discovered);\n+        } while (ret && g_mapport_interrupt.sleep_for(PORT_MAPPING_REANNOUNCE_PERIOD));\n+        g_mapport_interrupt.reset();\n+\n+        const int r_send = sendnewportmappingrequest(&natpmp, NATPMP_PROTOCOL_TCP, private_port, g_mapport_external_port, /* remove a port mapping */ 0);\n+        g_mapport_external_port = 0;\n+        if (r_send == 12 /* OK */) {\n+            LogPrintf(\"natpmp: Port mapping removed successfully.\\n\");\n+        } else {\n+            LogPrintf(\"natpmp: sendnewportmappingrequest(0) failed with %d error.\\n\", r_send);\n+        }\n+    }\n+\n+    closenatpmp(&natpmp);\n+    return ret;\n+}\n+#endif // #ifdef USE_NATPMP\n+\n+#ifdef USE_UPNP\n+static bool ProcessUpnp()\n+{\n+    bool ret = false;\n+    std::string port = strprintf(\"%u\", GetListenPort());\n+    const char * multicastif = nullptr;\n+    const char * minissdpdpath = nullptr;\n+    struct UPNPDev * devlist = nullptr;\n+    char lanaddr[64];\n+\n+    int error = 0;\n+#if MINIUPNPC_API_VERSION < 14\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, &error);\n+#else\n+    devlist = upnpDiscover(2000, multicastif, minissdpdpath, 0, 0, 2, &error);\n+#endif\n+\n+    struct UPNPUrls urls;\n+    struct IGDdatas data;\n+    int r;\n+\n+    r = UPNP_GetValidIGD(devlist, &urls, &data, lanaddr, sizeof(lanaddr));\n+    if (r == 1)\n+    {\n+        if (fDiscover) {\n+            char externalIPAddress[40];\n+            r = UPNP_GetExternalIPAddress(urls.controlURL, data.first.servicetype, externalIPAddress);\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                LogPrintf(\"UPnP: GetExternalIPAddress() returned %d\\n\", r);\n+            } else {\n+                if (externalIPAddress[0]) {\n+                    CNetAddr resolved;\n+                    if (LookupHost(externalIPAddress, resolved, false)) {\n+                        LogPrintf(\"UPnP: ExternalIPAddress = %s\\n\", resolved.ToString());\n+                        AddLocal(resolved, LOCAL_MAPPED);\n+                    }\n+                } else {\n+                    LogPrintf(\"UPnP: GetExternalIPAddress failed.\\n\");\n+                }\n+            }\n+        }\n+\n+        std::string strDesc = PACKAGE_NAME \" \" + FormatFullVersion();\n+\n+        do {\n+            r = UPNP_AddPortMapping(urls.controlURL, data.first.servicetype, port.c_str(), port.c_str(), lanaddr, strDesc.c_str(), \"TCP\", 0, \"0\");\n+\n+            if (r != UPNPCOMMAND_SUCCESS) {\n+                ret = false;\n+                LogPrintf(\"AddPortMapping(%s, %s, %s) failed with code %d (%s)\\n\", port, port, lanaddr, r, strupnperror(r));\n+                break;\n+            } else {\n+                ret = true;\n+                LogPrintf(\"UPnP Port Mapping successful.\\n\");\n+            }\n+        } while (g_mapport_interrupt.sleep_for(PORT_MAPPING_REANNOUNCE_PERIOD));\n+        g_mapport_interrupt.reset();\n+\n+        r = UPNP_DeletePortMapping(urls.controlURL, data.first.servicetype, port.c_str(), \"TCP\", 0);\n+        LogPrintf(\"UPNP_DeletePortMapping() returned: %d\\n\", r);\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        FreeUPNPUrls(&urls);\n+    } else {\n+        LogPrintf(\"No valid UPnP IGDs found\\n\");\n+        freeUPNPDevlist(devlist); devlist = nullptr;\n+        if (r != 0)\n+            FreeUPNPUrls(&urls);\n+    }\n+\n+    return ret;\n+}\n+#endif // #ifdef USE_UPNP\n+\n+static void ThreadMapPort()\n+{\n+    bool ok;\n+    do {\n+        ok = false;\n+\n+#ifdef USE_UPNP\n+        // High priority protocol.\n+        if (g_mapport_enabled_protos & MapPortProtoFlag::UPNP) {\n+            g_mapport_current_proto = MapPortProtoFlag::UPNP;\n+            ok = ProcessUpnp();\n+            if (ok) continue;\n+        }\n+#endif // #ifdef USE_UPNP\n+\n+#ifdef USE_NATPMP\n+        // Low priority protocol.",
      "path": "src/mapport.cpp",
      "position": 238,
      "original_position": 244,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "93ff21a929ba3036d6cd5d822f300cf036ff939f",
      "in_reply_to_id": 545078633,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> IMO the nat-pmp implementation overriding the desired external port is fine as long as we advertise the overriden one instead of the desired one (I guess we do).\r\n\r\nYes, we do:\r\nhttps://github.com/bitcoin/bitcoin/blob/890e59c64d62fd39778ede620a70fe6bc60d9993/src/mapport.cpp#L97-L102\r\n\r\n> I guess something like that happens with UPnP too if the desired port is already used?\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/890e59c64d62fd39778ede620a70fe6bc60d9993/src/mapport.cpp#L173-L186",
      "created_at": "2020-12-25T09:37:09Z",
      "updated_at": "2021-01-07T16:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r548844201",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/548844201"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 238,
      "original_line": 238,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/560381734",
      "pull_request_review_id": 571516086,
      "id": 560381734,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDM4MTczNA==",
      "diff_hunk": "@@ -50,6 +51,10 @@ OptionsDialog::OptionsDialog(QWidget *parent, bool enableWallet) :\n #ifndef USE_UPNP\n     ui->mapPortUpnp->setEnabled(false);\n #endif\n+    connect(this, &QDialog::accepted, [this](){\n+        QSettings settings;\n+        model->node().mapPort(settings.value(\"fUseUPnP\").toBool());",
      "path": "src/qt/optionsdialog.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "58e8364dcdc4e57b0caac09f8402e6535301de9b",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"gui: Apply port mapping changes on dialog exit\" (58e8364dcdc4e57b0caac09f8402e6535301de9b)\r\n\r\n@hebasto It seems like this commit has a bug and will incorrectly overwrite command line and config file `-upnp` and `-natpmp` options. I think this might have happened before, but previously only if these settings were changed, now if the dialog is just opened and closed.\r\n\r\nWould you have an opinion on reverting this change? Aside from the bug, it seems simpler to go back to fully applying settings in OptionsModel, instead of using half-using OptionsModel to apply the setting, and then reading the setting later in a different code path and QSettings instance in dialog code outside of OptionsModel.\r\n\r\n(Encountered this while rebasing #15936)\r\n",
      "created_at": "2021-01-19T18:09:43Z",
      "updated_at": "2021-01-19T18:09:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r560381734",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/560381734"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 56,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/567211003",
      "pull_request_review_id": 579737007,
      "id": 567211003,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NzIxMTAwMw==",
      "diff_hunk": "@@ -50,6 +51,10 @@ OptionsDialog::OptionsDialog(QWidget *parent, bool enableWallet) :\n #ifndef USE_UPNP\n     ui->mapPortUpnp->setEnabled(false);\n #endif\n+    connect(this, &QDialog::accepted, [this](){\n+        QSettings settings;\n+        model->node().mapPort(settings.value(\"fUseUPnP\").toBool());",
      "path": "src/qt/optionsdialog.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "a191e23b8e7f0e19fc0359825eb7ca0d47966fa9",
      "original_commit_id": "58e8364dcdc4e57b0caac09f8402e6535301de9b",
      "in_reply_to_id": 560381734,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@ryanofsky\r\n\r\nYou are right.\r\n\r\n> It seems like this commit has a bug and will incorrectly overwrite command line and config file `-upnp` and `-natpmp` options.\r\n\r\nThe concerns about user-friendly and correct behavior were raised in #18184. Now users are able to switch `-upnp` and `-natpmp` on/off on-the-fly via the GUI. Should we drop this feature?\r\n\r\n> I think this might have happened before, but previously only if these settings were changed, now if the dialog is just opened and closed.\r\n\r\nExiting the dialog via the \"Cancel\" push button or pressing the \"Esc\" key should not trigger that code path.\r\n\r\nAnyway, I'll happy to revert (or enhance) that change in a proper way.",
      "created_at": "2021-01-30T07:20:00Z",
      "updated_at": "2021-01-30T07:20:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18077#discussion_r567211003",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/567211003"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18077"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 56,
      "side": "RIGHT"
    }
  ]
}