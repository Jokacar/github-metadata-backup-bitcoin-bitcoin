{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30509",
    "id": 1983488633,
    "node_id": "PR_kwDOABII5852OaJ5",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/30509",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/30509.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/30509.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30509",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30509/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30509/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30509/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/af24810eeed397c2fe5f61ef9769e1b7ee0ecdf9",
    "number": 30509,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "multiprocess: Add -ipcbind option to bitcoin-node",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Add `-ipcbind` option to `bitcoin-node` to make it listen on a unix socket and accept connections from other processes. The default socket path is `<datadir>/node.sock`, but this can be customized.\r\n\r\nThis option lets potential wallet, gui, index, and mining processes connect to the node and control it. See examples in #19460, #19461, and #30437.\r\n\r\nMotivation for this PR, in combination with #30510, is be able to release a bitcoin core node binary that can generate block templates for a separate Stratum v2 mining service, like the one being implemented in https://github.com/Sjors/bitcoin/pull/48, that connects over IPC.\r\n\r\nOther things to know about this PR:\r\n\r\n- While the `-ipcbind` option lets other processes to connect to the `bitcoin-node` process, the only thing they can actually do after connecting is call methods on the [`Init`](https://github.com/bitcoin/bitcoin/blob/master/src/ipc/capnp/init.capnp#L17-L20) interface which is currently very limited and doesn't do much. But PRs [#30510](https://github.com/bitcoin/bitcoin/pull/30510), [#29409](https://github.com/bitcoin/bitcoin/pull/29409), and [#10102](https://github.com/bitcoin/bitcoin/pull/10102) expand the `Init` interface to expose mining, wallet, and gui functionality respectively.\r\n\r\n- This PR is not needed for [#10102](https://github.com/bitcoin/bitcoin/pull/10102), which runs GUI, node, and wallet code in different processes, because [#10102](https://github.com/bitcoin/bitcoin/pull/10102) does not use unix sockets or allow outside processes to connect to existing processes. [#10102](https://github.com/bitcoin/bitcoin/pull/10102) lets parent and child processes communicate over internal socketpairs, not externally accessible sockets.\r\n\r\n---\r\n\r\nThis PR is part of the [process separation project](https://github.com/bitcoin/bitcoin/issues/28722).",
    "labels": [
      {
        "id": 955867938,
        "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
        "name": "Needs rebase",
        "description": "",
        "color": "cccccc",
        "default": false
      }
    ],
    "created_at": "2024-07-23T14:34:04Z",
    "updated_at": "2024-09-02T22:43:50Z",
    "mergeable": false,
    "mergeable_state": "dirty",
    "merge_commit_sha": "98ec2518315452dd8d65b32d9b4c12de35469508",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": false,
    "head": {
      "label": "ryanofsky:pr/ipc-bind",
      "ref": "pr/ipc-bind",
      "sha": "af24810eeed397c2fe5f61ef9769e1b7ee0ecdf9",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 69901633,
        "node_id": "MDEwOlJlcG9zaXRvcnk2OTkwMTYzMw==",
        "name": "bitcoin",
        "full_name": "ryanofsky/bitcoin",
        "owner": {
          "login": "ryanofsky",
          "id": 7133040,
          "node_id": "MDQ6VXNlcjcxMzMwNDA=",
          "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/ryanofsky",
          "html_url": "https://github.com/ryanofsky",
          "followers_url": "https://api.github.com/users/ryanofsky/followers",
          "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
          "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
          "repos_url": "https://api.github.com/users/ryanofsky/repos",
          "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/ryanofsky/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/ryanofsky/bitcoin",
        "archive_url": "https://api.github.com/repos/ryanofsky/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/ryanofsky/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/ryanofsky/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/ryanofsky/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/ryanofsky/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/ryanofsky/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/ryanofsky/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/ryanofsky/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/ryanofsky/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/ryanofsky/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/ryanofsky/bitcoin/events",
        "forks_url": "https://api.github.com/repos/ryanofsky/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/ryanofsky/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/ryanofsky/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/ryanofsky/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/ryanofsky/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/ryanofsky/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/ryanofsky/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/ryanofsky/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/ryanofsky/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/ryanofsky/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/ryanofsky/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/ryanofsky/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/ryanofsky/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:ryanofsky/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/ryanofsky/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/ryanofsky/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/ryanofsky/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/ryanofsky/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/ryanofsky/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/ryanofsky/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/ryanofsky/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/ryanofsky/bitcoin/hooks",
        "svn_url": "https://github.com/ryanofsky/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 9,
        "stargazers_count": 13,
        "watchers_count": 13,
        "size": 263265,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-08-26T18:43:41Z",
        "created_at": "2016-10-03T19:05:43Z",
        "updated_at": "2024-08-02T04:30:37Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "ee367170cb2acf82b6ff8e0ccdbc1cce09730662",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35814,
        "stargazers_count": 77777,
        "watchers_count": 77777,
        "size": 267511,
        "default_branch": "master",
        "open_issues_count": 667,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-09-02T14:14:58Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-09-02T21:43:46Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30509"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 349,
    "deletions": 17,
    "changed_files": 20,
    "commits": 4,
    "review_comments": 31,
    "comments": 11
  },
  "events": [
    {
      "event": "commented",
      "id": 2245427906,
      "node_id": "IC_kwDOABII586F1oLC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2245427906",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-23T14:34:08Z",
      "updated_at": "2024-08-29T21:35:47Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/30509).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [Sjors](https://github.com/bitcoin/bitcoin/pull/30509#issuecomment-2298367086), [TheCharlatan](https://github.com/bitcoin/bitcoin/pull/30509#pullrequestreview-2263113816) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#30664](https://github.com/bitcoin/bitcoin/pull/30664) (build: Remove Autotools-based build system by hebasto)\n* [#30635](https://github.com/bitcoin/bitcoin/pull/30635) (rpc: add optional blockhash to waitfornewblock by Sjors)\n* [#30510](https://github.com/bitcoin/bitcoin/pull/30510) (multiprocess: Add IPC wrapper for Mining interface by ryanofsky)\n* [#30437](https://github.com/bitcoin/bitcoin/pull/30437) (multiprocess: add bitcoin-mine test program by ryanofsky)\n* [#30409](https://github.com/bitcoin/bitcoin/pull/30409) (Introduce waitTipChanged() mining interface, replace RPCNotifyBlockChange, drop CRPCSignals & g_best_block by Sjors)\n* [#30148](https://github.com/bitcoin/bitcoin/pull/30148) (cli: restrict multiple exclusive argument usage in bitcoin-cli by naiyoma)\n* [#29641](https://github.com/bitcoin/bitcoin/pull/29641) (scripted-diff: Use LogInfo/LogDebug over LogPrintf/LogPrint by maflcko)\n* [#29432](https://github.com/bitcoin/bitcoin/pull/29432) (Stratum v2 Template Provider (take 3) by Sjors)\n* [#29409](https://github.com/bitcoin/bitcoin/pull/29409) (multiprocess: Add capnp wrapper for Chain interface by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30509#issuecomment-2245427906",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30509"
    },
    {
      "event": "commented",
      "id": 2245502110,
      "node_id": "IC_kwDOABII586F16Se",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2245502110",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-23T15:03:19Z",
      "updated_at": "2024-07-23T15:03:19Z",
      "author_association": "MEMBER",
      "body": "One thing that may be useful to clarify, IIUC, although you can connect, nothing can be done via these connections yet. That is what #30510 introduces specifically for the Mining interface.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30509#issuecomment-2245502110",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30509"
    },
    {
      "event": "commented",
      "id": 2245563392,
      "node_id": "IC_kwDOABII586F2JQA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2245563392",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-23T15:28:30Z",
      "updated_at": "2024-07-23T15:28:30Z",
      "author_association": "CONTRIBUTOR",
      "body": "> One thing that may be useful to clarify, IIUC, although you can connect, nothing can be done via these connections yet. That is what #30510 introduces specifically for the Mining interface.\r\n\r\nThank you, added this to the description",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30509#issuecomment-2245563392",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30509"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13634050649,
      "node_id": "HRFPE_lADOABII586QkFEmzwAAAAMspxpZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13634050649",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-24T17:25:03Z"
    },
    {
      "event": "commented",
      "id": 2248589227,
      "node_id": "IC_kwDOABII586GBr-r",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2248589227",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-24T17:48:35Z",
      "updated_at": "2024-07-24T17:48:35Z",
      "author_association": "CONTRIBUTOR",
      "body": "re: https://github.com/bitcoin/bitcoin/pull/30509#issue-2425377062\r\n\r\n> The default socket path is currently `<datadir>/sockets/bitcoin-node.sock`, but this can be customized.\r\n\r\nI changed the default socket path to `<datadir>/node.sock` after running into some \"exceeded maximum socket path length\" errors. The maximum unix socket path length is only 107 characters, so I thought a shorter suffix might avoid problems on systems with long data directory or home directory paths.\r\n\r\nAnother possible approach could be to use `$XDG_RUNTIME_DIR/bitcoin-node.sock` as the default socket path, since `$XDG_RUNTIME_DIR` should resolve to a short path like `/run/user/1000`. But this could lead to surprises on systems with multiple data directories since the socket path is no longer inside the data directory, and it could cause security problems since the socket would no longer be shielded by permissions of the data directory.\r\n\r\nUpdated 3d9a8cb4e194399fa9b2ce8af6bd2a8b8ef970c6 -> efdc120795e7c3ce914ee0677c3b69803ea5de1e ([`pr/ipc-bind.1`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-bind.1) -> [`pr/ipc-bind.2`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-bind.2), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/ipc-bind.1..pr/ipc-bind.2)) with this change and a test simplification.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30509#issuecomment-2248589227",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30509"
    },
    {
      "event": "reviewed",
      "id": 2223960433,
      "node_id": "PRR_kwDOABII586EjvFx",
      "url": null,
      "actor": null,
      "commit_id": "efdc120795e7c3ce914ee0677c3b69803ea5de1e",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "lgtm , I hope we can finally get this project under way now.",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30509#pullrequestreview-2223960433",
      "submitted_at": "2024-08-07T15:45:39Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30509"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13795650797,
      "node_id": "HRFPE_lADOABII586QkFEmzwAAAAM2SOzt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13795650797",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-07T17:26:02Z"
    },
    {
      "event": "reviewed",
      "id": 2225643495,
      "node_id": "PRR_kwDOABII586EqJ_n",
      "url": null,
      "actor": null,
      "commit_id": "cf9aaf4b7f27b38bf201aa39c56c9967f3b2a904",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for the review!\r\n\r\nUpdated efdc120795e7c3ce914ee0677c3b69803ea5de1e -> cf9aaf4b7f27b38bf201aa39c56c9967f3b2a904 ([`pr/ipc-bind.2`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-bind.2) -> [`pr/ipc-bind.3`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-bind.3), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/ipc-bind.2..pr/ipc-bind.3)) with suggestions\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30509#pullrequestreview-2225643495",
      "submitted_at": "2024-08-07T17:26:56Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30509"
    },
    {
      "event": "reviewed",
      "id": 2225809704,
      "node_id": "PRR_kwDOABII586Eqyko",
      "url": null,
      "actor": null,
      "commit_id": "cf9aaf4b7f27b38bf201aa39c56c9967f3b2a904",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30509#pullrequestreview-2225809704",
      "submitted_at": "2024-08-07T17:39:56Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30509"
    },
    {
      "event": "commented",
      "id": 2274112998,
      "node_id": "IC_kwDOABII586HjDXm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2274112998",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-07T18:42:32Z",
      "updated_at": "2024-08-07T18:42:32Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/28475408210</sub>\n\n<details><summary>Hints</summary>\n\nMake sure to run all tests locally, according to the documentation.\n\nThe failure may happen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30509#issuecomment-2274112998",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30509"
    },
    {
      "event": "labeled",
      "id": 13796447098,
      "node_id": "LE_lADOABII586QkFEmzwAAAAM2VRN6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13796447098",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-07T18:42:32Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2276739868,
      "node_id": "IC_kwDOABII586HtEsc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2276739868",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-08T22:00:28Z",
      "updated_at": "2024-08-08T22:00:28Z",
      "author_association": "CONTRIBUTOR",
      "body": "The test failure https://cirrus-ci.com/task/5102088831631360 in the new test which tests binding and connecting on [multiple sockets](https://github.com/bitcoin/bitcoin/pull/30509#discussion_r1707288885) turns out to reveal a corner case bug in libmultiprocess. The bug does not happen locally for me, but it does happen if I run the CI scripts inside a container, I think maybe because the container is 32 bit.\r\n\r\nBasically what happens is the test disconnects and reconnects immediately, which causes an `mp::Connection` instance to be freed and a new one to be allocated right away. In the CI container, the new mp::Connection object is allocated at the same address as the previous object and this causes the client connection try to reuse a remote thread associated with the previous connection which no longer exists. This happens because the client tracks threads to run on in a [map](https://github.com/chaincodelabs/libmultiprocess/blob/a9e16da55e880e5a0aed5008307ea56edc33fbd1/include/mp/proxy-io.h#L529) `std::map<Connection*, ProxyClient<Thread>> request_threads;` which is keyed by Connection pointer, with the assumption that that two different connections will not have the same pointer. Which is not the case when this test case is run in the CI container. I started implementing a fix for this which cleans up the map entry when the connection is destroyed, which is probably a good thing to do anyway so the map does not have stale entries in it.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30509#issuecomment-2276739868",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30509"
    },
    {
      "event": "referenced",
      "id": 13820406859,
      "node_id": "REFE_lADOABII586QkFEmzwAAAAM3wqxL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13820406859",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "febe6d249237598e4e20e2ad5e7bdccce266d2b9",
      "commit_url": "https://api.github.com/repos/ryanofsky/libmultiprocess/commits/febe6d249237598e4e20e2ad5e7bdccce266d2b9",
      "created_at": "2024-08-09T12:46:03Z"
    },
    {
      "event": "unlabeled",
      "id": 13821542410,
      "node_id": "UNLE_lADOABII586QkFEmzwAAAAM31AAK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13821542410",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-09T14:12:50Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "referenced",
      "id": 13822443690,
      "node_id": "REFE_lADOABII586QkFEmzwAAAAM34cCq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13822443690",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "8ba0d03b4439fc0dd3298462caba47bb0a22578b",
      "commit_url": "https://api.github.com/repos/ryanofsky/libmultiprocess/commits/8ba0d03b4439fc0dd3298462caba47bb0a22578b",
      "created_at": "2024-08-09T15:18:00Z"
    },
    {
      "event": "referenced",
      "id": 13822498866,
      "node_id": "REFE_lADOABII586QkFEmzwAAAAM34pgy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13822498866",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "c1b4ab4eb897d3af09bc9b3cc30e2e6fff87f3e2",
      "commit_url": "https://api.github.com/repos/chaincodelabs/libmultiprocess/commits/c1b4ab4eb897d3af09bc9b3cc30e2e6fff87f3e2",
      "created_at": "2024-08-09T15:22:48Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGVmNTdkYjg3MTFjN2ZhZmI2YzRmMDliODgwZmQ0MjYzYmM2ZGM5ZGQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ef57db8711c7fafb6c4f09b880fd4263bc6dc9dd",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ef57db8711c7fafb6c4f09b880fd4263bc6dc9dd",
      "tree": {
        "sha": "cdf0b02094a04ae5e2c8f24cd3ad58f19eb68c61",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cdf0b02094a04ae5e2c8f24cd3ad58f19eb68c61"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bacab1380edd764fcd9cd6cecfc4069bfa442a9f",
          "sha": "bacab1380edd764fcd9cd6cecfc4069bfa442a9f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/bacab1380edd764fcd9cd6cecfc4069bfa442a9f"
        }
      ],
      "message": "depends: Update libmultiprocess library for CustomMessage function and ThreadContext bugfix\n\nThe CustomMessage functions allow simplifying custom IPC type code, and the\nbugfix is needed to prevent in a crash in a new test which creates and destroys\nconnections in a loop. Upstream PRs are:\n\nhttps://github.com/chaincodelabs/libmultiprocess/pull/105 types: Add Custom{Build,Read,Pass}Message hooks\nhttps://github.com/chaincodelabs/libmultiprocess/pull/106 Bugfix: Clean up ThreadContext pointers when Connection is destroyed",
      "committer": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-08-09T15:35:17Z"
      },
      "author": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-08-09T15:35:17Z"
      },
      "sha": "ef57db8711c7fafb6c4f09b880fd4263bc6dc9dd"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDIxMTUwNjMxOGI0MjczYmUzMjM3ZTNmMjJjMTA3NDJlMDk3Y2ZmNjE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/211506318b4273be3237e3f22c10742e097cff61",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/211506318b4273be3237e3f22c10742e097cff61",
      "tree": {
        "sha": "e8775110fcf61f89d60d663b5f22c03ea9cabed2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e8775110fcf61f89d60d663b5f22c03ea9cabed2"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ef57db8711c7fafb6c4f09b880fd4263bc6dc9dd",
          "sha": "ef57db8711c7fafb6c4f09b880fd4263bc6dc9dd",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ef57db8711c7fafb6c4f09b880fd4263bc6dc9dd"
        }
      ],
      "message": "multiprocess: Add IPC connectAddress and listenAddress methods\n\nAllow listening on and connecting to unix sockets.",
      "committer": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2024-08-09T15:35:17Z"
      },
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2018-08-23T17:42:31Z"
      },
      "sha": "211506318b4273be3237e3f22c10742e097cff61"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDYzNzkyNDEwOWJmMDRiYjY1YjIzYmViMTU0NTA3Nzk5ZDFmMDQ0MWU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/637924109bf04bb65b23beb154507799d1f0441e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/637924109bf04bb65b23beb154507799d1f0441e",
      "tree": {
        "sha": "0a8687ee7a743542f15cb5e9edd9d89d63254dca",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0a8687ee7a743542f15cb5e9edd9d89d63254dca"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/211506318b4273be3237e3f22c10742e097cff61",
          "sha": "211506318b4273be3237e3f22c10742e097cff61",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/211506318b4273be3237e3f22c10742e097cff61"
        }
      ],
      "message": "multiprocess: Add unit tests for connect, serve, and listen functions",
      "committer": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-08-09T15:35:17Z"
      },
      "author": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-07-17T14:37:52Z"
      },
      "sha": "637924109bf04bb65b23beb154507799d1f0441e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGFmMjQ4MTBlZWVkMzk3YzJmZTVmNjFlZjk3NjllMWI3ZWUwZWNkZjk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/af24810eeed397c2fe5f61ef9769e1b7ee0ecdf9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/af24810eeed397c2fe5f61ef9769e1b7ee0ecdf9",
      "tree": {
        "sha": "3fe56b034828bacf79f147a58a548ebd03f8028e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3fe56b034828bacf79f147a58a548ebd03f8028e"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/637924109bf04bb65b23beb154507799d1f0441e",
          "sha": "637924109bf04bb65b23beb154507799d1f0441e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/637924109bf04bb65b23beb154507799d1f0441e"
        }
      ],
      "message": "multiprocess: Add -ipcbind option to bitcoin-node\n\nAdd `-ipcbind` option to `bitcoin-node` to listen on an IPC socket and accept\nconnections from other processes. In the future, there will be an `-ipcconnect`\noption added to `bitcoin-wallet` and `bitcoin-node` to allow wallet and gui\nprocesses to connect to the node and access it.\n\nExample usage:\n\n    src/bitcoin-node -regtest -debug -ipcbind=unix\n    src/bitcoin-wallet -regtest -ipcconnect=unix info\n    src/bitcoin-gui -regtest -ipcconnect=unix\n    src/bitcoin-mine -regtest -ipcconnect=unix",
      "committer": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2024-08-09T15:35:17Z"
      },
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2018-08-23T17:42:31Z"
      },
      "sha": "af24810eeed397c2fe5f61ef9769e1b7ee0ecdf9"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13822711612,
      "node_id": "HRFPE_lADOABII586QkFEmzwAAAAM35dc8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13822711612",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-09T15:40:34Z"
    },
    {
      "event": "commented",
      "id": 2278235877,
      "node_id": "IC_kwDOABII586Hyx7l",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2278235877",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-09T15:42:29Z",
      "updated_at": "2024-08-09T15:42:29Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased cf9aaf4b7f27b38bf201aa39c56c9967f3b2a904 -> 4137419b0170fa1e9ff9daacde57933f7c995b76 ([`pr/ipc-bind.3`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-bind.3) -> [`pr/ipc-bind.4`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-bind.4), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/ipc-bind.3-rebase..pr/ipc-bind.4)) with fix for new test that was failing when run in the multiprocess CI container https://github.com/bitcoin/bitcoin/pull/30509#issuecomment-2276739868",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30509#issuecomment-2278235877",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30509"
    },
    {
      "event": "commented",
      "id": 2284311578,
      "node_id": "IC_kwDOABII586IJ9Qa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2284311578",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-12T15:39:21Z",
      "updated_at": "2024-08-12T15:40:36Z",
      "author_association": "MEMBER",
      "body": "`<datadir>/node.sock` seems fine, although on macOS with the longest permitted username you would go over the limit: `/Users/willem-alexanderclausgeorgeferdinand-koning-der-nederlanden-jonkheer-van-amsberg-67/Library/Application\\ Support/Bitcoin/testnet4/bitcoin-node.sock`",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30509#issuecomment-2284311578",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30509"
    },
    {
      "event": "commented",
      "id": 2284394393,
      "node_id": "IC_kwDOABII586IKReZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2284394393",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-12T16:17:23Z",
      "updated_at": "2024-08-12T16:17:23Z",
      "author_association": "CONTRIBUTOR",
      "body": "> `<datadir>/node.sock` seems fine, although on macOS with the longest permitted username you would go over the limit: `/Users/willem-alexanderclausgeorgeferdinand-koning-der-nederlanden-jonkheer-van-amsberg-67/Library/Application\\ Support/Bitcoin/testnet4/bitcoin-node.sock`\r\n\r\nHa! It is pretty easy to go over the socket path limit on linux too since it is only something like 100 characters. I think it might actually be possible to work around this by forking the process, changing the working directory, opening the socket with a relative path, and then passing back a file descriptor the parent process, but not sure about that and hopefully it would not be necessary.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30509#issuecomment-2284394393",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30509"
    },
    {
      "event": "reviewed",
      "id": 2233467423,
      "node_id": "PRR_kwDOABII586FIAIf",
      "url": null,
      "actor": null,
      "commit_id": "4137419b0170fa1e9ff9daacde57933f7c995b76",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK 4137419b0170fa1e9ff9daacde57933f7c995b76\r\n\r\nI only lightly looked at the new `ProcessImpl` method bodies.\r\n\r\nI tested that I'm able to connect the bitcoin-mine demo #30437, but that (as expected) it immediately fails with a \"remote exception: Method not implemented\".",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30509#pullrequestreview-2233467423",
      "submitted_at": "2024-08-12T18:29:49Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30509"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13934266713,
      "node_id": "HRFPE_lADOABII586QkFEmzwAAAAM-jAlZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13934266713",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-19T18:28:00Z"
    },
    {
      "event": "reviewed",
      "id": 2245900280,
      "node_id": "PRR_kwDOABII586F3bf4",
      "url": null,
      "actor": null,
      "commit_id": "af24810eeed397c2fe5f61ef9769e1b7ee0ecdf9",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Updated 4137419b0170fa1e9ff9daacde57933f7c995b76 -> af24810eeed397c2fe5f61ef9769e1b7ee0ecdf9 ([`pr/ipc-bind.4`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-bind.4) -> [`pr/ipc-bind.5`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-bind.5), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/ipc-bind.4..pr/ipc-bind.5)) with suggested changes simplifying error handling and adding more tests.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30509#pullrequestreview-2245900280",
      "submitted_at": "2024-08-19T18:29:29Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30509"
    },
    {
      "event": "commented",
      "id": 2298367086,
      "node_id": "IC_kwDOABII586I_kxu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2298367086",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-20T09:11:19Z",
      "updated_at": "2024-08-20T09:11:19Z",
      "author_association": "MEMBER",
      "body": "re-ACK af24810eeed397c2fe5f61ef9769e1b7ee0ecdf9",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30509#issuecomment-2298367086",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30509"
    },
    {
      "event": "reviewed",
      "id": 2263113816,
      "node_id": "PRR_kwDOABII586G5GBY",
      "url": null,
      "actor": null,
      "commit_id": "af24810eeed397c2fe5f61ef9769e1b7ee0ecdf9",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK af24810eeed397c2fe5f61ef9769e1b7ee0ecdf9\r\n\r\nThis looks good to me. Thanks for following up on my earlier suggestions, I left a couple more. It would be nice to add some functional tests too, but that is easily done in a follow-up.",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30509#pullrequestreview-2263113816",
      "submitted_at": "2024-08-27T20:44:17Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30509"
    },
    {
      "event": "commented",
      "id": 2325355880,
      "node_id": "IC_kwDOABII586Kmh1o",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2325355880",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-02T22:43:49Z",
      "updated_at": "2024-09-02T22:43:49Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--cf906140f33d8803c4a75a2196329ecb-->\n🐙 This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30509#issuecomment-2325355880",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30509"
    },
    {
      "event": "labeled",
      "id": 14107543589,
      "node_id": "LE_lADOABII586QkFEmzwAAAANI4Agl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14107543589",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-02T22:43:49Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1706754253",
      "pull_request_review_id": 2223960433,
      "id": 1706754253,
      "node_id": "PRRC_kwDOABII585luwDN",
      "diff_hunk": "@@ -54,7 +60,100 @@ class ProcessImpl : public Process\n         }\n         return true;\n     }\n+    int connect(const fs::path& data_dir,\n+                const std::string& dest_exe_name,\n+                std::string& address,\n+                std::string& error) override;\n+    int bind(const fs::path& data_dir, const std::string& exe_name, std::string& address, std::string& error) override;\n };\n+\n+bool ParseAddress(std::string& address,",
      "path": "src/ipc/process.cpp",
      "position": null,
      "original_position": 41,
      "commit_id": "af24810eeed397c2fe5f61ef9769e1b7ee0ecdf9",
      "original_commit_id": "9debfa694d0687226e9a30c0e40614a0d0093e8c",
      "in_reply_to_id": null,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: Could be declared `static`?",
      "created_at": "2024-08-07T10:16:09Z",
      "updated_at": "2024-08-07T15:45:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30509#discussion_r1706754253",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1706754253"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 70,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1706885348",
      "pull_request_review_id": 2223960433,
      "id": 1706885348,
      "node_id": "PRRC_kwDOABII585lvQDk",
      "diff_hunk": "@@ -667,6 +668,9 @@ void SetupServerArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-rpcwhitelistdefault\", \"Sets default behavior for rpc whitelisting. Unless rpcwhitelistdefault is set to 0, if any -rpcwhitelist is set, the rpc server acts as if all rpc users are subject to empty-unless-otherwise-specified whitelists. If rpcwhitelistdefault is set to 1 and no -rpcwhitelist is set, rpc server acts as if all rpc users are subject to empty whitelists.\", ArgsManager::ALLOW_ANY, OptionsCategory::RPC);\n     argsman.AddArg(\"-rpcworkqueue=<n>\", strprintf(\"Set the depth of the work queue to service RPC calls (default: %d)\", DEFAULT_HTTP_WORKQUEUE), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::RPC);\n     argsman.AddArg(\"-server\", \"Accept command line and JSON-RPC commands\", ArgsManager::ALLOW_ANY, OptionsCategory::RPC);\n+    if (can_listen_ipc) {\n+        argsman.AddArg(\"-ipcbind=<address>\", \"Bind to Unix socket address and listen for incoming connections. Valid address values are \\\"unix\\\" to listen on the default path, <datadir>/node.sock, or \\\"unix:/custom/path\\\" to specify a custom path. Can be specified multiple times to listen on multiple paths. Default behavior is not to listen on any path.\", ArgsManager::ALLOW_ANY, OptionsCategory::IPC);",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "af24810eeed397c2fe5f61ef9769e1b7ee0ecdf9",
      "original_commit_id": "efdc120795e7c3ce914ee0677c3b69803ea5de1e",
      "in_reply_to_id": null,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If a relative path is provided, the path of the data directory is appended. If the parent directories in the provided path don't exist, they will be created. Should that be documented here?",
      "created_at": "2024-08-07T12:06:15Z",
      "updated_at": "2024-08-07T15:45:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30509#discussion_r1706885348",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1706885348"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 672,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1706927164",
      "pull_request_review_id": 2223960433,
      "id": 1706927164,
      "node_id": "PRRC_kwDOABII585lvaQ8",
      "diff_hunk": "@@ -54,7 +60,100 @@ class ProcessImpl : public Process\n         }\n         return true;\n     }\n+    int connect(const fs::path& data_dir,\n+                const std::string& dest_exe_name,\n+                std::string& address,\n+                std::string& error) override;\n+    int bind(const fs::path& data_dir, const std::string& exe_name, std::string& address, std::string& error) override;\n };\n+\n+bool ParseAddress(std::string& address,\n+                  const fs::path& data_dir,\n+                  const std::string& dest_exe_name,\n+                  struct sockaddr_un& addr,\n+                  std::string& error)\n+{\n+    if (address.compare(0, 4, \"unix\") == 0 && (address.size() == 4 || address[4] == ':')) {",
      "path": "src/ipc/process.cpp",
      "position": 46,
      "original_position": 47,
      "commit_id": "af24810eeed397c2fe5f61ef9769e1b7ee0ecdf9",
      "original_commit_id": "9debfa694d0687226e9a30c0e40614a0d0093e8c",
      "in_reply_to_id": null,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit (personal style opinion): I feel like this (and the other functions in this file) would be a bit easier to read if the error conditions would return early. Then all this logic would not have to be indented and the final return of the function would carry the \"good\" value.",
      "created_at": "2024-08-07T12:38:11Z",
      "updated_at": "2024-08-07T15:45:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30509#discussion_r1706927164",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1706927164"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 75,
      "original_line": 75,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707213519",
      "pull_request_review_id": 2223960433,
      "id": 1707213519,
      "node_id": "PRRC_kwDOABII585lwgLP",
      "diff_hunk": "@@ -35,6 +35,7 @@ class BitcoinGuiInit : public interfaces::Init\n     std::unique_ptr<interfaces::Echo> makeEcho() override { return interfaces::MakeEcho(); }\n     interfaces::Ipc* ipc() override { return m_ipc.get(); }\n     node::NodeContext m_node;\n+    bool canListenIpc() override { return true; }",
      "path": "src/init/bitcoin-gui.cpp",
      "position": 8,
      "original_position": 4,
      "commit_id": "af24810eeed397c2fe5f61ef9769e1b7ee0ecdf9",
      "original_commit_id": "efdc120795e7c3ce914ee0677c3b69803ea5de1e",
      "in_reply_to_id": null,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Just a question: Intuitively I was under the impression that only the node should be listening. In which scenario should the gui be able to listen as well? Do we need a bi-directional connection here for some callbacks?",
      "created_at": "2024-08-07T15:06:23Z",
      "updated_at": "2024-08-07T15:45:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30509#discussion_r1707213519",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707213519"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 41,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707288885",
      "pull_request_review_id": 2223960433,
      "id": 1707288885,
      "node_id": "PRRC_kwDOABII585lwyk1",
      "diff_hunk": "@@ -65,3 +91,53 @@ void IpcTest()\n     disconnect_client();\n     thread.join();\n }\n+\n+//! Test ipc::Protocol connect() and serve() methods connecting over a socketpair.\n+void IpcSocketPairTest()\n+{\n+    int fds[2];\n+    BOOST_CHECK_EQUAL(socketpair(AF_UNIX, SOCK_STREAM, 0, fds), 0);\n+    std::unique_ptr<interfaces::Init> init{std::make_unique<TestInit>()};\n+    std::unique_ptr<ipc::Protocol> protocol{ipc::capnp::MakeCapnpProtocol()};\n+    std::promise<void> promise;\n+    std::thread thread([&]() {\n+        protocol->serve(fds[0], \"test-serve\", *init, [&] { promise.set_value(); });\n+    });\n+    promise.get_future().wait();\n+    std::unique_ptr<interfaces::Init> remote_init{protocol->connect(fds[1], \"test-connect\")};\n+    std::unique_ptr<interfaces::Echo> remote_echo{remote_init->makeEcho()};\n+    BOOST_CHECK_EQUAL(remote_echo->echo(\"echo test\"), \"echo test\");\n+    remote_echo.reset();\n+    remote_init.reset();\n+    thread.join();\n+}\n+\n+//! Test ipc::Process bind() and connect() methods connecting over a unix socket.\n+void IpcSocketTest(const fs::path& datadir)\n+{\n+    // Need to specify a temporary socket address because default one leads to error:\n+    //   Address 'unix' path '\"/tmp/test_common_Bitcoin Core/ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff/test_bitcoin.sock\"' exceeded maximum socket path length\n+    const std::string bind_address{strprintf(\"unix:%s\", TempPath(\"bitcoin_sock_XXXXXX\"))};\n+    std::unique_ptr<interfaces::Init> init{std::make_unique<TestInit>()};\n+    std::unique_ptr<ipc::Protocol> protocol{ipc::capnp::MakeCapnpProtocol()};\n+    std::unique_ptr<ipc::Process> process{ipc::MakeProcess()};\n+    {",
      "path": "src/test/ipc_test.cpp",
      "position": null,
      "original_position": 96,
      "commit_id": "af24810eeed397c2fe5f61ef9769e1b7ee0ecdf9",
      "original_commit_id": "2dd88257ab5820c5aca6347392c21353b3417aa6",
      "in_reply_to_id": null,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Since multiple binds are supported, I would suggest to add a test case for binding and connecting on different addresses in the same process. ",
      "created_at": "2024-08-07T15:37:56Z",
      "updated_at": "2024-08-07T15:45:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30509#discussion_r1707288885",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707288885"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 124,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707289963",
      "pull_request_review_id": 2223960433,
      "id": 1707289963,
      "node_id": "PRRC_kwDOABII585lwy1r",
      "diff_hunk": "@@ -65,3 +91,53 @@ void IpcTest()\n     disconnect_client();\n     thread.join();\n }\n+\n+//! Test ipc::Protocol connect() and serve() methods connecting over a socketpair.\n+void IpcSocketPairTest()\n+{\n+    int fds[2];\n+    BOOST_CHECK_EQUAL(socketpair(AF_UNIX, SOCK_STREAM, 0, fds), 0);\n+    std::unique_ptr<interfaces::Init> init{std::make_unique<TestInit>()};\n+    std::unique_ptr<ipc::Protocol> protocol{ipc::capnp::MakeCapnpProtocol()};\n+    std::promise<void> promise;\n+    std::thread thread([&]() {\n+        protocol->serve(fds[0], \"test-serve\", *init, [&] { promise.set_value(); });\n+    });\n+    promise.get_future().wait();\n+    std::unique_ptr<interfaces::Init> remote_init{protocol->connect(fds[1], \"test-connect\")};\n+    std::unique_ptr<interfaces::Echo> remote_echo{remote_init->makeEcho()};\n+    BOOST_CHECK_EQUAL(remote_echo->echo(\"echo test\"), \"echo test\");\n+    remote_echo.reset();\n+    remote_init.reset();\n+    thread.join();\n+}\n+\n+//! Test ipc::Process bind() and connect() methods connecting over a unix socket.\n+void IpcSocketTest(const fs::path& datadir)\n+{\n+    // Need to specify a temporary socket address because default one leads to error:\n+    //   Address 'unix' path '\"/tmp/test_common_Bitcoin Core/ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff/test_bitcoin.sock\"' exceeded maximum socket path length\n+    const std::string bind_address{strprintf(\"unix:%s\", TempPath(\"bitcoin_sock_XXXXXX\"))};\n+    std::unique_ptr<interfaces::Init> init{std::make_unique<TestInit>()};\n+    std::unique_ptr<ipc::Protocol> protocol{ipc::capnp::MakeCapnpProtocol()};\n+    std::unique_ptr<ipc::Process> process{ipc::MakeProcess()};\n+    {\n+        std::string error;\n+        std::string address{bind_address};\n+        int serve_fd = process->bind(datadir, \"test_bitcoin\", address, error);\n+        BOOST_CHECK_GE(serve_fd, 0);\n+        BOOST_CHECK_EQUAL(address, bind_address);\n+        BOOST_CHECK_EQUAL(error, \"\");\n+        protocol->listen(serve_fd, \"test-serve\", *init);\n+    }\n+    std::string address{bind_address};\n+    std::string error;\n+    int connect_fd{process->connect(datadir, \"test_bitcoin\", address, error)};\n+    BOOST_CHECK_EQUAL(address, bind_address);\n+    BOOST_CHECK_EQUAL(error, \"\");\n+    std::unique_ptr<interfaces::Init> remote_init{protocol->connect(connect_fd, \"test-connect\")};\n+    std::unique_ptr<interfaces::Echo> remote_echo{remote_init->makeEcho()};\n+    BOOST_CHECK_EQUAL(remote_echo->echo(\"echo test\"), \"echo test\");\n+    remote_echo.reset();\n+    remote_init.reset();",
      "path": "src/test/ipc_test.cpp",
      "position": null,
      "original_position": 114,
      "commit_id": "af24810eeed397c2fe5f61ef9769e1b7ee0ecdf9",
      "original_commit_id": "2dd88257ab5820c5aca6347392c21353b3417aa6",
      "in_reply_to_id": null,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is there a reason for manually resetting these here? I guess in the other test resetting is required, because otherwise the thread will never join.",
      "created_at": "2024-08-07T15:38:25Z",
      "updated_at": "2024-08-07T15:45:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30509#discussion_r1707289963",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707289963"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 142,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707371794",
      "pull_request_review_id": 2225643495,
      "id": 1707371794,
      "node_id": "PRRC_kwDOABII585lxG0S",
      "diff_hunk": "@@ -667,6 +668,9 @@ void SetupServerArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-rpcwhitelistdefault\", \"Sets default behavior for rpc whitelisting. Unless rpcwhitelistdefault is set to 0, if any -rpcwhitelist is set, the rpc server acts as if all rpc users are subject to empty-unless-otherwise-specified whitelists. If rpcwhitelistdefault is set to 1 and no -rpcwhitelist is set, rpc server acts as if all rpc users are subject to empty whitelists.\", ArgsManager::ALLOW_ANY, OptionsCategory::RPC);\n     argsman.AddArg(\"-rpcworkqueue=<n>\", strprintf(\"Set the depth of the work queue to service RPC calls (default: %d)\", DEFAULT_HTTP_WORKQUEUE), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::RPC);\n     argsman.AddArg(\"-server\", \"Accept command line and JSON-RPC commands\", ArgsManager::ALLOW_ANY, OptionsCategory::RPC);\n+    if (can_listen_ipc) {\n+        argsman.AddArg(\"-ipcbind=<address>\", \"Bind to Unix socket address and listen for incoming connections. Valid address values are \\\"unix\\\" to listen on the default path, <datadir>/node.sock, or \\\"unix:/custom/path\\\" to specify a custom path. Can be specified multiple times to listen on multiple paths. Default behavior is not to listen on any path.\", ArgsManager::ALLOW_ANY, OptionsCategory::IPC);",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "af24810eeed397c2fe5f61ef9769e1b7ee0ecdf9",
      "original_commit_id": "efdc120795e7c3ce914ee0677c3b69803ea5de1e",
      "in_reply_to_id": 1706885348,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/30509#discussion_r1706754253\r\n\r\n> If a relative path is provided, the path of the data directory is appended. If the parent directories in the provided path don't exist, they will be created. Should that be documented here?\r\n\r\nSure added both things.",
      "created_at": "2024-08-07T16:16:34Z",
      "updated_at": "2024-08-07T17:26:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30509#discussion_r1707371794",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707371794"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 672,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707372017",
      "pull_request_review_id": 2225643495,
      "id": 1707372017,
      "node_id": "PRRC_kwDOABII585lxG3x",
      "diff_hunk": "@@ -35,6 +35,7 @@ class BitcoinGuiInit : public interfaces::Init\n     std::unique_ptr<interfaces::Echo> makeEcho() override { return interfaces::MakeEcho(); }\n     interfaces::Ipc* ipc() override { return m_ipc.get(); }\n     node::NodeContext m_node;\n+    bool canListenIpc() override { return true; }",
      "path": "src/init/bitcoin-gui.cpp",
      "position": 8,
      "original_position": 4,
      "commit_id": "af24810eeed397c2fe5f61ef9769e1b7ee0ecdf9",
      "original_commit_id": "efdc120795e7c3ce914ee0677c3b69803ea5de1e",
      "in_reply_to_id": 1707213519,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/30509#discussion_r1707213519\r\n\r\n> Just a question: Intuitively I was under the impression that only the node should be listening. In which scenario should the gui be able to listen as well? Do we need a bi-directional connection here for some callbacks?\r\n\r\nAdded comment. You are right that gui does not listen on a socket, but `bitcoin-gui` accepts all the same arguments `bitcoin-node` does and more. If `bitcoin-gui` is started and a node processs is not already running (see #19461), a node process started with the provided arguments, and that node process can listen on one more more unix sockets.",
      "created_at": "2024-08-07T16:16:41Z",
      "updated_at": "2024-08-07T17:26:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30509#discussion_r1707372017",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707372017"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 41,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707372358",
      "pull_request_review_id": 2225643495,
      "id": 1707372358,
      "node_id": "PRRC_kwDOABII585lxG9G",
      "diff_hunk": "@@ -54,7 +60,100 @@ class ProcessImpl : public Process\n         }\n         return true;\n     }\n+    int connect(const fs::path& data_dir,\n+                const std::string& dest_exe_name,\n+                std::string& address,\n+                std::string& error) override;\n+    int bind(const fs::path& data_dir, const std::string& exe_name, std::string& address, std::string& error) override;\n };\n+\n+bool ParseAddress(std::string& address,",
      "path": "src/ipc/process.cpp",
      "position": null,
      "original_position": 41,
      "commit_id": "af24810eeed397c2fe5f61ef9769e1b7ee0ecdf9",
      "original_commit_id": "9debfa694d0687226e9a30c0e40614a0d0093e8c",
      "in_reply_to_id": 1706754253,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/30509#discussion_r1706754253\r\n\r\n> Nit: Could be declared `static`?\r\n\r\nSure, added static",
      "created_at": "2024-08-07T16:16:51Z",
      "updated_at": "2024-08-07T17:26:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30509#discussion_r1707372358",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707372358"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 70,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707372573",
      "pull_request_review_id": 2225643495,
      "id": 1707372573,
      "node_id": "PRRC_kwDOABII585lxHAd",
      "diff_hunk": "@@ -54,7 +60,100 @@ class ProcessImpl : public Process\n         }\n         return true;\n     }\n+    int connect(const fs::path& data_dir,\n+                const std::string& dest_exe_name,\n+                std::string& address,\n+                std::string& error) override;\n+    int bind(const fs::path& data_dir, const std::string& exe_name, std::string& address, std::string& error) override;\n };\n+\n+bool ParseAddress(std::string& address,\n+                  const fs::path& data_dir,\n+                  const std::string& dest_exe_name,\n+                  struct sockaddr_un& addr,\n+                  std::string& error)\n+{\n+    if (address.compare(0, 4, \"unix\") == 0 && (address.size() == 4 || address[4] == ':')) {",
      "path": "src/ipc/process.cpp",
      "position": 46,
      "original_position": 47,
      "commit_id": "af24810eeed397c2fe5f61ef9769e1b7ee0ecdf9",
      "original_commit_id": "9debfa694d0687226e9a30c0e40614a0d0093e8c",
      "in_reply_to_id": 1706927164,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/30509#discussion_r1706927164\r\n\r\n> Nit (personal style opinion): I feel like this (and the other functions in this file) would be a bit easier to read if the error conditions would return early. Then all this logic would not have to be indented and the final return of the function would carry the \"good\" value.\r\n\r\nI could be missing something, but I think all the functions in this file are returning or throwing as soon as there is an error.\r\n\r\nIn this case it should not be an error if the address type isn't unix. The idea is for this to support multiple address types and look like\r\n\r\n```c++\r\nif (address type is \"unix\") {\r\n   // parse unix socket path\r\n   return true;\r\n} else if (address type is \"tcp\") {\r\n   // parse tcp address\r\n   return true;\r\n} else if (address type is \"ntpipe\") {\r\n   // parse windows named pipe path\r\n   return true;\r\n} else if (address type is \"fd\") {\r\n   // parse file descriptor number\r\n   return true;\r\n}\r\nerror = \"unrecognized address type\"\r\nreturn false;\r\n```",
      "created_at": "2024-08-07T16:16:58Z",
      "updated_at": "2024-08-07T17:26:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30509#discussion_r1707372573",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707372573"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 75,
      "original_line": 75,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707373325",
      "pull_request_review_id": 2225643495,
      "id": 1707373325,
      "node_id": "PRRC_kwDOABII585lxHMN",
      "diff_hunk": "@@ -65,3 +91,53 @@ void IpcTest()\n     disconnect_client();\n     thread.join();\n }\n+\n+//! Test ipc::Protocol connect() and serve() methods connecting over a socketpair.\n+void IpcSocketPairTest()\n+{\n+    int fds[2];\n+    BOOST_CHECK_EQUAL(socketpair(AF_UNIX, SOCK_STREAM, 0, fds), 0);\n+    std::unique_ptr<interfaces::Init> init{std::make_unique<TestInit>()};\n+    std::unique_ptr<ipc::Protocol> protocol{ipc::capnp::MakeCapnpProtocol()};\n+    std::promise<void> promise;\n+    std::thread thread([&]() {\n+        protocol->serve(fds[0], \"test-serve\", *init, [&] { promise.set_value(); });\n+    });\n+    promise.get_future().wait();\n+    std::unique_ptr<interfaces::Init> remote_init{protocol->connect(fds[1], \"test-connect\")};\n+    std::unique_ptr<interfaces::Echo> remote_echo{remote_init->makeEcho()};\n+    BOOST_CHECK_EQUAL(remote_echo->echo(\"echo test\"), \"echo test\");\n+    remote_echo.reset();\n+    remote_init.reset();\n+    thread.join();\n+}\n+\n+//! Test ipc::Process bind() and connect() methods connecting over a unix socket.\n+void IpcSocketTest(const fs::path& datadir)\n+{\n+    // Need to specify a temporary socket address because default one leads to error:\n+    //   Address 'unix' path '\"/tmp/test_common_Bitcoin Core/ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff/test_bitcoin.sock\"' exceeded maximum socket path length\n+    const std::string bind_address{strprintf(\"unix:%s\", TempPath(\"bitcoin_sock_XXXXXX\"))};\n+    std::unique_ptr<interfaces::Init> init{std::make_unique<TestInit>()};\n+    std::unique_ptr<ipc::Protocol> protocol{ipc::capnp::MakeCapnpProtocol()};\n+    std::unique_ptr<ipc::Process> process{ipc::MakeProcess()};\n+    {",
      "path": "src/test/ipc_test.cpp",
      "position": null,
      "original_position": 96,
      "commit_id": "af24810eeed397c2fe5f61ef9769e1b7ee0ecdf9",
      "original_commit_id": "2dd88257ab5820c5aca6347392c21353b3417aa6",
      "in_reply_to_id": 1707288885,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/30509#discussion_r1707288885\r\n\r\n> Since multiple binds are supported, I would suggest to add a test case for binding and connecting on different addresses in the same process.\r\n\r\nThanks, added",
      "created_at": "2024-08-07T16:17:23Z",
      "updated_at": "2024-08-07T17:26:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30509#discussion_r1707373325",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707373325"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 124,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707373805",
      "pull_request_review_id": 2225643495,
      "id": 1707373805,
      "node_id": "PRRC_kwDOABII585lxHTt",
      "diff_hunk": "@@ -65,3 +91,53 @@ void IpcTest()\n     disconnect_client();\n     thread.join();\n }\n+\n+//! Test ipc::Protocol connect() and serve() methods connecting over a socketpair.\n+void IpcSocketPairTest()\n+{\n+    int fds[2];\n+    BOOST_CHECK_EQUAL(socketpair(AF_UNIX, SOCK_STREAM, 0, fds), 0);\n+    std::unique_ptr<interfaces::Init> init{std::make_unique<TestInit>()};\n+    std::unique_ptr<ipc::Protocol> protocol{ipc::capnp::MakeCapnpProtocol()};\n+    std::promise<void> promise;\n+    std::thread thread([&]() {\n+        protocol->serve(fds[0], \"test-serve\", *init, [&] { promise.set_value(); });\n+    });\n+    promise.get_future().wait();\n+    std::unique_ptr<interfaces::Init> remote_init{protocol->connect(fds[1], \"test-connect\")};\n+    std::unique_ptr<interfaces::Echo> remote_echo{remote_init->makeEcho()};\n+    BOOST_CHECK_EQUAL(remote_echo->echo(\"echo test\"), \"echo test\");\n+    remote_echo.reset();\n+    remote_init.reset();\n+    thread.join();\n+}\n+\n+//! Test ipc::Process bind() and connect() methods connecting over a unix socket.\n+void IpcSocketTest(const fs::path& datadir)\n+{\n+    // Need to specify a temporary socket address because default one leads to error:\n+    //   Address 'unix' path '\"/tmp/test_common_Bitcoin Core/ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff/test_bitcoin.sock\"' exceeded maximum socket path length\n+    const std::string bind_address{strprintf(\"unix:%s\", TempPath(\"bitcoin_sock_XXXXXX\"))};\n+    std::unique_ptr<interfaces::Init> init{std::make_unique<TestInit>()};\n+    std::unique_ptr<ipc::Protocol> protocol{ipc::capnp::MakeCapnpProtocol()};\n+    std::unique_ptr<ipc::Process> process{ipc::MakeProcess()};\n+    {\n+        std::string error;\n+        std::string address{bind_address};\n+        int serve_fd = process->bind(datadir, \"test_bitcoin\", address, error);\n+        BOOST_CHECK_GE(serve_fd, 0);\n+        BOOST_CHECK_EQUAL(address, bind_address);\n+        BOOST_CHECK_EQUAL(error, \"\");\n+        protocol->listen(serve_fd, \"test-serve\", *init);\n+    }\n+    std::string address{bind_address};\n+    std::string error;\n+    int connect_fd{process->connect(datadir, \"test_bitcoin\", address, error)};\n+    BOOST_CHECK_EQUAL(address, bind_address);\n+    BOOST_CHECK_EQUAL(error, \"\");\n+    std::unique_ptr<interfaces::Init> remote_init{protocol->connect(connect_fd, \"test-connect\")};\n+    std::unique_ptr<interfaces::Echo> remote_echo{remote_init->makeEcho()};\n+    BOOST_CHECK_EQUAL(remote_echo->echo(\"echo test\"), \"echo test\");\n+    remote_echo.reset();\n+    remote_init.reset();",
      "path": "src/test/ipc_test.cpp",
      "position": null,
      "original_position": 114,
      "commit_id": "af24810eeed397c2fe5f61ef9769e1b7ee0ecdf9",
      "original_commit_id": "2dd88257ab5820c5aca6347392c21353b3417aa6",
      "in_reply_to_id": 1707289963,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/30509#discussion_r1707289963\r\n\r\n> Is there a reason for manually resetting these here? I guess in the other test resetting is required, because otherwise the thread will never join.\r\n\r\nNice catch, these are not needed. An initial version of this test did use a thread but it's gone and these are no longer necessary.",
      "created_at": "2024-08-07T16:17:39Z",
      "updated_at": "2024-08-07T17:26:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30509#discussion_r1707373805",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707373805"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 142,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707536386",
      "pull_request_review_id": 2225809704,
      "id": 1707536386,
      "node_id": "PRRC_kwDOABII585lxvAC",
      "diff_hunk": "@@ -667,6 +668,9 @@ void SetupServerArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-rpcwhitelistdefault\", \"Sets default behavior for rpc whitelisting. Unless rpcwhitelistdefault is set to 0, if any -rpcwhitelist is set, the rpc server acts as if all rpc users are subject to empty-unless-otherwise-specified whitelists. If rpcwhitelistdefault is set to 1 and no -rpcwhitelist is set, rpc server acts as if all rpc users are subject to empty whitelists.\", ArgsManager::ALLOW_ANY, OptionsCategory::RPC);\n     argsman.AddArg(\"-rpcworkqueue=<n>\", strprintf(\"Set the depth of the work queue to service RPC calls (default: %d)\", DEFAULT_HTTP_WORKQUEUE), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::RPC);\n     argsman.AddArg(\"-server\", \"Accept command line and JSON-RPC commands\", ArgsManager::ALLOW_ANY, OptionsCategory::RPC);\n+    if (can_listen_ipc) {\n+        argsman.AddArg(\"-ipcbind=<address>\", \"Bind to Unix socket address and listen for incoming connections. Valid address values are \\\"unix\\\" to listen on the default path, <datadir>/node.sock, or \\\"unix:/custom/path\\\" to specify a custom path. Can be specified multiple times to listen on multiple paths. Default behavior is not to listen on any path. If a relative paths are specified, they are interpreted relative to the network data directory. If paths include any parent directory components and the parent directories do not exist, they will be created.\", ArgsManager::ALLOW_ANY, OptionsCategory::IPC);",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "af24810eeed397c2fe5f61ef9769e1b7ee0ecdf9",
      "original_commit_id": "cf9aaf4b7f27b38bf201aa39c56c9967f3b2a904",
      "in_reply_to_id": null,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Typo nit: s/if a relative paths are/if relative paths/",
      "created_at": "2024-08-07T17:38:48Z",
      "updated_at": "2024-08-07T17:39:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30509#discussion_r1707536386",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707536386"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 681,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707538495",
      "pull_request_review_id": 2225809704,
      "id": 1707538495,
      "node_id": "PRRC_kwDOABII585lxvg_",
      "diff_hunk": "@@ -54,7 +60,100 @@ class ProcessImpl : public Process\n         }\n         return true;\n     }\n+    int connect(const fs::path& data_dir,\n+                const std::string& dest_exe_name,\n+                std::string& address,\n+                std::string& error) override;\n+    int bind(const fs::path& data_dir, const std::string& exe_name, std::string& address, std::string& error) override;\n };\n+\n+bool ParseAddress(std::string& address,\n+                  const fs::path& data_dir,\n+                  const std::string& dest_exe_name,\n+                  struct sockaddr_un& addr,\n+                  std::string& error)\n+{\n+    if (address.compare(0, 4, \"unix\") == 0 && (address.size() == 4 || address[4] == ':')) {",
      "path": "src/ipc/process.cpp",
      "position": 46,
      "original_position": 47,
      "commit_id": "af24810eeed397c2fe5f61ef9769e1b7ee0ecdf9",
      "original_commit_id": "9debfa694d0687226e9a30c0e40614a0d0093e8c",
      "in_reply_to_id": 1706927164,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah, that makes sense, I did not think about this function being expanded over time.",
      "created_at": "2024-08-07T17:39:43Z",
      "updated_at": "2024-08-07T17:39:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30509#discussion_r1707538495",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1707538495"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 75,
      "original_line": 75,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1714041612",
      "pull_request_review_id": 2233467423,
      "id": 1714041612,
      "node_id": "PRRC_kwDOABII585mKjMM",
      "diff_hunk": "@@ -1,8 +1,8 @@\n package=native_libmultiprocess\n-$(package)_version=6aca5f389bacf2942394b8738bbe15d6c9edfb9b\n+$(package)_version=c1b4ab4eb897d3af09bc9b3cc30e2e6fff87f3e2",
      "path": "depends/packages/native_libmultiprocess.mk",
      "position": 3,
      "original_position": 3,
      "commit_id": "af24810eeed397c2fe5f61ef9769e1b7ee0ecdf9",
      "original_commit_id": "ef57db8711c7fafb6c4f09b880fd4263bc6dc9dd",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "ef57db8711c7fafb6c4f09b880fd4263bc6dc9dd: I also tested building this outside depends on macOS 14.6.1",
      "created_at": "2024-08-12T15:58:54Z",
      "updated_at": "2024-08-12T18:29:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30509#discussion_r1714041612",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1714041612"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2,
      "original_line": 2,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1714085148",
      "pull_request_review_id": 2233467423,
      "id": 1714085148,
      "node_id": "PRRC_kwDOABII585mKt0c",
      "diff_hunk": "@@ -35,6 +35,7 @@ class BitcoinGuiInit : public interfaces::Init\n     std::unique_ptr<interfaces::Echo> makeEcho() override { return interfaces::MakeEcho(); }\n     interfaces::Ipc* ipc() override { return m_ipc.get(); }\n     node::NodeContext m_node;\n+    bool canListenIpc() override { return true; }",
      "path": "src/init/bitcoin-gui.cpp",
      "position": 8,
      "original_position": 4,
      "commit_id": "af24810eeed397c2fe5f61ef9769e1b7ee0ecdf9",
      "original_commit_id": "efdc120795e7c3ce914ee0677c3b69803ea5de1e",
      "in_reply_to_id": 1707213519,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "4137419b0170fa1e9ff9daacde57933f7c995b76: In the mean time this has the nice side-effect of being able to run `src/bitcoin-gui -ipcbind=unix` (instead of `bitcoin-node`) and then connect to it with e.g. the miner demo `-ipcconnect=unix:gui.sock`.\r\n\r\nSee https://github.com/bitcoin/bitcoin/pull/30437#issuecomment-2226847354",
      "created_at": "2024-08-12T16:34:20Z",
      "updated_at": "2024-08-12T18:29:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30509#discussion_r1714085148",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1714085148"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 41,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1714091657",
      "pull_request_review_id": 2233467423,
      "id": 1714091657,
      "node_id": "PRRC_kwDOABII585mKvaJ",
      "diff_hunk": "@@ -1200,6 +1204,16 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n     g_wallet_init_interface.Construct(node);\n     uiInterface.InitWallet();\n \n+    if (interfaces::Ipc* ipc = node.init->ipc()) {\n+        for (std::string address : gArgs.GetArgs(\"-ipcbind\")) {\n+            std::string error;\n+            if (!ipc->listenAddress(address, error)) {\n+                return InitError(strprintf(Untranslated(\"Unable to bind to IPC address '%s'. %s\"), address, error));",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 35,
      "commit_id": "af24810eeed397c2fe5f61ef9769e1b7ee0ecdf9",
      "original_commit_id": "4137419b0170fa1e9ff9daacde57933f7c995b76",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "4137419b0170fa1e9ff9daacde57933f7c995b76: I have a hard hitting this, instead I tend to get a crash (on intel macOS):\r\n\r\nFor an existing path:\r\n\r\n```\r\n -ipcbind=unix://tmp\r\n...\r\n************************\r\nEXCEPTION: NSt3__112system_errorE       \r\nAddress already in use       \r\nbitcoin in AppInit()\r\n```\r\n\r\nNon-existing path that I don't have permission for:\r\n\r\n```\r\n-ipcbind=unix://root\r\n...\r\n************************\r\nEXCEPTION: NSt3__112system_errorE       \r\nRead-only file system       \r\nbitcoin in AppInit()      \r\n```",
      "created_at": "2024-08-12T16:40:17Z",
      "updated_at": "2024-08-12T18:29:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30509#discussion_r1714091657",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1714091657"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1211,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1714153255",
      "pull_request_review_id": 2233467423,
      "id": 1714153255,
      "node_id": "PRRC_kwDOABII585mK-cn",
      "diff_hunk": "@@ -65,3 +91,71 @@ void IpcTest()\n     disconnect_client();\n     thread.join();\n }\n+\n+//! Test ipc::Protocol connect() and serve() methods connecting over a socketpair.\n+void IpcSocketPairTest()\n+{\n+    int fds[2];\n+    BOOST_CHECK_EQUAL(socketpair(AF_UNIX, SOCK_STREAM, 0, fds), 0);",
      "path": "src/test/ipc_test.cpp",
      "position": 71,
      "original_position": 71,
      "commit_id": "af24810eeed397c2fe5f61ef9769e1b7ee0ecdf9",
      "original_commit_id": "a8d4adfea4b50f452d80bc1e7ee322945d886c78",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "a8d4adfea4b50f452d80bc1e7ee322945d886c78: @vasild's #30205 is potentially useful here. Though as long as the test is not brittle, there's no need to wait for that PR to be merged. ",
      "created_at": "2024-08-12T17:33:43Z",
      "updated_at": "2024-08-12T18:29:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30509#discussion_r1714153255",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1714153255"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 99,
      "original_line": 99,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1714185762",
      "pull_request_review_id": 2233467423,
      "id": 1714185762,
      "node_id": "PRRC_kwDOABII585mLGYi",
      "diff_hunk": "@@ -65,3 +91,71 @@ void IpcTest()\n     disconnect_client();\n     thread.join();\n }\n+\n+//! Test ipc::Protocol connect() and serve() methods connecting over a socketpair.\n+void IpcSocketPairTest()\n+{\n+    int fds[2];\n+    BOOST_CHECK_EQUAL(socketpair(AF_UNIX, SOCK_STREAM, 0, fds), 0);\n+    std::unique_ptr<interfaces::Init> init{std::make_unique<TestInit>()};\n+    std::unique_ptr<ipc::Protocol> protocol{ipc::capnp::MakeCapnpProtocol()};\n+    std::promise<void> promise;\n+    std::thread thread([&]() {\n+        protocol->serve(fds[0], \"test-serve\", *init, [&] { promise.set_value(); });\n+    });\n+    promise.get_future().wait();\n+    std::unique_ptr<interfaces::Init> remote_init{protocol->connect(fds[1], \"test-connect\")};\n+    std::unique_ptr<interfaces::Echo> remote_echo{remote_init->makeEcho()};\n+    BOOST_CHECK_EQUAL(remote_echo->echo(\"echo test\"), \"echo test\");\n+    remote_echo.reset();\n+    remote_init.reset();\n+    thread.join();\n+}\n+\n+//! Test ipc::Process bind() and connect() methods connecting over a unix socket.\n+void IpcSocketTest(const fs::path& datadir)\n+{\n+    std::unique_ptr<interfaces::Init> init{std::make_unique<TestInit>()};\n+    std::unique_ptr<ipc::Protocol> protocol{ipc::capnp::MakeCapnpProtocol()};\n+    std::unique_ptr<ipc::Process> process{ipc::MakeProcess()};\n+\n+    auto bind_and_listen{[&](const std::string& bind_address) {\n+        std::string error;\n+        std::string address{bind_address};\n+        int serve_fd = process->bind(datadir, \"test_bitcoin\", address, error);\n+        BOOST_CHECK_GE(serve_fd, 0);\n+        BOOST_CHECK_EQUAL(address, bind_address);\n+        BOOST_CHECK_EQUAL(error, \"\");\n+        protocol->listen(serve_fd, \"test-serve\", *init);\n+    }};\n+\n+    auto connect_and_test{[&](const std::string& connect_address) {\n+        std::string error;\n+        std::string address{connect_address};\n+        int connect_fd{process->connect(datadir, \"test_bitcoin\", address, error)};\n+        BOOST_CHECK_EQUAL(address, connect_address);\n+        BOOST_CHECK_EQUAL(error, \"\");\n+        std::unique_ptr<interfaces::Init> remote_init{protocol->connect(connect_fd, \"test-connect\")};\n+        std::unique_ptr<interfaces::Echo> remote_echo{remote_init->makeEcho()};\n+        BOOST_CHECK_EQUAL(remote_echo->echo(\"echo test\"), \"echo test\");\n+    }};\n+\n+    // Need to specify explicit socket addresses outside the data directory, because the data\n+    // directory path is so long that the default socket address and any other\n+    // addresses in the data directory would fail with errors like:\n+    //   Address 'unix' path '\"/tmp/test_common_Bitcoin Core/ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff/test_bitcoin.sock\"' exceeded maximum socket path length\n+    std::vector<std::string> addresses{\n+       strprintf(\"unix:%s\", TempPath(\"bitcoin_sock0_XXXXXX\")),\n+       strprintf(\"unix:%s\", TempPath(\"bitcoin_sock1_XXXXXX\")),\n+    };\n+\n+    // Bind and listen on multiple addresses\n+    for (const auto& address : addresses) {\n+        bind_and_listen(address);\n+    }\n+\n+    // Connect and test each address",
      "path": "src/test/ipc_test.cpp",
      "position": null,
      "original_position": 129,
      "commit_id": "af24810eeed397c2fe5f61ef9769e1b7ee0ecdf9",
      "original_commit_id": "a8d4adfea4b50f452d80bc1e7ee322945d886c78",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "a8d4adfea4b50f452d80bc1e7ee322945d886c78: maybe test what happens when there's a second connection attempt to the same address.",
      "created_at": "2024-08-12T18:04:08Z",
      "updated_at": "2024-08-12T18:29:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30509#discussion_r1714185762",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1714185762"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 157,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1714199889",
      "pull_request_review_id": 2233467423,
      "id": 1714199889,
      "node_id": "PRRC_kwDOABII585mLJ1R",
      "diff_hunk": "@@ -51,6 +53,14 @@ class CapnpProtocol : public Protocol\n         startLoop(exe_name);\n         return mp::ConnectStream<messages::Init>(*m_loop, fd);\n     }\n+    void listen(int listen_fd, const char* exe_name, interfaces::Init& init) override\n+    {\n+        startLoop(exe_name);\n+        if (::listen(listen_fd, 5 /* backlog */) != 0) {",
      "path": "src/ipc/capnp/protocol.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "af24810eeed397c2fe5f61ef9769e1b7ee0ecdf9",
      "original_commit_id": "52917ad4be1ca574543e854fdc154e88d65ce57f",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "52917ad4be1ca574543e854fdc154e88d65ce57f: nit `/*backlog=*/5`",
      "created_at": "2024-08-12T18:18:05Z",
      "updated_at": "2024-08-12T18:29:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30509#discussion_r1714199889",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1714199889"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 59,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1714205805",
      "pull_request_review_id": 2233467423,
      "id": 1714205805,
      "node_id": "PRRC_kwDOABII585mLLRt",
      "diff_hunk": "@@ -54,7 +60,100 @@ class ProcessImpl : public Process\n         }\n         return true;\n     }\n+    int connect(const fs::path& data_dir,\n+                const std::string& dest_exe_name,\n+                std::string& address,\n+                std::string& error) override;\n+    int bind(const fs::path& data_dir, const std::string& exe_name, std::string& address, std::string& error) override;\n };\n+\n+static bool ParseAddress(std::string& address,",
      "path": "src/ipc/process.cpp",
      "position": 40,
      "original_position": 41,
      "commit_id": "af24810eeed397c2fe5f61ef9769e1b7ee0ecdf9",
      "original_commit_id": "52917ad4be1ca574543e854fdc154e88d65ce57f",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "52917ad4be1ca574543e854fdc154e88d65ce57f: this could use a test.\r\n\r\nOr maybe we can introduce something akin to `CNetAddr` for socket addresses? Fortunately this input can only be provided by the user, so we don't have to be overzealous about sanitising.",
      "created_at": "2024-08-12T18:24:01Z",
      "updated_at": "2024-08-12T18:29:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30509#discussion_r1714205805",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1714205805"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 69,
      "original_line": 69,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1722004255",
      "pull_request_review_id": 2245900280,
      "id": 1722004255,
      "node_id": "PRRC_kwDOABII585mo7Mf",
      "diff_hunk": "@@ -667,6 +668,9 @@ void SetupServerArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-rpcwhitelistdefault\", \"Sets default behavior for rpc whitelisting. Unless rpcwhitelistdefault is set to 0, if any -rpcwhitelist is set, the rpc server acts as if all rpc users are subject to empty-unless-otherwise-specified whitelists. If rpcwhitelistdefault is set to 1 and no -rpcwhitelist is set, rpc server acts as if all rpc users are subject to empty whitelists.\", ArgsManager::ALLOW_ANY, OptionsCategory::RPC);\n     argsman.AddArg(\"-rpcworkqueue=<n>\", strprintf(\"Set the depth of the work queue to service RPC calls (default: %d)\", DEFAULT_HTTP_WORKQUEUE), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::RPC);\n     argsman.AddArg(\"-server\", \"Accept command line and JSON-RPC commands\", ArgsManager::ALLOW_ANY, OptionsCategory::RPC);\n+    if (can_listen_ipc) {\n+        argsman.AddArg(\"-ipcbind=<address>\", \"Bind to Unix socket address and listen for incoming connections. Valid address values are \\\"unix\\\" to listen on the default path, <datadir>/node.sock, or \\\"unix:/custom/path\\\" to specify a custom path. Can be specified multiple times to listen on multiple paths. Default behavior is not to listen on any path. If a relative paths are specified, they are interpreted relative to the network data directory. If paths include any parent directory components and the parent directories do not exist, they will be created.\", ArgsManager::ALLOW_ANY, OptionsCategory::IPC);",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "af24810eeed397c2fe5f61ef9769e1b7ee0ecdf9",
      "original_commit_id": "cf9aaf4b7f27b38bf201aa39c56c9967f3b2a904",
      "in_reply_to_id": 1707536386,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/30509#discussion_r1707536386\r\n\r\n> Typo nit: s/if a relative paths are/if relative paths/\r\n\r\nThanks, fixed!",
      "created_at": "2024-08-19T15:44:32Z",
      "updated_at": "2024-08-19T18:29:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30509#discussion_r1722004255",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1722004255"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 681,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1722004442",
      "pull_request_review_id": 2245900280,
      "id": 1722004442,
      "node_id": "PRRC_kwDOABII585mo7Pa",
      "diff_hunk": "@@ -1200,6 +1204,16 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n     g_wallet_init_interface.Construct(node);\n     uiInterface.InitWallet();\n \n+    if (interfaces::Ipc* ipc = node.init->ipc()) {\n+        for (std::string address : gArgs.GetArgs(\"-ipcbind\")) {\n+            std::string error;\n+            if (!ipc->listenAddress(address, error)) {\n+                return InitError(strprintf(Untranslated(\"Unable to bind to IPC address '%s'. %s\"), address, error));",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 35,
      "commit_id": "af24810eeed397c2fe5f61ef9769e1b7ee0ecdf9",
      "original_commit_id": "4137419b0170fa1e9ff9daacde57933f7c995b76",
      "in_reply_to_id": 1714091657,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/30509#discussion_r1714091657\r\n\r\n> [4137419](https://github.com/bitcoin/bitcoin/commit/4137419b0170fa1e9ff9daacde57933f7c995b76): I have a hard hitting this, instead I tend to get a crash (on intel macOS):\r\n\r\nNice catch, thanks for testing this. The error should be handled cleanly now instead of crashing. The connect and listen code was trying to make it easier to distinguish between different types of errors like connections that failed because nothing was listening vs connections that failed for other reasons, but the approach didn't really make sense. Error handling should be simpler and more reliable now.",
      "created_at": "2024-08-19T15:44:40Z",
      "updated_at": "2024-08-19T18:29:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30509#discussion_r1722004442",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1722004442"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1211,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1722004651",
      "pull_request_review_id": 2245900280,
      "id": 1722004651,
      "node_id": "PRRC_kwDOABII585mo7Sr",
      "diff_hunk": "@@ -51,6 +53,14 @@ class CapnpProtocol : public Protocol\n         startLoop(exe_name);\n         return mp::ConnectStream<messages::Init>(*m_loop, fd);\n     }\n+    void listen(int listen_fd, const char* exe_name, interfaces::Init& init) override\n+    {\n+        startLoop(exe_name);\n+        if (::listen(listen_fd, 5 /* backlog */) != 0) {",
      "path": "src/ipc/capnp/protocol.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "af24810eeed397c2fe5f61ef9769e1b7ee0ecdf9",
      "original_commit_id": "52917ad4be1ca574543e854fdc154e88d65ce57f",
      "in_reply_to_id": 1714199889,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/30509#discussion_r1714199889\r\n\r\n> [52917ad](https://github.com/bitcoin/bitcoin/commit/52917ad4be1ca574543e854fdc154e88d65ce57f): nit `/*backlog=*/5`\r\n\r\nThanks, fixed",
      "created_at": "2024-08-19T15:44:48Z",
      "updated_at": "2024-08-19T18:29:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30509#discussion_r1722004651",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1722004651"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 59,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1722004854",
      "pull_request_review_id": 2245900280,
      "id": 1722004854,
      "node_id": "PRRC_kwDOABII585mo7V2",
      "diff_hunk": "@@ -54,7 +60,100 @@ class ProcessImpl : public Process\n         }\n         return true;\n     }\n+    int connect(const fs::path& data_dir,\n+                const std::string& dest_exe_name,\n+                std::string& address,\n+                std::string& error) override;\n+    int bind(const fs::path& data_dir, const std::string& exe_name, std::string& address, std::string& error) override;\n };\n+\n+static bool ParseAddress(std::string& address,",
      "path": "src/ipc/process.cpp",
      "position": 40,
      "original_position": 41,
      "commit_id": "af24810eeed397c2fe5f61ef9769e1b7ee0ecdf9",
      "original_commit_id": "52917ad4be1ca574543e854fdc154e88d65ce57f",
      "in_reply_to_id": 1714205805,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/30509#discussion_r1714205805\r\n\r\nAdded a new `parse_address_test` to give this function good test coverage. I think adding a new address data type could make sense in the future if more functions use addresses, but for now only connect and listen functions use them, so adding an intermediate type now doesn't seem as simple as just passing address strings.",
      "created_at": "2024-08-19T15:44:56Z",
      "updated_at": "2024-08-19T18:29:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30509#discussion_r1722004854",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1722004854"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 69,
      "original_line": 69,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1722005240",
      "pull_request_review_id": 2245900280,
      "id": 1722005240,
      "node_id": "PRRC_kwDOABII585mo7b4",
      "diff_hunk": "@@ -65,3 +91,71 @@ void IpcTest()\n     disconnect_client();\n     thread.join();\n }\n+\n+//! Test ipc::Protocol connect() and serve() methods connecting over a socketpair.\n+void IpcSocketPairTest()\n+{\n+    int fds[2];\n+    BOOST_CHECK_EQUAL(socketpair(AF_UNIX, SOCK_STREAM, 0, fds), 0);",
      "path": "src/test/ipc_test.cpp",
      "position": 71,
      "original_position": 71,
      "commit_id": "af24810eeed397c2fe5f61ef9769e1b7ee0ecdf9",
      "original_commit_id": "a8d4adfea4b50f452d80bc1e7ee322945d886c78",
      "in_reply_to_id": 1714153255,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/30509#discussion_r1714153255\r\n\r\n> [a8d4adf](https://github.com/bitcoin/bitcoin/commit/a8d4adfea4b50f452d80bc1e7ee322945d886c78): @vasild's #30205 is potentially useful here. Though as long as the test is not brittle, there's no need to wait for that PR to be merged.\r\n\r\nAgree it could be useful to test what happens when invalid data is sent or received on the socket. All the current tests are using real sockets and sending and receiving valid data.",
      "created_at": "2024-08-19T15:45:13Z",
      "updated_at": "2024-08-19T18:29:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30509#discussion_r1722005240",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1722005240"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 99,
      "original_line": 99,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1722005468",
      "pull_request_review_id": 2245900280,
      "id": 1722005468,
      "node_id": "PRRC_kwDOABII585mo7fc",
      "diff_hunk": "@@ -65,3 +91,71 @@ void IpcTest()\n     disconnect_client();\n     thread.join();\n }\n+\n+//! Test ipc::Protocol connect() and serve() methods connecting over a socketpair.\n+void IpcSocketPairTest()\n+{\n+    int fds[2];\n+    BOOST_CHECK_EQUAL(socketpair(AF_UNIX, SOCK_STREAM, 0, fds), 0);\n+    std::unique_ptr<interfaces::Init> init{std::make_unique<TestInit>()};\n+    std::unique_ptr<ipc::Protocol> protocol{ipc::capnp::MakeCapnpProtocol()};\n+    std::promise<void> promise;\n+    std::thread thread([&]() {\n+        protocol->serve(fds[0], \"test-serve\", *init, [&] { promise.set_value(); });\n+    });\n+    promise.get_future().wait();\n+    std::unique_ptr<interfaces::Init> remote_init{protocol->connect(fds[1], \"test-connect\")};\n+    std::unique_ptr<interfaces::Echo> remote_echo{remote_init->makeEcho()};\n+    BOOST_CHECK_EQUAL(remote_echo->echo(\"echo test\"), \"echo test\");\n+    remote_echo.reset();\n+    remote_init.reset();\n+    thread.join();\n+}\n+\n+//! Test ipc::Process bind() and connect() methods connecting over a unix socket.\n+void IpcSocketTest(const fs::path& datadir)\n+{\n+    std::unique_ptr<interfaces::Init> init{std::make_unique<TestInit>()};\n+    std::unique_ptr<ipc::Protocol> protocol{ipc::capnp::MakeCapnpProtocol()};\n+    std::unique_ptr<ipc::Process> process{ipc::MakeProcess()};\n+\n+    auto bind_and_listen{[&](const std::string& bind_address) {\n+        std::string error;\n+        std::string address{bind_address};\n+        int serve_fd = process->bind(datadir, \"test_bitcoin\", address, error);\n+        BOOST_CHECK_GE(serve_fd, 0);\n+        BOOST_CHECK_EQUAL(address, bind_address);\n+        BOOST_CHECK_EQUAL(error, \"\");\n+        protocol->listen(serve_fd, \"test-serve\", *init);\n+    }};\n+\n+    auto connect_and_test{[&](const std::string& connect_address) {\n+        std::string error;\n+        std::string address{connect_address};\n+        int connect_fd{process->connect(datadir, \"test_bitcoin\", address, error)};\n+        BOOST_CHECK_EQUAL(address, connect_address);\n+        BOOST_CHECK_EQUAL(error, \"\");\n+        std::unique_ptr<interfaces::Init> remote_init{protocol->connect(connect_fd, \"test-connect\")};\n+        std::unique_ptr<interfaces::Echo> remote_echo{remote_init->makeEcho()};\n+        BOOST_CHECK_EQUAL(remote_echo->echo(\"echo test\"), \"echo test\");\n+    }};\n+\n+    // Need to specify explicit socket addresses outside the data directory, because the data\n+    // directory path is so long that the default socket address and any other\n+    // addresses in the data directory would fail with errors like:\n+    //   Address 'unix' path '\"/tmp/test_common_Bitcoin Core/ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff/test_bitcoin.sock\"' exceeded maximum socket path length\n+    std::vector<std::string> addresses{\n+       strprintf(\"unix:%s\", TempPath(\"bitcoin_sock0_XXXXXX\")),\n+       strprintf(\"unix:%s\", TempPath(\"bitcoin_sock1_XXXXXX\")),\n+    };\n+\n+    // Bind and listen on multiple addresses\n+    for (const auto& address : addresses) {\n+        bind_and_listen(address);\n+    }\n+\n+    // Connect and test each address",
      "path": "src/test/ipc_test.cpp",
      "position": null,
      "original_position": 129,
      "commit_id": "af24810eeed397c2fe5f61ef9769e1b7ee0ecdf9",
      "original_commit_id": "a8d4adfea4b50f452d80bc1e7ee322945d886c78",
      "in_reply_to_id": 1714185762,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/30509#discussion_r1714185762\r\n\r\n> [a8d4adf](https://github.com/bitcoin/bitcoin/commit/a8d4adfea4b50f452d80bc1e7ee322945d886c78): maybe test what happens when there's a second connection attempt to the same address.\r\n\r\nGood idea, added more connections",
      "created_at": "2024-08-19T15:45:24Z",
      "updated_at": "2024-08-19T18:29:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30509#discussion_r1722005468",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1722005468"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 157,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1722968233",
      "pull_request_review_id": 2247420660,
      "id": 1722968233,
      "node_id": "PRRC_kwDOABII585msmip",
      "diff_hunk": "@@ -1200,6 +1204,16 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n     g_wallet_init_interface.Construct(node);\n     uiInterface.InitWallet();\n \n+    if (interfaces::Ipc* ipc = node.init->ipc()) {\n+        for (std::string address : gArgs.GetArgs(\"-ipcbind\")) {\n+            std::string error;\n+            if (!ipc->listenAddress(address, error)) {\n+                return InitError(strprintf(Untranslated(\"Unable to bind to IPC address '%s'. %s\"), address, error));",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 35,
      "commit_id": "af24810eeed397c2fe5f61ef9769e1b7ee0ecdf9",
      "original_commit_id": "4137419b0170fa1e9ff9daacde57933f7c995b76",
      "in_reply_to_id": 1714091657,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Works now.",
      "created_at": "2024-08-20T09:08:52Z",
      "updated_at": "2024-08-20T09:08:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30509#discussion_r1722968233",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1722968233"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1211,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1732716844",
      "pull_request_review_id": 2263113816,
      "id": 1732716844,
      "node_id": "PRRC_kwDOABII585nRyks",
      "diff_hunk": "@@ -65,3 +91,67 @@ void IpcTest()\n     disconnect_client();\n     thread.join();\n }\n+\n+//! Test ipc::Protocol connect() and serve() methods connecting over a socketpair.\n+void IpcSocketPairTest()\n+{\n+    int fds[2];\n+    BOOST_CHECK_EQUAL(socketpair(AF_UNIX, SOCK_STREAM, 0, fds), 0);\n+    std::unique_ptr<interfaces::Init> init{std::make_unique<TestInit>()};\n+    std::unique_ptr<ipc::Protocol> protocol{ipc::capnp::MakeCapnpProtocol()};\n+    std::promise<void> promise;\n+    std::thread thread([&]() {\n+        protocol->serve(fds[0], \"test-serve\", *init, [&] { promise.set_value(); });\n+    });\n+    promise.get_future().wait();\n+    std::unique_ptr<interfaces::Init> remote_init{protocol->connect(fds[1], \"test-connect\")};\n+    std::unique_ptr<interfaces::Echo> remote_echo{remote_init->makeEcho()};\n+    BOOST_CHECK_EQUAL(remote_echo->echo(\"echo test\"), \"echo test\");\n+    remote_echo.reset();\n+    remote_init.reset();\n+    thread.join();\n+}\n+\n+//! Test ipc::Process bind() and connect() methods connecting over a unix socket.\n+void IpcSocketTest(const fs::path& datadir)\n+{\n+    std::unique_ptr<interfaces::Init> init{std::make_unique<TestInit>()};\n+    std::unique_ptr<ipc::Protocol> protocol{ipc::capnp::MakeCapnpProtocol()};\n+    std::unique_ptr<ipc::Process> process{ipc::MakeProcess()};\n+\n+    auto bind_and_listen{[&](const std::string& bind_address) {\n+        std::string address{bind_address};\n+        int serve_fd = process->bind(datadir, \"test_bitcoin\", address);\n+        BOOST_CHECK_GE(serve_fd, 0);\n+        BOOST_CHECK_EQUAL(address, bind_address);\n+        protocol->listen(serve_fd, \"test-serve\", *init);\n+    }};\n+\n+    auto connect_and_test{[&](const std::string& connect_address) {\n+        std::string address{connect_address};\n+        int connect_fd{process->connect(datadir, \"test_bitcoin\", address)};\n+        BOOST_CHECK_EQUAL(address, connect_address);\n+        std::unique_ptr<interfaces::Init> remote_init{protocol->connect(connect_fd, \"test-connect\")};\n+        std::unique_ptr<interfaces::Echo> remote_echo{remote_init->makeEcho()};\n+        BOOST_CHECK_EQUAL(remote_echo->echo(\"echo test\"), \"echo test\");\n+    }};\n+\n+    // Need to specify explicit socket addresses outside the data directory, because the data\n+    // directory path is so long that the default socket address and any other\n+    // addresses in the data directory would fail with errors like:\n+    //   Address 'unix' path '\"/tmp/test_common_Bitcoin Core/ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff/test_bitcoin.sock\"' exceeded maximum socket path length\n+    std::vector<std::string> addresses{\n+       strprintf(\"unix:%s\", TempPath(\"bitcoin_sock0_XXXXXX\")),\n+       strprintf(\"unix:%s\", TempPath(\"bitcoin_sock1_XXXXXX\")),",
      "path": "src/test/ipc_test.cpp",
      "position": 117,
      "original_position": 117,
      "commit_id": "af24810eeed397c2fe5f61ef9769e1b7ee0ecdf9",
      "original_commit_id": "637924109bf04bb65b23beb154507799d1f0441e",
      "in_reply_to_id": null,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: There is a problem with the indentation here.",
      "created_at": "2024-08-27T12:03:56Z",
      "updated_at": "2024-08-27T20:44:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30509#discussion_r1732716844",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1732716844"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 145,
      "original_line": 145,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1733464897",
      "pull_request_review_id": 2263113816,
      "id": 1733464897,
      "node_id": "PRRC_kwDOABII585nUpNB",
      "diff_hunk": "@@ -617,6 +617,9 @@ std::string ArgsManager::GetHelpMessage() const\n             case OptionsCategory::RPC:\n                 usage += HelpMessageGroup(\"RPC server options:\");\n                 break;\n+            case OptionsCategory::IPC:",
      "path": "src/common/args.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "af24810eeed397c2fe5f61ef9769e1b7ee0ecdf9",
      "original_commit_id": "af24810eeed397c2fe5f61ef9769e1b7ee0ecdf9",
      "in_reply_to_id": null,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think this should be added to the `rpc_help.py` tests.",
      "created_at": "2024-08-27T20:19:47Z",
      "updated_at": "2024-08-27T20:44:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30509#discussion_r1733464897",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1733464897"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 620,
      "original_line": 620,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1733490705",
      "pull_request_review_id": 2263113816,
      "id": 1733490705,
      "node_id": "PRRC_kwDOABII585nUvgR",
      "diff_hunk": "@@ -65,3 +91,67 @@ void IpcTest()\n     disconnect_client();\n     thread.join();\n }\n+\n+//! Test ipc::Protocol connect() and serve() methods connecting over a socketpair.\n+void IpcSocketPairTest()\n+{\n+    int fds[2];\n+    BOOST_CHECK_EQUAL(socketpair(AF_UNIX, SOCK_STREAM, 0, fds), 0);\n+    std::unique_ptr<interfaces::Init> init{std::make_unique<TestInit>()};\n+    std::unique_ptr<ipc::Protocol> protocol{ipc::capnp::MakeCapnpProtocol()};\n+    std::promise<void> promise;\n+    std::thread thread([&]() {\n+        protocol->serve(fds[0], \"test-serve\", *init, [&] { promise.set_value(); });\n+    });\n+    promise.get_future().wait();\n+    std::unique_ptr<interfaces::Init> remote_init{protocol->connect(fds[1], \"test-connect\")};\n+    std::unique_ptr<interfaces::Echo> remote_echo{remote_init->makeEcho()};\n+    BOOST_CHECK_EQUAL(remote_echo->echo(\"echo test\"), \"echo test\");\n+    remote_echo.reset();\n+    remote_init.reset();\n+    thread.join();\n+}\n+\n+//! Test ipc::Process bind() and connect() methods connecting over a unix socket.\n+void IpcSocketTest(const fs::path& datadir)\n+{\n+    std::unique_ptr<interfaces::Init> init{std::make_unique<TestInit>()};\n+    std::unique_ptr<ipc::Protocol> protocol{ipc::capnp::MakeCapnpProtocol()};\n+    std::unique_ptr<ipc::Process> process{ipc::MakeProcess()};\n+",
      "path": "src/test/ipc_test.cpp",
      "position": 93,
      "original_position": 93,
      "commit_id": "af24810eeed397c2fe5f61ef9769e1b7ee0ecdf9",
      "original_commit_id": "af24810eeed397c2fe5f61ef9769e1b7ee0ecdf9",
      "in_reply_to_id": null,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think it would be good to sanity-check that invalid addresses make `bind` and `connect` throw:\r\n```diff\r\ndiff --git a/src/test/ipc_test.cpp b/src/test/ipc_test.cpp\r\nindex f6addb2697..a5f6efbfb7 100644\r\n--- a/src/test/ipc_test.cpp\r\n+++ b/src/test/ipc_test.cpp\r\n@@ -16,0 +17 @@\r\n+#include <stdexcept>\r\n@@ -121,0 +123,4 @@ void IpcSocketTest(const fs::path& datadir)\r\n+    std::string invalid_bind{\"invalid:\"};\r\n+    BOOST_CHECK_THROW(process->bind(datadir, \"test_bitcoin\", invalid_bind), std::invalid_argument);\r\n+    BOOST_CHECK_THROW(process->connect(datadir, \"test_bitcoin\", invalid_bind), std::invalid_argument);\r\n+\r\n```\r\n",
      "created_at": "2024-08-27T20:41:38Z",
      "updated_at": "2024-08-27T20:44:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30509#discussion_r1733490705",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1733490705"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30509"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 121,
      "original_line": 121,
      "side": "RIGHT"
    }
  ]
}