{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144",
    "id": 2142876066,
    "node_id": "PR_kwDOABII585_ubGi",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/31144",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/31144.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/31144.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/353915bae14b9704a209bc09b021d3dd2ee11cf2",
    "number": 31144,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "optimization: pack util::Xor into 64 bit chunks instead of doing it byte-by-byte",
    "user": {
      "login": "l0rinc",
      "id": 1841944,
      "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/l0rinc",
      "html_url": "https://github.com/l0rinc",
      "followers_url": "https://api.github.com/users/l0rinc/followers",
      "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
      "organizations_url": "https://api.github.com/users/l0rinc/orgs",
      "repos_url": "https://api.github.com/users/l0rinc/repos",
      "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/l0rinc/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The recently merged [XOR obfuscation](https://github.com/bitcoin/bitcoin/pull/28207) is a non-trivial part of serialization, encountered during IBD and `reindex`:\r\n<img width=\"500\" alt=\"image\" src=\"https://github.com/user-attachments/assets/6dc99dee-bda8-40d0-bdb0-2030982e0645\">\r\n\r\n----\r\n\r\nIn this PR, I've added a new test (comparing randomized inputs against a trivial implementation), updated the benchmark to validate a [more realistic scenario](https://github.com/bitcoin/bitcoin/blob/master/src/node/mempool_persist.cpp#L180) and optimized the XOR function to do the work in batches (instead of per bytes).\r\n\r\n```bash\r\n   cmake -B build -DBUILD_BENCH=ON -DCMAKE_BUILD_TYPE=Release \\\r\n&& cmake --build build -j$(nproc) \\\r\n&& build/src/bench/bench_bitcoin -filter='XorSmall|Xor|AutoFileXor' -min-time=10000\r\n```\r\n\r\n> Before:\r\n\r\n|             ns/byte |              byte/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|                1.66 |      600,922,336.72 |    1.0% |      9.99 | `AutoFileXor`\r\n|                1.07 |      936,964,830.38 |    0.0% |     11.00 | `Xor`\r\n|                1.01 |      986,219,985.13 |    0.1% |     11.01 | `XorSmall`\r\n\r\n> After:\r\n\r\n|             ns/byte |              byte/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|                0.60 |    1,653,903,288.78 |    0.8% |      9.75 | `AutoFileXor`\r\n|                0.02 |   46,155,772,631.21 |    0.0% |     11.00 | `Xor`\r\n|                0.53 |    1,903,417,781.81 |    0.0% |     11.00 | `XorSmall`\r\n\r\ni.e. roughly 50x faster for the bottlenecked scenario and 2x faster for the other ones.\r\n\r\nReproducer and assembly: https://godbolt.org/z/f6d9Mo8j1\r\n\r\n----\r\n\r\nReindexing until 300k blocks reveals that XOR usage was reduced:\r\n<img width=\"500\" alt=\"image\" src=\"https://github.com/user-attachments/assets/fe308c34-da65-42f3-9b10-7d34aa9a8056\">\r\n",
    "labels": [],
    "created_at": "2024-10-24T07:11:11Z",
    "updated_at": "2024-10-24T11:57:00Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "1f6180d7073b6c2e562956650610995c684bf227",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "l0rinc:l0rinc/optimize-xor",
      "ref": "l0rinc/optimize-xor",
      "sha": "353915bae14b9704a209bc09b021d3dd2ee11cf2",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 674169038,
        "node_id": "R_kgDOKC8Azg",
        "name": "bitcoin",
        "full_name": "l0rinc/bitcoin",
        "owner": {
          "login": "l0rinc",
          "id": 1841944,
          "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/l0rinc",
          "html_url": "https://github.com/l0rinc",
          "followers_url": "https://api.github.com/users/l0rinc/followers",
          "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
          "organizations_url": "https://api.github.com/users/l0rinc/orgs",
          "repos_url": "https://api.github.com/users/l0rinc/repos",
          "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/l0rinc/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/l0rinc/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/l0rinc/bitcoin",
        "archive_url": "https://api.github.com/repos/l0rinc/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/l0rinc/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/l0rinc/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/l0rinc/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/l0rinc/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/l0rinc/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/l0rinc/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/l0rinc/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/l0rinc/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/l0rinc/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/l0rinc/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/l0rinc/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/l0rinc/bitcoin/events",
        "forks_url": "https://api.github.com/repos/l0rinc/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/l0rinc/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/l0rinc/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/l0rinc/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/l0rinc/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/l0rinc/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/l0rinc/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/l0rinc/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/l0rinc/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/l0rinc/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/l0rinc/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/l0rinc/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/l0rinc/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/l0rinc/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/l0rinc/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/l0rinc/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:l0rinc/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/l0rinc/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/l0rinc/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/l0rinc/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/l0rinc/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/l0rinc/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/l0rinc/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/l0rinc/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/l0rinc/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/l0rinc/bitcoin/hooks",
        "svn_url": "https://github.com/l0rinc/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 246848,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-10-24T11:37:39Z",
        "created_at": "2023-08-03T09:49:12Z",
        "updated_at": "2024-07-18T12:40:18Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "d94adc7270ba615599eef1e4af849568c155694e",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 36268,
        "stargazers_count": 79008,
        "watchers_count": 79008,
        "size": 270057,
        "default_branch": "master",
        "open_issues_count": 652,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-10-24T09:09:46Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-10-24T11:53:30Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": true,
    "additions": 101,
    "deletions": 19,
    "changed_files": 3,
    "commits": 3,
    "review_comments": 15,
    "comments": 3
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGRlYTdlMmZhZjFiYzQ4Zjk2NzQxZWY4NGUyNWU2ZjQ3Y2VmZDVhOTI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dea7e2faf1bc48f96741ef84e25e6f47cefd5a92",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/dea7e2faf1bc48f96741ef84e25e6f47cefd5a92",
      "tree": {
        "sha": "b087c1692ed676641e82dcde42aacf76ebd1a149",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b087c1692ed676641e82dcde42aacf76ebd1a149"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b8c821cc1eabe93191aaa45fae8169a841a7475c",
          "sha": "b8c821cc1eabe93191aaa45fae8169a841a7475c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b8c821cc1eabe93191aaa45fae8169a841a7475c"
        }
      ],
      "message": "test: Compare util::Xor with randomized inputs against simple impl",
      "committer": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2024-10-24T06:42:28Z"
      },
      "author": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2024-10-24T06:37:57Z"
      },
      "sha": "dea7e2faf1bc48f96741ef84e25e6f47cefd5a92"
    },
    {
      "event": "commented",
      "id": 2434475807,
      "node_id": "IC_kwDOABII586RGycf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2434475807",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-24T07:11:15Z",
      "updated_at": "2024-10-24T07:11:16Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/31144).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\nA summary of reviews will appear here.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2434475807",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14843711057,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAN0wQ5R",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14843711057",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-24T07:59:16Z"
    },
    {
      "event": "labeled",
      "id": 14843712179,
      "node_id": "LE_lADOABII586bm_bxzwAAAAN0wRKz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14843712179",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-24T07:59:20Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2391705369,
      "node_id": "PRR_kwDOABII586OjocZ",
      "url": null,
      "actor": null,
      "commit_id": "10b9e6876825bc2fbd5a96ee034c4abbb8131c26",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#pullrequestreview-2391705369",
      "submitted_at": "2024-10-24T08:27:41Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
    },
    {
      "event": "commented",
      "id": 2434625837,
      "node_id": "IC_kwDOABII586RHXEt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2434625837",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-24T08:27:45Z",
      "updated_at": "2024-10-24T08:27:45Z",
      "author_association": "MEMBER",
      "body": "I think your example may be a bit skewed? It shows how much time is spent when deserializing a `CScript` from a block file. However, block files contain full blocks, where many (most?) of the writes are single bytes (or 4 bytes), see https://github.com/bitcoin/bitcoin/issues/30833#issuecomment-2338250464. Thus, it would be useful to know what the overall end-to-end performance difference is. Also taking into account the utxo db.\r\n\r\nIf you want the micro-benchmark to be representative, I'd presume you'd have to mimic the histogram of the sizes of writes. Just picking one (1024, or 1004), which is never hit in reality, and then optimizing for that may be misleading.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2434625837",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14844891646,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAN00xH-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14844891646",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-24T09:06:19Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14845839276,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAN04Yes",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14845839276",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-24T09:59:16Z"
    },
    {
      "event": "commented",
      "id": 2434840321,
      "node_id": "IC_kwDOABII586RILcB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2434840321",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-24T10:02:58Z",
      "updated_at": "2024-10-24T10:02:58Z",
      "author_association": "CONTRIBUTOR",
      "body": "> where many (most?) of the writes are single bytes (or 4 bytes)\r\n\r\nThanks, I've extended your previous benchmarks with both Autofile serialization and very small vectors.\r\nI will also run a reindex of 400k blocks before and after to see if the effect is measurable or not.",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#issuecomment-2434840321",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31144"
    },
    {
      "event": "reviewed",
      "id": 2392082288,
      "node_id": "PRR_kwDOABII586OlEdw",
      "url": null,
      "actor": null,
      "commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#pullrequestreview-2392082288",
      "submitted_at": "2024-10-24T10:41:35Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
    },
    {
      "event": "reviewed",
      "id": 2392084054,
      "node_id": "PRR_kwDOABII586OlE5W",
      "url": null,
      "actor": null,
      "commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#pullrequestreview-2392084054",
      "submitted_at": "2024-10-24T10:42:27Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
    },
    {
      "event": "unlabeled",
      "id": 14849341925,
      "node_id": "UNLE_lADOABII586bm_bxzwAAAAN1Fvnl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14849341925",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-24T11:32:00Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGM2NGFmMzJmNjIzYmU2ZjQyNmZjZTcxNmZmY2UxYWI3YTQ4ZjM0YTk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c64af32f623be6f426fce716ffce1ab7a48f34a9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c64af32f623be6f426fce716ffce1ab7a48f34a9",
      "tree": {
        "sha": "e5e956fd022b406e10ca10107d238c150da5f62a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e5e956fd022b406e10ca10107d238c150da5f62a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dea7e2faf1bc48f96741ef84e25e6f47cefd5a92",
          "sha": "dea7e2faf1bc48f96741ef84e25e6f47cefd5a92",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/dea7e2faf1bc48f96741ef84e25e6f47cefd5a92"
        }
      ],
      "message": "bench: Make Xor benchmark more representative\n\nGiven `CDBWrapper::OBFUSCATE_KEY_NUM_BYTES = 8` and `std::vector<std::byte> xor_key(8)`, 8 seemed like a more representative value than 31.\n\nData size was also changed to a value that's not divisible by the key size to exercise all parts of the code.\n\n>  cmake -B build -DBUILD_BENCH=ON -DCMAKE_BUILD_TYPE=Release \\\n&& cmake --build build -j$(nproc) \\\n&& build/src/bench/bench_bitcoin -filter='XorSmall|Xor|AutoFileXor' -min-time=10000\n\n|             ns/byte |              byte/s |    err% |     total | benchmark\n|--------------------:|--------------------:|--------:|----------:|:----------\n|                1.66 |      600,922,336.72 |    1.0% |      9.99 | `AutoFileXor`\n|                1.07 |      936,964,830.38 |    0.0% |     11.00 | `Xor`\n|                1.01 |      986,219,985.13 |    0.1% |     11.01 | `XorSmall`",
      "committer": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2024-10-24T11:36:36Z"
      },
      "author": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2024-10-23T21:45:34Z"
      },
      "sha": "c64af32f623be6f426fce716ffce1ab7a48f34a9"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDM1MzkxNWJhZTE0Yjk3MDRhMjA5YmMwOWIwMjFkM2RkMmVlMTFjZjI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/353915bae14b9704a209bc09b021d3dd2ee11cf2",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/353915bae14b9704a209bc09b021d3dd2ee11cf2",
      "tree": {
        "sha": "f2a6589115c07d5535763be3c7d0f879e9d2b322",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f2a6589115c07d5535763be3c7d0f879e9d2b322"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c64af32f623be6f426fce716ffce1ab7a48f34a9",
          "sha": "c64af32f623be6f426fce716ffce1ab7a48f34a9",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c64af32f623be6f426fce716ffce1ab7a48f34a9"
        }
      ],
      "message": "Xor 64 bits together instead of byte-by-byte\n\nThe `if (j == key.size())` optimization wasn't kept since the benchmarks couldn't show any advantage anymore\n\n>  cmake -B build -DBUILD_BENCH=ON -DCMAKE_BUILD_TYPE=Release \\\n&& cmake --build build -j$(nproc) \\\n&& build/src/bench/bench_bitcoin -filter='XorSmall|Xor|AutoFileXor' -min-time=10000\n\n|             ns/byte |              byte/s |    err% |     total | benchmark\n|--------------------:|--------------------:|--------:|----------:|:----------\n|                0.60 |    1,653,903,288.78 |    0.8% |      9.75 | `AutoFileXor`\n|                0.02 |   46,155,772,631.21 |    0.0% |     11.00 | `Xor`\n|                0.53 |    1,903,417,781.81 |    0.0% |     11.00 | `XorSmall`",
      "committer": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2024-10-24T11:36:36Z"
      },
      "author": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2024-10-24T07:10:46Z"
      },
      "sha": "353915bae14b9704a209bc09b021d3dd2ee11cf2"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14849432681,
      "node_id": "HRFPE_lADOABII586bm_bxzwAAAAN1GFxp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14849432681",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-24T11:37:41Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814518633",
      "pull_request_review_id": 2391705369,
      "id": 1814518633,
      "node_id": "PRRC_kwDOABII585sJ1tp",
      "diff_hunk": "@@ -15,32 +15,38 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n     }\n-    key_offset %= key.size();\n \n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n+    if (size_t remaining = write.size() - i; key.size() == 8 && remaining >= 8) { // Xor in 64-bit chunks\n+        const auto key64 = *std::bit_cast<uint64_t*>(key.data());",
      "path": "src/streams.h",
      "position": null,
      "original_position": 32,
      "commit_id": "353915bae14b9704a209bc09b021d3dd2ee11cf2",
      "original_commit_id": "10b9e6876825bc2fbd5a96ee034c4abbb8131c26",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I fail to see how this is not UB. This is identical to https://github.com/bitcoin/bitcoin/pull/30349#discussion_r1804480124",
      "created_at": "2024-10-24T08:27:10Z",
      "updated_at": "2024-10-24T08:27:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814518633",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814518633"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814518826",
      "pull_request_review_id": 2391705369,
      "id": 1814518826,
      "node_id": "PRRC_kwDOABII585sJ1wq",
      "diff_hunk": "@@ -15,32 +15,38 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n     }\n-    key_offset %= key.size();\n \n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n+    if (size_t remaining = write.size() - i; key.size() == 8 && remaining >= 8) { // Xor in 64-bit chunks\n+        const auto key64 = *std::bit_cast<uint64_t*>(key.data());\n+        const auto size64 = remaining / 8;\n+        for (auto& write64 : std::span(std::bit_cast<uint64_t*>(write.data() + i), size64)) {",
      "path": "src/streams.h",
      "position": null,
      "original_position": 34,
      "commit_id": "353915bae14b9704a209bc09b021d3dd2ee11cf2",
      "original_commit_id": "10b9e6876825bc2fbd5a96ee034c4abbb8131c26",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "same",
      "created_at": "2024-10-24T08:27:16Z",
      "updated_at": "2024-10-24T08:27:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814518826",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814518826"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 42,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814534953",
      "pull_request_review_id": 2391731741,
      "id": 1814534953,
      "node_id": "PRRC_kwDOABII585sJ5sp",
      "diff_hunk": "@@ -15,32 +15,38 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n     }\n-    key_offset %= key.size();\n \n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n+    if (size_t remaining = write.size() - i; key.size() == 8 && remaining >= 8) { // Xor in 64-bit chunks\n+        const auto key64 = *std::bit_cast<uint64_t*>(key.data());\n+        const auto size64 = remaining / 8;\n+        for (auto& write64 : std::span(std::bit_cast<uint64_t*>(write.data() + i), size64)) {",
      "path": "src/streams.h",
      "position": null,
      "original_position": 34,
      "commit_id": "353915bae14b9704a209bc09b021d3dd2ee11cf2",
      "original_commit_id": "10b9e6876825bc2fbd5a96ee034c4abbb8131c26",
      "in_reply_to_id": 1814518826,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "CI seems to agree:\r\n\r\n```\r\n/usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:1100:16: runtime error: reference binding to misaligned address 0x7f10961d9084 for type 'unsigned long', which requires 8 byte alignment\r\n0x7f10961d9084: note: pointer points here\r\n  94 8e 20 eb 00 00 00 00  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00\r\n              ^ \r\n    #0 0x55780d85ab85 in __gnu_cxx::__normal_iterator<unsigned long*, std::span<unsigned long, 18446744073709551615ul>>::operator*() const /usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_iterator.h:1100:9\r\n    #1 0x55780d85ab85 in util::Xor(Span<std::byte>, Span<std::byte const>, unsigned long) ci/scratch/build-x86_64-pc-linux-gnu/src/test/./src/streams.h:42:28\r\n```\r\n\r\nhttps://github.com/bitcoin/bitcoin/actions/runs/11495063168/job/31993791381?pr=31144#step:7:4647",
      "created_at": "2024-10-24T08:37:11Z",
      "updated_at": "2024-10-24T08:37:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814534953",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814534953"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 42,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814546031",
      "pull_request_review_id": 2391748872,
      "id": 1814546031,
      "node_id": "PRRC_kwDOABII585sJ8Zv",
      "diff_hunk": "@@ -15,32 +15,38 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n     }\n-    key_offset %= key.size();\n \n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n+    if (size_t remaining = write.size() - i; key.size() == 8 && remaining >= 8) { // Xor in 64-bit chunks\n+        const auto key64 = *std::bit_cast<uint64_t*>(key.data());\n+        const auto size64 = remaining / 8;\n+        for (auto& write64 : std::span(std::bit_cast<uint64_t*>(write.data() + i), size64)) {",
      "path": "src/streams.h",
      "position": null,
      "original_position": 34,
      "commit_id": "353915bae14b9704a209bc09b021d3dd2ee11cf2",
      "original_commit_id": "10b9e6876825bc2fbd5a96ee034c4abbb8131c26",
      "in_reply_to_id": 1814518826,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, I'll investigate.\r\nI assumed there will be more to check, that's why it's still a draft.",
      "created_at": "2024-10-24T08:44:12Z",
      "updated_at": "2024-10-24T08:44:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814546031",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814546031"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 42,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814563302",
      "pull_request_review_id": 2391776469,
      "id": 1814563302,
      "node_id": "PRRC_kwDOABII585sKAnm",
      "diff_hunk": "@@ -15,32 +15,38 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n     }\n-    key_offset %= key.size();\n \n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n+    if (size_t remaining = write.size() - i; key.size() == 8 && remaining >= 8) { // Xor in 64-bit chunks\n+        const auto key64 = *std::bit_cast<uint64_t*>(key.data());",
      "path": "src/streams.h",
      "position": null,
      "original_position": 32,
      "commit_id": "353915bae14b9704a209bc09b021d3dd2ee11cf2",
      "original_commit_id": "10b9e6876825bc2fbd5a96ee034c4abbb8131c26",
      "in_reply_to_id": 1814518633,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Isn't this what we're doing in `CScript` as well https://github.com/bitcoin/bitcoin/blob/master/src/script/script.h#L496 ?\r\n\r\nno? `value_type` is `unsigned char` (an 8-bit integer type) and this one here is `uint64_t` (an 64-bit integer type).",
      "created_at": "2024-10-24T08:54:46Z",
      "updated_at": "2024-10-24T08:54:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814563302",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814563302"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814564883",
      "pull_request_review_id": 2391778993,
      "id": 1814564883,
      "node_id": "PRRC_kwDOABII585sKBAT",
      "diff_hunk": "@@ -15,32 +15,38 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n     }\n-    key_offset %= key.size();\n \n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n+    if (size_t remaining = write.size() - i; key.size() == 8 && remaining >= 8) { // Xor in 64-bit chunks\n+        const auto key64 = *std::bit_cast<uint64_t*>(key.data());",
      "path": "src/streams.h",
      "position": null,
      "original_position": 32,
      "commit_id": "353915bae14b9704a209bc09b021d3dd2ee11cf2",
      "original_commit_id": "10b9e6876825bc2fbd5a96ee034c4abbb8131c26",
      "in_reply_to_id": 1814518633,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes, just saw it, my mistake",
      "created_at": "2024-10-24T08:55:40Z",
      "updated_at": "2024-10-24T08:55:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814564883",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814564883"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814606913",
      "pull_request_review_id": 2391845703,
      "id": 1814606913,
      "node_id": "PRRC_kwDOABII585sKLRB",
      "diff_hunk": "@@ -15,32 +15,38 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n     }\n-    key_offset %= key.size();\n \n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n+    if (size_t remaining = write.size() - i; key.size() == 8 && remaining >= 8) { // Xor in 64-bit chunks\n+        const auto key64 = *std::bit_cast<uint64_t*>(key.data());",
      "path": "src/streams.h",
      "position": null,
      "original_position": 32,
      "commit_id": "353915bae14b9704a209bc09b021d3dd2ee11cf2",
      "original_commit_id": "10b9e6876825bc2fbd5a96ee034c4abbb8131c26",
      "in_reply_to_id": 1814518633,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Replaced it with `memcpy` and it looks like the compiler successfully simplifies it to proper [vector instructions](https://www.felixcloutier.com/x86/pxor): https://godbolt.org/z/Koscjconz",
      "created_at": "2024-10-24T09:17:19Z",
      "updated_at": "2024-10-24T09:18:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814606913",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814606913"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814734979",
      "pull_request_review_id": 2392082288,
      "id": 1814734979,
      "node_id": "PRRC_kwDOABII585sKqiD",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);",
      "path": "src/streams.h",
      "position": null,
      "original_position": 33,
      "commit_id": "353915bae14b9704a209bc09b021d3dd2ee11cf2",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "i have a hard time believing this will make a large difference, especially with the two memcpys involved\r\nOn modern CPUs, ALU operations (especially bitwise ones) are so fast compared to any kind of memory access.\r\nAnd this isn't some advanced crypto math, it's *one* Xor operation per word with a fixed key.\r\n\r\nCould avoid the memcpys if the code takes memory alignment into account, but that makes it even more complex. Not sure the pros/cons work out here.",
      "created_at": "2024-10-24T10:41:35Z",
      "updated_at": "2024-10-24T10:41:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814734979",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814734979"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 44,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814736038",
      "pull_request_review_id": 2392084054,
      "id": 1814736038,
      "node_id": "PRRC_kwDOABII585sKqym",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);\n+            write64 ^= key64;\n+            std::memcpy(write.data() + i, &write64, 8);\n+        }\n     }\n-    key_offset %= key.size();\n-\n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n \n-        // This potentially acts on very many bytes of data, so it's\n-        // important that we calculate `j`, i.e. the `key` index in this\n-        // way instead of doing a %, which would effectively be a division\n-        // for each byte Xor'd -- much slower than need be.\n-        if (j == key.size())\n-            j = 0;\n+    for (size_t j = 0; i < write.size(); ++i, ++j) {\n+        write[i] ^= key[j % key.size()];",
      "path": "src/streams.h",
      "position": null,
      "original_position": 50,
      "commit_id": "353915bae14b9704a209bc09b021d3dd2ee11cf2",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Please avoid % (especially with a dynamic value) in an inner loop. It's essentially a division operation and those are not cheap.",
      "created_at": "2024-10-24T10:42:26Z",
      "updated_at": "2024-10-24T10:42:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814736038",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814736038"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814739738",
      "pull_request_review_id": 2392090246,
      "id": 1814739738,
      "node_id": "PRRC_kwDOABII585sKrsa",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);\n+            write64 ^= key64;\n+            std::memcpy(write.data() + i, &write64, 8);\n+        }\n     }\n-    key_offset %= key.size();\n-\n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n \n-        // This potentially acts on very many bytes of data, so it's\n-        // important that we calculate `j`, i.e. the `key` index in this\n-        // way instead of doing a %, which would effectively be a division\n-        // for each byte Xor'd -- much slower than need be.\n-        if (j == key.size())\n-            j = 0;\n+    for (size_t j = 0; i < write.size(); ++i, ++j) {\n+        write[i] ^= key[j % key.size()];",
      "path": "src/streams.h",
      "position": null,
      "original_position": 50,
      "commit_id": "353915bae14b9704a209bc09b021d3dd2ee11cf2",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": 1814736038,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks for the hint, I deliberately removed that (please check the commit messages for details), since these are optimized away.\r\nAlso, this is just the leftover part, so for key of length 8 (the version used in most places) this will have 7 iterations at most.\r\nCan you see any difference with any of the benchmarks?",
      "created_at": "2024-10-24T10:45:15Z",
      "updated_at": "2024-10-24T10:46:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814739738",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814739738"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814741753",
      "pull_request_review_id": 2392093399,
      "id": 1814741753,
      "node_id": "PRRC_kwDOABII585sKsL5",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);",
      "path": "src/streams.h",
      "position": null,
      "original_position": 33,
      "commit_id": "353915bae14b9704a209bc09b021d3dd2ee11cf2",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": 1814734979,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The speedup comes from the vectorized operations, i.e. doing 64 bit xor instead of byte-by-byte xor (memcpy seems to be eliminated on 64 bit architectures successfully), see https://godbolt.org/z/Koscjconz",
      "created_at": "2024-10-24T10:46:42Z",
      "updated_at": "2024-10-24T10:46:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814741753",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814741753"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 44,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814763442",
      "pull_request_review_id": 2392129853,
      "id": 1814763442,
      "node_id": "PRRC_kwDOABII585sKxey",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);\n+            write64 ^= key64;\n+            std::memcpy(write.data() + i, &write64, 8);\n+        }\n     }\n-    key_offset %= key.size();\n-\n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n \n-        // This potentially acts on very many bytes of data, so it's\n-        // important that we calculate `j`, i.e. the `key` index in this\n-        // way instead of doing a %, which would effectively be a division\n-        // for each byte Xor'd -- much slower than need be.\n-        if (j == key.size())\n-            j = 0;\n+    for (size_t j = 0; i < write.size(); ++i, ++j) {\n+        write[i] ^= key[j % key.size()];",
      "path": "src/streams.h",
      "position": null,
      "original_position": 50,
      "commit_id": "353915bae14b9704a209bc09b021d3dd2ee11cf2",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": 1814736038,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It's only up to 7 iterations (assuming the key size is 8), sure, youre're right.\r\n\r\nBut ok, yea, i'm a bit divided about relying on specific non-trivial things being optimized out, makes the output very dependent on specific compiler decisions (which may be fickle in some cases).",
      "created_at": "2024-10-24T11:02:51Z",
      "updated_at": "2024-10-24T11:02:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814763442",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814763442"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814766636",
      "pull_request_review_id": 2392135328,
      "id": 1814766636,
      "node_id": "PRRC_kwDOABII585sKyQs",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);\n+            write64 ^= key64;\n+            std::memcpy(write.data() + i, &write64, 8);\n+        }\n     }\n-    key_offset %= key.size();\n-\n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n \n-        // This potentially acts on very many bytes of data, so it's\n-        // important that we calculate `j`, i.e. the `key` index in this\n-        // way instead of doing a %, which would effectively be a division\n-        // for each byte Xor'd -- much slower than need be.\n-        if (j == key.size())\n-            j = 0;\n+    for (size_t j = 0; i < write.size(); ++i, ++j) {\n+        write[i] ^= key[j % key.size()];",
      "path": "src/streams.h",
      "position": null,
      "original_position": 50,
      "commit_id": "353915bae14b9704a209bc09b021d3dd2ee11cf2",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": 1814736038,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Often the simplest code gets optimized most, since it's more predictable.\r\nWould you like me to extend the test or benchmark suite or try something else to make sure we're comfortable with the change?",
      "created_at": "2024-10-24T11:05:33Z",
      "updated_at": "2024-10-24T11:05:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814766636",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814766636"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814766970",
      "pull_request_review_id": 2392135936,
      "id": 1814766970,
      "node_id": "PRRC_kwDOABII585sKyV6",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);",
      "path": "src/streams.h",
      "position": null,
      "original_position": 33,
      "commit_id": "353915bae14b9704a209bc09b021d3dd2ee11cf2",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": 1814734979,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Right, that's trivial for x86_64. Let's also check for architectures that do require alignment for 64-bit reads and writes, like RISC-V.",
      "created_at": "2024-10-24T11:05:45Z",
      "updated_at": "2024-10-24T11:05:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814766970",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814766970"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 44,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814773275",
      "pull_request_review_id": 2392146665,
      "id": 1814773275,
      "node_id": "PRRC_kwDOABII585sKz4b",
      "diff_hunk": "@@ -15,32 +15,40 @@\n #include <assert.h>\n #include <cstddef>\n #include <cstdio>\n+#include <cstring>\n #include <ios>\n #include <limits>\n #include <optional>\n+#include <span>\n #include <stdint.h>\n #include <string.h>\n #include <string>\n-#include <utility>\n #include <vector>\n \n namespace util {\n inline void Xor(Span<std::byte> write, Span<const std::byte> key, size_t key_offset = 0)\n {\n-    if (key.size() == 0) {\n-        return;\n+    if (write.empty() || key.empty()) return;\n+\n+    size_t i = 0;\n+    // Consume excess key_offset prefix\n+    for (key_offset %= key.size(); key_offset > 0 && i < std::min(key.size() - key_offset, write.size()); ++i) {\n+        write[i] ^= key[key_offset + i];\n+    }\n+\n+    if (key.size() == 8 && write.size() - i >= 8) { // Xor in 64-bit chunks\n+        uint64_t key64;\n+        std::memcpy(&key64, key.data(), 8);\n+        for (; i <= write.size() - 8; i += 8) {\n+            uint64_t write64;\n+            std::memcpy(&write64, write.data() + i, 8);\n+            write64 ^= key64;\n+            std::memcpy(write.data() + i, &write64, 8);\n+        }\n     }\n-    key_offset %= key.size();\n-\n-    for (size_t i = 0, j = key_offset; i != write.size(); i++) {\n-        write[i] ^= key[j++];\n \n-        // This potentially acts on very many bytes of data, so it's\n-        // important that we calculate `j`, i.e. the `key` index in this\n-        // way instead of doing a %, which would effectively be a division\n-        // for each byte Xor'd -- much slower than need be.\n-        if (j == key.size())\n-            j = 0;\n+    for (size_t j = 0; i < write.size(); ++i, ++j) {\n+        write[i] ^= key[j % key.size()];",
      "path": "src/streams.h",
      "position": null,
      "original_position": 50,
      "commit_id": "353915bae14b9704a209bc09b021d3dd2ee11cf2",
      "original_commit_id": "6ae466bf112a1dedca3965718fc89b20b0e0e194",
      "in_reply_to_id": 1814736038,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "No, it's fine. It just gives me goosebumps seeing code like this, but if it doesn't affect the benchmark and no one else cares then it doesn't matter.",
      "created_at": "2024-10-24T11:10:55Z",
      "updated_at": "2024-10-24T11:10:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31144#discussion_r1814773275",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814773275"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31144"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    }
  ]
}