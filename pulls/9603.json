{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9603",
    "id": 102506087,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTAyNTA2MDg3",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9603",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/9603.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/9603.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9603",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9603/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9603/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9603/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/ee6c3c60f19a0da7729254bc065ae536f360b32d",
    "number": 9603,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "Add basic_style.py to automate some style checking.",
    "user": {
      "login": "isle2983",
      "id": 20916903,
      "node_id": "MDQ6VXNlcjIwOTE2OTAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/20916903?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/isle2983",
      "html_url": "https://github.com/isle2983",
      "followers_url": "https://api.github.com/users/isle2983/followers",
      "following_url": "https://api.github.com/users/isle2983/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/isle2983/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/isle2983/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/isle2983/subscriptions",
      "organizations_url": "https://api.github.com/users/isle2983/orgs",
      "repos_url": "https://api.github.com/users/isle2983/repos",
      "events_url": "https://api.github.com/users/isle2983/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/isle2983/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "As discussed recently in #9581 and in referenced past discussions #6839, #6156, and probably a bunch of other places too, there is concern about the long tail of effort and risk involved with these style fix-up PRs. To summarize what has been articulated by the experienced maintainers:\r\n\r\n1) it is a lot of PR clutter for reviewers/maintainers to sift through\r\n2) it impedes release management since style fix-ups often have difficult merge conflicts with more important content\r\n3) they are sometimes hard to review and bugs can slip in\r\n4) they permanently clutter up output from `git blame` and other history tools\r\n\r\nMy suggestion is that the ideal long-term strategy is to automate detection of these style issues as much as possible such that the CI system can auto-check every PR. This will ensure that the code is kept clean and consistent at source and is kept that way for all time.\r\n\r\nAdditionally, the message I am getting from what has been written is that the strategy for bringing this online needs to be done **properly** or **not at all**. It will require a conscientious effort to minimize the impact to ongoing activities and steps should be taken to make damn sure it is not the cause of any bugs. I have some thoughts, but collecting ideas from all around is good (and thanks for all that has already been written, it is quite helpful for thinking this through). I am content leaving this PR to sit until a larger collection of automation scripts are complete and we have a strategy that the maintainers are on board with.\r\n\r\n\r\nThis PR provides an example script for very basic style checks which are expressed as simple regular expressions:\r\n\r\n```\r\nSTYLE_RULES = [\r\n    {'title':   'No tabstops',\r\n     'applies': ['*.c', '*.cpp', '*.h', '*.py', '*.sh'],\r\n     'regex':   '\\t',\r\n     'fix':     '    '},\r\n    {'title':   'No trailing whitespace on a line',\r\n     'applies': ['*.c', '*.cpp', '*.h', '*.py', '*.sh'],\r\n     'regex':   ' \\n',\r\n     'fix':     '\\n'},\r\n    {'title':   'No more than three consecutive newlines',\r\n     'applies': ['*.c', '*.cpp', '*.h', '*.py', '*.sh'],\r\n     'regex':   '\\n\\n\\n\\n',\r\n     'fix':     '\\n\\n\\n'},\r\n    {'title':   'Do not end a line with a semicolon',\r\n     'applies': ['*.py'],\r\n     'regex':   ';\\n',\r\n     'fix':     '\\n'},\r\n    {'title':   'Do not end a line with two semicolons',\r\n     'applies': ['*.c', '*.cpp', '*.h'],\r\n     'regex':   ';;\\n',\r\n     'fix':     ';\\n'},\r\n]\r\n```\r\n\r\nThe script provides a `report` subcommand that gives an overview of the state of the repository. It also provides a `check` command, which like in #9459, provides a shell status code (to make it easy to hook to TravisCI) and also gives pointers to what needs to be done to resolve the issue. Finally it provides a `fix` command which just does a search-and-replace according to the 'fix' string in the above `STYLE_RULES` dictionary.\r\n\r\nThe master branch has 141 files that fail this set of rules (19 + 93 + 16 + 13 + 0). However, I did not include the fixup in this PR due to the aforementioned reasons. The script can do the edit by invoking `contrib/devtools/basic_style.py fix .`.\r\n\r\n`clang-format`, `pep8`, `pylint`, `coverity`, clang static analyzer, etc. are what I would define as 'non-basic' style checks that can be similarly automated (and might actually make this one redundant). Also, the `copyright_header.py` script in #9452/#9459 could be part of the end result too.",
    "labels": [
      {
        "id": 64584,
        "node_id": "MDU6TGFiZWw2NDU4NA==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Brainstorming",
        "name": "Brainstorming",
        "color": "ebd775",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2017-01-20T17:45:16Z",
    "updated_at": "2021-09-08T11:08:34Z",
    "closed_at": "2017-02-02T19:42:30Z",
    "mergeable_state": "unknown",
    "merge_commit_sha": "ea7826164468dd906c139aca56bb5eecd32404fa",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "isle2983:PR-basic-style",
      "ref": "PR-basic-style",
      "sha": "ee6c3c60f19a0da7729254bc065ae536f360b32d",
      "user": {
        "login": "isle2983",
        "id": 20916903,
        "node_id": "MDQ6VXNlcjIwOTE2OTAz",
        "avatar_url": "https://avatars.githubusercontent.com/u/20916903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/isle2983",
        "html_url": "https://github.com/isle2983",
        "followers_url": "https://api.github.com/users/isle2983/followers",
        "following_url": "https://api.github.com/users/isle2983/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/isle2983/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/isle2983/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/isle2983/subscriptions",
        "organizations_url": "https://api.github.com/users/isle2983/orgs",
        "repos_url": "https://api.github.com/users/isle2983/repos",
        "events_url": "https://api.github.com/users/isle2983/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/isle2983/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 66122772,
        "node_id": "MDEwOlJlcG9zaXRvcnk2NjEyMjc3Mg==",
        "name": "bitcoin",
        "full_name": "isle2983/bitcoin",
        "owner": {
          "login": "isle2983",
          "id": 20916903,
          "node_id": "MDQ6VXNlcjIwOTE2OTAz",
          "avatar_url": "https://avatars.githubusercontent.com/u/20916903?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/isle2983",
          "html_url": "https://github.com/isle2983",
          "followers_url": "https://api.github.com/users/isle2983/followers",
          "following_url": "https://api.github.com/users/isle2983/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/isle2983/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/isle2983/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/isle2983/subscriptions",
          "organizations_url": "https://api.github.com/users/isle2983/orgs",
          "repos_url": "https://api.github.com/users/isle2983/repos",
          "events_url": "https://api.github.com/users/isle2983/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/isle2983/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/isle2983/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/isle2983/bitcoin",
        "archive_url": "https://api.github.com/repos/isle2983/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/isle2983/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/isle2983/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/isle2983/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/isle2983/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/isle2983/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/isle2983/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/isle2983/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/isle2983/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/isle2983/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/isle2983/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/isle2983/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/isle2983/bitcoin/events",
        "forks_url": "https://api.github.com/repos/isle2983/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/isle2983/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/isle2983/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/isle2983/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/isle2983/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/isle2983/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/isle2983/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/isle2983/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/isle2983/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/isle2983/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/isle2983/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/isle2983/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/isle2983/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/isle2983/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/isle2983/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/isle2983/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:isle2983/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/isle2983/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/isle2983/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/isle2983/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/isle2983/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/isle2983/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/isle2983/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/isle2983/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/isle2983/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/isle2983/bitcoin/hooks",
        "svn_url": "https://github.com/isle2983/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 78143,
        "default_branch": "master",
        "open_issues_count": 1,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2017-03-18T20:11:16Z",
        "created_at": "2016-08-20T01:51:53Z",
        "updated_at": "2018-08-21T18:59:04Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "af01cd3a3d0647c071e94d7b0bda7128fb9aeebe",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35475,
        "stargazers_count": 70608,
        "watchers_count": 70608,
        "size": 236222,
        "default_branch": "master",
        "open_issues_count": 668,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-02T15:32:04Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-08-02T16:01:10Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9603"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 508,
    "deletions": 0,
    "changed_files": 2,
    "commits": 1,
    "review_comments": 0,
    "comments": 2
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZTZjM2M2MGYxOWEwZGE3NzI5MjU0YmMwNjVhZTUzNmYzNjBiMzJk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ee6c3c60f19a0da7729254bc065ae536f360b32d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ee6c3c60f19a0da7729254bc065ae536f360b32d",
      "tree": {
        "sha": "66f3015053447bf90ac11bb8667bf5a307a32564",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/66f3015053447bf90ac11bb8667bf5a307a32564"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/82274c02ed2d82537dc55f008a29edb1bc09bbc4",
          "sha": "82274c02ed2d82537dc55f008a29edb1bc09bbc4",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/82274c02ed2d82537dc55f008a29edb1bc09bbc4"
        }
      ],
      "message": "Implement basic_style.py\n\nA script for finding and fixing basic code style violations.",
      "committer": {
        "name": "isle2983",
        "email": "isle2983@yahoo.com",
        "date": "2017-01-20T17:21:03Z"
      },
      "author": {
        "name": "isle2983",
        "email": "isle2983@yahoo.com",
        "date": "2017-01-20T17:21:03Z"
      },
      "sha": "ee6c3c60f19a0da7729254bc065ae536f360b32d"
    },
    {
      "event": "labeled",
      "id": 931091576,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDkzMTA5MTU3Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/931091576",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-01-20T18:18:19Z",
      "label": {
        "name": "Brainstorming",
        "color": "ebd775"
      }
    },
    {
      "event": "commented",
      "id": 274188404,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI3NDE4ODQwNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/274188404",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-01-20T21:46:49Z",
      "updated_at": "2017-01-20T21:47:54Z",
      "author_association": "CONTRIBUTOR",
      "body": "First, let's define an _cosmetic issue_ as an issue for which a fix wouldn't change the possible code paths taken at runtime (think unchanged binary). Cosmetic issues would then include things such as trailing whitespace, tabs instead of spaces, etc.\r\n\r\nSecond, \r\n* Why do we want to add a linter? Is the goal to catch cosmetic problems, non-cosmetic problems or both?\r\n* What would be the incremental gain of adding a C++ linter?\r\n* What would be the incremental gain of adding a Python linter?\r\n* Do we strive to achieve the same level of assurance from Travis CI regarding the code quality after a passed Travis CI build regardless of the language of the code changed in a newly submitted PR?\r\n\r\nIn C++ land we can assume that most non-cosmetic problems (\"real issues\") that would be uncovered by a good linter are likely already covered by the compiler's warnings/errors. The incremental gain of adding a C++ linter would likely be limited to improved style consistency of the code base.\r\n\r\nIn Python land the situation is quite different. Adding a Python linter to the Travis CI build process would help us uncover real non-cosmetic issues that otherwise could go unnoticed until runtime (`NameError`:s, logic errors due to inconsistent indentation, etc.).\r\n\r\nI think there is a really strong case for adding a Python linter that would be finely tuned to catch only real non-cosmetic issues and disregard all styling issues. That would increase the level of assurance given by a passed Travis CI build at a very low cost.",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9603#issuecomment-274188404",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9603"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-01-21T00:07:37Z",
      "updated_at": "2017-01-21T00:07:37Z",
      "source": {
        "issue": {
          "id": 198242717,
          "node_id": "MDExOlB1bGxSZXF1ZXN0OTk4MTAyMTI=",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9452",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9452/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9452/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9452/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/9452",
          "number": 9452,
          "state": "closed",
          "state_reason": null,
          "title": "Use TravisCI to enforce copyright header rules for source files",
          "body": "As the title indicates, this PR adds the enforcement of MIT Licence copyright headers. The idea is that missing headers are caught ASAP and any deviation from the normal `The Bitcoin Core developers` header needs to be explicitly marked as such in the script.\r\n\r\nIn addition this PR does a significant iteration on `contrib/devtools/copyright_header.py`. Like the preceding version, this script is able to parse through the source files and report on the state of the copyright headers as well as update the year.\r\n\r\nThe first major improvement in this new iteration is that it now has a ruleset specific for each subtree to detect the local proper header style (the subtrees being secp256k1, leveldb, univalue and ctaes).\r\n\r\nThe second major improvement in this iteration makes more elegant use of Python's regular expressions to detect and manipulate the header text. This approach should be maintainable and extensible while keeping the script's quick execution time.\r\n\r\n\r\nTo provide the TravisCI integration, a `ci_check` subcommand is implemented. This executes the logic of the script to catch submissions early where a header was not added pre-merge. A non-zero status is returned to the shell if a problem is found. If everything is fine, TravisCI will look like this:\r\n\r\n![noissuesfound](https://cloud.githubusercontent.com/assets/20916903/21578780/227af4ee-cf4a-11e6-80fc-c2d293e48724.png)\r\n\r\n\r\nIf, for example, a source file is added with no copyright header it will be errored in TravisCI it like this:\r\n\r\n![novalidheader](https://cloud.githubusercontent.com/assets/20916903/21578782/2dac6e60-cf4a-11e6-98b1-a6d13aa6c8c9.png)\r\n\r\n\r\nIf a file has a proper copyright, but is added with some other copyright text such as \"Copyright (c) 2016 Some Other Entity\", the error will be:\r\n\r\n![otherheaderinstance](https://cloud.githubusercontent.com/assets/20916903/21578783/32fbfac0-cf4a-11e6-82d7-04e60a7481a8.png)\r\n\r\n\r\nIn total there are six failure conditions as per what is loaded into the FAILURE_REASONS list of the script. They each have a 'resolution' string attached to them to point the reader to the appropriate resolution - either fix the file (because it is a problem) or update the script (because it is a legitimate change involving non-standard copyright that the script must tolerate). The rules and exceptions for each subtree are loaded into the HEADER_RULES list.\r\n\r\nThere is a commit preceding the update to the script which makes small adjustments to the set of MIT copyright headers to make them uniform in instances where they are not. Also, this commit adds the MIT header to `contrib/dev/tools/gen-manpages.sh`, and hence requires an ACK from @nomnombtc.",
          "user": {
            "login": "isle2983",
            "id": 20916903,
            "node_id": "MDQ6VXNlcjIwOTE2OTAz",
            "avatar_url": "https://avatars.githubusercontent.com/u/20916903?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/isle2983",
            "html_url": "https://github.com/isle2983",
            "followers_url": "https://api.github.com/users/isle2983/followers",
            "following_url": "https://api.github.com/users/isle2983/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/isle2983/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/isle2983/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/isle2983/subscriptions",
            "organizations_url": "https://api.github.com/users/isle2983/orgs",
            "repos_url": "https://api.github.com/users/isle2983/repos",
            "events_url": "https://api.github.com/users/isle2983/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/isle2983/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64584,
              "node_id": "MDU6TGFiZWw2NDU4NA==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Brainstorming",
              "name": "Brainstorming",
              "color": "ebd775",
              "default": false
            },
            {
              "id": 148216,
              "node_id": "MDU6TGFiZWwxNDgyMTY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Docs",
              "name": "Docs",
              "color": "02d7e1",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 13,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9452",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/9452",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/9452.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/9452.patch"
          },
          "closed_at": "2017-01-21T00:07:37Z",
          "created_at": "2016-12-31T18:41:14Z",
          "updated_at": "2021-09-08T11:08:19Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-01-21T00:15:30Z",
      "updated_at": "2017-01-21T00:15:30Z",
      "source": {
        "issue": {
          "id": 198384756,
          "node_id": "MDExOlB1bGxSZXF1ZXN0OTk4OTQ4OTg=",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9459",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9459/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9459/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9459/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/9459",
          "number": 9459,
          "state": "closed",
          "state_reason": null,
          "title": "Improvements to copyright_header.py and some minor copyright header tweaks.",
          "body": "This is a re-submission of PR #9453 with the TravisCI integration and language removed based on feedback.\r\n\r\nThe changes are a significant iteration to `contrib/devtools/copyright_header.py`. Like the preceding version, this script is able to parse through the source files and report on the state of the copyright headers as well as update the year.\r\n\r\nThe first major improvement is that it now has a ruleset specific for each subtree to detect the local proper header style (the subtrees being secp256k1, leveldb, univalue and ctaes).\r\n\r\nThe second major improvement is that it now makes more elegant use of Python's regular expressions to detect and manipulate the header text. This approach should be maintainable and extensible while keeping the script's execution time quick.\r\n\r\nThe third major improvement is the addition of a `check` command which gives a positive or negative acceptance for the state of the repository according to the rules of the script. When issues are found, it also gives more direct suggestions for how to resolve. The purpose is to better assist periodic maintenance of the state of the copyright headers.\r\n\r\n\r\nAlso, some minor tweaks are done to make the set of copyright headers more consistent. The addition of the MIT license header to `contrib/dev/tools/gen-manpages.sh` was previously ACKed by @nomnombtc in #9453.",
          "user": {
            "login": "isle2983",
            "id": 20916903,
            "node_id": "MDQ6VXNlcjIwOTE2OTAz",
            "avatar_url": "https://avatars.githubusercontent.com/u/20916903?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/isle2983",
            "html_url": "https://github.com/isle2983",
            "followers_url": "https://api.github.com/users/isle2983/followers",
            "following_url": "https://api.github.com/users/isle2983/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/isle2983/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/isle2983/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/isle2983/subscriptions",
            "organizations_url": "https://api.github.com/users/isle2983/orgs",
            "repos_url": "https://api.github.com/users/isle2983/repos",
            "events_url": "https://api.github.com/users/isle2983/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/isle2983/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 148216,
              "node_id": "MDU6TGFiZWwxNDgyMTY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Docs",
              "name": "Docs",
              "color": "02d7e1",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 10,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9459",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/9459",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/9459.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/9459.patch"
          },
          "closed_at": "2017-02-02T19:41:58Z",
          "created_at": "2017-01-02T21:59:53Z",
          "updated_at": "2021-09-08T11:08:33Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "isle2983",
        "id": 20916903,
        "node_id": "MDQ6VXNlcjIwOTE2OTAz",
        "avatar_url": "https://avatars.githubusercontent.com/u/20916903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/isle2983",
        "html_url": "https://github.com/isle2983",
        "followers_url": "https://api.github.com/users/isle2983/followers",
        "following_url": "https://api.github.com/users/isle2983/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/isle2983/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/isle2983/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/isle2983/subscriptions",
        "organizations_url": "https://api.github.com/users/isle2983/orgs",
        "repos_url": "https://api.github.com/users/isle2983/repos",
        "events_url": "https://api.github.com/users/isle2983/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/isle2983/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-01-25T21:53:17Z",
      "updated_at": "2017-01-25T21:53:17Z",
      "source": {
        "issue": {
          "id": 203233314,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MTAzMjEyMDI4",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9632",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9632/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9632/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9632/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/9632",
          "number": 9632,
          "state": "closed",
          "state_reason": null,
          "title": "Add clang_static_analysis.py to help automate static analysis runs",
          "body": "In the same vein as `copyright_header.py` (#9459)  and `basic_style.py` (#9603), this script provides a consistent way to run clang static analysis checking on the codebase.\r\n\r\n```\r\n$ contrib/devtools/clang_static_analysis.py -h\r\nusage: clang_static_analysis.py [-h] [-b BIN_PATH] [-r REPORT_PATH] [-j JOBS]\r\n                                {report,check} repository\r\n\r\nA utility for running clang static analysis on the codebase in a consistent\r\nway.\r\n\r\npositional arguments:\r\n  {report,check}        Selects the output behavior. 'report' generates a\r\n                        summary report on the issues found. 'check' compares\r\n                        the state of the repository against a standard,\r\n                        provides a return code for the shell and prints more\r\n                        specific details when issues are found.\r\n  repository            A source code repository for which the static analysis\r\n                        is to be performed upon.\r\n\r\noptional arguments:\r\n  -h, --help            show this help message and exit\r\n  -b BIN_PATH, --bin-path BIN_PATH\r\n                        The path holding 'scan-build' and 'scan-view'\r\n                        binaries. (Uses 'scan-build' and 'scan-view' installed\r\n                        in PATH by default)\r\n  -r REPORT_PATH, --report-path REPORT_PATH\r\n                        The path for scan-build to write its report files.\r\n                        (default=/tmp/bitcoin-scan-build/)\r\n  -j JOBS, --jobs JOBS  The number of parallel jobs to run with 'make'.\r\n                        (default=6)\r\n```\r\n\r\nThe `report` subcommand is for providing a summary of the state of the checked-out branch. On current `master`, the output looks like this:\r\n```\r\n$ contrib/devtools/clang_static_analysis.py report .\r\nRunning command:     make clean\r\nRunning command:     /usr/share/clang/scan-build-3.5/scan-build -k -plist-html --keep-empty -o /tmp/bitcoin-scan-build/ make -j6\r\nstderr/stdout to:    scan_build.log\r\nThis might take a few minutes...\r\nDone.\r\nResults in:          /tmp/bitcoin-scan-build/2017-01-25-140103-6556-1\r\n\r\n--------------------------------------------------------------------------------\r\nTook 143.30 seconds to analyze with scan-build\r\nFound 3 issues:\r\n--------------------------------------------------------------------------------\r\n0: bench/bench.cpp:97:52 - Division by zero\r\n1: qt/paymentrequest.pb.cc:51:24 - Called C++ object pointer is null\r\n2: ./src/ecmult_gen_impl.h:153:5 - Value stored to 'bits' is never read\r\n--------------------------------------------------------------------------------\r\nFull details can be seen in a browser by running:\r\n    $ /usr/share/clang/scan-view-3.5/scan-view /tmp/bitcoin-scan-build/2017-01-25-140103-6556-1\r\n--------------------------------------------------------------------------------\r\n```\r\n\r\nThe results directory is kept around in the `/tmp/` location and `scan-view` gives you a full, very nice visualization of the results in your browser.\r\n\r\nThe `check` subcommand provides a bit more specific detail and returns a shell status of zero only if there aren't any issues. Like with the other scripts, this is useful for eventual inclusion as a criteria for CI acceptance. Its output looks like this:\r\n```\r\n$ contrib/devtools/clang_static_analysis.py check .\r\nRunning command:     make clean\r\nRunning command:     /usr/share/clang/scan-build-3.5/scan-build -k -plist-html --keep-empty -o /tmp/bitcoin-scan-build/ make -j6\r\nstderr/stdout to:    scan_build.log\r\nThis might take a few minutes...\r\nDone.\r\nResults in:          /tmp/bitcoin-scan-build/2017-01-25-140349-11169-1\r\n\r\n--------------------------------------------------------------------------------\r\nAn issue has been found in bench/bench.cpp:97:52\r\nType:         Division by zero\r\nDescription:  Division by zero\r\n\r\n0: bench/bench.cpp:93:5 - The value 0 is assigned to field 'count'\r\n1: bench/bench.cpp:97:52 - Division by zero\r\n--------------------------------------------------------------------------------\r\nAn issue has been found in ./src/ecmult_gen_impl.h:153:5\r\nType:         Dead assignment\r\nDescription:  Value stored to 'bits' is never read\r\n\r\n0: ./src/ecmult_gen_impl.h:153:5 - Value stored to 'bits' is never read\r\n--------------------------------------------------------------------------------\r\nAn issue has been found in qt/paymentrequest.pb.cc:51:24\r\nType:         Called C++ object pointer is null\r\nDescription:  Called C++ object pointer is null\r\n\r\n0: qt/paymentrequest.pb.cc:47:3 - 'file' initialized here\r\n1: qt/paymentrequest.pb.cc:50:3 - Assuming pointer value is null\r\n2: qt/paymentrequest.pb.cc:51:24 - Called C++ object pointer is null\r\n--------------------------------------------------------------------------------\r\nFull details can be seen in a browser by running:\r\n    $ /usr/share/clang/scan-view-3.5/scan-view /tmp/bitcoin-scan-build/2017-01-25-140349-11169-1\r\n--------------------------------------------------------------------------------\r\n*** Static analysis issues found!\r\n```\r\n\r\n\r\nTthe first issue is fixed by PR #9547, the second looks like a trivial fix in secp256k1, and the third is a clear false-positive that is fixed in clang versions 3.9.0+. This output is from a run with clang 3.5.0 and all versions I tried (all of 3.4.0 through 3.9.1) return the same two real issues and no additional false-positives.\r\n\r\nThere are additional, stricter plugins for clang's checking but this script doesn't invoke them. It is sticking to only the defaults for now. Presumably false-positives become more frequent as the strictness increases. Seeing as there doesn't appear to be anything too strange at this baseline level of checking, eventual inclusion in CI appears to be a viable idea.",
          "user": {
            "login": "isle2983",
            "id": 20916903,
            "node_id": "MDQ6VXNlcjIwOTE2OTAz",
            "avatar_url": "https://avatars.githubusercontent.com/u/20916903?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/isle2983",
            "html_url": "https://github.com/isle2983",
            "followers_url": "https://api.github.com/users/isle2983/followers",
            "following_url": "https://api.github.com/users/isle2983/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/isle2983/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/isle2983/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/isle2983/subscriptions",
            "organizations_url": "https://api.github.com/users/isle2983/orgs",
            "repos_url": "https://api.github.com/users/isle2983/repos",
            "events_url": "https://api.github.com/users/isle2983/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/isle2983/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 231994551,
              "node_id": "MDU6TGFiZWwyMzE5OTQ1NTE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Scripts%20and%20tools",
              "name": "Scripts and tools",
              "color": "ffffee",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 11,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9632",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/9632",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/9632.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/9632.patch"
          },
          "closed_at": "2017-02-02T09:00:44Z",
          "created_at": "2017-01-25T21:53:17Z",
          "updated_at": "2021-09-08T11:08:29Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "isle2983",
        "id": 20916903,
        "node_id": "MDQ6VXNlcjIwOTE2OTAz",
        "avatar_url": "https://avatars.githubusercontent.com/u/20916903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/isle2983",
        "html_url": "https://github.com/isle2983",
        "followers_url": "https://api.github.com/users/isle2983/followers",
        "following_url": "https://api.github.com/users/isle2983/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/isle2983/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/isle2983/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/isle2983/subscriptions",
        "organizations_url": "https://api.github.com/users/isle2983/orgs",
        "repos_url": "https://api.github.com/users/isle2983/repos",
        "events_url": "https://api.github.com/users/isle2983/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/isle2983/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-01-31T22:09:58Z",
      "updated_at": "2017-01-31T22:09:58Z",
      "source": {
        "issue": {
          "id": 204438720,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MTA0MDM0MDk2",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9658",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9658/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9658/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9658/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/9658",
          "number": 9658,
          "state": "closed",
          "state_reason": null,
          "title": "Add clang_format.py to help automate code style analysis",
          "body": "The objective here is to expose data to inform the code style discussion. The tool makes it easy to change the `clang-format` binary and `.clang_format` file to help reason about the problem.\r\n\r\n\r\n`clang_format.py` is added with the usage:\r\n\r\n```\r\n$ contrib/devtools/clang_format.py -h\r\nusage: clang_format.py [-h] [-b BIN_PATH] [-s STYLE_FILE] [-j JOBS] [-f]\r\n                       {report,check,format} [target [target ...]]\r\n\r\nA utility for invoking clang-format to observe the state of C++ code\r\nformatting in the repository. It produces reports of style metrics and also\r\ncan apply formatting.\r\n\r\npositional arguments:\r\n  {report,check,format}\r\n                        Selects the action to be taken. 'report' produces a\r\n                        report with analysis of the selected files taken as a\r\n                        group. 'check' validates that the selected files match\r\n                        the style and gives a per-file report and returns a\r\n                        non-zero bash status if there are any format issues\r\n                        discovered. 'format' applies the style formatting to\r\n                        the selected files.\r\n  target                A list of files and/or directories that select the\r\n                        subset of files for this action. If a directory is\r\n                        given as a target, all files contained in it and its\r\n                        subdirectories are recursively selected. All targets\r\n                        must be tracked in the same git repository clone.\r\n                        (default=The current directory)\r\n\r\noptional arguments:\r\n  -h, --help            show this help message and exit\r\n  -b BIN_PATH, --bin-path BIN_PATH\r\n                        The path to the clang-format binary to be used.\r\n                        (default=clang-format-[0-9]\\.[0-9] installed in PATH\r\n                        with the highest version number)\r\n  -s STYLE_FILE, --style-file STYLE_FILE\r\n                        The path to the style file to be used. (default=The\r\n                        src/.clang_format file of the repository which holds\r\n                        the targets)\r\n  -j JOBS, --jobs JOBS  Parallel jobs for computing diffs. (default=6)\r\n  -f, --force           Force proceeding with 'check' or 'format' if clang-\r\n                        format doesn't support all parameters in the style\r\n                        file. (default=False)\r\n```\r\n\r\nThe `report` command looks like this when run against `master`:\r\n\r\n```\r\n$ contrib/devtools/clang_format.py report\r\n--------------------------------------------------------------------------------\r\n1466 files tracked according to 'git ls-files'\r\n 406 files in scope according to SOURCE_FILES and ALWAYS_IGNORE settings\r\n 406 files examined according to listed targets\r\n--------------------------------------------------------------------------------\r\nclang-format bin:         /usr/lib/llvm-3.8/bin/clang-format\r\nclang-format version:     3.8.0\r\nUsing style in:           /home/isle/muhbitcoin/src/.clang-format\r\n--------------------------------------------------------------------------------\r\nParallel jobs for diffs:   6\r\nElapsed time:              38.60s\r\nSlowest diffs:\r\n 33.88s for src/chainparamsseeds.h\r\n  3.45s for src/qt/bitcoinstrings.cpp\r\n--------------------------------------------------------------------------------\r\nFiles 100% matching:             47\r\nFiles <100% matching:           359\r\nFormatted content MD5:      91ee2c53ca93ccca584457770dbf606c\r\n--------------------------------------------------------------------------------\r\nFiles 90%-99% matching:         132\r\nFiles 80%-89% matching:         151\r\nFiles 70%-79% matching:          46\r\nFiles 60%-69% matching:          14\r\nFiles 50%-59% matching:          10\r\nFiles 40%-49% matching:           1\r\nFiles 30%-39% matching:           1\r\nFiles 20%-29% matching:           1\r\nFiles 10%-19% matching:           1\r\nFiles  0%- 9% matching:           2\r\n--------------------------------------------------------------------------------\r\n\r\n +-------+          +------------+--------+---------+-----------+-------------+\r\n | score |          | pre-format |  added | removed | unchanged | post-format |\r\n +-------+  +-------+------------+--------+---------+-----------+-------------+\r\n |  83%  |  | lines |     109469 |  16807 |   17917 |     91552 |      108359 |\r\n +-------+  +-------+------------+--------+---------+-----------+-------------+\r\n\r\n--------------------------------------------------------------------------------\r\n```\r\n\r\nIt also will take a list of specific files to narrow it to a specific set instead of the entire repo.\r\n\r\n\r\nThe `check` subcommand output displays a specific report for each non-matching file in the set of targets and provides a status code to the shell:\r\n\r\n```\r\n$ contrib/devtools/clang_format.py check src/init.cpp\r\n--------------------------------------------------------------------------------\r\n1466 files tracked according to 'git ls-files'\r\n 406 files in scope according to SOURCE_FILES and ALWAYS_IGNORE settings\r\n   1 files examined according to listed targets\r\n--------------------------------------------------------------------------------\r\nA code format issue was detected in src/init.cpp\r\n +-------+          +------------+--------+---------+-----------+-------------+\r\n | score |          | pre-format |  added | removed | unchanged | post-format |\r\n +-------+  +-------+------------+--------+---------+-----------+-------------+\r\n |  90%  |  | lines |       1641 |    151 |     163 |      1478 |        1629 |\r\n +-------+  +-------+------------+--------+---------+-----------+-------------+\r\n--------------------------------------------------------------------------------\r\nThese files can be auto-formatted by running:\r\n$ contrib/devtools/clang_format.py format [target [target ...]]\r\n--------------------------------------------------------------------------------\r\n*** Format issues found!\r\n\r\n```\r\n\r\n\r\nThe `format` subcommand will apply `clang-format` to set of targets much like the predecessor `clang-format.py` (which was recently removed in #9649).\r\n\r\n\r\nThe usage is overloaded for convenience:\r\n\r\nTo limit the reporting to just `src/qt/`:\r\n```\r\n$ contrib/devtools/clang_format.py report src/qt/\r\n```\r\n\r\nTo check three random files:\r\n```\r\n$ contrib/devtools/clang_format.py check src/foo.cpp src/bar.h src/baz.cpp\r\n```\r\n\r\nTo apply format to a single random file and also all files under a subdir:\r\n\r\n```\r\n$ contrib/devtools/clang_format.py format src/fizz.cpp src/buzz/\r\n```\r\n\r\nI have tested with all versions 3.4 through 3.9.0 on Ubuntu 14.04 and most of the same up to 3.9.1 on Debian 8. The applied formatting does have small differences between major versions (e.g. different result between 3.8.0 and 3.9.0 but the same result between 3.9.0 and 3.9.1). Some of the parameters in `src/.clang_format` aren't added until version 3.6.0. The script warns if a parameter is rejected. If you use the `--force` flag, it will proceed with 'best-effort' where the rejected parameters are dropped.\r\n\r\n\r\n\r\nThis is the fourth script in a series (The others being #9459 copyright_header.py, #9603 basic_style.py and #9632 clang_static_analysis.py) that provides a `report` command to measure the state of the codebase in the particular dimension.\r\n\r\nA suggested trajectory from here is:\r\n\r\n1) automating a suite of scripts to generate reports with consistent and known tool dependencies - a build matrix item in TravisCI looks like a good first thought\r\n2) exposing metrics so they can be observed and monitored.\r\n\r\nAfter that, the discussion can progress to:\r\n\r\n1) considering some bulk actions to improve the codebase - in a safe, measured, conscientious way, of course.\r\n2) observing the 'drift' in the wrong direction as PRs are merged\r\n3) considering enforcement of pre-merge CI criteria where it adds clear value - the `check` subcommand in these scripts show a way that this can be done.\r\n4) considering areas where similar automation scripts might be helpful (pep8 etc.)\r\n\r\nComments on all this are welcome.\r\n",
          "user": {
            "login": "isle2983",
            "id": 20916903,
            "node_id": "MDQ6VXNlcjIwOTE2OTAz",
            "avatar_url": "https://avatars.githubusercontent.com/u/20916903?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/isle2983",
            "html_url": "https://github.com/isle2983",
            "followers_url": "https://api.github.com/users/isle2983/followers",
            "following_url": "https://api.github.com/users/isle2983/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/isle2983/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/isle2983/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/isle2983/subscriptions",
            "organizations_url": "https://api.github.com/users/isle2983/orgs",
            "repos_url": "https://api.github.com/users/isle2983/repos",
            "events_url": "https://api.github.com/users/isle2983/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/isle2983/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 231994551,
              "node_id": "MDU6TGFiZWwyMzE5OTQ1NTE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Scripts%20and%20tools",
              "name": "Scripts and tools",
              "color": "ffffee",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 5,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9658",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/9658",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/9658.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/9658.patch"
          },
          "closed_at": "2017-02-02T08:54:47Z",
          "created_at": "2017-01-31T22:09:58Z",
          "updated_at": "2021-09-08T11:08:29Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 277060924,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI3NzA2MDkyNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/277060924",
      "actor": {
        "login": "isle2983",
        "id": 20916903,
        "node_id": "MDQ6VXNlcjIwOTE2OTAz",
        "avatar_url": "https://avatars.githubusercontent.com/u/20916903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/isle2983",
        "html_url": "https://github.com/isle2983",
        "followers_url": "https://api.github.com/users/isle2983/followers",
        "following_url": "https://api.github.com/users/isle2983/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/isle2983/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/isle2983/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/isle2983/subscriptions",
        "organizations_url": "https://api.github.com/users/isle2983/orgs",
        "repos_url": "https://api.github.com/users/isle2983/repos",
        "events_url": "https://api.github.com/users/isle2983/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/isle2983/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-02-02T19:42:30Z",
      "updated_at": "2017-02-02T19:42:30Z",
      "author_association": "CONTRIBUTOR",
      "body": "Closing.\r\n\r\nThe plan is to submit script likes this to https://github.com/bitcoin-core/bitcoin-maintainer-tools as that now seems to be the preferred location.\r\n\r\nI will be touching up this script to share some code with the others and submitting it all as a PR there.",
      "user": {
        "login": "isle2983",
        "id": 20916903,
        "node_id": "MDQ6VXNlcjIwOTE2OTAz",
        "avatar_url": "https://avatars.githubusercontent.com/u/20916903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/isle2983",
        "html_url": "https://github.com/isle2983",
        "followers_url": "https://api.github.com/users/isle2983/followers",
        "following_url": "https://api.github.com/users/isle2983/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/isle2983/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/isle2983/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/isle2983/subscriptions",
        "organizations_url": "https://api.github.com/users/isle2983/orgs",
        "repos_url": "https://api.github.com/users/isle2983/repos",
        "events_url": "https://api.github.com/users/isle2983/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/isle2983/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/9603#issuecomment-277060924",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9603"
    },
    {
      "event": "closed",
      "id": 947018649,
      "node_id": "MDExOkNsb3NlZEV2ZW50OTQ3MDE4NjQ5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/947018649",
      "actor": {
        "login": "isle2983",
        "id": 20916903,
        "node_id": "MDQ6VXNlcjIwOTE2OTAz",
        "avatar_url": "https://avatars.githubusercontent.com/u/20916903?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/isle2983",
        "html_url": "https://github.com/isle2983",
        "followers_url": "https://api.github.com/users/isle2983/followers",
        "following_url": "https://api.github.com/users/isle2983/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/isle2983/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/isle2983/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/isle2983/subscriptions",
        "organizations_url": "https://api.github.com/users/isle2983/orgs",
        "repos_url": "https://api.github.com/users/isle2983/repos",
        "events_url": "https://api.github.com/users/isle2983/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/isle2983/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-02-02T19:42:30Z"
    },
    {
      "event": "locked",
      "id": 5271579465,
      "node_id": "LOE_lADOABII584MDVcgzwAAAAE6NetJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5271579465",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-08T11:08:34Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": []
}