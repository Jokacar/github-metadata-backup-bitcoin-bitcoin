{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122",
    "id": 1444867984,
    "node_id": "PR_kwDOABII585WHu-Q",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/28122",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/28122.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/28122.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28122",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28122/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
    "number": 28122,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "Silent Payments: Implement BIP352",
    "user": {
      "login": "josibake",
      "id": 7444140,
      "node_id": "MDQ6VXNlcjc0NDQxNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/josibake",
      "html_url": "https://github.com/josibake",
      "followers_url": "https://api.github.com/users/josibake/followers",
      "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
      "organizations_url": "https://api.github.com/users/josibake/orgs",
      "repos_url": "https://api.github.com/users/josibake/repos",
      "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/josibake/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This PR is part of integrating silent payments into Bitcoin Core. The project is tracked in https://github.com/bitcoin/bitcoin/issues/28536\r\n\r\n## BIP352\r\n\r\nThis PR focuses strictly on the BIP logic and attempts to separate it from the wallet and transaction implementation details. This is accomplished by working directly with public and private keys, instead of needing a wallet backend and transactions for testing. Labels for the receiver are optional and thus deferred for a later PR.\r\n\r\nTest vectors from the BIP are included as unit tests.\r\n\r\nBefore reviewing, it is strongly recommended you read https://github.com/bitcoin/bips/pull/1458 and take a look at the reference python implementation on the BIP.\r\n",
    "labels": [
      {
        "id": 149424,
        "node_id": "MDU6TGFiZWwxNDk0MjQ=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
        "name": "Wallet",
        "color": "08a781",
        "default": false
      },
      {
        "id": 249581124,
        "node_id": "MDU6TGFiZWwyNDk1ODExMjQ=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Privacy",
        "name": "Privacy",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 5334691551,
        "node_id": "LA_kwDOABII588AAAABPfju3w",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
        "name": "CI failed",
        "description": "",
        "color": "cccccc",
        "default": false
      }
    ],
    "created_at": "2023-07-21T18:36:37Z",
    "updated_at": "2024-02-20T14:15:53Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "532f286031ff9e3c7f750c59884b43cb6e2dd52e",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": false,
    "head": {
      "label": "josibake:implement-bip352",
      "ref": "implement-bip352",
      "sha": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 344501009,
        "node_id": "MDEwOlJlcG9zaXRvcnkzNDQ1MDEwMDk=",
        "name": "bitcoin",
        "full_name": "josibake/bitcoin",
        "owner": {
          "login": "josibake",
          "id": 7444140,
          "node_id": "MDQ6VXNlcjc0NDQxNDA=",
          "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/josibake",
          "html_url": "https://github.com/josibake",
          "followers_url": "https://api.github.com/users/josibake/followers",
          "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
          "organizations_url": "https://api.github.com/users/josibake/orgs",
          "repos_url": "https://api.github.com/users/josibake/repos",
          "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/josibake/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/josibake/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/josibake/bitcoin",
        "archive_url": "https://api.github.com/repos/josibake/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/josibake/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/josibake/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/josibake/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/josibake/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/josibake/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/josibake/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/josibake/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/josibake/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/josibake/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/josibake/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/josibake/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/josibake/bitcoin/events",
        "forks_url": "https://api.github.com/repos/josibake/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/josibake/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/josibake/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/josibake/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/josibake/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/josibake/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/josibake/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/josibake/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/josibake/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/josibake/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/josibake/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/josibake/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/josibake/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/josibake/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/josibake/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/josibake/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:josibake/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/josibake/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/josibake/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/josibake/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/josibake/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/josibake/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/josibake/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/josibake/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/josibake/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/josibake/bitcoin/hooks",
        "svn_url": "https://github.com/josibake/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 237296,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-02-20T12:56:25Z",
        "created_at": "2021-03-04T14:24:20Z",
        "updated_at": "2022-01-04T15:38:49Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "d301c99554c4767663ac1c8e8f48e63c06502650",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 36843,
        "stargazers_count": 74063,
        "watchers_count": 74063,
        "size": 249965,
        "default_branch": "master",
        "open_issues_count": 680,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-02-20T14:12:20Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-02-20T14:15:32Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
      }
    },
    "author_association": "MEMBER",
    "draft": true,
    "additions": 7755,
    "deletions": 231,
    "changed_files": 55,
    "commits": 12,
    "review_comments": 103,
    "comments": 32
  },
  "events": [
    {
      "event": "commented",
      "id": 1646097920,
      "node_id": "IC_kwDOABII585iHXYA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1646097920",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-21T18:36:41Z",
      "updated_at": "2024-02-20T07:42:04Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/28122).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\nA summary of reviews will appear here.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#29432](https://github.com/bitcoin/bitcoin/pull/29432) (Stratum v2 Template Provider (take 3) by Sjors)\n* [#28241](https://github.com/bitcoin/bitcoin/pull/28241) (Silent payment index (for light wallets and consistency check) by Sjors)\n* [#28201](https://github.com/bitcoin/bitcoin/pull/28201) (Silent Payments: sending by josibake)\n* [#27351](https://github.com/bitcoin/bitcoin/pull/27351) (wallet: add `seeds` argument to `importdescriptors` by apoelstra)\n* [#27260](https://github.com/bitcoin/bitcoin/pull/27260) (Enhanced error messages for invalid network prefix during address parsing. by russeree)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#issuecomment-1646097920",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28122"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-21T18:46:43Z",
      "updated_at": "2023-07-21T18:46:43Z",
      "source": {
        "issue": {
          "id": 1741647494,
          "node_id": "PR_kwDOABII585SMBHD",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27827",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27827/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27827/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27827/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27827",
          "number": 27827,
          "state": "closed",
          "state_reason": null,
          "title": "Silent Payments: send and receive",
          "body": "## For reviewers\r\n\r\nIn an attempt to make reviewing a bit more sane, I'm breaking this up into a few smaller PRs, but will keep this one open as the parent PR and keep it rebased on the child PRs. The main purpose of having this PR is to track progress on child PRs and also have an easy way to compile `bitcoind` with both send and receive support for testing. Additionally, I'll be adding more functional tests to this PR since it's much easier to test when `bitcoind` can both send and receive.\r\n\r\n## PRs\r\n\r\n- [ ] https://github.com/bitcoin/bitcoin/pull/28122\r\n  - Implements the logic from BIP352 without any wallet code. This PR adds the necessary cryptographic functions and implements the logic needed for sending and scanning. This PR also includes the test vectors from the BIP as unit tests. Both the send and receive PRs have this as a dependency. In terms of priority, this PR should be reviewed first\r\n- [ ] https://github.com/bitcoin/bitcoin/pull/28201\r\n  - Implements sending in the Bitcoin Core wallet. This PR allows a wallet to send to a silent payment address, regardless of whether or not the wallet can receive silent payments\r\n  - Ready for review, but marked as a draft until dependencies are merged\r\n- [ ] https://github.com/bitcoin/bitcoin/pull/28202\r\n  - Implements receiving in the Bitcoin Core wallet. This PR allows a wallet to generate silent payment addresses and scan for silent payments, regardless of whether or not the wallet can send to a silent payment address\r\n  - Ready for review but marked as a draft until dependencies are merged\r\n\r\nFor the silent payments specification, see https://github.com/bitcoin/bips/pull/1458\r\n\r\n## Overall\r\n\r\nThis PR implements the full silent payments scheme: sending and receiving. The following items are not covered in this PR and are intended for follow-up PRs:\r\n\r\n* Adding labels for the receiver wallet\r\n* Full RPC coverage (only `sendtoaddress` and `sendmany` are covered in this PR)\r\n* Light client support (vending the tweak data per block, either in an index or to serve to indexer, such as electrum server)\r\n* Add benchmarks to validate that there are no DoS concerns for doing silent payment verification for transactions in the mempool\r\n* External signer support (dependent on hardware wallets supporting silent payments)\r\n* More unit / functional test coverage\r\n\r\n## Major changes\r\n\r\nThis PR is a continuation of the work done in https://github.com/bitcoin/bitcoin/pull/24897. Below is a summary of the major changes:\r\n\r\n* Remove labels\r\n  * The original draft included labels, but this has been deferred for a later PR. Labels are not necessary for sending and receiving and there are still some open questions on how best to implement them in Bitcoin Core. Labels can also be added at any point by the receiver without requiring any changes from the sender\r\n* Remove indexes\r\n  * In the original draft, indexes were used when scanning for silent payments and when doing wallet rescans. This has been removed in favor of using `rev*.dat` files for rescanning. It may make sense to add an index in the future, but for the purpose of vending tweak data to light clients, which is still an open question\r\n* Update to implement the most current version of BIP352\r\n  * Since the original draft, there have been a few changes in the BIP which are reflected in the current PR. Most notably, using 33-byte compressed keys for the silent payment address (as opposed to X-only keys in the original draft) \r\n\r\nIt may be helpful for context to read through the discussions on #24897 , but ongoing review should happen in the relevant child PRs listed above.",
          "user": {
            "login": "josibake",
            "id": 7444140,
            "node_id": "MDQ6VXNlcjc0NDQxNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/josibake",
            "html_url": "https://github.com/josibake",
            "followers_url": "https://api.github.com/users/josibake/followers",
            "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
            "organizations_url": "https://api.github.com/users/josibake/orgs",
            "repos_url": "https://api.github.com/users/josibake/repos",
            "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/josibake/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 7,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27827",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27827",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27827.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27827.patch"
          },
          "closed_at": "2023-09-26T12:02:09Z",
          "created_at": "2023-06-05T12:12:23Z",
          "updated_at": "2024-01-26T10:50:52Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9888104995,
      "node_id": "HRFPE_lADOABII585sQXuIzwAAAAJNYIIj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9888104995",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-21T18:54:55Z"
    },
    {
      "event": "labeled",
      "id": 9888105871,
      "node_id": "LE_lADOABII585sQXuIzwAAAAJNYIWP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9888105871",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-21T18:55:01Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9888314157,
      "node_id": "HRFPE_lADOABII585sQXuIzwAAAAJNY7Mt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9888314157",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-21T19:23:43Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-22T07:04:05Z",
      "updated_at": "2023-07-22T07:04:05Z",
      "source": {
        "issue": {
          "id": 1778992391,
          "node_id": "PR_kwDOABII585UJNRk",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27991",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27991/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27991/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27991/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27991",
          "number": 27991,
          "state": "closed",
          "state_reason": null,
          "title": "build: pass sanitize flags to instrument libsecp256k1 code",
          "body": "secp256k1 functions are now instrumented:\r\n```bash\r\n# objdump --disassemble-symbols=_secp256k1_xonly_pubkey_serialize src/test/fuzz/fuzz | grep sanitizer_cov\r\n100eb5244: 73 5d 01 94 \tbl\t0x100f0c810 <___sanitizer_cov_trace_const_cmp8>\r\n100eb53f0: cc 5c 01 94 \tbl\t0x100f0c720 <___sanitizer_cov_trace_pc_indir>\r\n100eb5418: c2 5c 01 94 \tbl\t0x100f0c720 <___sanitizer_cov_trace_pc_indir>\r\n100eb5444: b7 5c 01 94 \tbl\t0x100f0c720 <___sanitizer_cov_trace_pc_indir>\r\n```\r\n\r\nNot sure if this is the best solution. Would fix #27990.",
          "user": {
            "login": "fanquake",
            "id": 863730,
            "node_id": "MDQ6VXNlcjg2MzczMA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fanquake",
            "html_url": "https://github.com/fanquake",
            "followers_url": "https://api.github.com/users/fanquake/followers",
            "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
            "organizations_url": "https://api.github.com/users/fanquake/orgs",
            "repos_url": "https://api.github.com/users/fanquake/repos",
            "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/fanquake/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 7,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27991",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27991",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27991.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27991.patch"
          },
          "closed_at": "2023-09-07T11:00:39Z",
          "created_at": "2023-06-28T13:48:43Z",
          "updated_at": "2023-09-11T09:38:58Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-22T10:09:23Z",
      "updated_at": "2023-07-22T10:09:23Z",
      "source": {
        "issue": {
          "id": 1643033911,
          "node_id": "PR_kwDOABII585NBVge",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27351",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27351/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27351/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27351/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27351",
          "number": 27351,
          "state": "open",
          "state_reason": null,
          "title": "wallet: add `seeds` argument to `importdescriptors`",
          "body": "This PR introduces the ability to import BIP32 master seeds alongside xpubs. It currently expects seeds to be provided in [BIP 93/codex32](https://github.com/bitcoin/bips/blob/master/bip-0093.mediawiki) either as a single seed or as a list of shares which can be assembled via Shamir Secret Sharing.\r\n\r\nIt could be generalized to other seed formats, e.g. a hex-encoding or the old `sethdseeds` WIF format, easily enough by just attempting to parse the input in those formats and retrying until we find one that works. (Though we must be extremely careful that these formats are unambiguous! If the user imports a seed they don't expect, which fails to match the one they've backed up, the result could be coin loss. For formats with no prefix or checksum, e.g. hex-encoded bytes, we may need to require the user provide a prefix or a separate flag.)\r\n\r\nThe motivation here is that users who are importing their coins from another wallet likely have them in the form of a public descriptor (probably one of the standard `pkh(BIP44/48/84/whatever)` ones) along with a master seed (probably in some seed word format, but this is easy enough to convert to a straight BIP32 seed with an external tool). The seed, presumably, they want to minimize handling of, while the descriptor they are likely to be copy/pasting from somewhere and generally being less careful with.\r\n\r\nTo import this into Core, they currently need to construct a version of their descriptor in which xpubs are replaced by xprivs, and import that. This is cumbersome and potentially dangerous. With this extra RPC flag they are able to separately tweak their descriptor however they need, and then adding their seed data, unmodified, at the last minute in one place.\r\n\r\nMy specific use case is: I have an estate planning document which contains careful instructions for reconstructing seed data from shares which are stored separately and externally to the planning document. Meanwhile, the document itself contains a public descriptor, with checksum already computed, which is stored in several locations accessible by an open-ended set of people. If I were forced to mix the secret data with the public data, it would increase the risk of leaking the secrets as well as the risk of losing the public part.\r\n\r\n**Edit:** Other approaches, that I considered but chose not to take:\r\n\r\n* Extend the existing `sethdseed` RPC. This RPC is legacy-only and not supported by descriptor wallets, because it depends on the legacy \"bag of keys\" model where you could stick keys into the wallet and it'd \"just work\", often in surprising ways.\r\n* Add a new descriptor-wallet-based `importseed` RPC or something. This doesn't work for more-or-less the same reason; the descriptor wallet associates all its keys with `ScriptPubKeyManager`s, so we would need to add support for \"global keys\" somehow. This is a lot of work, lots of room for bikeshedding, and I worry that @achow101 will NACK anything that looks too much like a \"bag of keys\" model. (The situation would be much less bad than the legacy one, where 3rd parties could do stuff like mapping p2wpkh addresses to p2pkh ones and the wallet would just accept it ... but it would still potentially lead to user confusion about what exact conditions the wallet could sign for what descriptors, and it may constrain future wallet changes.)\r\n* Adding a `codex32(...)/1/2/3` xpriv format to the descriptor import format. This was suggested to me by @sipa and has the benefit that very closely matches the existing import model.\r\n\r\nPersonally I don't like the latter\r\n* for the reasons stated in the PR description -- I like my descriptors to be public, and my secret data to be limited to 16 bytes, and I think this is a common mode of operation for people coming from other wallets\r\n* ...and maybe worse, a common model for other wallet authors, who would refuse to nicely interoperate with this);\r\n* because it felt like enough of a change to deserve a change to one of the descriptor BIPs, but those are big enough already and it's hard to get tiny changes to propagate to all implementors of standards. Plus it felt wrong to couple codex32 with descriptors like this.i\r\n* because if you have multiple descirptors that use the same seed, it would force you to copy the seed multiple times, which is dangerous. (In some cases [BIP 389](https://github.com/bitcoin/bips/pull/1354) will make this better, but it doesn't cover everything and anyway is not accepted or implemented yet. One thing at a time :))\r\n\r\nBut what cinched it, and made me switch to the approach in the PR, was that @roconnor-blockstream pointed out to me that the codex32 model means that you can't predict, at writing-down-the-descriptor time, exactly what shares you'll be inputting. And because descriptors have a checksum which covers their entire string encoding, this means that you can't predict ahead-of-timei what will go into the `codex32(...)` slot and therefore what the total checksum ought to be. And this means that either (a) you lose the descriptor checksum, which is a Bad Idea and also inconvenient for importers who' will have to construct a checksum with `getdescriptorinfo` to get `importdescriptors` to accept it, even though said checksum had never been used to protect data in storage; or (b) you modify the descriptor checksum algorithm to be aware of `codex(...)` and to skip checksumming the data inside of that. This means even more implementation complexity that other wallets are unlikely to bring in, plus the result generalizes less easily to other seed formats (e.g. hex) which don't have checksums of their own.\r\n\r\n",
          "user": {
            "login": "apoelstra",
            "id": 1351933,
            "node_id": "MDQ6VXNlcjEzNTE5MzM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/apoelstra",
            "html_url": "https://github.com/apoelstra",
            "followers_url": "https://api.github.com/users/apoelstra/followers",
            "following_url": "https://api.github.com/users/apoelstra/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/apoelstra/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/apoelstra/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions",
            "organizations_url": "https://api.github.com/users/apoelstra/orgs",
            "repos_url": "https://api.github.com/users/apoelstra/repos",
            "events_url": "https://api.github.com/users/apoelstra/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/apoelstra/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 10,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27351",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27351",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27351.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27351.patch"
          },
          "created_at": "2023-03-28T00:57:14Z",
          "updated_at": "2024-02-12T22:18:25Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1542113471,
      "node_id": "PRR_kwDOABII585b6si_",
      "url": null,
      "actor": null,
      "commit_id": "6d11e3c435397dab960bc2b5e6cb5a2a1166b39b",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#pullrequestreview-1542113471",
      "submitted_at": "2023-07-22T16:10:19Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9892673100,
      "node_id": "HRFPE_lADOABII585sQXuIzwAAAAJNpjZM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9892673100",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-23T12:18:00Z"
    },
    {
      "event": "reviewed",
      "id": 1542293714,
      "node_id": "PRR_kwDOABII585b7YjS",
      "url": null,
      "actor": null,
      "commit_id": "1d75df2aaeb34bb3058294dd02559bd35e27ae37",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#pullrequestreview-1542293714",
      "submitted_at": "2023-07-23T17:27:50Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9921275265,
      "node_id": "HRFPE_lADOABII585sQXuIzwAAAAJPWqWB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9921275265",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-26T09:10:09Z"
    },
    {
      "event": "unlabeled",
      "id": 9922994041,
      "node_id": "UNLE_lADOABII585sQXuIzwAAAAJPdN95",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9922994041",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-26T11:36:28Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "rajarshimaitra",
        "id": 36541669,
        "node_id": "MDQ6VXNlcjM2NTQxNjY5",
        "avatar_url": "https://avatars.githubusercontent.com/u/36541669?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rajarshimaitra",
        "html_url": "https://github.com/rajarshimaitra",
        "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
        "following_url": "https://api.github.com/users/rajarshimaitra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rajarshimaitra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rajarshimaitra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
        "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
        "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
        "events_url": "https://api.github.com/users/rajarshimaitra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-26T13:06:05Z",
      "updated_at": "2023-07-26T13:06:05Z",
      "source": {
        "issue": {
          "id": 1822380520,
          "node_id": "I_kwDOId2vBM5sn1Ho",
          "url": "https://api.github.com/repos/Bitshala/BitcoinCore-PR-Review-Club/issues/39",
          "repository_url": "https://api.github.com/repos/Bitshala/BitcoinCore-PR-Review-Club",
          "labels_url": "https://api.github.com/repos/Bitshala/BitcoinCore-PR-Review-Club/issues/39/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/Bitshala/BitcoinCore-PR-Review-Club/issues/39/comments",
          "events_url": "https://api.github.com/repos/Bitshala/BitcoinCore-PR-Review-Club/issues/39/events",
          "html_url": "https://github.com/Bitshala/BitcoinCore-PR-Review-Club/issues/39",
          "number": 39,
          "state": "closed",
          "state_reason": "completed",
          "title": " Silent Payments: Implement BIP352 #28122 ",
          "body": "### Session Details\r\n- Date: 03-08-2023\r\n- Time: IST 20:00 (UTC 14:30)\r\n- PR: https://github.com/bitcoin/bitcoin/pull/28122\r\n- Context: `[Wallet]`\r\n- Difficulty: Moderate\r\n- Language: `[C++]`\r\n- Notes and Questions: https://bitcoincore.reviews/28122\r\n\r\n### Summary\r\nThis week, we will learn about Silent Payment Protocol. This is a novel proposal to facilitate privacy-preserving donations and other public-facing Bitcoin receiving.\r\n\r\nIt is recommended to go through the IRC review club notes and questions and join the IRC review club on 2nd Aug. \r\n\r\n### Learning\r\n - What is Silent Payment. \r\n\r\n",
          "user": {
            "login": "rajarshimaitra",
            "id": 36541669,
            "node_id": "MDQ6VXNlcjM2NTQxNjY5",
            "avatar_url": "https://avatars.githubusercontent.com/u/36541669?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rajarshimaitra",
            "html_url": "https://github.com/rajarshimaitra",
            "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
            "following_url": "https://api.github.com/users/rajarshimaitra/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/rajarshimaitra/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/rajarshimaitra/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
            "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
            "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
            "events_url": "https://api.github.com/users/rajarshimaitra/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "comments": 0,
          "closed_at": "2023-08-18T13:30:37Z",
          "created_at": "2023-07-26T13:06:05Z",
          "updated_at": "2023-08-18T13:30:37Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1548528898,
      "node_id": "PRR_kwDOABII585cTK0C",
      "url": null,
      "actor": null,
      "commit_id": "dc18efa78d014be0a09e4c986813086e56c251a3",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#pullrequestreview-1548528898",
      "submitted_at": "2023-07-26T20:21:53Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
    },
    {
      "event": "reviewed",
      "id": 1550940798,
      "node_id": "PRR_kwDOABII585ccXp-",
      "url": null,
      "actor": null,
      "commit_id": "dc18efa78d014be0a09e4c986813086e56c251a3",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Left some comments. I will review further later. ",
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#pullrequestreview-1550940798",
      "submitted_at": "2023-07-28T08:55:34Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
    },
    {
      "event": "labeled",
      "id": 9954424556,
      "node_id": "LE_lADOABII585sQXuIzwAAAAJRVHbs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9954424556",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-29T13:00:25Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1660492118,
      "node_id": "IC_kwDOABII585i-RlW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1660492118",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-01T14:54:07Z",
      "updated_at": "2023-08-01T14:54:28Z",
      "author_association": "MEMBER",
      "body": "Needs rebase, if still relevant",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#issuecomment-1660492118",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28122"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9978403945,
      "node_id": "HRFPE_lADOABII585sQXuIzwAAAAJSwlxp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9978403945",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-01T15:48:01Z"
    },
    {
      "event": "commented",
      "id": 1660598041,
      "node_id": "IC_kwDOABII585i-rcZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1660598041",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-01T15:48:43Z",
      "updated_at": "2023-08-01T15:48:43Z",
      "author_association": "MEMBER",
      "body": "> Needs rebase, if still relevant\r\n\r\nthanks, fixed!",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#issuecomment-1660598041",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28122"
    },
    {
      "event": "unlabeled",
      "id": 9979664003,
      "node_id": "UNLE_lADOABII585sQXuIzwAAAAJS1ZaD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9979664003",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-01T18:05:22Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9987676096,
      "node_id": "HRFPE_lADOABII585sQXuIzwAAAAJTT9fA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9987676096",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-02T12:42:51Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-02T16:37:05Z",
      "updated_at": "2023-08-02T16:37:05Z",
      "source": {
        "issue": {
          "id": 1833542215,
          "node_id": "PR_kwDOABII585XB4Gh",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28201",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28201/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28201/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28201/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28201",
          "number": 28201,
          "state": "open",
          "state_reason": null,
          "title": "Silent Payments: sending",
          "body": "This PR is part of integrating silent payments into Bitcoin Core. Status and tracking for the project is managed in https://github.com/bitcoin/bitcoin/issues/28536\r\n\r\nThis PR depends on #28122 and is marked as a draft until it is merged. If interested in those commits, please review on #28122\r\n\r\n## Sending \r\n### Silent Payments logic\r\n\r\nThe main focus of this PR is:\r\n\r\n* Applying the Taptweak to a taproot internal private key (this is a copy-paste of the code for applying the taptweak in the signing process)\r\n* Getting a private key from a given `scriptPubKey`\r\n* Creating silent payment outputs\r\n* Applying the created scriptPubKeys back to the vector of `CRecipients`\r\n\r\nThe functions are then used together to create silent payment outputs during `CreateTransactionInternal`.\r\n\r\n### Final steps\r\n\r\nThe last commits ensure that:\r\n\r\n* Coin selection is silent payments aware and knows to exclude taproot script path spends and inputs with unknown witness when funding a transaction which pays to a silent payment address\r\n* The change output type is correctly chosen when paying to a silent payment address\r\n* Functional tests\r\n",
          "user": {
            "login": "josibake",
            "id": 7444140,
            "node_id": "MDQ6VXNlcjc0NDQxNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/josibake",
            "html_url": "https://github.com/josibake",
            "followers_url": "https://api.github.com/users/josibake/followers",
            "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
            "organizations_url": "https://api.github.com/users/josibake/orgs",
            "repos_url": "https://api.github.com/users/josibake/repos",
            "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/josibake/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 249581124,
              "node_id": "MDU6TGFiZWwyNDk1ODExMjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Privacy",
              "name": "Privacy",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28201",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28201",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28201.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28201.patch"
          },
          "created_at": "2023-08-02T16:37:04Z",
          "updated_at": "2024-02-20T11:53:04Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-02T16:42:41Z",
      "updated_at": "2023-08-02T16:42:41Z",
      "source": {
        "issue": {
          "id": 1833553731,
          "node_id": "PR_kwDOABII585XB6sb",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28202",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28202/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28202/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28202/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28202",
          "number": 28202,
          "state": "closed",
          "state_reason": null,
          "title": "Silent Payments: receiving",
          "body": "This PR is a child of https://github.com/bitcoin/bitcoin/pull/27827 and only implements the receiving logic. For the rest:\r\n\r\n* #28122 - implement the silent payments scheme\r\n* #28201 - implements sending\r\n* #27827 - all three PRs together - this PR is meant for tracking progress and is useful for reviewers who want to compile all three PRs at once for testing\r\n\r\nThis PR depends on #28122 and is marked as a draft until it is merged. Commits up to https://github.com/bitcoin/bitcoin/commit/8ee791e7b34a354ce6835b968fe12924b8908d7c belong to #28122; please review those commits on #28122\r\n\r\n## Receiving \r\n\r\n_Description coming soon_",
          "user": {
            "login": "josibake",
            "id": 7444140,
            "node_id": "MDQ6VXNlcjc0NDQxNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/josibake",
            "html_url": "https://github.com/josibake",
            "followers_url": "https://api.github.com/users/josibake/followers",
            "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
            "organizations_url": "https://api.github.com/users/josibake/orgs",
            "repos_url": "https://api.github.com/users/josibake/repos",
            "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/josibake/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 3,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28202",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28202",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28202.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28202.patch"
          },
          "closed_at": "2023-09-26T11:58:54Z",
          "created_at": "2023-08-02T16:42:41Z",
          "updated_at": "2024-01-26T10:50:51Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1559306552,
      "node_id": "PRR_kwDOABII585c8SE4",
      "url": null,
      "actor": null,
      "commit_id": "8ee791e7b34a354ce6835b968fe12924b8908d7c",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#pullrequestreview-1559306552",
      "submitted_at": "2023-08-02T16:46:16Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
    },
    {
      "event": "reviewed",
      "id": 1560805532,
      "node_id": "PRR_kwDOABII585dCACc",
      "url": null,
      "actor": null,
      "commit_id": "a469cb1e551ba16f1d83e4b0ae68194e38f1b9ec",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#pullrequestreview-1560805532",
      "submitted_at": "2023-08-03T10:38:54Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
    },
    {
      "event": "reviewed",
      "id": 1562204323,
      "node_id": "PRR_kwDOABII585dHVij",
      "url": null,
      "actor": null,
      "commit_id": "8ee791e7b34a354ce6835b968fe12924b8908d7c",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#pullrequestreview-1562204323",
      "submitted_at": "2023-08-04T05:47:56Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
    },
    {
      "event": "reviewed",
      "id": 1566866196,
      "node_id": "PRR_kwDOABII585dZHsU",
      "url": null,
      "actor": null,
      "commit_id": "376a9b9ad48bb0dc308edc44574584bed9bf01ae",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#pullrequestreview-1566866196",
      "submitted_at": "2023-08-08T09:15:33Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
    },
    {
      "event": "reviewed",
      "id": 1566867434,
      "node_id": "PRR_kwDOABII585dZH_q",
      "url": null,
      "actor": null,
      "commit_id": "376a9b9ad48bb0dc308edc44574584bed9bf01ae",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#pullrequestreview-1566867434",
      "submitted_at": "2023-08-08T09:16:13Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
    },
    {
      "event": "reviewed",
      "id": 1566872721,
      "node_id": "PRR_kwDOABII585dZJSR",
      "url": null,
      "actor": null,
      "commit_id": "376a9b9ad48bb0dc308edc44574584bed9bf01ae",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#pullrequestreview-1566872721",
      "submitted_at": "2023-08-08T09:19:10Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
    },
    {
      "event": "reviewed",
      "id": 1566961113,
      "node_id": "PRR_kwDOABII585dZe3Z",
      "url": null,
      "actor": null,
      "commit_id": "37b0ca1c3d753cc61e0debf8ea59160bdf4127ec",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#pullrequestreview-1566961113",
      "submitted_at": "2023-08-08T10:08:17Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
    },
    {
      "event": "reviewed",
      "id": 1567002299,
      "node_id": "PRR_kwDOABII585dZo67",
      "url": null,
      "actor": null,
      "commit_id": "8be91169396a560bfc4a4e8b34a242111704f8e9",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#pullrequestreview-1567002299",
      "submitted_at": "2023-08-08T10:34:17Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
    },
    {
      "event": "reviewed",
      "id": 1567009051,
      "node_id": "PRR_kwDOABII585dZqkb",
      "url": null,
      "actor": null,
      "commit_id": "8be91169396a560bfc4a4e8b34a242111704f8e9",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#pullrequestreview-1567009051",
      "submitted_at": "2023-08-08T10:38:43Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
    },
    {
      "event": "reviewed",
      "id": 1567018287,
      "node_id": "PRR_kwDOABII585dZs0v",
      "url": null,
      "actor": null,
      "commit_id": "8be91169396a560bfc4a4e8b34a242111704f8e9",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#pullrequestreview-1567018287",
      "submitted_at": "2023-08-08T10:44:44Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
    },
    {
      "event": "reviewed",
      "id": 1567018921,
      "node_id": "PRR_kwDOABII585dZs-p",
      "url": null,
      "actor": null,
      "commit_id": "8be91169396a560bfc4a4e8b34a242111704f8e9",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#pullrequestreview-1567018921",
      "submitted_at": "2023-08-08T10:45:11Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
    },
    {
      "event": "reviewed",
      "id": 1567019657,
      "node_id": "PRR_kwDOABII585dZtKJ",
      "url": null,
      "actor": null,
      "commit_id": "8be91169396a560bfc4a4e8b34a242111704f8e9",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#pullrequestreview-1567019657",
      "submitted_at": "2023-08-08T10:45:41Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
    },
    {
      "event": "commented",
      "id": 1669800569,
      "node_id": "IC_kwDOABII585jhyJ5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1669800569",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-08T15:06:18Z",
      "updated_at": "2023-08-08T16:55:35Z",
      "author_association": "MEMBER",
      "body": "Maybe point out in the description how the first commit 8283ca76e4feb37d3514fbd8dc491b8c4965dff1 relates to BIP 324, which doesn't use the ecdh module, but ElligatorSwift instead.\r\n\r\n8be91169396a560bfc4a4e8b34a242111704f8e9: maybe split this up a bit more: e.g. one commit to introduce a dummy SilentPaymentRecipient / Sender class, one that adds ComputeECDHSharedSecret,  CreateOutput, etc. And then build up the tests across these commits.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#issuecomment-1669800569",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28122"
    },
    {
      "event": "reviewed",
      "id": 1567736115,
      "node_id": "PRR_kwDOABII585dccEz",
      "url": null,
      "actor": null,
      "commit_id": "8ee791e7b34a354ce6835b968fe12924b8908d7c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#pullrequestreview-1567736115",
      "submitted_at": "2023-08-08T16:56:17Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
    },
    {
      "event": "commented",
      "id": 1670943979,
      "node_id": "IC_kwDOABII585jmJTr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1670943979",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-09T09:01:28Z",
      "updated_at": "2023-08-09T09:14:27Z",
      "author_association": "MEMBER",
      "body": "I think this PR should also contain `IsInputForSharedSecretDerivation` that's currently in the send PR, as well as `SumInputPubKeys` (not sure where that's introduced). More generally: anything that's critical in deriving the correct key from a transaction, given its inputs. (this would also make it easier to build an index based on just this PR, see #28241)",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#issuecomment-1670943979",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28122"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-09T09:13:56Z",
      "updated_at": "2023-08-09T09:13:56Z",
      "source": {
        "issue": {
          "id": 1842817294,
          "node_id": "PR_kwDOABII585Xg45g",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28241",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28241/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28241/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28241/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28241",
          "number": 28241,
          "state": "open",
          "state_reason": null,
          "title": "Silent payment index (for light wallets and consistency check)",
          "body": "This PR adds an index with the silent payment tweak for every transaction. It builds on top of #28122.\r\n\r\nIt also adds a `getsilentpaymentblockdata` RPC that returns an array of silent payment tweaked public keys, one for each qualifying transaction. \r\n\r\nThis index serves two purposes:\r\n1. Light client support, see [BIP 352](https://github.com/josibake/bips/blob/silent-payments-bip/bip-0352.mediawiki#user-content-Tweak_Data)\r\n2. A more thorough check than the test vectors; e.g. by comparing a checksum of the index for all of mainnet.\r\n\r\nBased on the index that was originally part of #24897.\r\n\r\nTODO:\r\n- [ ] check correctness against another implementation\r\n- [ ] make `-silentpaymentindex=0` mean off (default), `-silentpaymentindex=v0` on\r\n- [ ] figure out how to do versioning (make the index flexible enough, or just rebuild the index at the next version)\r\n- [ ] remove dependency on wallet (move `GetSilentPaymentsTweakDataFromTxInputs` and everything it needs out of the wallet)\r\n- [ ] cleanup various TODO's in the code\r\n- [ ] brainstorm updating index when outputs are spent\r\n- add tests\r\n  - [ ] that a reorg adds the new blocks (and it's fine to keep the old one) ",
          "user": {
            "login": "Sjors",
            "id": 10217,
            "node_id": "MDQ6VXNlcjEwMjE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sjors",
            "html_url": "https://github.com/Sjors",
            "followers_url": "https://api.github.com/users/Sjors/followers",
            "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
            "organizations_url": "https://api.github.com/users/Sjors/orgs",
            "repos_url": "https://api.github.com/users/Sjors/repos",
            "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Sjors/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 34,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28241",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28241",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28241.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28241.patch"
          },
          "created_at": "2023-08-09T09:13:55Z",
          "updated_at": "2024-02-20T10:15:43Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-09T17:09:18Z",
      "updated_at": "2023-08-09T17:09:18Z",
      "source": {
        "issue": {
          "id": 1843493325,
          "node_id": "PR_kwDOABII585XjLWx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28246",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28246/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28246/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28246/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28246",
          "number": 28246,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: Use CTxDestination in CRecipient instead of just scriptPubKey",
          "body": "For silent payments, we want to provide a `SilentPaymentsDestination` to be used as the recipient, which requires `CRecipient` to use something other than just the `scriptPubKey` as we cannot know the output script for a silent payment prior to transaction creation. `CTxDestination` seems like the obvious place to add a `SilentPaymentsDestination` as it is our internal representation of an address.\r\n\r\nIn order to still allow paying to arbitrary scriptPubKeys (e.g. for data carrier outputs, or the user hand crafted a raw transaction that they have given to `fundrawtransaction`), `CNoDestination` is changed to contain raw scripts.\r\n\r\nAdditionally, P2PK scripts are now interpreted as a new `PubKeyDestination` rather than `PKHash`. This results in some things that would have given an address for P2PK scripts to no longer do so. This is arguably more correct.\r\n\r\n`ExtractDestination`'s behavior is slightly changed for the above. It now returns `true` for those destinations that have addresses, so P2PK scripts now result in `false`. Even though it returns false for `CNoDestination`, the script will now be included in that `CNoDestination`.\r\n\r\nBuilds on #28244",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64585,
              "node_id": "MDU6TGFiZWw2NDU4NQ==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
              "name": "Bug",
              "color": "FBBAAB",
              "default": false
            },
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 21,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28246",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28246",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28246.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28246.patch"
          },
          "closed_at": "2023-09-19T16:49:00Z",
          "created_at": "2023-08-09T15:16:28Z",
          "updated_at": "2023-10-25T12:50:58Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10059835651,
      "node_id": "HRFPE_lADOABII585sQXuIzwAAAAJXnOkD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10059835651",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-10T13:56:50Z"
    },
    {
      "event": "labeled",
      "id": 10062061707,
      "node_id": "LE_lADOABII585sQXuIzwAAAAJXvuCL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10062061707",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-10T17:26:12Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-10T23:50:57Z",
      "updated_at": "2023-08-10T23:50:57Z",
      "source": {
        "issue": {
          "id": 1332190397,
          "node_id": "PR_kwDOEEET9c481L0T",
          "url": "https://api.github.com/repos/bitcoin-core/gui/issues/650",
          "repository_url": "https://api.github.com/repos/bitcoin-core/gui",
          "labels_url": "https://api.github.com/repos/bitcoin-core/gui/issues/650/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-core/gui/issues/650/comments",
          "events_url": "https://api.github.com/repos/bitcoin-core/gui/issues/650/events",
          "html_url": "https://github.com/bitcoin-core/gui/pull/650",
          "number": 650,
          "state": "open",
          "state_reason": null,
          "title": "Add Import to Wallet GUI",
          "body": "resolves #19 \r\n\r\nThis PR does a few things\r\n- Refactors importmulti and importdescripters RPC code\r\n- Adds functions to interfaces\r\n- Adds GUI's for importpubkey, importprivkey, importaddress, importmulti, and importdescriptors RPCs\r\n- Adds QT Tests for all 5 import GUI's\r\n\r\n#### Things to get this merged\r\n- [ ] get the refactor merge on https://github.com/bitcoin/bitcoin/pull/26840\r\n- [ ] after that is done I will split the GUI PR into (importpubkey, importprivkey, importaddress), importmulti, importdescriptors each PR will have its respective tests. I will rebase to remove the commit for the refactor in those PR's it is in this PR so people can test. This is for easier code review\r\n\r\nThe dialogs are located under File -> Import to Wallet...\r\nThe options vary based on what is supported with your specific wallet type.\r\n\r\n| Dialogs are Located  |  Import Public Key Dialog  |\r\n|---|---|\r\n| ![image](https://user-images.githubusercontent.com/31669092/183477017-0423b0db-f84c-4729-9a73-b47544d88aaf.png)  | ![image](https://user-images.githubusercontent.com/31669092/183477129-0c212955-bbf3-4bc9-8089-cf2c1da7644d.png)  |\r\n\r\n| Import Private Key Dialog  | Import Address Dialog  |\r\n|---|---|\r\n|![image](https://user-images.githubusercontent.com/31669092/183477391-84ea6224-e7f5-4fba-a830-2e7fe3effcec.png)   |  ![image](https://user-images.githubusercontent.com/31669092/183477525-c3ba8cdc-ae0f-4113-8e0b-86db548f1e33.png) |\r\n\r\n| Import Multi Dialog scriptPubKey Tab  | Import Multi Dialog Descriptor Tab  |\r\n|---|---|\r\n| ![image](https://user-images.githubusercontent.com/31669092/183477928-232be9c4-fd64-4a20-91ba-00ebe41d66a6.png)  | ![image](https://user-images.githubusercontent.com/31669092/183478127-0b3c8aed-54d9-4fb4-a583-0a6bb5a46d28.png)  |\r\n\r\n|  Import Descriptors Dialog  |\r\n|---|\r\n|  ![image](https://user-images.githubusercontent.com/31669092/183478374-7f9c174d-0067-4812-9556-9e34e813b362.png) |\r\n\r\nFor Range before I had a lineedit with placeholders begin and end, @achow101 suggested I used QSpinBox, but it doesn't have placeholder text. So Currently if both are default value it counts as no input. It would look very nice if I implemented a custom QAbstractSpinBox with placeholder text, but I am not sure if it is overkill for this PR.",
          "user": {
            "login": "KolbyML",
            "id": 31669092,
            "node_id": "MDQ6VXNlcjMxNjY5MDky",
            "avatar_url": "https://avatars.githubusercontent.com/u/31669092?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/KolbyML",
            "html_url": "https://github.com/KolbyML",
            "followers_url": "https://api.github.com/users/KolbyML/followers",
            "following_url": "https://api.github.com/users/KolbyML/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/KolbyML/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/KolbyML/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/KolbyML/subscriptions",
            "organizations_url": "https://api.github.com/users/KolbyML/orgs",
            "repos_url": "https://api.github.com/users/KolbyML/repos",
            "events_url": "https://api.github.com/users/KolbyML/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/KolbyML/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 2145506980,
              "node_id": "MDU6TGFiZWwyMTQ1NTA2OTgw",
              "url": "https://api.github.com/repos/bitcoin-core/gui/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            },
            {
              "id": 2927906211,
              "node_id": "MDU6TGFiZWwyOTI3OTA2MjEx",
              "url": "https://api.github.com/repos/bitcoin-core/gui/labels/Wallet",
              "name": "Wallet",
              "description": "",
              "color": "08a781",
              "default": false
            },
            {
              "id": 5353934559,
              "node_id": "LA_kwDOEEET9c8AAAABPx6O3w",
              "url": "https://api.github.com/repos/bitcoin-core/gui/labels/CI%20failed",
              "name": "CI failed",
              "color": "ededed",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 12,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/650",
            "html_url": "https://github.com/bitcoin-core/gui/pull/650",
            "diff_url": "https://github.com/bitcoin-core/gui/pull/650.diff",
            "patch_url": "https://github.com/bitcoin-core/gui/pull/650.patch"
          },
          "created_at": "2022-08-08T17:43:21Z",
          "updated_at": "2023-12-22T00:57:31Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-11T00:40:01Z",
      "updated_at": "2023-08-11T00:40:01Z",
      "source": {
        "issue": {
          "id": 1843062887,
          "node_id": "PR_kwDOABII585XhuK3",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28244",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28244/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28244/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28244/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28244",
          "number": 28244,
          "state": "closed",
          "state_reason": null,
          "title": "Break up script/standard.{h/cpp}",
          "body": "Some future work needs to touch things in script/standard.{h/cpp}, however it is unclear if it is safe to do so as they are included in several different places that could effect standardness and consensus. It contains a mix of policy parameters, consensus parameters, and utilities only used by the wallet. This PR breaks up the various components and renames the files to clearly separate everything.\r\n\r\n* `CTxDestination` is moved to a new file `src/addresstype.{cpp/h}`\r\n* `TaprootSpendData` and `TaprootBuilder` (and their utility functions and structs) are moved to `SigningProvider` as these are used only during signing.\r\n* `CScriptID` is moved to `script/script.h` to be next to `CScript`.\r\n* `MANDATORY_SCRIPT_VERIFY_FLAGS` is moved to `interpreter.h`\r\n* The parameters `DEFAULT_ACCEPT_DATACARRIER` and `MAX_OP_RETURN_RELAY` are moved to `policy.h`\r\n* `standard.{cpp/h}` is renamed to `solver.{cpp/h}` since that's all that's left in the file after the above moves",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 9,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28244",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28244",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28244.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28244.patch"
          },
          "closed_at": "2023-08-17T11:54:27Z",
          "created_at": "2023-08-09T11:43:57Z",
          "updated_at": "2023-08-30T02:14:20Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-11T01:03:42Z",
      "updated_at": "2023-08-11T01:03:42Z",
      "source": {
        "issue": {
          "id": 1839231006,
          "node_id": "PR_kwDOABII585XUswB",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28230",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28230/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28230/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28230/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28230",
          "number": 28230,
          "state": "closed",
          "state_reason": null,
          "title": "rpc: Add MaybeArg() and Arg() default helper",
          "body": "Currently the RPC method implementations have many issues:\r\n\r\n* Default RPC argument values (and their optionality state) are duplicated in the documentation and the C++ code, with no checks to prevent them from going out of sync.\r\n* Getting an optional RPC argument is verbose, using a ternary operator, or worse, a multi-line `if`.\r\n\r\nFix all issues by adding default helper that can be called via `self.Arg<int>(0)`. The helper needs a few lines of code in the `src/rpc/util.h` header file. Everything else will be implemented in the cpp file once and if an RPC method needs it.\r\n\r\nThere is also an `self.MaybeArg<int>(0)` helper that works on any arg to return the argument, the default, or a falsy value.",
          "user": {
            "login": "maflcko",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maflcko",
            "html_url": "https://github.com/maflcko",
            "followers_url": "https://api.github.com/users/maflcko/followers",
            "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
            "organizations_url": "https://api.github.com/users/maflcko/orgs",
            "repos_url": "https://api.github.com/users/maflcko/repos",
            "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/maflcko/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 12,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28230",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28230",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28230.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28230.patch"
          },
          "closed_at": "2023-08-24T10:57:22Z",
          "created_at": "2023-08-07T11:14:00Z",
          "updated_at": "2023-08-24T12:22:58Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-11T01:54:50Z",
      "updated_at": "2023-08-11T01:54:50Z",
      "source": {
        "issue": {
          "id": 1833304785,
          "node_id": "PR_kwDOABII585XBDwg",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28200",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28200/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28200/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28200/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28200",
          "number": 28200,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: Remove unused includes from wallet.cpp",
          "body": "This makes compilation of wallet.cpp use a few % less memory and time, locally.\r\n\r\nCreated in the context of https://github.com/bitcoin/bitcoin/issues/28109, but I don't think it is enough to actually fix this problem.",
          "user": {
            "login": "maflcko",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maflcko",
            "html_url": "https://github.com/maflcko",
            "followers_url": "https://api.github.com/users/maflcko/followers",
            "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
            "organizations_url": "https://api.github.com/users/maflcko/orgs",
            "repos_url": "https://api.github.com/users/maflcko/repos",
            "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/maflcko/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 18,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28200",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28200",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28200.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28200.patch"
          },
          "closed_at": "2023-08-22T09:34:19Z",
          "created_at": "2023-08-02T14:29:39Z",
          "updated_at": "2023-08-22T09:48:55Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-11T02:05:36Z",
      "updated_at": "2023-08-11T02:05:36Z",
      "source": {
        "issue": {
          "id": 1829455691,
          "node_id": "PR_kwDOABII585W0E2y",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28193",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28193/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28193/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28193/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28193",
          "number": 28193,
          "state": "open",
          "state_reason": null,
          "title": "test: add script compression coverage for not-on-curve P2PK outputs",
          "body": "This PR adds unit test coverage for the script compression functions `{Compress,Decompress}Script` in the special case of uncompressed P2PK outputs (scriptPubKey: OP_PUSH65 <0x04 ....> OP_CHECKSIG) with [pubkeys that are not fully valid](https://github.com/bitcoin/bitcoin/blob/44b05bf3fef2468783dcebf651654fdd30717e7e/src/pubkey.cpp#L297-L302), i.e. where the encoded point is not on the secp256k1 curve. For those outputs, script compression is not possible, as the y coordinate of the pubkey can't be recovered (see also call-site of `IsToPubKey`):\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/44b05bf3fef2468783dcebf651654fdd30717e7e/src/compressor.cpp#L49-L50\r\n\r\nLikewise, for a compressed script of an uncompressed P2PK script (i.e. compression ids 4 and 5) where the x coordinate is not on the curve, decompression fails:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/44b05bf3fef2468783dcebf651654fdd30717e7e/src/compressor.cpp#L122-L129\r\n\r\nNote that the term \"compression\" is used here in two different meanings (though they are related), which might be a little confusing. The encoding of a pubkey can either be compressed (33-bytes with 0x02/0x03 prefixes) or uncompressed (65-bytes with 0x04 prefix). On the other hand there is also compression for whole output scripts, which is used for storing scriptPubKeys in the UTXO set in a compact way (and also for the `dumptxoutset` result, accordingly). P2PK output scripts with uncompressed pubkeys get compressed by storing only the x-coordinate and the sign as a prefix (0x04 = even, 0x05 = odd). Was diving deeper into the subject while working on https://github.com/bitcoin/bitcoin/pull/27432, where the script decompression of uncompressed P2PK needed special handling (see also https://github.com/bitcoin/bitcoin/issues/24628#issuecomment-1108798536).\r\n\r\nTrivia: as of now (block 801066), there are 13 uncompressed P2PK outputs in the UTXO set with a pubkey not on the curve (which obviously means they are unspendable).",
          "user": {
            "login": "theStack",
            "id": 91535,
            "node_id": "MDQ6VXNlcjkxNTM1",
            "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/theStack",
            "html_url": "https://github.com/theStack",
            "followers_url": "https://api.github.com/users/theStack/followers",
            "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
            "organizations_url": "https://api.github.com/users/theStack/orgs",
            "repos_url": "https://api.github.com/users/theStack/repos",
            "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/theStack/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 1,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28193",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28193",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28193.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28193.patch"
          },
          "created_at": "2023-07-31T15:22:04Z",
          "updated_at": "2024-02-15T01:27:07Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-11T04:47:44Z",
      "updated_at": "2023-08-11T04:47:44Z",
      "source": {
        "issue": {
          "id": 1753342247,
          "node_id": "PR_kwDOABII585SzfoS",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27865",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27865/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27865/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27865/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27865",
          "number": 27865,
          "state": "open",
          "state_reason": null,
          "title": "wallet: Track no-longer-spendable TXOs separately",
          "body": "In #27286, the wallet keeps track of all of its transaction outputs, even if they are already spent or are otherwise unspendable. This TXO set is iterated for balance checking and coin selection preparation, which can still be slow for wallets that have had a lot of activity. This PR aims to improve the performance of such wallets by moving UTXOs that are definitely no longer spendable to a different map in the wallet so that far fewer TXOs need to be iterated for the aforementioned functions.\r\n\r\nUnspendable TXOs (not to be confused with Unspent TXOs) are those which have a spending transaction that has been confirmed, or are no longer valid due to reorgs. TXOs that are spent in unconfirmed transactions remain in the primary TXO set, and are filtered out of balance and coin selection as before.\r\n\r\nDepends on #27286",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 7,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27865",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27865",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27865.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27865.patch"
          },
          "created_at": "2023-06-12T18:40:10Z",
          "updated_at": "2024-02-20T11:54:19Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-11T04:55:43Z",
      "updated_at": "2023-08-11T04:55:43Z",
      "source": {
        "issue": {
          "id": 1750967441,
          "node_id": "PR_kwDOABII585SrjUA",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27850",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27850/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27850/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27850/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27850",
          "number": 27850,
          "state": "closed",
          "state_reason": null,
          "title": "test: Add unit & functional test coverage for blockstore",
          "body": "This PR adds unit and functional tests to cover the behavior described in #2039. In particular, that bitcoind will crash on startup if a reindex is requested but the `blk` files are read-only. Eventually this behavior can be updated with https://github.com/bitcoin/bitcoin/pull/27039. This PR just commits the test coverage from #27039 as suggested in https://github.com/bitcoin/bitcoin/pull/27039#issuecomment-1584915782\r\n\r\n",
          "user": {
            "login": "pinheadmz",
            "id": 2084648,
            "node_id": "MDQ6VXNlcjIwODQ2NDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pinheadmz",
            "html_url": "https://github.com/pinheadmz",
            "followers_url": "https://api.github.com/users/pinheadmz/followers",
            "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
            "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
            "repos_url": "https://api.github.com/users/pinheadmz/repos",
            "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 45,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27850",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27850",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27850.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27850.patch"
          },
          "closed_at": "2023-09-14T17:21:39Z",
          "created_at": "2023-06-10T13:14:19Z",
          "updated_at": "2023-10-16T15:34:16Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-11T05:58:03Z",
      "updated_at": "2023-08-11T05:58:03Z",
      "source": {
        "issue": {
          "id": 1700935080,
          "node_id": "PR_kwDOABII585QCV04",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27601",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27601/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27601/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27601/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27601",
          "number": 27601,
          "state": "open",
          "state_reason": null,
          "title": "wallet: don't duplicate change output if already exist",
          "body": "If the transaction includes an output that goes to the custom change\r\naddress (`CoinControl::destChange`), the transaction creation process\r\nshould avoid creating duplicate outputs to the same address.\r\n\r\nInstead, it should reuse the existing output to prevent revealing which\r\naddress is the change address, which could compromise privacy.\r\n\r\nThis will also be useful to make other wallet processes less confusing\r\nand error-prone. For instance, within the bumpfee functionality, we\r\nmanually extract the change recipient from the transaction before calling\r\n'CreateTransaction' to ensure that the change output is not duplicated.\r\n\r\nSide note:\r\nThis is something that will be using for the #26732 rework.",
          "user": {
            "login": "furszy",
            "id": 5377650,
            "node_id": "MDQ6VXNlcjUzNzc2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/furszy",
            "html_url": "https://github.com/furszy",
            "followers_url": "https://api.github.com/users/furszy/followers",
            "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
            "organizations_url": "https://api.github.com/users/furszy/orgs",
            "repos_url": "https://api.github.com/users/furszy/repos",
            "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/furszy/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 16,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27601",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27601",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27601.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27601.patch"
          },
          "created_at": "2023-05-08T21:03:48Z",
          "updated_at": "2024-01-05T10:43:05Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-11T07:14:14Z",
      "updated_at": "2023-08-11T07:14:14Z",
      "source": {
        "issue": {
          "id": 1625214363,
          "node_id": "PR_kwDOABII585MFwU7",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27260",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27260/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27260/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27260/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27260",
          "number": 27260,
          "state": "open",
          "state_reason": null,
          "title": "Enhanced error messages for invalid network prefix during address parsing.",
          "body": "### **Issue:**\r\n\r\nSimply `DecodeDestination` does not handle errors where the user inputs a valid address for the wrong network. _e.x. testnet while running client on mainnet_  \r\n\r\nThe current error `not a valid Bech32 or Base58 encoding` for a valid address on a different network is entirely incorrect. This is because of the is_bech32 variable used at the core of `DecodeDestination` logic  only checks that the prefix matches. If it doesn't it just starts running everything as `DecodeBase58Check` regardless if the Bech32 String was actually valid.\r\n\r\n### **Proposed Solution:**\r\n\r\nBase58 Addresses with invalid prefixes will now display network and expected values.\r\n\r\n- previous: `Invalid or unsupported Base58-encoded address.`\r\n- 27260 `Invalid or unsupported Base58 testnet address. Expected prefix m, n, or 2`\r\n\r\nBech32 Addresses with invalid prefixes will now display network and expected values. The current from of the error is completely incorrect when the user passes valid Bech32 for the wrong network.\r\n\r\n- previous: `Invalid or unsupported Segwit (Bech32) or Base58 encoding.`\r\n- 27260: `Invalid chain prefix for testnet. Expected tb got bc`\r\n\r\n### **Reference**\r\nhttps://github.com/bitcoin/bitcoin/issues/26290\r\n### **Implementation :**\r\nSimply put, don't delay the attempt to decode the string as Bech32 using Bech32::Decode(str). This takes a minimal amount CPU cycles to perform and is acceptable to do since this operation is not performed often. \r\n\r\nOnce you get the decoding status of the string as bech32, do the same with DecodeBase58 using a len of 100 and DecodeBase58Check. This gives you enough information to start properly decoding errors. \r\n\r\nAfter you have decoded the address in various formats run though the logic and display errors for invalid addresses with the network names and expected values when the user just misses the prefix.\r\n\r\n**Update 1**: https://github.com/bitcoin/bitcoin/pull/27260#issuecomment-1628375439\r\n\r\n### **Other Notes**\r\n\r\n- Previous errors had inconsistencies such as random periods in some errors and not others. Using the word encoded in some errors and not others. This has been resolved.\r\n\r\n<!--\r\n*** Please remove the following help text before submitting: ***\r\n\r\nPull requests without a rationale and clear improvement may be closed\r\nimmediately.\r\n\r\nGUI-related pull requests should be opened against\r\nhttps://github.com/bitcoin-core/gui\r\nfirst. See CONTRIBUTING.md\r\n-->\r\n\r\n<!--\r\nPlease provide clear motivation for your patch and explain how it improves\r\nBitcoin Core user experience or Bitcoin Core developer experience\r\nsignificantly:\r\n\r\n* Any test improvements or new tests that improve coverage are always welcome.\r\n* All other changes should have accompanying unit tests (see `src/test/`) or\r\n  functional tests (see `test/`). Contributors should note which tests cover\r\n  modified code. If no tests exist for a region of modified code, new tests\r\n  should accompany the change.\r\n* Bug fixes are most welcome when they come with steps to reproduce or an\r\n  explanation of the potential issue as well as reasoning for the way the bug\r\n  was fixed.\r\n* Features are welcome, but might be rejected due to design or scope issues.\r\n  If a feature is based on a lot of dependencies, contributors should first\r\n  consider building the system outside of Bitcoin Core, if possible.\r\n* Refactoring changes are only accepted if they are required for a feature or\r\n  bug fix or otherwise improve developer experience significantly. For example,\r\n  most \"code style\" refactoring changes require a thorough explanation why they\r\n  are useful, what downsides they have and why they *significantly* improve\r\n  developer experience or avoid serious programming bugs. Note that code style\r\n  is often a subjective matter. Unless they are explicitly mentioned to be\r\n  preferred in the [developer notes](/doc/developer-notes.md), stylistic code\r\n  changes are usually rejected.\r\n-->\r\n\r\n<!--\r\nBitcoin Core has a thorough review process and even the most trivial change\r\nneeds to pass a lot of eyes and requires non-zero or even substantial time\r\neffort to review. There is a huge lack of active reviewers on the project, so\r\npatches often sit for a long time.\r\n-->\r\n",
          "user": {
            "login": "russeree",
            "id": 3104223,
            "node_id": "MDQ6VXNlcjMxMDQyMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3104223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/russeree",
            "html_url": "https://github.com/russeree",
            "followers_url": "https://api.github.com/users/russeree/followers",
            "following_url": "https://api.github.com/users/russeree/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/russeree/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/russeree/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/russeree/subscriptions",
            "organizations_url": "https://api.github.com/users/russeree/orgs",
            "repos_url": "https://api.github.com/users/russeree/repos",
            "events_url": "https://api.github.com/users/russeree/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/russeree/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 12,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27260",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27260",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27260.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27260.patch"
          },
          "created_at": "2023-03-15T10:17:16Z",
          "updated_at": "2024-02-12T22:26:17Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-11T09:16:54Z",
      "updated_at": "2023-08-11T09:16:54Z",
      "source": {
        "issue": {
          "id": 1464474508,
          "node_id": "PR_kwDOABII585DtIR7",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26573",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26573/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26573/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26573/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26573",
          "number": 26573,
          "state": "open",
          "state_reason": null,
          "title": "Wallet: don't underestimate the fees when spending a Taproot output",
          "body": "Alternative to #23502.\r\n\r\nCurrently, when estimating the size an input spending a Taproot output will have once signed, we always assume the key path will be used. Even if there are script paths. This can lead to pretty severe fee underestimation if the script path turns out to be used in the end. So instead assume the most expensive between all script paths and the key path will be used.\r\n\r\nThis is still not ideal, as there may be a huge gap between the size of a script path spend and a key path spend. Still, this is less bad than undershooting the fees.",
          "user": {
            "login": "darosior",
            "id": 22457751,
            "node_id": "MDQ6VXNlcjIyNDU3NzUx",
            "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/darosior",
            "html_url": "https://github.com/darosior",
            "followers_url": "https://api.github.com/users/darosior/followers",
            "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
            "organizations_url": "https://api.github.com/users/darosior/orgs",
            "repos_url": "https://api.github.com/users/darosior/repos",
            "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/darosior/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 7,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26573",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26573",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26573.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26573.patch"
          },
          "created_at": "2022-11-25T12:21:59Z",
          "updated_at": "2024-01-13T22:07:16Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-11T09:19:49Z",
      "updated_at": "2023-08-11T09:19:49Z",
      "source": {
        "issue": {
          "id": 1463636841,
          "node_id": "PR_kwDOABII585DqW4U",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26567",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26567/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26567/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26567/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26567",
          "number": 26567,
          "state": "closed",
          "state_reason": null,
          "title": "Wallet: estimate the size of signed inputs using descriptors",
          "body": "The wallet currently estimates the size of a signed input by doing a dry run of the signing logic. This is unnecessary since all outputs we can sign for can be represented by a descriptor, and we can derive the size of a satisfaction (\"signature\") directly from the descriptor itself.\r\nIn addition, the current approach does not generalize well: dry runs of the signing logic are only possible for the most basic scripts. See for instance the discussion in #24149 around that.\r\n\r\nThis introduces a method to get the maximum size of a satisfaction from a descriptor, and makes the wallet use that instead of the dry-run.",
          "user": {
            "login": "darosior",
            "id": 22457751,
            "node_id": "MDQ6VXNlcjIyNDU3NzUx",
            "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/darosior",
            "html_url": "https://github.com/darosior",
            "followers_url": "https://api.github.com/users/darosior/followers",
            "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
            "organizations_url": "https://api.github.com/users/darosior/orgs",
            "repos_url": "https://api.github.com/users/darosior/repos",
            "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/darosior/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/60",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/60",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/60/labels",
            "id": 9286970,
            "node_id": "MI_kwDOABII584AjbU6",
            "number": 60,
            "state": "closed",
            "title": "26.0",
            "description": "",
            "creator": {
              "login": "fanquake",
              "id": 863730,
              "node_id": "MDQ6VXNlcjg2MzczMA==",
              "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/fanquake",
              "html_url": "https://github.com/fanquake",
              "followers_url": "https://api.github.com/users/fanquake/followers",
              "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
              "organizations_url": "https://api.github.com/users/fanquake/orgs",
              "repos_url": "https://api.github.com/users/fanquake/repos",
              "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/fanquake/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 116,
            "created_at": "2023-04-15T11:36:05Z",
            "updated_at": "2023-12-08T10:41:40Z",
            "closed_at": "2023-12-04T13:27:46Z"
          },
          "locked": false,
          "comments": 11,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26567",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26567",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26567.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26567.patch"
          },
          "closed_at": "2023-09-06T17:31:32Z",
          "created_at": "2022-11-24T17:15:50Z",
          "updated_at": "2023-11-11T04:33:08Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-11T09:39:39Z",
      "updated_at": "2023-08-11T09:39:39Z",
      "source": {
        "issue": {
          "id": 1426214940,
          "node_id": "PR_kwDOABII585BsmgJ",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26403",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26403/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26403/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26403/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26403",
          "number": 26403,
          "state": "closed",
          "state_reason": null,
          "title": "policy: Ephemeral anchors",
          "body": "TODO:\r\n\r\nI'll be updating to segwit variant soon, with updated BIP text.\r\n\r\n-----\r\n\r\nBuilds on top of https://github.com/bitcoin/bitcoin/pull/25038 for consideration of inclusion to the proposal. Requires V3, for simplicity of reasoning and usage. Implementation of idea written out at https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-October/021036.html\r\n\r\nBIP text here: https://github.com/instagibbs/bips/blob/ephemeral_anchor/bip-ephemeralanchors.mediawiki\r\n",
          "user": {
            "login": "instagibbs",
            "id": 5767891,
            "node_id": "MDQ6VXNlcjU3Njc4OTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/instagibbs",
            "html_url": "https://github.com/instagibbs",
            "followers_url": "https://api.github.com/users/instagibbs/followers",
            "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
            "organizations_url": "https://api.github.com/users/instagibbs/orgs",
            "repos_url": "https://api.github.com/users/instagibbs/repos",
            "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/instagibbs/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 82428251,
              "node_id": "MDU6TGFiZWw4MjQyODI1MQ==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/TX%20fees%20and%20policy",
              "name": "TX fees and policy",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            },
            {
              "id": 1392286103,
              "node_id": "MDU6TGFiZWwxMzkyMjg2MTAz",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20Conceptual%20Review",
              "name": "Needs Conceptual Review",
              "description": "",
              "color": "fef2c0",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 29,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26403",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26403",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26403.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26403.patch"
          },
          "closed_at": "2023-12-05T16:30:56Z",
          "created_at": "2022-10-27T20:14:15Z",
          "updated_at": "2023-12-05T16:30:56Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-11T10:01:43Z",
      "updated_at": "2023-08-11T10:01:43Z",
      "source": {
        "issue": {
          "id": 1404015373,
          "node_id": "PR_kwDOABII585Aich6",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26291",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26291/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26291/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26291/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26291",
          "number": 26291,
          "state": "closed",
          "state_reason": null,
          "title": "Update MANDATORY_SCRIPT_VERIFY_FLAGS",
          "body": "The `MANDATORY_SCRIPT_VERIFY_FLAGS` constant was introduced in #3843 to distinguish between block consensus rules and relay standardness rules. However it was not actually used in the consensus code path: instead it only differentiates between the failure being reported as `TX_CONSENSUS` and `mandatory-script-verify-flag-failed` vs `TX_NOT_STANDARD` and `non-mandatory-script-verify-flag`.\r\n\r\nThis updates the list of mandatory flags to include the post-p2sh soft forks that are enforced as consensus rules via `GetBlockScriptFlags()`. The effect of this change is that validation.cpp will report `TX_CONSENSUS` failures for txs that fail dersig/csv/cltv/nulldummy/witness/taproot checks, instead of `TX_NOT_STANDARD`, which in turn adds `Misbehaving(100)` via `MaybePunishNodeForTx` in `net_processing`.",
          "user": {
            "login": "ajtowns",
            "id": 127186,
            "node_id": "MDQ6VXNlcjEyNzE4Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ajtowns",
            "html_url": "https://github.com/ajtowns",
            "followers_url": "https://api.github.com/users/ajtowns/followers",
            "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
            "organizations_url": "https://api.github.com/users/ajtowns/orgs",
            "repos_url": "https://api.github.com/users/ajtowns/repos",
            "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ajtowns/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 27,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26291",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26291",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26291.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26291.patch"
          },
          "closed_at": "2023-08-23T20:19:57Z",
          "created_at": "2022-10-11T05:13:43Z",
          "updated_at": "2023-08-23T20:19:58Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-11T11:09:53Z",
      "updated_at": "2023-08-11T11:09:53Z",
      "source": {
        "issue": {
          "id": 1260256447,
          "node_id": "PR_kwDOABII5845Fj6p",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25273",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25273/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25273/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25273/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25273",
          "number": 25273,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: Pass through transaction locktime and preset input sequences and scripts to CreateTransaction",
          "body": "Currently `FundTransaction` handles transaction locktime and preset input data by extracting the selected inputs and change output from `CreateTransaction`'s results. This means that `CreateTransaction` is actually unaware of any user desired locktime or sequence numbers. This can have an effect on whether and how anti-fee-sniping works.\r\n\r\nThis PR makes `CreateTransaction` aware of the locktime and preset input data by providing them to `CCoinControl`. `CreateTransasction` will then set the sequences, scriptSigs, scriptWItnesses, and locktime as appropriate if they are specified. This allows `FundTransaction` to actually use `CreateTransaction`'s result directly instead of having to extract the parts of it that it wants.\r\n\r\nAdditionally `FundTransaction` will return a `CreateTransactionResult` as `CreateTransaction` does instead of having several output parameters. Lastly, instead of using `-1` as a magic number for the change output position, the change position is changed to be an optional with no value set indicating no desired change output position (when provided as an input parameter) or no change output present (in the result).",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 13,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25273",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25273",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25273.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25273.patch"
          },
          "closed_at": "2023-12-11T15:29:36Z",
          "created_at": "2022-06-03T18:58:15Z",
          "updated_at": "2023-12-12T12:52:23Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-11T11:30:21Z",
      "updated_at": "2023-08-11T11:30:21Z",
      "source": {
        "issue": {
          "id": 1111576675,
          "node_id": "PR_kwDOABII584xcXBo",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24128",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24128/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24128/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24128/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/24128",
          "number": 24128,
          "state": "open",
          "state_reason": null,
          "title": "wallet: BIP 326 sequence based anti-fee-snipe for taproot inputs",
          "body": "The goal of BIP 326 is to provide a \"privacy cloak\" for txs that use sequence-based locking. This is only possible for taproot inputs, as taproot spends may look identical for \"dumb wallets\" and \"smart contracts\" iff they use the key-path spend.\r\n\r\nSequence-based locking has minimally lower anti-fee sniping guarantees if all the txs that created the inputs aren't itself locked to the block they were included in. However, the minimal degradation should be acceptable, given that anti-fee-snipe will set the locktime to the past of 10% of the txs anyway.",
          "user": {
            "login": "maflcko",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maflcko",
            "html_url": "https://github.com/maflcko",
            "followers_url": "https://api.github.com/users/maflcko/followers",
            "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
            "organizations_url": "https://api.github.com/users/maflcko/orgs",
            "repos_url": "https://api.github.com/users/maflcko/repos",
            "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/maflcko/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24128",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/24128",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/24128.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/24128.patch"
          },
          "created_at": "2022-01-22T14:12:15Z",
          "updated_at": "2024-01-25T14:48:17Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-11T11:58:15Z",
      "updated_at": "2023-08-11T11:58:15Z",
      "source": {
        "issue": {
          "id": 983140832,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NzIyNzY4MTc5",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22838",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22838/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22838/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22838/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/22838",
          "number": 22838,
          "state": "open",
          "state_reason": null,
          "title": "descriptors: Be able to specify change and receiving in a single descriptor string",
          "body": "It is convenient to have a descriptor which specifies both receiving and change addresses in a single string. However, as discussed in https://github.com/bitcoin/bitcoin/issues/17190#issuecomment-895515768, it is not feasible to use a generic multipath specification like BIP 88 due to combinatorial blow up and that it would result in unexpected descriptors.\r\n\r\nTo resolve that problem, this PR proposes a targeted solution which allows only a single pair of 2 derivation indexes to be inserted in the place of a single derivation index. So instead of two descriptor `wpkh(xpub.../0/0/*)` and `wpkh(xpub.../0/1/*)` to represent receive and change addresses, this could be written as `wpkh(xpub.../0/<0;1>/*)`. The multipath specifier is of the form `<NUM;NUM>`. Each `NUM` can have its own hardened specifier, e.g. `<0;1h>` is valid. The multipath specifier can also only appear in one path index in the derivation path.\r\n\r\nThis results in the parser returning two descriptors. The first descriptor uses the first `NUM` in all pairs present, and the second uses the second `NUM`. In our implementation, if a multipath descriptor is not provided, a pair is still returned, but the second element is just `nullptr`.\r\n\r\nThe wallet will not output the multipath descriptors (yet). Furthermore, when a multipath descriptor is imported, it is expanded to the two descriptors and each imported on its own, with the second descriptor being implicitly for internal (change) addresses. There is no change to how the wallet stores or outputs descriptors (yet).\r\n\r\nNote that the path specifier is different from what was proposed. It uses angle brackets and the semicolon because these are unused characters available in the character set and I wanted to avoid conflicts with characters already in use in descriptors.\r\n\r\nCloses #17190 ",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 1482182044,
              "node_id": "MDU6TGFiZWwxNDgyMTgyMDQ0",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Descriptors",
              "name": "Descriptors",
              "description": "",
              "color": "e9f76c",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 40,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22838",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/22838",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/22838.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/22838.patch"
          },
          "created_at": "2021-08-30T19:46:34Z",
          "updated_at": "2024-02-10T16:37:10Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-11T12:35:28Z",
      "updated_at": "2023-08-11T12:35:28Z",
      "source": {
        "issue": {
          "id": 814723992,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NTc4NjY1NDk1",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21283",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21283/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21283/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21283/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/21283",
          "number": 21283,
          "state": "open",
          "state_reason": null,
          "title": "Implement BIP 370 PSBTv2",
          "body": "BIP 370 PSBTv2 introduces several new fields and different invariants for PSBT. This PR implements those new fields and restructures the PSBT implementation to match PSBTv2 but still remain compatible with PSBTv0.",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135946,
              "node_id": "MDU6TGFiZWwxMzU5NDY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/GUI",
              "name": "GUI",
              "color": "02d7e1",
              "default": false
            },
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 8,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21283",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/21283",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/21283.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/21283.patch"
          },
          "created_at": "2021-02-23T18:29:20Z",
          "updated_at": "2024-02-10T16:48:19Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10080436896,
      "node_id": "HRFPE_lADOABII585sQXuIzwAAAAJY10Kg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10080436896",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-13T19:15:23Z"
    },
    {
      "event": "unsubscribed",
      "id": 10096263969,
      "node_id": "UE_lADOABII585sQXuIzwAAAAJZyMMh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10096263969",
      "actor": {
        "login": "dellroy979",
        "id": 135130941,
        "node_id": "U_kgDOCA3vPQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/135130941?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dellroy979",
        "html_url": "https://github.com/dellroy979",
        "followers_url": "https://api.github.com/users/dellroy979/followers",
        "following_url": "https://api.github.com/users/dellroy979/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dellroy979/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dellroy979/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dellroy979/subscriptions",
        "organizations_url": "https://api.github.com/users/dellroy979/orgs",
        "repos_url": "https://api.github.com/users/dellroy979/repos",
        "events_url": "https://api.github.com/users/dellroy979/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dellroy979/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-15T11:51:18Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-15T14:22:40Z",
      "updated_at": "2023-08-15T14:22:40Z",
      "source": {
        "issue": {
          "id": 1120958552,
          "node_id": "PR_kwDOABII584x6sdb",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24230",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24230/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24230/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24230/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/24230",
          "number": 24230,
          "state": "open",
          "state_reason": null,
          "title": "indexes: Stop using node internal types and locking cs_main, improve sync logic",
          "body": "This PR lets indexing code mostly run outside of the node process. It also improves indexing sync logic, which is moved out of indexing code to a new [`node::SyncChain()`](https://github.com/ryanofsky/bitcoin/blob/8d8cdcb37005030f646ba3c45f7f54f556efb8bf/src/node/chain.h#L24-L39) function.\r\n\r\nAlmost all the commits in this PR are small refactoring changes that move code from `src/index/` to `src/node/`, or replace references to node types like `CBlockIndex`, `CChain`, `CChainState` in index code. There are only two commits affecting indexing sync logic which make complicated or substantive changes:\r\n\r\n- [`8746b35301c5` indexes: Rewrite chain sync logic, remove racy init](https://github.com/bitcoin/bitcoin/pull/24230/commits/8746b35301c5f65ff3200555fb2b82417fd2c758)\r\n- [`ad88f50ddd12` indexes: Initialize indexes without holding cs_main](https://github.com/bitcoin/bitcoin/pull/24230/commits/ad88f50ddd129dddd974bbf9fd7d86ec86b65508)\r\n\r\n\r\nThe commit messages have more details about these and other changes. Followups to this PR will reuse indexing sync code for wallets (#15719, #11756) and let indexes run in separate processes (#10102)",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 97470796,
              "node_id": "MDU6TGFiZWw5NzQ3MDc5Ng==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/UTXO%20Db%20and%20Indexes",
              "name": "UTXO Db and Indexes",
              "color": "fbca04",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 41,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24230",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/24230",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/24230.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/24230.patch"
          },
          "created_at": "2022-02-01T16:56:28Z",
          "updated_at": "2024-01-28T12:00:35Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1579452859,
      "node_id": "PRR_kwDOABII585eJIm7",
      "url": null,
      "actor": null,
      "commit_id": "39bdab96d6f5cbc06f073bec550ea6ee50cbab69",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#pullrequestreview-1579452859",
      "submitted_at": "2023-08-15T23:56:57Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
    },
    {
      "event": "commented",
      "id": 1681933926,
      "node_id": "IC_kwDOABII585kQEZm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1681933926",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-17T09:21:18Z",
      "updated_at": "2023-08-17T09:21:18Z",
      "author_association": "MEMBER",
      "body": "Maybe mark as draft while CI is red and this is based on other pulls?",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#issuecomment-1681933926",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28122"
    },
    {
      "event": "labeled",
      "id": 10119766111,
      "node_id": "LE_lADOABII585sQXuIzwAAAAJbL2Bf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10119766111",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-17T13:49:57Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1686188111,
      "node_id": "IC_kwDOABII585kgTBP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1686188111",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-21T11:53:22Z",
      "updated_at": "2023-08-21T11:53:22Z",
      "author_association": "MEMBER",
      "body": "#28244 was merged",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#issuecomment-1686188111",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28122"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10153939325,
      "node_id": "HRFPE_lADOABII585sQXuIzwAAAAJdONF9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10153939325",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-22T06:43:16Z"
    },
    {
      "event": "commented",
      "id": 1687568516,
      "node_id": "IC_kwDOABII585klkCE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1687568516",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-22T06:46:40Z",
      "updated_at": "2023-08-22T06:46:40Z",
      "author_association": "MEMBER",
      "body": "> #28244 was merged\r\n\r\nAwesome! I rebased on https://github.com/bitcoin/bitcoin/pull/28246, will respond to outstanding review comments today/tomorrow.",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#issuecomment-1687568516",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28122"
    },
    {
      "event": "unlabeled",
      "id": 10155036767,
      "node_id": "UNLE_lADOABII585sQXuIzwAAAAJdSZBf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10155036767",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-22T08:16:33Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10160760871,
      "node_id": "HRFPE_lADOABII585sQXuIzwAAAAJdoOgn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10160760871",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-22T16:29:56Z"
    },
    {
      "event": "unlabeled",
      "id": 10161576358,
      "node_id": "UNLE_lADOABII585sQXuIzwAAAAJdrVmm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10161576358",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-22T18:00:18Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 10161625256,
      "node_id": "LE_lADOABII585sQXuIzwAAAAJdrhio",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10161625256",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-22T18:06:10Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10207541206,
      "node_id": "HRFPE_lADOABII585sQXuIzwAAAAJgarfW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10207541206",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-28T10:31:29Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10209580013,
      "node_id": "HRFPE_lADOABII585sQXuIzwAAAAJgidPt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10209580013",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-28T13:53:45Z"
    },
    {
      "event": "reviewed",
      "id": 1599171329,
      "node_id": "PRR_kwDOABII585fUWsB",
      "url": null,
      "actor": null,
      "commit_id": "e3f9217ffb9457fcc54d589616f5c752ce15e6e5",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#pullrequestreview-1599171329",
      "submitted_at": "2023-08-28T21:42:41Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T08:12:16Z",
      "updated_at": "2023-08-29T08:12:16Z",
      "source": {
        "issue": {
          "id": 1871131955,
          "node_id": "PR_kwDOABII585ZAc5f",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28361",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28361/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28361/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28361/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28361",
          "number": 28361,
          "state": "closed",
          "state_reason": null,
          "title": "fuzz: add ConstructPubKeyBytes util function",
          "body": "In https://github.com/bitcoin/bitcoin/pull/28246 and https://github.com/bitcoin/bitcoin/pull/28122 , we add a `PubKeyDestination` and a `V0SilentPaymentsDestination`. Both of these PRs update `fuzz/util.cpp` and need a way to create well-formed pubkeys. Currently in `fuzz/util.cpp`, we have some logic for creating pubkeys in the multisig data provider. This logic is duplicated in #28246 and duplicated again in #28122. Seems much better to have a `ConstructPubKeyBytes` function that both PRs (and any future work) can reuse.\r\n\r\nThis PR introduces a function to do this and has the existing code use it. While the purpose is to introduce a utility function, the previous multisig code used `ConsumeIntegralInRange(4, 7)` which would have created some uncompressed pubkeys with the prefix 0x05, which is incorrect (see https://bitcoin.stackexchange.com/questions/57855/c-secp256k1-what-do-prefixes-0x06-and-0x07-in-an-uncompressed-public-key-signif)\r\n\r\ntldr; using `PickValueFromArray` is more correct as it limits to the set of defined prefixes for compressed and uncompressed pubkeys.",
          "user": {
            "login": "josibake",
            "id": 7444140,
            "node_id": "MDQ6VXNlcjc0NDQxNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/josibake",
            "html_url": "https://github.com/josibake",
            "followers_url": "https://api.github.com/users/josibake/followers",
            "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
            "organizations_url": "https://api.github.com/users/josibake/orgs",
            "repos_url": "https://api.github.com/users/josibake/repos",
            "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/josibake/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 22,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28361",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28361",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28361.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28361.patch"
          },
          "closed_at": "2023-09-07T15:22:26Z",
          "created_at": "2023-08-29T08:12:15Z",
          "updated_at": "2024-01-26T10:50:53Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10218055738,
      "node_id": "HRFPE_lADOABII585sQXuIzwAAAAJhCyg6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10218055738",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T08:33:07Z"
    },
    {
      "event": "commented",
      "id": 1697054141,
      "node_id": "IC_kwDOABII585lJv29",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1697054141",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T09:06:48Z",
      "updated_at": "2023-08-29T09:09:36Z",
      "author_association": "MEMBER",
      "body": "In order to build the index PR #28241 directly on top of this and, more importantly, have more complete coverage of BIP 352 here, it would be useful to move `SumInputPubKeys` and  `HashOutpoints` from the send / receive PR's here. These define which types of inputs are considered and how outpoints must be sorted and hashed.\r\n\r\n(_update_: mmm, looking at the latest test vectors, maybe this functionality is already in here, just named differently)",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#issuecomment-1697054141",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28122"
    },
    {
      "event": "commented",
      "id": 1697055593,
      "node_id": "IC_kwDOABII585lJwNp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1697055593",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T09:07:45Z",
      "updated_at": "2023-08-29T09:07:45Z",
      "author_association": "MEMBER",
      "body": "Fixed CI and fuzzing errors, will be responding to unaddressed review comments",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#issuecomment-1697055593",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28122"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10229109264,
      "node_id": "HRFPE_lADOABII585sQXuIzwAAAAJhs9IQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10229109264",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-30T06:50:56Z"
    },
    {
      "event": "unlabeled",
      "id": 10229905413,
      "node_id": "UNLE_lADOABII585sQXuIzwAAAAJhv_gF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10229905413",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-30T08:12:44Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10235482217,
      "node_id": "HRFPE_lADOABII585sQXuIzwAAAAJiFRBp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10235482217",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-30T17:03:47Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10244567223,
      "node_id": "HRFPE_lADOABII585sQXuIzwAAAAJin7C3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10244567223",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-31T13:02:57Z"
    },
    {
      "event": "commented",
      "id": 1701008446,
      "node_id": "IC_kwDOABII585lY1Q-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1701008446",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-31T13:08:04Z",
      "updated_at": "2023-08-31T13:08:04Z",
      "author_association": "MEMBER",
      "body": "> In order to build the index PR #28241 directly on top of this and, more importantly, have more complete coverage of BIP 352 here, it would be useful to move `SumInputPubKeys` and `HashOutpoints` from the send / receive PR's here. These define which types of inputs are considered and how outpoints must be sorted and hashed.\r\n> \r\n> (_update_: mmm, looking at the latest test vectors, maybe this functionality is already in here, just named differently)\r\n\r\nI think the only thing missing now is `IsInputForSharedSecretDerivation`; I'll work on pulling that in next",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#issuecomment-1701008446",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28122"
    },
    {
      "event": "commented",
      "id": 1701222039,
      "node_id": "IC_kwDOABII585lZpaX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1701222039",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-31T15:03:43Z",
      "updated_at": "2023-08-31T15:03:43Z",
      "author_association": "MEMBER",
      "body": "@hebasto can you rerun the Win64 CI task?",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#issuecomment-1701222039",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28122"
    },
    {
      "event": "mentioned",
      "id": 10246085627,
      "node_id": "MEE_lADOABII585sQXuIzwAAAAJittv7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10246085627",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-31T15:03:43Z"
    },
    {
      "event": "subscribed",
      "id": 10246085646,
      "node_id": "SE_lADOABII585sQXuIzwAAAAJittwO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10246085646",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-31T15:03:43Z"
    },
    {
      "event": "referenced",
      "id": 10308826840,
      "node_id": "REFE_lADOABII585sQXuIzwAAAAJmdDbY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10308826840",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "238d29aff9b43234e340a9cf17742b2be5d1e97d",
      "commit_url": "https://api.github.com/repos/bitcoin-core/gui/commits/238d29aff9b43234e340a9cf17742b2be5d1e97d",
      "created_at": "2023-09-07T15:22:25Z"
    },
    {
      "event": "reviewed",
      "id": 1616725077,
      "node_id": "PRR_kwDOABII585gXURV",
      "url": null,
      "actor": null,
      "commit_id": "9d11390d008d551d9bf87b1d1c40ffa3da9aabf5",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "manjaneqx",
        "id": 139947479,
        "node_id": "U_kgDOCFdt1w",
        "avatar_url": "https://avatars.githubusercontent.com/u/139947479?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/manjaneqx",
        "html_url": "https://github.com/manjaneqx",
        "followers_url": "https://api.github.com/users/manjaneqx/followers",
        "following_url": "https://api.github.com/users/manjaneqx/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/manjaneqx/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/manjaneqx/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/manjaneqx/subscriptions",
        "organizations_url": "https://api.github.com/users/manjaneqx/orgs",
        "repos_url": "https://api.github.com/users/manjaneqx/repos",
        "events_url": "https://api.github.com/users/manjaneqx/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/manjaneqx/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#pullrequestreview-1616725077",
      "submitted_at": "2023-09-08T05:49:31Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10317595230,
      "node_id": "HRFPE_lADOABII585sQXuIzwAAAAJm-gJe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10317595230",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-08T12:23:02Z"
    },
    {
      "event": "referenced",
      "id": 10320465495,
      "node_id": "REFE_lADOABII585sQXuIzwAAAAJnJc5X",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10320465495",
      "actor": {
        "login": "Frank-GER",
        "id": 87550788,
        "node_id": "MDQ6VXNlcjg3NTUwNzg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/87550788?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Frank-GER",
        "html_url": "https://github.com/Frank-GER",
        "followers_url": "https://api.github.com/users/Frank-GER/followers",
        "following_url": "https://api.github.com/users/Frank-GER/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Frank-GER/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Frank-GER/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Frank-GER/subscriptions",
        "organizations_url": "https://api.github.com/users/Frank-GER/orgs",
        "repos_url": "https://api.github.com/users/Frank-GER/repos",
        "events_url": "https://api.github.com/users/Frank-GER/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Frank-GER/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "086142fb640370fb6dba7cb448aa1dce8d537a6c",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/086142fb640370fb6dba7cb448aa1dce8d537a6c",
      "created_at": "2023-09-08T17:08:37Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10331668099,
      "node_id": "HRFPE_lADOABII585sQXuIzwAAAAJn0L6D",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10331668099",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-11T09:34:03Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10332412686,
      "node_id": "HRFPE_lADOABII585sQXuIzwAAAAJn3BsO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10332412686",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-11T10:40:59Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10335366983,
      "node_id": "HRFPE_lADOABII585sQXuIzwAAAAJoCS9H",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10335366983",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-11T14:49:53Z"
    },
    {
      "event": "commented",
      "id": 1714056741,
      "node_id": "IC_kwDOABII585mKm4l",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1714056741",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-11T14:55:35Z",
      "updated_at": "2023-09-11T14:55:35Z",
      "author_association": "MEMBER",
      "body": "I _think_ I've managed to address all the outstanding review comments, ready for another round of review!",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#issuecomment-1714056741",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28122"
    },
    {
      "event": "commented",
      "id": 1714089168,
      "node_id": "IC_kwDOABII585mKuzQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1714089168",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-11T15:12:16Z",
      "updated_at": "2023-09-11T15:12:16Z",
      "author_association": "MEMBER",
      "body": "> In order to build the index PR #28241 directly on top of this and, more importantly, have more complete coverage of BIP 352 here, it would be useful to move `SumInputPubKeys` and `HashOutpoints` from the send / receive PR's here. These define which types of inputs are considered and how outpoints must be sorted and hashed.\r\n> \r\n> (_update_: mmm, looking at the latest test vectors, maybe this functionality is already in here, just named differently)\r\n\r\nThis PR should have everything you need now. I've added a function `GetSilentPaymentTweakDataFromTxInputs`, which iterates over the transaction inputs, determines if they are eligible for silent payments and returns the sum of the input pubkeys, along with the hash of the tx outpoints.\r\n\r\nThe reason it returns the pubkey sum and outpoint hash separately is because if you are using this function to scan as a receiver, you want to calculate `outpoint_hash * scan_priv_key` first, and then do the ECDH step. If you're using this function to create an index, however, you'd want `sum_pubkeys * outpoint_hash` before storing it in the index.",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#issuecomment-1714089168",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28122"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10337033622,
      "node_id": "HRFPE_lADOABII585sQXuIzwAAAAJoIp2W",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10337033622",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-11T17:26:55Z"
    },
    {
      "event": "labeled",
      "id": 10338189804,
      "node_id": "LE_lADOABII585sQXuIzwAAAAJoNEHs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10338189804",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-11T19:30:04Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1620593539,
      "node_id": "PRR_kwDOABII585gmEuD",
      "url": null,
      "actor": null,
      "commit_id": "78d1426fabd7b5b6cdd28de508a1692fce291174",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#pullrequestreview-1620593539",
      "submitted_at": "2023-09-11T19:37:48Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
    },
    {
      "event": "reviewed",
      "id": 1620720216,
      "node_id": "PRR_kwDOABII585gmjpY",
      "url": null,
      "actor": null,
      "commit_id": "78d1426fabd7b5b6cdd28de508a1692fce291174",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#pullrequestreview-1620720216",
      "submitted_at": "2023-09-11T19:47:07Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
    },
    {
      "event": "commented",
      "id": 1714537476,
      "node_id": "IC_kwDOABII585mMcQE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1714537476",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-11T20:32:25Z",
      "updated_at": "2023-09-11T20:32:25Z",
      "author_association": "MEMBER",
      "body": "Currently, this PR is dangerous by itself as it will accept silent payment addresses for sending, but fail to actually send the coins to the correct script. It just uses an empty script. We should disallow sending to silent payment addresses in this PR, and enable it in the sending PR.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#issuecomment-1714537476",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28122"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-11T20:39:26Z",
      "updated_at": "2023-09-11T20:39:26Z",
      "source": {
        "issue": {
          "id": 1891230257,
          "node_id": "PR_kwDOABII585aD7yV",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28453",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28453/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28453/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28453/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28453",
          "number": 28453,
          "state": "open",
          "state_reason": null,
          "title": "wallet: Receive silent payment transactions",
          "body": "This PR implements receiving silent payment transactions through the use of a new `ScriptPubKeyMan` type: `SilentPaymentsSPKM`. This is a descriptor wallet only feature, although it does not use descriptors.\r\n\r\nThis is an optional feature, so the only way to use it is to create a new wallet with `createwallet` with `silent_payments=true`. Such wallets will have a single `SilentPaymentsSPKM` that is used for both receiving and change. Since silent payments only have a single address, repeated calls to `getnewaddress` and `getrawchangeaddress` always return the same address, however the receiving and change addresses are different, see the BIP for how the change is generated.\r\n\r\nSince silent payments requires the spent coins in order to extract public keys from them, `TransactionAddedToMempool` is modified to also provide that information. For scanning blocks, the wallet will retrieve that information from the undo data. Additionally, when rescanning, a silent payments wallet must use the slow rescan method.\r\n\r\nThe labels feature has not been fully implemented yet and is left for a followup.\r\n\r\nBased on #28122 and #28201 \r\n\r\nAlternative to #28202",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 9,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28453",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28453",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28453.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28453.patch"
          },
          "created_at": "2023-09-11T20:39:25Z",
          "updated_at": "2023-11-27T04:22:46Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1620850719,
      "node_id": "PRR_kwDOABII585gnDgf",
      "url": null,
      "actor": null,
      "commit_id": "78d1426fabd7b5b6cdd28de508a1692fce291174",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#pullrequestreview-1620850719",
      "submitted_at": "2023-09-11T22:01:32Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10341658709,
      "node_id": "HRFPE_lADOABII585sQXuIzwAAAAJoaTBV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10341658709",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-12T05:23:47Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10343466791,
      "node_id": "HRFPE_lADOABII585sQXuIzwAAAAJohMcn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10343466791",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-12T08:36:26Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10343626552,
      "node_id": "HRFPE_lADOABII585sQXuIzwAAAAJohzc4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10343626552",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-12T08:48:04Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10343851968,
      "node_id": "HRFPE_lADOABII585sQXuIzwAAAAJoiqfA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10343851968",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-12T08:59:37Z"
    },
    {
      "event": "commented",
      "id": 1715316326,
      "node_id": "IC_kwDOABII585mPaZm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1715316326",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-12T09:06:10Z",
      "updated_at": "2023-09-12T09:06:10Z",
      "author_association": "MEMBER",
      "body": "`git range-diff 0cf23d0...d053c3a`\r\n\r\nAddressed review comments from @theStack and @achow101 and added a commit to disable sending to silent payment addresses, while still allowing the functions to be used in the unit tests.",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#issuecomment-1715316326",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28122"
    },
    {
      "event": "mentioned",
      "id": 10343940042,
      "node_id": "MEE_lADOABII585sQXuIzwAAAAJoi__K",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10343940042",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-12T09:06:10Z"
    },
    {
      "event": "subscribed",
      "id": 10343940074,
      "node_id": "SE_lADOABII585sQXuIzwAAAAJoi__q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10343940074",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-12T09:06:10Z"
    },
    {
      "event": "mentioned",
      "id": 10343940110,
      "node_id": "MEE_lADOABII585sQXuIzwAAAAJojAAO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10343940110",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-12T09:06:10Z"
    },
    {
      "event": "subscribed",
      "id": 10343940128,
      "node_id": "SE_lADOABII585sQXuIzwAAAAJojAAg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10343940128",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-12T09:06:10Z"
    },
    {
      "event": "commented",
      "id": 1715317436,
      "node_id": "IC_kwDOABII585mPaq8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1715317436",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-12T09:06:47Z",
      "updated_at": "2023-09-12T09:06:47Z",
      "author_association": "MEMBER",
      "body": "> Currently, this PR is dangerous by itself as it will accept silent payment addresses for sending, but fail to actually send the coins to the correct script. It just uses an empty script. We should disallow sending to silent payment addresses in this PR, and enable it in the sending PR.\r\n\r\nFixed in https://github.com/bitcoin/bitcoin/pull/28122/commits/d053c3af90324df4fddc57c8301fcf414019d726",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#issuecomment-1715317436",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28122"
    },
    {
      "event": "commented",
      "id": 1715320277,
      "node_id": "IC_kwDOABII585mPbXV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1715320277",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-12T09:08:33Z",
      "updated_at": "2023-09-12T09:08:33Z",
      "author_association": "MEMBER",
      "body": "Next step: add documentation for the new functions, requested in https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1321966435",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#issuecomment-1715320277",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28122"
    },
    {
      "event": "unlabeled",
      "id": 10345219905,
      "node_id": "UNLE_lADOABII585sQXuIzwAAAAJon4dB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10345219905",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-12T10:50:39Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10349630716,
      "node_id": "HRFPE_lADOABII585sQXuIzwAAAAJo4tT8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10349630716",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-12T17:27:48Z"
    },
    {
      "event": "reviewed",
      "id": 1622885912,
      "node_id": "PRR_kwDOABII585gu0YY",
      "url": null,
      "actor": null,
      "commit_id": "93ff4ce117d4b85128dd55630d2dc9f8efbfb473",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#pullrequestreview-1622885912",
      "submitted_at": "2023-09-12T18:29:04Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
    },
    {
      "event": "labeled",
      "id": 10351752918,
      "node_id": "LE_lADOABII585sQXuIzwAAAAJpAzbW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10351752918",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-12T21:16:01Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10357474274,
      "node_id": "HRFPE_lADOABII585sQXuIzwAAAAJpWoPi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10357474274",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-13T09:54:11Z"
    },
    {
      "event": "commented",
      "id": 1717319548,
      "node_id": "IC_kwDOABII585mXDd8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1717319548",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-13T09:56:36Z",
      "updated_at": "2023-09-13T09:56:36Z",
      "author_association": "MEMBER",
      "body": "`git range-diff  c9dff7e...5829940` changes `/*compressed=*/` to `/*fCompressedIn=*/` to fix a tidy warning",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#issuecomment-1717319548",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28122"
    },
    {
      "event": "unlabeled",
      "id": 10358496755,
      "node_id": "UNLE_lADOABII585sQXuIzwAAAAJpah3z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10358496755",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-13T11:37:31Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10373026588,
      "node_id": "HRFPE_lADOABII585sQXuIzwAAAAJqR9Mc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10373026588",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-14T14:20:33Z"
    },
    {
      "event": "commented",
      "id": 1719658636,
      "node_id": "IC_kwDOABII585mf-iM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1719658636",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-14T15:18:19Z",
      "updated_at": "2023-09-14T15:18:19Z",
      "author_association": "MEMBER",
      "body": "Pulled in support for scanning with labels (h/t @achow101) and updated the unit tests. Major changes:\r\n\r\n* Add new functions for generating a change label and labeled silent payments address, per BIP352\r\n* Update `GetTxOutputTweaks` to scan with labels\r\n* Refactor `CPubKey` to get rid of `Combine` in favor of `operator+`\r\n\r\nReady for another round of review!",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#issuecomment-1719658636",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28122"
    },
    {
      "event": "mentioned",
      "id": 10373754365,
      "node_id": "MEE_lADOABII585sQXuIzwAAAAJqUu39",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10373754365",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-14T15:18:20Z"
    },
    {
      "event": "subscribed",
      "id": 10373754392,
      "node_id": "SE_lADOABII585sQXuIzwAAAAJqUu4Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10373754392",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-14T15:18:20Z"
    },
    {
      "event": "labeled",
      "id": 10385236623,
      "node_id": "LE_lADOABII585sQXuIzwAAAAJrAiKP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10385236623",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-15T16:05:47Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 10413901652,
      "node_id": "LE_lADOABII585sQXuIzwAAAAJst4dU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10413901652",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-19T18:10:32Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10421134949,
      "node_id": "HRFPE_lADOABII585sQXuIzwAAAAJtJeZl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10421134949",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-20T10:12:07Z"
    },
    {
      "event": "unlabeled",
      "id": 10421677974,
      "node_id": "UNLE_lADOABII585sQXuIzwAAAAJtLi-W",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10421677974",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-20T10:59:00Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 10422118940,
      "node_id": "UNLE_lADOABII585sQXuIzwAAAAJtNOoc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10422118940",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-20T11:45:08Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-20T13:35:28Z",
      "updated_at": "2023-09-20T13:35:28Z",
      "source": {
        "issue": {
          "id": 217385623,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MTEyODQ2NDMx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10102",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10102/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10102/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10102/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/10102",
          "number": 10102,
          "state": "open",
          "state_reason": null,
          "title": "Multiprocess bitcoin",
          "body": "**This is a draft PR because it is based on #28921 and #28929.** The non-base commits are:\r\n\r\n- [`ee4b9138c837` doc: multiprocess documentation improvements](https://github.com/bitcoin/bitcoin/pull/10102/commits/ee4b9138c837f6dc6b8f063b0df27573736d6578)\r\n- [`df27e301e603` Increase feature_block.py and feature_taproot.py timeouts](https://github.com/bitcoin/bitcoin/pull/10102/commits/df27e301e603d460cbd187056aeff20087cefe3e)\r\n- [`cbc5e366a216` Add util::Result workaround to be compatible with libmultiprocess](https://github.com/bitcoin/bitcoin/pull/10102/commits/cbc5e366a21660601bee8270b5f1d183c148d092)\r\n- [`3427e7e0a965` Add capnp serialization code for bitcoin types](https://github.com/bitcoin/bitcoin/pull/10102/commits/3427e7e0a96502b9c8c6a9d74e5f21a8d84de928)\r\n- [`b6516c454f70` Add capnp wrapper for Handler interface](https://github.com/bitcoin/bitcoin/pull/10102/commits/b6516c454f70d8ef3091ee2ef0bdaede3b0f5893)\r\n- [`5cf30e5357fc` Add capnp wrapper for Chain interface](https://github.com/bitcoin/bitcoin/pull/10102/commits/5cf30e5357fcc3d0ffb871b237e47b79fedd317a)\r\n- [`b5fd425e075a` Add capnp wrapper for Wallet interface](https://github.com/bitcoin/bitcoin/pull/10102/commits/b5fd425e075a3b21bc5e5b4f25209d8abacbeb58)\r\n- [`329b34c85ac6` Add capnp wrapper for Node interface](https://github.com/bitcoin/bitcoin/pull/10102/commits/329b34c85ac6c3718a5a575a48615ed29cfee2fc)\r\n- [`dde2a2211038` Make bitcoin-gui spawn a bitcoin-node process](https://github.com/bitcoin/bitcoin/pull/10102/commits/dde2a221103894606c77017d3e865f1aec3bfb10)\r\n- [`f3349a24e5ac` Make bitcoin-node spawn a bitcoin-wallet process](https://github.com/bitcoin/bitcoin/pull/10102/commits/f3349a24e5ac59913fbcf4ebeb8eaf8df75c604f)\r\n- [`6ea638ca4f28` multiprocess: Add debug.log .wallet/.gui suffixes](https://github.com/bitcoin/bitcoin/pull/10102/commits/6ea638ca4f2834d30853d731c8ed0bc98421d3ce)\r\n- [`622acd03b043` doc: Multiprocess misc doc and comment updates](https://github.com/bitcoin/bitcoin/pull/10102/commits/622acd03b043b238e3fa544167d0d612f1a08715)\r\n- [`755ca62696a4` combine_logs: Handle multiprocess wallet log files](https://github.com/bitcoin/bitcoin/pull/10102/commits/755ca62696a4a15cde7046f36425319ae4ca50ea)\r\n- [`56ef459b5734` Update libmultiprocess library](https://github.com/bitcoin/bitcoin/pull/10102/commits/56ef459b573461087fbe4f39d9b0a7108936335f)\r\n\r\n---\r\n\r\nThis PR adds an `--enable-multiprocess` configure option which builds new `bitcoin-node`, `bitcoin-wallet`, and `bitcoin-gui` executables with relevant functionality isolated into different processes. See [doc/design/multiprocess.md](https://github.com/ryanofsky/bitcoin/tree/pr/ipc/doc/design/multiprocess.md) for usage details and future plans.\r\n\r\nThe change is implemented by adding a new [`Init`](https://github.com/ryanofsky/bitcoin/blob/pr/ipc/src/interfaces/init.h) interface that spawns new wallet and node subprocesses that can be controlled over a [socketpair](http://man7.org/linux/man-pages/man2/socketpair.2.html) by calling [`Node`](https://github.com/ryanofsky/bitcoin/blob/pr/ipc/src/interfaces/node.h), [`Wallet`](https://github.com/ryanofsky/bitcoin/blob/pr/ipc/src/interfaces/wallet.h), and [`ChainClient`](https://github.com/ryanofsky/bitcoin/blob/pr/ipc/src/interfaces/chain.h) methods. When running with split processes, you can see the IPC messages going back and forth in `-debug=1` output. Followup PR's #19460 and #19461 add `-ipcbind` and `-ipcconnect` options that allow more flexibility in how processes are connected.\r\n\r\nThe IPC protocol used is Cap'n Proto, but this could be swapped out for another protocol. Cap'n Proto types and libraries are only accessed in the [src/ipc/capnp/](https://github.com/ryanofsky/bitcoin/tree/pr/ipc/src/ipc/capnp) directory, and not in any public headers or other parts of bitcoin code.\r\n\r\nSlides from a presentation describing this change are available on [google drive](https://docs.google.com/presentation/d/1AeJ-7gD-dItUgs5yH-HoEzLvXaEWe_2ZiGUUxYIXcws/edit). Demo code used in the presentation was from an older version this PR (tag [ipc.21](https://github.com/ryanofsky/bitcoin/releases/tag/pr%2Fipc.21), [commits](https://github.com/ryanofsky/bitcoin/compare/master...pr/ipc.21)).\r\n\r\n---\r\n\r\nThis PR is part of the [process separation project](https://github.com/bitcoin/bitcoin/issues/28722).\r\n",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135946,
              "node_id": "MDU6TGFiZWwxMzU5NDY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/GUI",
              "name": "GUI",
              "color": "02d7e1",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 84,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10102",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/10102",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/10102.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/10102.patch"
          },
          "created_at": "2017-03-27T21:48:26Z",
          "updated_at": "2024-01-23T19:04:48Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10437213729,
      "node_id": "HRFPE_lADOABII585sQXuIzwAAAAJuGz4h",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10437213729",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-21T15:22:22Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10437620849,
      "node_id": "HRFPE_lADOABII585sQXuIzwAAAAJuIXRx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10437620849",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-21T15:58:32Z"
    },
    {
      "event": "labeled",
      "id": 10437622013,
      "node_id": "LE_lADOABII585sQXuIzwAAAAJuIXj9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10437622013",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-21T15:58:39Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 10438743198,
      "node_id": "UNLE_lADOABII585sQXuIzwAAAAJuMpSe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10438743198",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-21T17:56:23Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-26T12:00:00Z",
      "updated_at": "2023-09-26T12:00:00Z",
      "source": {
        "issue": {
          "id": 1913356976,
          "node_id": "I_kwDOABII585yC4Kw",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28536",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28536/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28536/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28536/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/28536",
          "number": 28536,
          "state": "open",
          "state_reason": null,
          "title": "BIP352 tracking issue",
          "body": "This issue will be updated to reflect the current state of [BIP352](https://github.com/bitcoin/bips/pull/1458) integration.\r\n\r\nPRs ready for review:\r\n\r\n* https://github.com/bitcoin/bips/pull/1458\r\n* https://github.com/bitcoin-core/secp256k1/pull/1471\r\n* https://github.com/bitcoin/bitcoin/pull/28122\r\n\r\nTesting:\r\n* For a wallet with send and receive support, compile https://github.com/bitcoin/bitcoin/pull/28453\r\n* Post your signet / testnet silent payment address in the comments!\r\n\r\nOverall plan:\r\n\r\n* Send and receive support in the Bitcoin Core wallet:\r\n  - [x] Code cleanup / refactor: https://github.com/bitcoin/bitcoin/pull/28244\r\n  - [x] Dependency: https://github.com/bitcoin/bitcoin/pull/28246\r\n  - [x] Dependency: https://github.com/bitcoin/bitcoin/pull/25273\r\n  - [x] Dependency: https://github.com/bitcoin/bitcoin/pull/28560\r\n  - [ ] Implement silent payments as a `libsecp` module: https://github.com/bitcoin-core/secp256k1/pull/1471\r\n  - [ ] Base protocol: https://github.com/bitcoin/bitcoin/pull/28122\r\n  - [ ] Sending (depends on 28122, 25273, 28560): https://github.com/bitcoin/bitcoin/pull/28201\r\n  - [ ] Receiving (depends on 28122, 28201): https://github.com/bitcoin/bitcoin/pull/28453\r\n  - [ ] Send and receive functional tests (depends on 28453) (not started)\r\n\r\n* Light client support:\r\n  - [ ] Index for silent payment tweaks (depends on 28122): https://github.com/bitcoin/bitcoin/pull/28241\r\n  - [ ] New BIP157 filter type for tweak data (not started)\r\n  - [ ] Serve new filter type (not started)\r\n\r\n* Long-term\r\n  - [ ] Move base protocol to `libsecp` as a module (Discussion): https://github.com/bitcoin-core/secp256k1/issues/1427\r\n  - [ ] Refactor Core to use silent payments `libsecp` module directly (not started)\r\n\r\n<details>\r\n  <summary>Older stuff</summary>\r\n\r\n\r\n  <ul>\r\n  <li>Closed / Superseded:\r\n     <ul>\r\n     <li>Tracking PR (superseded by this issue): #27827</li>\r\n     <li>Receiving (superseded by 28453): #28202</li>\r\n      <li>Original draft implementation: #24897</li>\r\n      </ul>\r\n  </li>\r\n  </ul>\r\n</details>\r\n",
          "user": {
            "login": "josibake",
            "id": 7444140,
            "node_id": "MDQ6VXNlcjc0NDQxNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/josibake",
            "html_url": "https://github.com/josibake",
            "followers_url": "https://api.github.com/users/josibake/followers",
            "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
            "organizations_url": "https://api.github.com/users/josibake/orgs",
            "repos_url": "https://api.github.com/users/josibake/repos",
            "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/josibake/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64583,
              "node_id": "MDU6TGFiZWw2NDU4Mw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Feature",
              "name": "Feature",
              "color": "7cf575",
              "default": false
            },
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 5,
          "created_at": "2023-09-26T11:59:59Z",
          "updated_at": "2024-02-19T16:52:09Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1738728491,
      "node_id": "IC_kwDOABII585nouQr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1738728491",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-28T08:45:25Z",
      "updated_at": "2023-09-28T08:46:02Z",
      "author_association": "MEMBER",
      "body": "@josibake can you add the following helper functions?\r\n\r\n- [ ] `CouldBeSilentPayment(CTransactionRef tx)`: checks that it's not a coinbase and that at least one of the outputs is taproot\r\nSee https://github.com/bitcoin/bitcoin/pull/28241#discussion_r1331881346\r\n- [ ] `bool GetSilentPaymentsTweakedPubKeySum(std::vector<CTxIn>, std::map<COutPoint, Coin>, CPubKey& tweaked_key) nodiscard` (with clear documentation on what to do when it returns `false`). Although relatively straight-forward, my current index implementation does look a bit brittle, and I'm not sure how to handle failure cases: https://github.com/bitcoin/bitcoin/pull/28241/files#diff-708eeba963ec57793dbec2309d27f32869d4ccefa14fbeb575d3a1e36e5e1a03R74-R85  \r\n\r\nMaybe also make a type alias for `std::map<COutPoint, Coin>`",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#issuecomment-1738728491",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28122"
    },
    {
      "event": "mentioned",
      "id": 10496356819,
      "node_id": "MEE_lADOABII585sQXuIzwAAAAJxobHT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10496356819",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-28T08:45:26Z"
    },
    {
      "event": "subscribed",
      "id": 10496356832,
      "node_id": "SE_lADOABII585sQXuIzwAAAAJxobHg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10496356832",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-28T08:45:26Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10535580826,
      "node_id": "HRFPE_lADOABII585sQXuIzwAAAAJz-DSa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10535580826",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-03T09:11:30Z"
    },
    {
      "event": "commented",
      "id": 1744559255,
      "node_id": "IC_kwDOABII585n-9yX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1744559255",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-03T09:13:40Z",
      "updated_at": "2023-10-03T09:13:40Z",
      "author_association": "MEMBER",
      "body": "force-pushed to fix a silent merge conflict with #28500 ",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#issuecomment-1744559255",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28122"
    },
    {
      "event": "reviewed",
      "id": 1668088009,
      "node_id": "PRR_kwDOABII585jbQDJ",
      "url": null,
      "actor": null,
      "commit_id": "30bbeb38047e020926065a407d5195b684377857",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#pullrequestreview-1668088009",
      "submitted_at": "2023-10-10T15:16:22Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
    },
    {
      "event": "reviewed",
      "id": 1687287831,
      "node_id": "PRR_kwDOABII585kkfgX",
      "url": null,
      "actor": null,
      "commit_id": "699577c91101b4be56bffcec4f0fa48f7d8916f0",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#pullrequestreview-1687287831",
      "submitted_at": "2023-10-19T10:20:33Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-24T02:47:02Z",
      "updated_at": "2023-10-24T02:47:02Z",
      "source": {
        "issue": {
          "id": 1958204865,
          "node_id": "PR_kwDOABII585dlfBo",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28710",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28710/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28710/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28710/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28710",
          "number": 28710,
          "state": "open",
          "state_reason": null,
          "title": "Remove the legacy wallet and BDB dependency",
          "body": "The final step of #20160.\r\n\r\nA bare minimum of legacy wallet code is kept in order to perform wallet migration. Migration of legacy wallets uses the independent BDB parser and a minimal `LegacyDataSPKM` that allows the legacy data to be loaded so that the migration can be completed.\r\n\r\nAll tests which tested legacy wallet behavior have been removed. The `--descriptors` and `--legacy-wallet` options are removed from the functional tests.\r\n\r\nBDB has been removed as a dependency and documentation have been updated to reflect that.\r\n\r\nDepends on #26596",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 2,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28710",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28710",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28710.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28710.patch"
          },
          "created_at": "2023-10-23T23:36:07Z",
          "updated_at": "2024-02-10T04:46:44Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-14T17:47:24Z",
      "updated_at": "2023-11-14T17:47:24Z",
      "source": {
        "issue": {
          "id": 1993161175,
          "node_id": "PR_kwDOABII585fbts1",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28875",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28875/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28875/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28875/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28875",
          "number": 28875,
          "state": "closed",
          "state_reason": null,
          "title": "build: Pass sanitize flags to instrument `libsecp256k1` code",
          "body": "This PR is a revived https://github.com/bitcoin/bitcoin/pull/27991 with an addressed [comment](https://github.com/bitcoin/bitcoin/pull/27991#discussion_r1252148488).\r\n\r\nFixes https://github.com/bitcoin/bitcoin/issues/27990.\r\n\r\nMight be tested as follows:\r\n```\r\n$ ./autogen.sh && ./configure --enable-fuzz --with-sanitizers=fuzzer CC=clang-13 CXX=clang++-13\r\n$ make clean > /dev/null && make\r\n$ objdump --disassemble=secp256k1_xonly_pubkey_serialize src/test/fuzz/fuzz | grep __sanitizer_cov\r\n 1953bd0:\te8 bb c6 05 ff       \tcall   9b0290 <__sanitizer_cov_trace_const_cmp8>\r\n 1953d32:\te8 69 c4 05 ff       \tcall   9b01a0 <__sanitizer_cov_trace_pc_indir>\r\n 1953d58:\te8 43 c4 05 ff       \tcall   9b01a0 <__sanitizer_cov_trace_pc_indir>\r\n 1953d82:\te8 19 c4 05 ff       \tcall   9b01a0 <__sanitizer_cov_trace_pc_indir>\r\n```",
          "user": {
            "login": "hebasto",
            "id": 32963518,
            "node_id": "MDQ6VXNlcjMyOTYzNTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hebasto",
            "html_url": "https://github.com/hebasto",
            "followers_url": "https://api.github.com/users/hebasto/followers",
            "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
            "organizations_url": "https://api.github.com/users/hebasto/orgs",
            "repos_url": "https://api.github.com/users/hebasto/repos",
            "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/hebasto/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 5,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28875",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28875",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28875.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28875.patch"
          },
          "closed_at": "2024-01-26T11:31:41Z",
          "created_at": "2023-11-14T16:59:21Z",
          "updated_at": "2024-01-26T12:00:47Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-15T00:43:30Z",
      "updated_at": "2023-11-15T00:43:30Z",
      "source": {
        "issue": {
          "id": 1993258292,
          "node_id": "PR_kwDOABII585fcC4v",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28876",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28876/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28876/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28876/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28876",
          "number": 28876,
          "state": "closed",
          "state_reason": null,
          "title": "build: Fix LTO functionality",
          "body": "The current LTO functionality implementation has multiple issues:\r\n1. Duplicated `-flto` flags when linking.\r\n2. The `secp256k1` subtree code is built without LTO.\r\n3. In `AX_CHECK_LINK_FLAG` macro the wrong `CXXFLAG_WERROR` flag is used instead of the correct `LDFLAG_WERROR` one.\r\n\r\nThis PR fixes all of them.\r\n\r\nMight be verified as follows:\r\n```\r\n$ readelf -S src/secp256k1/src/libsecp256k1_la-secp256k1.o | grep .gnu.lto_ | wc -l\r\n274\r\n```\r\n\r\n---\r\n\r\nThe depends build system has similar issues that will be addressed in a separated PR.\r\n\r\nNoticed while porting this functionality to a new CMake-based build system.",
          "user": {
            "login": "hebasto",
            "id": 32963518,
            "node_id": "MDQ6VXNlcjMyOTYzNTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hebasto",
            "html_url": "https://github.com/hebasto",
            "followers_url": "https://api.github.com/users/hebasto/followers",
            "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
            "organizations_url": "https://api.github.com/users/hebasto/orgs",
            "repos_url": "https://api.github.com/users/hebasto/repos",
            "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/hebasto/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28876",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28876",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28876.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28876.patch"
          },
          "closed_at": "2024-01-15T13:22:20Z",
          "created_at": "2023-11-14T17:53:06Z",
          "updated_at": "2024-01-15T13:22:20Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 11060904076,
      "node_id": "LE_lADOABII585sQXuIzwAAAAKTSACM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11060904076",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-25T14:23:06Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-01T11:39:28Z",
      "updated_at": "2023-12-01T11:39:28Z",
      "source": {
        "issue": {
          "id": 2020711772,
          "node_id": "PR_kwDOABII585g48_Q",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28983",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28983/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28983/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28983/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28983",
          "number": 28983,
          "state": "closed",
          "state_reason": null,
          "title": "Stratum v2 Template Provider (take 2)",
          "body": "Based on on @Fi3's https://github.com/bitcoin/bitcoin/compare/master...Fi3:bitcoin:PatchTemplates which is based on @ccdle12's #27854. I rebased it and re-wrote the commit history. See the original branch for the evolution of the spec.\r\n\r\nSee [docs/stratum-v2.md](https://github.com/Sjors/bitcoin/blob/2023/11/sv2-poll/doc/stratum-v2.md) for a brief description of Stratum v2 and the role of Bitcoin Core in that system..\r\n\r\n## What to test and review? \r\n\r\n- [ ] #29295 \r\n- [ ] Custom signet mining improvement: #29032\r\n- [ ] Make nested pull-requests easier: #29274\r\n\r\nSee the [testing guide](https://github.com/Sjors/bitcoin/blob/2023/11/sv2-poll/doc/stratum-v2.md#testing-guide) for various ways to test this PR. This branch is actively used by (testnet) pools, so it should be ready for high level review.\r\n\r\nI'll make separate pull requests for parts that are ready for detailed review. Probably starting with ECDH and the Noise Protocol.\r\n\r\n## Implementation notes\r\n\r\nSilent Payments also needs the ECDH module, so I cherry-picked the commit from #28122. It uses ECDH is a slightly different way, but perhaps there's more overlap to be had.\r\n\r\n## Contributing\r\n\r\nIf you want to help out with any of the issues below, please open a PR to my fork. I will then squash your commits into my own where needed. \r\n\r\n## Upstream issues\r\n\r\n### Spec\r\n\r\n- [ ] modify spec to use `ProvideMissingTransactions`? (followup?)\r\n- [ ] pick a good default for `default_coinbase_tx_additional_output_size` (see `getblocktemplate` RPC)\r\n\r\n### Noise\r\n\r\n- [ ] use EllSwift https://github.com/stratum-mining/sv2-spec/pull/66, implemented in https://github.com/Sjors/bitcoin/pull/28\r\n- [ ] certificate signing issue: https://github.com/stratum-mining/stratum/issues/717, fix in https://github.com/Sjors/bitcoin/pull/29\r\n\r\n### Networking\r\n\r\n- [ ] add `-sv2bind` and `-sv2allowip`\r\n- [x] persist static key (needs #29229)\r\n- [ ] optional `-sv2cert`\r\n- [x] create `Sv2Transport` subclass similar to `V2Transport`: https://github.com/Sjors/bitcoin/pull/27\r\n- [ ] drop `Sv2TemplateProvider::SendBuf`, reuse p2p socket handling if possible\r\n- [ ] limit number of connected clients\r\n- [ ] maybe limit (number of) `coinbase_output_max_additional_size`\r\n- [ ] TMP / TODO comments at the top of `sv2_messages.h`\r\n- [ ] adjust base58 encoding of authority public key https://github.com/stratum-mining/stratum/issues/721\r\n\r\n### Testing\r\n\r\n- [ ] expand sv2_template_provider_tests\r\n- [ ] add transport fuzzer\r\n- [ ] add template provider fuzzer\r\n\r\n### Template generation and updating\r\n\r\n- [x] hold on to templates a bit after a block is found https://github.com/stratum-mining/stratum/issues/709 (in case of race to prevent downstream crashes, though we still wouldn't relay it without additional changes)\r\n- [ ] hold on to template transactions even if the mempool drops them (for some time)\r\n- [ ] group templates with the same `coinbase_tx_additional_output_size`\r\n- [ ] don't generate templates when no client is connected\r\n\r\n### Misc\r\n\r\n- [ ] move / refactor `GetMerklePathForCoinbase` helper (see Future Work in original PR, and https://github.com/stratum-mining/stratum/issues/567)\r\n- [ ] truncate long trace messages\r\n\r\n## Potential followups\r\n\r\n- [ ] implement Noise protocol and mock client in Python, add functional tests (based on `test/sv2_template_provider_tests.cpp`)\r\n- [ ] use process separation, e.g. a `bitcoin-tp` binary, see [multiprocess.md](https://github.com/bitcoin/bitcoin/blob/master/doc/design/multiprocess.md?plain=1)\r\n- [ ] make template updates push based, on top of Cluster Mempool, see [docs/stratum-v2.md](https://github.com/Sjors/bitcoin/blob/2023/11/sv2-poll/doc/stratum-v2.md) (for new blocks it's already push based)\r\n- [ ] push empty template for the next block (downstream can ignore or use, https://github.com/stratum-mining/stratum/issues/715)\r\n  - send prevhash for this template as soon as any new block arrives\r\n- [ ] push optimistic template for the next block\r\n  - send prevhash if and only if our template won (i.e. we got a `SubmitSolution` message)",
          "user": {
            "login": "Sjors",
            "id": 10217,
            "node_id": "MDQ6VXNlcjEwMjE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sjors",
            "html_url": "https://github.com/Sjors",
            "followers_url": "https://api.github.com/users/Sjors/followers",
            "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
            "organizations_url": "https://api.github.com/users/Sjors/orgs",
            "repos_url": "https://api.github.com/users/Sjors/repos",
            "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Sjors/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 118378960,
              "node_id": "MDU6TGFiZWwxMTgzNzg5NjA=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Mining",
              "name": "Mining",
              "color": "c7def8",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 29,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28983",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28983",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28983.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28983.patch"
          },
          "closed_at": "2024-02-14T11:35:17Z",
          "created_at": "2023-12-01T11:39:27Z",
          "updated_at": "2024-02-14T11:35:18Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11195587765,
      "node_id": "HRFPE_lADOABII585sQXuIzwAAAAKbTxy1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11195587765",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-08T16:38:12Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11195987302,
      "node_id": "HRFPE_lADOABII585sQXuIzwAAAAKbVTVm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11195987302",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-08T17:25:17Z"
    },
    {
      "event": "commented",
      "id": 1847658969,
      "node_id": "IC_kwDOABII585uIQnZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1847658969",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-08T18:43:55Z",
      "updated_at": "2023-12-08T18:43:55Z",
      "author_association": "MEMBER",
      "body": "rebased on master and updated to fix a silent merge conflict in the tests, related to the new `Txid` type.",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#issuecomment-1847658969",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28122"
    },
    {
      "event": "unlabeled",
      "id": 11196970732,
      "node_id": "UNLE_lADOABII585sQXuIzwAAAAKbZDbs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11196970732",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-08T19:25:05Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1850053280,
      "node_id": "IC_kwDOABII585uRZKg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1850053280",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-11T13:11:29Z",
      "updated_at": "2023-12-11T13:11:29Z",
      "author_association": "MEMBER",
      "body": "> @josibake can you add the following helper functions?\r\n> \r\n>     * [ ]  `CouldBeSilentPayment(CTransactionRef tx)`: checks that it's not a coinbase and that at least one of the outputs is taproot\r\n>       See [Silent payment index (for light wallets and consistency check) #28241 (comment)](https://github.com/bitcoin/bitcoin/pull/28241#discussion_r1331881346)\r\n> \r\n>     * [ ]  `bool GetSilentPaymentsTweakedPubKeySum(std::vector<CTxIn>, std::map<COutPoint, Coin>, CPubKey& tweaked_key) nodiscard` (with clear documentation on what to do when it returns `false`). Although relatively straight-forward, my current index implementation does look a bit brittle, and I'm not sure how to handle failure cases: https://github.com/bitcoin/bitcoin/pull/28241/files#diff-708eeba963ec57793dbec2309d27f32869d4ccefa14fbeb575d3a1e36e5e1a03R74-R85\r\n> \r\n> \r\n> Maybe also make a type alias for `std::map<COutPoint, Coin>`\r\n\r\nthe second function you're asking for exists, just need to expose it in the header file. it also returns `pair<uint256, CPubKey>`, so you would need to multiply those together (using the TweakMultiply method on CPubKey) before storing in the index.\r\n\r\nFor the first function, we can probably roll that into the second one? Need to look at the code again to see if that makes sense.\r\n\r\nRegarding the alias, I'm somewhat ambivalent. Since we use this same struct in other places unrelated to silent payments, it might make sense as a follow-up refactor. Less inclined to do it here.",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#issuecomment-1850053280",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28122"
    },
    {
      "event": "mentioned",
      "id": 11210261253,
      "node_id": "MEE_lADOABII585sQXuIzwAAAAKcLwMF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11210261253",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-11T13:11:29Z"
    },
    {
      "event": "subscribed",
      "id": 11210261269,
      "node_id": "SE_lADOABII585sQXuIzwAAAAKcLwMV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11210261269",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-11T13:11:29Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-23T17:39:22Z",
      "updated_at": "2023-12-23T17:39:22Z",
      "source": {
        "issue": {
          "id": 2054852916,
          "node_id": "PR_kwDOAP4Jqs5is1PD",
          "url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1471",
          "repository_url": "https://api.github.com/repos/bitcoin-core/secp256k1",
          "labels_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1471/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1471/comments",
          "events_url": "https://api.github.com/repos/bitcoin-core/secp256k1/issues/1471/events",
          "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1471",
          "number": 1471,
          "state": "open",
          "state_reason": null,
          "title": "[DRAFT] Add silentpayments (BIP352) module",
          "body": "This PR adds a new Silent Payments ([BIP352](https://github.com/bitcoin/bips/pull/1458)) module to secp256k1. At this early stage, this is meant primarily for demo purposes and to hopefully spark the scope/interface discussion started in #1427 with a more practical approach. The actual module is quite small with about ~600 LOC, a good part of it is API documentation.\r\n\r\nThe following routines are provided ($a_i$ are input private keys, $A_i$ are input public keys, $b$ and $B$ denote recipient privkeys/pubkeys that would be encoded in silent payment addresses, $d$ and $P$ the keypair for the actual transaction taproot x-only output):\r\n\r\n| Side     | Function                        | Inputs                           | Outputs                                                                   |\r\n|----------|---------------------------------|----------------------------------|---------------------------------------------------------------------------|\r\n|  Sender  | `_create_private_tweak_data`    | $a_1...a_n$, $outpoint_L$        | $a_{sum} = (a_1 + a_2 + ... + a_n)$<br>$inputhash =  hash_I(outpoint_L \\|\\| (a_{sum} * G))$ |\r\n| Receiver | `_create_public_tweak_data`     | $A_1...A_n$, $outpoint_L$        | $A_{sum} = (A_1 + A_2 + ... + A_n)$<br>$inputhash = hash_I(outpoint_L \\|\\| A_{sum})$ |\r\n| Receiver | `_create_tweaked_pubkey`       |  $A_{sum}, inputhash$       |  $A_{tweaked} = inputhash * A_{sum}$\r\n|  Both  | `_create_shared_secret`    | $Pub$, $sec$<br>(Sender: $B_{scan}, a_{sum}$<br>Receiver: $A_{sum}, b_{scan}$<br>Lightclient: $A_{tweaked}, b_{scan}$)        | $SS = (inputhash * sec) * Pub$ (ECDH)                                      |\r\n| Receiver | `_create_label_tweak`           | $b_{scan}, m$                    | $labeltweak = hash_L(b_{scan} \\|\\| m)$<br>$label = labeltweak * G$                                    |\r\n| Receiver | `_create_address_spend_pubkey`  | $B_{spend}, label$          | $B_m = B_{spend} + label$                                        |\r\n| Sender   | `_sender_create_output_pubkey`         | $SS, B_m, k$ | $P_{xonly} = B_m + hash_S(SS \\|\\| k) * G$        |\r\n| Receiver | `_receiver_scan_output`               | $SS, B_m, k, tx_{output}$        | $t_k = hash_S(SS \\|\\| k)$<br>$P_{xonly} = B_m + t_k * G$  [not returned]<br>$directmatch = P_{xonly} == tx_{output}$<br>if $directmatch == 0$:<br>$\\quad label1 = tx_{output} - P$<br>$\\quad label2 = -tx_{output} - P$\r\n| Receiver | `_create_output_seckey`         | $b_{spend}, t_k, (labeltweak)$ | $d = (b_{spend} + labeltweak) + t_k$                        |\r\n\r\nwhere\r\n* $hash_I$ denotes a SHA256 tagged hash with tag \"BIP0352/Inputs\"\r\n* $hash_L$ denotes a SHA256 tagged hash with tag \"BIP0352/Label\"\r\n* $hash_S$ denotes a SHA256 tagged hash with tag \"BIP0352/SharedSecret\"\r\n\r\nFor ending up with output key material used for sending to / scanning for / spending from, both sides would follow the chain of `tweak_data -> shared_secret -> output key`. The public tweak data can be useful for faster scanning of output transactions by storing them in an index, see e.g. Bitcoin Core PR https://github.com/bitcoin/bitcoin/pull/28241. Private tweak data is arguably less useful, so in theory one could collapse the tweak data and shared secret creation functions into a single one, but IMHO it's nicer if the API is symmetric.\r\n\r\nAs discussed in https://github.com/bitcoin-core/secp256k1/issues/1427#issuecomment-1757675172, the approach of passing in two separate key pairs for taproot and non-taproot inputs is followed here. This may seem a bit confusing at first, but has the advantage that the caller doesn't have to deal with enforcing even y-parity for key material manually (e.g. negating private keys of taproot outputs if they would end up in an odd point), which seems error-prone.\r\n\r\nThe last commit includes a small test suite written in Python that runs the BIP352 test vectors by calling into the secp256k1 shared library using [ctypes](https://docs.python.org/3/library/ctypes.html). All sending tests and the non-labels receiving tests currently pass.\r\n```\r\n$ ./configure --enable-module-silentpayments\r\n$ make\r\n$ cd bip352-testsuite\r\n$ ./run_bip352_tests.py\r\n```\r\n\r\nThis test suite is not meant to be actually included in the repo, but it hopefully shouldn't be too much effort to automatically generate the test code for `tests_impl.h`.\r\n\r\nHappy to receive comments, even if it's only bike-shedding ones (I'm fully aware that the current naming kind of sucks). Next step is to open a Bitcoin Core PR which uses this module in [#28122](https://github.com/bitcoin/bitcoin/pull/28122), which should be ready within the next days.",
          "user": {
            "login": "theStack",
            "id": 91535,
            "node_id": "MDQ6VXNlcjkxNTM1",
            "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/theStack",
            "html_url": "https://github.com/theStack",
            "followers_url": "https://api.github.com/users/theStack/followers",
            "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
            "organizations_url": "https://api.github.com/users/theStack/orgs",
            "repos_url": "https://api.github.com/users/theStack/repos",
            "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/theStack/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 4975353639,
              "node_id": "LA_kwDOAP4Jqs8AAAABKI3fJw",
              "url": "https://api.github.com/repos/bitcoin-core/secp256k1/labels/feature",
              "name": "feature",
              "description": "",
              "color": "731E95",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 20,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin-core/secp256k1/pulls/1471",
            "html_url": "https://github.com/bitcoin-core/secp256k1/pull/1471",
            "diff_url": "https://github.com/bitcoin-core/secp256k1/pull/1471.diff",
            "patch_url": "https://github.com/bitcoin-core/secp256k1/pull/1471.patch"
          },
          "created_at": "2023-12-23T17:39:21Z",
          "updated_at": "2024-02-20T11:59:01Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 11474877848,
      "node_id": "LE_lADOABII585sQXuIzwAAAAKr9L2Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11474877848",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-12T23:09:35Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11485606013,
      "node_id": "HRFPE_lADOABII585sQXuIzwAAAAKsmHB9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11485606013",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-15T09:17:32Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11486228210,
      "node_id": "HRFPE_lADOABII585sQXuIzwAAAAKsoe7y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11486228210",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-15T10:11:37Z"
    },
    {
      "event": "unlabeled",
      "id": 11486856278,
      "node_id": "UNLE_lADOABII585sQXuIzwAAAAKsq4RW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11486856278",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-15T11:07:23Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11489744368,
      "node_id": "HRFPE_lADOABII585sQXuIzwAAAAKs15Xw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11489744368",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-15T15:37:28Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11499810523,
      "node_id": "HRFPE_lADOABII585sQXuIzwAAAAKtcS7b",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11499810523",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-16T14:38:13Z"
    },
    {
      "event": "labeled",
      "id": 11518151176,
      "node_id": "LE_lADOABII585sQXuIzwAAAAKuiQoI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11518151176",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-18T00:20:37Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1897543475,
      "node_id": "IC_kwDOABII585xGjcz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1897543475",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-18T00:20:38Z",
      "updated_at": "2024-01-18T00:20:38Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n\n🚧 At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/20533630775</sub>",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#issuecomment-1897543475",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28122"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-19T09:24:42Z",
      "updated_at": "2024-01-19T09:24:42Z",
      "source": {
        "issue": {
          "id": 2086055825,
          "node_id": "PR_kwDOKMTWoc5kTlgM",
          "url": "https://api.github.com/repos/S3RK/bip-352/issues/3",
          "repository_url": "https://api.github.com/repos/S3RK/bip-352",
          "labels_url": "https://api.github.com/repos/S3RK/bip-352/issues/3/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/S3RK/bip-352/issues/3/comments",
          "events_url": "https://api.github.com/repos/S3RK/bip-352/issues/3/events",
          "html_url": "https://github.com/S3RK/bip-352/pull/3",
          "number": 3,
          "state": "closed",
          "state_reason": null,
          "title": "Generate test vectors for taproot with NUMS point",
          "body": "Add code to generate test vectors for taproot script spends using NUMS point H as internal key and update reference code to skip inputs when NUMS point H is used as the internal key else obtain the public key from scriptPubkey and proceed as usual",
          "user": {
            "login": "Eunovo",
            "id": 37949128,
            "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Eunovo",
            "html_url": "https://github.com/Eunovo",
            "followers_url": "https://api.github.com/users/Eunovo/followers",
            "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
            "organizations_url": "https://api.github.com/users/Eunovo/orgs",
            "repos_url": "https://api.github.com/users/Eunovo/repos",
            "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Eunovo/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 8,
          "pull_request": {
            "url": "https://api.github.com/repos/S3RK/bip-352/pulls/3",
            "html_url": "https://github.com/S3RK/bip-352/pull/3",
            "diff_url": "https://github.com/S3RK/bip-352/pull/3.diff",
            "patch_url": "https://github.com/S3RK/bip-352/pull/3.patch"
          },
          "closed_at": "2024-01-19T09:24:56Z",
          "created_at": "2024-01-17T12:08:48Z",
          "updated_at": "2024-01-23T08:59:31Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11535553388,
      "node_id": "HRFPE_lADOABII585sQXuIzwAAAAKvkpNs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11535553388",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-19T10:15:22Z"
    },
    {
      "event": "commented",
      "id": 1900134591,
      "node_id": "IC_kwDOABII585xQcC_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1900134591",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-19T10:21:21Z",
      "updated_at": "2024-01-19T10:21:21Z",
      "author_association": "MEMBER",
      "body": "Rebased https://github.com/bitcoin/bitcoin/commit/0299dfb0607b85813c7226690772ab3be198b0df -> https://github.com/bitcoin/bitcoin/commit/6a9ec4771d691bf4143f3574dd129da641c6ee74\r\n\r\n* Fixes a silent merge conflict introduced by changing `CKey` to use `std::byte*` instead of `unsigned char`",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#issuecomment-1900134591",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28122"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11535795492,
      "node_id": "HRFPE_lADOABII585sQXuIzwAAAAKvlkUk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11535795492",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-19T10:36:13Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11535915651,
      "node_id": "HRFPE_lADOABII585sQXuIzwAAAAKvmBqD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11535915651",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-19T10:47:57Z"
    },
    {
      "event": "commented",
      "id": 1900189106,
      "node_id": "IC_kwDOABII585xQpWy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1900189106",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-19T10:57:36Z",
      "updated_at": "2024-01-19T10:57:36Z",
      "author_association": "MEMBER",
      "body": "Updated https://github.com/bitcoin/bitcoin/commit/6a9ec4771d691bf4143f3574dd129da641c6ee74 -> https://github.com/bitcoin/bitcoin/pull/28122/commits/6e7c29528eb4a7c39bf8290b7c622e30bf07b45d ([implement-bip352-00](https://github.com/josibake/bitcoin/tree/implement-bip352-00) -> [implement-bip352-01](https://github.com/josibake/bitcoin/tree/implement-bip352-01), [compare](https://github.com/josibake/bitcoin/compare/implement-bip352-00..implement-bip352-01))\r\n* Adds a test case for taproot inputs with H as the internal key (with and without the optional annex) (h/t @Eunovo)\r\n* Splits out the pubkey extraction logic from `GetSilentPaymentTweakDataFromTxInputs` function into its own function: `ExtractPubKeyFromInput`\r\n* Updates the sending tests to check if the input is a silent payments input before using the secret key, using the `ExtractPubKeyFromInput` function\r\n\r\nGoing forward, it might make more sense to have a function that tests if the input is eligible (`bool IsInputForSharedSecretDerivation`, and a separate function to extract the pubkey. Both sending and receiving need the `bool IsInputForSharedSecretDerivation` function, but only the receiver would need the pubkey extraction function. Right now, it's using the extract function for both by checking if a pubkey was extracted or not, which seems kinda clunky but works for now.",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#issuecomment-1900189106",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28122"
    },
    {
      "event": "mentioned",
      "id": 11536013938,
      "node_id": "MEE_lADOABII585sQXuIzwAAAAKvmZpy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11536013938",
      "actor": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-19T10:57:36Z"
    },
    {
      "event": "subscribed",
      "id": 11536013949,
      "node_id": "SE_lADOABII585sQXuIzwAAAAKvmZp9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11536013949",
      "actor": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-19T10:57:37Z"
    },
    {
      "event": "unlabeled",
      "id": 11536532644,
      "node_id": "UNLE_lADOABII585sQXuIzwAAAAKvoYSk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11536532644",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-19T11:43:57Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-22T11:31:43Z",
      "updated_at": "2024-01-22T11:31:43Z",
      "source": {
        "issue": {
          "id": 2090563237,
          "node_id": "PR_kwDOFDde0s5kjE9c",
          "url": "https://api.github.com/repos/stratum-mining/stratum/issues/724",
          "repository_url": "https://api.github.com/repos/stratum-mining/stratum",
          "labels_url": "https://api.github.com/repos/stratum-mining/stratum/issues/724/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/stratum-mining/stratum/issues/724/comments",
          "events_url": "https://api.github.com/repos/stratum-mining/stratum/issues/724/events",
          "html_url": "https://github.com/stratum-mining/stratum/pull/724",
          "number": 724,
          "state": "closed",
          "state_reason": null,
          "title": "Use algorithm for ECDH that is described in the specification ",
          "body": "suggestion for issue #723",
          "user": {
            "login": "jakubtrnka",
            "id": 13293315,
            "node_id": "MDQ6VXNlcjEzMjkzMzE1",
            "avatar_url": "https://avatars.githubusercontent.com/u/13293315?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakubtrnka",
            "html_url": "https://github.com/jakubtrnka",
            "followers_url": "https://api.github.com/users/jakubtrnka/followers",
            "following_url": "https://api.github.com/users/jakubtrnka/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jakubtrnka/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jakubtrnka/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jakubtrnka/subscriptions",
            "organizations_url": "https://api.github.com/users/jakubtrnka/orgs",
            "repos_url": "https://api.github.com/users/jakubtrnka/repos",
            "events_url": "https://api.github.com/users/jakubtrnka/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jakubtrnka/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 8,
          "pull_request": {
            "url": "https://api.github.com/repos/stratum-mining/stratum/pulls/724",
            "html_url": "https://github.com/stratum-mining/stratum/pull/724",
            "diff_url": "https://github.com/stratum-mining/stratum/pull/724.diff",
            "patch_url": "https://github.com/stratum-mining/stratum/pull/724.patch"
          },
          "closed_at": "2024-01-26T13:36:33Z",
          "created_at": "2024-01-19T13:20:56Z",
          "updated_at": "2024-01-26T13:37:48Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1840412491,
      "node_id": "PRR_kwDOABII585tsndL",
      "url": null,
      "actor": null,
      "commit_id": "5e04b72b4c450e0f025fa0acf1bf68a74ed65210",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#pullrequestreview-1840412491",
      "submitted_at": "2024-01-24T04:51:14Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11587171601,
      "node_id": "HRFPE_lADOABII585sQXuIzwAAAAKypjUR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11587171601",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-24T17:02:17Z"
    },
    {
      "event": "labeled",
      "id": 11589355955,
      "node_id": "LE_lADOABII585sQXuIzwAAAAKyx4mz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11589355955",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-24T20:42:34Z",
      "label": {
        "name": "Wallet",
        "color": "08a781"
      }
    },
    {
      "event": "labeled",
      "id": 11589355967,
      "node_id": "LE_lADOABII585sQXuIzwAAAAKyx4m_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11589355967",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-24T20:42:34Z",
      "label": {
        "name": "Privacy",
        "color": "5319e7"
      }
    },
    {
      "event": "labeled",
      "id": 11608791232,
      "node_id": "LE_lADOABII585sQXuIzwAAAAKz8BjA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11608791232",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-26T13:13:37Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11609115039,
      "node_id": "HRFPE_lADOABII585sQXuIzwAAAAKz9Qmf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11609115039",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-26T13:46:20Z"
    },
    {
      "event": "commented",
      "id": 1912105564,
      "node_id": "IC_kwDOABII585x-Gpc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1912105564",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-26T13:54:19Z",
      "updated_at": "2024-01-26T14:06:50Z",
      "author_association": "MEMBER",
      "body": "Rebased https://github.com/bitcoin/bitcoin/commit/e0ea52da97b5bb18b813e862455aafd56a7809dd -> https://github.com/bitcoin/bitcoin/commit/08b62764190a907c0d7d329f4df07f9a2b6dcdeb \r\n\r\n* Fix small `configure.ac` merge conflict",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#issuecomment-1912105564",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28122"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11609253141,
      "node_id": "HRFPE_lADOABII585sQXuIzwAAAAKz9yUV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11609253141",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-26T14:00:34Z"
    },
    {
      "event": "commented",
      "id": 1912123265,
      "node_id": "IC_kwDOABII585x-K-B",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1912123265",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-26T14:06:16Z",
      "updated_at": "2024-01-26T14:06:39Z",
      "author_association": "MEMBER",
      "body": "Updated https://github.com/bitcoin/bitcoin/commit/08b62764190a907c0d7d329f4df07f9a2b6dcdeb -> https://github.com/bitcoin/bitcoin/commit/cbb8d3a6574e10841c52716bbcd27e0c60752e1c ([implement-bip352-01-rebase](https://github.com/josibake/bitcoin/tree/implement-bip352-01-rebase) -> [implement-bip352-02](https://github.com/josibake/bitcoin/tree/implement-bip352-02) , [compare](https://github.com/josibake/bitcoin/compare/implement-bip352-01-rebase..implement-bip352-02))\r\n\r\n* Add doxygen style comments to `src/wallet/silentpayments.h`\r\n* Make `GetTxOutputTweaks` return a `std::optional` to cover the case where no payments to us are found",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#issuecomment-1912123265",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28122"
    },
    {
      "event": "unlabeled",
      "id": 11610050257,
      "node_id": "UNLE_lADOABII585sQXuIzwAAAAK0A07R",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11610050257",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-26T15:17:53Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1853145226,
      "node_id": "PRR_kwDOABII585udMCK",
      "url": null,
      "actor": null,
      "commit_id": "cbb8d3a6574e10841c52716bbcd27e0c60752e1c",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Started reviewing. Basic question first. Which RPCs are supposed to work at this stage? I was under impression, that none RPCs should understand SP addresses yet and the support come with send and receiving PRs. But since you've registered SP destination in `CTXDestination` variant, the SP addresses would be recognised by some RPCs. Is that intended? Should we verify that they return sane results?",
      "user": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#pullrequestreview-1853145226",
      "submitted_at": "2024-01-31T08:36:55Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
    },
    {
      "event": "commented",
      "id": 1919057289,
      "node_id": "IC_kwDOABII585yYn2J",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1919057289",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-31T12:58:46Z",
      "updated_at": "2024-01-31T12:58:46Z",
      "author_association": "MEMBER",
      "body": "> Started reviewing. Basic question first. Which RPCs are supposed to work at this stage? I was under impression, that none RPCs should understand SP addresses yet and the support come with send and receiving PRs. \r\n\r\nThanks for the review @S3RK ! The goal isn't that none of the RPCs should understand SP addresses, rather the goal is that _full_ RPC support is deferred to the send and receiving PRs.\r\n\r\n> But since you've registered SP destination in `CTXDestination` variant, the SP addresses would be recognised by some RPCs. Is that intended? Should we verify that they return sane results?\r\n\r\nIn \"wallet: disable sending to silent payment address\" https://github.com/bitcoin/bitcoin/pull/28122/commits/ed75ce5362ab69c5968b85e42c45683519325626 SP addresses are marked as invalid by the `ValidDestinationVisitor` (which should cover all of the RPCs where an address can be passed) and `validateaddress` returns a message that this is a silent payment address, but support is not implemented yet.\r\n",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#issuecomment-1919057289",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28122"
    },
    {
      "event": "mentioned",
      "id": 11655435519,
      "node_id": "MEE_lADOABII585sQXuIzwAAAAK2t9T_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11655435519",
      "actor": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-31T12:58:46Z"
    },
    {
      "event": "subscribed",
      "id": 11655435533,
      "node_id": "SE_lADOABII585sQXuIzwAAAAK2t9UN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11655435533",
      "actor": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-31T12:58:46Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGRiZGEyNWMzOWIxNjY3OGU4ZmQwMDYwZTZiZTlmZWViNmUyNWE4MGU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dbda25c39b16678e8fd0060e6be9feeb6e25a80e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/dbda25c39b16678e8fd0060e6be9feeb6e25a80e",
      "tree": {
        "sha": "c9abd8dfb40e11dc537edc51069f589ac70b1d3f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c9abd8dfb40e11dc537edc51069f589ac70b1d3f"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/29fde0223abc706925188014209eba75390a9df8",
          "sha": "29fde0223abc706925188014209eba75390a9df8",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/29fde0223abc706925188014209eba75390a9df8"
        }
      ],
      "message": "Squashed 'src/secp256k1/' changes from efe85c70a2..6ddf3e958e\n\n6ddf3e958e [DEMO-ONLY] add bip352 test vectors running suite using python and ctypes\n0b5293f4f2 test: add simple BIP-352 test with mixed plain/taproot inputs\n26bdb5f195 silentpayments: implement output spending privkey creation (for receiver)\nd6c9856bde silentpayments: add routine for tx output scanning (for receiver)\n8460be58cc silentpayments: implement output pubkey creation (for sender)\ndbcccbb7cc silentpayments: add routine for creating labelled spend pubkeys (for addresses)\n2a00e12e58 silentpayments: add label tweak calculation routine\nb0e37968b0 silentpayments: add shared secret creation routine (a*B == A*b)\n842e5bf427 silentpayments: add tweaked pubkey creation routine (for light clients / sp index)\n98f5ba4aa6 silentpayments: add public tweak data creation routine\n81d13038d5 silentpayments: add private tweak data creation routine\n6e3ed2d5df doc: add module description for secp256k1-silentpayments\na9a5fe8e28 build: add skeleton for new silentpayments (BIP352) module\n2483627299 Merge bitcoin-core/secp256k1#1483: cmake: Recommend native CMake commands in README\n5ad3aa3dcd Merge bitcoin-core/secp256k1#1484: tests: Drop redundant _scalar_check_overflow calls\n51df2d9ab3 tests: Drop redundant _scalar_check_overflow calls\n3777e3f36a cmake: Recommend native CMake commands in README\ne4af41c61b Merge bitcoin-core/secp256k1#1249: cmake: Add `SECP256K1_LATE_CFLAGS` configure option\n3bf4d68fc0 Merge bitcoin-core/secp256k1#1482: build: Clean up handling of module dependencies\ne6822678ea build: Error if required module explicitly off\n89ec583ccf build: Clean up handling of module dependencies\n44378867a0 Merge bitcoin-core/secp256k1#1468: v0.4.1 release aftermath\na9db9f2d75 Merge bitcoin-core/secp256k1#1480: Get rid of untested sizeof(secp256k1_ge_storage) == 64 code path\n74b7c3b53e Merge bitcoin-core/secp256k1#1476: include: make docs more consistent\nb37fdb28ce check-abi: Minor UI improvements\nad5f589a94 check-abi: Default to HEAD for new version\n9fb7e2f156 release process: Style and formatting nits\nba5d72d626 assumptions: Use new STATIC_ASSERT macro\ne53c2d9ffc Require that sizeof(secp256k1_ge_storage) == 64\nd0ba2abbff util: Add STATIC_ASSERT macro\nda7bc1b803 include: in doc, remove article in front of \"pointer\"\naa3dd5280b include: make doc about ctx more consistent\ne3f690015a include: remove obvious \"cannot be NULL\" doc\nd373bf6d08 Merge bitcoin-core/secp256k1#1474: tests: restore scalar_mul test\n79e094517c Merge bitcoin-core/secp256k1#1473: Fix typos\n3dbfb48946 tests: restore scalar_mul test\nd77170a88d Fix typos\ne7053d065b release process: Add email step\n429d21dc79 release process: Run sanity checks on release PR\n42f8c51402 cmake: Add `SECP256K1_LATE_CFLAGS` configure option\n\ngit-subtree-dir: src/secp256k1\ngit-subtree-split: 6ddf3e958e60f01ef1e9c85d9f957d91cf0abba7",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2024-02-19T15:09:26Z"
      },
      "author": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2024-02-19T15:09:26Z"
      },
      "sha": "dbda25c39b16678e8fd0060e6be9feeb6e25a80e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDE2MzdjZWM3NWQ3ODBmMjU3NmY1NDYzYzI2NjhmNjhmYjU0M2QxZDQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1637cec75d780f2576f5463c2668f68fb543d1d4",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1637cec75d780f2576f5463c2668f68fb543d1d4",
      "tree": {
        "sha": "39c1d4d4729b19bb437665dc5314d791f70b60f0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/39c1d4d4729b19bb437665dc5314d791f70b60f0"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 39c1d4d4729b19bb437665dc5314d791f70b60f0\nparent 3cbc8cbc71d3d6ecfaf41164ce59c24ac94bae99\nparent dbda25c39b16678e8fd0060e6be9feeb6e25a80e\nauthor josibake <josibake@protonmail.com> 1708355366 +0100\ncommitter josibake <josibake@protonmail.com> 1708355366 +0100\n\nUpdate secp256k1\n\nAdd new silentpayments module\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmXTbyYACgkQity1WMTz\nPWXsOg/+L1Kf48H/9FoGpiXKEPQyR59JhuIp/DCMdE0VtGd5cgAG8LzXS0hRffRx\nAqCaGTcIiOJBqUFiigqg70RpiDR9QZVdxfKWEzLVs/vRAc8fqMFcuwOh+9yE/WFj\nrg4eRGjQLJrV3oxrxCYaqzs07RaVHkRXq71QvlHR2DwlwHiMo4G3FMvzCVVpX5Oa\nLM0p/055wbk/xkXqTOvcT4WlOhgKH3Og3YnOCsHys6K2Iyq9pnEOUfsGNzVmevEI\nRxuiDE1SvU187nvanx6GACrO7p4KrfS4tyBfKHxINj+5pLgTSxdJ9hUszlSsAMAr\nkF6vhHZCFeP5xQpGfkSGxSEmLohtQZNWJUQOyzL/nZTzQUR+3ncwuoIQwiS/yj30\n1ZBrose5c8JuS9qXrFVrZRyY++1dAe9l9v1aSVTfRUe4cbRYj3CDtFrw0fNLY0nU\nx+qGN4g4l26unptjo4830D8EFDLuIxI33il14QpBNvZxXt0ZIVPYvCkmeSV2ycTv\nQj2n7YVk4JdDpXO0OZ/vvuHD2Wl1UI02NimJBH8W34LcJHhpyieBw/NiyEkWQ8wn\nOPm25hYbmBPNRK5P/yAbWGFtwnCR+lPTBtBzj3SBLsASqEEcvOKpvdlsqgzGv7uT\nFRSHxwIs2juK7hvWuXJ+N0QR07emDnXGQten5WwbdRX02Uw1RN4=\n=73PL\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3cbc8cbc71d3d6ecfaf41164ce59c24ac94bae99",
          "sha": "3cbc8cbc71d3d6ecfaf41164ce59c24ac94bae99",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3cbc8cbc71d3d6ecfaf41164ce59c24ac94bae99"
        },
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dbda25c39b16678e8fd0060e6be9feeb6e25a80e",
          "sha": "dbda25c39b16678e8fd0060e6be9feeb6e25a80e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/dbda25c39b16678e8fd0060e6be9feeb6e25a80e"
        }
      ],
      "message": "Update secp256k1\n\nAdd new silentpayments module",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2024-02-19T15:09:26Z"
      },
      "author": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2024-02-19T15:09:26Z"
      },
      "sha": "1637cec75d780f2576f5463c2668f68fb543d1d4"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11851822218,
      "node_id": "HRFPE_lADOABII585sQXuIzwAAAALCbHSK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11851822218",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-19T16:07:27Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11852101896,
      "node_id": "HRFPE_lADOABII585sQXuIzwAAAALCcLkI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11852101896",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-19T16:32:09Z"
    },
    {
      "event": "labeled",
      "id": 11852104267,
      "node_id": "LE_lADOABII585sQXuIzwAAAALCcMJL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11852104267",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-19T16:32:20Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1952836123,
      "node_id": "IC_kwDOABII5850Zeob",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1952836123",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-19T16:32:21Z",
      "updated_at": "2024-02-19T16:32:21Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n\n🚧 At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/21735671954</sub>",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#issuecomment-1952836123",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28122"
    },
    {
      "event": "commented",
      "id": 1952864224,
      "node_id": "IC_kwDOABII5850Zlfg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1952864224",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-19T16:47:47Z",
      "updated_at": "2024-02-19T16:47:47Z",
      "author_association": "MEMBER",
      "body": "I've updated this to use https://github.com/bitcoin-core/secp256k1/pull/1471 for the cryptography needed for silent payments. This way, we don't need make any changes to `CKey`/`CPubKey` and keeps all of the low-level cryptography in `libsecp256k1`. This simplifies this PR to creating the necessary wrappers for the libsecp silent payments module and implementing the non-cryptography parts of the protocol (i.e. the client code).\r\n\r\nPutting this PR in draft for now, until https://github.com/bitcoin-core/secp256k1/pull/1471 merges.",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#issuecomment-1952864224",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28122"
    },
    {
      "event": "convert_to_draft",
      "id": 11852279591,
      "node_id": "CTDE_lADOABII585sQXuIzwAAAALCc28n",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11852279591",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-19T16:48:10Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-20T02:17:13Z",
      "updated_at": "2024-02-20T02:17:13Z",
      "source": {
        "issue": {
          "id": 2134155715,
          "node_id": "PR_kwDOABII585m2Xsr",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29432/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29432",
          "number": 29432,
          "state": "open",
          "state_reason": null,
          "title": "Stratum v2 Template Provider (take 3)",
          "body": "Based on on @Fi3's https://github.com/bitcoin/bitcoin/compare/master...Fi3:bitcoin:PatchTemplates which is based on @ccdle12's #27854. I rebased it and re-wrote the commit history. Compared to #28983 it introduces EllSwift in the handshake and fixes various bugs. I used that opportunity to change the branch name, which makes testing against [SRI](https://github.com/stratum-mining/stratum) slightly easier. There's no conceptual discussion on #28983 so it can be ignored by reviewers.\r\n\r\nSee [docs/stratum-v2.md](https://github.com/Sjors/bitcoin/blob/sv2/doc/stratum-v2.md) for a brief description of Stratum v2 and the role of Bitcoin Core in that system..\r\n\r\n## What to test and review?\r\n\r\nI'll make separate pull requests for parts that are ready for detailed review.\r\n\r\n- [ ] #29346\r\n- [ ] #29295 \r\n- [ ] Custom signet mining improvement: #29032\r\n- [ ] Make nested pull-requests easier: #29274\r\n\r\nSee the [testing guide](https://github.com/Sjors/bitcoin/blob/2023/11/sv2-poll/doc/stratum-v2.md#testing-guide) for various ways to test this PR. This branch is actively used by (testnet) pools, so it should be ready for high level review.\r\n\r\n### Related useful PRs\r\n\r\n- [ ] #26812\r\n\r\n## Implementation notes\r\n\r\nThere's roughly three layers:\r\n\r\n1. Noise encryption #29346\r\n2. Messages and transport layer\r\n3. The Template Provider\r\n\r\n* the `ci:` commits (#29274) are there to facilitate PR's against this branch, but they are not blocking for Stratum v2\r\n* the commits that move `transport.h` and some other stuff from `node` to `common` are not blocking. But in the longer run I'd like to see process separation between the node and the template provider.\r\n* I will occasionally add commits to _undo_ bug fixes, in order to stay compatible with the SRI `main` branch. Those will get dropped over time and can be ignored. \r\n\r\n## Contributing\r\n\r\nIf you want to help out with any of the issues below, please open a PR to my fork. I will then squash your commits into my own where needed. \r\n\r\n## Things left todo\r\n\r\n### Spec\r\n\r\n- [ ] modify spec to use `ProvideMissingTransactions`? (followup?)\r\n- [ ] pick a good default for `default_coinbase_tx_additional_output_size` (see `getblocktemplate` RPC)\r\n\r\n### Networking\r\n\r\n- [ ] add `-sv2bind` and `-sv2allowip`\r\n- [ ] optional `-sv2cert`\r\n- [ ] drop `Sv2TemplateProvider::SendBuf`, reuse p2p socket handling if possible\r\n- [ ] limit number of connected clients\r\n- [ ] maybe limit (number of) `coinbase_output_max_additional_size`\r\n- [ ] TMP / TODO comments at the top of `sv2_messages.h`\r\n\r\n### Testing\r\n\r\n- [ ] expand sv2_template_provider_tests\r\n- [ ] add transport fuzzer\r\n- [ ] add template provider fuzzer\r\n\r\n### Template generation and updating\r\n\r\n- [ ] group templates with the same `coinbase_tx_additional_output_size`\r\n- [ ] don't generate templates when no client is connected\r\n\r\n### Misc\r\n\r\n- [ ] move / refactor `GetMerklePathForCoinbase` helper (see Future Work in original PR, and https://github.com/stratum-mining/stratum/issues/567)\r\n- [ ] truncate long trace messages\r\n\r\n## Potential followups\r\n\r\n- [ ] implement Noise protocol and mock client in Python, add functional tests (based on `test/sv2_template_provider_tests.cpp`)\r\n- [ ] use process separation, e.g. a `bitcoin-tp` binary, see [multiprocess.md](https://github.com/bitcoin/bitcoin/blob/master/doc/design/multiprocess.md?plain=1)\r\n- [ ] make template updates push based, on top of Cluster Mempool, see [docs/stratum-v2.md](https://github.com/Sjors/bitcoin/blob/2023/11/sv2-poll/doc/stratum-v2.md) (for new blocks it's already push based)\r\n- [ ] push empty template for the next block (downstream can ignore or use, https://github.com/stratum-mining/stratum/issues/715)\r\n  - send prevhash for this template as soon as any new block arrives\r\n- [ ] push optimistic template for the next block\r\n  - send prevhash if and only if our template won (i.e. we got a `SubmitSolution` message)",
          "user": {
            "login": "Sjors",
            "id": 10217,
            "node_id": "MDQ6VXNlcjEwMjE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sjors",
            "html_url": "https://github.com/Sjors",
            "followers_url": "https://api.github.com/users/Sjors/followers",
            "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
            "organizations_url": "https://api.github.com/users/Sjors/orgs",
            "repos_url": "https://api.github.com/users/Sjors/repos",
            "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Sjors/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 8,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29432",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29432",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29432.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29432.patch"
          },
          "created_at": "2024-02-14T11:34:49Z",
          "updated_at": "2024-02-20T12:33:58Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1889921832,
      "node_id": "PRR_kwDOABII585wpeso",
      "url": null,
      "actor": null,
      "commit_id": "b885ac0ddd49de760c21457801e403736908e1b2",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#pullrequestreview-1889921832",
      "submitted_at": "2024-02-20T09:30:44Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11859515812,
      "node_id": "HRFPE_lADOABII585sQXuIzwAAAALC4dmk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11859515812",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-20T10:12:14Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGYxNjhkYjYzZmJhN2FhNTEyYThmOWM5MTA1NzI5ZTU1NDgxM2I0OGY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f168db63fba7aa512a8f9c9105729e554813b48f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f168db63fba7aa512a8f9c9105729e554813b48f",
      "tree": {
        "sha": "a94970fb2adfd3419c45b6baa1531deced0525ec",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a94970fb2adfd3419c45b6baa1531deced0525ec"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree a94970fb2adfd3419c45b6baa1531deced0525ec\nparent 1637cec75d780f2576f5463c2668f68fb543d1d4\nauthor josibake <josibake@protonmail.com> 1708430107 +0100\ncommitter josibake <josibake@protonmail.com> 1708431035 +0100\n\nsecp256k1: include tests_impl.h\n\nNeeded for CI, temp fix until fixed in upstream PR\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmXUluoACgkQity1WMTz\nPWWCPg//V3ubR4eZOQgm14U1Ui+Gr6oTnvbrGQdEVaGLRuLv9x+wMgzGMRw45Wvq\nN0hVkdevhQfmiGUqvbOHRyiryK6gZIz2x9muskJJ5IV9xHBjF5KKekTvrTfVl9S5\nmwzjSZ1ODk52rG7cjQ9djLPv8y/OiXw4eMazSIijhR5y3YEzKBZryg7SyvjJ9R+w\ns21qO/aWkTrfJBuv/wZpytc6tTVTG+BcUUTudV1oQvwQfqSL/vZNI7xYK60rxCKT\nBIRktxf0T37rxErIvpK4p9XyHGglgHNCxxIwVdmh9vzzn462UPZ6zP8P6lXQRls4\nMyLdmzb1nAgDKVlEV0gn3vw4iZaeIMT1qjzkUtm9t682ChOnscInXR69NEUb8aET\niEmj26rna9nsRLJijgcSG0BCQ6NDsXGEdzktw0Ne917qA0YtfuPRdgMuiafGKCve\nMVIOAkQ+uT24zKxoAwD7P1uC+lzTPLI+SLxme2aYj2jrZsAaFG/hU6t+crg7uKE6\nNylhH/klNb5up97W0TBF9WI0KdFRt2rEsRP/7n2uv8JtaD0lGNMM+OySNQHAxJag\nntVPyHZAAWxrXgQC/903m74VMRcI2Cs+j+11JwteVV6na8sujaTzToYdIZO1XxS/\nBlz/ymygF9tOd7U2vHZCheJ4euHzD6xD9SUfnt85nu/+8C9IPkQ=\n=OnuF\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1637cec75d780f2576f5463c2668f68fb543d1d4",
          "sha": "1637cec75d780f2576f5463c2668f68fb543d1d4",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1637cec75d780f2576f5463c2668f68fb543d1d4"
        }
      ],
      "message": "secp256k1: include tests_impl.h\n\nNeeded for CI, temp fix until fixed in upstream PR",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2024-02-20T12:10:35Z"
      },
      "author": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2024-02-20T11:55:07Z"
      },
      "sha": "f168db63fba7aa512a8f9c9105729e554813b48f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDFlN2RmNTc5YjQ0NWExYTY2MWMxZGFlMzYwMzM1ODg3NGZkODIxMjU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1e7df579b445a1a661c1dae3603358874fd82125",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1e7df579b445a1a661c1dae3603358874fd82125",
      "tree": {
        "sha": "21d3f75b31854e5f4ac1e06adc01740c7af08708",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/21d3f75b31854e5f4ac1e06adc01740c7af08708"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 21d3f75b31854e5f4ac1e06adc01740c7af08708\nparent f168db63fba7aa512a8f9c9105729e554813b48f\nauthor w0xlt <woltx@protonmail.com> 1665719290 -0300\ncommitter josibake <josibake@protonmail.com> 1708431082 +0100\n\nconf: add EDCH,SILENTPAYMENTS modules\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmXUluoACgkQity1WMTz\nPWVp2g/+IQHtFlqrDR/6FpewusjwH4BUYx9EF+15q5rbCi4S/XeG6DBpEaxeydpX\nAyEYcw/CmSAKrcswpNTg81J0KVjES16omN1c9Qc9sCpbTpTX5tQJ/XRJycPVeEmG\nWfOWWkv8m37uiS8X8RDuWd2YBAlvbEwSGDySN3vO8cXSfw80SjcwQGGg+qgaftCi\ny8eAIwxSoKiuj7v1OjLkPS/LUj/e0iHFf5joeodE5ISgxhaI7myG/6XrMVfoPn3n\nDzb0wI2haJJtZ5YG6Gu2ZxjiSIwtkDmZN3VVpX7UwzciEeyrRpKfWejeBy/v5oQO\ngjM8+oqOCEyQtbsgNW7fYOT4nwMGTj+VSOvFomsumF6b0b7qqQvQNQ2ud4zlR1Ao\nAPWPewKlK+TNRFKd98AY/LcWNRpVf8/H6I02j/8MRyxJ1cfHW/Isx+mM8BVhc9Sy\nWWRgutlx4MyC713AWyu7JvWkq/ngZUFyfAo+9yIpi2ww813T/3U376log+peWvoS\ngI79PwAzP0VSzlkAsnfVqffuFYHX4bJBws8MMdjGopeOh61Acp5xgtWArT/fk2kA\nSxjFk+saKuMDjsa424AGfcISMBgfrZQW0OR/V/yy3dlujqa2Ontxjb+yDvuQLl3v\noUp/cBWgvd+x/ALw57+tPBg7+c9o5CeYBowCd0HRJ34LHgJlgbo=\n=7w3a\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f168db63fba7aa512a8f9c9105729e554813b48f",
          "sha": "f168db63fba7aa512a8f9c9105729e554813b48f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f168db63fba7aa512a8f9c9105729e554813b48f"
        }
      ],
      "message": "conf: add EDCH,SILENTPAYMENTS modules",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2024-02-20T12:11:22Z"
      },
      "author": {
        "name": "w0xlt",
        "email": "woltx@protonmail.com",
        "date": "2022-10-14T03:48:10Z"
      },
      "sha": "1e7df579b445a1a661c1dae3603358874fd82125"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQ3NTg5NTRmY2ViYjIwNTdhZTQ2YzIyZmUwNDQ1YTk4ZDE4ODhmMzg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4758954fcebb2057ae46c22fe0445a98d1888f38",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4758954fcebb2057ae46c22fe0445a98d1888f38",
      "tree": {
        "sha": "6e39df98b587adc23d07ebbe724db29cade0f3a7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6e39df98b587adc23d07ebbe724db29cade0f3a7"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 6e39df98b587adc23d07ebbe724db29cade0f3a7\nparent 1e7df579b445a1a661c1dae3603358874fd82125\nauthor josibake <josibake@protonmail.com> 1707842519 +0100\ncommitter josibake <josibake@protonmail.com> 1708431082 +0100\n\ncrypto: add NUMS_H const\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmXUluoACgkQity1WMTz\nPWW+7g/8DNvu9RGG9Bq8BWtFxIk8lqBSbbtWIITvmAAIsE1JUGAqAwvfMshodv6l\nB/I0T+Gq88BCkU4sSHtHSg0QVLYLyi4OhgWptbkND3V1jENJWOG0C3t9J1dTCoQH\nG89bhHxQKoMNDdBmx3EEOYQps+vM4TPiU7Lf7UHTImtciZ5la3fZQr6d1s3Bgysf\nNG2YlYTd33/ZrPSGMngSaf9AEdjEuwzcUq8HOVkwV6p91o7h9KbOMo336BcevSBL\nuxssW4v16f2k4HobobElVt8qajDeuMmWsnaNvCqQadMqKzJRcOXv0M8I5nkw+nW3\nb2a6ab+bRzcmm0d7n+JtwKN5H4EXGhhKV3c3F4Ri5fPcBKz+ClboC1f6tD8IwAQ1\n/y7led+kPdmyYkNjpogjeDp2W+4mgIP7Mg86vikQh+8UlVcs5MDFe7d+i1/ebfVp\nb7yZa4AQkfxJFRZCv+J3jV5HwcF/5Luvhsn8aqGF/Nkat0PaFXZXdoVEALALzKQ9\nnKN+8CemS/96kX7wTvAYrEQhtV7275JbNfO2o4ytNfA+7B1v75zvecbPaqMidzv+\nZpKLWOflnlfFUEL1RL2A1w90xorOVl66sCHfvL3JwYB2XpPiuAK/mbcJgAqBa+M/\ncf8ysEjJf8RiFjKV5BlVgL3O+VV5wWgT/cqvNUkC9qrn/9TDj0U=\n=O8E8\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1e7df579b445a1a661c1dae3603358874fd82125",
          "sha": "1e7df579b445a1a661c1dae3603358874fd82125",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1e7df579b445a1a661c1dae3603358874fd82125"
        }
      ],
      "message": "crypto: add NUMS_H const",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2024-02-20T12:11:22Z"
      },
      "author": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2024-02-13T16:41:59Z"
      },
      "sha": "4758954fcebb2057ae46c22fe0445a98d1888f38"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDJkNDI0ZmJhMTRlMGIxNTY3ZTgwYTgwZjk3ZGM0N2RmNmU1NDlkYTg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2d424fba14e0b1567e80a80f97dc47df6e549da8",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/2d424fba14e0b1567e80a80f97dc47df6e549da8",
      "tree": {
        "sha": "8167686bbda879666db1c160f6195335ab03bcec",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8167686bbda879666db1c160f6195335ab03bcec"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 8167686bbda879666db1c160f6195335ab03bcec\nparent 4758954fcebb2057ae46c22fe0445a98d1888f38\nauthor josibake <josibake@protonmail.com> 1689711746 +0200\ncommitter josibake <josibake@protonmail.com> 1708431082 +0100\n\nIncrease the Bech32m limit if decoding SP address\n\nBech32m imposes a 90 character limit when decoding strings. Since a\nsilent payment address is the concatenation of two public keys, raise\nthis limit to 1024 when decoding a silent payment address.\n\nThe new limit is much higher than needed to account for forward\ncompatibility: new silent payment versions may add new data to the data\npart of the address.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmXUluoACgkQity1WMTz\nPWVtgRAAhOAMJybz8I5slnffCYjcJ8U2XFZqXmSEMW1Yuz231txIHhsVgHLm3cdb\nQW7OF5ZAl/aL11AIVkyZlaZ1ZPiUXpdv8L3uL0qD0tzs9IcADAHgyBpPEfcnILtA\nu8VJtY9+oLD0VYPwuY8SqY7wJrX/is+PR+X0I9KaArlmdpeiefEp47KBeAnvpXb8\nQnKNgTCQIN3cW6kVAQDH8ggZ/P5hv1eeGOTq6z35KAofvDEattjGCfCKfdIXlrYl\n/p9l1vDeX6T8iT+8/9Dd+w5mum39So91wRMAq/8BEHt2PWm0E1WpxWAYe26vufgj\nPoGPCX9eRwzPJB+zsVXOHons0KSs30+G5vQV7ZueObW880aXIEcWXLtYQDHPXhYs\nXBmn4IcNuWx8JyFLXx8jpP0p7oD7WW0SIK35Na1qORVaviL3ctLyvTiIP2J++FbK\nABkBCF4Mp72VcvZugwnVYLwh7nk52oeuS+xdTwviC43aw1X8ggFbqzVlEQBIb/Qf\n7CH8TWW7f1bg8gT4629R6eImAcHrlm7aHKriBl08WZ5jtEez1kt51Hx533Z1qwkt\nZHPh2gCIs3ZQwc2HgoQeRrxYD1WWXQjdgYewuI0U7atMfM7RQ7lvlMruqPugufnR\nfQiHRnvIW2izS/i006c1URJttH0mfF0MH3joxj9ZsgbW9xHmoeg=\n=GCjl\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4758954fcebb2057ae46c22fe0445a98d1888f38",
          "sha": "4758954fcebb2057ae46c22fe0445a98d1888f38",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4758954fcebb2057ae46c22fe0445a98d1888f38"
        }
      ],
      "message": "Increase the Bech32m limit if decoding SP address\n\nBech32m imposes a 90 character limit when decoding strings. Since a\nsilent payment address is the concatenation of two public keys, raise\nthis limit to 1024 when decoding a silent payment address.\n\nThe new limit is much higher than needed to account for forward\ncompatibility: new silent payment versions may add new data to the data\npart of the address.",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2024-02-20T12:11:22Z"
      },
      "author": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2023-07-18T20:22:26Z"
      },
      "sha": "2d424fba14e0b1567e80a80f97dc47df6e549da8"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDA5MTFlODcwMTRiODZmMWU3N2EyNmY0Mjk1MzAzN2IzYjI2M2ZhOWE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0911e87014b86f1e77a26f42953037b3b263fa9a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/0911e87014b86f1e77a26f42953037b3b263fa9a",
      "tree": {
        "sha": "5f133c1c080ab0ca26c9f5dc0543d4094bbcca80",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5f133c1c080ab0ca26c9f5dc0543d4094bbcca80"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 5f133c1c080ab0ca26c9f5dc0543d4094bbcca80\nparent 2d424fba14e0b1567e80a80f97dc47df6e549da8\nauthor josibake <josibake@protonmail.com> 1689711791 +0200\ncommitter josibake <josibake@protonmail.com> 1708431082 +0100\n\nAdd \"sp\" HRP\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmXUluoACgkQity1WMTz\nPWXyRQ/7BmGiKhrvjbDIMh/wokE0ijK+d+PvBFOE7zCW78MS9OtIf8jTiGcK2R4B\nj1aR/2XZrJqxMXcR3VLsc9r+UKktpYYvpjhm7Wj2s2SMfnOiJbq5qvJwmQd5DAYO\n5w4L1yd5BEYgvG4J71l8G35x5AScX/ipjoPYBEEpTNBwPtUrFjaLkF2wL2p5yQCy\nC7nckm7o4uYMWg6uVfkAirxBK1xNiVk1CipvRAYBNDrJtBJ9yaE6R2zgW0Tl6e8N\nmKd6atVw//rnPu+SFHvUhaHZyVXsGFOL0Il3frlp9OZguM2r+8lCgQoECSObI8wZ\nOcIuAWEWY9ii+1Ar9I8xtCtdeNbY5lXkKVMqnXGNYbsCqmU4n6QLx6Ol4ptzpVIH\noVqga+0iI6hs9Bvca7B6W59iz2xHx+YAiTAz44d6yUIUVOzHrMwhh/HGVKFq04iu\n07UgHAT4UWQqLr4CesPy3/LaiaBWGHtJokSJt0xZC8dsg1aDsP6jUEnMjmvWanUr\n1HEQrJDuzuUhPbVE5sltZxm1LURTCGerTStAnikvhguCBLnasvU0rv/VNjV4TfpT\n9gbg5XnTGv3esEg9Dt7dIk+pAhzeTUJpEsrUNpwV0HdujZNXua7kjwkfbtPu9Noe\nCjHiESy0soJpGLhIgTmHnzsrSPfg+pzJS4u9jJmoZjh2s00YQ0I=\n=ToWr\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2d424fba14e0b1567e80a80f97dc47df6e549da8",
          "sha": "2d424fba14e0b1567e80a80f97dc47df6e549da8",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/2d424fba14e0b1567e80a80f97dc47df6e549da8"
        }
      ],
      "message": "Add \"sp\" HRP",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2024-02-20T12:11:22Z"
      },
      "author": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2023-07-18T20:23:11Z"
      },
      "sha": "0911e87014b86f1e77a26f42953037b3b263fa9a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGUxN2E3Nzg0ZTRiNjk4N2VkYmZkN2E5ODc0ZjRkY2Q4NGM2NWJlNzY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e17a7784e4b6987edbfd7a9874f4dcd84c65be76",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e17a7784e4b6987edbfd7a9874f4dcd84c65be76",
      "tree": {
        "sha": "b351d2bc4b42f03570bd4233eb28b6b5400ae69f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b351d2bc4b42f03570bd4233eb28b6b5400ae69f"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree b351d2bc4b42f03570bd4233eb28b6b5400ae69f\nparent 0911e87014b86f1e77a26f42953037b3b263fa9a\nauthor josibake <josibake@protonmail.com> 1691675009 +0200\ncommitter josibake <josibake@protonmail.com> 1708431083 +0100\n\nAdd V0SilentPaymentDestination address type\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmXUlusACgkQity1WMTz\nPWWg6BAA0LQIqsRyx0Dr7Ychk+nHbcyAqxd9nH2fJRwDkyJlNhiUwR2zcMnA/4Xi\n8bnpG4pr02y6FDWUoQ6ATTj7aLdAgF4mEzgnHR/kWOLUArcAVpQPuFGNSrA+Q26E\n7ZQ8Ju2v8751E5BySYRsZmkr/4AQdAA9gi+H8c+vK2/S2R1pRvMimGR2UBSLi+y6\nLHbMpTijFidSzZ3hEwdy8acFPrfcuZvnaZ/Xw+9paY5bzpbW1sD1y9byFIQBJN7N\n/eE9kRGBSyevAu8yG/D8qEDph4R8pYgEagyPptolyy5jvx+l0MFDB7135PRWmcm3\nkB1h2VxHiCautLCG/jMNOd2oHoV/sZX9JGRQyI4q6W8AiW+P4OCea6Zc33US/QHK\nS1CvLVakswWLHyce3an0NLw6hkFO1ifHXONTKoMmXNyKWuaKsJVneDFsAJbO3U9s\nA48L9KSV9MBJ3roC1tiZNOZ5IMasQEqkIyi6FjNyAYBoHl1JILhD7fekiizCDCol\nuvoJVRLAYH3mQjBRSCLnRTgLiONrs6Kq6oW1Y/a7p1RF3Lm/tADrf8HLJFRONBWf\nqeVSdFdqb/oWhQt4ZyLFFp4klFshpgfuJwn2Rg0Gvd6AIRBBXsW0rDiNh5iyIual\nm/SMQzLVepdgdR6naj2QUoBbzKMer6vmg1nNlDF79GurjqsuKMM=\n=m7tO\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0911e87014b86f1e77a26f42953037b3b263fa9a",
          "sha": "0911e87014b86f1e77a26f42953037b3b263fa9a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0911e87014b86f1e77a26f42953037b3b263fa9a"
        }
      ],
      "message": "Add V0SilentPaymentDestination address type",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2024-02-20T12:11:23Z"
      },
      "author": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2023-08-10T13:43:29Z"
      },
      "sha": "e17a7784e4b6987edbfd7a9874f4dcd84c65be76"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDJlZDkxNmFiOWRmY2E5NzViN2EyZDViOWI4NDY4MmI4ZjczNDBjMDg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2ed916ab9dfca975b7a2d5b9b84682b8f7340c08",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/2ed916ab9dfca975b7a2d5b9b84682b8f7340c08",
      "tree": {
        "sha": "c7a1db22966255e6a45139ff92e561bb71e4424c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c7a1db22966255e6a45139ff92e561bb71e4424c"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree c7a1db22966255e6a45139ff92e561bb71e4424c\nparent e17a7784e4b6987edbfd7a9874f4dcd84c65be76\nauthor josibake <josibake@protonmail.com> 1707319694 +0100\ncommitter josibake <josibake@protonmail.com> 1708431083 +0100\n\ncrypto: add bip352.{h,cpp} module\n\nWrap the silentpayments module from libsecp256k1.\n\nCo-Authored-By: Sebastian Falbesoner <sebastian.falbesoner@gmail.com>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmXUlvIACgkQity1WMTz\nPWWQ2RAA088Te4P58UoFU7erQ+ddr8H5x9Pm7edeFkMM7B7IUMr7mwM2aWDXsYOo\nBWF1IfV1xWkgWOYB4ndj4C8DWKu0jQcQWvTTZTLniTYlKkyXLt8V8WGzhVYpN0rU\nRAJDoRsa4TUDsp2cFvGI3mojs1NQQgxWIfabIHxvDytzeuCA6ObwOFLmLIf7VVkj\n5IJpnuojqBtI/QstHhT1z0/rRI5q6uQT5ppRd3iGwTlgUQpA1bKk7pxXza+7P1BL\nf3sWE69QKM1P20hud3OpFPr0kBaJR9spc3wUnE8WKLDDIAhDfTpa5cfYi9rJcKSU\nOxz3vBTSsp/u6YkDFdbYsrVZcLYQzJhHQ+pgnSHpNuEPzsTQDju7lX5IOv0IVmFZ\noq3cgub/dwn7kf2ITTiodufHOakdSPD6UESmQL3GIg8cb+AIYTwI496NXIMalsI0\n0edt1aabtSQ8GKJGcG0B0LHigbyDIlNQpA+i7TrkqC6PU/0wsPtITo0qdAOhvuKb\n0x8OfKjvSsHArrc9cNiq6DULmHQqHwl1KJsXW3ixVVv7R3pRKQNnaENgy5sH1Wuy\nR4QpuJtq7SiFlz3eSRcdgzMrpbnGhqUWOY508yDyQEjRXkvT4njLOlIgwIxiA28b\nHHiM+MqFaFtpdnuE8+EB2wimxixVbvrpD2t4TUv8a/6XNzAO8wc=\n=Yf0C\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e17a7784e4b6987edbfd7a9874f4dcd84c65be76",
          "sha": "e17a7784e4b6987edbfd7a9874f4dcd84c65be76",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e17a7784e4b6987edbfd7a9874f4dcd84c65be76"
        }
      ],
      "message": "crypto: add bip352.{h,cpp} module\n\nWrap the silentpayments module from libsecp256k1.\n\nCo-Authored-By: Sebastian Falbesoner <sebastian.falbesoner@gmail.com>",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2024-02-20T12:11:23Z"
      },
      "author": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2024-02-07T15:28:14Z"
      },
      "sha": "2ed916ab9dfca975b7a2d5b9b84682b8f7340c08"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDliYWZlMTJjMDNhZmExNWU5NzVjMmJhZWQ0NGIwOWY2M2IzZWE0NWI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9bafe12c03afa15e975c2baed44b09f63b3ea45b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9bafe12c03afa15e975c2baed44b09f63b3ea45b",
      "tree": {
        "sha": "b91daf5a4ffc5bcabef62987b5aea87eaf293793",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b91daf5a4ffc5bcabef62987b5aea87eaf293793"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree b91daf5a4ffc5bcabef62987b5aea87eaf293793\nparent 2ed916ab9dfca975b7a2d5b9b84682b8f7340c08\nauthor josibake <josibake@protonmail.com> 1694696135 +0200\ncommitter josibake <josibake@protonmail.com> 1708431090 +0100\n\nImplement BIP352: Silent Payments\n\nImplement sending and receiving, per BIP352. This is done without\nrequiring a full wallet, in order to simplify unit testing and to create\na more clear boundary as to what pertains to the BIP and what is left to\nthe wallet to decided as an implementation.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmXUlvIACgkQity1WMTz\nPWWOghAAq1n4cpPxuDCsZl3e4jmaaQZYt3QIHb+7dSbBRConfUvs4xoKYM21/Fzj\nETlYdJjj57GY+1U3xfKeF4JpiN/3Yd5lhc0lN4xvSDMNJ9CUTmVtsnzWeo7/1E+G\nlnBmjkWtcD+dS8QVYGxYFr9/aQLXI/1QkKMIrkD5hnV5dVzrSyP06/jJFD62KpDc\n4s2n/mzWwonLKJ+Y0oDNdWOqN/pKvxuM0IKOgeH/w7C6LqrSWV5sjyPUsJBwZZCP\n/LKFfflPBMhJCUeyujglP18B7T7i3C9wvX8BWipUiHvqo1iglCZS6TNMVzMrJWZd\nk61jPV9aLRpkODOV+OoMFFMzgqBF5Vmru6DFhuW/VaPZrdiKtXxEj7t7IcMTjqHQ\nEy9SXl4AQCSluU+fix5gdUnCDU+fxM5iR+JTzLRFb+gwjRHbIJPm+IWXuFGcgHqS\nkgG1AQzLPdrRtDExzS9BsiXkWyOpdxoRFUdA4vX9bq+tohadRzNbuakK31x8EMmX\nT4eMHhE+6R0sR73yJsYlGK3O2FZclYCOkPNJqniwy9I1AZOnp4Hlw61ktv8vX4yt\nI+M/SbiSY8mV8HcnpQLhp+2JIlwit/lKQlxqziF+h8v6gemCzgvUHUfKvJG2Ug4G\nvDyyixJ6MY8Yy5+XqfzGBkeNzefcO/pxvDpTQZltqX5hT7AZNzA=\n=S6H5\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2ed916ab9dfca975b7a2d5b9b84682b8f7340c08",
          "sha": "2ed916ab9dfca975b7a2d5b9b84682b8f7340c08",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/2ed916ab9dfca975b7a2d5b9b84682b8f7340c08"
        }
      ],
      "message": "Implement BIP352: Silent Payments\n\nImplement sending and receiving, per BIP352. This is done without\nrequiring a full wallet, in order to simplify unit testing and to create\na more clear boundary as to what pertains to the BIP and what is left to\nthe wallet to decided as an implementation.",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2024-02-20T12:11:30Z"
      },
      "author": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2023-09-14T12:55:35Z"
      },
      "sha": "9bafe12c03afa15e975c2baed44b09f63b3ea45b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDkyNGQ5OTdhY2UxOTE0ZjJmYjg5Y2VhNDAxYzQ5ODIzZmFmZDU0M2U",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/924d997ace1914f2fb89cea401c49823fafd543e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/924d997ace1914f2fb89cea401c49823fafd543e",
      "tree": {
        "sha": "a0e64a00d1fdd7187494ab108bb0621ee775e196",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a0e64a00d1fdd7187494ab108bb0621ee775e196"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree a0e64a00d1fdd7187494ab108bb0621ee775e196\nparent 9bafe12c03afa15e975c2baed44b09f63b3ea45b\nauthor josibake <josibake@protonmail.com> 1694507187 +0200\ncommitter josibake <josibake@protonmail.com> 1708431090 +0100\n\nwallet: disable sending to silent payment address\n\nHave `IsValidDestination` return false for silent payment destinations\nand set an error string when decoding a silent payment address.\n\nThis prevents anyone from sending to a silent payment address before\nsending is implemented in the wallet, but also allows the functions to\nbe used in the unit testing famework.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmXUlvIACgkQity1WMTz\nPWWPOA/9FYp7SJWvWsJUP+Ul93ZR1vwHAnQ5oYWVDpoY4VS9U1SehGERtFW9d48h\njcTd6N0BNAlbbBjatEuXZKfh/lyiwhyU7njLrabuedLpwEyVI/yTCizj9qCq9dDN\nzUPNheYqn9aSg9TZOLOtYmqEX7ktQgIlNF3R5S6eeIPKFtCB/FhG3T9Qrf/71iJ3\n2EWR1cOo2HvKfqkgzOI97QcEErtaPdfKo5MEzowmmzo7D9nJIxvOOaayZWCn+90k\nWFzDgc952UcNvRFzcJoiWh6FQOSE+qLGVpxycY6b+RJftzLvOsWqNeOdBaDDxnlN\nE1aMW1XYZKNiYetKjVhNvcbNuW322PBVWrmd6PcQIDg5mzB1EadqfKnBV6LUzBC8\ngtx7EA9WFZ0mc08yKU5IakHzvNaZmeBEKL2dILGOuXlOhJ/As/aNHmbGJxiHRX0p\np/7X3mta4P1w1TGvIhMg5lucQ7YFfkWFzelVWc0ir15wDVV8iYdpuFPpSdkFEyZC\nqPOoApLUgaX+thaZxTUuojbCNL+MZEHEKtgBlf3Ar3V6m1hJkPJb7qDAbYVwYvN9\nJtQYWVvPxCsrfD55+qkJ083KSNKUz7tQNEoCftDoEROblQIYiMTTzAohUwgSgwbF\nm9sJ4nc/jQpMGMlfwnI7/Oozd2jcZGloILa6aCseoGSxLmll6BE=\n=nmDc\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9bafe12c03afa15e975c2baed44b09f63b3ea45b",
          "sha": "9bafe12c03afa15e975c2baed44b09f63b3ea45b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9bafe12c03afa15e975c2baed44b09f63b3ea45b"
        }
      ],
      "message": "wallet: disable sending to silent payment address\n\nHave `IsValidDestination` return false for silent payment destinations\nand set an error string when decoding a silent payment address.\n\nThis prevents anyone from sending to a silent payment address before\nsending is implemented in the wallet, but also allows the functions to\nbe used in the unit testing famework.",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2024-02-20T12:11:30Z"
      },
      "author": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2023-09-12T08:26:27Z"
      },
      "sha": "924d997ace1914f2fb89cea401c49823fafd543e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDhjMTMyOGY0MGI4MGU1ZmQ0YjM0YWIzNTAwNTcwNGY3NmIwNWZkZmE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "tree": {
        "sha": "a15d7d6abc61d618644f7cd73a0777ecc5077761",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a15d7d6abc61d618644f7cd73a0777ecc5077761"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree a15d7d6abc61d618644f7cd73a0777ecc5077761\nparent 924d997ace1914f2fb89cea401c49823fafd543e\nauthor josibake <josibake@protonmail.com> 1689711546 +0200\ncommitter josibake <josibake@protonmail.com> 1708431090 +0100\n\nAdd BIP352 test vectors as unit tests\n\nUse the test vectors to test sending and receiving. A few cases are not\ncovered here, namely anything that requires testing specific to the\nwallet. For example:\n\n* Taproot script path spending is not tested, as that is better tested in\n  a wallets coin selection / signing logic\n* Re-computing outputs during RBF is not tested, as that is better\n  tested in a wallets RBF logic\n\nThe unit tests are written in such a way that adding new test cases is\nas easy as updating the JSON file.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmXUlv0ACgkQity1WMTz\nPWVdZw/+IFugC2x9XaZgVkebKi7PHq+e9l3Nlp0mbprnj2M1ndzsHd2Wgor/H0yc\nRt41JW4RQ4LZ6UnY422eZP+Q0aQm5HLzUQeK21hG2LXq4bSb3L/wOtWsEUw2c1jD\ngdvm4xrDNN4KeqvatXVeHfO2bBM8bSPP6Bo7pTCN9nQIL4WE+adIO2jpTME6yvPJ\n2qJCO81r9GZheJU6bjTLcP4jqFnQZuGdhHcLVlrl+PbyfHAyWndtUbcR3ADKr/uq\nZHUKhT4+DLl7t8wChX6npsyvbL9fgMLtv2EO3oXA2KcFzX/ZzJoTCwB5IXkwG7It\ndotZ9QCYvj0EAhEViq6aF4DVqwdTbmbOiJcodT9yJoQNlqdByEAlfM6YStMjjg73\nOxHkUaU44ajC7ZlZfzqNV0sN0xXCeqigJ2LA5XmSBacwdFwhf1aQ3SPK8sHYOTv1\nVE3qJ2uw6bRm96eA/HNGxKEAi4f3nZ+o2QdoGqESeu5vWLhd2fx2XRCPcYAYmGV9\nVy8b/9wIao2qb3x86jsrCFsqqQvSXtRtCtYq1cmdgN2RJYLuMOicj1oSf3ZPS5Vw\ndpwqTfLcKoAyi/zZBywuhn/CdzcQZRg4vDtMi2ezAhE3nIUlRFt7dw1/DkNI768O\niptOEd6//81vI+XbSHfFUAw6Io0F1K+YjbF+8/5YRsAyXHgY+4w=\n=v19l\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/924d997ace1914f2fb89cea401c49823fafd543e",
          "sha": "924d997ace1914f2fb89cea401c49823fafd543e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/924d997ace1914f2fb89cea401c49823fafd543e"
        }
      ],
      "message": "Add BIP352 test vectors as unit tests\n\nUse the test vectors to test sending and receiving. A few cases are not\ncovered here, namely anything that requires testing specific to the\nwallet. For example:\n\n* Taproot script path spending is not tested, as that is better tested in\n  a wallets coin selection / signing logic\n* Re-computing outputs during RBF is not tested, as that is better\n  tested in a wallets RBF logic\n\nThe unit tests are written in such a way that adding new test cases is\nas easy as updating the JSON file.",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2024-02-20T12:11:30Z"
      },
      "author": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2023-07-18T20:19:06Z"
      },
      "sha": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11861391874,
      "node_id": "HRFPE_lADOABII585sQXuIzwAAAALC_noC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11861391874",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-20T12:56:27Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1271314036",
      "pull_request_review_id": 1542113471,
      "id": 1271314036,
      "node_id": "PRRC_kwDOABII585LxrZ0",
      "diff_hunk": "@@ -508,6 +511,7 @@ class CRegTestParams : public CChainParams\n         base58Prefixes[EXT_SECRET_KEY] = {0x04, 0x35, 0x83, 0x94};\n \n         bech32_hrp = \"bcrt\";\n+        silent_payment_hrp = \"sprt\";",
      "path": "src/kernel/chainparams.cpp",
      "position": 28,
      "original_position": 28,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "6d11e3c435397dab960bc2b5e6cb5a2a1166b39b",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Didn't verify my theory in practice yet, but according to my calculations having a HRP of size 4 would exceed the current 117 character limit (see https://github.com/bitcoin/bips/pull/1458/files#r1271312933). I assume the regtest-HRP should just also be set to \"tsp\" here (as it's currently stated in the BIP)? Otherweise the limit has to be raised by one.\r\n\r\nFun fact: in #27827 the \"sprt\" HRP works, but this is because the pubkeys are encoded as x-only (see commit https://github.com/bitcoin/bitcoin/pull/27827/commits/3a0d081ee07f3c65220a45855c96bf35ac2643fd), i.e. the payload of the address is only 64 bytes instead of 66 bytes and hence the limit is not exceeded.",
      "created_at": "2023-07-22T16:10:19Z",
      "updated_at": "2023-07-22T16:10:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1271314036",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1271314036"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 526,
      "original_line": 526,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1271484187",
      "pull_request_review_id": 1542293714,
      "id": 1271484187,
      "node_id": "PRRC_kwDOABII585LyU8b",
      "diff_hunk": "@@ -0,0 +1,56 @@\n+#ifndef BITCOIN_WALLET_SILENTPAYMENT_H\n+#define BITCOIN_WALLET_SILENTPAYMENT_H",
      "path": "src/wallet/silentpayments.h",
      "position": null,
      "original_position": 2,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "1d75df2aaeb34bb3058294dd02559bd35e27ae37",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "c75d9de0683a91151eb4a508cb64a8937ca92 `s/PAYMENT_H/PAYMENTS_H/` in `ifndef/define/endif` or rename the files to `silentpayment.{h,cpp}`\r\n\r\n```bash\r\n$ test/lint/lint-include-guards.py \r\nsrc/wallet/silentpayments.h seems to be missing the expected include guard:\r\n  #ifndef BITCOIN_WALLET_SILENTPAYMENTS_H\r\n  #define BITCOIN_WALLET_SILENTPAYMENTS_H\r\n  ...\r\n  #endif // BITCOIN_WALLET_SILENTPAYMENTS_H\r\n```\r\n",
      "created_at": "2023-07-23T17:27:50Z",
      "updated_at": "2023-07-23T17:27:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1271484187",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1271484187"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1274629530",
      "pull_request_review_id": 1547207752,
      "id": 1274629530,
      "node_id": "PRRC_kwDOABII585L-U2a",
      "diff_hunk": "@@ -0,0 +1,56 @@\n+#ifndef BITCOIN_WALLET_SILENTPAYMENT_H\n+#define BITCOIN_WALLET_SILENTPAYMENT_H",
      "path": "src/wallet/silentpayments.h",
      "position": null,
      "original_position": 2,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "1d75df2aaeb34bb3058294dd02559bd35e27ae37",
      "in_reply_to_id": 1271484187,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed, thanks!",
      "created_at": "2023-07-26T09:11:40Z",
      "updated_at": "2023-07-26T09:11:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1274629530",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1274629530"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1275442463",
      "pull_request_review_id": 1548528898,
      "id": 1275442463,
      "node_id": "PRRC_kwDOABII585MBbUf",
      "diff_hunk": "@@ -172,6 +174,79 @@ bool CKey::Negate()\n     return secp256k1_ec_seckey_negate(secp256k1_context_sign, keydata.data());\n }\n \n+CKey CKey::AddTweak(const unsigned char *tweak32) const\n+{\n+    assert(fValid);\n+\n+    unsigned char tweaked_seckey[32];\n+    memcpy(tweaked_seckey, data(), 32);",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 25,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "56882622faf469b6f948f79a69c3c8ddbde92ff8",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In 56882622faf469b6f948f79a69c3c8ddbde92ff8 \"crypto: update CKey, CPubkey for silent payments\"\r\n\r\nWe shouldn't be copying secret data out of a secure structure into an insecure one. When `tweaked_seckey` is destroyed, the underlying data may still linger in memory and end up being read by something else.\r\n\r\nIf this function must return a new `CKey`, then it should instantiate it here and perform the operation on it's `data()` rather than doing this copy.\r\n\r\nHowever, I would prefer if this function mirrored the libsecp one where the tweaking occurs on and modified this `CKey` itself.",
      "created_at": "2023-07-26T20:16:57Z",
      "updated_at": "2023-07-26T20:21:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1275442463",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1275442463"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": 181,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 182,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1275442608",
      "pull_request_review_id": 1548528898,
      "id": 1275442608,
      "node_id": "PRRC_kwDOABII585MBbWw",
      "diff_hunk": "@@ -172,6 +174,79 @@ bool CKey::Negate()\n     return secp256k1_ec_seckey_negate(secp256k1_context_sign, keydata.data());\n }\n \n+CKey CKey::AddTweak(const unsigned char *tweak32) const\n+{\n+    assert(fValid);\n+\n+    unsigned char tweaked_seckey[32];\n+    memcpy(tweaked_seckey, data(), 32);\n+\n+    int ret = secp256k1_ec_seckey_tweak_add(secp256k1_context_sign, tweaked_seckey, tweak32);\n+    assert(ret);\n+\n+    CKey new_seckey;\n+    new_seckey.Set(std::begin(tweaked_seckey), std::end(tweaked_seckey), true);\n+\n+    return new_seckey;\n+}\n+\n+CKey CKey::MultiplyTweak(const unsigned char *tweak32) const\n+{\n+    assert(fValid);\n+\n+    unsigned char tweaked_seckey[32];\n+    memcpy(tweaked_seckey, data(), 32);",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 41,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "56882622faf469b6f948f79a69c3c8ddbde92ff8",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In 56882622faf469b6f948f79a69c3c8ddbde92ff8 \"crypto: update CKey, CPubkey for silent payments\"\r\n\r\nSame data copying concerns as `AddTweak`.",
      "created_at": "2023-07-26T20:17:10Z",
      "updated_at": "2023-07-26T20:21:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1275442608",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1275442608"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": 197,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 198,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276883646",
      "pull_request_review_id": 1550940798,
      "id": 1276883646,
      "node_id": "PRRC_kwDOABII585MG7K-",
      "diff_hunk": "@@ -211,6 +211,12 @@ class CPubKey\n      */\n     static bool CheckLowS(const std::vector<unsigned char>& vchSig);\n \n+    //! Add a number of public keys together.\n+    static CPubKey Combine(std::vector<CPubKey> pubkeys);",
      "path": "src/pubkey.h",
      "position": null,
      "original_position": 5,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "dc18efa78d014be0a09e4c986813086e56c251a3",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "56882622faf469b6f948f79a69c3c8ddbde92ff8\r\n```suggestion\r\n    static CPubKey Combine(const std::vector<CPubKey> &pubkeys);\r\n```",
      "created_at": "2023-07-27T22:33:46Z",
      "updated_at": "2023-07-28T08:55:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1276883646",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276883646"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 215,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276885882",
      "pull_request_review_id": 1550940798,
      "id": 1276885882,
      "node_id": "PRRC_kwDOABII585MG7t6",
      "diff_hunk": "@@ -0,0 +1,179 @@\n+#include <wallet/silentpayments.h>\n+#include <arith_uint256.h>\n+#include <coins.h>\n+#include <crypto/common.h>\n+#include <crypto/hmac_sha512.h>\n+#include <key_io.h>\n+#include <undo.h>\n+#include <logging.h>\n+\n+namespace wallet {\n+\n+Recipient::Recipient(const CKey& scan_seckey, const CKey& spend_seckey)\n+{\n+    m_scan_seckey = scan_seckey;\n+    m_scan_pubkey = CPubKey{m_scan_seckey.GetPubKey()};\n+    m_spend_seckey = spend_seckey;\n+    m_spend_pubkey = CPubKey{m_spend_seckey.GetPubKey()};\n+}",
      "path": "src/wallet/silentpayments.cpp",
      "position": null,
      "original_position": 18,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "dc18efa78d014be0a09e4c986813086e56c251a3",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "65b2dec1e39ea4efb327457563d2b18d49b4bc4c: Use an initializer list for data members",
      "created_at": "2023-07-27T22:36:35Z",
      "updated_at": "2023-07-28T08:55:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1276885882",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276885882"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": 12,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 70,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276888369",
      "pull_request_review_id": 1550940798,
      "id": 1276888369,
      "node_id": "PRRC_kwDOABII585MG8Ux",
      "diff_hunk": "@@ -0,0 +1,179 @@\n+#include <wallet/silentpayments.h>\n+#include <arith_uint256.h>\n+#include <coins.h>\n+#include <crypto/common.h>\n+#include <crypto/hmac_sha512.h>\n+#include <key_io.h>\n+#include <undo.h>\n+#include <logging.h>\n+\n+namespace wallet {\n+\n+Recipient::Recipient(const CKey& scan_seckey, const CKey& spend_seckey)\n+{\n+    m_scan_seckey = scan_seckey;\n+    m_scan_pubkey = CPubKey{m_scan_seckey.GetPubKey()};\n+    m_spend_seckey = spend_seckey;\n+    m_spend_pubkey = CPubKey{m_spend_seckey.GetPubKey()};\n+}\n+\n+void Recipient::ComputeECDHSharedSecret(const CPubKey& sender_public_key, const std::vector<COutPoint>& tx_outpoints)\n+{\n+    const auto& outpoint_hash = HashOutpoints(tx_outpoints);\n+    auto tweaked_scan_seckey = m_scan_seckey.MultiplyTweak(outpoint_hash.begin());\n+    CPubKey result = tweaked_scan_seckey.SilentPaymentECDH(sender_public_key);\n+\n+    m_ecdh_pubkey = result;\n+    assert(m_ecdh_pubkey.IsValid());\n+}\n+\n+std::pair<CKey,CPubKey> Recipient::CreateOutput(const uint32_t output_index) const\n+{\n+    HashWriter h;\n+    h.write(Span{m_ecdh_pubkey});\n+    unsigned char num[4];\n+    WriteBE32(num, output_index);\n+    h << num;\n+    uint256 shared_secret = h.GetSHA256();\n+\n+    const auto& result_pubkey{m_spend_pubkey.AddTweak(shared_secret.begin())};\n+    const auto& result_seckey{m_spend_seckey.AddTweak(shared_secret.begin())};\n+\n+    return {result_seckey, result_pubkey};\n+}\n+\n+std::pair<CPubKey,CPubKey> Recipient::GetAddress() const\n+{\n+    return {m_scan_pubkey, m_spend_pubkey};\n+}\n+\n+std::vector<CKey> Recipient::ScanTxOutputs(std::vector<XOnlyPubKey> output_pub_keys)\n+{\n+    // Because a sender can create multiple outputs for us, we first check the outputs vector for an output with\n+    // output index 0. If we find it, we remove it from the vector and then iterate over the vector again looking for\n+    // an output with index 1, and so on until one of the following happens:\n+    //\n+    //     1. We have determined all outputs belong to us (the vector is empty)\n+    //     2. We have passed over the vector and found no outputs belonging to us\n+    //\n+\n+    // The ECDH shared secret must be set before we start scanning\n+    assert(m_ecdh_pubkey.IsValid());\n+\n+    bool removed;\n+    uint32_t output_index{0};\n+    std::vector<CKey> raw_tr_keys;\n+    do {\n+        // We haven't removed anything yet on this pass and if we don't remove anything, we didn't find\n+        // any silent payment outputs and should stop checking\n+        removed = false;\n+        std::pair<CKey, CPubKey> tweakResult = CreateOutput(output_index);",
      "path": "src/wallet/silentpayments.cpp",
      "position": null,
      "original_position": 70,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "dc18efa78d014be0a09e4c986813086e56c251a3",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "65b2dec1e39ea4efb327457563d2b18d49b4bc4c: Could use structured binding",
      "created_at": "2023-07-27T22:39:30Z",
      "updated_at": "2023-07-28T08:55:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1276888369",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276888369"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 71,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276888579",
      "pull_request_review_id": 1550940798,
      "id": 1276888579,
      "node_id": "PRRC_kwDOABII585MG8YD",
      "diff_hunk": "@@ -0,0 +1,179 @@\n+#include <wallet/silentpayments.h>\n+#include <arith_uint256.h>\n+#include <coins.h>\n+#include <crypto/common.h>\n+#include <crypto/hmac_sha512.h>\n+#include <key_io.h>\n+#include <undo.h>\n+#include <logging.h>\n+\n+namespace wallet {\n+\n+Recipient::Recipient(const CKey& scan_seckey, const CKey& spend_seckey)\n+{\n+    m_scan_seckey = scan_seckey;\n+    m_scan_pubkey = CPubKey{m_scan_seckey.GetPubKey()};\n+    m_spend_seckey = spend_seckey;\n+    m_spend_pubkey = CPubKey{m_spend_seckey.GetPubKey()};\n+}\n+\n+void Recipient::ComputeECDHSharedSecret(const CPubKey& sender_public_key, const std::vector<COutPoint>& tx_outpoints)\n+{\n+    const auto& outpoint_hash = HashOutpoints(tx_outpoints);\n+    auto tweaked_scan_seckey = m_scan_seckey.MultiplyTweak(outpoint_hash.begin());\n+    CPubKey result = tweaked_scan_seckey.SilentPaymentECDH(sender_public_key);\n+\n+    m_ecdh_pubkey = result;\n+    assert(m_ecdh_pubkey.IsValid());\n+}\n+\n+std::pair<CKey,CPubKey> Recipient::CreateOutput(const uint32_t output_index) const\n+{\n+    HashWriter h;\n+    h.write(Span{m_ecdh_pubkey});\n+    unsigned char num[4];\n+    WriteBE32(num, output_index);\n+    h << num;\n+    uint256 shared_secret = h.GetSHA256();\n+\n+    const auto& result_pubkey{m_spend_pubkey.AddTweak(shared_secret.begin())};\n+    const auto& result_seckey{m_spend_seckey.AddTweak(shared_secret.begin())};\n+\n+    return {result_seckey, result_pubkey};\n+}\n+\n+std::pair<CPubKey,CPubKey> Recipient::GetAddress() const\n+{\n+    return {m_scan_pubkey, m_spend_pubkey};\n+}\n+\n+std::vector<CKey> Recipient::ScanTxOutputs(std::vector<XOnlyPubKey> output_pub_keys)\n+{\n+    // Because a sender can create multiple outputs for us, we first check the outputs vector for an output with\n+    // output index 0. If we find it, we remove it from the vector and then iterate over the vector again looking for\n+    // an output with index 1, and so on until one of the following happens:\n+    //\n+    //     1. We have determined all outputs belong to us (the vector is empty)\n+    //     2. We have passed over the vector and found no outputs belonging to us\n+    //\n+\n+    // The ECDH shared secret must be set before we start scanning\n+    assert(m_ecdh_pubkey.IsValid());\n+\n+    bool removed;\n+    uint32_t output_index{0};\n+    std::vector<CKey> raw_tr_keys;\n+    do {\n+        // We haven't removed anything yet on this pass and if we don't remove anything, we didn't find\n+        // any silent payment outputs and should stop checking\n+        removed = false;\n+        std::pair<CKey, CPubKey> tweakResult = CreateOutput(output_index);\n+        const CKey& silent_payment_priv_key = tweakResult.first;\n+        const XOnlyPubKey& silent_payment_pub_key = XOnlyPubKey{tweakResult.second};\n+        output_pub_keys.erase(std::remove_if(output_pub_keys.begin(), output_pub_keys.end(), [&](auto outputPubKey) {\n+            if (silent_payment_pub_key == outputPubKey) {\n+                // Since we found an output, we need to increment the output index and check the vector again\n+                raw_tr_keys.emplace_back(silent_payment_priv_key);\n+                removed = true;\n+                output_index++;\n+                // Return true so that this output pubkey is removed the from vector and not checked again\n+                return true;\n+            }\n+            return false;\n+        }), output_pub_keys.end());\n+    } while (!output_pub_keys.empty() && removed);\n+    return raw_tr_keys;\n+}\n+\n+Sender::Sender(const CKey& scalar_ecdh_input, const SilentPaymentRecipient& recipient)\n+{\n+    m_ecdh_pubkey = scalar_ecdh_input.SilentPaymentECDH(recipient.m_scan_pubkey);\n+    m_recipient = recipient;\n+}",
      "path": "src/wallet/silentpayments.cpp",
      "position": null,
      "original_position": 92,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "dc18efa78d014be0a09e4c986813086e56c251a3",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "65b2dec1e39ea4efb327457563d2b18d49b4bc4c: Could use an initializer list",
      "created_at": "2023-07-27T22:39:49Z",
      "updated_at": "2023-07-28T08:55:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1276888579",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276888579"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": 88,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 259,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276890488",
      "pull_request_review_id": 1550940798,
      "id": 1276890488,
      "node_id": "PRRC_kwDOABII585MG814",
      "diff_hunk": "@@ -0,0 +1,179 @@\n+#include <wallet/silentpayments.h>\n+#include <arith_uint256.h>\n+#include <coins.h>\n+#include <crypto/common.h>\n+#include <crypto/hmac_sha512.h>\n+#include <key_io.h>\n+#include <undo.h>\n+#include <logging.h>\n+\n+namespace wallet {\n+\n+Recipient::Recipient(const CKey& scan_seckey, const CKey& spend_seckey)\n+{\n+    m_scan_seckey = scan_seckey;\n+    m_scan_pubkey = CPubKey{m_scan_seckey.GetPubKey()};\n+    m_spend_seckey = spend_seckey;\n+    m_spend_pubkey = CPubKey{m_spend_seckey.GetPubKey()};\n+}\n+\n+void Recipient::ComputeECDHSharedSecret(const CPubKey& sender_public_key, const std::vector<COutPoint>& tx_outpoints)\n+{\n+    const auto& outpoint_hash = HashOutpoints(tx_outpoints);\n+    auto tweaked_scan_seckey = m_scan_seckey.MultiplyTweak(outpoint_hash.begin());\n+    CPubKey result = tweaked_scan_seckey.SilentPaymentECDH(sender_public_key);\n+\n+    m_ecdh_pubkey = result;\n+    assert(m_ecdh_pubkey.IsValid());\n+}\n+\n+std::pair<CKey,CPubKey> Recipient::CreateOutput(const uint32_t output_index) const\n+{\n+    HashWriter h;\n+    h.write(Span{m_ecdh_pubkey});\n+    unsigned char num[4];\n+    WriteBE32(num, output_index);\n+    h << num;\n+    uint256 shared_secret = h.GetSHA256();\n+\n+    const auto& result_pubkey{m_spend_pubkey.AddTweak(shared_secret.begin())};\n+    const auto& result_seckey{m_spend_seckey.AddTweak(shared_secret.begin())};\n+\n+    return {result_seckey, result_pubkey};\n+}\n+\n+std::pair<CPubKey,CPubKey> Recipient::GetAddress() const\n+{\n+    return {m_scan_pubkey, m_spend_pubkey};\n+}\n+\n+std::vector<CKey> Recipient::ScanTxOutputs(std::vector<XOnlyPubKey> output_pub_keys)\n+{\n+    // Because a sender can create multiple outputs for us, we first check the outputs vector for an output with\n+    // output index 0. If we find it, we remove it from the vector and then iterate over the vector again looking for\n+    // an output with index 1, and so on until one of the following happens:\n+    //\n+    //     1. We have determined all outputs belong to us (the vector is empty)\n+    //     2. We have passed over the vector and found no outputs belonging to us\n+    //\n+\n+    // The ECDH shared secret must be set before we start scanning\n+    assert(m_ecdh_pubkey.IsValid());\n+\n+    bool removed;\n+    uint32_t output_index{0};\n+    std::vector<CKey> raw_tr_keys;\n+    do {\n+        // We haven't removed anything yet on this pass and if we don't remove anything, we didn't find\n+        // any silent payment outputs and should stop checking\n+        removed = false;\n+        std::pair<CKey, CPubKey> tweakResult = CreateOutput(output_index);\n+        const CKey& silent_payment_priv_key = tweakResult.first;\n+        const XOnlyPubKey& silent_payment_pub_key = XOnlyPubKey{tweakResult.second};\n+        output_pub_keys.erase(std::remove_if(output_pub_keys.begin(), output_pub_keys.end(), [&](auto outputPubKey) {\n+            if (silent_payment_pub_key == outputPubKey) {\n+                // Since we found an output, we need to increment the output index and check the vector again\n+                raw_tr_keys.emplace_back(silent_payment_priv_key);\n+                removed = true;\n+                output_index++;\n+                // Return true so that this output pubkey is removed the from vector and not checked again\n+                return true;\n+            }\n+            return false;\n+        }), output_pub_keys.end());\n+    } while (!output_pub_keys.empty() && removed);\n+    return raw_tr_keys;\n+}\n+\n+Sender::Sender(const CKey& scalar_ecdh_input, const SilentPaymentRecipient& recipient)\n+{\n+    m_ecdh_pubkey = scalar_ecdh_input.SilentPaymentECDH(recipient.m_scan_pubkey);\n+    m_recipient = recipient;\n+}\n+\n+CPubKey Sender::CreateOutput(const CPubKey& spend_pubkey, const uint32_t output_index) const\n+{\n+    HashWriter h;\n+    h.write(Span{m_ecdh_pubkey});\n+    unsigned char num[4];\n+    WriteBE32(num, output_index);\n+    h << num;\n+    uint256 shared_secret = h.GetSHA256();\n+    return spend_pubkey.AddTweak(shared_secret.begin());\n+}\n+\n+std::vector<wallet::CRecipient> Sender::GenerateRecipientScriptPubKeys() const\n+{\n+    int n = 0;\n+    std::vector<wallet::CRecipient> spks;\n+    for (const auto& pair : m_recipient.m_outputs) {",
      "path": "src/wallet/silentpayments.cpp",
      "position": null,
      "original_position": 109,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "dc18efa78d014be0a09e4c986813086e56c251a3",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "65b2dec1e39ea4efb327457563d2b18d49b4bc4c: Could use structured binding\r\n```suggestion\r\n    for (const auto& [pubkey, amount]: m_recipient.m_outputs) {\r\n```",
      "created_at": "2023-07-27T22:42:12Z",
      "updated_at": "2023-07-28T08:55:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1276890488",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276890488"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 89,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276891288",
      "pull_request_review_id": 1550940798,
      "id": 1276891288,
      "node_id": "PRRC_kwDOABII585MG9CY",
      "diff_hunk": "@@ -0,0 +1,179 @@\n+#include <wallet/silentpayments.h>\n+#include <arith_uint256.h>\n+#include <coins.h>\n+#include <crypto/common.h>\n+#include <crypto/hmac_sha512.h>\n+#include <key_io.h>\n+#include <undo.h>\n+#include <logging.h>\n+\n+namespace wallet {\n+\n+Recipient::Recipient(const CKey& scan_seckey, const CKey& spend_seckey)\n+{\n+    m_scan_seckey = scan_seckey;\n+    m_scan_pubkey = CPubKey{m_scan_seckey.GetPubKey()};\n+    m_spend_seckey = spend_seckey;\n+    m_spend_pubkey = CPubKey{m_spend_seckey.GetPubKey()};\n+}\n+\n+void Recipient::ComputeECDHSharedSecret(const CPubKey& sender_public_key, const std::vector<COutPoint>& tx_outpoints)\n+{\n+    const auto& outpoint_hash = HashOutpoints(tx_outpoints);\n+    auto tweaked_scan_seckey = m_scan_seckey.MultiplyTweak(outpoint_hash.begin());\n+    CPubKey result = tweaked_scan_seckey.SilentPaymentECDH(sender_public_key);\n+\n+    m_ecdh_pubkey = result;\n+    assert(m_ecdh_pubkey.IsValid());\n+}\n+\n+std::pair<CKey,CPubKey> Recipient::CreateOutput(const uint32_t output_index) const\n+{\n+    HashWriter h;\n+    h.write(Span{m_ecdh_pubkey});\n+    unsigned char num[4];\n+    WriteBE32(num, output_index);\n+    h << num;\n+    uint256 shared_secret = h.GetSHA256();\n+\n+    const auto& result_pubkey{m_spend_pubkey.AddTweak(shared_secret.begin())};\n+    const auto& result_seckey{m_spend_seckey.AddTweak(shared_secret.begin())};\n+\n+    return {result_seckey, result_pubkey};\n+}\n+\n+std::pair<CPubKey,CPubKey> Recipient::GetAddress() const\n+{\n+    return {m_scan_pubkey, m_spend_pubkey};\n+}\n+\n+std::vector<CKey> Recipient::ScanTxOutputs(std::vector<XOnlyPubKey> output_pub_keys)\n+{\n+    // Because a sender can create multiple outputs for us, we first check the outputs vector for an output with\n+    // output index 0. If we find it, we remove it from the vector and then iterate over the vector again looking for\n+    // an output with index 1, and so on until one of the following happens:\n+    //\n+    //     1. We have determined all outputs belong to us (the vector is empty)\n+    //     2. We have passed over the vector and found no outputs belonging to us\n+    //\n+\n+    // The ECDH shared secret must be set before we start scanning\n+    assert(m_ecdh_pubkey.IsValid());\n+\n+    bool removed;\n+    uint32_t output_index{0};\n+    std::vector<CKey> raw_tr_keys;\n+    do {\n+        // We haven't removed anything yet on this pass and if we don't remove anything, we didn't find\n+        // any silent payment outputs and should stop checking\n+        removed = false;\n+        std::pair<CKey, CPubKey> tweakResult = CreateOutput(output_index);\n+        const CKey& silent_payment_priv_key = tweakResult.first;\n+        const XOnlyPubKey& silent_payment_pub_key = XOnlyPubKey{tweakResult.second};\n+        output_pub_keys.erase(std::remove_if(output_pub_keys.begin(), output_pub_keys.end(), [&](auto outputPubKey) {\n+            if (silent_payment_pub_key == outputPubKey) {\n+                // Since we found an output, we need to increment the output index and check the vector again\n+                raw_tr_keys.emplace_back(silent_payment_priv_key);\n+                removed = true;\n+                output_index++;\n+                // Return true so that this output pubkey is removed the from vector and not checked again\n+                return true;\n+            }\n+            return false;\n+        }), output_pub_keys.end());\n+    } while (!output_pub_keys.empty() && removed);\n+    return raw_tr_keys;\n+}\n+\n+Sender::Sender(const CKey& scalar_ecdh_input, const SilentPaymentRecipient& recipient)\n+{\n+    m_ecdh_pubkey = scalar_ecdh_input.SilentPaymentECDH(recipient.m_scan_pubkey);\n+    m_recipient = recipient;\n+}\n+\n+CPubKey Sender::CreateOutput(const CPubKey& spend_pubkey, const uint32_t output_index) const\n+{\n+    HashWriter h;\n+    h.write(Span{m_ecdh_pubkey});\n+    unsigned char num[4];\n+    WriteBE32(num, output_index);\n+    h << num;\n+    uint256 shared_secret = h.GetSHA256();\n+    return spend_pubkey.AddTweak(shared_secret.begin());\n+}\n+\n+std::vector<wallet::CRecipient> Sender::GenerateRecipientScriptPubKeys() const\n+{\n+    int n = 0;\n+    std::vector<wallet::CRecipient> spks;\n+    for (const auto& pair : m_recipient.m_outputs) {\n+        XOnlyPubKey output_pubkey = XOnlyPubKey{CreateOutput(pair.first, n)};\n+        auto tap = WitnessV1Taproot(output_pubkey);\n+        CScript spk = GetScriptForDestination(tap);\n+        spks.push_back(wallet::CRecipient{spk, pair.second, false});\n+        n++;\n+    }\n+    return spks;\n+}\n+\n+CKey SumInputPrivKeys(const std::vector<std::pair<CKey, bool>>& sender_secret_keys)\n+{\n+    const auto& [seckey, is_taproot] = sender_secret_keys.at(0);\n+    CKey sum_seckey{seckey};\n+    if (is_taproot && sum_seckey.GetPubKey()[0] == 3) {\n+        sum_seckey.Negate();\n+    }\n+    if (sender_secret_keys.size() > 1) {\n+        for (size_t i = 1; i < sender_secret_keys.size(); i++) {\n+            const auto& [sender_seckey, sender_is_taproot] = sender_secret_keys.at(i);\n+            auto temp_key{sender_seckey};\n+            if (sender_is_taproot && sender_seckey.GetPubKey()[0] == 3) {\n+                temp_key.Negate();\n+            }\n+            sum_seckey = sum_seckey.AddTweak(temp_key.begin());\n+        }\n+    }\n+    return sum_seckey;\n+}\n+\n+CKey PrepareScalarECDHInput(const std::vector<std::pair<CKey, bool>>& sender_secret_keys, const std::vector<COutPoint>& tx_outpoints)\n+{\n+    CKey sum_input_secret_keys = SumInputPrivKeys(sender_secret_keys);\n+    uint256 outpoints_hash = HashOutpoints(tx_outpoints);\n+    return sum_input_secret_keys.MultiplyTweak(outpoints_hash.begin());\n+}\n+\n+std::vector<SilentPaymentRecipient> GroupSilentPaymentAddresses(const std::vector<wallet::V0SilentPaymentDestination>& silent_payment_destinations)\n+{\n+    std::map<CPubKey, std::vector<std::pair<CPubKey, CAmount>>> recipient_groups;\n+    std::vector<SilentPaymentRecipient> recipients;\n+    for (const auto& destination : silent_payment_destinations) {\n+        recipient_groups[destination.m_scan_pubkey].emplace_back(destination.m_spend_pubkey, destination.m_amount);\n+    }\n+    for (const auto& pair : recipient_groups) {",
      "path": "src/wallet/silentpayments.cpp",
      "position": null,
      "original_position": 153,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "dc18efa78d014be0a09e4c986813086e56c251a3",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "65b2dec1e39ea4efb327457563d2b18d49b4bc4c: Could use structured binding",
      "created_at": "2023-07-27T22:43:13Z",
      "updated_at": "2023-07-28T08:55:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1276891288",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276891288"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 153,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1282093736",
      "pull_request_review_id": 1559306552,
      "id": 1282093736,
      "node_id": "PRRC_kwDOABII585MazKo",
      "diff_hunk": "@@ -508,6 +511,7 @@ class CRegTestParams : public CChainParams\n         base58Prefixes[EXT_SECRET_KEY] = {0x04, 0x35, 0x83, 0x94};\n \n         bech32_hrp = \"bcrt\";\n+        silent_payment_hrp = \"sprt\";",
      "path": "src/kernel/chainparams.cpp",
      "position": 28,
      "original_position": 28,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "13e6c7b5444af103bb612cd503c50915d8d41015",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can someone remind me wtf regtest has a different hrp than testnet and signet?\r\n\r\nIf each of the four had a different one, I’d get it, but why does regtest have a different one than the other two testing networks?\r\n\r\nUnless I’m forgetting about some good reason for that to be there, I might recommend that you just use `tsp` for all three",
      "created_at": "2023-08-02T15:43:51Z",
      "updated_at": "2023-08-02T16:46:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1282093736",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1282093736"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 526,
      "original_line": 526,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1282854035",
      "pull_request_review_id": 1560541351,
      "id": 1282854035,
      "node_id": "PRRC_kwDOABII585MdsyT",
      "diff_hunk": "@@ -508,6 +511,7 @@ class CRegTestParams : public CChainParams\n         base58Prefixes[EXT_SECRET_KEY] = {0x04, 0x35, 0x83, 0x94};\n \n         bech32_hrp = \"bcrt\";\n+        silent_payment_hrp = \"sprt\";",
      "path": "src/kernel/chainparams.cpp",
      "position": 28,
      "original_position": 28,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "13e6c7b5444af103bb612cd503c50915d8d41015",
      "in_reply_to_id": 1282093736,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This issue has some helpful context: https://github.com/bitcoin/bitcoin/issues/12314#issuecomment-582600899\r\n\r\nTLDR; at the time regtest was created, it was assumed that using a separate HRP wouldn't cost anything.\r\n\r\n> If each of the four had a different one, I’d get it, but why does regtest have a different one than the other two testing networks?\r\n\r\nThis actually makes sense to me. Testnet and Signet are \"global\" networks, so everyone has to agree on the address format. Regtest is always used in a private context, and is specific to Bitcoin Core. Having a separate HRP helps differentiate the local vs networked usage IMO.\r\n\r\n> Unless I’m forgetting about some good reason for that to be there, I might recommend that you just use tsp for all three\r\n\r\nIf we decided to make the HRP for regtest throughout Bitcoin Core to be the same as signet and testnet, then I'm fine with this. What I don't want is for silent payment addresses to be a special case in the functional test framework.\r\n\r\n",
      "created_at": "2023-08-03T08:41:30Z",
      "updated_at": "2023-08-03T08:41:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1282854035",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1282854035"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 526,
      "original_line": 526,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1282961735",
      "pull_request_review_id": 1560714797,
      "id": 1282961735,
      "node_id": "PRRC_kwDOABII585MeHFH",
      "diff_hunk": "@@ -508,6 +511,7 @@ class CRegTestParams : public CChainParams\n         base58Prefixes[EXT_SECRET_KEY] = {0x04, 0x35, 0x83, 0x94};\n \n         bech32_hrp = \"bcrt\";\n+        silent_payment_hrp = \"sprt\";",
      "path": "src/kernel/chainparams.cpp",
      "position": 28,
      "original_position": 28,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "6d11e3c435397dab960bc2b5e6cb5a2a1166b39b",
      "in_reply_to_id": 1271314036,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've updated the BIP to recommend upping the character limit to 1023, as having a limit of 117 would cause issues with forward compatibility with future silent payment addresses. I've also removed regtest from the BIP, as I don't think it's correct to define Bitcoin Core specific conventions in BIPs. Regarding \"tsp\" vs \"sprt\", I don't really have a strong opinion here, but would prefer to follow the convention in Bitcoin Core. If we end up moving Bitcoin Core to use the same HRP for all networks, then we should update the silent payments HRP to do the same.",
      "created_at": "2023-08-03T09:56:06Z",
      "updated_at": "2023-08-03T09:56:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1282961735",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1282961735"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 526,
      "original_line": 526,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1283012394",
      "pull_request_review_id": 1560805532,
      "id": 1283012394,
      "node_id": "PRRC_kwDOABII585MeTcq",
      "diff_hunk": "@@ -370,11 +370,13 @@ std::string Encode(Encoding encoding, const std::string& hrp, const data& values\n }\n \n /** Decode a Bech32 or Bech32m string. */\n-DecodeResult Decode(const std::string& str) {\n+DecodeResult Decode(const std::string& str, bool silent) {\n+    std::size_t max_size = silent ? 1024 : 90;",
      "path": "src/bech32.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "a469cb1e551ba16f1d83e4b0ae68194e38f1b9ec",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Note to self, this should be 1023",
      "created_at": "2023-08-03T10:38:54Z",
      "updated_at": "2023-08-03T10:38:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1283012394",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1283012394"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 374,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1284001548",
      "pull_request_review_id": 1562204323,
      "id": 1284001548,
      "node_id": "PRRC_kwDOABII585MiE8M",
      "diff_hunk": "@@ -309,3 +311,51 @@ bool IsValidDestinationString(const std::string& str)\n {\n     return IsValidDestinationString(str, Params());\n }\n+\n+std::pair<CPubKey, CPubKey> DecodeSilentData(const std::vector<unsigned char>& data)\n+{\n+\n+    std::vector<unsigned char> scan_pubkey_data(data.begin(), data.begin() + 33);\n+    CPubKey scan_pubkey{scan_pubkey_data};\n+\n+    std::vector<unsigned char> spend_pubkey_data(data.begin() + 33, data.end());\n+    CPubKey spend_pubkey{spend_pubkey_data};\n+\n+    return {scan_pubkey, spend_pubkey};\n+}\n+\n+std::vector<unsigned char> DecodeSilentAddress(const std::string& str)\n+{\n+    const auto& params{Params()};\n+    const auto& silent_payment_hrp = params.SilentPaymentHRP();\n+    const auto dec = bech32::Decode(str, /*silent=*/true);\n+    if (dec.encoding != bech32::Encoding::BECH32M || dec.hrp != silent_payment_hrp) {\n+        return {};\n+    }\n+    auto version = dec.data.front();  // retrieve the version\n+    std::vector<unsigned char> silent_payment_data;\n+    silent_payment_data.reserve(((dec.data.size() - 1) * 5) / 8);\n+    if (!ConvertBits<5, 8, false>([&](unsigned char c) { silent_payment_data.push_back(c); }, dec.data.begin() + 1, dec.data.end())) {\n+        return {};\n+    }\n+    if ((version == 0 && silent_payment_data.size() != SILENT_PAYMENT_V0_DATA_SIZE) || silent_payment_data.size() < SILENT_PAYMENT_V0_DATA_SIZE) return {};",
      "path": "src/key_io.cpp",
      "position": null,
      "original_position": 40,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "8ee791e7b34a354ce6835b968fe12924b8908d7c",
      "in_reply_to_id": null,
      "user": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "To improve maintainability and support forward compatibility, consider abstracting the handling of different versions into a separate helper function like ‘[evalCheckSig](https://github.com/bitcoin/bitcoin/blob/a4ca4975880c4f870c6047065c70610af2529e74/src/script/interpreter.cpp#L391)’ does. This approach will allow for easier modification and extension for new versions of Silent addresses, and would also be more clear how version handling is done\r\n",
      "created_at": "2023-08-04T05:41:02Z",
      "updated_at": "2023-08-04T05:47:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1284001548",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1284001548"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 341,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285232819",
      "pull_request_review_id": 1564168708,
      "id": 1285232819,
      "node_id": "PRRC_kwDOABII585Mmxiz",
      "diff_hunk": "@@ -309,3 +311,51 @@ bool IsValidDestinationString(const std::string& str)\n {\n     return IsValidDestinationString(str, Params());\n }\n+\n+std::pair<CPubKey, CPubKey> DecodeSilentData(const std::vector<unsigned char>& data)\n+{\n+\n+    std::vector<unsigned char> scan_pubkey_data(data.begin(), data.begin() + 33);\n+    CPubKey scan_pubkey{scan_pubkey_data};\n+\n+    std::vector<unsigned char> spend_pubkey_data(data.begin() + 33, data.end());\n+    CPubKey spend_pubkey{spend_pubkey_data};\n+\n+    return {scan_pubkey, spend_pubkey};\n+}\n+\n+std::vector<unsigned char> DecodeSilentAddress(const std::string& str)\n+{\n+    const auto& params{Params()};\n+    const auto& silent_payment_hrp = params.SilentPaymentHRP();\n+    const auto dec = bech32::Decode(str, /*silent=*/true);\n+    if (dec.encoding != bech32::Encoding::BECH32M || dec.hrp != silent_payment_hrp) {\n+        return {};\n+    }\n+    auto version = dec.data.front();  // retrieve the version\n+    std::vector<unsigned char> silent_payment_data;\n+    silent_payment_data.reserve(((dec.data.size() - 1) * 5) / 8);\n+    if (!ConvertBits<5, 8, false>([&](unsigned char c) { silent_payment_data.push_back(c); }, dec.data.begin() + 1, dec.data.end())) {\n+        return {};\n+    }\n+    if ((version == 0 && silent_payment_data.size() != SILENT_PAYMENT_V0_DATA_SIZE) || silent_payment_data.size() < SILENT_PAYMENT_V0_DATA_SIZE) return {};",
      "path": "src/key_io.cpp",
      "position": null,
      "original_position": 40,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "8ee791e7b34a354ce6835b968fe12924b8908d7c",
      "in_reply_to_id": 1284001548,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks for the suggestion, I'll take a look at `EvalCheckSig`! ",
      "created_at": "2023-08-06T15:26:21Z",
      "updated_at": "2023-08-06T15:26:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1285232819",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1285232819"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 341,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286843620",
      "pull_request_review_id": 1566866196,
      "id": 1286843620,
      "node_id": "PRRC_kwDOABII585Ms6zk",
      "diff_hunk": "@@ -172,6 +174,79 @@ bool CKey::Negate()\n     return secp256k1_ec_seckey_negate(secp256k1_context_sign, keydata.data());\n }\n \n+CKey CKey::AddTweak(const unsigned char *tweak32) const",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "376a9b9ad48bb0dc308edc44574584bed9bf01ae",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "rename to TweakAdd to more closely mirror the secp function",
      "created_at": "2023-08-08T09:15:33Z",
      "updated_at": "2023-08-08T09:15:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1286843620",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286843620"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 177,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286844417",
      "pull_request_review_id": 1566867434,
      "id": 1286844417,
      "node_id": "PRRC_kwDOABII585Ms7AB",
      "diff_hunk": "@@ -172,6 +174,79 @@ bool CKey::Negate()\n     return secp256k1_ec_seckey_negate(secp256k1_context_sign, keydata.data());\n }\n \n+CKey CKey::AddTweak(const unsigned char *tweak32) const\n+{\n+    assert(fValid);\n+\n+    unsigned char tweaked_seckey[32];\n+    memcpy(tweaked_seckey, data(), 32);\n+\n+    int ret = secp256k1_ec_seckey_tweak_add(secp256k1_context_sign, tweaked_seckey, tweak32);\n+    assert(ret);\n+\n+    CKey new_seckey;\n+    new_seckey.Set(std::begin(tweaked_seckey), std::end(tweaked_seckey), true);\n+\n+    return new_seckey;\n+}\n+\n+CKey CKey::MultiplyTweak(const unsigned char *tweak32) const\n+{\n+    assert(fValid);\n+\n+    unsigned char tweaked_seckey[32];\n+    memcpy(tweaked_seckey, data(), 32);\n+\n+    int ret = secp256k1_ec_seckey_tweak_mul(secp256k1_context_sign, tweaked_seckey, tweak32);\n+    assert(ret);\n+\n+    CKey new_seckey;\n+    new_seckey.Set(std::begin(tweaked_seckey), std::end(tweaked_seckey), true);\n+\n+    return new_seckey;\n+}\n+\n+// we dont want to hash the output of ECDH yet, so we provide a custom hash function to secp256k1_ecdh which\n+// returns the serialized public key without hashing it\n+int custom_ecdh_hash_function(unsigned char *output, const unsigned char *x32, const unsigned char *y32, void *data) {",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 54,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "376a9b9ad48bb0dc308edc44574584bed9bf01ae",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "this should also be rename since we aren't hashing",
      "created_at": "2023-08-08T09:16:13Z",
      "updated_at": "2023-08-08T09:16:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1286844417",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286844417"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 211,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286847829",
      "pull_request_review_id": 1566872721,
      "id": 1286847829,
      "node_id": "PRRC_kwDOABII585Ms71V",
      "diff_hunk": "@@ -172,6 +174,79 @@ bool CKey::Negate()\n     return secp256k1_ec_seckey_negate(secp256k1_context_sign, keydata.data());\n }\n \n+CKey CKey::AddTweak(const unsigned char *tweak32) const\n+{\n+    assert(fValid);\n+\n+    unsigned char tweaked_seckey[32];\n+    memcpy(tweaked_seckey, data(), 32);\n+\n+    int ret = secp256k1_ec_seckey_tweak_add(secp256k1_context_sign, tweaked_seckey, tweak32);\n+    assert(ret);\n+\n+    CKey new_seckey;\n+    new_seckey.Set(std::begin(tweaked_seckey), std::end(tweaked_seckey), true);\n+\n+    return new_seckey;\n+}\n+\n+CKey CKey::MultiplyTweak(const unsigned char *tweak32) const\n+{\n+    assert(fValid);\n+\n+    unsigned char tweaked_seckey[32];\n+    memcpy(tweaked_seckey, data(), 32);\n+\n+    int ret = secp256k1_ec_seckey_tweak_mul(secp256k1_context_sign, tweaked_seckey, tweak32);\n+    assert(ret);\n+\n+    CKey new_seckey;\n+    new_seckey.Set(std::begin(tweaked_seckey), std::end(tweaked_seckey), true);\n+\n+    return new_seckey;\n+}\n+\n+// we dont want to hash the output of ECDH yet, so we provide a custom hash function to secp256k1_ecdh which\n+// returns the serialized public key without hashing it\n+int custom_ecdh_hash_function(unsigned char *output, const unsigned char *x32, const unsigned char *y32, void *data) {\n+\n+    secp256k1_pubkey pubkey;\n+    unsigned char uncompressed_pubkey[65];\n+    uncompressed_pubkey[0] = 0x04;\n+    memcpy(uncompressed_pubkey + 1, x32, 32);\n+    memcpy(uncompressed_pubkey + 33, y32, 32);\n+\n+    if (!secp256k1_ec_pubkey_parse(secp256k1_context_sign, &pubkey, uncompressed_pubkey, 65)) {\n+        return 0;\n+    }\n+\n+    size_t outputlen = 33;\n+    if (!secp256k1_ec_pubkey_serialize(secp256k1_context_sign, output, &outputlen, &pubkey, SECP256K1_EC_COMPRESSED)) {\n+        return 0;\n+    }\n+    return 1;\n+}\n+\n+// WARNING: DO NOT USE THIS FUNCTION OUTSIDE OF SILENT PAYMENTS\n+// This function returns the un-hashed ECDH result and is specific to silent payments.\n+// If ECDH is required for a different use-case, a separate function should be used which does not use\n+// the `custom_ecdh_hash_function` and instead returns the hashed ECDH result (as is standard practice)\n+CPubKey CKey::SilentPaymentECDH(const CPubKey& pubkey) const",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 77,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "376a9b9ad48bb0dc308edc44574584bed9bf01ae",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Should probably rename this to just \"UnhashedECDH\"",
      "created_at": "2023-08-08T09:19:09Z",
      "updated_at": "2023-08-08T09:19:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1286847829",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286847829"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 234,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286857436",
      "pull_request_review_id": 1566887443,
      "id": 1286857436,
      "node_id": "PRRC_kwDOABII585Ms-Lc",
      "diff_hunk": "@@ -172,6 +174,79 @@ bool CKey::Negate()\n     return secp256k1_ec_seckey_negate(secp256k1_context_sign, keydata.data());\n }\n \n+CKey CKey::AddTweak(const unsigned char *tweak32) const\n+{\n+    assert(fValid);\n+\n+    unsigned char tweaked_seckey[32];\n+    memcpy(tweaked_seckey, data(), 32);\n+\n+    int ret = secp256k1_ec_seckey_tweak_add(secp256k1_context_sign, tweaked_seckey, tweak32);\n+    assert(ret);\n+\n+    CKey new_seckey;\n+    new_seckey.Set(std::begin(tweaked_seckey), std::end(tweaked_seckey), true);\n+\n+    return new_seckey;\n+}\n+\n+CKey CKey::MultiplyTweak(const unsigned char *tweak32) const\n+{\n+    assert(fValid);\n+\n+    unsigned char tweaked_seckey[32];\n+    memcpy(tweaked_seckey, data(), 32);\n+\n+    int ret = secp256k1_ec_seckey_tweak_mul(secp256k1_context_sign, tweaked_seckey, tweak32);\n+    assert(ret);\n+\n+    CKey new_seckey;\n+    new_seckey.Set(std::begin(tweaked_seckey), std::end(tweaked_seckey), true);\n+\n+    return new_seckey;\n+}\n+\n+// we dont want to hash the output of ECDH yet, so we provide a custom hash function to secp256k1_ecdh which\n+// returns the serialized public key without hashing it\n+int custom_ecdh_hash_function(unsigned char *output, const unsigned char *x32, const unsigned char *y32, void *data) {",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 54,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "376a9b9ad48bb0dc308edc44574584bed9bf01ae",
      "in_reply_to_id": 1286844417,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "move this to the UnhashedECDH function",
      "created_at": "2023-08-08T09:27:13Z",
      "updated_at": "2023-08-08T09:27:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1286857436",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286857436"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 211,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286873697",
      "pull_request_review_id": 1566913038,
      "id": 1286873697,
      "node_id": "PRRC_kwDOABII585MtCJh",
      "diff_hunk": "@@ -370,11 +370,13 @@ std::string Encode(Encoding encoding, const std::string& hrp, const data& values\n }\n \n /** Decode a Bech32 or Bech32m string. */\n-DecodeResult Decode(const std::string& str) {\n+DecodeResult Decode(const std::string& str, bool silent) {\n+    std::size_t max_size = silent ? 1024 : 90;",
      "path": "src/bech32.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "a469cb1e551ba16f1d83e4b0ae68194e38f1b9ec",
      "in_reply_to_id": 1283012394,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Wrap this function in a more generic \"Decode\" function that doesn't have size restrictions, possibly use an ENUM for indicating what sort of error guarantees you want.",
      "created_at": "2023-08-08T09:41:33Z",
      "updated_at": "2023-08-08T09:41:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1286873697",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286873697"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 374,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286904504",
      "pull_request_review_id": 1566961113,
      "id": 1286904504,
      "node_id": "PRRC_kwDOABII585MtJq4",
      "diff_hunk": "@@ -309,3 +311,33 @@ bool IsValidDestinationString(const std::string& str)\n {\n     return IsValidDestinationString(str, Params());\n }\n+\n+std::pair<CPubKey, CPubKey> DecodeSilentData(const std::vector<unsigned char>& data)\n+{\n+\n+    std::vector<unsigned char> scan_pubkey_data(data.begin(), data.begin() + 33);\n+    CPubKey scan_pubkey{scan_pubkey_data};\n+\n+    std::vector<unsigned char> spend_pubkey_data(data.begin() + 33, data.end());\n+    CPubKey spend_pubkey{spend_pubkey_data};\n+\n+    return {scan_pubkey, spend_pubkey};\n+}\n+\n+std::vector<unsigned char> DecodeSilentAddress(const std::string& str)",
      "path": "src/key_io.cpp",
      "position": null,
      "original_position": 26,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "37b0ca1c3d753cc61e0debf8ea59160bdf4127ec",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Similar to \"Decode\", there should be a higher-level function that first decodes the string and then passes it to the relevant decoding function",
      "created_at": "2023-08-08T10:08:17Z",
      "updated_at": "2023-08-08T10:08:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1286904504",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286904504"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 327,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286912005",
      "pull_request_review_id": 1566972666,
      "id": 1286912005,
      "node_id": "PRRC_kwDOABII585MtLgF",
      "diff_hunk": "@@ -309,3 +311,33 @@ bool IsValidDestinationString(const std::string& str)\n {\n     return IsValidDestinationString(str, Params());\n }\n+\n+std::pair<CPubKey, CPubKey> DecodeSilentData(const std::vector<unsigned char>& data)\n+{\n+\n+    std::vector<unsigned char> scan_pubkey_data(data.begin(), data.begin() + 33);\n+    CPubKey scan_pubkey{scan_pubkey_data};\n+\n+    std::vector<unsigned char> spend_pubkey_data(data.begin() + 33, data.end());\n+    CPubKey spend_pubkey{spend_pubkey_data};\n+\n+    return {scan_pubkey, spend_pubkey};\n+}\n+\n+std::vector<unsigned char> DecodeSilentAddress(const std::string& str)",
      "path": "src/key_io.cpp",
      "position": null,
      "original_position": 26,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "37b0ca1c3d753cc61e0debf8ea59160bdf4127ec",
      "in_reply_to_id": 1286904504,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Even better, should probably first add a new destination type to CTxDestination",
      "created_at": "2023-08-08T10:15:28Z",
      "updated_at": "2023-08-08T10:15:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1286912005",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286912005"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 327,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286930916",
      "pull_request_review_id": 1567002299,
      "id": 1286930916,
      "node_id": "PRRC_kwDOABII585MtQHk",
      "diff_hunk": "@@ -0,0 +1,179 @@\n+#include <wallet/silentpayments.h>\n+#include <arith_uint256.h>\n+#include <coins.h>\n+#include <crypto/common.h>\n+#include <crypto/hmac_sha512.h>\n+#include <key_io.h>\n+#include <undo.h>\n+#include <logging.h>\n+\n+namespace wallet {\n+\n+Recipient::Recipient(const CKey& scan_seckey, const CKey& spend_seckey)",
      "path": "src/wallet/silentpayments.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "8be91169396a560bfc4a4e8b34a242111704f8e9",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This doesn't need to be a struct, could just be functions which the DescScriptPubKeyMan calls as needed",
      "created_at": "2023-08-08T10:34:17Z",
      "updated_at": "2023-08-08T10:34:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1286930916",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286930916"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 13,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286935217",
      "pull_request_review_id": 1567009051,
      "id": 1286935217,
      "node_id": "PRRC_kwDOABII585MtRKx",
      "diff_hunk": "@@ -0,0 +1,179 @@\n+#include <wallet/silentpayments.h>\n+#include <arith_uint256.h>\n+#include <coins.h>\n+#include <crypto/common.h>\n+#include <crypto/hmac_sha512.h>\n+#include <key_io.h>\n+#include <undo.h>\n+#include <logging.h>\n+\n+namespace wallet {\n+\n+Recipient::Recipient(const CKey& scan_seckey, const CKey& spend_seckey)\n+{\n+    m_scan_seckey = scan_seckey;\n+    m_scan_pubkey = CPubKey{m_scan_seckey.GetPubKey()};\n+    m_spend_seckey = spend_seckey;\n+    m_spend_pubkey = CPubKey{m_spend_seckey.GetPubKey()};\n+}\n+\n+void Recipient::ComputeECDHSharedSecret(const CPubKey& sender_public_key, const std::vector<COutPoint>& tx_outpoints)\n+{\n+    const auto& outpoint_hash = HashOutpoints(tx_outpoints);\n+    auto tweaked_scan_seckey = m_scan_seckey.MultiplyTweak(outpoint_hash.begin());\n+    CPubKey result = tweaked_scan_seckey.SilentPaymentECDH(sender_public_key);\n+\n+    m_ecdh_pubkey = result;\n+    assert(m_ecdh_pubkey.IsValid());\n+}\n+\n+std::pair<CKey,CPubKey> Recipient::CreateOutput(const uint32_t output_index) const\n+{\n+    HashWriter h;\n+    h.write(Span{m_ecdh_pubkey});\n+    unsigned char num[4];\n+    WriteBE32(num, output_index);\n+    h << num;\n+    uint256 shared_secret = h.GetSHA256();\n+\n+    const auto& result_pubkey{m_spend_pubkey.AddTweak(shared_secret.begin())};\n+    const auto& result_seckey{m_spend_seckey.AddTweak(shared_secret.begin())};\n+\n+    return {result_seckey, result_pubkey};\n+}\n+\n+std::pair<CPubKey,CPubKey> Recipient::GetAddress() const\n+{\n+    return {m_scan_pubkey, m_spend_pubkey};\n+}\n+\n+std::vector<CKey> Recipient::ScanTxOutputs(std::vector<XOnlyPubKey> output_pub_keys)",
      "path": "src/wallet/silentpayments.cpp",
      "position": null,
      "original_position": 50,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "8be91169396a560bfc4a4e8b34a242111704f8e9",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "this function should be \"label aware,\" meaning if the wallet implements labels later on, this function does not need to change.",
      "created_at": "2023-08-08T10:38:43Z",
      "updated_at": "2023-08-08T10:38:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1286935217",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286935217"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286941048",
      "pull_request_review_id": 1567018287,
      "id": 1286941048,
      "node_id": "PRRC_kwDOABII585MtSl4",
      "diff_hunk": "@@ -0,0 +1,179 @@\n+#include <wallet/silentpayments.h>\n+#include <arith_uint256.h>\n+#include <coins.h>\n+#include <crypto/common.h>\n+#include <crypto/hmac_sha512.h>\n+#include <key_io.h>\n+#include <undo.h>\n+#include <logging.h>\n+\n+namespace wallet {\n+\n+Recipient::Recipient(const CKey& scan_seckey, const CKey& spend_seckey)\n+{\n+    m_scan_seckey = scan_seckey;\n+    m_scan_pubkey = CPubKey{m_scan_seckey.GetPubKey()};\n+    m_spend_seckey = spend_seckey;\n+    m_spend_pubkey = CPubKey{m_spend_seckey.GetPubKey()};\n+}\n+\n+void Recipient::ComputeECDHSharedSecret(const CPubKey& sender_public_key, const std::vector<COutPoint>& tx_outpoints)\n+{\n+    const auto& outpoint_hash = HashOutpoints(tx_outpoints);\n+    auto tweaked_scan_seckey = m_scan_seckey.MultiplyTweak(outpoint_hash.begin());\n+    CPubKey result = tweaked_scan_seckey.SilentPaymentECDH(sender_public_key);\n+\n+    m_ecdh_pubkey = result;\n+    assert(m_ecdh_pubkey.IsValid());\n+}\n+\n+std::pair<CKey,CPubKey> Recipient::CreateOutput(const uint32_t output_index) const\n+{\n+    HashWriter h;\n+    h.write(Span{m_ecdh_pubkey});\n+    unsigned char num[4];\n+    WriteBE32(num, output_index);\n+    h << num;\n+    uint256 shared_secret = h.GetSHA256();\n+\n+    const auto& result_pubkey{m_spend_pubkey.AddTweak(shared_secret.begin())};\n+    const auto& result_seckey{m_spend_seckey.AddTweak(shared_secret.begin())};\n+\n+    return {result_seckey, result_pubkey};\n+}\n+\n+std::pair<CPubKey,CPubKey> Recipient::GetAddress() const\n+{\n+    return {m_scan_pubkey, m_spend_pubkey};\n+}\n+\n+std::vector<CKey> Recipient::ScanTxOutputs(std::vector<XOnlyPubKey> output_pub_keys)\n+{\n+    // Because a sender can create multiple outputs for us, we first check the outputs vector for an output with\n+    // output index 0. If we find it, we remove it from the vector and then iterate over the vector again looking for\n+    // an output with index 1, and so on until one of the following happens:\n+    //\n+    //     1. We have determined all outputs belong to us (the vector is empty)\n+    //     2. We have passed over the vector and found no outputs belonging to us\n+    //\n+\n+    // The ECDH shared secret must be set before we start scanning\n+    assert(m_ecdh_pubkey.IsValid());\n+\n+    bool removed;\n+    uint32_t output_index{0};\n+    std::vector<CKey> raw_tr_keys;\n+    do {\n+        // We haven't removed anything yet on this pass and if we don't remove anything, we didn't find\n+        // any silent payment outputs and should stop checking\n+        removed = false;\n+        std::pair<CKey, CPubKey> tweakResult = CreateOutput(output_index);\n+        const CKey& silent_payment_priv_key = tweakResult.first;\n+        const XOnlyPubKey& silent_payment_pub_key = XOnlyPubKey{tweakResult.second};\n+        output_pub_keys.erase(std::remove_if(output_pub_keys.begin(), output_pub_keys.end(), [&](auto outputPubKey) {\n+            if (silent_payment_pub_key == outputPubKey) {\n+                // Since we found an output, we need to increment the output index and check the vector again\n+                raw_tr_keys.emplace_back(silent_payment_priv_key);\n+                removed = true;\n+                output_index++;\n+                // Return true so that this output pubkey is removed the from vector and not checked again\n+                return true;\n+            }\n+            return false;\n+        }), output_pub_keys.end());\n+    } while (!output_pub_keys.empty() && removed);\n+    return raw_tr_keys;",
      "path": "src/wallet/silentpayments.cpp",
      "position": null,
      "original_position": 85,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "8be91169396a560bfc4a4e8b34a242111704f8e9",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This shouldn't return private keys, it should only return the tweak portion of the private key. This also means `Recipient` doesn't need to have the spend private key.",
      "created_at": "2023-08-08T10:44:44Z",
      "updated_at": "2023-08-08T10:44:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1286941048",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286941048"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 86,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286941460",
      "pull_request_review_id": 1567018921,
      "id": 1286941460,
      "node_id": "PRRC_kwDOABII585MtSsU",
      "diff_hunk": "@@ -62,6 +63,20 @@ enum class AddressPurpose {\n     SEND,\n     REFUND, //!< Never set in current code may be present in older wallet databases\n };\n+\n+struct CRecipient\n+{\n+    CScript scriptPubKey;\n+    CAmount nAmount;\n+    bool fSubtractFeeFromAmount;\n+};\n+\n+struct V0SilentPaymentDestination",
      "path": "src/wallet/types.h",
      "position": null,
      "original_position": 20,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "8be91169396a560bfc4a4e8b34a242111704f8e9",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "this should be its own commit",
      "created_at": "2023-08-08T10:45:11Z",
      "updated_at": "2023-08-08T10:45:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1286941460",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286941460"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 74,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286941957",
      "pull_request_review_id": 1567019657,
      "id": 1286941957,
      "node_id": "PRRC_kwDOABII585MtS0F",
      "diff_hunk": "@@ -262,13 +262,6 @@ inline std::optional<AddressPurpose> PurposeFromString(std::string_view s)\n     return {};\n }\n \n-struct CRecipient",
      "path": "src/wallet/wallet.h",
      "position": null,
      "original_position": 4,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "8be91169396a560bfc4a4e8b34a242111704f8e9",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "this should be its own commit, might not be needed if we instead V0SilentPaymentDestination as a CTxDestination type",
      "created_at": "2023-08-08T10:45:41Z",
      "updated_at": "2023-08-08T10:45:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1286941957",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1286941957"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 289,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1287394228",
      "pull_request_review_id": 1567728841,
      "id": 1287394228,
      "node_id": "PRRC_kwDOABII585MvBO0",
      "diff_hunk": "@@ -508,6 +511,7 @@ class CRegTestParams : public CChainParams\n         base58Prefixes[EXT_SECRET_KEY] = {0x04, 0x35, 0x83, 0x94};\n \n         bech32_hrp = \"bcrt\";\n+        silent_payment_hrp = \"sprt\";",
      "path": "src/kernel/chainparams.cpp",
      "position": 28,
      "original_position": 28,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "13e6c7b5444af103bb612cd503c50915d8d41015",
      "in_reply_to_id": 1282093736,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "As long as testnet and signet are the same, and different from mainnet, I'm happy. When testing with e.g. hardware wallets it lets you use the testnet app / firmware instead of signet-specific stuff.",
      "created_at": "2023-08-08T16:40:13Z",
      "updated_at": "2023-08-08T16:40:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1287394228",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1287394228"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 526,
      "original_line": 526,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1287398956",
      "pull_request_review_id": 1567736115,
      "id": 1287398956,
      "node_id": "PRRC_kwDOABII585MvCYs",
      "diff_hunk": "@@ -309,3 +311,33 @@ bool IsValidDestinationString(const std::string& str)\n {\n     return IsValidDestinationString(str, Params());\n }\n+\n+std::pair<CPubKey, CPubKey> DecodeSilentData(const std::vector<unsigned char>& data)\n+{\n+\n+    std::vector<unsigned char> scan_pubkey_data(data.begin(), data.begin() + 33);\n+    CPubKey scan_pubkey{scan_pubkey_data};\n+\n+    std::vector<unsigned char> spend_pubkey_data(data.begin() + 33, data.end());",
      "path": "src/key_io.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "37b0ca1c3d753cc61e0debf8ea59160bdf4127ec",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "37b0ca1c3d753cc61e0debf8ea59160bdf4127ec: alternatively you could scan for the exact pubkey length. That would tolerate future versions to add extra stuff to the address that's safe to ignore for older versions.",
      "created_at": "2023-08-08T16:44:45Z",
      "updated_at": "2023-08-08T16:56:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1287398956",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1287398956"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 321,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1287401010",
      "pull_request_review_id": 1567736115,
      "id": 1287401010,
      "node_id": "PRRC_kwDOABII585MvC4y",
      "diff_hunk": "@@ -309,3 +311,33 @@ bool IsValidDestinationString(const std::string& str)\n {\n     return IsValidDestinationString(str, Params());\n }\n+\n+std::pair<CPubKey, CPubKey> DecodeSilentData(const std::vector<unsigned char>& data)\n+{\n+\n+    std::vector<unsigned char> scan_pubkey_data(data.begin(), data.begin() + 33);\n+    CPubKey scan_pubkey{scan_pubkey_data};\n+\n+    std::vector<unsigned char> spend_pubkey_data(data.begin() + 33, data.end());\n+    CPubKey spend_pubkey{spend_pubkey_data};\n+\n+    return {scan_pubkey, spend_pubkey};\n+}\n+\n+std::vector<unsigned char> DecodeSilentAddress(const std::string& str)\n+{\n+    const auto& params{Params()};\n+    const auto& silent_payment_hrp = params.SilentPaymentHRP();\n+    const auto dec = bech32::Decode(str, /*silent=*/true);\n+    if (dec.encoding != bech32::Encoding::BECH32M || dec.hrp != silent_payment_hrp) {\n+        return {};\n+    }\n+    auto version = dec.data.front();  // retrieve the version\n+    std::vector<unsigned char> silent_payment_data;\n+    silent_payment_data.reserve(((dec.data.size() - 1) * 5) / 8);\n+    if (!ConvertBits<5, 8, false>([&](unsigned char c) { silent_payment_data.push_back(c); }, dec.data.begin() + 1, dec.data.end())) {\n+        return {};\n+    }\n+    if ((version == 0 && silent_payment_data.size() != SILENT_PAYMENT_V0_DATA_SIZE) || silent_payment_data.size() < SILENT_PAYMENT_V0_DATA_SIZE) return {};",
      "path": "src/key_io.cpp",
      "position": null,
      "original_position": 40,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "37b0ca1c3d753cc61e0debf8ea59160bdf4127ec",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "37b0ca1c3d753cc61e0debf8ea59160bdf4127ec: could use `version == 0 && silent_payment_data.size() < SILENT_PAYMENT_V0_DATA_SIZE` (see comment above)",
      "created_at": "2023-08-08T16:46:46Z",
      "updated_at": "2023-08-08T16:56:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1287401010",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1287401010"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 341,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1287402078",
      "pull_request_review_id": 1567736115,
      "id": 1287402078,
      "node_id": "PRRC_kwDOABII585MvDJe",
      "diff_hunk": "@@ -309,3 +311,33 @@ bool IsValidDestinationString(const std::string& str)\n {\n     return IsValidDestinationString(str, Params());\n }\n+\n+std::pair<CPubKey, CPubKey> DecodeSilentData(const std::vector<unsigned char>& data)",
      "path": "src/key_io.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "37b0ca1c3d753cc61e0debf8ea59160bdf4127ec",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "37b0ca1c3d753cc61e0debf8ea59160bdf4127ec `assert data.size() >= SILENT_PAYMENT_V0_DATA_SIZE` (or early return if you don't expect the caller to have already checked this)",
      "created_at": "2023-08-08T16:47:47Z",
      "updated_at": "2023-08-08T16:56:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1287402078",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1287402078"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 315,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1287404315",
      "pull_request_review_id": 1567736115,
      "id": 1287404315,
      "node_id": "PRRC_kwDOABII585MvDsb",
      "diff_hunk": "@@ -341,3 +341,21 @@ std::vector<unsigned char> DecodeSilentAddress(const std::string& str)\n     if ((version == 0 && silent_payment_data.size() != SILENT_PAYMENT_V0_DATA_SIZE) || silent_payment_data.size() < SILENT_PAYMENT_V0_DATA_SIZE) return {};\n     return silent_payment_data;\n }\n+\n+std::string EncodeSilentDestination(const CPubKey& scan_pubkey, const CPubKey& spend_pubkey)\n+{",
      "path": "src/key_io.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "328951d056e939b6db573043fc71d8bd6ae68dff",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "328951d056e939b6db573043fc71d8bd6ae68dff: if cheap, could assert/assume both ` CPubKey` are valid. ",
      "created_at": "2023-08-08T16:49:52Z",
      "updated_at": "2023-08-08T16:56:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1287404315",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1287404315"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 346,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1287404996",
      "pull_request_review_id": 1567736115,
      "id": 1287404996,
      "node_id": "PRRC_kwDOABII585MvD3E",
      "diff_hunk": "@@ -341,3 +341,21 @@ std::vector<unsigned char> DecodeSilentAddress(const std::string& str)\n     if ((version == 0 && silent_payment_data.size() != SILENT_PAYMENT_V0_DATA_SIZE) || silent_payment_data.size() < SILENT_PAYMENT_V0_DATA_SIZE) return {};\n     return silent_payment_data;\n }\n+\n+std::string EncodeSilentDestination(const CPubKey& scan_pubkey, const CPubKey& spend_pubkey)\n+{\n+    // The data_in is scan_pubkey + spend_pubkey\n+    std::vector<unsigned char> data_in = {};\n+    // Set 0 as the silent payments version\n+    std::vector<unsigned char> data_out = {0};\n+\n+    data_in.insert(data_in.end(), scan_pubkey.begin(), scan_pubkey.end());\n+    data_in.insert(data_in.end(), spend_pubkey.begin(), spend_pubkey.end());\n+\n+    ConvertBits<8, 5, true>([&](unsigned char c) { data_out.push_back(c); }, data_in.begin(), data_in.end());",
      "path": "src/key_io.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "328951d056e939b6db573043fc71d8bd6ae68dff",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "328951d056e939b6db573043fc71d8bd6ae68dff: this should be in some bech32 helper function.",
      "created_at": "2023-08-08T16:50:33Z",
      "updated_at": "2023-08-08T16:56:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1287404996",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1287404996"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 355,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1293963387",
      "pull_request_review_id": 1577640373,
      "id": 1293963387,
      "node_id": "PRRC_kwDOABII585NIFB7",
      "diff_hunk": "@@ -0,0 +1,179 @@\n+#include <wallet/silentpayments.h>\n+#include <arith_uint256.h>\n+#include <coins.h>\n+#include <crypto/common.h>\n+#include <crypto/hmac_sha512.h>\n+#include <key_io.h>\n+#include <undo.h>\n+#include <logging.h>\n+\n+namespace wallet {\n+\n+Recipient::Recipient(const CKey& scan_seckey, const CKey& spend_seckey)",
      "path": "src/wallet/silentpayments.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "8be91169396a560bfc4a4e8b34a242111704f8e9",
      "in_reply_to_id": 1286930916,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "https://github.com/achow101/bitcoin/commit/57d72b52ca5a442982907cb09c8b26e1ab5e9d59 can be squashed in here to remove the `Recipient` class.",
      "created_at": "2023-08-14T20:57:53Z",
      "updated_at": "2023-08-14T20:57:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1293963387",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1293963387"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 13,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1295130079",
      "pull_request_review_id": 1579452859,
      "id": 1295130079,
      "node_id": "PRRC_kwDOABII585NMh3f",
      "diff_hunk": "@@ -172,6 +174,79 @@ bool CKey::Negate()\n     return secp256k1_ec_seckey_negate(secp256k1_context_sign, keydata.data());\n }\n \n+CKey CKey::AddTweak(const unsigned char *tweak32) const\n+{\n+    assert(fValid);\n+\n+    unsigned char tweaked_seckey[32];\n+    memcpy(tweaked_seckey, data(), 32);\n+\n+    int ret = secp256k1_ec_seckey_tweak_add(secp256k1_context_sign, tweaked_seckey, tweak32);\n+    assert(ret);\n+\n+    CKey new_seckey;\n+    new_seckey.Set(std::begin(tweaked_seckey), std::end(tweaked_seckey), true);\n+\n+    return new_seckey;\n+}\n+\n+CKey CKey::MultiplyTweak(const unsigned char *tweak32) const\n+{\n+    assert(fValid);\n+\n+    unsigned char tweaked_seckey[32];\n+    memcpy(tweaked_seckey, data(), 32);\n+\n+    int ret = secp256k1_ec_seckey_tweak_mul(secp256k1_context_sign, tweaked_seckey, tweak32);\n+    assert(ret);\n+\n+    CKey new_seckey;\n+    new_seckey.Set(std::begin(tweaked_seckey), std::end(tweaked_seckey), true);\n+\n+    return new_seckey;\n+}\n+\n+// we dont want to hash the output of ECDH yet, so we provide a custom hash function to secp256k1_ecdh which\n+// returns the serialized public key without hashing it\n+int custom_ecdh_hash_function(unsigned char *output, const unsigned char *x32, const unsigned char *y32, void *data) {",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 54,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "8b1b1d0e8d5f87919695f9b3f08ab4a5ab739463",
      "in_reply_to_id": null,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Coming from review club:\r\nShould also be moved to secp256k1 right",
      "created_at": "2023-08-15T21:24:19Z",
      "updated_at": "2023-08-15T23:56:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1295130079",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1295130079"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 211,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1295134019",
      "pull_request_review_id": 1579452859,
      "id": 1295134019,
      "node_id": "PRRC_kwDOABII585NMi1D",
      "diff_hunk": "@@ -370,11 +370,13 @@ std::string Encode(Encoding encoding, const std::string& hrp, const data& values\n }\n \n /** Decode a Bech32 or Bech32m string. */\n-DecodeResult Decode(const std::string& str) {\n+DecodeResult Decode(const std::string& str, bool silent) {\n+    std::size_t max_size = silent ? 1024 : 90;",
      "path": "src/bech32.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "cca58b809ce7b394ec69f1d59f829a8057722da7",
      "in_reply_to_id": null,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit:\r\nI know you describe why the `max_size` is `1024` in commit message.\r\nBut will it be nice if you add a comment about the `1024` / `1023` `max_size`.",
      "created_at": "2023-08-15T21:29:27Z",
      "updated_at": "2023-08-15T23:56:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1295134019",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1295134019"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 374,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1296358180",
      "pull_request_review_id": 1581312048,
      "id": 1296358180,
      "node_id": "PRRC_kwDOABII585NRNsk",
      "diff_hunk": "@@ -508,6 +511,7 @@ class CRegTestParams : public CChainParams\n         base58Prefixes[EXT_SECRET_KEY] = {0x04, 0x35, 0x83, 0x94};\n \n         bech32_hrp = \"bcrt\";\n+        silent_payment_hrp = \"sprt\";",
      "path": "src/kernel/chainparams.cpp",
      "position": 28,
      "original_position": 28,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "13e6c7b5444af103bb612cd503c50915d8d41015",
      "in_reply_to_id": 1282093736,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@josibake: It’s rather that bech32(m) addresses are the odd ones out. Before native segwit outputs all addresses across testnet and regtest were the same. After rereading #12314, I would still recommend that you use the same hrp for all test-networks.",
      "created_at": "2023-08-16T19:48:00Z",
      "updated_at": "2023-08-16T19:48:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1296358180",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1296358180"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 526,
      "original_line": 526,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1307989816",
      "pull_request_review_id": 1599171329,
      "id": 1307989816,
      "node_id": "PRRC_kwDOABII585N9lc4",
      "diff_hunk": "@@ -0,0 +1,49 @@\n+#ifndef BITCOIN_WALLET_SILENTPAYMENTS_H\n+#define BITCOIN_WALLET_SILENTPAYMENTS_H\n+\n+#include <coins.h>\n+#include <key_io.h>\n+#include <undo.h>\n+#include <wallet/wallet.h>\n+\n+namespace wallet {\n+class Recipient {\n+    protected:\n+        CKey m_scan_seckey;\n+        CKey m_spend_seckey;\n+        CPubKey m_scan_pubkey;\n+        CPubKey m_spend_pubkey;\n+        CPubKey m_ecdh_pubkey;\n+\n+    public:\n+        Recipient(const CKey& scan_seckey, const CKey& spend_seckey);\n+        void ComputeECDHSharedSecret(const CPubKey& sender_public_key, const std::vector<COutPoint>& tx_outpoints);\n+        std::pair<CKey,CPubKey> CreateOutput(const uint32_t output_index) const;\n+        std::pair<CPubKey,CPubKey> GetAddress() const;\n+        std::vector<CKey> ScanTxOutputs(std::vector<XOnlyPubKey> output_pub_keys);\n+};\n+\n+struct SilentPaymentRecipient\n+{\n+    CPubKey m_scan_pubkey;\n+    std::vector<std::pair<CPubKey, CAmount>> m_outputs;\n+    SilentPaymentRecipient() {};\n+    SilentPaymentRecipient(CPubKey scan_pubkey) : m_scan_pubkey(scan_pubkey) {};\n+};\n+\n+class Sender {\n+    protected:\n+        CPubKey m_ecdh_pubkey;\n+        SilentPaymentRecipient m_recipient;\n+        CPubKey CreateOutput(const CPubKey& spend_pubkey, const uint32_t output_index) const;\n+\n+    public:\n+        Sender(const CKey& scalar_ecdh_input, const SilentPaymentRecipient& recipient);\n+        std::vector<wallet::CRecipient> GenerateRecipientScriptPubKeys() const;",
      "path": "src/wallet/silentpayments.h",
      "position": null,
      "original_position": 42,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "e3f9217ffb9457fcc54d589616f5c752ce15e6e5",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Please don't use `CRecipient` here, it causes a circular dependency.",
      "created_at": "2023-08-28T21:42:41Z",
      "updated_at": "2023-08-28T21:42:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1307989816",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1307989816"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 30,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311598024",
      "pull_request_review_id": 1604708096,
      "id": 1311598024,
      "node_id": "PRRC_kwDOABII585OLWXI",
      "diff_hunk": "@@ -172,6 +174,79 @@ bool CKey::Negate()\n     return secp256k1_ec_seckey_negate(secp256k1_context_sign, keydata.data());\n }\n \n+CKey CKey::AddTweak(const unsigned char *tweak32) const\n+{\n+    assert(fValid);\n+\n+    unsigned char tweaked_seckey[32];\n+    memcpy(tweaked_seckey, data(), 32);\n+\n+    int ret = secp256k1_ec_seckey_tweak_add(secp256k1_context_sign, tweaked_seckey, tweak32);\n+    assert(ret);\n+\n+    CKey new_seckey;\n+    new_seckey.Set(std::begin(tweaked_seckey), std::end(tweaked_seckey), true);\n+\n+    return new_seckey;\n+}\n+\n+CKey CKey::MultiplyTweak(const unsigned char *tweak32) const\n+{\n+    assert(fValid);\n+\n+    unsigned char tweaked_seckey[32];\n+    memcpy(tweaked_seckey, data(), 32);",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 41,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "56882622faf469b6f948f79a69c3c8ddbde92ff8",
      "in_reply_to_id": 1275442608,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed",
      "created_at": "2023-08-31T13:04:12Z",
      "updated_at": "2023-08-31T13:04:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1311598024",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311598024"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": 197,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 198,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311598537",
      "pull_request_review_id": 1604708882,
      "id": 1311598537,
      "node_id": "PRRC_kwDOABII585OLWfJ",
      "diff_hunk": "@@ -172,6 +174,79 @@ bool CKey::Negate()\n     return secp256k1_ec_seckey_negate(secp256k1_context_sign, keydata.data());\n }\n \n+CKey CKey::AddTweak(const unsigned char *tweak32) const\n+{\n+    assert(fValid);\n+\n+    unsigned char tweaked_seckey[32];\n+    memcpy(tweaked_seckey, data(), 32);",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 25,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "56882622faf469b6f948f79a69c3c8ddbde92ff8",
      "in_reply_to_id": 1275442463,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Now operates on `keydata.data()` in place",
      "created_at": "2023-08-31T13:04:35Z",
      "updated_at": "2023-08-31T13:04:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1311598537",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311598537"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": 181,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 182,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311600735",
      "pull_request_review_id": 1604712273,
      "id": 1311600735,
      "node_id": "PRRC_kwDOABII585OLXBf",
      "diff_hunk": "@@ -309,3 +311,33 @@ bool IsValidDestinationString(const std::string& str)\n {\n     return IsValidDestinationString(str, Params());\n }\n+\n+std::pair<CPubKey, CPubKey> DecodeSilentData(const std::vector<unsigned char>& data)\n+{\n+\n+    std::vector<unsigned char> scan_pubkey_data(data.begin(), data.begin() + 33);\n+    CPubKey scan_pubkey{scan_pubkey_data};\n+\n+    std::vector<unsigned char> spend_pubkey_data(data.begin() + 33, data.end());\n+    CPubKey spend_pubkey{spend_pubkey_data};\n+\n+    return {scan_pubkey, spend_pubkey};\n+}\n+\n+std::vector<unsigned char> DecodeSilentAddress(const std::string& str)",
      "path": "src/key_io.cpp",
      "position": null,
      "original_position": 26,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "37b0ca1c3d753cc61e0debf8ea59160bdf4127ec",
      "in_reply_to_id": 1286904504,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Resolved in #28246 , which adds a new `CTxDestination` and lets us use the existing encoder and decoder.",
      "created_at": "2023-08-31T13:06:22Z",
      "updated_at": "2023-08-31T13:06:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1311600735",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311600735"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 327,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311601163",
      "pull_request_review_id": 1604712977,
      "id": 1311601163,
      "node_id": "PRRC_kwDOABII585OLXIL",
      "diff_hunk": "@@ -0,0 +1,49 @@\n+#ifndef BITCOIN_WALLET_SILENTPAYMENTS_H\n+#define BITCOIN_WALLET_SILENTPAYMENTS_H\n+\n+#include <coins.h>\n+#include <key_io.h>\n+#include <undo.h>\n+#include <wallet/wallet.h>\n+\n+namespace wallet {\n+class Recipient {\n+    protected:\n+        CKey m_scan_seckey;\n+        CKey m_spend_seckey;\n+        CPubKey m_scan_pubkey;\n+        CPubKey m_spend_pubkey;\n+        CPubKey m_ecdh_pubkey;\n+\n+    public:\n+        Recipient(const CKey& scan_seckey, const CKey& spend_seckey);\n+        void ComputeECDHSharedSecret(const CPubKey& sender_public_key, const std::vector<COutPoint>& tx_outpoints);\n+        std::pair<CKey,CPubKey> CreateOutput(const uint32_t output_index) const;\n+        std::pair<CPubKey,CPubKey> GetAddress() const;\n+        std::vector<CKey> ScanTxOutputs(std::vector<XOnlyPubKey> output_pub_keys);\n+};\n+\n+struct SilentPaymentRecipient\n+{\n+    CPubKey m_scan_pubkey;\n+    std::vector<std::pair<CPubKey, CAmount>> m_outputs;\n+    SilentPaymentRecipient() {};\n+    SilentPaymentRecipient(CPubKey scan_pubkey) : m_scan_pubkey(scan_pubkey) {};\n+};\n+\n+class Sender {\n+    protected:\n+        CPubKey m_ecdh_pubkey;\n+        SilentPaymentRecipient m_recipient;\n+        CPubKey CreateOutput(const CPubKey& spend_pubkey, const uint32_t output_index) const;\n+\n+    public:\n+        Sender(const CKey& scalar_ecdh_input, const SilentPaymentRecipient& recipient);\n+        std::vector<wallet::CRecipient> GenerateRecipientScriptPubKeys() const;",
      "path": "src/wallet/silentpayments.h",
      "position": null,
      "original_position": 42,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "e3f9217ffb9457fcc54d589616f5c752ce15e6e5",
      "in_reply_to_id": 1307989816,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed",
      "created_at": "2023-08-31T13:06:43Z",
      "updated_at": "2023-08-31T13:06:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1311601163",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311601163"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 30,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311605823",
      "pull_request_review_id": 1604720049,
      "id": 1311605823,
      "node_id": "PRRC_kwDOABII585OLYQ_",
      "diff_hunk": "@@ -0,0 +1,179 @@\n+#include <wallet/silentpayments.h>\n+#include <arith_uint256.h>\n+#include <coins.h>\n+#include <crypto/common.h>\n+#include <crypto/hmac_sha512.h>\n+#include <key_io.h>\n+#include <undo.h>\n+#include <logging.h>\n+\n+namespace wallet {\n+\n+Recipient::Recipient(const CKey& scan_seckey, const CKey& spend_seckey)\n+{\n+    m_scan_seckey = scan_seckey;\n+    m_scan_pubkey = CPubKey{m_scan_seckey.GetPubKey()};\n+    m_spend_seckey = spend_seckey;\n+    m_spend_pubkey = CPubKey{m_spend_seckey.GetPubKey()};\n+}\n+\n+void Recipient::ComputeECDHSharedSecret(const CPubKey& sender_public_key, const std::vector<COutPoint>& tx_outpoints)\n+{\n+    const auto& outpoint_hash = HashOutpoints(tx_outpoints);\n+    auto tweaked_scan_seckey = m_scan_seckey.MultiplyTweak(outpoint_hash.begin());\n+    CPubKey result = tweaked_scan_seckey.SilentPaymentECDH(sender_public_key);\n+\n+    m_ecdh_pubkey = result;\n+    assert(m_ecdh_pubkey.IsValid());\n+}\n+\n+std::pair<CKey,CPubKey> Recipient::CreateOutput(const uint32_t output_index) const\n+{\n+    HashWriter h;\n+    h.write(Span{m_ecdh_pubkey});\n+    unsigned char num[4];\n+    WriteBE32(num, output_index);\n+    h << num;\n+    uint256 shared_secret = h.GetSHA256();\n+\n+    const auto& result_pubkey{m_spend_pubkey.AddTweak(shared_secret.begin())};\n+    const auto& result_seckey{m_spend_seckey.AddTweak(shared_secret.begin())};\n+\n+    return {result_seckey, result_pubkey};\n+}\n+\n+std::pair<CPubKey,CPubKey> Recipient::GetAddress() const\n+{\n+    return {m_scan_pubkey, m_spend_pubkey};\n+}\n+\n+std::vector<CKey> Recipient::ScanTxOutputs(std::vector<XOnlyPubKey> output_pub_keys)",
      "path": "src/wallet/silentpayments.cpp",
      "position": null,
      "original_position": 50,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "8be91169396a560bfc4a4e8b34a242111704f8e9",
      "in_reply_to_id": 1286935217,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Leaving this alone for now. This can be easily updated to add label support when it makes sense.",
      "created_at": "2023-08-31T13:10:12Z",
      "updated_at": "2023-08-31T13:10:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1311605823",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311605823"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321403963",
      "pull_request_review_id": 1619765249,
      "id": 1321403963,
      "node_id": "PRRC_kwDOABII585OwwY7",
      "diff_hunk": "@@ -211,6 +211,12 @@ class CPubKey\n      */\n     static bool CheckLowS(const std::vector<unsigned char>& vchSig);\n \n+    //! Add a number of public keys together.\n+    static CPubKey Combine(std::vector<CPubKey> pubkeys);",
      "path": "src/pubkey.h",
      "position": null,
      "original_position": 5,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "dc18efa78d014be0a09e4c986813086e56c251a3",
      "in_reply_to_id": 1276883646,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed, and made pass by reference.",
      "created_at": "2023-09-11T11:32:02Z",
      "updated_at": "2023-09-11T11:32:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1321403963",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321403963"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 215,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321641488",
      "pull_request_review_id": 1620147641,
      "id": 1321641488,
      "node_id": "PRRC_kwDOABII585OxqYQ",
      "diff_hunk": "@@ -309,3 +311,51 @@ bool IsValidDestinationString(const std::string& str)\n {\n     return IsValidDestinationString(str, Params());\n }\n+\n+std::pair<CPubKey, CPubKey> DecodeSilentData(const std::vector<unsigned char>& data)\n+{\n+\n+    std::vector<unsigned char> scan_pubkey_data(data.begin(), data.begin() + 33);\n+    CPubKey scan_pubkey{scan_pubkey_data};\n+\n+    std::vector<unsigned char> spend_pubkey_data(data.begin() + 33, data.end());\n+    CPubKey spend_pubkey{spend_pubkey_data};\n+\n+    return {scan_pubkey, spend_pubkey};\n+}\n+\n+std::vector<unsigned char> DecodeSilentAddress(const std::string& str)\n+{\n+    const auto& params{Params()};\n+    const auto& silent_payment_hrp = params.SilentPaymentHRP();\n+    const auto dec = bech32::Decode(str, /*silent=*/true);\n+    if (dec.encoding != bech32::Encoding::BECH32M || dec.hrp != silent_payment_hrp) {\n+        return {};\n+    }\n+    auto version = dec.data.front();  // retrieve the version\n+    std::vector<unsigned char> silent_payment_data;\n+    silent_payment_data.reserve(((dec.data.size() - 1) * 5) / 8);\n+    if (!ConvertBits<5, 8, false>([&](unsigned char c) { silent_payment_data.push_back(c); }, dec.data.begin() + 1, dec.data.end())) {\n+        return {};\n+    }\n+    if ((version == 0 && silent_payment_data.size() != SILENT_PAYMENT_V0_DATA_SIZE) || silent_payment_data.size() < SILENT_PAYMENT_V0_DATA_SIZE) return {};",
      "path": "src/key_io.cpp",
      "position": null,
      "original_position": 40,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "8ee791e7b34a354ce6835b968fe12924b8908d7c",
      "in_reply_to_id": 1284001548,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Took a look at `EvalCheckSig` and while I think this is a good idea in general, I'd prefer to leave it as a follow-up for now. My reasoning here is we currently only have a `v0` silent payments version and I'd like to keep the code simple and focused on the `V0` rules. As a follow-up, or when we add support for a future `v1` version is likely a better time to introduce more complex code for handling multiple versions.",
      "created_at": "2023-09-11T14:26:18Z",
      "updated_at": "2023-09-11T14:26:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1321641488",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321641488"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 341,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321641794",
      "pull_request_review_id": 1620148126,
      "id": 1321641794,
      "node_id": "PRRC_kwDOABII585OxqdC",
      "diff_hunk": "@@ -309,3 +311,33 @@ bool IsValidDestinationString(const std::string& str)\n {\n     return IsValidDestinationString(str, Params());\n }\n+\n+std::pair<CPubKey, CPubKey> DecodeSilentData(const std::vector<unsigned char>& data)\n+{\n+\n+    std::vector<unsigned char> scan_pubkey_data(data.begin(), data.begin() + 33);\n+    CPubKey scan_pubkey{scan_pubkey_data};\n+\n+    std::vector<unsigned char> spend_pubkey_data(data.begin() + 33, data.end());",
      "path": "src/key_io.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "37b0ca1c3d753cc61e0debf8ea59160bdf4127ec",
      "in_reply_to_id": 1287398956,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2023-09-11T14:26:31Z",
      "updated_at": "2023-09-11T14:26:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1321641794",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321641794"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 321,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321645565",
      "pull_request_review_id": 1620154281,
      "id": 1321645565,
      "node_id": "PRRC_kwDOABII585OxrX9",
      "diff_hunk": "@@ -309,3 +311,33 @@ bool IsValidDestinationString(const std::string& str)\n {\n     return IsValidDestinationString(str, Params());\n }\n+\n+std::pair<CPubKey, CPubKey> DecodeSilentData(const std::vector<unsigned char>& data)\n+{\n+\n+    std::vector<unsigned char> scan_pubkey_data(data.begin(), data.begin() + 33);\n+    CPubKey scan_pubkey{scan_pubkey_data};\n+\n+    std::vector<unsigned char> spend_pubkey_data(data.begin() + 33, data.end());\n+    CPubKey spend_pubkey{spend_pubkey_data};\n+\n+    return {scan_pubkey, spend_pubkey};\n+}\n+\n+std::vector<unsigned char> DecodeSilentAddress(const std::string& str)\n+{\n+    const auto& params{Params()};\n+    const auto& silent_payment_hrp = params.SilentPaymentHRP();\n+    const auto dec = bech32::Decode(str, /*silent=*/true);\n+    if (dec.encoding != bech32::Encoding::BECH32M || dec.hrp != silent_payment_hrp) {\n+        return {};\n+    }\n+    auto version = dec.data.front();  // retrieve the version\n+    std::vector<unsigned char> silent_payment_data;\n+    silent_payment_data.reserve(((dec.data.size() - 1) * 5) / 8);\n+    if (!ConvertBits<5, 8, false>([&](unsigned char c) { silent_payment_data.push_back(c); }, dec.data.begin() + 1, dec.data.end())) {\n+        return {};\n+    }\n+    if ((version == 0 && silent_payment_data.size() != SILENT_PAYMENT_V0_DATA_SIZE) || silent_payment_data.size() < SILENT_PAYMENT_V0_DATA_SIZE) return {};",
      "path": "src/key_io.cpp",
      "position": null,
      "original_position": 40,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "37b0ca1c3d753cc61e0debf8ea59160bdf4127ec",
      "in_reply_to_id": 1287401010,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think this should fail if an address says it is v0 but has a data part larger than what is defined for v0. If an address has a version > v0 and data part > V0_SIZE, then only the _first_ 66 bytes of the data part are read, which is what we want for the forward compatibility bit.",
      "created_at": "2023-09-11T14:29:15Z",
      "updated_at": "2023-09-11T14:29:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1321645565",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321645565"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 341,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321654643",
      "pull_request_review_id": 1620168845,
      "id": 1321654643,
      "node_id": "PRRC_kwDOABII585Oxtlz",
      "diff_hunk": "@@ -341,3 +341,21 @@ std::vector<unsigned char> DecodeSilentAddress(const std::string& str)\n     if ((version == 0 && silent_payment_data.size() != SILENT_PAYMENT_V0_DATA_SIZE) || silent_payment_data.size() < SILENT_PAYMENT_V0_DATA_SIZE) return {};\n     return silent_payment_data;\n }\n+\n+std::string EncodeSilentDestination(const CPubKey& scan_pubkey, const CPubKey& spend_pubkey)\n+{",
      "path": "src/key_io.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "328951d056e939b6db573043fc71d8bd6ae68dff",
      "in_reply_to_id": 1287404315,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This now uses the `src/key_io.cpp::Encode` function, which takes a `V0SilentPaymentDestination` object, so should be good. If we do want an assert, we can/should do it when creating the `V0SilentPaymentDestination` object",
      "created_at": "2023-09-11T14:35:53Z",
      "updated_at": "2023-09-11T14:35:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1321654643",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321654643"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 346,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321657422",
      "pull_request_review_id": 1620173236,
      "id": 1321657422,
      "node_id": "PRRC_kwDOABII585OxuRO",
      "diff_hunk": "@@ -341,3 +341,21 @@ std::vector<unsigned char> DecodeSilentAddress(const std::string& str)\n     if ((version == 0 && silent_payment_data.size() != SILENT_PAYMENT_V0_DATA_SIZE) || silent_payment_data.size() < SILENT_PAYMENT_V0_DATA_SIZE) return {};\n     return silent_payment_data;\n }\n+\n+std::string EncodeSilentDestination(const CPubKey& scan_pubkey, const CPubKey& spend_pubkey)\n+{\n+    // The data_in is scan_pubkey + spend_pubkey\n+    std::vector<unsigned char> data_in = {};\n+    // Set 0 as the silent payments version\n+    std::vector<unsigned char> data_out = {0};\n+\n+    data_in.insert(data_in.end(), scan_pubkey.begin(), scan_pubkey.end());\n+    data_in.insert(data_in.end(), spend_pubkey.begin(), spend_pubkey.end());\n+\n+    ConvertBits<8, 5, true>([&](unsigned char c) { data_out.push_back(c); }, data_in.begin(), data_in.end());",
      "path": "src/key_io.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "328951d056e939b6db573043fc71d8bd6ae68dff",
      "in_reply_to_id": 1287404996,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not totally convinced we do want to wrap this in a helper function, but perhaps that can be a follow-up looking at how we handle bech32 across WitnessV0, WitnessV1 and V0SilentPaymentsDestinations",
      "created_at": "2023-09-11T14:37:56Z",
      "updated_at": "2023-09-11T14:37:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1321657422",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321657422"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 355,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321658984",
      "pull_request_review_id": 1620175724,
      "id": 1321658984,
      "node_id": "PRRC_kwDOABII585Oxupo",
      "diff_hunk": "@@ -172,6 +174,79 @@ bool CKey::Negate()\n     return secp256k1_ec_seckey_negate(secp256k1_context_sign, keydata.data());\n }\n \n+CKey CKey::AddTweak(const unsigned char *tweak32) const\n+{\n+    assert(fValid);\n+\n+    unsigned char tweaked_seckey[32];\n+    memcpy(tweaked_seckey, data(), 32);\n+\n+    int ret = secp256k1_ec_seckey_tweak_add(secp256k1_context_sign, tweaked_seckey, tweak32);\n+    assert(ret);\n+\n+    CKey new_seckey;\n+    new_seckey.Set(std::begin(tweaked_seckey), std::end(tweaked_seckey), true);\n+\n+    return new_seckey;\n+}\n+\n+CKey CKey::MultiplyTweak(const unsigned char *tweak32) const\n+{\n+    assert(fValid);\n+\n+    unsigned char tweaked_seckey[32];\n+    memcpy(tweaked_seckey, data(), 32);\n+\n+    int ret = secp256k1_ec_seckey_tweak_mul(secp256k1_context_sign, tweaked_seckey, tweak32);\n+    assert(ret);\n+\n+    CKey new_seckey;\n+    new_seckey.Set(std::begin(tweaked_seckey), std::end(tweaked_seckey), true);\n+\n+    return new_seckey;\n+}\n+\n+// we dont want to hash the output of ECDH yet, so we provide a custom hash function to secp256k1_ecdh which\n+// returns the serialized public key without hashing it\n+int custom_ecdh_hash_function(unsigned char *output, const unsigned char *x32, const unsigned char *y32, void *data) {",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 54,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "8b1b1d0e8d5f87919695f9b3f08ab4a5ab739463",
      "in_reply_to_id": 1295130079,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This has been re-written so there is no longer a stand-alone function, but also yes, I think this could be upstreamed into libsecp256k1 at some point.",
      "created_at": "2023-09-11T14:39:04Z",
      "updated_at": "2023-09-11T14:39:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1321658984",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321658984"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 211,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321660071",
      "pull_request_review_id": 1620177378,
      "id": 1321660071,
      "node_id": "PRRC_kwDOABII585Oxu6n",
      "diff_hunk": "@@ -370,11 +370,13 @@ std::string Encode(Encoding encoding, const std::string& hrp, const data& values\n }\n \n /** Decode a Bech32 or Bech32m string. */\n-DecodeResult Decode(const std::string& str) {\n+DecodeResult Decode(const std::string& str, bool silent) {\n+    std::size_t max_size = silent ? 1024 : 90;",
      "path": "src/bech32.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "cca58b809ce7b394ec69f1d59f829a8057722da7",
      "in_reply_to_id": 1295134019,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This has been re-written to use a character limit enum.",
      "created_at": "2023-09-11T14:39:49Z",
      "updated_at": "2023-09-11T14:39:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1321660071",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321660071"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 374,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321666523",
      "pull_request_review_id": 1620187974,
      "id": 1321666523,
      "node_id": "PRRC_kwDOABII585Oxwfb",
      "diff_hunk": "@@ -508,6 +511,7 @@ class CRegTestParams : public CChainParams\n         base58Prefixes[EXT_SECRET_KEY] = {0x04, 0x35, 0x83, 0x94};\n \n         bech32_hrp = \"bcrt\";\n+        silent_payment_hrp = \"sprt\";",
      "path": "src/kernel/chainparams.cpp",
      "position": 28,
      "original_position": 28,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "13e6c7b5444af103bb612cd503c50915d8d41015",
      "in_reply_to_id": 1282093736,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In the interest of keeping this PR well scoped, I think we should go for consistency. Since silent payment addresses are bech32m encoded, we should follow the convention _currently_ used for bech32(m), and if we do decided to change the convention for bech32(m) hrp's in the future, then it should change for all of them (including silent payments)",
      "created_at": "2023-09-11T14:44:38Z",
      "updated_at": "2023-09-11T14:44:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1321666523",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321666523"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 526,
      "original_line": 526,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321926230",
      "pull_request_review_id": 1620593539,
      "id": 1321926230,
      "node_id": "PRRC_kwDOABII585Oyv5W",
      "diff_hunk": "@@ -256,6 +259,22 @@ std::optional<std::pair<XOnlyPubKey, bool>> XOnlyPubKey::CreateTapTweak(const ui\n     return ret;\n }\n \n+CPubKey CPubKey::TweakAdd(const unsigned char *tweak32) const\n+{\n+    secp256k1_pubkey original_pubkey;\n+    int return_val = secp256k1_ec_pubkey_parse(secp256k1_context_static, &original_pubkey, data(), size());\n+    assert(return_val);\n+\n+    return_val = secp256k1_ec_pubkey_tweak_add(secp256k1_context_static, &original_pubkey, tweak32);\n+    assert(return_val);\n+\n+    unsigned char pubkey_bytes[COMPRESSED_SIZE];\n+    size_t publen = COMPRESSED_SIZE;\n+    return_val = secp256k1_ec_pubkey_serialize(secp256k1_context_static, pubkey_bytes, &publen, &original_pubkey, SECP256K1_EC_COMPRESSED);\n+    assert(return_val);\n+\n+    return CPubKey(pubkey_bytes);",
      "path": "src/pubkey.cpp",
      "position": null,
      "original_position": 28,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "7b9f48450738c42d934280881d9ff2dfb5419725",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In 7b9f48450738c42d934280881d9ff2dfb5419725 \"crypto: update CKey, CPubkey for silent payments\"\r\n\r\nCurrently `CKey::TweakAdd` modifies in place, while `CPubKey::TweakAdd` returns a new `CPubKey`. This can be confusing as I would expect these functions to do the same things to their respective objects rather than behave slightly differently.",
      "created_at": "2023-09-11T18:36:57Z",
      "updated_at": "2023-09-11T19:37:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1321926230",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321926230"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 276,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321932172",
      "pull_request_review_id": 1620593539,
      "id": 1321932172,
      "node_id": "PRRC_kwDOABII585OyxWM",
      "diff_hunk": "@@ -127,12 +146,29 @@ CTxDestination DecodeDestination(const std::string& str, const CChainParams& par\n     }\n \n     data.clear();\n-    const auto dec = bech32::Decode(str);\n+    const auto dec = bech32::Decode(str, is_silent_payment ? bech32::CharLimit::SILENT_PAYMENTS : bech32::CharLimit::SEGWIT);\n     if (dec.encoding == bech32::Encoding::BECH32 || dec.encoding == bech32::Encoding::BECH32M) {\n         if (dec.data.empty()) {\n             error_str = \"Empty Bech32 data section\";\n             return CNoDestination();\n         }\n+        if (is_silent_payment) {\n+            if (!ConvertBits<5, 8, false>([&](unsigned char c) { data.push_back(c); }, dec.data.begin() + 1, dec.data.end())) {\n+                return CNoDestination();\n+            }\n+            if (data.size() < SILENT_PAYMENT_V0_DATA_SIZE) {\n+                error_str = strprintf(\"Silent payment data payload is too small (expected at least %d, got %d).\", SILENT_PAYMENT_V0_DATA_SIZE, data.size());\n+                return CNoDestination();\n+            }\n+            auto version = dec.data[0];  // retrieve the version\n+            if (version == 0 && data.size() != SILENT_PAYMENT_V0_DATA_SIZE) {\n+                error_str = strprintf(\"Silent payment version is v0 but data is not the correct size (expected %d, got %d).\", SILENT_PAYMENT_V0_DATA_SIZE, data.size());\n+                return CNoDestination();\n+            }",
      "path": "src/key_io.cpp",
      "position": 71,
      "original_position": 65,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "3235eb8c63ea055c68fdf59bb20afd6f06f294e4",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In 3235eb8c63ea055c68fdf59bb20afd6f06f294e4 \"Add V0SilentPaymentDestination address type\"\r\n\r\nWhat about unknown versions?",
      "created_at": "2023-09-11T18:43:09Z",
      "updated_at": "2023-09-11T19:37:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1321932172",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321932172"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": 171,
      "original_start_line": 164,
      "start_side": "RIGHT",
      "line": 174,
      "original_line": 174,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321935455",
      "pull_request_review_id": 1620593539,
      "id": 1321935455,
      "node_id": "PRRC_kwDOABII585OyyJf",
      "diff_hunk": "@@ -64,6 +66,21 @@ class DestinationEncoder\n         return bech32::Encode(bech32::Encoding::BECH32M, m_params.Bech32HRP(), data);\n     }\n \n+    std::string operator()(const V0SilentPaymentDestination& sp) const\n+    {\n+        // The data_in is scan_pubkey + spend_pubkey\n+        std::vector<unsigned char> data_in = {};\n+        data_in.reserve(66);\n+        // Set 0 as the silent payments version\n+        std::vector<unsigned char> data_out = {0};\n+        data_out.reserve(67);",
      "path": "src/key_io.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "3235eb8c63ea055c68fdf59bb20afd6f06f294e4",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In 3235eb8c63ea055c68fdf59bb20afd6f06f294e4 \"Add V0SilentPaymentDestination address type\"\r\n\r\n`data_out` contains result of `ConvertBits` which expands each 8-bit byte into 5-bit chunks. So the expected size is `67 * 8 / 5 = 107.2`. So `data_out` should be reserving 108 bytes rather than 67.",
      "created_at": "2023-09-11T18:46:42Z",
      "updated_at": "2023-09-11T19:37:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1321935455",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321935455"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321964059",
      "pull_request_review_id": 1620593539,
      "id": 1321964059,
      "node_id": "PRRC_kwDOABII585Oy5Ib",
      "diff_hunk": "@@ -0,0 +1,210 @@\n+#include <wallet/silentpayments.h>\n+#include <addresstype.h>\n+#include <arith_uint256.h>\n+#include <coins.h>\n+#include <crypto/common.h>\n+#include <crypto/hmac_sha512.h>\n+#include <key_io.h>\n+#include <undo.h>\n+#include <logging.h>\n+#include <pubkey.h>\n+#include <policy/policy.h>\n+#include <script/solver.h>\n+#include <util/check.h>\n+#include <wallet/wallet.h>\n+\n+namespace wallet {\n+\n+CPubKey ComputeECDHSharedSecret(const CKey& scan_key, const CPubKey& sender_public_key, const uint256& outpoints_hash)\n+{\n+    auto tweaked_scan_seckey{scan_key};\n+    tweaked_scan_seckey.TweakMultiply(outpoints_hash.begin());\n+    CPubKey result = tweaked_scan_seckey.UnhashedECDH(sender_public_key);\n+    assert(result.IsValid());\n+    return result;\n+}\n+\n+uint256 ComputeTweak(const CPubKey& ecdh_pubkey, const uint32_t output_index)\n+{\n+    HashWriter h;\n+    h.write(Span{ecdh_pubkey});\n+    unsigned char num[4];\n+    WriteBE32(num, output_index);\n+    h << num;\n+    return h.GetSHA256();\n+}\n+\n+std::vector<uint256> GetTxOutputTweaks(const CPubKey& spend_pubkey, const CPubKey& ecdh_pubkey, std::vector<XOnlyPubKey> output_pub_keys)\n+{\n+    // Because a sender can create multiple outputs for us, we first check the outputs vector for an output with\n+    // output index 0. If we find it, we remove it from the vector and then iterate over the vector again looking for\n+    // an output with index 1, and so on until one of the following happens:\n+    //\n+    //     1. We have determined all outputs belong to us (the vector is empty)\n+    //     2. We have passed over the vector and found no outputs belonging to us\n+    //\n+\n+    bool removed;\n+    uint32_t output_index{0};\n+    std::vector<uint256> tweaks;\n+    do {\n+        // We haven't removed anything yet on this pass and if we don't remove anything, we didn't find\n+        // any silent payment outputs and should stop checking\n+        removed = false;\n+        uint256 tweak = ComputeTweak(ecdh_pubkey, output_index);\n+        CPubKey computed_sp_pubkey = spend_pubkey.TweakAdd(tweak.data());\n+        const XOnlyPubKey& sp_pubkey = XOnlyPubKey{computed_sp_pubkey};\n+        //const CKey& silent_payment_priv_key = tweakResult.first;\n+        output_pub_keys.erase(std::remove_if(output_pub_keys.begin(), output_pub_keys.end(), [&](auto output_pubkey) {\n+            if (sp_pubkey == output_pubkey) {\n+                // Since we found an output, we need to increment the output index and check the vector again\n+                tweaks.emplace_back(tweak);\n+                removed = true;\n+                output_index++;\n+                // Return true so that this output pubkey is removed the from vector and not checked again\n+                return true;\n+            }\n+            return false;\n+        }), output_pub_keys.end());\n+    } while (!output_pub_keys.empty() && removed);\n+    return tweaks;\n+}\n+\n+std::optional<std::pair<uint256, CPubKey>> GetSilentPaymentsTweakDataFromTxInputs(const std::vector<CTxIn>& vin, const std::map<COutPoint, Coin>& coins)\n+{\n+\n+    // Extract the keys from the inputs\n+    // or skip if no valid inputs\n+    std::vector<CPubKey> input_pubkeys;\n+    std::vector<COutPoint> input_outpoints;\n+    for (const CTxIn& txin : vin) {\n+        const Coin& coin = coins.at(txin.prevout);\n+        Assert(!coin.IsSpent());\n+        input_outpoints.emplace_back(txin.prevout);\n+\n+        std::vector<std::vector<unsigned char>> solutions;\n+        TxoutType type = Solver(coin.out.scriptPubKey, solutions);\n+        if (type == TxoutType::WITNESS_V1_TAPROOT) {\n+            // Check for H point in script path spend\n+            if (txin.scriptWitness.stack.size() > 1) {\n+                // Check for annex\n+                bool has_annex = txin.scriptWitness.stack.back()[0] == ANNEX_TAG;\n+                size_t post_annex_size = txin.scriptWitness.stack.size() - (has_annex ? 1 : 0);\n+                if (post_annex_size > 1) {\n+                    // Actually a script path spend\n+                    const std::vector<unsigned char>& control = txin.scriptWitness.stack.back();",
      "path": "src/wallet/silentpayments.cpp",
      "position": null,
      "original_position": 95,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "644ff77be819a2dea15be0daad10fca8524a18f4",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In 644ff77be819a2dea15be0daad10fca8524a18f4 \"Implement BIP352: Silent Payments\"\r\n\r\nSince we aren't modifying `txin.scriptWitness.stack` after checking for the annex, this may not actually be the control block. We need to remove the annex if it was there.\r\n\r\n```suggestion\r\n                    const std::vector<unsigned char>& control = txin.scriptWitness.stack.at(post_annex_size - 1);\r\n```",
      "created_at": "2023-09-11T19:04:21Z",
      "updated_at": "2023-09-11T19:37:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1321964059",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321964059"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321966435",
      "pull_request_review_id": 1620593539,
      "id": 1321966435,
      "node_id": "PRRC_kwDOABII585Oy5tj",
      "diff_hunk": "@@ -0,0 +1,20 @@\n+#ifndef BITCOIN_WALLET_SILENTPAYMENTS_H\n+#define BITCOIN_WALLET_SILENTPAYMENTS_H\n+\n+#include <addresstype.h>\n+#include <coins.h>\n+#include <key_io.h>\n+#include <undo.h>\n+\n+namespace wallet {\n+CPubKey ComputeECDHSharedSecret(const CKey& scan_key, const CPubKey& sender_public_key, const uint256& outpoints_hash);\n+uint256 ComputeTweak(const CPubKey& ecdh_pubkey, const uint32_t output_index);\n+std::vector<uint256> GetTxOutputTweaks(const CPubKey& spend_pubkey, const CPubKey& ecdh_pubkey, std::vector<XOnlyPubKey> output_pub_keys);\n+std::optional<std::pair<uint256, CPubKey>> GetSilentPaymentsTweakDataFromTxInputs(const std::vector<CTxIn>& vin, const std::map<COutPoint, Coin>& coins);\n+\n+CPubKey CreateOutput(const CKey& ecdh_scalar, const CPubKey& scan_pubkey, const CPubKey& spend_pubkey, const uint32_t output_index);\n+uint256 HashOutpoints(const std::vector<COutPoint>& tx_outpoints);\n+std::map<size_t, WitnessV1Taproot> GenerateSilentPaymentTaprootDestinations(const CKey& ecdh_scalar, const std::map<size_t, V0SilentPaymentDestination>& sp_dests);\n+CKey PrepareScalarECDHInput(const std::vector<std::pair<CKey, bool>>& sender_secret_keys, const std::vector<COutPoint>& tx_outpoints);",
      "path": "src/wallet/silentpayments.h",
      "position": null,
      "original_position": 18,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "644ff77be819a2dea15be0daad10fca8524a18f4",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In 644ff77be819a2dea15be0daad10fca8524a18f4 \"Implement BIP352: Silent Payments\"\r\n\r\nIt would be nice to have some documentation for these functions.",
      "created_at": "2023-09-11T19:07:12Z",
      "updated_at": "2023-09-11T19:37:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1321966435",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321966435"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": 10,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 22,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321983071",
      "pull_request_review_id": 1620593539,
      "id": 1321983071,
      "node_id": "PRRC_kwDOABII585Oy9xf",
      "diff_hunk": "@@ -0,0 +1,210 @@\n+#include <wallet/silentpayments.h>\n+#include <addresstype.h>\n+#include <arith_uint256.h>\n+#include <coins.h>\n+#include <crypto/common.h>\n+#include <crypto/hmac_sha512.h>\n+#include <key_io.h>\n+#include <undo.h>\n+#include <logging.h>\n+#include <pubkey.h>\n+#include <policy/policy.h>\n+#include <script/solver.h>\n+#include <util/check.h>\n+#include <wallet/wallet.h>",
      "path": "src/wallet/silentpayments.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "644ff77be819a2dea15be0daad10fca8524a18f4",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In 644ff77be819a2dea15be0daad10fca8524a18f4 \"Implement BIP352: Silent Payments\"\r\n\r\n`wallet/wallet.h` does not need to be included.",
      "created_at": "2023-09-11T19:26:11Z",
      "updated_at": "2023-09-11T19:37:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1321983071",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321983071"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321986126",
      "pull_request_review_id": 1620593539,
      "id": 1321986126,
      "node_id": "PRRC_kwDOABII585Oy-hO",
      "diff_hunk": "@@ -0,0 +1,161 @@\n+#include <wallet/silentpayments.h>\n+#include <test/data/bip352_send_and_receive_vectors.json.h>\n+\n+#include <test/util/setup_common.h>\n+#include <hash.h>\n+\n+#include <boost/test/unit_test.hpp>\n+#include <test/util/json.h>\n+#include <vector>\n+#include <util/bip32.h>\n+#include <wallet/wallet.h>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(silentpayment_tests, BasicTestingSetup)\n+\n+CKey ParseHexToCKey(std::string hex) {\n+    CKey output;\n+    auto hex_data = ParseHex(hex);\n+    output.Set(hex_data.begin(), hex_data.end(), true);\n+    return output;\n+};\n+\n+CKey GetKeyFromBIP32Path(std::vector<std::byte> seed, std::vector<uint32_t> path)\n+{\n+    CExtKey key_parent, key_child;\n+    key_parent.SetSeed(seed);\n+    for (auto index : path) {\n+        BOOST_CHECK(key_parent.Derive(key_child, index));\n+        std::swap(key_parent, key_child);\n+    }\n+    return key_parent.key;\n+}\n+\n+BOOST_AUTO_TEST_CASE(bip352_send_and_receive_test_vectors)\n+{\n+    UniValue tests;\n+    tests.read(json_tests::bip352_send_and_receive_vectors);\n+\n+    for (const auto& vec : tests.getValues()) {\n+        // run sending tests\n+        BOOST_TEST_MESSAGE(vec[\"comment\"].get_str());\n+        for (const auto& sender : vec[\"sending\"].getValues()) {\n+            const auto& given = sender[\"given\"];\n+            const auto& expected = sender[\"expected\"];\n+\n+            std::vector<COutPoint> outpoints;\n+            for (const auto& outpoint : sender[\"given\"][\"outpoints\"].getValues()) {",
      "path": "src/wallet/test/silentpayment_tests.cpp",
      "position": null,
      "original_position": 47,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "78d1426fabd7b5b6cdd28de508a1692fce291174",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In 78d1426fabd7b5b6cdd28de508a1692fce291174 \"Add BIP352 test vectors as unit tests\"\r\n\r\nnit: `s/sender[\"given\"]/given`\r\n\r\n```suggestion\r\n            for (const auto& outpoint : given[\"outpoints\"].getValues()) {\r\n```",
      "created_at": "2023-09-11T19:29:45Z",
      "updated_at": "2023-09-11T19:37:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1321986126",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321986126"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321988533",
      "pull_request_review_id": 1620593539,
      "id": 1321988533,
      "node_id": "PRRC_kwDOABII585Oy_G1",
      "diff_hunk": "@@ -0,0 +1,161 @@\n+#include <wallet/silentpayments.h>\n+#include <test/data/bip352_send_and_receive_vectors.json.h>\n+\n+#include <test/util/setup_common.h>\n+#include <hash.h>\n+\n+#include <boost/test/unit_test.hpp>\n+#include <test/util/json.h>\n+#include <vector>\n+#include <util/bip32.h>\n+#include <wallet/wallet.h>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(silentpayment_tests, BasicTestingSetup)\n+\n+CKey ParseHexToCKey(std::string hex) {\n+    CKey output;\n+    auto hex_data = ParseHex(hex);\n+    output.Set(hex_data.begin(), hex_data.end(), true);\n+    return output;\n+};\n+\n+CKey GetKeyFromBIP32Path(std::vector<std::byte> seed, std::vector<uint32_t> path)\n+{\n+    CExtKey key_parent, key_child;\n+    key_parent.SetSeed(seed);\n+    for (auto index : path) {\n+        BOOST_CHECK(key_parent.Derive(key_child, index));\n+        std::swap(key_parent, key_child);\n+    }\n+    return key_parent.key;\n+}\n+\n+BOOST_AUTO_TEST_CASE(bip352_send_and_receive_test_vectors)\n+{\n+    UniValue tests;\n+    tests.read(json_tests::bip352_send_and_receive_vectors);\n+\n+    for (const auto& vec : tests.getValues()) {\n+        // run sending tests\n+        BOOST_TEST_MESSAGE(vec[\"comment\"].get_str());\n+        for (const auto& sender : vec[\"sending\"].getValues()) {\n+            const auto& given = sender[\"given\"];\n+            const auto& expected = sender[\"expected\"];\n+\n+            std::vector<COutPoint> outpoints;\n+            for (const auto& outpoint : sender[\"given\"][\"outpoints\"].getValues()) {\n+                outpoints.emplace_back(uint256S(outpoint[0].get_str()), outpoint[1].getInt<uint32_t>());\n+            }\n+\n+            std::vector<std::pair<CKey, bool>> sender_secret_keys;\n+            for (const auto& key : given[\"input_priv_keys\"].getValues()) {\n+                sender_secret_keys.emplace_back(ParseHexToCKey(key[0].get_str()), key[1].get_bool());\n+            }\n+            std::vector<CRecipient> silent_payment_addresses;\n+            for (const auto& recipient : given[\"recipients\"].getValues()) {\n+                std::string silent_payment_address = recipient[0].get_str();\n+                CAmount amount = recipient[1].get_real() * COIN;\n+                const auto& sp = DecodeDestination(silent_payment_address);\n+                silent_payment_addresses.push_back(CRecipient{sp, amount, false});\n+            }\n+\n+            // silent payments logic\n+            CKey scalar_ecdh_input = PrepareScalarECDHInput(sender_secret_keys, outpoints);\n+\n+            std::map<size_t, V0SilentPaymentDestination> sp_dests;\n+            for (size_t i = 0; i < silent_payment_addresses.size(); ++i) {\n+                if (const auto* sp = std::get_if<V0SilentPaymentDestination>(&silent_payment_addresses.at(i).dest)) {\n+                    sp_dests[i] = *sp;\n+                }\n+            }\n+            std::map<size_t, WitnessV1Taproot> sp_tr_dests = GenerateSilentPaymentTaprootDestinations(scalar_ecdh_input, sp_dests);\n+\n+            for (const auto& [out_idx, tr_dest] : sp_tr_dests) {\n+                assert(out_idx < silent_payment_addresses.size());\n+                silent_payment_addresses[out_idx].dest = tr_dest;\n+            }\n+\n+            std::vector<CRecipient> expected_spks;\n+            for (const auto& recipient : expected[\"outputs\"].getValues()) {\n+                std::string pubkey_hex = recipient[0].get_str();\n+                CAmount amount = recipient[1].get_real() * COIN;\n+                auto tap = WitnessV1Taproot(XOnlyPubKey(ParseHex(pubkey_hex)));\n+                expected_spks.push_back(CRecipient{tap, amount, false});\n+            }\n+\n+            BOOST_CHECK(silent_payment_addresses.size() == expected_spks.size());\n+            for (const auto& spk : silent_payment_addresses) {\n+                BOOST_CHECK(std::find(expected_spks.begin(), expected_spks.end(), spk) != expected_spks.end());\n+            }\n+        }\n+\n+        // Test receiving\n+        for (const auto& recipient : vec[\"receiving\"].getValues()) {\n+            // TODO: implement labels for Bitcoin Core, until then skip the receiving with labels tests\n+            if (recipient[\"supports_labels\"].get_bool()) {\n+                BOOST_TEST_MESSAGE(\"Labels not implemented; skipping..\");\n+                continue;\n+            }\n+\n+            const auto& given = recipient[\"given\"];\n+            const auto& expected = recipient[\"expected\"];\n+\n+            std::vector<COutPoint> outpoints;\n+            for (const auto& outpoint : recipient[\"given\"][\"outpoints\"].getValues()) {",
      "path": "src/wallet/test/silentpayment_tests.cpp",
      "position": null,
      "original_position": 105,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "78d1426fabd7b5b6cdd28de508a1692fce291174",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In 78d1426fabd7b5b6cdd28de508a1692fce291174 \"Add BIP352 test vectors as unit tests\"\r\n\r\nnit: `s/recipient[\"given\"]/given`\r\n\r\n```suggestion\r\n            for (const auto& outpoint : given[\"outpoints\"].getValues()) {\r\n````",
      "created_at": "2023-09-11T19:32:24Z",
      "updated_at": "2023-09-11T19:37:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1321988533",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321988533"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 105,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321990230",
      "pull_request_review_id": 1620593539,
      "id": 1321990230,
      "node_id": "PRRC_kwDOABII585Oy_hW",
      "diff_hunk": "@@ -0,0 +1,161 @@\n+#include <wallet/silentpayments.h>\n+#include <test/data/bip352_send_and_receive_vectors.json.h>\n+\n+#include <test/util/setup_common.h>\n+#include <hash.h>\n+\n+#include <boost/test/unit_test.hpp>\n+#include <test/util/json.h>\n+#include <vector>\n+#include <util/bip32.h>\n+#include <wallet/wallet.h>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(silentpayment_tests, BasicTestingSetup)\n+\n+CKey ParseHexToCKey(std::string hex) {\n+    CKey output;\n+    auto hex_data = ParseHex(hex);\n+    output.Set(hex_data.begin(), hex_data.end(), true);\n+    return output;\n+};\n+\n+CKey GetKeyFromBIP32Path(std::vector<std::byte> seed, std::vector<uint32_t> path)\n+{\n+    CExtKey key_parent, key_child;\n+    key_parent.SetSeed(seed);\n+    for (auto index : path) {\n+        BOOST_CHECK(key_parent.Derive(key_child, index));\n+        std::swap(key_parent, key_child);\n+    }\n+    return key_parent.key;\n+}\n+\n+BOOST_AUTO_TEST_CASE(bip352_send_and_receive_test_vectors)\n+{\n+    UniValue tests;\n+    tests.read(json_tests::bip352_send_and_receive_vectors);\n+\n+    for (const auto& vec : tests.getValues()) {\n+        // run sending tests\n+        BOOST_TEST_MESSAGE(vec[\"comment\"].get_str());\n+        for (const auto& sender : vec[\"sending\"].getValues()) {\n+            const auto& given = sender[\"given\"];\n+            const auto& expected = sender[\"expected\"];\n+\n+            std::vector<COutPoint> outpoints;\n+            for (const auto& outpoint : sender[\"given\"][\"outpoints\"].getValues()) {\n+                outpoints.emplace_back(uint256S(outpoint[0].get_str()), outpoint[1].getInt<uint32_t>());\n+            }\n+\n+            std::vector<std::pair<CKey, bool>> sender_secret_keys;\n+            for (const auto& key : given[\"input_priv_keys\"].getValues()) {\n+                sender_secret_keys.emplace_back(ParseHexToCKey(key[0].get_str()), key[1].get_bool());\n+            }\n+            std::vector<CRecipient> silent_payment_addresses;\n+            for (const auto& recipient : given[\"recipients\"].getValues()) {\n+                std::string silent_payment_address = recipient[0].get_str();\n+                CAmount amount = recipient[1].get_real() * COIN;\n+                const auto& sp = DecodeDestination(silent_payment_address);\n+                silent_payment_addresses.push_back(CRecipient{sp, amount, false});\n+            }\n+\n+            // silent payments logic\n+            CKey scalar_ecdh_input = PrepareScalarECDHInput(sender_secret_keys, outpoints);\n+\n+            std::map<size_t, V0SilentPaymentDestination> sp_dests;\n+            for (size_t i = 0; i < silent_payment_addresses.size(); ++i) {\n+                if (const auto* sp = std::get_if<V0SilentPaymentDestination>(&silent_payment_addresses.at(i).dest)) {\n+                    sp_dests[i] = *sp;\n+                }\n+            }\n+            std::map<size_t, WitnessV1Taproot> sp_tr_dests = GenerateSilentPaymentTaprootDestinations(scalar_ecdh_input, sp_dests);\n+\n+            for (const auto& [out_idx, tr_dest] : sp_tr_dests) {\n+                assert(out_idx < silent_payment_addresses.size());\n+                silent_payment_addresses[out_idx].dest = tr_dest;\n+            }\n+\n+            std::vector<CRecipient> expected_spks;\n+            for (const auto& recipient : expected[\"outputs\"].getValues()) {\n+                std::string pubkey_hex = recipient[0].get_str();\n+                CAmount amount = recipient[1].get_real() * COIN;\n+                auto tap = WitnessV1Taproot(XOnlyPubKey(ParseHex(pubkey_hex)));\n+                expected_spks.push_back(CRecipient{tap, amount, false});\n+            }\n+\n+            BOOST_CHECK(silent_payment_addresses.size() == expected_spks.size());\n+            for (const auto& spk : silent_payment_addresses) {\n+                BOOST_CHECK(std::find(expected_spks.begin(), expected_spks.end(), spk) != expected_spks.end());\n+            }\n+        }\n+\n+        // Test receiving\n+        for (const auto& recipient : vec[\"receiving\"].getValues()) {\n+            // TODO: implement labels for Bitcoin Core, until then skip the receiving with labels tests\n+            if (recipient[\"supports_labels\"].get_bool()) {\n+                BOOST_TEST_MESSAGE(\"Labels not implemented; skipping..\");\n+                continue;\n+            }\n+\n+            const auto& given = recipient[\"given\"];\n+            const auto& expected = recipient[\"expected\"];\n+\n+            std::vector<COutPoint> outpoints;\n+            for (const auto& outpoint : recipient[\"given\"][\"outpoints\"].getValues()) {\n+                outpoints.emplace_back(uint256S(outpoint[0].get_str()), outpoint[1].getInt<uint32_t>());\n+            }\n+\n+            std::vector<CPubKey> input_pub_keys;\n+            for (const auto& pubkey : given[\"input_pub_keys\"].getValues()) {\n+                // All pubkeys must be in compressed format\n+                auto pubkey_bytes = ParseHex(pubkey.get_str());\n+                if (pubkey_bytes.size() == 32) {\n+                    // XOnlyPubKeys are always even\n+                    pubkey_bytes.insert(pubkey_bytes.begin(), 2);\n+                }\n+                input_pub_keys.emplace_back(pubkey_bytes);\n+            }\n+            std::vector<XOnlyPubKey> output_pub_keys;\n+            for (const auto& pubkey : given[\"outputs\"].getValues()) {\n+                output_pub_keys.emplace_back(ParseHex(pubkey.get_str()));\n+            }\n+\n+            std::string hex_str = given[\"bip32_seed\"].get_str();\n+            std::vector<std::byte> seed{ParseHex<std::byte>(hex_str)};\n+            std::vector<uint32_t> scan_keypath;\n+            BOOST_CHECK(ParseHDKeypath(\"m/352'/0'/0'/1'/0\", scan_keypath));\n+            std::vector<uint32_t> spend_keypath;\n+            BOOST_CHECK(ParseHDKeypath(\"m/352'/0'/0'/0'/0\", spend_keypath));\n+            CKey scan_priv_key = GetKeyFromBIP32Path(seed, scan_keypath);\n+            CKey spend_priv_key = GetKeyFromBIP32Path(seed, spend_keypath);\n+            CPubKey spend_pubkey = spend_priv_key.GetPubKey();\n+\n+            // Scanning\n+            CPubKey sum_input_pub_keys = CPubKey::Combine(input_pub_keys);\n+\n+            const auto expected_addresses = expected[\"addresses\"].getValues();\n+            // We know there is only one address, but if we support labels, this could be multiple addresses\n+            CPubKey ecdh_pubkey = ComputeECDHSharedSecret(scan_priv_key, sum_input_pub_keys, HashOutpoints(outpoints));\n+            std::vector<uint256> found_tweaks = GetTxOutputTweaks(spend_priv_key.GetPubKey(), ecdh_pubkey, output_pub_keys);",
      "path": "src/wallet/test/silentpayment_tests.cpp",
      "position": null,
      "original_position": 140,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "78d1426fabd7b5b6cdd28de508a1692fce291174",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In 78d1426fabd7b5b6cdd28de508a1692fce291174 \"Add BIP352 test vectors as unit tests\"\r\n\r\nnit: `s/spend_priv_key.GetPubKey()/spend_pubkey`\r\n\r\n```suggestion\r\n            std::vector<uint256> found_tweaks = GetTxOutputTweaks(spend_pubkey, ecdh_pubkey, output_pub_keys);\r\n```",
      "created_at": "2023-09-11T19:34:27Z",
      "updated_at": "2023-09-11T19:37:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1321990230",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321990230"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 140,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321992598",
      "pull_request_review_id": 1620593539,
      "id": 1321992598,
      "node_id": "PRRC_kwDOABII585OzAGW",
      "diff_hunk": "@@ -291,6 +291,11 @@ struct CRecipient\n     CTxDestination dest;\n     CAmount nAmount;\n     bool fSubtractFeeFromAmount;\n+\n+    friend bool operator==(const CRecipient& a, const CRecipient& b)\n+    {\n+        return a.dest == b.dest && a.nAmount == b.nAmount;",
      "path": "src/wallet/wallet.h",
      "position": 7,
      "original_position": 7,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "78d1426fabd7b5b6cdd28de508a1692fce291174",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In 78d1426fabd7b5b6cdd28de508a1692fce291174 \"Add BIP352 test vectors as unit tests\"\r\n\r\nShouldn't this also check sffo too?\r\n\r\n```suggestion\r\n        return a.dest == b.dest && a.nAmount == b.nAmount && a.fSubtractFeeFromAmount == b.SubtractFeeFromAmount;\r\n```",
      "created_at": "2023-09-11T19:37:25Z",
      "updated_at": "2023-09-11T19:37:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1321992598",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321992598"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 297,
      "original_line": 297,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322002928",
      "pull_request_review_id": 1620720216,
      "id": 1322002928,
      "node_id": "PRRC_kwDOABII585OzCnw",
      "diff_hunk": "@@ -0,0 +1,161 @@\n+#include <wallet/silentpayments.h>\n+#include <test/data/bip352_send_and_receive_vectors.json.h>\n+\n+#include <test/util/setup_common.h>\n+#include <hash.h>\n+\n+#include <boost/test/unit_test.hpp>\n+#include <test/util/json.h>\n+#include <vector>\n+#include <util/bip32.h>\n+#include <wallet/wallet.h>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(silentpayment_tests, BasicTestingSetup)\n+\n+CKey ParseHexToCKey(std::string hex) {\n+    CKey output;\n+    auto hex_data = ParseHex(hex);\n+    output.Set(hex_data.begin(), hex_data.end(), true);\n+    return output;\n+};\n+\n+CKey GetKeyFromBIP32Path(std::vector<std::byte> seed, std::vector<uint32_t> path)\n+{\n+    CExtKey key_parent, key_child;\n+    key_parent.SetSeed(seed);\n+    for (auto index : path) {\n+        BOOST_CHECK(key_parent.Derive(key_child, index));\n+        std::swap(key_parent, key_child);\n+    }\n+    return key_parent.key;",
      "path": "src/wallet/test/silentpayment_tests.cpp",
      "position": null,
      "original_position": 31,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "78d1426fabd7b5b6cdd28de508a1692fce291174",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In 78d1426fabd7b5b6cdd28de508a1692fce291174 \"Add BIP352 test vectors as unit tests\"\r\n\r\nNo need to have two `CExtKey`s and swapping them, you can just derive a key into itself.\r\n\r\n```suggestion\r\n    CExtKey key;\r\n    key.SetSeed(seed);\r\n    for (auto index : path) {\r\n        BOOST_CHECK(key.Derive(key, index));\r\n    }\r\n    return key.key;\r\n```",
      "created_at": "2023-09-11T19:47:07Z",
      "updated_at": "2023-09-11T19:47:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1322002928",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322002928"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": 25,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 31,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322085628",
      "pull_request_review_id": 1620850719,
      "id": 1322085628,
      "node_id": "PRRC_kwDOABII585OzWz8",
      "diff_hunk": "@@ -47,7 +47,7 @@ MessageVerificationResult MessageVerify(\n         return MessageVerificationResult::ERR_PUBKEY_NOT_RECOVERED;\n     }\n \n-    if (!(CTxDestination(PKHash(pubkey)) == destination)) {\n+    if (!(PKHash(pubkey) == *std::get_if<PKHash>(&destination))) {",
      "path": "src/util/message.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "c14ad74f8eeaa744d831a77654164c856a86fdee",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "in commit c14ad74f8eeaa744d831a77654164c856a86fdee: this change in `MessageVerify` seems unrelated to the `WitnessUnknown` changes (and AFAICT, even after the later changes in `CTxDestination` it's not needed, but just another way to express the same logic).",
      "created_at": "2023-09-11T21:20:09Z",
      "updated_at": "2023-09-11T22:01:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1322085628",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322085628"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": 50,
      "start_side": "LEFT",
      "line": null,
      "original_line": 50,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322087391",
      "pull_request_review_id": 1620850719,
      "id": 1322087391,
      "node_id": "PRRC_kwDOABII585OzXPf",
      "diff_hunk": "@@ -109,9 +117,14 @@ using CTxDestination = std::variant<CNoDestination, PKHash, ScriptHash, WitnessV\n bool IsValidDestination(const CTxDestination& dest);\n \n /**\n- * Parse a standard scriptPubKey for the destination address. Assigns result to\n- * the addressRet parameter and returns true if successful. Currently only works for P2PK,\n- * P2PKH, P2SH, P2WPKH, and P2WSH scripts.\n+ * Parse a scriptPubKey for the destination.\n+ *\n+ * For standard scripts that have addresses (and P2PK as an exception), a corresponding CTxDestination\n+ * is assigned to addressRet.\n+ * For all other scripts. addressRet is assigned as a CNoDestination containing the scriptPubKey.",
      "path": "src/addresstype.h",
      "position": null,
      "original_position": 54,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "621b1ca6fbdf66ccf9da84c38fcc3b18de9e95fe",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "in commit 621b1ca6fbdf66ccf9da84c38fcc3b18de9e95fe: punctuation nit:\r\n```suggestion\r\n * For all other scripts, addressRet is assigned as a CNoDestination containing the scriptPubKey.\r\n```",
      "created_at": "2023-09-11T21:22:36Z",
      "updated_at": "2023-09-11T22:01:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1322087391",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322087391"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 160,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322105942",
      "pull_request_review_id": 1620850719,
      "id": 1322105942,
      "node_id": "PRRC_kwDOABII585OzbxW",
      "diff_hunk": "@@ -172,6 +174,62 @@ bool CKey::Negate()\n     return secp256k1_ec_seckey_negate(secp256k1_context_sign, keydata.data());\n }\n \n+void CKey::TweakAdd(const unsigned char *tweak32)\n+{\n+    assert(fValid);\n+    // Modify the current CKey's data directly.\n+    int ret = secp256k1_ec_seckey_tweak_add(secp256k1_context_sign, keydata.data(), tweak32);\n+    assert(ret);\n+}\n+\n+void CKey::TweakMultiply(const unsigned char *tweak32)\n+{\n+    assert(fValid);\n+\n+    // Modify the current CKey's data directly.\n+    int ret = secp256k1_ec_seckey_tweak_mul(secp256k1_context_sign, keydata.data(), tweak32);\n+    assert(ret);\n+}\n+\n+// WARNING: DO NOT USE THIS FUNCTION OUTSIDE OF SILENT PAYMENTS\n+// This function returns the un-hashed ECDH result and is specific to silent payments.\n+// If ECDH is required for a different use-case, use a function which hashes the result (as is standard practice).\n+CPubKey CKey::UnhashedECDH(const CPubKey& pubkey) const\n+{\n+    unsigned char shared_secret[33];\n+\n+    secp256k1_pubkey ecdh_pubkey;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 44,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "7b9f48450738c42d934280881d9ff2dfb5419725",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "in commit 7b9f48450738c42d934280881d9ff2dfb5419725: maybe assert here that both the private key and the passed `pubkey` are valid?\r\n```suggestion\r\n    assert(fValid);\r\n    assert(pubkey.IsValid());\r\n    secp256k1_pubkey ecdh_pubkey;\r\n```\r\n(using `IsFullyValid` for the pubkey would be a more thorough check, but that's more expensive and could hurt scanning performance I guess)",
      "created_at": "2023-09-11T21:48:08Z",
      "updated_at": "2023-09-11T22:01:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1322105942",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322105942"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": 200,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 200,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322109527",
      "pull_request_review_id": 1620850719,
      "id": 1322109527,
      "node_id": "PRRC_kwDOABII585OzcpX",
      "diff_hunk": "@@ -287,10 +294,19 @@ class XOnlyPubKey\n     bool operator!=(const XOnlyPubKey& other) const { return m_keydata != other.m_keydata; }\n     bool operator<(const XOnlyPubKey& other) const { return m_keydata < other.m_keydata; }\n \n+    CPubKey ConvertToCompressedPubKey(bool even = true) const",
      "path": "src/pubkey.h",
      "position": null,
      "original_position": 25,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "7b9f48450738c42d934280881d9ff2dfb5419725",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "is this method used anywhere?",
      "created_at": "2023-09-11T21:53:32Z",
      "updated_at": "2023-09-11T22:01:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1322109527",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322109527"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 306,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322111006",
      "pull_request_review_id": 1620850719,
      "id": 1322111006,
      "node_id": "PRRC_kwDOABII585OzdAe",
      "diff_hunk": "@@ -28,6 +28,17 @@ enum class Encoding {\n     BECH32M, //!< Bech32m encoding as defined in BIP350\n };\n \n+/** Character limits for bech32(m) encoded strings. Character limits are how we provide error location guarantees.\n+ *  These values should never exceed 2^31 - 1 (max value for a 32-bit int), since there are places where we may need to\n+ *  convert the CharLimit::VALUE to an int. In practice, this should never happen since this CharLimit applies to an address encoding\n+ *  and we would never encode an address with such a massive value */\n+enum CharLimit : size_t {\n+    NO_LIMIT = 0,           //!< Allows for Bech32(m) encoded strings of arbitruary size. No guarantees on the number of errors detected",
      "path": "src/bech32.h",
      "position": null,
      "original_position": 9,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "6c19662156f22e5d5bc06c7caadd45ecb57d8838",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "typo nit:\r\n```suggestion\r\n    NO_LIMIT = 0,           //!< Allows for Bech32(m) encoded strings of arbitrary size. No guarantees on the number of errors detected\r\n```",
      "created_at": "2023-09-11T21:55:38Z",
      "updated_at": "2023-09-11T22:01:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1322111006",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322111006"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 36,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322478110",
      "pull_request_review_id": 1621370670,
      "id": 1322478110,
      "node_id": "PRRC_kwDOABII585O02oe",
      "diff_hunk": "@@ -127,12 +146,29 @@ CTxDestination DecodeDestination(const std::string& str, const CChainParams& par\n     }\n \n     data.clear();\n-    const auto dec = bech32::Decode(str);\n+    const auto dec = bech32::Decode(str, is_silent_payment ? bech32::CharLimit::SILENT_PAYMENTS : bech32::CharLimit::SEGWIT);\n     if (dec.encoding == bech32::Encoding::BECH32 || dec.encoding == bech32::Encoding::BECH32M) {\n         if (dec.data.empty()) {\n             error_str = \"Empty Bech32 data section\";\n             return CNoDestination();\n         }\n+        if (is_silent_payment) {\n+            if (!ConvertBits<5, 8, false>([&](unsigned char c) { data.push_back(c); }, dec.data.begin() + 1, dec.data.end())) {\n+                return CNoDestination();\n+            }\n+            if (data.size() < SILENT_PAYMENT_V0_DATA_SIZE) {\n+                error_str = strprintf(\"Silent payment data payload is too small (expected at least %d, got %d).\", SILENT_PAYMENT_V0_DATA_SIZE, data.size());\n+                return CNoDestination();\n+            }\n+            auto version = dec.data[0];  // retrieve the version\n+            if (version == 0 && data.size() != SILENT_PAYMENT_V0_DATA_SIZE) {\n+                error_str = strprintf(\"Silent payment version is v0 but data is not the correct size (expected %d, got %d).\", SILENT_PAYMENT_V0_DATA_SIZE, data.size());\n+                return CNoDestination();\n+            }",
      "path": "src/key_io.cpp",
      "position": 71,
      "original_position": 65,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "3235eb8c63ea055c68fdf59bb20afd6f06f294e4",
      "in_reply_to_id": 1321932172,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Since SP addresses are forward-compatible, we don't care: we always read the first 66 bytes as two pubkeys and ignore the rest. However, we do need a check here for v31 or greater, as this indicates a backward incompatible change",
      "created_at": "2023-09-12T06:19:00Z",
      "updated_at": "2023-09-12T06:19:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1322478110",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322478110"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": 171,
      "original_start_line": 164,
      "start_side": "RIGHT",
      "line": 174,
      "original_line": 174,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322486435",
      "pull_request_review_id": 1621387375,
      "id": 1322486435,
      "node_id": "PRRC_kwDOABII585O04qj",
      "diff_hunk": "@@ -291,6 +291,11 @@ struct CRecipient\n     CTxDestination dest;\n     CAmount nAmount;\n     bool fSubtractFeeFromAmount;\n+\n+    friend bool operator==(const CRecipient& a, const CRecipient& b)\n+    {\n+        return a.dest == b.dest && a.nAmount == b.nAmount;",
      "path": "src/wallet/wallet.h",
      "position": 7,
      "original_position": 7,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "78d1426fabd7b5b6cdd28de508a1692fce291174",
      "in_reply_to_id": 1321992598,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe? If we want to know if the actual objects themselves are equal, then yes, but if we wan't a more conceptual \"are these the same transaction output,\" then I'd argue no?",
      "created_at": "2023-09-12T06:27:26Z",
      "updated_at": "2023-09-12T06:27:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1322486435",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322486435"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 297,
      "original_line": 297,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322492851",
      "pull_request_review_id": 1621394667,
      "id": 1322492851,
      "node_id": "PRRC_kwDOABII585O06Oz",
      "diff_hunk": "@@ -47,7 +47,7 @@ MessageVerificationResult MessageVerify(\n         return MessageVerificationResult::ERR_PUBKEY_NOT_RECOVERED;\n     }\n \n-    if (!(CTxDestination(PKHash(pubkey)) == destination)) {\n+    if (!(PKHash(pubkey) == *std::get_if<PKHash>(&destination))) {",
      "path": "src/util/message.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "c14ad74f8eeaa744d831a77654164c856a86fdee",
      "in_reply_to_id": 1322085628,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This is a fix for an `-Wuninitialized` warning, see https://github.com/bitcoin/bitcoin/pull/28246#discussion_r1318874324",
      "created_at": "2023-09-12T06:32:22Z",
      "updated_at": "2023-09-12T06:32:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1322492851",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322492851"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": 50,
      "start_side": "LEFT",
      "line": null,
      "original_line": 50,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322494680",
      "pull_request_review_id": 1621397132,
      "id": 1322494680,
      "node_id": "PRRC_kwDOABII585O06rY",
      "diff_hunk": "@@ -109,9 +117,14 @@ using CTxDestination = std::variant<CNoDestination, PKHash, ScriptHash, WitnessV\n bool IsValidDestination(const CTxDestination& dest);\n \n /**\n- * Parse a standard scriptPubKey for the destination address. Assigns result to\n- * the addressRet parameter and returns true if successful. Currently only works for P2PK,\n- * P2PKH, P2SH, P2WPKH, and P2WSH scripts.\n+ * Parse a scriptPubKey for the destination.\n+ *\n+ * For standard scripts that have addresses (and P2PK as an exception), a corresponding CTxDestination\n+ * is assigned to addressRet.\n+ * For all other scripts. addressRet is assigned as a CNoDestination containing the scriptPubKey.",
      "path": "src/addresstype.h",
      "position": null,
      "original_position": 54,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "621b1ca6fbdf66ccf9da84c38fcc3b18de9e95fe",
      "in_reply_to_id": 1322087391,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "These commits belong to https://github.com/bitcoin/bitcoin/pull/28246 , might be better to leave a review there",
      "created_at": "2023-09-12T06:33:59Z",
      "updated_at": "2023-09-12T06:34:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1322494680",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322494680"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 160,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322509903",
      "pull_request_review_id": 1621418854,
      "id": 1322509903,
      "node_id": "PRRC_kwDOABII585O0-ZP",
      "diff_hunk": "@@ -172,6 +174,62 @@ bool CKey::Negate()\n     return secp256k1_ec_seckey_negate(secp256k1_context_sign, keydata.data());\n }\n \n+void CKey::TweakAdd(const unsigned char *tweak32)\n+{\n+    assert(fValid);\n+    // Modify the current CKey's data directly.\n+    int ret = secp256k1_ec_seckey_tweak_add(secp256k1_context_sign, keydata.data(), tweak32);\n+    assert(ret);\n+}\n+\n+void CKey::TweakMultiply(const unsigned char *tweak32)\n+{\n+    assert(fValid);\n+\n+    // Modify the current CKey's data directly.\n+    int ret = secp256k1_ec_seckey_tweak_mul(secp256k1_context_sign, keydata.data(), tweak32);\n+    assert(ret);\n+}\n+\n+// WARNING: DO NOT USE THIS FUNCTION OUTSIDE OF SILENT PAYMENTS\n+// This function returns the un-hashed ECDH result and is specific to silent payments.\n+// If ECDH is required for a different use-case, use a function which hashes the result (as is standard practice).\n+CPubKey CKey::UnhashedECDH(const CPubKey& pubkey) const\n+{\n+    unsigned char shared_secret[33];\n+\n+    secp256k1_pubkey ecdh_pubkey;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 44,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "7b9f48450738c42d934280881d9ff2dfb5419725",
      "in_reply_to_id": 1322105942,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hm, it seems a bit odd to assert that the passed pubkey is valid? I think it's safe to assume that validation was done upstream by the caller. Also, I agree that we want to avoid doing expensive checks here as this function is called during scanning.\r\n\r\nI'll add the assert for the private key, though, as this seems in keeping with what the other code with private keys is doing.",
      "created_at": "2023-09-12T06:39:43Z",
      "updated_at": "2023-09-12T06:39:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1322509903",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322509903"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": 200,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 200,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322511068",
      "pull_request_review_id": 1621420675,
      "id": 1322511068,
      "node_id": "PRRC_kwDOABII585O0-rc",
      "diff_hunk": "@@ -287,10 +294,19 @@ class XOnlyPubKey\n     bool operator!=(const XOnlyPubKey& other) const { return m_keydata != other.m_keydata; }\n     bool operator<(const XOnlyPubKey& other) const { return m_keydata < other.m_keydata; }\n \n+    CPubKey ConvertToCompressedPubKey(bool even = true) const",
      "path": "src/pubkey.h",
      "position": null,
      "original_position": 25,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "7b9f48450738c42d934280881d9ff2dfb5419725",
      "in_reply_to_id": 1322109527,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good catch! This is dead code from an old version of the PR, will remove it",
      "created_at": "2023-09-12T06:40:03Z",
      "updated_at": "2023-09-12T06:40:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1322511068",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322511068"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 306,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322657369",
      "pull_request_review_id": 1621645655,
      "id": 1322657369,
      "node_id": "PRRC_kwDOABII585O1iZZ",
      "diff_hunk": "@@ -287,10 +294,19 @@ class XOnlyPubKey\n     bool operator!=(const XOnlyPubKey& other) const { return m_keydata != other.m_keydata; }\n     bool operator<(const XOnlyPubKey& other) const { return m_keydata < other.m_keydata; }\n \n+    CPubKey ConvertToCompressedPubKey(bool even = true) const",
      "path": "src/pubkey.h",
      "position": null,
      "original_position": 25,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "7b9f48450738c42d934280881d9ff2dfb5419725",
      "in_reply_to_id": 1322109527,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed",
      "created_at": "2023-09-12T08:36:52Z",
      "updated_at": "2023-09-12T08:36:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1322657369",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322657369"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 306,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322657542",
      "pull_request_review_id": 1621645945,
      "id": 1322657542,
      "node_id": "PRRC_kwDOABII585O1icG",
      "diff_hunk": "@@ -28,6 +28,17 @@ enum class Encoding {\n     BECH32M, //!< Bech32m encoding as defined in BIP350\n };\n \n+/** Character limits for bech32(m) encoded strings. Character limits are how we provide error location guarantees.\n+ *  These values should never exceed 2^31 - 1 (max value for a 32-bit int), since there are places where we may need to\n+ *  convert the CharLimit::VALUE to an int. In practice, this should never happen since this CharLimit applies to an address encoding\n+ *  and we would never encode an address with such a massive value */\n+enum CharLimit : size_t {\n+    NO_LIMIT = 0,           //!< Allows for Bech32(m) encoded strings of arbitruary size. No guarantees on the number of errors detected",
      "path": "src/bech32.h",
      "position": null,
      "original_position": 9,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "6c19662156f22e5d5bc06c7caadd45ecb57d8838",
      "in_reply_to_id": 1322111006,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed",
      "created_at": "2023-09-12T08:37:00Z",
      "updated_at": "2023-09-12T08:37:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1322657542",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322657542"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 36,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322678701",
      "pull_request_review_id": 1621677864,
      "id": 1322678701,
      "node_id": "PRRC_kwDOABII585O1nmt",
      "diff_hunk": "@@ -172,6 +174,62 @@ bool CKey::Negate()\n     return secp256k1_ec_seckey_negate(secp256k1_context_sign, keydata.data());\n }\n \n+void CKey::TweakAdd(const unsigned char *tweak32)\n+{\n+    assert(fValid);\n+    // Modify the current CKey's data directly.\n+    int ret = secp256k1_ec_seckey_tweak_add(secp256k1_context_sign, keydata.data(), tweak32);\n+    assert(ret);\n+}\n+\n+void CKey::TweakMultiply(const unsigned char *tweak32)\n+{\n+    assert(fValid);\n+\n+    // Modify the current CKey's data directly.\n+    int ret = secp256k1_ec_seckey_tweak_mul(secp256k1_context_sign, keydata.data(), tweak32);\n+    assert(ret);\n+}\n+\n+// WARNING: DO NOT USE THIS FUNCTION OUTSIDE OF SILENT PAYMENTS\n+// This function returns the un-hashed ECDH result and is specific to silent payments.\n+// If ECDH is required for a different use-case, use a function which hashes the result (as is standard practice).\n+CPubKey CKey::UnhashedECDH(const CPubKey& pubkey) const\n+{\n+    unsigned char shared_secret[33];\n+\n+    secp256k1_pubkey ecdh_pubkey;",
      "path": "src/key.cpp",
      "position": null,
      "original_position": 44,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "7b9f48450738c42d934280881d9ff2dfb5419725",
      "in_reply_to_id": 1322105942,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Added `assert(fValid)` check for CKey and also made the functions consistent with the rest of the CPubKey/CKey functions by returning a bool instead of an `assert` inside a void function",
      "created_at": "2023-09-12T08:49:19Z",
      "updated_at": "2023-09-12T08:49:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1322678701",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322678701"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": 200,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 200,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322681203",
      "pull_request_review_id": 1621681227,
      "id": 1322681203,
      "node_id": "PRRC_kwDOABII585O1oNz",
      "diff_hunk": "@@ -0,0 +1,161 @@\n+#include <wallet/silentpayments.h>\n+#include <test/data/bip352_send_and_receive_vectors.json.h>\n+\n+#include <test/util/setup_common.h>\n+#include <hash.h>\n+\n+#include <boost/test/unit_test.hpp>\n+#include <test/util/json.h>\n+#include <vector>\n+#include <util/bip32.h>\n+#include <wallet/wallet.h>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(silentpayment_tests, BasicTestingSetup)\n+\n+CKey ParseHexToCKey(std::string hex) {\n+    CKey output;\n+    auto hex_data = ParseHex(hex);\n+    output.Set(hex_data.begin(), hex_data.end(), true);\n+    return output;\n+};\n+\n+CKey GetKeyFromBIP32Path(std::vector<std::byte> seed, std::vector<uint32_t> path)\n+{\n+    CExtKey key_parent, key_child;\n+    key_parent.SetSeed(seed);\n+    for (auto index : path) {\n+        BOOST_CHECK(key_parent.Derive(key_child, index));\n+        std::swap(key_parent, key_child);\n+    }\n+    return key_parent.key;",
      "path": "src/wallet/test/silentpayment_tests.cpp",
      "position": null,
      "original_position": 31,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "78d1426fabd7b5b6cdd28de508a1692fce291174",
      "in_reply_to_id": 1322002928,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2023-09-12T08:50:02Z",
      "updated_at": "2023-09-12T08:50:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1322681203",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322681203"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": 25,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 31,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322682361",
      "pull_request_review_id": 1621682782,
      "id": 1322682361,
      "node_id": "PRRC_kwDOABII585O1of5",
      "diff_hunk": "@@ -0,0 +1,161 @@\n+#include <wallet/silentpayments.h>\n+#include <test/data/bip352_send_and_receive_vectors.json.h>\n+\n+#include <test/util/setup_common.h>\n+#include <hash.h>\n+\n+#include <boost/test/unit_test.hpp>\n+#include <test/util/json.h>\n+#include <vector>\n+#include <util/bip32.h>\n+#include <wallet/wallet.h>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(silentpayment_tests, BasicTestingSetup)\n+\n+CKey ParseHexToCKey(std::string hex) {\n+    CKey output;\n+    auto hex_data = ParseHex(hex);\n+    output.Set(hex_data.begin(), hex_data.end(), true);\n+    return output;\n+};\n+\n+CKey GetKeyFromBIP32Path(std::vector<std::byte> seed, std::vector<uint32_t> path)\n+{\n+    CExtKey key_parent, key_child;\n+    key_parent.SetSeed(seed);\n+    for (auto index : path) {\n+        BOOST_CHECK(key_parent.Derive(key_child, index));\n+        std::swap(key_parent, key_child);\n+    }\n+    return key_parent.key;\n+}\n+\n+BOOST_AUTO_TEST_CASE(bip352_send_and_receive_test_vectors)\n+{\n+    UniValue tests;\n+    tests.read(json_tests::bip352_send_and_receive_vectors);\n+\n+    for (const auto& vec : tests.getValues()) {\n+        // run sending tests\n+        BOOST_TEST_MESSAGE(vec[\"comment\"].get_str());\n+        for (const auto& sender : vec[\"sending\"].getValues()) {\n+            const auto& given = sender[\"given\"];\n+            const auto& expected = sender[\"expected\"];\n+\n+            std::vector<COutPoint> outpoints;\n+            for (const auto& outpoint : sender[\"given\"][\"outpoints\"].getValues()) {\n+                outpoints.emplace_back(uint256S(outpoint[0].get_str()), outpoint[1].getInt<uint32_t>());\n+            }\n+\n+            std::vector<std::pair<CKey, bool>> sender_secret_keys;\n+            for (const auto& key : given[\"input_priv_keys\"].getValues()) {\n+                sender_secret_keys.emplace_back(ParseHexToCKey(key[0].get_str()), key[1].get_bool());\n+            }\n+            std::vector<CRecipient> silent_payment_addresses;\n+            for (const auto& recipient : given[\"recipients\"].getValues()) {\n+                std::string silent_payment_address = recipient[0].get_str();\n+                CAmount amount = recipient[1].get_real() * COIN;\n+                const auto& sp = DecodeDestination(silent_payment_address);\n+                silent_payment_addresses.push_back(CRecipient{sp, amount, false});\n+            }\n+\n+            // silent payments logic\n+            CKey scalar_ecdh_input = PrepareScalarECDHInput(sender_secret_keys, outpoints);\n+\n+            std::map<size_t, V0SilentPaymentDestination> sp_dests;\n+            for (size_t i = 0; i < silent_payment_addresses.size(); ++i) {\n+                if (const auto* sp = std::get_if<V0SilentPaymentDestination>(&silent_payment_addresses.at(i).dest)) {\n+                    sp_dests[i] = *sp;\n+                }\n+            }\n+            std::map<size_t, WitnessV1Taproot> sp_tr_dests = GenerateSilentPaymentTaprootDestinations(scalar_ecdh_input, sp_dests);\n+\n+            for (const auto& [out_idx, tr_dest] : sp_tr_dests) {\n+                assert(out_idx < silent_payment_addresses.size());\n+                silent_payment_addresses[out_idx].dest = tr_dest;\n+            }\n+\n+            std::vector<CRecipient> expected_spks;\n+            for (const auto& recipient : expected[\"outputs\"].getValues()) {\n+                std::string pubkey_hex = recipient[0].get_str();\n+                CAmount amount = recipient[1].get_real() * COIN;\n+                auto tap = WitnessV1Taproot(XOnlyPubKey(ParseHex(pubkey_hex)));\n+                expected_spks.push_back(CRecipient{tap, amount, false});\n+            }\n+\n+            BOOST_CHECK(silent_payment_addresses.size() == expected_spks.size());\n+            for (const auto& spk : silent_payment_addresses) {\n+                BOOST_CHECK(std::find(expected_spks.begin(), expected_spks.end(), spk) != expected_spks.end());\n+            }\n+        }\n+\n+        // Test receiving\n+        for (const auto& recipient : vec[\"receiving\"].getValues()) {\n+            // TODO: implement labels for Bitcoin Core, until then skip the receiving with labels tests\n+            if (recipient[\"supports_labels\"].get_bool()) {\n+                BOOST_TEST_MESSAGE(\"Labels not implemented; skipping..\");\n+                continue;\n+            }\n+\n+            const auto& given = recipient[\"given\"];\n+            const auto& expected = recipient[\"expected\"];\n+\n+            std::vector<COutPoint> outpoints;\n+            for (const auto& outpoint : recipient[\"given\"][\"outpoints\"].getValues()) {",
      "path": "src/wallet/test/silentpayment_tests.cpp",
      "position": null,
      "original_position": 105,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "78d1426fabd7b5b6cdd28de508a1692fce291174",
      "in_reply_to_id": 1321988533,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2023-09-12T08:50:24Z",
      "updated_at": "2023-09-12T08:50:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1322682361",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322682361"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 105,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322683508",
      "pull_request_review_id": 1621684261,
      "id": 1322683508,
      "node_id": "PRRC_kwDOABII585O1ox0",
      "diff_hunk": "@@ -0,0 +1,161 @@\n+#include <wallet/silentpayments.h>\n+#include <test/data/bip352_send_and_receive_vectors.json.h>\n+\n+#include <test/util/setup_common.h>\n+#include <hash.h>\n+\n+#include <boost/test/unit_test.hpp>\n+#include <test/util/json.h>\n+#include <vector>\n+#include <util/bip32.h>\n+#include <wallet/wallet.h>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(silentpayment_tests, BasicTestingSetup)\n+\n+CKey ParseHexToCKey(std::string hex) {\n+    CKey output;\n+    auto hex_data = ParseHex(hex);\n+    output.Set(hex_data.begin(), hex_data.end(), true);\n+    return output;\n+};\n+\n+CKey GetKeyFromBIP32Path(std::vector<std::byte> seed, std::vector<uint32_t> path)\n+{\n+    CExtKey key_parent, key_child;\n+    key_parent.SetSeed(seed);\n+    for (auto index : path) {\n+        BOOST_CHECK(key_parent.Derive(key_child, index));\n+        std::swap(key_parent, key_child);\n+    }\n+    return key_parent.key;\n+}\n+\n+BOOST_AUTO_TEST_CASE(bip352_send_and_receive_test_vectors)\n+{\n+    UniValue tests;\n+    tests.read(json_tests::bip352_send_and_receive_vectors);\n+\n+    for (const auto& vec : tests.getValues()) {\n+        // run sending tests\n+        BOOST_TEST_MESSAGE(vec[\"comment\"].get_str());\n+        for (const auto& sender : vec[\"sending\"].getValues()) {\n+            const auto& given = sender[\"given\"];\n+            const auto& expected = sender[\"expected\"];\n+\n+            std::vector<COutPoint> outpoints;\n+            for (const auto& outpoint : sender[\"given\"][\"outpoints\"].getValues()) {",
      "path": "src/wallet/test/silentpayment_tests.cpp",
      "position": null,
      "original_position": 47,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "78d1426fabd7b5b6cdd28de508a1692fce291174",
      "in_reply_to_id": 1321986126,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2023-09-12T08:50:45Z",
      "updated_at": "2023-09-12T08:50:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1322683508",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322683508"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322684719",
      "pull_request_review_id": 1621686020,
      "id": 1322684719,
      "node_id": "PRRC_kwDOABII585O1pEv",
      "diff_hunk": "@@ -0,0 +1,210 @@\n+#include <wallet/silentpayments.h>\n+#include <addresstype.h>\n+#include <arith_uint256.h>\n+#include <coins.h>\n+#include <crypto/common.h>\n+#include <crypto/hmac_sha512.h>\n+#include <key_io.h>\n+#include <undo.h>\n+#include <logging.h>\n+#include <pubkey.h>\n+#include <policy/policy.h>\n+#include <script/solver.h>\n+#include <util/check.h>\n+#include <wallet/wallet.h>",
      "path": "src/wallet/silentpayments.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "644ff77be819a2dea15be0daad10fca8524a18f4",
      "in_reply_to_id": 1321983071,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2023-09-12T08:51:06Z",
      "updated_at": "2023-09-12T08:51:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1322684719",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322684719"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322686496",
      "pull_request_review_id": 1621688279,
      "id": 1322686496,
      "node_id": "PRRC_kwDOABII585O1pgg",
      "diff_hunk": "@@ -0,0 +1,210 @@\n+#include <wallet/silentpayments.h>\n+#include <addresstype.h>\n+#include <arith_uint256.h>\n+#include <coins.h>\n+#include <crypto/common.h>\n+#include <crypto/hmac_sha512.h>\n+#include <key_io.h>\n+#include <undo.h>\n+#include <logging.h>\n+#include <pubkey.h>\n+#include <policy/policy.h>\n+#include <script/solver.h>\n+#include <util/check.h>\n+#include <wallet/wallet.h>\n+\n+namespace wallet {\n+\n+CPubKey ComputeECDHSharedSecret(const CKey& scan_key, const CPubKey& sender_public_key, const uint256& outpoints_hash)\n+{\n+    auto tweaked_scan_seckey{scan_key};\n+    tweaked_scan_seckey.TweakMultiply(outpoints_hash.begin());\n+    CPubKey result = tweaked_scan_seckey.UnhashedECDH(sender_public_key);\n+    assert(result.IsValid());\n+    return result;\n+}\n+\n+uint256 ComputeTweak(const CPubKey& ecdh_pubkey, const uint32_t output_index)\n+{\n+    HashWriter h;\n+    h.write(Span{ecdh_pubkey});\n+    unsigned char num[4];\n+    WriteBE32(num, output_index);\n+    h << num;\n+    return h.GetSHA256();\n+}\n+\n+std::vector<uint256> GetTxOutputTweaks(const CPubKey& spend_pubkey, const CPubKey& ecdh_pubkey, std::vector<XOnlyPubKey> output_pub_keys)\n+{\n+    // Because a sender can create multiple outputs for us, we first check the outputs vector for an output with\n+    // output index 0. If we find it, we remove it from the vector and then iterate over the vector again looking for\n+    // an output with index 1, and so on until one of the following happens:\n+    //\n+    //     1. We have determined all outputs belong to us (the vector is empty)\n+    //     2. We have passed over the vector and found no outputs belonging to us\n+    //\n+\n+    bool removed;\n+    uint32_t output_index{0};\n+    std::vector<uint256> tweaks;\n+    do {\n+        // We haven't removed anything yet on this pass and if we don't remove anything, we didn't find\n+        // any silent payment outputs and should stop checking\n+        removed = false;\n+        uint256 tweak = ComputeTweak(ecdh_pubkey, output_index);\n+        CPubKey computed_sp_pubkey = spend_pubkey.TweakAdd(tweak.data());\n+        const XOnlyPubKey& sp_pubkey = XOnlyPubKey{computed_sp_pubkey};\n+        //const CKey& silent_payment_priv_key = tweakResult.first;\n+        output_pub_keys.erase(std::remove_if(output_pub_keys.begin(), output_pub_keys.end(), [&](auto output_pubkey) {\n+            if (sp_pubkey == output_pubkey) {\n+                // Since we found an output, we need to increment the output index and check the vector again\n+                tweaks.emplace_back(tweak);\n+                removed = true;\n+                output_index++;\n+                // Return true so that this output pubkey is removed the from vector and not checked again\n+                return true;\n+            }\n+            return false;\n+        }), output_pub_keys.end());\n+    } while (!output_pub_keys.empty() && removed);\n+    return tweaks;\n+}\n+\n+std::optional<std::pair<uint256, CPubKey>> GetSilentPaymentsTweakDataFromTxInputs(const std::vector<CTxIn>& vin, const std::map<COutPoint, Coin>& coins)\n+{\n+\n+    // Extract the keys from the inputs\n+    // or skip if no valid inputs\n+    std::vector<CPubKey> input_pubkeys;\n+    std::vector<COutPoint> input_outpoints;\n+    for (const CTxIn& txin : vin) {\n+        const Coin& coin = coins.at(txin.prevout);\n+        Assert(!coin.IsSpent());\n+        input_outpoints.emplace_back(txin.prevout);\n+\n+        std::vector<std::vector<unsigned char>> solutions;\n+        TxoutType type = Solver(coin.out.scriptPubKey, solutions);\n+        if (type == TxoutType::WITNESS_V1_TAPROOT) {\n+            // Check for H point in script path spend\n+            if (txin.scriptWitness.stack.size() > 1) {\n+                // Check for annex\n+                bool has_annex = txin.scriptWitness.stack.back()[0] == ANNEX_TAG;\n+                size_t post_annex_size = txin.scriptWitness.stack.size() - (has_annex ? 1 : 0);\n+                if (post_annex_size > 1) {\n+                    // Actually a script path spend\n+                    const std::vector<unsigned char>& control = txin.scriptWitness.stack.back();",
      "path": "src/wallet/silentpayments.cpp",
      "position": null,
      "original_position": 95,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "644ff77be819a2dea15be0daad10fca8524a18f4",
      "in_reply_to_id": 1321964059,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2023-09-12T08:51:35Z",
      "updated_at": "2023-09-12T08:51:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1322686496",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322686496"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 95,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322687900",
      "pull_request_review_id": 1621689539,
      "id": 1322687900,
      "node_id": "PRRC_kwDOABII585O1p2c",
      "diff_hunk": "@@ -64,6 +66,21 @@ class DestinationEncoder\n         return bech32::Encode(bech32::Encoding::BECH32M, m_params.Bech32HRP(), data);\n     }\n \n+    std::string operator()(const V0SilentPaymentDestination& sp) const\n+    {\n+        // The data_in is scan_pubkey + spend_pubkey\n+        std::vector<unsigned char> data_in = {};\n+        data_in.reserve(66);\n+        // Set 0 as the silent payments version\n+        std::vector<unsigned char> data_out = {0};\n+        data_out.reserve(67);",
      "path": "src/key_io.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "3235eb8c63ea055c68fdf59bb20afd6f06f294e4",
      "in_reply_to_id": 1321935455,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed and added a comment",
      "created_at": "2023-09-12T08:51:51Z",
      "updated_at": "2023-09-12T08:51:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1322687900",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322687900"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322710781",
      "pull_request_review_id": 1621717226,
      "id": 1322710781,
      "node_id": "PRRC_kwDOABII585O1vb9",
      "diff_hunk": "@@ -127,12 +146,29 @@ CTxDestination DecodeDestination(const std::string& str, const CChainParams& par\n     }\n \n     data.clear();\n-    const auto dec = bech32::Decode(str);\n+    const auto dec = bech32::Decode(str, is_silent_payment ? bech32::CharLimit::SILENT_PAYMENTS : bech32::CharLimit::SEGWIT);\n     if (dec.encoding == bech32::Encoding::BECH32 || dec.encoding == bech32::Encoding::BECH32M) {\n         if (dec.data.empty()) {\n             error_str = \"Empty Bech32 data section\";\n             return CNoDestination();\n         }\n+        if (is_silent_payment) {\n+            if (!ConvertBits<5, 8, false>([&](unsigned char c) { data.push_back(c); }, dec.data.begin() + 1, dec.data.end())) {\n+                return CNoDestination();\n+            }\n+            if (data.size() < SILENT_PAYMENT_V0_DATA_SIZE) {\n+                error_str = strprintf(\"Silent payment data payload is too small (expected at least %d, got %d).\", SILENT_PAYMENT_V0_DATA_SIZE, data.size());\n+                return CNoDestination();\n+            }\n+            auto version = dec.data[0];  // retrieve the version\n+            if (version == 0 && data.size() != SILENT_PAYMENT_V0_DATA_SIZE) {\n+                error_str = strprintf(\"Silent payment version is v0 but data is not the correct size (expected %d, got %d).\", SILENT_PAYMENT_V0_DATA_SIZE, data.size());\n+                return CNoDestination();\n+            }",
      "path": "src/key_io.cpp",
      "position": 71,
      "original_position": 65,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "3235eb8c63ea055c68fdf59bb20afd6f06f294e4",
      "in_reply_to_id": 1321932172,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Added a check for version >= 31",
      "created_at": "2023-09-12T08:59:48Z",
      "updated_at": "2023-09-12T08:59:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1322710781",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322710781"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": 171,
      "original_start_line": 164,
      "start_side": "RIGHT",
      "line": 174,
      "original_line": 174,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322712121",
      "pull_request_review_id": 1621718896,
      "id": 1322712121,
      "node_id": "PRRC_kwDOABII585O1vw5",
      "diff_hunk": "@@ -256,6 +259,22 @@ std::optional<std::pair<XOnlyPubKey, bool>> XOnlyPubKey::CreateTapTweak(const ui\n     return ret;\n }\n \n+CPubKey CPubKey::TweakAdd(const unsigned char *tweak32) const\n+{\n+    secp256k1_pubkey original_pubkey;\n+    int return_val = secp256k1_ec_pubkey_parse(secp256k1_context_static, &original_pubkey, data(), size());\n+    assert(return_val);\n+\n+    return_val = secp256k1_ec_pubkey_tweak_add(secp256k1_context_static, &original_pubkey, tweak32);\n+    assert(return_val);\n+\n+    unsigned char pubkey_bytes[COMPRESSED_SIZE];\n+    size_t publen = COMPRESSED_SIZE;\n+    return_val = secp256k1_ec_pubkey_serialize(secp256k1_context_static, pubkey_bytes, &publen, &original_pubkey, SECP256K1_EC_COMPRESSED);\n+    assert(return_val);\n+\n+    return CPubKey(pubkey_bytes);",
      "path": "src/pubkey.cpp",
      "position": null,
      "original_position": 28,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "7b9f48450738c42d934280881d9ff2dfb5419725",
      "in_reply_to_id": 1321926230,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed, and also updated CKey::TweakAdd,TweakMultiply to return a bool (instead of an assert + void), as this better matches the CKey/CPubKey api",
      "created_at": "2023-09-12T09:00:36Z",
      "updated_at": "2023-09-12T09:00:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1322712121",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322712121"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 276,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322766028",
      "pull_request_review_id": 1621803348,
      "id": 1322766028,
      "node_id": "PRRC_kwDOABII585O187M",
      "diff_hunk": "@@ -109,9 +117,14 @@ using CTxDestination = std::variant<CNoDestination, PKHash, ScriptHash, WitnessV\n bool IsValidDestination(const CTxDestination& dest);\n \n /**\n- * Parse a standard scriptPubKey for the destination address. Assigns result to\n- * the addressRet parameter and returns true if successful. Currently only works for P2PK,\n- * P2PKH, P2SH, P2WPKH, and P2WSH scripts.\n+ * Parse a scriptPubKey for the destination.\n+ *\n+ * For standard scripts that have addresses (and P2PK as an exception), a corresponding CTxDestination\n+ * is assigned to addressRet.\n+ * For all other scripts. addressRet is assigned as a CNoDestination containing the scriptPubKey.",
      "path": "src/addresstype.h",
      "position": null,
      "original_position": 54,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "621b1ca6fbdf66ccf9da84c38fcc3b18de9e95fe",
      "in_reply_to_id": 1322087391,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oops, indeed! It might be a good idea to read PR descriptions before starting a review 😅 ",
      "created_at": "2023-09-12T09:42:58Z",
      "updated_at": "2023-09-12T09:42:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1322766028",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1322766028"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 160,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1323413818",
      "pull_request_review_id": 1622885912,
      "id": 1323413818,
      "node_id": "PRRC_kwDOABII585O4bE6",
      "diff_hunk": "@@ -0,0 +1,241 @@\n+#include <wallet/silentpayments.h>\n+#include <addresstype.h>\n+#include <arith_uint256.h>\n+#include <coins.h>\n+#include <crypto/common.h>\n+#include <crypto/hmac_sha512.h>\n+#include <key_io.h>\n+#include <undo.h>\n+#include <logging.h>\n+#include <pubkey.h>\n+#include <policy/policy.h>\n+#include <script/sign.h>\n+#include <script/solver.h>\n+#include <util/check.h>\n+\n+namespace wallet {\n+\n+uint256 GenerateSilentPaymentChangeTweak(const CKey& scan_key)\n+{\n+    HashWriter hasher;\n+    hasher.write(scan_key);\n+    return hasher.GetSHA256();\n+}\n+\n+V0SilentPaymentDestination GenerateSilentPaymentLabeledAddress(const V0SilentPaymentDestination& receiver, const uint256& label)\n+{\n+    CPubKey labeled_spend_pubkey{receiver.m_spend_pubkey};\n+    labeled_spend_pubkey.TweakAdd(label.data());\n+    return V0SilentPaymentDestination{receiver.m_scan_pubkey, labeled_spend_pubkey};\n+}\n+\n+CPubKey ComputeECDHSharedSecret(const CKey& scan_key, const CPubKey& sender_public_key, const uint256& outpoints_hash)\n+{\n+    auto tweaked_scan_seckey{scan_key};\n+    tweaked_scan_seckey.TweakMultiply(outpoints_hash.begin());\n+    CPubKey result = tweaked_scan_seckey.UnhashedECDH(sender_public_key);\n+    assert(result.IsValid());\n+    return result;\n+}\n+\n+uint256 ComputeTweak(const CPubKey& ecdh_pubkey, const uint32_t output_index)\n+{\n+    HashWriter h;\n+    h.write(Span{ecdh_pubkey});\n+    unsigned char num[4];\n+    WriteBE32(num, output_index);\n+    h << num;\n+    return h.GetSHA256();\n+}\n+\n+std::vector<uint256> GetTxOutputTweaks(const CPubKey& spend_pubkey, const CPubKey& ecdh_pubkey, std::vector<XOnlyPubKey> output_pub_keys)\n+{\n+    // Because a sender can create multiple outputs for us, we first check the outputs vector for an output with\n+    // output index 0. If we find it, we remove it from the vector and then iterate over the vector again looking for\n+    // an output with index 1, and so on until one of the following happens:\n+    //\n+    //     1. We have determined all outputs belong to us (the vector is empty)\n+    //     2. We have passed over the vector and found no outputs belonging to us\n+    //\n+\n+    bool removed;\n+    uint32_t output_index{0};\n+    std::vector<uint256> tweaks;\n+    do {\n+        // We haven't removed anything yet on this pass and if we don't remove anything, we didn't find\n+        // any silent payment outputs and should stop checking\n+        removed = false;\n+        uint256 tweak = ComputeTweak(ecdh_pubkey, output_index);\n+        CPubKey computed_sp_pubkey{spend_pubkey};\n+        computed_sp_pubkey.TweakAdd(tweak.data());\n+        const XOnlyPubKey& sp_pubkey = XOnlyPubKey{computed_sp_pubkey};\n+        //const CKey& silent_payment_priv_key = tweakResult.first;\n+        output_pub_keys.erase(std::remove_if(output_pub_keys.begin(), output_pub_keys.end(), [&](auto output_pubkey) {\n+            if (sp_pubkey == output_pubkey) {\n+                // Since we found an output, we need to increment the output index and check the vector again\n+                tweaks.emplace_back(tweak);\n+                removed = true;\n+                output_index++;\n+                // Return true so that this output pubkey is removed the from vector and not checked again\n+                return true;\n+            }\n+            return false;\n+        }), output_pub_keys.end());\n+    } while (!output_pub_keys.empty() && removed);\n+    return tweaks;\n+}\n+\n+std::vector<uint256> GetTxOutputTweaks(const CPubKey& spend_pubkey, const CPubKey& ecdh_pubkey, std::vector<XOnlyPubKey> output_pub_keys, const std::pair<uint256, CPubKey> change_label)\n+{\n+    // Scan first for any outputs to us, and then check if there is any change\n+    std::vector<uint256> tweaks = GetTxOutputTweaks(spend_pubkey, ecdh_pubkey, output_pub_keys);\n+    std::vector<uint256> labeled_tweaks = GetTxOutputTweaks(change_label.second, ecdh_pubkey, output_pub_keys);",
      "path": "src/wallet/silentpayments.cpp",
      "position": null,
      "original_position": 92,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "93ff4ce117d4b85128dd55630d2dc9f8efbfb473",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In 93ff4ce117d4b85128dd55630d2dc9f8efbfb473 \"Implement BIP352: Silent Payments\"\r\n\r\nIn the current receiving PR, `change_label` is a pair of the change label and it's corresponding curve point. However this is expecting it as the pair of the change label and the resulting spend pubkey.",
      "created_at": "2023-09-12T18:29:04Z",
      "updated_at": "2023-09-12T18:29:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1323413818",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1323413818"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 92,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1352780841",
      "pull_request_review_id": 1668088009,
      "id": 1352780841,
      "node_id": "PRRC_kwDOABII585Qocwp",
      "diff_hunk": "@@ -0,0 +1,172 @@\n+#include <addresstype.h>\n+#include <wallet/silentpayments.h>\n+#include <test/data/bip352_send_and_receive_vectors.json.h>\n+\n+#include <test/util/setup_common.h>\n+#include <hash.h>\n+\n+#include <boost/test/unit_test.hpp>\n+#include <test/util/json.h>\n+#include <vector>\n+#include <util/bip32.h>\n+#include <wallet/wallet.h>\n+\n+namespace wallet {\n+BOOST_FIXTURE_TEST_SUITE(silentpayment_tests, BasicTestingSetup)\n+\n+CKey ParseHexToCKey(std::string hex) {\n+    CKey output;\n+    std::vector<unsigned char> hex_data = ParseHex(hex);\n+    output.Set(hex_data.begin(), hex_data.end(), true);\n+    return output;\n+};\n+\n+CKey GetKeyFromBIP32Path(std::vector<std::byte> seed, std::vector<uint32_t> path)\n+{\n+    CExtKey key;\n+    key.SetSeed(seed);\n+    for (auto index : path) {\n+        BOOST_CHECK(key.Derive(key, index));\n+    }\n+    return key.key;\n+}\n+\n+BOOST_AUTO_TEST_CASE(bip352_send_and_receive_test_vectors)\n+{\n+    UniValue tests;\n+    tests.read(json_tests::bip352_send_and_receive_vectors);\n+\n+    for (const auto& vec : tests.getValues()) {\n+        // run sending tests\n+        BOOST_TEST_MESSAGE(vec[\"comment\"].get_str());\n+        for (const auto& sender : vec[\"sending\"].getValues()) {\n+            const UniValue& given = sender[\"given\"];\n+            const UniValue& expected = sender[\"expected\"];\n+\n+            std::vector<COutPoint> outpoints;\n+            for (const auto& outpoint : given[\"outpoints\"].getValues()) {\n+                outpoints.emplace_back(uint256S(outpoint[0].get_str()), outpoint[1].getInt<uint32_t>());\n+            }\n+\n+            std::vector<std::pair<CKey, bool>> sender_secret_keys;\n+            for (const auto& key : given[\"input_priv_keys\"].getValues()) {",
      "path": "src/wallet/test/silentpayment_tests.cpp",
      "position": null,
      "original_position": 52,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "30bbeb38047e020926065a407d5195b684377857",
      "in_reply_to_id": null,
      "user": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "With current implementation, we can't have test vectors for sending that include non-eligible sp inputs. This is because we just sum all the private keys without checking if the input is eligible. I propose to extract eligibility checking as a function from `GetSilentPaymentsTweakDataFromTxInputs` so we can use it here in the unit test.",
      "created_at": "2023-10-10T15:16:22Z",
      "updated_at": "2023-10-10T15:16:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1352780841",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1352780841"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 52,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1365267891",
      "pull_request_review_id": 1687287831,
      "id": 1365267891,
      "node_id": "PRRC_kwDOABII585RYFWz",
      "diff_hunk": "@@ -0,0 +1,294 @@\n+#include <wallet/silentpayments.h>\n+#include <addresstype.h>\n+#include <arith_uint256.h>\n+#include <coins.h>\n+#include <crypto/common.h>\n+#include <crypto/hmac_sha512.h>\n+#include <key_io.h>\n+#include <undo.h>\n+#include <logging.h>\n+#include <pubkey.h>\n+#include <policy/policy.h>\n+#include <script/sign.h>\n+#include <script/solver.h>\n+#include <util/check.h>\n+\n+namespace wallet {\n+\n+uint256 GenerateSilentPaymentChangeTweak(const CKey& scan_key)\n+{\n+    HashWriter hasher;\n+    hasher.write(scan_key);\n+    return hasher.GetSHA256();\n+}\n+\n+V0SilentPaymentDestination GenerateSilentPaymentLabeledAddress(const V0SilentPaymentDestination& receiver, const uint256& label)\n+{\n+    CPubKey labeled_spend_pubkey{receiver.m_spend_pubkey};\n+    labeled_spend_pubkey.TweakAdd(label.data());\n+    return V0SilentPaymentDestination{receiver.m_scan_pubkey, labeled_spend_pubkey};\n+}\n+\n+CPubKey ComputeECDHSharedSecret(const CKey& scan_key, const CPubKey& sender_public_key, const uint256& outpoints_hash)\n+{\n+    CKey tweaked_scan_seckey{scan_key};\n+    tweaked_scan_seckey.TweakMultiply(outpoints_hash.begin());\n+    CPubKey result = tweaked_scan_seckey.UnhashedECDH(sender_public_key);\n+    assert(result.IsValid());\n+    return result;\n+}\n+\n+uint256 ComputeTweak(const CPubKey& ecdh_pubkey, const uint32_t output_index)\n+{\n+    HashWriter h;\n+    h.write(Span{ecdh_pubkey});\n+    unsigned char num[4];\n+    WriteBE32(num, output_index);\n+    h << num;\n+    return h.GetSHA256();\n+}\n+\n+CPubKey CreateOutput(const CKey& ecdh_scalar, const CPubKey& scan_pubkey, const CPubKey& spend_pubkey, const uint32_t output_index)\n+{\n+    CPubKey ecdh_pubkey = ecdh_scalar.UnhashedECDH(scan_pubkey);\n+    HashWriter h;\n+    h.write(Span{ecdh_pubkey});\n+    unsigned char num[4];\n+    WriteBE32(num, output_index);\n+    h << num;\n+    uint256 shared_secret = h.GetSHA256();\n+    CPubKey silent_payment_output{spend_pubkey};\n+    silent_payment_output.TweakAdd(shared_secret.begin());\n+    return silent_payment_output;\n+}\n+\n+CPubKey SumInputPubKeys(const std::vector<CPubKey>& pubkeys)\n+{\n+    CPubKey sum_pubkey{pubkeys.at(0)};\n+    if (pubkeys.size() == 1) return sum_pubkey;\n+    for (size_t i = 1; i < pubkeys.size(); i++) {\n+        sum_pubkey = sum_pubkey + pubkeys.at(i);\n+    }\n+    return sum_pubkey;\n+}\n+\n+CKey SumInputPrivKeys(const std::vector<std::pair<CKey, bool>>& sender_secret_keys)\n+{\n+    // Grab the first key, copy it to the accumulator, and negate if necessary\n+    const auto& [seckey, is_taproot] = sender_secret_keys.at(0);\n+    CKey sum_seckey{seckey};\n+    if (is_taproot && sum_seckey.GetPubKey()[0] == 3) sum_seckey.Negate();\n+    if (sender_secret_keys.size() == 1) return sum_seckey;\n+\n+    // If there are more keys, check if the key needs to be negated and add it to the accumulator\n+    for (size_t i = 1; i < sender_secret_keys.size(); i++) {\n+        const auto& [sender_seckey, sender_is_taproot] = sender_secret_keys.at(i);\n+        CKey temp_key{sender_seckey};\n+        if (sender_is_taproot && sender_seckey.GetPubKey()[0] == 3) {\n+            temp_key.Negate();\n+        }\n+        sum_seckey.TweakAdd(temp_key.begin());\n+    }\n+    return sum_seckey;\n+}\n+\n+CKey PrepareScalarECDHInput(const std::vector<std::pair<CKey, bool>>& sender_secret_keys, const std::vector<COutPoint>& tx_outpoints)\n+{\n+    CKey sum_input_secret_keys = SumInputPrivKeys(sender_secret_keys);\n+    uint256 outpoints_hash = HashOutpoints(tx_outpoints);\n+    sum_input_secret_keys.TweakMultiply(outpoints_hash.begin());\n+    return sum_input_secret_keys;\n+}\n+\n+std::map<size_t, WitnessV1Taproot> GenerateSilentPaymentTaprootDestinations(const CKey& ecdh_scalar, const std::map<size_t, V0SilentPaymentDestination>& sp_dests)\n+{\n+    std::map<CPubKey, std::vector<std::pair<CPubKey, size_t>>> sp_groups;\n+    std::map<size_t, WitnessV1Taproot> tr_dests;\n+\n+    for (const auto& [out_idx, sp_dest] : sp_dests) {\n+        sp_groups[sp_dest.m_scan_pubkey].emplace_back(sp_dest.m_spend_pubkey, out_idx);\n+    }\n+\n+    for (const auto& [scan_pubkey, spend_pubkeys] : sp_groups) {\n+        for (size_t i = 0; i < spend_pubkeys.size(); ++i) {\n+            const auto& [spend_pubkey, out_idx] = spend_pubkeys.at(i);\n+            tr_dests.emplace(out_idx, XOnlyPubKey{CreateOutput(ecdh_scalar, scan_pubkey, spend_pubkey, i)});\n+        }\n+    }\n+    return tr_dests;\n+}\n+\n+uint256 HashOutpoints(const std::vector<COutPoint>& tx_outpoints)\n+{\n+\n+    // Make a local copy of the outpoints so we can sort them before hashing.\n+    // This is to ensure the sender and receiver deterministically arrive at the same outpoint hash,\n+    // regardless of how the outpoints are ordered in the transaction.\n+\n+    std::vector<COutPoint> outpoints{tx_outpoints};\n+    std::sort(outpoints.begin(), outpoints.end());\n+\n+    HashWriter h;\n+    for (const auto& outpoint: outpoints) {\n+        h << outpoint;\n+    }\n+    return h.GetSHA256();\n+}\n+\n+std::vector<uint256> GetTxOutputTweaks(const CPubKey& spend_pubkey, const CPubKey& ecdh_pubkey, std::vector<XOnlyPubKey> output_pub_keys, const std::map<CPubKey, uint256>& labels)\n+{\n+    // Because a sender can create multiple outputs for us, we first check the outputs vector for an output with\n+    // output index 0. If we find it, we remove it from the vector and then iterate over the vector again looking for\n+    // an output with index 1, and so on until one of the following happens:\n+    //\n+    //     1. We have determined all outputs belong to us (the vector is empty)\n+    //     2. We have passed over the vector and found no outputs belonging to us\n+    //\n+\n+    // Define a convenience lambda for correctly combining uint256 tweak data\n+    auto combine_tweaks = [](const uint256& tweak, const uint256& label_tweak) -> uint256 {\n+        uint256 combined_tweaks;\n+        CKey tmp;\n+        tmp.Set(tweak.begin(), tweak.end(), /*fCompressedIn=*/true);\n+        tmp.TweakAdd(label_tweak.begin());\n+        std::copy(tmp.begin(), tmp.end(), combined_tweaks.begin());\n+        return combined_tweaks;\n+    };\n+\n+    bool keep_going;\n+    uint32_t k{0};\n+    std::vector<uint256> tweaks;\n+    do {\n+        // We haven't found anything yet on this pass and if we make to the end without finding any\n+        // silent payment outputs everything left in the vector is not for us, so we stop scanning.\n+        keep_going = false;\n+\n+        // t_k = hash(ecdh_shared_secret || k)\n+        uint256 t_k = ComputeTweak(ecdh_pubkey, k);\n+\n+        // Compute P_k = B_spend + t_k * G, convert P_k to a P2TR output\n+        CPubKey P_k{spend_pubkey};\n+        P_k.TweakAdd(t_k.data());\n+        const XOnlyPubKey& P_k_xonly = XOnlyPubKey{P_k};\n+\n+        // Scan the transaction outputs, only continue scanning if there is a match\n+        output_pub_keys.erase(std::remove_if(output_pub_keys.begin(), output_pub_keys.end(), [&](XOnlyPubKey output_pubkey) {\n+            bool found = P_k_xonly == output_pubkey;\n+            if (!found) {\n+                if (labels.size() < 3) {\n+                    // If we have less than 3 labels, it's cheaper to check by adding each label to each output.\n+                    // This ends up being at most N * 2 ECC additions, where N is the number of taproot outputs in the transaction.\n+                    // This is primarily for wallets that are only using a single label for generating silent payments change outputs.\n+                    for (const auto& [m_G, m] : labels) {\n+                        // Check P_k + m*G\n+                        CPubKey labeled_spend_key{P_k + m_G};\n+                        if (output_pubkey.ConvertToCompressedPubKey(/*even=*/true) == labeled_spend_key) {\n+                            t_k = combine_tweaks(t_k, m);\n+                            found = true;\n+                            break;\n+                        }\n+                        // If we don't find a label with the even output, also check the odd (negated) output\n+                        // Note: changing the parity byte from even to odd is not as expensive as negating an EC point\n+                        if (output_pubkey.ConvertToCompressedPubKey(/*even=*/false) == labeled_spend_key) {\n+                            t_k = combine_tweaks(t_k, m);\n+                            found = true;\n+                            break;\n+                        }\n+                    }\n+                } else {\n+                    // If we have 3 or more labels, checking via subtraction is cheaper.\n+                    // This ends up being at most N * 2 ECC operations (two subtractions) and a lookup in the labels map,\n+                    // where N is the number of taproot outputs in the transaction\n+                    std::map<CPubKey, uint256>::const_iterator it = labels.end();\n+                    // For an XOnlyPubKey, converting it to an odd compressed key is equivalent to negation.\n+                    // We use P_k_negated for subtraction: output + ( - P_k ),\n+                    // so first we need to check the parity byte of the compute P_K public key\n+                    bool parity = (P_k.begin()[0] == 0x02) ? true : false;\n+                    CPubKey P_k_negated = P_k_xonly.ConvertToCompressedPubKey(/*even=*/!parity);\n+                    it = labels.find(output_pubkey.ConvertToCompressedPubKey(/*even=*/true) + P_k_negated);\n+                    if (it == labels.end()) {\n+                        // If not found on the first try, negate the output and check again.\n+                        it = labels.find(output_pubkey.ConvertToCompressedPubKey(/*even=*/false) + P_k_negated);\n+                    }\n+                    if (it != labels.end()) {\n+                        t_k = combine_tweaks(t_k, it->second);\n+                        found = true;\n+                    }\n+                }\n+            }\n+            if (found) {\n+                // Since we found an output, we need to increment k and check the vector again\n+                tweaks.emplace_back(t_k);\n+                keep_going = true;\n+                k++;\n+                // Return true so that this output pubkey is removed the from vector and not checked again\n+                return true;\n+            }\n+            return false;\n+        }), output_pub_keys.end());\n+    } while (!output_pub_keys.empty() && keep_going);\n+    return tweaks;\n+}\n+\n+std::optional<std::pair<uint256, CPubKey>> GetSilentPaymentsTweakDataFromTxInputs(const std::vector<CTxIn>& vin, const std::map<COutPoint, Coin>& coins)",
      "path": "src/wallet/silentpayments.cpp",
      "position": null,
      "original_position": 233,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "699577c91101b4be56bffcec4f0fa48f7d8916f0",
      "in_reply_to_id": null,
      "user": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "According to the BIP we should skip the whole tx if there's unknown witness input. As currently, implemented it will silently skip just that input and attempt to proceed. I added a test vector for unknown witness version",
      "created_at": "2023-10-19T10:20:33Z",
      "updated_at": "2023-10-19T10:20:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1365267891",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1365267891"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 233,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1464304643",
      "pull_request_review_id": 1840412491,
      "id": 1464304643,
      "node_id": "PRRC_kwDOABII585XR4QD",
      "diff_hunk": "@@ -0,0 +1,294 @@\n+#include <wallet/silentpayments.h>\n+#include <addresstype.h>\n+#include <arith_uint256.h>\n+#include <coins.h>\n+#include <crypto/common.h>\n+#include <crypto/hmac_sha512.h>\n+#include <key_io.h>\n+#include <undo.h>\n+#include <logging.h>\n+#include <pubkey.h>\n+#include <policy/policy.h>\n+#include <script/sign.h>\n+#include <script/solver.h>\n+#include <util/check.h>\n+\n+namespace wallet {\n+\n+const HashWriter HASHER_INPUTS{TaggedHash(\"BIP0352/Inputs\")};\n+const HashWriter HASHER_LABEL{TaggedHash(\"BIP0352/Label\")};\n+const HashWriter HASHER_SHARED_SECRET{TaggedHash(\"BIP0352/SharedSecret\")};\n+\n+uint256 ComputeSilentPaymentLabelTweak(const CKey& scan_key, const int m)\n+{\n+    HashWriter h{HASHER_LABEL};\n+    unsigned char ser_m[4];\n+    WriteBE32(ser_m, m);\n+    h.write(scan_key);\n+    h << ser_m;\n+    return h.GetSHA256();\n+}\n+\n+// BIP0352/Inputs\n+uint256 ComputeInputHash(const std::vector<COutPoint>& tx_outpoints, const CPubKey& sum_input_pubkeys)\n+{\n+    HashWriter h{HASHER_INPUTS};\n+    auto min_outpoint = std::min_element(tx_outpoints.begin(), tx_outpoints.end());\n+\n+    // Take the hash of the minimum outpoint (lexicographically) concatenated with the sum of the input public keys\n+    h << *min_outpoint;\n+    // We need to use the h.write method here instead of the << method for pubkeys because << operator for pubkeys also\n+    // writes the byte size when serializing\n+    h.write(sum_input_pubkeys);\n+    return h.GetSHA256();\n+}\n+\n+uint256 ComputeTweak(const CPubKey& ecdh_pubkey, const uint32_t output_index)\n+{\n+    HashWriter h{HASHER_SHARED_SECRET};\n+    h.write(Span{ecdh_pubkey});\n+    unsigned char num[4];\n+    WriteBE32(num, output_index);\n+    h << num;\n+    return h.GetSHA256();\n+}\n+\n+V0SilentPaymentDestination GenerateSilentPaymentLabeledAddress(const V0SilentPaymentDestination& receiver, const uint256& label)\n+{\n+    CPubKey labeled_spend_pubkey{receiver.m_spend_pubkey};\n+    labeled_spend_pubkey.TweakAdd(label.data());\n+    return V0SilentPaymentDestination{receiver.m_scan_pubkey, labeled_spend_pubkey};\n+}\n+\n+CPubKey ComputeECDHSharedSecret(const CKey& scan_key, const CPubKey& sender_public_key, const uint256& deterministic_nonce)\n+{\n+    CKey tweaked_scan_seckey{scan_key};\n+    tweaked_scan_seckey.TweakMultiply(deterministic_nonce.begin());\n+    CPubKey result = tweaked_scan_seckey.UnhashedECDH(sender_public_key);\n+    assert(result.IsValid());\n+    return result;\n+}\n+\n+CPubKey CreateOutput(const CKey& ecdh_scalar, const CPubKey& scan_pubkey, const CPubKey& spend_pubkey, const uint32_t output_index)\n+{\n+    CPubKey ecdh_pubkey = ecdh_scalar.UnhashedECDH(scan_pubkey);\n+    uint256 shared_secret = ComputeTweak(ecdh_pubkey, output_index);\n+    CPubKey silent_payment_output{spend_pubkey};\n+    silent_payment_output.TweakAdd(shared_secret.begin());\n+    return silent_payment_output;\n+}\n+\n+CPubKey SumInputPubKeys(const std::vector<CPubKey>& pubkeys)\n+{\n+    CPubKey sum_pubkey{pubkeys.at(0)};\n+    if (pubkeys.size() == 1) return sum_pubkey;\n+    for (size_t i = 1; i < pubkeys.size(); i++) {\n+        sum_pubkey = sum_pubkey + pubkeys.at(i);\n+    }\n+    return sum_pubkey;\n+}\n+\n+CKey SumInputPrivKeys(const std::vector<std::pair<CKey, bool>>& sender_secret_keys)\n+{\n+    // Grab the first key, copy it to the accumulator, and negate if necessary\n+    const auto& [seckey, is_taproot] = sender_secret_keys.at(0);\n+    CKey sum_seckey{seckey};\n+    if (is_taproot && sum_seckey.GetPubKey()[0] == 3) sum_seckey.Negate();\n+    if (sender_secret_keys.size() == 1) return sum_seckey;\n+\n+    // If there are more keys, check if the key needs to be negated and add it to the accumulator\n+    for (size_t i = 1; i < sender_secret_keys.size(); i++) {\n+        const auto& [sender_seckey, sender_is_taproot] = sender_secret_keys.at(i);\n+        CKey temp_key{sender_seckey};\n+        if (sender_is_taproot && sender_seckey.GetPubKey()[0] == 3) {\n+            temp_key.Negate();\n+        }\n+        sum_seckey.TweakAdd(UCharCast(temp_key.begin()));\n+    }\n+    return sum_seckey;\n+}\n+\n+CKey PrepareScalarECDHInput(const std::vector<std::pair<CKey, bool>>& sender_secret_keys, const std::vector<COutPoint>& tx_outpoints)\n+{\n+    CKey sum_input_secret_keys = SumInputPrivKeys(sender_secret_keys);\n+    CPubKey sum_input_pubkeys = sum_input_secret_keys.GetPubKey();\n+    uint256 input_hash = ComputeInputHash(tx_outpoints, sum_input_pubkeys);\n+    sum_input_secret_keys.TweakMultiply(input_hash.begin());\n+    return sum_input_secret_keys;\n+}\n+\n+std::map<size_t, WitnessV1Taproot> GenerateSilentPaymentTaprootDestinations(const CKey& ecdh_scalar, const std::map<size_t, V0SilentPaymentDestination>& sp_dests)\n+{\n+    std::map<CPubKey, std::vector<std::pair<CPubKey, size_t>>> sp_groups;\n+    std::map<size_t, WitnessV1Taproot> tr_dests;\n+\n+    for (const auto& [out_idx, sp_dest] : sp_dests) {\n+        sp_groups[sp_dest.m_scan_pubkey].emplace_back(sp_dest.m_spend_pubkey, out_idx);\n+    }\n+\n+    for (const auto& [scan_pubkey, spend_pubkeys] : sp_groups) {\n+        for (size_t i = 0; i < spend_pubkeys.size(); ++i) {\n+            const auto& [spend_pubkey, out_idx] = spend_pubkeys.at(i);\n+            tr_dests.emplace(out_idx, XOnlyPubKey{CreateOutput(ecdh_scalar, scan_pubkey, spend_pubkey, i)});\n+        }\n+    }\n+    return tr_dests;\n+}\n+\n+std::vector<uint256> GetTxOutputTweaks(const CPubKey& spend_pubkey, const CPubKey& ecdh_pubkey, std::vector<XOnlyPubKey> output_pub_keys, const std::map<CPubKey, uint256>& labels)\n+{\n+    // Because a sender can create multiple outputs for us, we first check the outputs vector for an output with\n+    // output index 0. If we find it, we remove it from the vector and then iterate over the vector again looking for\n+    // an output with index 1, and so on until one of the following happens:\n+    //\n+    //     1. We have determined all outputs belong to us (the vector is empty)\n+    //     2. We have passed over the vector and found no outputs belonging to us\n+    //\n+\n+    // Define a convenience lambda for correctly combining uint256 tweak data\n+    auto combine_tweaks = [](const uint256& tweak, const uint256& label_tweak) -> uint256 {\n+        uint256 combined_tweaks;\n+        CKey tmp;\n+        tmp.Set(tweak.begin(), tweak.end(), /*fCompressedIn=*/true);\n+        tmp.TweakAdd(label_tweak.begin());\n+        std::copy(UCharCast(tmp.begin()), UCharCast(tmp.end()), combined_tweaks.begin());\n+        return combined_tweaks;\n+    };\n+\n+    bool keep_going;\n+    uint32_t k{0};\n+    std::vector<uint256> tweaks;\n+    do {\n+        // We haven't found anything yet on this pass and if we make to the end without finding any\n+        // silent payment outputs everything left in the vector is not for us, so we stop scanning.\n+        keep_going = false;\n+\n+        // t_k = hash(ecdh_shared_secret || k)\n+        uint256 t_k = ComputeTweak(ecdh_pubkey, k);\n+\n+        // Compute P_k = B_spend + t_k * G, convert P_k to a P2TR output\n+        CPubKey P_k{spend_pubkey};\n+        P_k.TweakAdd(t_k.data());\n+        const XOnlyPubKey& P_k_xonly = XOnlyPubKey{P_k};\n+\n+        // Scan the transaction outputs, only continue scanning if there is a match\n+        output_pub_keys.erase(std::remove_if(output_pub_keys.begin(), output_pub_keys.end(), [&](XOnlyPubKey output_pubkey) {\n+            bool found = P_k_xonly == output_pubkey;\n+            if (!found) {\n+                if (labels.size() < 3) {\n+                    // If we have less than 3 labels, it's cheaper to check by adding each label to each output.\n+                    // This ends up being at most N * 2 ECC additions, where N is the number of taproot outputs in the transaction.\n+                    // This is primarily for wallets that are only using a single label for generating silent payments change outputs.\n+                    for (const auto& [m_G, m] : labels) {\n+                        // Check P_k + m*G\n+                        CPubKey labeled_spend_key{P_k + m_G};\n+                        if (output_pubkey.ConvertToCompressedPubKey(/*even=*/true) == labeled_spend_key) {\n+                            t_k = combine_tweaks(t_k, m);\n+                            found = true;\n+                            break;\n+                        }\n+                        // If we don't find a label with the even output, also check the odd (negated) output\n+                        // Note: changing the parity byte from even to odd is not as expensive as negating an EC point\n+                        if (output_pubkey.ConvertToCompressedPubKey(/*even=*/false) == labeled_spend_key) {\n+                            t_k = combine_tweaks(t_k, m);\n+                            found = true;\n+                            break;\n+                        }\n+                    }\n+                } else {\n+                    // If we have 3 or more labels, checking via subtraction is cheaper.\n+                    // This ends up being at most N * 2 ECC operations (two subtractions) and a lookup in the labels map,\n+                    // where N is the number of taproot outputs in the transaction\n+                    std::map<CPubKey, uint256>::const_iterator it = labels.end();\n+                    // For an XOnlyPubKey, converting it to an odd compressed key is equivalent to negation.\n+                    // We use P_k_negated for subtraction: output + ( - P_k ),\n+                    // so first we need to check the parity byte of the compute P_K public key\n+                    bool parity = (P_k.begin()[0] == 0x02) ? true : false;\n+                    CPubKey P_k_negated = P_k_xonly.ConvertToCompressedPubKey(/*even=*/!parity);\n+                    it = labels.find(output_pubkey.ConvertToCompressedPubKey(/*even=*/true) + P_k_negated);\n+                    if (it == labels.end()) {\n+                        // If not found on the first try, negate the output and check again.\n+                        it = labels.find(output_pubkey.ConvertToCompressedPubKey(/*even=*/false) + P_k_negated);\n+                    }\n+                    if (it != labels.end()) {\n+                        t_k = combine_tweaks(t_k, it->second);\n+                        found = true;\n+                    }\n+                }\n+            }\n+            if (found) {\n+                // Since we found an output, we need to increment k and check the vector again\n+                tweaks.emplace_back(t_k);\n+                keep_going = true;\n+                k++;\n+                // Return true so that this output pubkey is removed the from vector and not checked again\n+                return true;\n+            }\n+            return false;\n+        }), output_pub_keys.end());\n+    } while (!output_pub_keys.empty() && keep_going);\n+    return tweaks;\n+}\n+\n+std::optional<std::pair<uint256, CPubKey>> GetSilentPaymentTweakDataFromTxInputs(const std::vector<CTxIn>& vin, const std::map<COutPoint, Coin>& coins)\n+{\n+    // Extract the keys from the inputs\n+    // or skip if no valid inputs\n+    std::vector<CPubKey> input_pubkeys;\n+    std::vector<COutPoint> input_outpoints;\n+    for (const CTxIn& txin : vin) {\n+        const Coin& coin = coins.at(txin.prevout);\n+        Assert(!coin.IsSpent());\n+        input_outpoints.emplace_back(txin.prevout);\n+\n+        std::vector<std::vector<unsigned char>> solutions;\n+        TxoutType type = Solver(coin.out.scriptPubKey, solutions);\n+        if (type == TxoutType::WITNESS_V1_TAPROOT) {\n+            // Check for H point in script path spend\n+            if (txin.scriptWitness.stack.size() > 1) {\n+                // Check for annex\n+                bool has_annex = txin.scriptWitness.stack.back()[0] == ANNEX_TAG;\n+                size_t post_annex_size = txin.scriptWitness.stack.size() - (has_annex ? 1 : 0);\n+                if (post_annex_size > 1) {\n+                    // Actually a script path spend\n+                    const std::vector<unsigned char>& control = txin.scriptWitness.stack.at(post_annex_size - 1);\n+                    Assert(control.size() >= 33);\n+                    if (std::equal(NUMS_H.begin(), NUMS_H.end(), control.begin() + 1)) {\n+                        // Skip script path with H internal key\n+                        continue;\n+                    }\n+                }\n+            }\n+\n+            std::vector<unsigned char> pubkey;\n+            pubkey.resize(33);\n+            pubkey[0] = 0x02;\n+            std::copy(solutions[0].begin(), solutions[0].end(), pubkey.begin() + 1);\n+            input_pubkeys.emplace_back(pubkey);\n+        } else if (type == TxoutType::WITNESS_V0_KEYHASH) {\n+            input_pubkeys.emplace_back(txin.scriptWitness.stack.back());\n+        } else if (type == TxoutType::PUBKEYHASH || type == TxoutType::SCRIPTHASH) {\n+            // Use the script interpreter to get the stack after executing the scriptSig\n+            std::vector<std::vector<unsigned char>> stack;\n+            ScriptError serror;\n+            Assert(EvalScript(stack, txin.scriptSig, MANDATORY_SCRIPT_VERIFY_FLAGS, DUMMY_CHECKER, SigVersion::BASE, &serror));\n+            if (type == TxoutType::PUBKEYHASH) {\n+                input_pubkeys.emplace_back(stack.back());\n+            } else if (type == TxoutType::SCRIPTHASH) {\n+                // Check if the redeemScript is P2WPKH\n+                CScript redeem_script{stack.back().begin(), stack.back().end()};\n+                TxoutType rs_type = Solver(redeem_script, solutions);\n+                if (rs_type == TxoutType::WITNESS_V0_KEYHASH) {",
      "path": "src/wallet/silentpayments.cpp",
      "position": null,
      "original_position": 281,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "5e04b72b4c450e0f025fa0acf1bf68a74ed65210",
      "in_reply_to_id": null,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@josibake p2sh-p2pkh or p2sh-p2pk are not addressed in the BIP. While I understand they are not commonly used scripts but `Solver(redeem_script, solutions)` can still detect p2pkh or p2pk in the redeem_script, so, they are technically \"Standard\". Is there anything against adding support for these scripts? assuming that we ignore non-standard or malleated p2pkh in the redeem script",
      "created_at": "2024-01-24T04:51:14Z",
      "updated_at": "2024-01-24T04:51:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1464304643",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1464304643"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 281,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1465282827",
      "pull_request_review_id": 1841945113,
      "id": 1465282827,
      "node_id": "PRRC_kwDOABII585XVnEL",
      "diff_hunk": "@@ -0,0 +1,294 @@\n+#include <wallet/silentpayments.h>\n+#include <addresstype.h>\n+#include <arith_uint256.h>\n+#include <coins.h>\n+#include <crypto/common.h>\n+#include <crypto/hmac_sha512.h>\n+#include <key_io.h>\n+#include <undo.h>\n+#include <logging.h>\n+#include <pubkey.h>\n+#include <policy/policy.h>\n+#include <script/sign.h>\n+#include <script/solver.h>\n+#include <util/check.h>\n+\n+namespace wallet {\n+\n+const HashWriter HASHER_INPUTS{TaggedHash(\"BIP0352/Inputs\")};\n+const HashWriter HASHER_LABEL{TaggedHash(\"BIP0352/Label\")};\n+const HashWriter HASHER_SHARED_SECRET{TaggedHash(\"BIP0352/SharedSecret\")};\n+\n+uint256 ComputeSilentPaymentLabelTweak(const CKey& scan_key, const int m)\n+{\n+    HashWriter h{HASHER_LABEL};\n+    unsigned char ser_m[4];\n+    WriteBE32(ser_m, m);\n+    h.write(scan_key);\n+    h << ser_m;\n+    return h.GetSHA256();\n+}\n+\n+// BIP0352/Inputs\n+uint256 ComputeInputHash(const std::vector<COutPoint>& tx_outpoints, const CPubKey& sum_input_pubkeys)\n+{\n+    HashWriter h{HASHER_INPUTS};\n+    auto min_outpoint = std::min_element(tx_outpoints.begin(), tx_outpoints.end());\n+\n+    // Take the hash of the minimum outpoint (lexicographically) concatenated with the sum of the input public keys\n+    h << *min_outpoint;\n+    // We need to use the h.write method here instead of the << method for pubkeys because << operator for pubkeys also\n+    // writes the byte size when serializing\n+    h.write(sum_input_pubkeys);\n+    return h.GetSHA256();\n+}\n+\n+uint256 ComputeTweak(const CPubKey& ecdh_pubkey, const uint32_t output_index)\n+{\n+    HashWriter h{HASHER_SHARED_SECRET};\n+    h.write(Span{ecdh_pubkey});\n+    unsigned char num[4];\n+    WriteBE32(num, output_index);\n+    h << num;\n+    return h.GetSHA256();\n+}\n+\n+V0SilentPaymentDestination GenerateSilentPaymentLabeledAddress(const V0SilentPaymentDestination& receiver, const uint256& label)\n+{\n+    CPubKey labeled_spend_pubkey{receiver.m_spend_pubkey};\n+    labeled_spend_pubkey.TweakAdd(label.data());\n+    return V0SilentPaymentDestination{receiver.m_scan_pubkey, labeled_spend_pubkey};\n+}\n+\n+CPubKey ComputeECDHSharedSecret(const CKey& scan_key, const CPubKey& sender_public_key, const uint256& deterministic_nonce)\n+{\n+    CKey tweaked_scan_seckey{scan_key};\n+    tweaked_scan_seckey.TweakMultiply(deterministic_nonce.begin());\n+    CPubKey result = tweaked_scan_seckey.UnhashedECDH(sender_public_key);\n+    assert(result.IsValid());\n+    return result;\n+}\n+\n+CPubKey CreateOutput(const CKey& ecdh_scalar, const CPubKey& scan_pubkey, const CPubKey& spend_pubkey, const uint32_t output_index)\n+{\n+    CPubKey ecdh_pubkey = ecdh_scalar.UnhashedECDH(scan_pubkey);\n+    uint256 shared_secret = ComputeTweak(ecdh_pubkey, output_index);\n+    CPubKey silent_payment_output{spend_pubkey};\n+    silent_payment_output.TweakAdd(shared_secret.begin());\n+    return silent_payment_output;\n+}\n+\n+CPubKey SumInputPubKeys(const std::vector<CPubKey>& pubkeys)\n+{\n+    CPubKey sum_pubkey{pubkeys.at(0)};\n+    if (pubkeys.size() == 1) return sum_pubkey;\n+    for (size_t i = 1; i < pubkeys.size(); i++) {\n+        sum_pubkey = sum_pubkey + pubkeys.at(i);\n+    }\n+    return sum_pubkey;\n+}\n+\n+CKey SumInputPrivKeys(const std::vector<std::pair<CKey, bool>>& sender_secret_keys)\n+{\n+    // Grab the first key, copy it to the accumulator, and negate if necessary\n+    const auto& [seckey, is_taproot] = sender_secret_keys.at(0);\n+    CKey sum_seckey{seckey};\n+    if (is_taproot && sum_seckey.GetPubKey()[0] == 3) sum_seckey.Negate();\n+    if (sender_secret_keys.size() == 1) return sum_seckey;\n+\n+    // If there are more keys, check if the key needs to be negated and add it to the accumulator\n+    for (size_t i = 1; i < sender_secret_keys.size(); i++) {\n+        const auto& [sender_seckey, sender_is_taproot] = sender_secret_keys.at(i);\n+        CKey temp_key{sender_seckey};\n+        if (sender_is_taproot && sender_seckey.GetPubKey()[0] == 3) {\n+            temp_key.Negate();\n+        }\n+        sum_seckey.TweakAdd(UCharCast(temp_key.begin()));\n+    }\n+    return sum_seckey;\n+}\n+\n+CKey PrepareScalarECDHInput(const std::vector<std::pair<CKey, bool>>& sender_secret_keys, const std::vector<COutPoint>& tx_outpoints)\n+{\n+    CKey sum_input_secret_keys = SumInputPrivKeys(sender_secret_keys);\n+    CPubKey sum_input_pubkeys = sum_input_secret_keys.GetPubKey();\n+    uint256 input_hash = ComputeInputHash(tx_outpoints, sum_input_pubkeys);\n+    sum_input_secret_keys.TweakMultiply(input_hash.begin());\n+    return sum_input_secret_keys;\n+}\n+\n+std::map<size_t, WitnessV1Taproot> GenerateSilentPaymentTaprootDestinations(const CKey& ecdh_scalar, const std::map<size_t, V0SilentPaymentDestination>& sp_dests)\n+{\n+    std::map<CPubKey, std::vector<std::pair<CPubKey, size_t>>> sp_groups;\n+    std::map<size_t, WitnessV1Taproot> tr_dests;\n+\n+    for (const auto& [out_idx, sp_dest] : sp_dests) {\n+        sp_groups[sp_dest.m_scan_pubkey].emplace_back(sp_dest.m_spend_pubkey, out_idx);\n+    }\n+\n+    for (const auto& [scan_pubkey, spend_pubkeys] : sp_groups) {\n+        for (size_t i = 0; i < spend_pubkeys.size(); ++i) {\n+            const auto& [spend_pubkey, out_idx] = spend_pubkeys.at(i);\n+            tr_dests.emplace(out_idx, XOnlyPubKey{CreateOutput(ecdh_scalar, scan_pubkey, spend_pubkey, i)});\n+        }\n+    }\n+    return tr_dests;\n+}\n+\n+std::vector<uint256> GetTxOutputTweaks(const CPubKey& spend_pubkey, const CPubKey& ecdh_pubkey, std::vector<XOnlyPubKey> output_pub_keys, const std::map<CPubKey, uint256>& labels)\n+{\n+    // Because a sender can create multiple outputs for us, we first check the outputs vector for an output with\n+    // output index 0. If we find it, we remove it from the vector and then iterate over the vector again looking for\n+    // an output with index 1, and so on until one of the following happens:\n+    //\n+    //     1. We have determined all outputs belong to us (the vector is empty)\n+    //     2. We have passed over the vector and found no outputs belonging to us\n+    //\n+\n+    // Define a convenience lambda for correctly combining uint256 tweak data\n+    auto combine_tweaks = [](const uint256& tweak, const uint256& label_tweak) -> uint256 {\n+        uint256 combined_tweaks;\n+        CKey tmp;\n+        tmp.Set(tweak.begin(), tweak.end(), /*fCompressedIn=*/true);\n+        tmp.TweakAdd(label_tweak.begin());\n+        std::copy(UCharCast(tmp.begin()), UCharCast(tmp.end()), combined_tweaks.begin());\n+        return combined_tweaks;\n+    };\n+\n+    bool keep_going;\n+    uint32_t k{0};\n+    std::vector<uint256> tweaks;\n+    do {\n+        // We haven't found anything yet on this pass and if we make to the end without finding any\n+        // silent payment outputs everything left in the vector is not for us, so we stop scanning.\n+        keep_going = false;\n+\n+        // t_k = hash(ecdh_shared_secret || k)\n+        uint256 t_k = ComputeTweak(ecdh_pubkey, k);\n+\n+        // Compute P_k = B_spend + t_k * G, convert P_k to a P2TR output\n+        CPubKey P_k{spend_pubkey};\n+        P_k.TweakAdd(t_k.data());\n+        const XOnlyPubKey& P_k_xonly = XOnlyPubKey{P_k};\n+\n+        // Scan the transaction outputs, only continue scanning if there is a match\n+        output_pub_keys.erase(std::remove_if(output_pub_keys.begin(), output_pub_keys.end(), [&](XOnlyPubKey output_pubkey) {\n+            bool found = P_k_xonly == output_pubkey;\n+            if (!found) {\n+                if (labels.size() < 3) {\n+                    // If we have less than 3 labels, it's cheaper to check by adding each label to each output.\n+                    // This ends up being at most N * 2 ECC additions, where N is the number of taproot outputs in the transaction.\n+                    // This is primarily for wallets that are only using a single label for generating silent payments change outputs.\n+                    for (const auto& [m_G, m] : labels) {\n+                        // Check P_k + m*G\n+                        CPubKey labeled_spend_key{P_k + m_G};\n+                        if (output_pubkey.ConvertToCompressedPubKey(/*even=*/true) == labeled_spend_key) {\n+                            t_k = combine_tweaks(t_k, m);\n+                            found = true;\n+                            break;\n+                        }\n+                        // If we don't find a label with the even output, also check the odd (negated) output\n+                        // Note: changing the parity byte from even to odd is not as expensive as negating an EC point\n+                        if (output_pubkey.ConvertToCompressedPubKey(/*even=*/false) == labeled_spend_key) {\n+                            t_k = combine_tweaks(t_k, m);\n+                            found = true;\n+                            break;\n+                        }\n+                    }\n+                } else {\n+                    // If we have 3 or more labels, checking via subtraction is cheaper.\n+                    // This ends up being at most N * 2 ECC operations (two subtractions) and a lookup in the labels map,\n+                    // where N is the number of taproot outputs in the transaction\n+                    std::map<CPubKey, uint256>::const_iterator it = labels.end();\n+                    // For an XOnlyPubKey, converting it to an odd compressed key is equivalent to negation.\n+                    // We use P_k_negated for subtraction: output + ( - P_k ),\n+                    // so first we need to check the parity byte of the compute P_K public key\n+                    bool parity = (P_k.begin()[0] == 0x02) ? true : false;\n+                    CPubKey P_k_negated = P_k_xonly.ConvertToCompressedPubKey(/*even=*/!parity);\n+                    it = labels.find(output_pubkey.ConvertToCompressedPubKey(/*even=*/true) + P_k_negated);\n+                    if (it == labels.end()) {\n+                        // If not found on the first try, negate the output and check again.\n+                        it = labels.find(output_pubkey.ConvertToCompressedPubKey(/*even=*/false) + P_k_negated);\n+                    }\n+                    if (it != labels.end()) {\n+                        t_k = combine_tweaks(t_k, it->second);\n+                        found = true;\n+                    }\n+                }\n+            }\n+            if (found) {\n+                // Since we found an output, we need to increment k and check the vector again\n+                tweaks.emplace_back(t_k);\n+                keep_going = true;\n+                k++;\n+                // Return true so that this output pubkey is removed the from vector and not checked again\n+                return true;\n+            }\n+            return false;\n+        }), output_pub_keys.end());\n+    } while (!output_pub_keys.empty() && keep_going);\n+    return tweaks;\n+}\n+\n+std::optional<std::pair<uint256, CPubKey>> GetSilentPaymentTweakDataFromTxInputs(const std::vector<CTxIn>& vin, const std::map<COutPoint, Coin>& coins)\n+{\n+    // Extract the keys from the inputs\n+    // or skip if no valid inputs\n+    std::vector<CPubKey> input_pubkeys;\n+    std::vector<COutPoint> input_outpoints;\n+    for (const CTxIn& txin : vin) {\n+        const Coin& coin = coins.at(txin.prevout);\n+        Assert(!coin.IsSpent());\n+        input_outpoints.emplace_back(txin.prevout);\n+\n+        std::vector<std::vector<unsigned char>> solutions;\n+        TxoutType type = Solver(coin.out.scriptPubKey, solutions);\n+        if (type == TxoutType::WITNESS_V1_TAPROOT) {\n+            // Check for H point in script path spend\n+            if (txin.scriptWitness.stack.size() > 1) {\n+                // Check for annex\n+                bool has_annex = txin.scriptWitness.stack.back()[0] == ANNEX_TAG;\n+                size_t post_annex_size = txin.scriptWitness.stack.size() - (has_annex ? 1 : 0);\n+                if (post_annex_size > 1) {\n+                    // Actually a script path spend\n+                    const std::vector<unsigned char>& control = txin.scriptWitness.stack.at(post_annex_size - 1);\n+                    Assert(control.size() >= 33);\n+                    if (std::equal(NUMS_H.begin(), NUMS_H.end(), control.begin() + 1)) {\n+                        // Skip script path with H internal key\n+                        continue;\n+                    }\n+                }\n+            }\n+\n+            std::vector<unsigned char> pubkey;\n+            pubkey.resize(33);\n+            pubkey[0] = 0x02;\n+            std::copy(solutions[0].begin(), solutions[0].end(), pubkey.begin() + 1);\n+            input_pubkeys.emplace_back(pubkey);\n+        } else if (type == TxoutType::WITNESS_V0_KEYHASH) {\n+            input_pubkeys.emplace_back(txin.scriptWitness.stack.back());\n+        } else if (type == TxoutType::PUBKEYHASH || type == TxoutType::SCRIPTHASH) {\n+            // Use the script interpreter to get the stack after executing the scriptSig\n+            std::vector<std::vector<unsigned char>> stack;\n+            ScriptError serror;\n+            Assert(EvalScript(stack, txin.scriptSig, MANDATORY_SCRIPT_VERIFY_FLAGS, DUMMY_CHECKER, SigVersion::BASE, &serror));\n+            if (type == TxoutType::PUBKEYHASH) {\n+                input_pubkeys.emplace_back(stack.back());\n+            } else if (type == TxoutType::SCRIPTHASH) {\n+                // Check if the redeemScript is P2WPKH\n+                CScript redeem_script{stack.back().begin(), stack.back().end()};\n+                TxoutType rs_type = Solver(redeem_script, solutions);\n+                if (rs_type == TxoutType::WITNESS_V0_KEYHASH) {",
      "path": "src/wallet/silentpayments.cpp",
      "position": null,
      "original_position": 281,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "5e04b72b4c450e0f025fa0acf1bf68a74ed65210",
      "in_reply_to_id": 1464304643,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The goal is not to support every possible script. Rather, we want to limit it to a sane subset to avoid technical debt and keep the implementation simple. In fact, the only reason for including `P2PKH` at all is due to the fact it is still widely used and makes up a significant percentage of the UTXO set, otherwise we would have only allowed Segwit script templates as this gives us non-malleability guarantees.\r\n\r\n",
      "created_at": "2024-01-24T17:08:13Z",
      "updated_at": "2024-01-24T17:08:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1465282827",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1465282827"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 281,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1465892947",
      "pull_request_review_id": 1842917337,
      "id": 1465892947,
      "node_id": "PRRC_kwDOABII585XX8BT",
      "diff_hunk": "@@ -0,0 +1,294 @@\n+#include <wallet/silentpayments.h>\n+#include <addresstype.h>\n+#include <arith_uint256.h>\n+#include <coins.h>\n+#include <crypto/common.h>\n+#include <crypto/hmac_sha512.h>\n+#include <key_io.h>\n+#include <undo.h>\n+#include <logging.h>\n+#include <pubkey.h>\n+#include <policy/policy.h>\n+#include <script/sign.h>\n+#include <script/solver.h>\n+#include <util/check.h>\n+\n+namespace wallet {\n+\n+const HashWriter HASHER_INPUTS{TaggedHash(\"BIP0352/Inputs\")};\n+const HashWriter HASHER_LABEL{TaggedHash(\"BIP0352/Label\")};\n+const HashWriter HASHER_SHARED_SECRET{TaggedHash(\"BIP0352/SharedSecret\")};\n+\n+uint256 ComputeSilentPaymentLabelTweak(const CKey& scan_key, const int m)\n+{\n+    HashWriter h{HASHER_LABEL};\n+    unsigned char ser_m[4];\n+    WriteBE32(ser_m, m);\n+    h.write(scan_key);\n+    h << ser_m;\n+    return h.GetSHA256();\n+}\n+\n+// BIP0352/Inputs\n+uint256 ComputeInputHash(const std::vector<COutPoint>& tx_outpoints, const CPubKey& sum_input_pubkeys)\n+{\n+    HashWriter h{HASHER_INPUTS};\n+    auto min_outpoint = std::min_element(tx_outpoints.begin(), tx_outpoints.end());\n+\n+    // Take the hash of the minimum outpoint (lexicographically) concatenated with the sum of the input public keys\n+    h << *min_outpoint;\n+    // We need to use the h.write method here instead of the << method for pubkeys because << operator for pubkeys also\n+    // writes the byte size when serializing\n+    h.write(sum_input_pubkeys);\n+    return h.GetSHA256();\n+}\n+\n+uint256 ComputeTweak(const CPubKey& ecdh_pubkey, const uint32_t output_index)\n+{\n+    HashWriter h{HASHER_SHARED_SECRET};\n+    h.write(Span{ecdh_pubkey});\n+    unsigned char num[4];\n+    WriteBE32(num, output_index);\n+    h << num;\n+    return h.GetSHA256();\n+}\n+\n+V0SilentPaymentDestination GenerateSilentPaymentLabeledAddress(const V0SilentPaymentDestination& receiver, const uint256& label)\n+{\n+    CPubKey labeled_spend_pubkey{receiver.m_spend_pubkey};\n+    labeled_spend_pubkey.TweakAdd(label.data());\n+    return V0SilentPaymentDestination{receiver.m_scan_pubkey, labeled_spend_pubkey};\n+}\n+\n+CPubKey ComputeECDHSharedSecret(const CKey& scan_key, const CPubKey& sender_public_key, const uint256& deterministic_nonce)\n+{\n+    CKey tweaked_scan_seckey{scan_key};\n+    tweaked_scan_seckey.TweakMultiply(deterministic_nonce.begin());\n+    CPubKey result = tweaked_scan_seckey.UnhashedECDH(sender_public_key);\n+    assert(result.IsValid());\n+    return result;\n+}\n+\n+CPubKey CreateOutput(const CKey& ecdh_scalar, const CPubKey& scan_pubkey, const CPubKey& spend_pubkey, const uint32_t output_index)\n+{\n+    CPubKey ecdh_pubkey = ecdh_scalar.UnhashedECDH(scan_pubkey);\n+    uint256 shared_secret = ComputeTweak(ecdh_pubkey, output_index);\n+    CPubKey silent_payment_output{spend_pubkey};\n+    silent_payment_output.TweakAdd(shared_secret.begin());\n+    return silent_payment_output;\n+}\n+\n+CPubKey SumInputPubKeys(const std::vector<CPubKey>& pubkeys)\n+{\n+    CPubKey sum_pubkey{pubkeys.at(0)};\n+    if (pubkeys.size() == 1) return sum_pubkey;\n+    for (size_t i = 1; i < pubkeys.size(); i++) {\n+        sum_pubkey = sum_pubkey + pubkeys.at(i);\n+    }\n+    return sum_pubkey;\n+}\n+\n+CKey SumInputPrivKeys(const std::vector<std::pair<CKey, bool>>& sender_secret_keys)\n+{\n+    // Grab the first key, copy it to the accumulator, and negate if necessary\n+    const auto& [seckey, is_taproot] = sender_secret_keys.at(0);\n+    CKey sum_seckey{seckey};\n+    if (is_taproot && sum_seckey.GetPubKey()[0] == 3) sum_seckey.Negate();\n+    if (sender_secret_keys.size() == 1) return sum_seckey;\n+\n+    // If there are more keys, check if the key needs to be negated and add it to the accumulator\n+    for (size_t i = 1; i < sender_secret_keys.size(); i++) {\n+        const auto& [sender_seckey, sender_is_taproot] = sender_secret_keys.at(i);\n+        CKey temp_key{sender_seckey};\n+        if (sender_is_taproot && sender_seckey.GetPubKey()[0] == 3) {\n+            temp_key.Negate();\n+        }\n+        sum_seckey.TweakAdd(UCharCast(temp_key.begin()));\n+    }\n+    return sum_seckey;\n+}\n+\n+CKey PrepareScalarECDHInput(const std::vector<std::pair<CKey, bool>>& sender_secret_keys, const std::vector<COutPoint>& tx_outpoints)\n+{\n+    CKey sum_input_secret_keys = SumInputPrivKeys(sender_secret_keys);\n+    CPubKey sum_input_pubkeys = sum_input_secret_keys.GetPubKey();\n+    uint256 input_hash = ComputeInputHash(tx_outpoints, sum_input_pubkeys);\n+    sum_input_secret_keys.TweakMultiply(input_hash.begin());\n+    return sum_input_secret_keys;\n+}\n+\n+std::map<size_t, WitnessV1Taproot> GenerateSilentPaymentTaprootDestinations(const CKey& ecdh_scalar, const std::map<size_t, V0SilentPaymentDestination>& sp_dests)\n+{\n+    std::map<CPubKey, std::vector<std::pair<CPubKey, size_t>>> sp_groups;\n+    std::map<size_t, WitnessV1Taproot> tr_dests;\n+\n+    for (const auto& [out_idx, sp_dest] : sp_dests) {\n+        sp_groups[sp_dest.m_scan_pubkey].emplace_back(sp_dest.m_spend_pubkey, out_idx);\n+    }\n+\n+    for (const auto& [scan_pubkey, spend_pubkeys] : sp_groups) {\n+        for (size_t i = 0; i < spend_pubkeys.size(); ++i) {\n+            const auto& [spend_pubkey, out_idx] = spend_pubkeys.at(i);\n+            tr_dests.emplace(out_idx, XOnlyPubKey{CreateOutput(ecdh_scalar, scan_pubkey, spend_pubkey, i)});\n+        }\n+    }\n+    return tr_dests;\n+}\n+\n+std::vector<uint256> GetTxOutputTweaks(const CPubKey& spend_pubkey, const CPubKey& ecdh_pubkey, std::vector<XOnlyPubKey> output_pub_keys, const std::map<CPubKey, uint256>& labels)\n+{\n+    // Because a sender can create multiple outputs for us, we first check the outputs vector for an output with\n+    // output index 0. If we find it, we remove it from the vector and then iterate over the vector again looking for\n+    // an output with index 1, and so on until one of the following happens:\n+    //\n+    //     1. We have determined all outputs belong to us (the vector is empty)\n+    //     2. We have passed over the vector and found no outputs belonging to us\n+    //\n+\n+    // Define a convenience lambda for correctly combining uint256 tweak data\n+    auto combine_tweaks = [](const uint256& tweak, const uint256& label_tweak) -> uint256 {\n+        uint256 combined_tweaks;\n+        CKey tmp;\n+        tmp.Set(tweak.begin(), tweak.end(), /*fCompressedIn=*/true);\n+        tmp.TweakAdd(label_tweak.begin());\n+        std::copy(UCharCast(tmp.begin()), UCharCast(tmp.end()), combined_tweaks.begin());\n+        return combined_tweaks;\n+    };\n+\n+    bool keep_going;\n+    uint32_t k{0};\n+    std::vector<uint256> tweaks;\n+    do {\n+        // We haven't found anything yet on this pass and if we make to the end without finding any\n+        // silent payment outputs everything left in the vector is not for us, so we stop scanning.\n+        keep_going = false;\n+\n+        // t_k = hash(ecdh_shared_secret || k)\n+        uint256 t_k = ComputeTweak(ecdh_pubkey, k);\n+\n+        // Compute P_k = B_spend + t_k * G, convert P_k to a P2TR output\n+        CPubKey P_k{spend_pubkey};\n+        P_k.TweakAdd(t_k.data());\n+        const XOnlyPubKey& P_k_xonly = XOnlyPubKey{P_k};\n+\n+        // Scan the transaction outputs, only continue scanning if there is a match\n+        output_pub_keys.erase(std::remove_if(output_pub_keys.begin(), output_pub_keys.end(), [&](XOnlyPubKey output_pubkey) {\n+            bool found = P_k_xonly == output_pubkey;\n+            if (!found) {\n+                if (labels.size() < 3) {\n+                    // If we have less than 3 labels, it's cheaper to check by adding each label to each output.\n+                    // This ends up being at most N * 2 ECC additions, where N is the number of taproot outputs in the transaction.\n+                    // This is primarily for wallets that are only using a single label for generating silent payments change outputs.\n+                    for (const auto& [m_G, m] : labels) {\n+                        // Check P_k + m*G\n+                        CPubKey labeled_spend_key{P_k + m_G};\n+                        if (output_pubkey.ConvertToCompressedPubKey(/*even=*/true) == labeled_spend_key) {\n+                            t_k = combine_tweaks(t_k, m);\n+                            found = true;\n+                            break;\n+                        }\n+                        // If we don't find a label with the even output, also check the odd (negated) output\n+                        // Note: changing the parity byte from even to odd is not as expensive as negating an EC point\n+                        if (output_pubkey.ConvertToCompressedPubKey(/*even=*/false) == labeled_spend_key) {\n+                            t_k = combine_tweaks(t_k, m);\n+                            found = true;\n+                            break;\n+                        }\n+                    }\n+                } else {\n+                    // If we have 3 or more labels, checking via subtraction is cheaper.\n+                    // This ends up being at most N * 2 ECC operations (two subtractions) and a lookup in the labels map,\n+                    // where N is the number of taproot outputs in the transaction\n+                    std::map<CPubKey, uint256>::const_iterator it = labels.end();\n+                    // For an XOnlyPubKey, converting it to an odd compressed key is equivalent to negation.\n+                    // We use P_k_negated for subtraction: output + ( - P_k ),\n+                    // so first we need to check the parity byte of the compute P_K public key\n+                    bool parity = (P_k.begin()[0] == 0x02) ? true : false;\n+                    CPubKey P_k_negated = P_k_xonly.ConvertToCompressedPubKey(/*even=*/!parity);\n+                    it = labels.find(output_pubkey.ConvertToCompressedPubKey(/*even=*/true) + P_k_negated);\n+                    if (it == labels.end()) {\n+                        // If not found on the first try, negate the output and check again.\n+                        it = labels.find(output_pubkey.ConvertToCompressedPubKey(/*even=*/false) + P_k_negated);\n+                    }\n+                    if (it != labels.end()) {\n+                        t_k = combine_tweaks(t_k, it->second);\n+                        found = true;\n+                    }\n+                }\n+            }\n+            if (found) {\n+                // Since we found an output, we need to increment k and check the vector again\n+                tweaks.emplace_back(t_k);\n+                keep_going = true;\n+                k++;\n+                // Return true so that this output pubkey is removed the from vector and not checked again\n+                return true;\n+            }\n+            return false;\n+        }), output_pub_keys.end());\n+    } while (!output_pub_keys.empty() && keep_going);\n+    return tweaks;\n+}\n+\n+std::optional<std::pair<uint256, CPubKey>> GetSilentPaymentTweakDataFromTxInputs(const std::vector<CTxIn>& vin, const std::map<COutPoint, Coin>& coins)\n+{\n+    // Extract the keys from the inputs\n+    // or skip if no valid inputs\n+    std::vector<CPubKey> input_pubkeys;\n+    std::vector<COutPoint> input_outpoints;\n+    for (const CTxIn& txin : vin) {\n+        const Coin& coin = coins.at(txin.prevout);\n+        Assert(!coin.IsSpent());\n+        input_outpoints.emplace_back(txin.prevout);\n+\n+        std::vector<std::vector<unsigned char>> solutions;\n+        TxoutType type = Solver(coin.out.scriptPubKey, solutions);\n+        if (type == TxoutType::WITNESS_V1_TAPROOT) {\n+            // Check for H point in script path spend\n+            if (txin.scriptWitness.stack.size() > 1) {\n+                // Check for annex\n+                bool has_annex = txin.scriptWitness.stack.back()[0] == ANNEX_TAG;\n+                size_t post_annex_size = txin.scriptWitness.stack.size() - (has_annex ? 1 : 0);\n+                if (post_annex_size > 1) {\n+                    // Actually a script path spend\n+                    const std::vector<unsigned char>& control = txin.scriptWitness.stack.at(post_annex_size - 1);\n+                    Assert(control.size() >= 33);\n+                    if (std::equal(NUMS_H.begin(), NUMS_H.end(), control.begin() + 1)) {\n+                        // Skip script path with H internal key\n+                        continue;\n+                    }\n+                }\n+            }\n+\n+            std::vector<unsigned char> pubkey;\n+            pubkey.resize(33);\n+            pubkey[0] = 0x02;\n+            std::copy(solutions[0].begin(), solutions[0].end(), pubkey.begin() + 1);\n+            input_pubkeys.emplace_back(pubkey);\n+        } else if (type == TxoutType::WITNESS_V0_KEYHASH) {\n+            input_pubkeys.emplace_back(txin.scriptWitness.stack.back());\n+        } else if (type == TxoutType::PUBKEYHASH || type == TxoutType::SCRIPTHASH) {\n+            // Use the script interpreter to get the stack after executing the scriptSig\n+            std::vector<std::vector<unsigned char>> stack;\n+            ScriptError serror;\n+            Assert(EvalScript(stack, txin.scriptSig, MANDATORY_SCRIPT_VERIFY_FLAGS, DUMMY_CHECKER, SigVersion::BASE, &serror));\n+            if (type == TxoutType::PUBKEYHASH) {\n+                input_pubkeys.emplace_back(stack.back());\n+            } else if (type == TxoutType::SCRIPTHASH) {\n+                // Check if the redeemScript is P2WPKH\n+                CScript redeem_script{stack.back().begin(), stack.back().end()};\n+                TxoutType rs_type = Solver(redeem_script, solutions);\n+                if (rs_type == TxoutType::WITNESS_V0_KEYHASH) {",
      "path": "src/wallet/silentpayments.cpp",
      "position": null,
      "original_position": 281,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "5e04b72b4c450e0f025fa0acf1bf68a74ed65210",
      "in_reply_to_id": 1464304643,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Understood. Thanks for clearing that up @josibake ",
      "created_at": "2024-01-25T06:20:15Z",
      "updated_at": "2024-01-25T06:20:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1465892947",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1465892947"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 281,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1472465541",
      "pull_request_review_id": 1853145226,
      "id": 1472465541,
      "node_id": "PRRC_kwDOABII585XxAqF",
      "diff_hunk": "@@ -0,0 +1,178 @@\n+#ifndef BITCOIN_WALLET_SILENTPAYMENTS_H\n+#define BITCOIN_WALLET_SILENTPAYMENTS_H\n+\n+#include <addresstype.h>\n+#include <coins.h>\n+#include <key_io.h>\n+#include <undo.h>\n+\n+namespace wallet {\n+\n+/**\n+ * @brief Compute the ECDH public key for the shared secret.\n+ *\n+ * @param seckey      The private key. This private key is either the receiver's scan key or the\n+ *                    sum of the sender's input private keys (excluding inputs not eligible for\n+ *                    shared secret derivation).\n+ * @param pubkey      The public key. This public key is either the receiver's scan public key or the\n+ *                    sum of the sender's input public keys (excluding inputs not eligible for\n+ *                    shared secret derivation).\n+ * @param inputs_hash The tagged hash of hash of the smallest outpoint and sum of the eligible\n+ *                    input public keys.\n+ * @return CPubKey    The ECDH public key. This ECDH result is unhashed and should not be used\n+ *                    outside of silent payments.\n+ */\n+CPubKey ComputeECDH(const CKey& seckey, const CPubKey& pubkey, const uint256& inputs_hash);\n+\n+/**\n+ * @brief Compute the tagged hash of the smallest outpoint and the sum of the eligible input public keys.\n+ *\n+ * The \"Inputs Hash\" is used as a nonce to prevent the same outputs being generated when a sender\n+ * is reusing the same inputs in multiple payments to the same recipient. The smallest outpoint\n+ * works as a deterministic nonce because an outpoint uniquely identifies a UTXO and thus is unique\n+ * for each transaction.\n+ *\n+ * @param tx_outpoints      The transaction outpoints.\n+ * @param sum_input_pubkeys The sum of the eligible input public keys.\n+ * @return uint256          The computed hash value.\n+ *\n+ * @see ComputeInputsHash(const std::vector<COutPoint>& tx_outpoints, const CPubKey& sum_input_pubkeys);\n+ */\n+uint256 ComputeInputsHash(const std::vector<COutPoint>& tx_outpoints, const CPubKey& sum_input_pubkeys);\n+\n+/**\n+ * @brief Compute the shared secret tweak.\n+ *\n+ * In a single transaction, a sender can create multiple outputs for the same recipient. To prevent\n+ * needing to do an ECDH for each output, the ECDH public key is calculated once for the transaction\n+ * and then hashed with the counter k. The outputs must be created sequentially starting with `k=0`.\n+ *\n+ * @param ecdh_pubkey The ECDH public key.\n+ * @param k The output counter.\n+ * @return uint256 The shared secret tweak for output_k.\n+ */\n+uint256 ComputeSharedSecretTweak(const CPubKey& ecdh_pubkey, const uint32_t k);\n+\n+/**\n+ * @brief Compute the silent payment label tweak.\n+ *\n+ * The receiving wallet may hand out labeled silent payment addresses to determine the origin of a payment.\n+ * Labels are specified by hashing the receivers scan key with a counter m. `m=0` is reserved for generating\n+ * change outputs for the receiver. Additional labels can be specified starting from `m=1`. The counter m\n+ * is hashed with the secret scan key to prevent an external observer from learning anything about the\n+ * receiver's labels.\n+ *\n+ * It is strongly recommended labels be created sequentially starting from `m=1`. Doing so ensures that\n+ * label data is not critical for backups, as the receiving wallet can pregenerate labels starting from 1\n+ * up to some sufficiently large M when recovering from a backup.\n+ *\n+ * @param scan_key The secret scan key.\n+ * @param m Integer representing the \"m-th\" label. m=0 is reserved for the change output.\n+ * @return uint256 The computed silent payment label tweak.\n+ */\n+uint256 ComputeSilentPaymentLabelTweak(const CKey& scan_key, const int m);\n+\n+/**\n+ * @brief Generate a silent payment labeled address.\n+ *\n+ * @param receiver The receiver's silent payment destination (i.e. scan and spend public keys).\n+ * @param label The label tweak\n+ * @return V0SilentPaymentDestination The slient payment destination, with `B_spend -> B_spend + label * G`.\n+ *\n+ * @see ComputeSilentPaymentLabelTweak(const CKey& scan_key, const int m);\n+ */\n+V0SilentPaymentDestination GenerateSilentPaymentLabeledAddress(const V0SilentPaymentDestination& receiver, const uint256& label);\n+\n+/**\n+ * @brief Generate silent payment taproot destinations.\n+ *\n+ * Given a set of silent payment destinations, generate the requested number of outputs. If a silent payment\n+ * destination is repeated, this indicates multiple outputs are requested for the same recipient. The silent payment\n+ * desintaions are passed in map where the key indicates their desired position in the final tx.vout array.",
      "path": "src/wallet/silentpayments.h",
      "position": 30,
      "original_position": 91,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "de7dd3aaf64bc9812ac4c30994ee6fbb5695e953",
      "in_reply_to_id": null,
      "user": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not sure protocol implementation needs to now about the position in tx.vout array. AFAIK, output calculation doesn't depend on the position. Have you considered passing destinations one by one together with the counter if a destination is repeated?",
      "created_at": "2024-01-31T08:30:49Z",
      "updated_at": "2024-01-31T08:36:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1472465541",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1472465541"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 30,
      "original_line": 30,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1472466841",
      "pull_request_review_id": 1853145226,
      "id": 1472466841,
      "node_id": "PRRC_kwDOABII585XxA-Z",
      "diff_hunk": "@@ -0,0 +1,178 @@\n+#ifndef BITCOIN_WALLET_SILENTPAYMENTS_H\n+#define BITCOIN_WALLET_SILENTPAYMENTS_H\n+\n+#include <addresstype.h>\n+#include <coins.h>\n+#include <key_io.h>\n+#include <undo.h>\n+\n+namespace wallet {\n+\n+/**\n+ * @brief Compute the ECDH public key for the shared secret.\n+ *\n+ * @param seckey      The private key. This private key is either the receiver's scan key or the\n+ *                    sum of the sender's input private keys (excluding inputs not eligible for\n+ *                    shared secret derivation).\n+ * @param pubkey      The public key. This public key is either the receiver's scan public key or the\n+ *                    sum of the sender's input public keys (excluding inputs not eligible for\n+ *                    shared secret derivation).\n+ * @param inputs_hash The tagged hash of hash of the smallest outpoint and sum of the eligible\n+ *                    input public keys.\n+ * @return CPubKey    The ECDH public key. This ECDH result is unhashed and should not be used\n+ *                    outside of silent payments.\n+ */\n+CPubKey ComputeECDH(const CKey& seckey, const CPubKey& pubkey, const uint256& inputs_hash);\n+\n+/**\n+ * @brief Compute the tagged hash of the smallest outpoint and the sum of the eligible input public keys.\n+ *\n+ * The \"Inputs Hash\" is used as a nonce to prevent the same outputs being generated when a sender\n+ * is reusing the same inputs in multiple payments to the same recipient. The smallest outpoint\n+ * works as a deterministic nonce because an outpoint uniquely identifies a UTXO and thus is unique\n+ * for each transaction.\n+ *\n+ * @param tx_outpoints      The transaction outpoints.\n+ * @param sum_input_pubkeys The sum of the eligible input public keys.\n+ * @return uint256          The computed hash value.\n+ *\n+ * @see ComputeInputsHash(const std::vector<COutPoint>& tx_outpoints, const CPubKey& sum_input_pubkeys);\n+ */\n+uint256 ComputeInputsHash(const std::vector<COutPoint>& tx_outpoints, const CPubKey& sum_input_pubkeys);\n+\n+/**\n+ * @brief Compute the shared secret tweak.\n+ *\n+ * In a single transaction, a sender can create multiple outputs for the same recipient. To prevent\n+ * needing to do an ECDH for each output, the ECDH public key is calculated once for the transaction\n+ * and then hashed with the counter k. The outputs must be created sequentially starting with `k=0`.\n+ *\n+ * @param ecdh_pubkey The ECDH public key.\n+ * @param k The output counter.\n+ * @return uint256 The shared secret tweak for output_k.\n+ */\n+uint256 ComputeSharedSecretTweak(const CPubKey& ecdh_pubkey, const uint32_t k);\n+\n+/**\n+ * @brief Compute the silent payment label tweak.\n+ *\n+ * The receiving wallet may hand out labeled silent payment addresses to determine the origin of a payment.\n+ * Labels are specified by hashing the receivers scan key with a counter m. `m=0` is reserved for generating\n+ * change outputs for the receiver. Additional labels can be specified starting from `m=1`. The counter m\n+ * is hashed with the secret scan key to prevent an external observer from learning anything about the\n+ * receiver's labels.\n+ *\n+ * It is strongly recommended labels be created sequentially starting from `m=1`. Doing so ensures that\n+ * label data is not critical for backups, as the receiving wallet can pregenerate labels starting from 1\n+ * up to some sufficiently large M when recovering from a backup.\n+ *\n+ * @param scan_key The secret scan key.\n+ * @param m Integer representing the \"m-th\" label. m=0 is reserved for the change output.\n+ * @return uint256 The computed silent payment label tweak.\n+ */\n+uint256 ComputeSilentPaymentLabelTweak(const CKey& scan_key, const int m);\n+\n+/**\n+ * @brief Generate a silent payment labeled address.\n+ *\n+ * @param receiver The receiver's silent payment destination (i.e. scan and spend public keys).\n+ * @param label The label tweak\n+ * @return V0SilentPaymentDestination The slient payment destination, with `B_spend -> B_spend + label * G`.\n+ *\n+ * @see ComputeSilentPaymentLabelTweak(const CKey& scan_key, const int m);\n+ */\n+V0SilentPaymentDestination GenerateSilentPaymentLabeledAddress(const V0SilentPaymentDestination& receiver, const uint256& label);\n+\n+/**\n+ * @brief Generate silent payment taproot destinations.\n+ *\n+ * Given a set of silent payment destinations, generate the requested number of outputs. If a silent payment\n+ * destination is repeated, this indicates multiple outputs are requested for the same recipient. The silent payment\n+ * desintaions are passed in map where the key indicates their desired position in the final tx.vout array.\n+ *\n+ * @param seckey      The private key. This private key is either the receiver's scan key or the\n+ *                    sum of the sender's input private keys (excluding inputs not eligible for\n+ *                    shared secret derivation).\n+ * @param inputs_hash The tagged hash of hash of the smallest outpoint and sum of the eligible\n+ *                    input public keys.\n+ * @param sp_dests    The silent payment destinations.\n+ * @return std::map<size_t, WitnessV1Taproot> The generated silent payment taproot destinations.\n+ *\n+ * @see ComputeInputsHash(const std::vector<COutPoint>& tx_outpoints, const CPubKey& sum_input_pubkeys);\n+ */\n+std::map<size_t, WitnessV1Taproot> GenerateSilentPaymentTaprootDestinations(const CKey& seckey, const uint256& inputs_hash, const std::map<size_t, V0SilentPaymentDestination>& sp_dests);\n+\n+/**\n+ * @brief Get silent payment tweak data from transaction inputs.\n+ *\n+ * Get the necessary data from the transaction inputs to be able to scan the transaction outputs for silent payment outputs.\n+ * This requires knowledge of the prevout scriptPubKey, which is passed via `coins`.\n+ *\n+ * If the transaction has silent payment eligible inputs, the public keys from these inputs are returned as a sum along with",
      "path": "src/wallet/silentpayments.h",
      "position": 49,
      "original_position": 111,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "de7dd3aaf64bc9812ac4c30994ee6fbb5695e953",
      "in_reply_to_id": null,
      "user": {
        "login": "S3RK",
        "id": 1466284,
        "node_id": "MDQ6VXNlcjE0NjYyODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/S3RK",
        "html_url": "https://github.com/S3RK",
        "followers_url": "https://api.github.com/users/S3RK/followers",
        "following_url": "https://api.github.com/users/S3RK/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/S3RK/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/S3RK/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
        "organizations_url": "https://api.github.com/users/S3RK/orgs",
        "repos_url": "https://api.github.com/users/S3RK/repos",
        "events_url": "https://api.github.com/users/S3RK/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/S3RK/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm too dumb to understand why do we need to return sum on input pubkeys together with the input hash. Does it have something to do with index and light clients?",
      "created_at": "2024-01-31T08:32:01Z",
      "updated_at": "2024-01-31T08:36:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1472466841",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1472466841"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 49,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1472650551",
      "pull_request_review_id": 1853449668,
      "id": 1472650551,
      "node_id": "PRRC_kwDOABII585Xxt03",
      "diff_hunk": "@@ -0,0 +1,178 @@\n+#ifndef BITCOIN_WALLET_SILENTPAYMENTS_H\n+#define BITCOIN_WALLET_SILENTPAYMENTS_H\n+\n+#include <addresstype.h>\n+#include <coins.h>\n+#include <key_io.h>\n+#include <undo.h>\n+\n+namespace wallet {\n+\n+/**\n+ * @brief Compute the ECDH public key for the shared secret.\n+ *\n+ * @param seckey      The private key. This private key is either the receiver's scan key or the\n+ *                    sum of the sender's input private keys (excluding inputs not eligible for\n+ *                    shared secret derivation).\n+ * @param pubkey      The public key. This public key is either the receiver's scan public key or the\n+ *                    sum of the sender's input public keys (excluding inputs not eligible for\n+ *                    shared secret derivation).\n+ * @param inputs_hash The tagged hash of hash of the smallest outpoint and sum of the eligible\n+ *                    input public keys.\n+ * @return CPubKey    The ECDH public key. This ECDH result is unhashed and should not be used\n+ *                    outside of silent payments.\n+ */\n+CPubKey ComputeECDH(const CKey& seckey, const CPubKey& pubkey, const uint256& inputs_hash);\n+\n+/**\n+ * @brief Compute the tagged hash of the smallest outpoint and the sum of the eligible input public keys.\n+ *\n+ * The \"Inputs Hash\" is used as a nonce to prevent the same outputs being generated when a sender\n+ * is reusing the same inputs in multiple payments to the same recipient. The smallest outpoint\n+ * works as a deterministic nonce because an outpoint uniquely identifies a UTXO and thus is unique\n+ * for each transaction.\n+ *\n+ * @param tx_outpoints      The transaction outpoints.\n+ * @param sum_input_pubkeys The sum of the eligible input public keys.\n+ * @return uint256          The computed hash value.\n+ *\n+ * @see ComputeInputsHash(const std::vector<COutPoint>& tx_outpoints, const CPubKey& sum_input_pubkeys);\n+ */\n+uint256 ComputeInputsHash(const std::vector<COutPoint>& tx_outpoints, const CPubKey& sum_input_pubkeys);\n+\n+/**\n+ * @brief Compute the shared secret tweak.\n+ *\n+ * In a single transaction, a sender can create multiple outputs for the same recipient. To prevent\n+ * needing to do an ECDH for each output, the ECDH public key is calculated once for the transaction\n+ * and then hashed with the counter k. The outputs must be created sequentially starting with `k=0`.\n+ *\n+ * @param ecdh_pubkey The ECDH public key.\n+ * @param k The output counter.\n+ * @return uint256 The shared secret tweak for output_k.\n+ */\n+uint256 ComputeSharedSecretTweak(const CPubKey& ecdh_pubkey, const uint32_t k);\n+\n+/**\n+ * @brief Compute the silent payment label tweak.\n+ *\n+ * The receiving wallet may hand out labeled silent payment addresses to determine the origin of a payment.\n+ * Labels are specified by hashing the receivers scan key with a counter m. `m=0` is reserved for generating\n+ * change outputs for the receiver. Additional labels can be specified starting from `m=1`. The counter m\n+ * is hashed with the secret scan key to prevent an external observer from learning anything about the\n+ * receiver's labels.\n+ *\n+ * It is strongly recommended labels be created sequentially starting from `m=1`. Doing so ensures that\n+ * label data is not critical for backups, as the receiving wallet can pregenerate labels starting from 1\n+ * up to some sufficiently large M when recovering from a backup.\n+ *\n+ * @param scan_key The secret scan key.\n+ * @param m Integer representing the \"m-th\" label. m=0 is reserved for the change output.\n+ * @return uint256 The computed silent payment label tweak.\n+ */\n+uint256 ComputeSilentPaymentLabelTweak(const CKey& scan_key, const int m);\n+\n+/**\n+ * @brief Generate a silent payment labeled address.\n+ *\n+ * @param receiver The receiver's silent payment destination (i.e. scan and spend public keys).\n+ * @param label The label tweak\n+ * @return V0SilentPaymentDestination The slient payment destination, with `B_spend -> B_spend + label * G`.\n+ *\n+ * @see ComputeSilentPaymentLabelTweak(const CKey& scan_key, const int m);\n+ */\n+V0SilentPaymentDestination GenerateSilentPaymentLabeledAddress(const V0SilentPaymentDestination& receiver, const uint256& label);\n+\n+/**\n+ * @brief Generate silent payment taproot destinations.\n+ *\n+ * Given a set of silent payment destinations, generate the requested number of outputs. If a silent payment\n+ * destination is repeated, this indicates multiple outputs are requested for the same recipient. The silent payment\n+ * desintaions are passed in map where the key indicates their desired position in the final tx.vout array.\n+ *\n+ * @param seckey      The private key. This private key is either the receiver's scan key or the\n+ *                    sum of the sender's input private keys (excluding inputs not eligible for\n+ *                    shared secret derivation).\n+ * @param inputs_hash The tagged hash of hash of the smallest outpoint and sum of the eligible\n+ *                    input public keys.\n+ * @param sp_dests    The silent payment destinations.\n+ * @return std::map<size_t, WitnessV1Taproot> The generated silent payment taproot destinations.\n+ *\n+ * @see ComputeInputsHash(const std::vector<COutPoint>& tx_outpoints, const CPubKey& sum_input_pubkeys);\n+ */\n+std::map<size_t, WitnessV1Taproot> GenerateSilentPaymentTaprootDestinations(const CKey& seckey, const uint256& inputs_hash, const std::map<size_t, V0SilentPaymentDestination>& sp_dests);\n+\n+/**\n+ * @brief Get silent payment tweak data from transaction inputs.\n+ *\n+ * Get the necessary data from the transaction inputs to be able to scan the transaction outputs for silent payment outputs.\n+ * This requires knowledge of the prevout scriptPubKey, which is passed via `coins`.\n+ *\n+ * If the transaction has silent payment eligible inputs, the public keys from these inputs are returned as a sum along with",
      "path": "src/wallet/silentpayments.h",
      "position": 49,
      "original_position": 111,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "de7dd3aaf64bc9812ac4c30994ee6fbb5695e953",
      "in_reply_to_id": 1472466841,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yep! There are two ways to use this data:\r\n\r\n1. Immediately, as `(b_scan * input_hash) * sum_input_pubkeys`. This is one scalar multiplication and one EC multiplication.\r\n2. Store it for later (either for wallet re-scans or to serve to light clients), as `input_hash * sum_input_pubkeys`. This is one EC multiplication and allows us to store all of the input data needed as 33 bytes.\r\n\r\nIf the function instead returned `input_hash * sum_input_pubkeys`, we would end up doing two EC multiplications for case 1 (i.e. `(input_hash * sum_input_pubkeys) * b_scan`)",
      "created_at": "2024-01-31T10:53:11Z",
      "updated_at": "2024-01-31T10:53:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1472650551",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1472650551"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 49,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1472778222",
      "pull_request_review_id": 1853655718,
      "id": 1472778222,
      "node_id": "PRRC_kwDOABII585XyM_u",
      "diff_hunk": "@@ -0,0 +1,178 @@\n+#ifndef BITCOIN_WALLET_SILENTPAYMENTS_H\n+#define BITCOIN_WALLET_SILENTPAYMENTS_H\n+\n+#include <addresstype.h>\n+#include <coins.h>\n+#include <key_io.h>\n+#include <undo.h>\n+\n+namespace wallet {\n+\n+/**\n+ * @brief Compute the ECDH public key for the shared secret.\n+ *\n+ * @param seckey      The private key. This private key is either the receiver's scan key or the\n+ *                    sum of the sender's input private keys (excluding inputs not eligible for\n+ *                    shared secret derivation).\n+ * @param pubkey      The public key. This public key is either the receiver's scan public key or the\n+ *                    sum of the sender's input public keys (excluding inputs not eligible for\n+ *                    shared secret derivation).\n+ * @param inputs_hash The tagged hash of hash of the smallest outpoint and sum of the eligible\n+ *                    input public keys.\n+ * @return CPubKey    The ECDH public key. This ECDH result is unhashed and should not be used\n+ *                    outside of silent payments.\n+ */\n+CPubKey ComputeECDH(const CKey& seckey, const CPubKey& pubkey, const uint256& inputs_hash);\n+\n+/**\n+ * @brief Compute the tagged hash of the smallest outpoint and the sum of the eligible input public keys.\n+ *\n+ * The \"Inputs Hash\" is used as a nonce to prevent the same outputs being generated when a sender\n+ * is reusing the same inputs in multiple payments to the same recipient. The smallest outpoint\n+ * works as a deterministic nonce because an outpoint uniquely identifies a UTXO and thus is unique\n+ * for each transaction.\n+ *\n+ * @param tx_outpoints      The transaction outpoints.\n+ * @param sum_input_pubkeys The sum of the eligible input public keys.\n+ * @return uint256          The computed hash value.\n+ *\n+ * @see ComputeInputsHash(const std::vector<COutPoint>& tx_outpoints, const CPubKey& sum_input_pubkeys);\n+ */\n+uint256 ComputeInputsHash(const std::vector<COutPoint>& tx_outpoints, const CPubKey& sum_input_pubkeys);\n+\n+/**\n+ * @brief Compute the shared secret tweak.\n+ *\n+ * In a single transaction, a sender can create multiple outputs for the same recipient. To prevent\n+ * needing to do an ECDH for each output, the ECDH public key is calculated once for the transaction\n+ * and then hashed with the counter k. The outputs must be created sequentially starting with `k=0`.\n+ *\n+ * @param ecdh_pubkey The ECDH public key.\n+ * @param k The output counter.\n+ * @return uint256 The shared secret tweak for output_k.\n+ */\n+uint256 ComputeSharedSecretTweak(const CPubKey& ecdh_pubkey, const uint32_t k);\n+\n+/**\n+ * @brief Compute the silent payment label tweak.\n+ *\n+ * The receiving wallet may hand out labeled silent payment addresses to determine the origin of a payment.\n+ * Labels are specified by hashing the receivers scan key with a counter m. `m=0` is reserved for generating\n+ * change outputs for the receiver. Additional labels can be specified starting from `m=1`. The counter m\n+ * is hashed with the secret scan key to prevent an external observer from learning anything about the\n+ * receiver's labels.\n+ *\n+ * It is strongly recommended labels be created sequentially starting from `m=1`. Doing so ensures that\n+ * label data is not critical for backups, as the receiving wallet can pregenerate labels starting from 1\n+ * up to some sufficiently large M when recovering from a backup.\n+ *\n+ * @param scan_key The secret scan key.\n+ * @param m Integer representing the \"m-th\" label. m=0 is reserved for the change output.\n+ * @return uint256 The computed silent payment label tweak.\n+ */\n+uint256 ComputeSilentPaymentLabelTweak(const CKey& scan_key, const int m);\n+\n+/**\n+ * @brief Generate a silent payment labeled address.\n+ *\n+ * @param receiver The receiver's silent payment destination (i.e. scan and spend public keys).\n+ * @param label The label tweak\n+ * @return V0SilentPaymentDestination The slient payment destination, with `B_spend -> B_spend + label * G`.\n+ *\n+ * @see ComputeSilentPaymentLabelTweak(const CKey& scan_key, const int m);\n+ */\n+V0SilentPaymentDestination GenerateSilentPaymentLabeledAddress(const V0SilentPaymentDestination& receiver, const uint256& label);\n+\n+/**\n+ * @brief Generate silent payment taproot destinations.\n+ *\n+ * Given a set of silent payment destinations, generate the requested number of outputs. If a silent payment\n+ * destination is repeated, this indicates multiple outputs are requested for the same recipient. The silent payment\n+ * desintaions are passed in map where the key indicates their desired position in the final tx.vout array.",
      "path": "src/wallet/silentpayments.h",
      "position": 30,
      "original_position": 91,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "de7dd3aaf64bc9812ac4c30994ee6fbb5695e953",
      "in_reply_to_id": 1472465541,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Output calculation doesn't depend on the position, but using output position makes the implementation much simpler. I did try something similar to what you suggested but it ended up being really complicated to make sure I was matching up all the right amounts and was always _implicitly_ relying on output position. @achow101 pointed out it would be better and simpler to just use the output index explicitly.\r\n\r\nThis also doesn't create any dependence on output position. The user can still order the outputs however they want after generating the silent payment scriptPubKeys.",
      "created_at": "2024-01-31T12:50:17Z",
      "updated_at": "2024-01-31T12:50:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1472778222",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1472778222"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 30,
      "original_line": 30,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1495502646",
      "pull_request_review_id": 1889921832,
      "id": 1495502646,
      "node_id": "PRRC_kwDOABII585ZI482",
      "diff_hunk": "@@ -0,0 +1,93 @@\n+#ifndef BITCOIN_WALLET_SILENTPAYMENTS_H\n+#define BITCOIN_WALLET_SILENTPAYMENTS_H\n+\n+#include <addresstype.h>\n+#include <bip352.h>\n+#include <coins.h>\n+#include <key_io.h>\n+#include <undo.h>\n+\n+namespace wallet {\n+\n+using PubKey = std::variant<CPubKey, XOnlyPubKey>;\n+\n+/**\n+ * @brief Generate a silent payment labeled address.\n+ *\n+ * @param receiver The receiver's silent payment destination (i.e. scan and spend public keys).\n+ * @param label The label tweak\n+ * @return V0SilentPaymentDestination The silent payment destination, with `B_spend -> B_spend + label * G`.\n+ *\n+ * @see ComputeSilentPaymentLabelTweak(const CKey& scan_key, const int m);\n+ */\n+V0SilentPaymentDestination GenerateSilentPaymentLabeledAddress(const V0SilentPaymentDestination& receiver, const uint256& label);\n+\n+/**\n+ * @brief Generate silent payment taproot destinations.\n+ *\n+ * Given a set of silent payment destinations, generate the requested number of outputs. If a silent payment\n+ * destination is repeated, this indicates multiple outputs are requested for the same recipient. The silent payment\n+ * desintaions are passed in map where the key indicates their desired position in the final tx.vout array.\n+ *\n+ * @param priv_tweak_data                     The private tweak data. This is a pair containing a private key and input hash.\n+ *                                            The private key is either the receiver's scan key or the sum of the sender's\n+ *                                            input private keys (excluding inputs not eligible for shared secret derivation).\n+ *                                            The input hash is the tagged hash of hash of the smallest outpoint and sum\n+ *                                            of the eligible input public keys.\n+ * @param sp_dests                            The silent payment destinations.\n+ * @return std::map<size_t, WitnessV1Taproot> The generated silent payment taproot destinations.\n+ *\n+ */\n+std::map<size_t, WitnessV1Taproot> GenerateSilentPaymentTaprootDestinations(const BIP352::PrivTweakData& priv_tweak_data, const std::map<size_t, V0SilentPaymentDestination>& sp_dests);\n+\n+/**\n+ * @brief Get silent payment tweak data from transaction inputs.\n+ *\n+ * Get the necessary data from the transaction inputs to be able to scan the transaction outputs for silent payment outputs.\n+ * This requires knowledge of the prevout scriptPubKey, which is passed via `coins`.\n+ *\n+ * If the transaction has silent payment eligible inputs, the public keys from these inputs are returned as a sum along with\n+ * the transaction input hash. If there are no eligible inputs, nullopt is returned, indicating that this transaction does not\n+ * contain silent payment outputs.\n+ *\n+ * @param vin                                              The transaction inputs.\n+ * @param coins                                            The coins (potentially) spent in this transaction.\n+ * @return std::optional<std::pair<uint256, PubTweakData>> The silent payment tweak data, or nullopt if not found.\n+ */\n+std::optional<BIP352::PubTweakData> GetSilentPaymentTweakDataFromTxInputs(const std::vector<CTxIn>& vin, const std::map<COutPoint, Coin>& coins);",
      "path": "src/wallet/silentpayments.h",
      "position": 57,
      "original_position": 57,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "b885ac0ddd49de760c21457801e403736908e1b2",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Assuming I still need this for the index #28241, I still prefer if this wasn't part of the wallet. Afaik nothing in this file has a dependency on the wallet, so the easiest change would to be move the file to `src/common`.",
      "created_at": "2024-02-20T09:30:44Z",
      "updated_at": "2024-02-20T09:30:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1495502646",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1495502646"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 57,
      "original_line": 57,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1495568944",
      "pull_request_review_id": 1890048273,
      "id": 1495568944,
      "node_id": "PRRC_kwDOABII585ZJJIw",
      "diff_hunk": "@@ -0,0 +1,93 @@\n+#ifndef BITCOIN_WALLET_SILENTPAYMENTS_H\n+#define BITCOIN_WALLET_SILENTPAYMENTS_H\n+\n+#include <addresstype.h>\n+#include <bip352.h>\n+#include <coins.h>\n+#include <key_io.h>\n+#include <undo.h>\n+\n+namespace wallet {\n+\n+using PubKey = std::variant<CPubKey, XOnlyPubKey>;\n+\n+/**\n+ * @brief Generate a silent payment labeled address.\n+ *\n+ * @param receiver The receiver's silent payment destination (i.e. scan and spend public keys).\n+ * @param label The label tweak\n+ * @return V0SilentPaymentDestination The silent payment destination, with `B_spend -> B_spend + label * G`.\n+ *\n+ * @see ComputeSilentPaymentLabelTweak(const CKey& scan_key, const int m);\n+ */\n+V0SilentPaymentDestination GenerateSilentPaymentLabeledAddress(const V0SilentPaymentDestination& receiver, const uint256& label);\n+\n+/**\n+ * @brief Generate silent payment taproot destinations.\n+ *\n+ * Given a set of silent payment destinations, generate the requested number of outputs. If a silent payment\n+ * destination is repeated, this indicates multiple outputs are requested for the same recipient. The silent payment\n+ * desintaions are passed in map where the key indicates their desired position in the final tx.vout array.\n+ *\n+ * @param priv_tweak_data                     The private tweak data. This is a pair containing a private key and input hash.\n+ *                                            The private key is either the receiver's scan key or the sum of the sender's\n+ *                                            input private keys (excluding inputs not eligible for shared secret derivation).\n+ *                                            The input hash is the tagged hash of hash of the smallest outpoint and sum\n+ *                                            of the eligible input public keys.\n+ * @param sp_dests                            The silent payment destinations.\n+ * @return std::map<size_t, WitnessV1Taproot> The generated silent payment taproot destinations.\n+ *\n+ */\n+std::map<size_t, WitnessV1Taproot> GenerateSilentPaymentTaprootDestinations(const BIP352::PrivTweakData& priv_tweak_data, const std::map<size_t, V0SilentPaymentDestination>& sp_dests);\n+\n+/**\n+ * @brief Get silent payment tweak data from transaction inputs.\n+ *\n+ * Get the necessary data from the transaction inputs to be able to scan the transaction outputs for silent payment outputs.\n+ * This requires knowledge of the prevout scriptPubKey, which is passed via `coins`.\n+ *\n+ * If the transaction has silent payment eligible inputs, the public keys from these inputs are returned as a sum along with\n+ * the transaction input hash. If there are no eligible inputs, nullopt is returned, indicating that this transaction does not\n+ * contain silent payment outputs.\n+ *\n+ * @param vin                                              The transaction inputs.\n+ * @param coins                                            The coins (potentially) spent in this transaction.\n+ * @return std::optional<std::pair<uint256, PubTweakData>> The silent payment tweak data, or nullopt if not found.\n+ */\n+std::optional<BIP352::PubTweakData> GetSilentPaymentTweakDataFromTxInputs(const std::vector<CTxIn>& vin, const std::map<COutPoint, Coin>& coins);",
      "path": "src/wallet/silentpayments.h",
      "position": 57,
      "original_position": 57,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "b885ac0ddd49de760c21457801e403736908e1b2",
      "in_reply_to_id": 1495502646,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Now that we have `src/bip352.h`, it might make more sense to get rid of `src/wallet/silentpayents.h` and put everything in `src/bip352.h`. In the future, anything that is wallet specific can go in `src/wallet/silentpayments.h` and you'd have everything you need for an index in `src/bip352.h`. Thoughts?",
      "created_at": "2024-02-20T10:17:34Z",
      "updated_at": "2024-02-20T12:57:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1495568944",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1495568944"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 57,
      "original_line": 57,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1495894984",
      "pull_request_review_id": 1890543169,
      "id": 1495894984,
      "node_id": "PRRC_kwDOABII585ZKYvI",
      "diff_hunk": "@@ -0,0 +1,93 @@\n+#ifndef BITCOIN_WALLET_SILENTPAYMENTS_H\n+#define BITCOIN_WALLET_SILENTPAYMENTS_H\n+\n+#include <addresstype.h>\n+#include <bip352.h>\n+#include <coins.h>\n+#include <key_io.h>\n+#include <undo.h>\n+\n+namespace wallet {\n+\n+using PubKey = std::variant<CPubKey, XOnlyPubKey>;\n+\n+/**\n+ * @brief Generate a silent payment labeled address.\n+ *\n+ * @param receiver The receiver's silent payment destination (i.e. scan and spend public keys).\n+ * @param label The label tweak\n+ * @return V0SilentPaymentDestination The silent payment destination, with `B_spend -> B_spend + label * G`.\n+ *\n+ * @see ComputeSilentPaymentLabelTweak(const CKey& scan_key, const int m);\n+ */\n+V0SilentPaymentDestination GenerateSilentPaymentLabeledAddress(const V0SilentPaymentDestination& receiver, const uint256& label);\n+\n+/**\n+ * @brief Generate silent payment taproot destinations.\n+ *\n+ * Given a set of silent payment destinations, generate the requested number of outputs. If a silent payment\n+ * destination is repeated, this indicates multiple outputs are requested for the same recipient. The silent payment\n+ * desintaions are passed in map where the key indicates their desired position in the final tx.vout array.\n+ *\n+ * @param priv_tweak_data                     The private tweak data. This is a pair containing a private key and input hash.\n+ *                                            The private key is either the receiver's scan key or the sum of the sender's\n+ *                                            input private keys (excluding inputs not eligible for shared secret derivation).\n+ *                                            The input hash is the tagged hash of hash of the smallest outpoint and sum\n+ *                                            of the eligible input public keys.\n+ * @param sp_dests                            The silent payment destinations.\n+ * @return std::map<size_t, WitnessV1Taproot> The generated silent payment taproot destinations.\n+ *\n+ */\n+std::map<size_t, WitnessV1Taproot> GenerateSilentPaymentTaprootDestinations(const BIP352::PrivTweakData& priv_tweak_data, const std::map<size_t, V0SilentPaymentDestination>& sp_dests);\n+\n+/**\n+ * @brief Get silent payment tweak data from transaction inputs.\n+ *\n+ * Get the necessary data from the transaction inputs to be able to scan the transaction outputs for silent payment outputs.\n+ * This requires knowledge of the prevout scriptPubKey, which is passed via `coins`.\n+ *\n+ * If the transaction has silent payment eligible inputs, the public keys from these inputs are returned as a sum along with\n+ * the transaction input hash. If there are no eligible inputs, nullopt is returned, indicating that this transaction does not\n+ * contain silent payment outputs.\n+ *\n+ * @param vin                                              The transaction inputs.\n+ * @param coins                                            The coins (potentially) spent in this transaction.\n+ * @return std::optional<std::pair<uint256, PubTweakData>> The silent payment tweak data, or nullopt if not found.\n+ */\n+std::optional<BIP352::PubTweakData> GetSilentPaymentTweakDataFromTxInputs(const std::vector<CTxIn>& vin, const std::map<COutPoint, Coin>& coins);",
      "path": "src/wallet/silentpayments.h",
      "position": 57,
      "original_position": 57,
      "commit_id": "8c1328f40b80e5fd4b34ab35005704f76b05fdfa",
      "original_commit_id": "b885ac0ddd49de760c21457801e403736908e1b2",
      "in_reply_to_id": 1495502646,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Moving to `bip352.h` sounds good too.",
      "created_at": "2024-02-20T14:15:53Z",
      "updated_at": "2024-02-20T14:15:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28122#discussion_r1495894984",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1495894984"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 57,
      "original_line": 57,
      "side": "RIGHT"
    }
  ]
}